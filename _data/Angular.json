{"Data":{"Angular-Issues":{"Issues":[{"Id":"2688847988","IsPullRequest":false,"CreatedAt":"2024-11-25T02:53:14","Actor":"hillin","Number":"58863","RawContent":null,"Title":"[Feature Request] Subject Signal","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nI find myself constantly running into the situation that for a given reactive value, I need to use it both in rx and signal contexts. \n\nFor instance let's say there is an `selectedItem` value, representing an entity selected by the user. We would like to store it in a `WritableSignal` so something could be derived out of it with `computed`; we also want to use it to retrieve some related data from the backend, thus it would also be great to be an observable (to be `switchMap`-ed).\n\nIn the meantime we just make the value a signal and spam `toObservable`s whenever we need it in rx. There are so many of them that I really considered it as pattern that should be addressed with better ergonomics.\n\n### Proposed solution\n\nWe came up with a solution like this:\n```typescript\nimport { Signal } from \"@angular/core\";\nimport { toSignal } from \"@angular/core/rxjs-interop\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n/** A signal backed by a subject. */\nexport interface SubjectSignal<T> extends Signal<T> {\n  observable: Observable<T>;\n  update(updateFn: (value: T) => T): void;\n  set(value: T): void;\n}\n\n/** Make a signal that is backed by a subject. */\nexport function subjectSignal<T>(initialValue: T): SubjectSignal<T> {\n  const subject = new BehaviorSubject<T>(initialValue);\n  const signal = toSignal(subject) as SubjectSignal<T>;\n\n  signal.observable = subject.asObservable();\n  signal.update = (updateFn: (value: T) => T) => {\n    subject.next(updateFn(subject.value));\n  };\n  signal.set = (value: T) => {\n    subject.next(value);\n  };\n\n  Object.freeze(signal);\n\n  return signal;\n}\n```\n\nSo it's basically a wrapper to `toSignal`, but an observable could be retrieved out from it.\n\n### Alternatives considered\n\nIdeally we could have `SubjectSignal<T>` to be used both as a signal and as an observable:\n```typescript\ninterface SubjectSignal<T> extends Observable<T>, Signal<T>;\n```\nbut I'm not sure if it's possible, because `Signal<T>` has a callable signature and `Observable<T>` is a class. Anyways we would like to see a more elegant solution.","Url":"https://github.com/angular/angular/issues/58863","RelatedDescription":"Open issue \"[Feature Request] Subject Signal\" (#58863)"},{"Id":"2688756835","IsPullRequest":false,"CreatedAt":"2024-11-25T01:23:53","Actor":"AtofStryker","Number":"58862","RawContent":null,"Title":"`getTestBed().configureTestingModule` doesn't seem to respect `import`s added in Angular v19. Works in Angular v18","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore/testing\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIt doesn't look like adding imports in `getTestBed().configureTestingModule` works as expected within `angular/core/testing`. When trying to add `CommonModule` as an import within the `cypress/angular` mount function, it doesn't look like the import is actually added into the test bed and the components with `CommonModule` directives are failing because the module is not registered.\n\n I noticed there were some changes in the [changelog](https://github.com/angular/angular/blob/main/CHANGELOG.md#1900-2024-11-19) but I didn't see anything that I would expect to break her\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/AtofStryker/angular-19-cypress\n\n### Please provide the exception or error you saw\n\nTo reproduce, clone the project and install dependencies with `npm install` with node 20.x\n\nrun `npx cypress open` and go to `component testing` -> `electron (or chrome)` -> `mount.cy.ts`\n\nThe test fails. The component doesn't mount correctly because it is using the `ngIf` directive, which should be registered when we run `getTestBed().configureTestingModule` when Cypress adds the import [here](https://github.com/AtofStryker/angular-19-cypress/blob/main/cypress/support/mount.ts#L180), but the console has the error that the `CommonModule` is not registered.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 20.18.0\npackage manager: npm 10.8.2\n```\n\n### Anything else?\n\nI'm working on adding Angular 19 CT support within Cypress in https://github.com/cypress-io/cypress/issues/30175. I'm not an Angular export so hopefully I am just missing something 😅 .","Url":"https://github.com/angular/angular/issues/58862","RelatedDescription":"Open issue \"`getTestBed().configureTestingModule` doesn't seem to respect `import`s added in Angular v19. Works in Angular v18\" (#58862)"},{"Id":"2688647934","IsPullRequest":false,"CreatedAt":"2024-11-24T22:54:29","Actor":"wfvs","Number":"58861","RawContent":null,"Title":"Migration to lazy-loaded routes not working if Routes are exported as default","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nthis is a new migration schematic\n\n### Description\n\nusing the new migration schematic\nng generate @angular/core:route-lazy-loading\nresults in 'Could not find any files to migrate under the path ...'\nThe Routes are exported as default, which causes the schematic to fail finding them. \n\n\n\n### Minimal Reproduction\n\ntrying to migrate the following route.ts file:\n\n```\nexport default [\n    {\n        path: '',\n        component: SomeComponent,\n        children: [\n          { path: 'index', component: IndexComponent },\n          { path: 'index/:name', component: IndexDetailComponent, resolve: { index: indexDetailResolver } }\n        ]\n      }\n] as Routes; \n```\nusing:\n``\nng generate @angular/core:route-lazy-loading --path src/app/something\n``\n\nfails, because the migration schematic does not recognize the Routes, which are exported as default.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n\"@angular/cli\": \"^19.0.1\"\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58861","RelatedDescription":"Open issue \"Migration to lazy-loaded routes not working if Routes are exported as default\" (#58861)"},{"Id":"2688510301","IsPullRequest":true,"CreatedAt":"2024-11-24T22:35:01","Actor":"JeanMeche","Number":"58860","RawContent":null,"Title":"refactor(common): deprecate `ngStyle` and `ngClass`","State":"open","Body":"The overhead of those directives doesn't outweighs the few additions cases it supports compared to compiler provided `class` and `style` bindings.\r\n\r\nDEPRECATE: Both `ngStyle` and `ngClass` directives are deprecated, use the their direct bindings instead.\r\n","Url":"https://github.com/angular/angular/pull/58860","RelatedDescription":"Open PR \"refactor(common): deprecate `ngStyle` and `ngClass`\" (#58860)"},{"Id":"2688481612","IsPullRequest":true,"CreatedAt":"2024-11-24T22:14:10","Actor":"JeanMeche","Number":"58859","RawContent":null,"Title":"docs: add standalone example for `ErrorHandler`","State":"open","Body":"fixes #55579","Url":"https://github.com/angular/angular/pull/58859","RelatedDescription":"Open PR \"docs: add standalone example for `ErrorHandler`\" (#58859)"},{"Id":"2688376570","IsPullRequest":true,"CreatedAt":"2024-11-24T21:17:49","Actor":"consman","Number":"58858","RawContent":null,"Title":"Update versions.md as  RxJS ^6.5.3 || ^7.4. is not correct for v19.","State":"closed","Body":"<HEADER>\r\nI started a brand new v19 project from scratch, using \"ng new\" and it gave me  \"rxjs\": \"~7.8.0\" in my generated package.json.  I think v18 has the same issue. Thank you for helping with this.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58858","RelatedDescription":"Closed or merged PR \"Update versions.md as  RxJS ^6.5.3 || ^7.4. is not correct for v19.\" (#58858)"},{"Id":"2688307104","IsPullRequest":false,"CreatedAt":"2024-11-24T20:31:05","Actor":"SamuelMarks","Number":"58857","RawContent":null,"Title":"`responseType` in `HttpClient` can only be JSON [docs say otherwise]","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nhttps://angular.dev/guide/http/making-requests#fetching-other-types-of-data\n\nBut then looking at the `index.d.ts`:\n```ts\nget<T>(url: string, options: {\n        headers?: HttpHeaders | {\n            [header: string]: string | string[];\n        };\n        observe: 'response';\n        context?: HttpContext;\n        params?: HttpParams | {\n            [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;\n        };\n        reportProgress?: boolean;\n        responseType?: 'json';\n        withCredentials?: boolean;\n        transferCache?: {\n            includeHeaders?: string[];\n        } | boolean;\n    }): Observable<HttpResponse<T>>;\n```\n\nSo clearly `responseType` should be `'json' | 'text' | 'arraybuffer' | 'blob'` OR the docs should be changed.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.1\nNode: 23.3.0 (Unsupported)\nPackage Manager: npm 10.9.1\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... material, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1 (cli-only)\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nPossibly related #18586","Url":"https://github.com/angular/angular/issues/58857","RelatedDescription":"Closed issue \"`responseType` in `HttpClient` can only be JSON [docs say otherwise]\" (#58857)"},{"Id":"2688297236","IsPullRequest":false,"CreatedAt":"2024-11-24T20:12:34","Actor":"EmbiiFox","Number":"58856","RawContent":null,"Title":"@if Syntax Not Rendering Content in Angular 18","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe @if syntax introduced in Angular 18 is not rendering the content as expected. Although the conditions are valid, the HTML elements within the @if block do not render in the UI. However, when I remove the @if block, the UI elements appear as expected. Could you please give me advice to fix this issue? Thanks.\n\n**To Reproduce**\nCreate an Angular 18 component with the following template:\n\n```\n@if (cvDetail && cvDetail.id) {\n  <div class=\"right-content\">\n    <div>\n      <div id=\"toc-target\">\n        <div #htmlToc class=\"toc-content\"></div>\n      </div>\n      <div id=\"toc-target-no-water-mark\" #htmlTocNoWaterMark>\n      </div>\n    </div>\n  </div>\n}\n```\n```\nexport class ExampleComponent implements OnInit, OnChanges {\n  @Input() cvDetail: any; \n\n  @ViewChild('htmlToc') htmlToc: ElementRef | undefined;\n  @ViewChild('htmlTocNoWaterMark') htmlTocNoWaterMark: ElementRef | undefined;\n  constructor() { }\n  ngOnInit(): void {\n  }\n  ngOnChanges() {\n    if (this.cvDetail) {\n        if (this.htmlTocNoWaterMark) {\n          if (this.htmlToc) {\n            this.htmlToc.nativeElement.innerHTML = '';\n          }\n          this.htmlTocNoWaterMark.nativeElement.innerHTML = this.cvDetail.body ? this.cvDetail.body : '';\n        }\n    }\n  }\n}\n```\nExpected behavior\nvalue of this.cvDetail.body, example is '<p><span style=\"text-decoration: underline;\"><strong><span style=\"color: rgb(224, 62, 45); text-decoration: underline;\">summary sample (Red font, bold, underlined)</span></strong></span></p>' will be rendered in the UI\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nwhen HTML have @if, this.htmlTocNoWaterMark is undefined\nwhen I remove @if, this.htmlTocNoWaterMark have values\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.12\nNode: 20.15.0\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 18.2.12\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cdk                    18.2.13\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58856","RelatedDescription":"Closed issue \"@if Syntax Not Rendering Content in Angular 18\" (#58856)"},{"Id":"2688224421","IsPullRequest":true,"CreatedAt":"2024-11-24T19:19:16","Actor":"JeanMeche","Number":"58855","RawContent":null,"Title":"fix(core): Ensure resource sets an error","State":"open","Body":"Before this commit, a resource with a previous value wouldn't set the error state correctly.\r\nThis commit fixes this. A resource will set its status to error even when there was a previous valid value. \r\n","Url":"https://github.com/angular/angular/pull/58855","RelatedDescription":"Open PR \"fix(core): Ensure resource sets an error\" (#58855)"},{"Id":"2687930781","IsPullRequest":false,"CreatedAt":"2024-11-24T15:35:37","Actor":"markostanimirovic","Number":"58854","RawContent":null,"Title":"Allow `rxResource`'s `request` fn to handle Observable triggers","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, `rxResource`'s `request` function doesn't support returning an Observable that can trigger the loader function when new values are emitted.\n\nWorkaround:\n\n```ts\nconst dataService = inject(DataService);\nconst click$ = new Subject<MouseEvent>();\nconst click = toSignal(click$, { initialValue: null });\nconst data = rxResource({\n  request: click,\n  loader: ({ request }) =>\n    request ? dataService.getData() : of(null),\n});\n```\n\n\n### Proposed solution\n\nAllow `request` to return an Observable, where each emission triggers the loader function:\n\n```ts\nconst dataService = inject(DataService);\nconst click$ = new Subject<MouseEvent>();\nconst data = rxResource({\n  request: () => click$,\n  loader: () => dataService.getData(),\n});\n```\n\n**Benefits:**\n\n- More reactive control over loader triggers\n- Better integration with event-based workflows\n- Reduced boilerplate when working with Observables\n\n\n### Alternatives considered\n\n_","Url":"https://github.com/angular/angular/issues/58854","RelatedDescription":"Open issue \"Allow `rxResource`'s `request` fn to handle Observable triggers\" (#58854)"},{"Id":"2687632493","IsPullRequest":false,"CreatedAt":"2024-11-24T11:37:07","Actor":"DarioSpinosa","Number":"58853","RawContent":null,"Title":"Add hostDirectives Property to ComponentMirror object returned by reflectComponentType","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, the returned `ComponentMirror` object from the **reflectComponentType** function includes information about inputs, outputs, and other metadata of the component. However, it does not provide access to **host directives** and their respective inputs/outputs.\n\n#### **Use Case**\n\nIn my specific scenario, I have the following structure:\n\n- A base class `A`\n- Multiple child classes `B`, `C`, `D`, etc., each with **different host directives**, including their own **inputs** and **outputs**.\n- A service where i use reflectComponentType, passing all my child classes that are registered using an injection Token\n\nWhen `reflectComponentType` is invoked on classes `B`, `C`, or `D`, the resulting `ComponentMirror` correctly includes the inputs and outputs of the specific child class. However, I also need access to the **host directives** metadata to retrieve their inputs and outputs. This is crucial for constructing a comprehensive API for the inputs and outputs of the child classes, including those inherited from their host directives.\n\n### Proposed solution\n\nAdd a new `hostDirectives` property to the `ComponentMirror` object returned by `reflectComponentType`. This property should include\na list of the host directives applied to the component including their inputs and outputs\n\n### Alternatives considered\n\nKeep accessing host directives like in my code snippet below\n\n```typescript\nconst componentDef = (componentType as any)['ɵcmp'];\nconst hostDirectives = componentDef.hostDirectives as {\n  directive: Type<unknown>;\n  inputs: Record<string, string>;\n  outputs: Record<string, string>;\n}[];\n\nhostDirectives?.forEach(hostDirective => {\n  const target = hostDirective.directive.prototype;\n  const directiveInputs = hostDirective.inputs;\n  const directiveOutputs = hostDirective.outputs;\n\n  inputs.push(\n    ...Object.keys(directiveInputs).map(input => ({\n      name: directiveInputs[input],\n      target\n    }))\n  );\n\n  outputs.push(\n    ...Object.keys(directiveOutputs).map(output => ({\n      name: directiveOutputs[output],\n      target\n    }))\n  );\n});\n","Url":"https://github.com/angular/angular/issues/58853","RelatedDescription":"Closed issue \"Add hostDirectives Property to ComponentMirror object returned by reflectComponentType\" (#58853)"},{"Id":"2687518714","IsPullRequest":true,"CreatedAt":"2024-11-24T10:54:48","Actor":"hamzeen","Number":"58852","RawContent":null,"Title":"fix(core): allowSignalWrites: true warning message typo","State":"closed","Body":"fix(core): allowSignalWrites: true warning message typo\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58852","RelatedDescription":"Closed or merged PR \"fix(core): allowSignalWrites: true warning message typo\" (#58852)"},{"Id":"2687223696","IsPullRequest":false,"CreatedAt":"2024-11-24T07:32:06","Actor":"rtpHarry","Number":"58850","RawContent":null,"Title":"control flow migration left behind a #named ng-template","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThis was mentioned and claimed to be fixed in https://github.com/angular/angular/issues/52518 but it seems to have happened to me the other month.\n\nI've just spotted it now when I was confused why there was two blocks.\n\nI'm not a massive expert so I can't really share much more than what my experience was. I was updating a very old app, so i went through all the versions of angular and ionic one by one to bring it up to date.\n\nAt some point when I ran the control flow schematic it turned this:\n\n```html\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-avatar slot=\"start\" class=\"logo\">\n      <img [src]=\"'/assets/images/app-logo.svg'\" />\n    </ion-avatar>\n    <ion-title class=\"logo\">\n      <ion-label>The Weighter</ion-label>\n    </ion-title>\n    <app-user-account-info slot=\"end\"></app-user-account-info>\n    <ion-buttons slot=\"end\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ng-container *ngIf=\"user$ | async as user; else login\">\n    <ion-grid fixed>\n      <ion-row>\n        <ion-col size=\"12\" size-md=\"6\">\n          <div class=\"intro-container ion-margin\">\n            <div class=\"app-logo-header\">\n              <app-logo-heading></app-logo-heading>\n            </div>\n            <div class=\"app-invocation\">\n              <app-invocation (addWeightClick)=\"addWeight()\"></app-invocation>\n            </div>\n            <div\n              class=\"weight-graph-container\"\n              *ngIf=\"weights$ | async as weights\"\n            >\n              <div class=\"ion-margin-vertical\" *ngIf=\"weights?.length\">\n                <app-weight-graph [weights]=\"weights\"></app-weight-graph>\n              </div>\n            </div>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <div class=\"weight-container\" *ngIf=\"weights$ | async as weights\">\n            <div\n              class=\"weight-container-inner ion-margin-vertical ion-text-center\"\n            >\n              <app-weight-list\n                [weights]=\"weights\"\n                [allTimeLowRecord]=\"user.allTimeLowRecord\"\n              ></app-weight-list>\n            </div>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ng-container>\n  <ng-template #login>\n    <div class=\"login-container ion-text-center\">\n      <div class=\"ion-margin-vertical\">\n        <app-logo-heading></app-logo-heading>\n        <app-login></app-login>\n      </div>\n    </div>\n  </ng-template>\n</ion-content>\n```\n\ninto this:\n\n```html\n<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-avatar slot=\"start\" class=\"logo\">\n      <img [src]=\"'/assets/images/app-logo.svg'\" />\n    </ion-avatar>\n    <ion-title class=\"logo\">\n      <ion-label>The Weighter</ion-label>\n    </ion-title>\n    <app-user-account-info slot=\"end\"></app-user-account-info>\n    <ion-buttons slot=\"end\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  @if (user$ | async; as user) {\n  <ion-grid fixed>\n    <ion-row>\n      <ion-col size=\"12\" size-md=\"6\">\n        <div class=\"intro-container ion-margin\">\n          <div class=\"app-logo-header\">\n            <app-logo-heading></app-logo-heading>\n          </div>\n          <div class=\"app-invocation\">\n            <app-invocation (addWeightClick)=\"addWeight()\"></app-invocation>\n          </div>\n          @if (weights$ | async; as weights) {\n          <div class=\"weight-graph-container\">\n            @if (weights?.length) {\n            <div class=\"ion-margin-vertical\">\n              <app-weight-graph [weights]=\"weights\"></app-weight-graph>\n            </div>\n            }\n          </div>\n          }\n        </div>\n      </ion-col>\n      <ion-col size=\"12\" size-md=\"6\">\n        @if (weights$ | async; as weights) {\n        <div class=\"weight-container\">\n          <div\n            class=\"weight-container-inner ion-margin-vertical ion-text-center\"\n          >\n            <app-weight-list\n              [weights]=\"weights\"\n              [allTimeLowRecord]=\"user.allTimeLowRecord\"\n            ></app-weight-list>\n          </div>\n        </div>\n        }\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  } @else {\n  <div class=\"login-container ion-text-center\">\n    <div class=\"ion-margin-vertical\">\n      <app-logo-heading></app-logo-heading>\n      <app-login></app-login>\n    </div>\n  </div>\n  }\n  <ng-template #login>\n    <div class=\"login-container ion-text-center\">\n      <div class=\"ion-margin-vertical\">\n        <app-logo-heading></app-logo-heading>\n        <app-login></app-login>\n      </div>\n    </div>\n  </ng-template>\n</ion-content>\n```\n\nSo it left the `ng-template` behind at the end of the snippet, despite correctly duplicating it into the new control-flow structure.\n\nThere is no other mention of it in the code class, so it wasn't triggered to be left behind due to a viewchild reference.\n\nI've pasted in `ng version` as it stands today but I'm not sure what it was when I ran the migration last month.\n\nHopefully this is enough to help you figure out the bug.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.9\nNode: 20.12.1\nPackage Manager: npm 10.8.3\nOS: darwin x64\n\nAngular: 18.2.8\n... common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cli                    18.2.9\n@angular/fire                   18.0.1\n@schematics/angular             18.2.9\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58850","RelatedDescription":"Closed issue \"control flow migration left behind a #named ng-template\" (#58850)"},{"Id":"2686010596","IsPullRequest":true,"CreatedAt":"2024-11-24T05:57:49","Actor":"prasantht96","Number":"58839","RawContent":null,"Title":"docs: angular dev v18 page issue fix","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nFixes #58838 \r\nIssue Number: #58838 \r\n\r\n\r\n## What is the new behavior?\r\nChanged background color for the Menu.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58839","RelatedDescription":"Closed or merged PR \"docs: angular dev v18 page issue fix\" (#58839)"},{"Id":"2687178247","IsPullRequest":true,"CreatedAt":"2024-11-24T05:57:29","Actor":"prasantht96","Number":"58848","RawContent":null,"Title":"docs: angular dev v18 page issue fix","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nFixes #58838 \r\nIssue Number: #58838 \r\n\r\n## What is the new behavior?\r\nChanged background color for the Menu.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58848","RelatedDescription":"Open PR \"docs: angular dev v18 page issue fix\" (#58848)"},{"Id":"2687047882","IsPullRequest":true,"CreatedAt":"2024-11-24T04:35:27","Actor":"sheikalthaf","Number":"58847","RawContent":null,"Title":"refactor(docs-infra): remove deprecated modules from testing and use …","State":"open","Body":"…alternatives\r\n\r\nRemoved the deprecated modules used in testing files and instead used the alternative one\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58847","RelatedDescription":"Open PR \"refactor(docs-infra): remove deprecated modules from testing and use …\" (#58847)"},{"Id":"2686870781","IsPullRequest":false,"CreatedAt":"2024-11-24T01:34:48","Actor":"NateRadebaugh","Number":"58846","RawContent":null,"Title":"Improve angular signals benchmark performance","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAccording to public benchmarks, angular's signals are much worse than alternative ecosystem implementations.\n\n> https://github.com/transitive-bullshit/js-reactivity-benchmark\n\nThis makes angular look inferior from an outsider's viewpoint.\n\n### Proposed solution\n\nUnknown \n\n### Alternatives considered\n\nUnknown ","Url":"https://github.com/angular/angular/issues/58846","RelatedDescription":"Open issue \"Improve angular signals benchmark performance\" (#58846)"},{"Id":"2686811336","IsPullRequest":false,"CreatedAt":"2024-11-23T23:33:58","Actor":"Char2sGu","Number":"58845","RawContent":null,"Title":"Automatic InjectionToken Name via Compiler","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, when creating an `InjectionToken` a `desc` string param is required to describe the injection token, for debugging purposes.\n\nA popular practice for supplying this `desc` param is to copy the name of the variable, so that it becomes easy to rename this injection token via global replace:\n\n```ts\nconst MY_TOKEN = new InjectionToken<...>(\"MY_TOKEN\");\n```\n\nManually specifying the `desc` could be verbose and boring.  \nBesides, although not very important, it also causes some ugly formatting:\n```ts\nconst MY_TOKEN_WITH_A_LONG_NAME = new InjectionToken<...>(\n  \"MY_TOKEN_WITH_A_LONG_NAME\"\n);\nconst ANOTHER_TOKEN_WITH_A_LONG_NAME = new InjectionToken<...>(\n  \"ANOTHER_TOKEN_WITH_A_LONG_NAME\"\n);\n```\n\n### Proposed solution\n\nSince now all signal APIs have an optional `debugName` param, which will be automatically populated by the compiler with the variable name, I was wondering if this is also possible for `InjectionToken`:\n\nSource:\n\n```ts\nconst MY_TOKEN = new InjectionToken<...>();\nconst MY_TOKEN_WITH_OPTIONS = new InjectionToken<...>({ ... });\n```\n\nAfter compliation:\n```js\nconst MY_TOKEN = new InjectionToken(\"MY_TOKEN\");\nconst MY_TOKEN_WITH_OPTIONS = new InjectionToken(\"MY_TOKEN_WITH_OPTIONS\", { ... });\n```\n\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/58845","RelatedDescription":"Open issue \"Automatic InjectionToken Name via Compiler\" (#58845)"},{"Id":"2686678452","IsPullRequest":false,"CreatedAt":"2024-11-23T22:08:28","Actor":"lucawalter","Number":"58844","RawContent":null,"Title":"Build-time prerendering not working anymore in Angular 19","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn Angular 18, I used SSG by following this documentation: (https://angular.dev/guide/prerendering) I added a script to generate a routes.txt. The routes from the routes.txt have been prerendered without any problems. After updating to Angular 19, the build fails with following error message, although I did not change anything in my angular.json and also did not add a renderMode: \n\nThe ':uid' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.\n\nIsn't this way of prerendering not available anymore?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nThe ':uid' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"cli\": {\n        \"packageManager\": \"yarn\"\n    },\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"dummy-project\": {\n            \"projectType\": \"application\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"style\": \"scss\",\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:class\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:directive\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:guard\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:interceptor\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:pipe\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:resolver\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:service\": {\n                    \"skipTests\": true\n                }\n            },\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"prefix\": \"app\",\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:application\",\n                    \"options\": {\n                        \"outputPath\": \"dist/dummy-project\",\n                        \"aot\": true,\n                        \"index\": \"src/index.html\",\n                        \"browser\": \"src/main.ts\",\n                        \"polyfills\": [\"zone.js\"],\n                        \"tsConfig\": \"tsconfig.app.json\",\n                        \"inlineStyleLanguage\": \"scss\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\"],\n                        \"scripts\": [],\n                        \"stylePreprocessorOptions\": {\n                            \"includePaths\": [\"src\"],\n                        },\n                        \"server\": \"src/main.server.ts\",\n                        \"prerender\": {\n                            \"routesFile\": \"routes.txt\",\n                            \"discoverRoutes\": true\n                        },\n                        \"ssr\": {\n                            \"entry\": \"server.ts\"\n                        }\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"optimization\": true,\n                            \"sourceMap\": false,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"500kb\",\n                                    \"maximumError\": \"1mb\"\n                                },\n                                {\n                                    \"type\": \"anyComponentStyle\",\n                                    \"maximumWarning\": \"2kb\",\n                                    \"maximumError\": \"4kb\"\n                                }\n                            ],\n                            \"outputHashing\": \"all\",\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"assets\": [\"src/assets\", \"src/.htaccess\", \"src/robots.txt\"]\n                        },\n                        \"development\": {\n                            \"optimization\": false,\n                            \"extractLicenses\": false,\n                            \"sourceMap\": true\n                        }\n                    },\n                    \"defaultConfiguration\": \"development\"\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"configurations\": {\n                        \"production\": {\n                            \"buildTarget\": \"dummy-project:build:production\"\n                        },\n                        \"development\": {\n                            \"buildTarget\": \"dummy-project:build:development\"\n                        }\n                    },\n                    \"defaultConfiguration\": \"development\"\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"buildTarget\": \"dummy-project:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n                        \"tsConfig\": \"tsconfig.spec.json\",\n                        \"inlineStyleLanguage\": \"scss\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\"],\n                        \"scripts\": []\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\"@angular/animations\": \"^19.0.0\",\n    \"@angular/cdk\": \"18.2.2\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/platform-server\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"@angular/ssr\": \"^19.0.1\",\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58844","RelatedDescription":"Closed issue \"Build-time prerendering not working anymore in Angular 19\" (#58844)"},{"Id":"2686675765","IsPullRequest":true,"CreatedAt":"2024-11-23T21:58:22","Actor":"JeanMeche","Number":"58843","RawContent":null,"Title":"docs: add link to `rxResource` in resource","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/58843","RelatedDescription":"Open PR \"docs: add link to `rxResource` in resource\" (#58843)"},{"Id":"2686451247","IsPullRequest":false,"CreatedAt":"2024-11-23T21:48:42","Actor":"robmats99","Number":"58841","RawContent":null,"Title":"Angular.dev Tutorial Missing Crucial Files","State":"closed","Body":"### Describe the problem that you experienced\n\nWhen going to the URL listed below and downloading the source code for the tutorial, the following files are missing:\n\n1. angular.json\n2. package.json\n3. tsconfig.*\n\nI believe the files are also missing for subsequent pages of the tutorial as well\n\nWithout a package.json, `npm install` fails, causing anyone who takes this tutorial to be sad 😭\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/first-app/01-hello-world\n\n### Describe what you were looking for in the documentation\n\nThe following files: \n\n1. angular.json\n2. package.json\n3. tsconfig.*\n\n\n### Describe the actions that led you to experience the problem\n\n1. Downloading the zip file from the tutorial\n2. Running npm install in the directory\n\n### Describe what you want to experience that would fix the problem\n\nHaving the files in all of the tutorial zips. They appear to be missing in more than just the first lesson.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nnpm error code ENOENT\nnpm error syscall open\nnpm error path ...\\first-app_01-hello-world\\package.json\nnpm error errno -4058\nnpm error enoent Could not read package.json: Error: ENOENT: no such file or directory, open '...\\first-app_01-hello-world\\package.json'  \nnpm error enoent This is related to npm not being able to find a file.\nnpm error enoent\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/58841","RelatedDescription":"Closed issue \"Angular.dev Tutorial Missing Crucial Files\" (#58841)"},{"Id":"2684568723","IsPullRequest":false,"CreatedAt":"2024-11-23T19:51:30","Actor":"spock123","Number":"58832","RawContent":null,"Title":"[V19] Updating a project in pnpm mono-repo, throws cli mismatch version error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nPreviously when updating a project within our mono-repo (using pnpm, consisting of many angular projects, mostly on v18.2), there were no issues upgrading project-by project.\n\nThis time when serving after upgrade, we get a cli mismatch error. \nThis only happens when running in a mono repo with pnpm.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n% npm run start\n\n> start\n> ng serve --host=0.0.0.0 --open\n\nLocalization (`localize` option) has been disabled. The development server only supports localizing a single locale per build.\nThis version of CLI is only compatible with Angular versions ^18.0.0,\nbut Angular version 19.0.0 was found instead.\nPlease visit the link below to find instructions on how to update Angular.\nhttps://update.angular.dev/\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 20.18.0\nPackage Manager: pnpm 8.10.5\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... localize, material, platform-browser\n... platform-browser-dynamic, platform-server, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1 (cli-only)\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1 (cli-only)\n@angular-devkit/schematics      19.0.1 (cli-only)\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1 (cli-only)\nrxjs                            7.5.7\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nTried re-installing deps, pnpm-lock in root folder, etc.\n\nIt seems there is something going on with pnpm and version handling of the cli","Url":"https://github.com/angular/angular/issues/58832","RelatedDescription":"Closed issue \"[V19] Updating a project in pnpm mono-repo, throws cli mismatch version error\" (#58832)"},{"Id":"2687194697","IsPullRequest":false,"CreatedAt":"2024-11-23T15:07:03","Actor":"danielehrhardt","Number":"58849","RawContent":null,"Title":"Auto remove unused standalone imports","State":"open","Body":"### Command\n\nlint\n\n### Description\n\nIt would be nice if there would be some cli command to remove all unused standalone imports. Currently there is a Warning Message:` [WARNING] TS-998113: IonItem is not used within the template of InverterSetupErrorPage [plugin angular-compiler]`\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular/issues/58849","RelatedDescription":"Open issue \"Auto remove unused standalone imports\" (#58849)"},{"Id":"2685534323","IsPullRequest":false,"CreatedAt":"2024-11-23T14:45:24","Actor":"cipchk","Number":"58836","RawContent":null,"Title":"TypeError: Cannot read properties of undefined (reading 'transformFn')","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nA strange phenomenon occurs when I use the following code, resulting in a `TypeError: Cannot read properties of undefined (reading 'transformFn')` exception:\n\n```ts\nreadonly lang = input<string>('html');\n```\n\nBut if I use:\n\n```ts\nreadonly _lang = input<string>('html', { alias: 'lang' });\n```\n\nEverything works fine. It seems like using a variable named `lang` is not allowed.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 22.9.0\nPackage Manager: yarn 4.5.2\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58836","RelatedDescription":"Closed issue \"TypeError: Cannot read properties of undefined (reading 'transformFn')\" (#58836)"},{"Id":"2686045332","IsPullRequest":false,"CreatedAt":"2024-11-23T14:25:50","Actor":"robertIsaac","Number":"58840","RawContent":null,"Title":"add default value to resource and rxResource","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI'm experimenting now with the new resource and rxResource new APIs and one thing that is a bit hassle is that it adds undefined to the the type of it\nfor example I find myself needing a lot to do `resource.value() ?? []` because before I was making the signal value empty array till the value is loaded\n\n### Proposed solution\n\nis to add initial value to the [ResourceOptions](https://angular.dev/api/core/ResourceOptions)\npoints to be discussed\n1. if `hasValue()` should be true or false if it's the initial value\n2. when `resource.reload()` is called if it should return to the default value or not\n\n### Alternatives considered\n\nis to keep using `?? initialValue`","Url":"https://github.com/angular/angular/issues/58840","RelatedDescription":"Open issue \"add default value to resource and rxResource\" (#58840)"},{"Id":"2686002649","IsPullRequest":false,"CreatedAt":"2024-11-23T13:14:02","Actor":"prasantht96","Number":"58838","RawContent":null,"Title":"The menu items are invisible in Dark Mode specifically for V18 Angular dev page","State":"open","Body":"### Describe the problem that you experienced\n\nThe menu items are not visible in dark mode; they only appear on mouse hover. In light mode, their visibility is also not satisfactory. This issue occurs across all browsers.\n\n### Enter the URL of the topic with the problem\n\nhttps://v18.angular.dev/\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![Image](https://github.com/user-attachments/assets/76d18962-bfc4-4629-8e57-efdf17386e68)\n\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/58838","RelatedDescription":"Open issue \"The menu items are invisible in Dark Mode specifically for V18 Angular dev page\" (#58838)"},{"Id":"2685293872","IsPullRequest":false,"CreatedAt":"2024-11-23T09:33:19","Actor":"symaxian","Number":"58835","RawContent":null,"Title":"Support accessing private fields/methods within the template for reduced bundle sizes","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, compiler\n\n### Description\n\nModern JavaScript bundlers support minifying the names of fields and methods that utilize private identifiers.\n\nWould the Angular team consider allowing logic within component templates to access private fields and methods on the component class?\n\nThis would allow for the minification of more properties on the component class, leading to a reduction in the size of the minified code and thus the total bundle size.\n\n### Proposed solution\n\nI do not know enough of the Angular internals to propose a solution. I imagine the workload is far from trivial and would involve moving(at least part of) the template factory to exist within the component class.\n\n### Alternatives considered\n\nUsing \"hand minified\" identifiers for class properties that are accessed within the component template would lead to similar minification results, but have terrible ergonomics.","Url":"https://github.com/angular/angular/issues/58835","RelatedDescription":"Closed issue \"Support accessing private fields/methods within the template for reduced bundle sizes\" (#58835)"},{"Id":"2685634930","IsPullRequest":true,"CreatedAt":"2024-11-23T08:36:43","Actor":"crisbeto","Number":"58837","RawContent":null,"Title":"build: update g3 sync config","State":"open","Body":"Updates the sync config to exclude the entire `bazel` package. Previously only some subdirectories were excluded, but in the internal config the entire package is ignored.","Url":"https://github.com/angular/angular/pull/58837","RelatedDescription":"Open PR \"build: update g3 sync config\" (#58837)"},{"Id":"2685042327","IsPullRequest":true,"CreatedAt":"2024-11-23T00:45:38","Actor":"AndrewKushnir","Number":"58834","RawContent":null,"Title":"refactor(core): use `ApplicationRef.whenStable` instead of a custom util function","State":"open","Body":"This commit removes a custom `whenStable` util in favor of standard `ApplicationRef.whenStable` API.\r\n\r\nThere is also an important different between the custom `whenStable` function and `ApplicationRef.whenStable` implementation: the `whenStable` was caching the \"stable\" promise on per-ApplicationRef basis, which resulted in unexpected behavior with zoneless, when some code ended up getting a stale resolved promise, when an application was not stable yet, this causing order of operations issues. This commit also has an extra test that covers that case.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/58834","RelatedDescription":"Open PR \"refactor(core): use `ApplicationRef.whenStable` instead of a custom util function\" (#58834)"},{"Id":"2684616068","IsPullRequest":true,"CreatedAt":"2024-11-22T21:27:36","Actor":"thePunderWoman","Number":"58833","RawContent":null,"Title":"refactor(core): Consolidates shouldTrigger* methods down to one","State":"open","Body":"This removes potential confusion by relying on one shouldTriggerDeferBlock method everywhere.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/58833","RelatedDescription":"Open PR \"refactor(core): Consolidates shouldTrigger* methods down to one\" (#58833)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2688709572","IsPullRequest":false,"CreatedAt":"2024-11-25T00:41:04","Actor":"razor09","Number":"28951","RawContent":null,"Title":"Angular 19 styles from components (.scss) are not included in the styles production bundle .css","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nStyles from components (`.scss` in my case) are not included in the styles production bundle `.css`. Instead, they go to `.js` bundle. Only the global styles specified in the `build.options.styles` in `angular.json` settings are included in the final `.css` bundle.\n\n### Minimal Reproduction\n\nng new my-project\n\nwrite some styles in `app.component.scss` and `app.component.html`\n\nnpm run buld\n\nstyles-[hash].css - 0 bytes\n\nstyles go in `.js` bundle instead of `.css`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nnode.js version: 22.11.0\nnpm version: 10.9.0\nangular version: 19.0.0\nangular-cli version: 19.0.1\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28951","RelatedDescription":"Closed issue \"Angular 19 styles from components (.scss) are not included in the styles production bundle .css\" (#28951)"},{"Id":"2687406837","IsPullRequest":false,"CreatedAt":"2024-11-24T09:05:03","Actor":"bampakoa","Number":"28948","RawContent":null,"Title":"Build fails in Angular SSR application with route parameters","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have added Angular SSR in an [existing Angular app with routing enabled](https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/blob/main/ch15/src/app/app.routes.ts) and when I run `ng build` I get the following error:\n\n`The 'products/:id' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.`\n\n### Minimal Reproduction\n\n1. Create a new Angular CLI 19 application\n2. Create a route in the `app.routes.ts` file with parameter\n3. Run `ng add @angular/ssr`\n4. Run `ng build`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.0\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0 (cli-only)\n@angular-devkit/core         19.0.0 (cli-only)\n@angular-devkit/schematics   19.0.0 (cli-only)\n@schematics/angular          19.0.0 (cli-only)\n```\n\n### Anything else relevant?\n\nPlease note that I answered **No** to the following question when installing SSR, which is the default value:\n\n> Would you like to use the Server Routing and App Engine APIs (Developer Preview) for this server application?","Url":"https://github.com/angular/angular-cli/issues/28948","RelatedDescription":"Open issue \"Build fails in Angular SSR application with route parameters\" (#28948)"},{"Id":"2687563624","IsPullRequest":false,"CreatedAt":"2024-11-24T08:56:48","Actor":"stevenrlp","Number":"28949","RawContent":null,"Title":"File Replacements Ignored","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nUpgraded to Angular 19.0.1 and now when I build my application the fileReplacments option is being ignored.\n\nI am running the command `ng build --configuration=production`\n\nMy angular.json file is as follows:\n\n```\n                    \"configurations\": {\n                        \"development\": {\n                          \"extractLicenses\": false,\n                            \"namedChunks\": true,\n                            \"optimization\": false,\n                            \"sourceMap\": true\n                        },\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                  \"replace\": \"src/app/auth/auth-config.json\",\n                                  \"with\": \"src/app/auth/auth-config.prod.json\"\n                                }\n                              ],\n                            \"outputHashing\": \"all\"\n                        }\n                    },\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 22.11.0\nPackage Manager: npm 10.9.1\nOS: win32 x64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.1\n@angular-devkit/core         19.0.1\n@angular-devkit/schematics   19.0.1\n@angular/build               19.0.1\n@angular/cli                 19.0.1\n@schematics/angular          19.0.1\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28949","RelatedDescription":"Open issue \"File Replacements Ignored\" (#28949)"},{"Id":"2686667681","IsPullRequest":false,"CreatedAt":"2024-11-23T21:23:35","Actor":"AmitMY","Number":"28947","RawContent":null,"Title":"Upgraded to Angular 19, Dynamic imports do not work","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI upgraded from 18 to 19 using the upgrade command, which also switched me from `browser` to `application`.\nAfter some modifications I managed to make everything run, except for dynamic imports.\n\nMy code has a lot of large modules, that are dynamically imported like so:\n```ts\n      const {defineCustomElements} = await import(/* webpackChunkName: \"pose-viewer\" */ 'pose-viewer/loader');\n      defineCustomElements();\n```\n\n(Removing the /* webpackChunkName: \"pose-viewer\" */  does not help, but I would also like that supported ideally)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/sign/translate/pull/177 - Can't provide something minimal, as this is the app that was upgraded\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Failed to fetch dynamically imported module: http://localhost:4200/@fs/Users/amitmoryossef/dev/sign/translate/.angular/cache/19.0.0/sign-translate/vite/deps/pose-viewer.entry.js?import undefined\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 22.0.0\nPackage Manager: npm 10.5.1\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0\n@angular-devkit/build-angular   19.0.0\n@angular-devkit/core            19.0.0\n@angular-devkit/schematics      19.0.0\n@schematics/angular             19.0.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28947","RelatedDescription":"Open issue \"Upgraded to Angular 19, Dynamic imports do not work\" (#28947)"},{"Id":"2686209716","IsPullRequest":false,"CreatedAt":"2024-11-23T16:36:08","Actor":"wkaskie","Number":"28946","RawContent":null,"Title":"Allow for customized SRI Algorithm","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nCurrently, configuration allows for setting `subresourceIntegrity` to `true` and this adds a sha384 hash to the html output's script tags.\n\nHowever, sha384 is not supported in all platforms and/or frontend developers cannot control the deployment servers. (eg: AWS S3 doesn't allow for sha384 with its checksum-algorithm flag)\n\nRequest is to allow overriding of the default sha384 that is set here: https://github.com/angular/angular-cli/blob/20411f696eb52c500e096e3dfc5e195185794edc/packages/angular_devkit/build_angular/src/tools/webpack/configs/common.ts#L254\n\n### Describe the solution you'd like\n\nTwo options:\n* given that custom webpack configurations are already alowed and plugins added there are already expected to override the defaults, allow the existence of\n```\n   plugins: [\n    new SubresourceIntegrityPlugin({\n      enabled: true,\n      hashFuncNames: ['sha256'],\n    }), \n```\n   to override the hardcodedd configuration.\n* Add additional configuration parameter for overriding the hashFuncNames setting like:\n  ```\n         ...,\n        \"subresourceIntegrity\": true,\n       \"hashFuncNames\": [\"sha256\", \"sha512\"],\n       ...\n```\n\n### Describe alternatives you've considered\n\nI have tried adding the plugin in my custom webpack.config.js file.\nI've also tried to completely rework the settings in Angular to allow for a fully customizable index file...but I honestly just lack the skill to get that to work.","Url":"https://github.com/angular/angular-cli/issues/28946","RelatedDescription":"Open issue \"Allow for customized SRI Algorithm\" (#28946)"},{"Id":"2685631117","IsPullRequest":true,"CreatedAt":"2024-11-23T08:26:00","Actor":"sheikalthaf","Number":"28944","RawContent":null,"Title":"refactor(@angular/ssr): use appRef.whenStable instead of util functio…","State":"open","Body":"…n from angular core\r\n\r\nusing application whenStable function instead of custom util function from angular core.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28944","RelatedDescription":"Open PR \"refactor(@angular/ssr): use appRef.whenStable instead of util functio…\" (#28944)"},{"Id":"2685480190","IsPullRequest":true,"CreatedAt":"2024-11-23T06:19:11","Actor":"angular-robot","Number":"28943","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ng-packagr](https://redirect.github.com/ng-packagr/ng-packagr) | devDependencies | patch | [`19.0.0` -> `19.0.1`](https://renovatebot.com/diffs/npm/ng-packagr/19.0.0/19.0.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | patch | [`4.27.3` -> `4.27.4`](https://renovatebot.com/diffs/npm/rollup/4.27.3/4.27.4) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | patch | [`4.27.3` -> `4.27.4`](https://renovatebot.com/diffs/npm/rollup/4.27.3/4.27.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v19.0.1`](https://redirect.github.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1901-2024-11-22)\n\n[Compare Source](https://redirect.github.com/ng-packagr/ng-packagr/compare/19.0.0...19.0.1)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.27.4`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4274)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.27.3...v4.27.4)\n\n*2024-11-23*\n\n##### Bug Fixes\n\n-   Update bundled magic-string to support sourcemap debug ids ([#&#8203;5740](https://redirect.github.com/rollup/rollup/issues/5740))\n\n##### Pull Requests\n\n-   [#&#8203;5740](https://redirect.github.com/rollup/rollup/pull/5740): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28943","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#28943)"},{"Id":"2685480126","IsPullRequest":true,"CreatedAt":"2024-11-23T06:19:02","Actor":"angular-robot","Number":"28942","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `f3f8c60` -> `d556dfe` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `c1c5e13` -> `08b39a9` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1b1ed7f` -> `b9143f9` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `7d29993` -> `000b84a` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `40531fc` -> `5be3e28` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `a6ac347` -> `ba72f95` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `d351adc` -> `2b45b91` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `6438594` -> `cf7edcd` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `a3e81d5` -> `a26d5a5` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `117df7a` -> `ce7c521` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `eb82ec7` -> `46700a1` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `2038ae5` -> `61c0579` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `25c0c55` -> `a4bbc7c` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `0e7e575` -> `17a92c7` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `caf7868` -> `43ad1f9` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `0a64f6e` -> `2e68502` |\n| angular/dev-infra | action | digest | `53fb7c3` -> `01c8c16` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28942","RelatedDescription":"Open PR \"build: update angular\" (#28942)"},{"Id":"2684752233","IsPullRequest":false,"CreatedAt":"2024-11-22T22:19:01","Actor":"fiste788","Number":"28941","RawContent":null,"Title":"Error using experimentalPlatform neutral with provideAnimationsAsync","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using new experimentalplatform neutral with provideAnimationsAsync() in app.config.ts i have on build\n\n\n### Minimal Reproduction\n\nI have a repro here https://github.com/fiste788/tmp-animations-async\nCloning, running npm install and npm run build will give you the error.\nIf you change to provideAnimations() without async at line \nhttps://github.com/fiste788/tmp-animations-async/blob/562c37a48c9f0c0a52f6ffacbdc5faec25dfe0d5/src/app/app.config.ts#L8\nto make the build work.\n\n\n### Exception or Error\n\n```text\nTypeError: Class extends value undefined is not a constructor or null\n    at file:///D:/Projects/Personal/Fantamanajer/test19v2/.angular/prerender-root/a3011629-d592-49a7-91c1-a8b6d1656845/chunk-GFZLE2P2.mjs:34:17047\n    at file:///D:/Projects/Personal/Fantamanajer/test19v2/.angular/prerender-root/a3011629-d592-49a7-91c1-a8b6d1656845/chunk-GFZLE2P2.mjs:34:17240\n    at ModuleJob.run (node:internal/modules/esm/module_job:195:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:336:24)\n    at async importModuleDynamicallyWrapper (node:internal/vm/module:429:15)\n    at async extractRoutes (D:\\Projects\\Personal\\Fantamanajer\\test19v2\\node_modules\\@angular\\build\\src\\utils\\server-rendering\\routes-extractor-worker.js:23:83)\n    at async D:\\Projects\\Personal\\Fantamanajer\\test19v2\\node_modules\\piscina\\dist\\worker.js:144:26\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 18.20.3\nPackage Manager: bun <error>\nOS: linux x64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28941","RelatedDescription":"Open issue \"Error using experimentalPlatform neutral with provideAnimationsAsync\" (#28941)"},{"Id":"2684376807","IsPullRequest":false,"CreatedAt":"2024-11-22T19:52:03","Actor":"drfcozapata","Number":"28940","RawContent":null,"Title":"Angular 19 [ERROR] Could not resolve \"zone.js\"","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nI don't know\n\n### Description\n\nI am a Vue.js web developer, just starting to learn Angular.\n\nI installed the Angular CLI and created a new project with it. After finishing, I opened VScode and when I run 'npm start' I get the following error message:\n```\n> first-angular-app@0.0.0 start\n> ng serve\n\nApplication bundle generation failed. [5.859 seconds]\n\n✘ [ERROR] Could not resolve “zone.js”\n\n    angular:polyfills:angular:polyfills:1:7:\n      1 │ import 'zone.js';\n        ╵ ~~~~~~~~~\n\n  The Yarn Plug'n'Play manifest forbids importing “zone.js” here because it's not listed as a dependency of this package:\n\n    ../../../../../.pnp.cjs:37:31:\n      37 │ “packageDependencies”: [\\.\n         ╵ ~~\n\n  You can mark the path “zone.js” as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\nWatch mode enabled. Watching for file changes...\n```\n\nI deleted the directory, created the project again and again the same error appears (exactly the same).\n\nI am working from Linux Manjaro and I have installed Node v22.11.0 (LTS).\n\nHow can I solve this problem, because my Angular learning process got there?\n\n### Minimal Reproduction\n\nnpm install -g @angular/cli\n\nng new first-angular-app\n\ncd first-angular-app\n\nnpm start\n\n### Exception or Error\n\n```text\n> first-angular-app@0.0.0 start\n> ng serve\n\nApplication bundle generation failed. [5.859 seconds]\n\n✘ [ERROR] Could not resolve \"zone.js\"\n\n    angular:polyfills:angular:polyfills:1:7:\n      1 │ import 'zone.js';\n        ╵        ~~~~~~~~~\n\n  The Yarn Plug'n'Play manifest forbids importing \"zone.js\" here because it's not listed as a dependency of this package:\n\n    ../../../../.pnp.cjs:37:31:\n      37 │         \"packageDependencies\": [\\\n         ╵                                ~~\n\n  You can mark the path \"zone.js\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\n\nWatch mode enabled. Watching for file changes...\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: linux x64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28940","RelatedDescription":"Closed issue \"Angular 19 [ERROR] Could not resolve \"zone.js\"\" (#28940)"},{"Id":"2682717689","IsPullRequest":true,"CreatedAt":"2024-11-22T18:40:11","Actor":"alan-agius4","Number":"28935","RawContent":null,"Title":"refactor(@angular/ssr): replace `:params` with `*`","State":"closed","Body":"The SSR router relies on wildcard matching rather than params. This commit refactors the stored routes by removing the `:params`.\r\n","Url":"https://github.com/angular/angular-cli/pull/28935","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): replace `:params` with `*`\" (#28935)"},{"Id":"2681954249","IsPullRequest":true,"CreatedAt":"2024-11-22T18:07:08","Actor":"angular-robot","Number":"28934","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `ff1306d` -> `f3f8c60` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `308678a` -> `c1c5e13` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `e6446cd` -> `1b1ed7f` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `1da349a` -> `7d29993` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `0fbe283` -> `40531fc` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `65d43d5` -> `a6ac347` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `81e989c` -> `d351adc` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `7fa7813` -> `6438594` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `8338395` -> `a3e81d5` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `c6af713` -> `117df7a` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `c9a070c` -> `eb82ec7` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `2913aad` -> `2038ae5` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `23f899d` -> `25c0c55` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `3a79f6a` -> `0e7e575` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `cfc1aa9` -> `caf7868` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `9223fb3` -> `0a64f6e` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28934","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28934)"},{"Id":"2680454232","IsPullRequest":true,"CreatedAt":"2024-11-22T18:06:04","Actor":"josephperrott","Number":"28928","RawContent":null,"Title":"ci: set up perf workflow job and create initial workflow","State":"closed","Body":"Set up the initial workflow to build upon.\r\n","Url":"https://github.com/angular/angular-cli/pull/28928","RelatedDescription":"Closed or merged PR \"ci: set up perf workflow job and create initial workflow\" (#28928)"},{"Id":"2683567775","IsPullRequest":true,"CreatedAt":"2024-11-22T15:29:15","Actor":"heddendorp","Number":"28939","RawContent":null,"Title":"feat: support tailwind v4","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe current integration if for tailwind V3 only.\r\n\r\nIssue Number: #28938\r\n\r\n## What is the new behavior?\r\n\r\nDetect if tailwind v4 is used as indicated by the presence of the `@tailwindcss/postcss` package. If so, check that also `tailwindcss` is installed. If both are present, Add the tailwind postCSS plugin.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28939","RelatedDescription":"Open PR \"feat: support tailwind v4\" (#28939)"},{"Id":"2683509202","IsPullRequest":false,"CreatedAt":"2024-11-22T15:11:00","Actor":"heddendorp","Number":"28938","RawContent":null,"Title":"Support tailwind v4","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nTailwind v4 is changing the installation and configuration. It would be great to update the cli to make sure v4 is supported.\n\n### Describe the solution you'd like\n\nThe cli should support the new postcss plugin https://tailwindcss.com/docs/v4-beta#installing-with-post-css\nAlso detection probably has to be changed as v4 no longer uses js to configure tailwind but instead css variables https://tailwindcss.com/docs/v4-beta#installing-with-post-css\nI guess the best detection at this point is having tailwindcss with a version >4 installed and ideally the cli also makes sure @tailwindcss/postcss is installed.\n\n### Describe alternatives you've considered\n\nTailwind also offers a vite plugin, but to my understanding, postcss should be easier to support","Url":"https://github.com/angular/angular-cli/issues/28938","RelatedDescription":"Open issue \"Support tailwind v4\" (#28938)"},{"Id":"2682865746","IsPullRequest":false,"CreatedAt":"2024-11-22T11:36:06","Actor":"LuisTovar0","Number":"28937","RawContent":null,"Title":"Build library: An error has occuried while processing (scss)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith Angular 19, the library builder breaks if an SCSS file tries to import something (in this case a variable) from external modules or files, without explaining the error.\n\nThese two snippets are supposed to do the same, and produce the same error.\n\n```scss\n@use 'sass:map';\n@use '../theming/theme';\n\np {\n  background-color: #{map.get(theme.$primary, 98)};\n}\n```\n\n```scss\n@use 'sass:map';\n@import '../theming/theme';\n\np {\n  background-color: #{map.get($primary, 98)};\n}\n```\n\ntheme.scss:\n```scss\n$primary: (\n  98: #f0f0f5,\n);\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yeykor?file=angular.json&view=editor\n\n### Please provide the exception or error you saw\n\n```true\nAn error has occuried while processing /home/projects/stackblitz-starters-yeykor/projects/my-lib/src/lib/my-comp.component.scss.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 22.3.0\nPackage Manager: npm 10.8.1\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0 (cli-only)\n@angular-devkit/core         19.0.0 (cli-only)\n@angular-devkit/schematics   19.0.0 (cli-only)\n@schematics/angular          19.0.0 (cli-only)\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28937","RelatedDescription":"Closed issue \"Build library: An error has occuried while processing (scss)\" (#28937)"},{"Id":"2682785855","IsPullRequest":false,"CreatedAt":"2024-11-22T10:45:52","Actor":"marklagendijk","Number":"28936","RawContent":null,"Title":"Angular 19: `ng build` fails to find `tsconfig.app.json` during CI/CD pipeline build","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.12\n\n### Description\n\nAfter upgrading to Angular 19 our Azure Pipelines CI/CD build started failing.\nThe Angular build fails because it cannot find/parse `tsconfig.app.json`.\n\nThe failure happens under very specific circumstances. I will describe the high level conditions here, and go into more detail in the 'Minimal Reproduction' below.\n- The Angular build is triggered via the .NET build system. An `.esproj` project is used for the Angular application.\n- The issue happens in the Azure Pipelines CI/CD pipeline, but only on a Ubuntu runner, not on a Windows runner.\n- Executing the same command on my development PC under WSL Ubuntu works fine.\n\nThe baffling thing for me is that the exception mentions a '.NET build system specific'-folder: `PROJECT_NAME/obj/Debug` while I verified that the current working directory in which the `npm run build` command is executed is actually the `PROJECT_NAME` folder.\nSo where is the Angular build system getting this folder from? And why is it using that folder instead of the current working directory?\n\n### Minimal Reproduction\n\n1. Generate a new Angular application `ng new repro-app`.\n2. Create a project file in the root of the application directory: `application.esproj` with the following contents:\n    ```xml\n   <Project Sdk=\"Microsoft.VisualStudio.JavaScript.Sdk/1.0.2039730\">\n     <PropertyGroup>\n       <BuildCommand>echo \"$PWD\" &amp;&amp; npm run version &amp;&amp; npm run build</BuildCommand>\n       <StartupCommand>npm start</StartupCommand>\n       <TestCommand>npm run test</TestCommand>\n       <JavaScriptTestFramework>Jasmine</JavaScriptTestFramework>\n       <BuildOutputFolder>$(MSBuildProjectDirectory)\\dist\\browser\\</BuildOutputFolder>\n     </PropertyGroup>\n   </Project>\n    ```\n3. Reference this project from a normal .NET project file.\n4. Build the .NET project in an Azure Pipeline with the `ubuntu-24.04` vmImage\n\n### Exception or Error\n\n```text\n❯ Building...\n  ✔ Building...\n  Application bundle generation failed. [6.198 seconds]\n  \n  ▲ [WARNING] TypeScript compiler options 'module' values 'CommonJS', 'UMD', 'System' and 'AMD' are not supported. [plugin angular-compiler]\n  \n    The 'module' option will be set to 'ES2022' instead.\n  \n  \n  ▲ [WARNING] TypeScript compiler options 'target' and 'useDefineForClassFields' are set to 'ES2022' and 'false' respectively by the Angular CLI. [plugin angular-compiler]\n  \n      tsconfig.app.json:0:0:\n        0 │ \n          ╵ ^\n  \n    To control ECMA version and features use the Browserslist configuration. For more information, see https://angular.dev/tools/cli/build#configuring-browser-compatibility\n  \n  \n✘ [ERROR] TS500 : error : ENOENT: no such file or directory, stat '/home/vsts/work/1/s/PMP.PortalApp/obj/Debug' [/home/vsts/work/1/s/PMP.PortalApp/PMP.PortalApp.esproj]\n      at Object.statSync (node:fs:1658:25)\n      at NodeJSFileSystem.stat (file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:346:16)\n      at file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:405:23\n      at visitDirectory (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:22130:36)\n      at Object.matchFiles (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:22123:5)\n      at Object.readDirectory (file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:395:12)\n      at getFileNamesFromConfigSpecs (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42914:29)\n      at getFileNames (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42407:23)\n      at parseJsonConfigFileContentWorker (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42311:16)\n      at Object.parseJsonConfigFileContent (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42244:10) [plugin angular-compiler]\n  \n  \n/home/vsts/work/1/.nuget/packages/microsoft.visualstudio.javascript.sdk/1.0.2039730/Sdk/Sdk.targets(184,5): error MSB3073: The command \"npm run version && npm run build\" exited with code 1. [/home/vsts/work/1/s/PMP.PortalApp/PMP.PortalApp.esproj]\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\n  Node: 22.11.0\n  Package Manager: npm 10.9.0\n  OS: linux x64\n  \n  Angular: 19.0.0\n  ... animations, cdk, common, compiler, compiler-cli, core, forms\n  ... material, material-luxon-adapter, platform-browser\n  ... platform-browser-dynamic, router\n  \n  Package                         Version\n  ---------------------------------------------------------\n  @angular-devkit/architect       0.1900.1\n  @angular-devkit/build-angular   19.0.1\n  @angular-devkit/core            19.0.1\n  @angular-devkit/schematics      19.0.1\n  @angular/build                  19.0.1\n  @angular/cli                    19.0.1\n  @schematics/angular             19.0.1\n  rxjs                            7.8.1\n  typescript                      5.6.3\n  zone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28936","RelatedDescription":"Open issue \"Angular 19: `ng build` fails to find `tsconfig.app.json` during CI/CD pipeline build\" (#28936)"},{"Id":"2681683385","IsPullRequest":false,"CreatedAt":"2024-11-22T06:19:23","Actor":"MrNathanStiles","Number":"28933","RawContent":null,"Title":"CLI Creates Working Projects","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nUsing 'ng new' does not create a working project.\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28933","RelatedDescription":"Closed issue \"CLI Creates Working Projects\" (#28933)"},{"Id":"2681494842","IsPullRequest":true,"CreatedAt":"2024-11-22T01:31:53","Actor":"dgp1130","Number":"28932","RawContent":null,"Title":"fix(@schematics/angular): skip SSR routing prompt in webcontainer","State":"open","Body":"Apparently `inquirer` requires `async_hooks` which isn't supported in webcontainers, therefore prompting the user fails. Instead we always fall back to the default option.\r\n\r\nSee: https://github.com/SBoudrias/Inquirer.js/issues/1426","Url":"https://github.com/angular/angular-cli/pull/28932","RelatedDescription":"Open PR \"fix(@schematics/angular): skip SSR routing prompt in webcontainer\" (#28932)"},{"Id":"2680966781","IsPullRequest":true,"CreatedAt":"2024-11-21T21:10:15","Actor":"dgp1130","Number":"28931","RawContent":null,"Title":"docs: release notes for the v19.0.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28931","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.1 release\" (#28931)"},{"Id":"2680796207","IsPullRequest":true,"CreatedAt":"2024-11-21T21:08:44","Actor":"dgp1130","Number":"28930","RawContent":null,"Title":"Bump version to \"v19.0.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28930","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.1\" with changelog.\" (#28930)"},{"Id":"2680598277","IsPullRequest":false,"CreatedAt":"2024-11-21T19:29:56","Actor":"itworksafisher","Number":"28929","RawContent":null,"Title":"Build gives warning about urlParse even though it is a default import","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am building a project with the new esbuild (webpack was used previously) in v18 which uses @kontent-ai/delivery-sdk@14/15. The ng build succeeds, but gives the following warning:\n\n```\n▲ [WARNING] Calling \"urlParse\" will crash at run-time because it's an import namespace object, not a function [call-import-namespace]\n\n    node_modules/@kontent-ai/delivery-sdk/dist/es6/utilities/delivery-url.helper.js:8:22:\n      8 │     const parsedUrl = urlParse(url);\n        ╵                       ~~~~~~~~\n\n  Consider changing \"urlParse\" to a default import instead:\n\n    node_modules/@kontent-ai/delivery-sdk/dist/es6/utilities/delivery-url.helper.js:1:7:\n      1 │ import * as urlParse from 'url-parse';\n        │        ~~~~~~~~~~~~~\n        ╵        urlParse\n\n```\n\nYet when I browse the source code, it does import as namespaced, which I thought was just a renaming to the default\n\n```\nimport * as urlParse from 'url-parse';\nexport class DeliveryUrlHelper {\n    replaceAssetDomain(originalAssetUrl, customDomain) {\n        const urlPath = this.getUrlPathname(originalAssetUrl);\n        return `${customDomain}${urlPath}`;\n    }\n    getUrlPathname(url) {\n        const parsedUrl = urlParse(url);\n        return parsedUrl.pathname;\n    }\n}\nexport const deliveryUrlHelper = new DeliveryUrlHelper();\n//# sourceMappingURL=delivery-url.helper.js.map\n```\n\nSo this seems to be a false positive.\n\n### Minimal Reproduction\n\nBuild an angular project which uses @kontent-ai/delivery-sdk\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.12\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 18.2.12\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cdk                    18.2.13\n@angular/google-maps            18.2.13\n@schematics/angular             18.2.12\nrxjs                            6.6.3\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28929","RelatedDescription":"Closed issue \"Build gives warning about urlParse even though it is a default import\" (#28929)"},{"Id":"2680108546","IsPullRequest":false,"CreatedAt":"2024-11-21T17:49:06","Actor":"michael-small","Number":"28925","RawContent":null,"Title":"adev(bug): \"Learn Angular in the Browser\" breaks with `styles`","State":"closed","Body":"### Describe the problem that you experienced\n\nWhen running an embedded editor + preview in the docs, `styles` with seemingly any content besides an empty string in the `@Component` metadata break the preview, with the error \"Angular compilation initialization failed.\" and stacktrace below.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/learn-angular/1-components-in-angular\n\n### Describe what you were looking for in the documentation\n\nIn browser \"Learn Angular\" > (any subsection, but this is apparent in the second step, \"Components in Angular\")\n\n```ts\n@Component({\n  selector: 'app-root',\n  template: `\n    Hello\n  `,\n  styles: `\n    :host {\n      color: blue;\n    }\n  `,\n})\nexport class AppComponent {}\n```\n\n```styles: `` ``` seems fine\n\n### Describe the actions that led you to experience the problem\n\nLoading the provided code of not just the URL of the problem, but any Learn Angular page with an embedded preview where the built in code editor includes `styles` (edit: with any content) in the `@Component` metadata.\n\n### Describe what you want to experience that would fix the problem\n\nN/A\n\n### Add a screenshot if that helps illustrate the problem\n\nN/A\n\n### If this problem caused an exception or error, please paste it here\n\nException in the preview window in either Chrome or Firefox: `Angular compilation initialization failed.`\n\nStacktraces in integrated Console:\n\nChrome\n\n```\n> NG_BUILD_PARALLEL_TS=0 ng serve\n\nPrebundling has been configured but will not be used because caching has been disabled.\nPrebundling has been configured but will not be used because caching has been disabled.\nApplication bundle generation failed. [3.310 seconds]\n\n✘ [ERROR] Angular compilation initialization failed. [plugin angular-compiler]\n\n  Error: Digest method not supported\n      at new _0xf01bc2 (https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/blitz.d3acb9e1.js:40:830459)\n      at new Hash (https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/builtins.ddb8d84d.js:70:945)\n      at createHash (https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/builtins.ddb8d84d.js:24:2531)\n      at Object.transformStylesheet (file:///home/angular/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js#cjs:160:64)\n      at host.transformResource (file:///home/angular/node_modules/@angular/build/src/tools/angular/angular-host.js#cjs:116:42)\n      at AdapterResourceLoader.preprocessInline (file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:2414:48)\n      at eval (file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-OM3GHCE5.js:14014:81)\n      at Array.map (<anonymous>)\n      at eval (file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-OM3GHCE5.js:14014:46)\n      at https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/blitz.d3acb9e1.js:40:22706\n```\n\n\nFirefox\n\n```\n> angular.dev@0.0.0 start\n> NG_BUILD_PARALLEL_TS=0 ng serve\n\nPrebundling has been configured but will not be used because caching has been disabled.\nPrebundling has been configured but will not be used because caching has been disabled.\nApplication bundle generation failed. [3.954 seconds]\n\n✘ [ERROR] Angular compilation initialization failed. [plugin angular-compiler]\n\n  _0xf01bc2@https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/blitz.d3acb9e1.js:40:830459\n  Hash@https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/builtins.ddb8d84d.js:70:945\n  createHash@https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/builtins.ddb8d84d.js:24:2531\n  transformStylesheet@file:///home/angular/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js#cjs:160:64\n  createAngularCompilerHost/host.transformResource@file:///home/angular/node_modules/@angular/build/src/tools/angular/angular-host.js#cjs:116:42\n  preprocessInline@file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:2414:48\n  preanalyze/</styles<@file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-OM3GHCE5.js:14014:81\n  preanalyze/<@file:///home/angular/node_modules/@angular/compiler-cli/bundles/chunk-OM3GHCE5.js:14014:46\n  then/<@https://so2fqtogc510j58w5ahdcnak4woelj-3g25.w-corp-staticblitz.com/blitz.d3acb9e1.js:40:22695\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\nOS/Device\n\nWindows 11 Home\n\nBrowser(s):\n\nChrome\nVersion 131.0.6778.86 (Official Build) (64-bit)\n\nFirefox\n132.0.2 (64-bit)\n\n### Provide any additional information here in as much as detail as you can\n\nN/A","Url":"https://github.com/angular/angular-cli/issues/28925","RelatedDescription":"Closed issue \"adev(bug): \"Learn Angular in the Browser\" breaks with `styles`\" (#28925)"},{"Id":"2680135853","IsPullRequest":true,"CreatedAt":"2024-11-21T17:49:05","Actor":"clydin","Number":"28926","RawContent":null,"Title":"fix(@angular/build): use `sha256` instead of `sha-256` as hash algorithm name","State":"closed","Body":"Stackblitz appears to fail when attempting to use `crypto.createHash` with an algorithm value of `sha-256`. Since Node.js supports both the hyphenated and unhyphenated values, the later is now used to avoid issues when running on Stackblitz.","Url":"https://github.com/angular/angular-cli/pull/28926","RelatedDescription":"Closed or merged PR \"fix(@angular/build): use `sha256` instead of `sha-256` as hash algorithm name\" (#28926)"},{"Id":"2679774955","IsPullRequest":false,"CreatedAt":"2024-11-21T17:28:06","Actor":"willemtoerien","Number":"28922","RawContent":null,"Title":"ng serve - Cannot GET /","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI get Cannot GET / when I run the application on first install and start.\n\n1. `ng new test`\n2. Which stylesheet format would you like to use? Sass (SCSS)\n3. Do you want to enable Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering)? yes\n4. Would you like to use the Server Routing and App Engine APIs (Developer Preview) for this server application? yes\n6. `npm start`\n\n![Image](https://github.com/user-attachments/assets/46e21b73-3ad8-40dd-ab81-1acda2e9b86a)\n\n5. `npm run build`\n6. `npm serve:ssr:test`\n\n![Image](https://github.com/user-attachments/assets/b755196f-c180-4c36-926e-d3d5535259e5)\n\nFrom what I can see in the following code, `response` is null.\n```ts\napp.use('/**', (req, res, next) => {\n  angularApp\n    .handle(req)\n    .then((response) =>\n      response ? writeResponseToNodeResponse(response, res) : next(),\n    )\n    .catch(next);\n});\n```\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nCannot GET /\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 23.1.0 (Unsupported)\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0 (cli-only)\n@angular-devkit/core         19.0.0 (cli-only)\n@angular-devkit/schematics   19.0.0 (cli-only)\n@schematics/angular          19.0.0 (cli-only)\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28922","RelatedDescription":"Closed issue \"ng serve - Cannot GET /\" (#28922)"},{"Id":"2680236974","IsPullRequest":true,"CreatedAt":"2024-11-21T17:04:39","Actor":"devversion","Number":"28927","RawContent":null,"Title":"[WIP] Bazel infrastructure testing","State":"closed","Body":"WIP — don't look at it","Url":"https://github.com/angular/angular-cli/pull/28927","RelatedDescription":"Closed or merged PR \"[WIP] Bazel infrastructure testing\" (#28927)"},{"Id":"2679842534","IsPullRequest":true,"CreatedAt":"2024-11-21T16:30:00","Actor":"alan-agius4","Number":"28923","RawContent":null,"Title":"test: add end-to-end tests for SSR setup","State":"closed","Body":"This commit introduces end-to-end (e2e) tests to validate the server-side rendering (SSR) setup.\r\n","Url":"https://github.com/angular/angular-cli/pull/28923","RelatedDescription":"Closed or merged PR \"test: add end-to-end tests for SSR setup\" (#28923)"},{"Id":"2679883799","IsPullRequest":false,"CreatedAt":"2024-11-21T15:23:02","Actor":"exasky","Number":"28924","RawContent":null,"Title":"build-angular:dev-server with code-server produces 404 on generated chunks","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [x] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n- Launch code-server instance on docker and create angular 18/19 project\n- Change base href in index.html to `<base href=\"/proxy/4200/\" />`\n- Add some lazy loaded routes\n- Launch project \n- Go to 'local_ip'/proxy/4200\n\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nExpected behavior : load generated chunks correctly\n\nActual : Chunks are not loaded from generated main.js\n\n\n### Please provide a screenshot if possible [Bug Report only]\n\nNo chunks loaded from main.js\n![Image](https://github.com/user-attachments/assets/c87da074-bd74-4268-8665-271828594272)\n\nmain.js first line : `import {$ as y, Aa as L, ...j, za as H} from \"/chunk-OUDURTJQ.js\";`\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\nAs main.js does import from \"/chunk-XXX\", and code-serve does serve my app in '/proxy/4200', the 'chunk-XXX' cannot be loaded, resulting screenshot error\n\nI tried using angular builtin 'baseHref', without success\n```\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\nN/A\n```\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28924","RelatedDescription":"Closed issue \"build-angular:dev-server with code-server produces 404 on generated chunks\" (#28924)"},{"Id":"2679308046","IsPullRequest":false,"CreatedAt":"2024-11-21T14:08:38","Actor":"ManuelRauber","Number":"28921","RawContent":null,"Title":"Hybrid rendering without any pre-rendered routes should not execute application bootstrapping","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFor my use-case I use Angular 19 Hybrid SSR. For now, I only need the SSR part, not making use of any other `RenderMode`, but I want to keep the doors open for later.\n\nDuring the bootstrap of the application I'm using an app initializer to get some data via HTTP. The website cannot run without it (think of getting different configurations from an API depending on the hostname), so it makes sense to get the data as soon as possible and assume the website always runs with a preloaded configuration. \n\nWhen I use [Angular SSR](https://angular.dev/guide/ssr) my builds works as expected.\nWhen I sure [Angular Hybrid SSR](https://angular.dev/guide/hybrid-rendering) my build hangs because it tries to make a request to the API which is not available on the build server. \n\nThe configuration for Hybrid SSR is:\n\n```\n// angular.json\n\"outputMode\": \"server\"\n\n// app.routes.server.ts\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: '**',\n    renderMode: RenderMode.Server\n  }\n];\n```\n\nAs you can see, there's no pre-rendering involved. \n\nI want to use Hybrid SSR because it makes use of the same request handler during development where the normal SSR uses its own internal SSR middleware. Using the same handler seems more error-proof to me.\n\n### Minimal Reproduction\n\nFor both examples make sure to have Angular 19 installed.\n\n#### Example with Angular SSR\n\n1. `ng new v19ssr --ssr`\n2. In `app.config.ts` add an app initializer: `provideAppInitializer(() => console.log('Hello'))`\n3. In `angular.json` change the existing `prerender` to `false`.\n4. Run `ng build`\n\nObserve, that there is no `Hello` in your console.\nThis is as it should be.\n\n#### Example with Angular Hybrid SSR\n\n1. `ng new v19ssrSR --ssr --server-routing`\n2. In `app.config.ts` add an app initializer: `provideAppInitializer(() => console.log('Hello'))`\n3. In `app.routes.server.ts` switch the render mode to `Server`\n4. In `angular.json` change the `outputMode` to `server`\n5. Run `ng build`\n\nObserve, that there is `Hello` in your console, so the whole app has been boostrapped even when there is no route to prerender.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.0\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0\n@angular-devkit/build-angular   19.0.0\n@angular-devkit/core            19.0.0\n@angular-devkit/schematics      19.0.0\n@schematics/angular             19.0.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28921","RelatedDescription":"Closed issue \"Hybrid rendering without any pre-rendered routes should not execute application bootstrapping\" (#28921)"},{"Id":"2679091395","IsPullRequest":true,"CreatedAt":"2024-11-21T11:20:49","Actor":"alan-agius4","Number":"28919","RawContent":null,"Title":"feat(@angular/ssr): add `modulepreload` for lazy-loaded routes","State":"open","Body":"Enhance performance when using SSR by adding `modulepreload` links to lazy-loaded routes. This ensures that the required modules are preloaded in the background, improving the user experience and reducing the time to interactive.\r\n\r\nCloses #26484","Url":"https://github.com/angular/angular-cli/pull/28919","RelatedDescription":"Open PR \"feat(@angular/ssr): add `modulepreload` for lazy-loaded routes\" (#28919)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2687644845","IsPullRequest":true,"CreatedAt":"2024-11-24T11:53:13","Actor":"crisbeto","Number":"30073","RawContent":null,"Title":"fix(multiple): use cross-compatible type for setTimeout","State":"open","Body":"Fixes that some places were raising an error due to the return type of `setTimeout` being different between the browser and Node.","Url":"https://github.com/angular/components/pull/30073","RelatedDescription":"Open PR \"fix(multiple): use cross-compatible type for setTimeout\" (#30073)"},{"Id":"2686512799","IsPullRequest":false,"CreatedAt":"2024-11-23T19:45:11","Actor":"0xFACE","Number":"30072","RawContent":null,"Title":"docs-bug(COMPONENT): TITLE","State":"open","Body":"### Documentation Feedback\n\nI get following warning when building the application:\n`The same typography styles are generated multiple times. Read more about how style duplication can be avoided in a dedicated guide. https://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md [plugin angular-sass]`\n\nBut the link provided does not exist (404 error).\n\n\n### Affected documentation page\n\nhttps://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md","Url":"https://github.com/angular/components/issues/30072","RelatedDescription":"Open issue \"docs-bug(COMPONENT): TITLE\" (#30072)"},{"Id":"2684539001","IsPullRequest":false,"CreatedAt":"2024-11-22T20:18:48","Actor":"royeradames","Number":"30071","RawContent":null,"Title":"Angular Material Migration Pain Point: Version Lock-in Prevents Incremental Updates","State":"open","Body":"## Issue Description\nWhen upgrading from Angular Material v12 to v18, organizations face significant challenges due to:\n\n1. Inability to run different versions of Material UI simultaneously during migration\n2. Requirement to upgrade both Angular and Material UI versions together\n3. Major internal architecture changes in Material UI (particularly v14-15)\n4. No supported path for incremental component migration\n\n## Impact\n\n- Large applications with custom Material UI implementations are effectively locked into Angular 14 or below.\n- Organizations must choose between:\n\n  - Maintaining legacy versions indefinitely\n  - Complete system-wide upgrade with significant business impact\n\n\n- Increased technical debt as teams delay upgrades\n- Higher migration costs due to required \"big bang\" approach\n\n## Requested Solution\nPlease consider implementing:\n\n1. Support for running multiple Material versions simultaneously\n2. Backward compatibility layers for core APIs\n3. Tooling for incremental migration paths\n\n## Context\nOur organization maintains a large Angular application using Material UI v12 with extensive customizations. The current upgrade path requirements make it nearly impossible to maintain both system stability and technical currency. Due to this pain point the company has decided to move to another framework.","Url":"https://github.com/angular/components/issues/30071","RelatedDescription":"Open issue \"Angular Material Migration Pain Point: Version Lock-in Prevents Incremental Updates\" (#30071)"},{"Id":"2684290032","IsPullRequest":false,"CreatedAt":"2024-11-22T19:14:07","Actor":"amysorto","Number":"30070","RawContent":null,"Title":"feat(material/theming): Add palette values to system variables","State":"open","Body":"### Feature Description\n\nPrior to the `theme` mixin you could [access palette tone colors from the theme object](https://v18.material.angular.io/guide/theming-your-components#reading-tonal-palette-colors). It would be useful to add this as system variables for parity. Apps that use the `theme` mixin don't have a theme object anymore and may still want to access those colors.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30070","RelatedDescription":"Open issue \"feat(material/theming): Add palette values to system variables\" (#30070)"},{"Id":"2683664270","IsPullRequest":false,"CreatedAt":"2024-11-22T15:48:56","Actor":"ManicardiFrancesco","Number":"30069","RawContent":null,"Title":"bug(MatTooltip): Can't scroll if target element has matTooltip","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAccording to Issue 4892, this bug should've been fixed in Angular 11+\n\n### Description\n\nScrolling on a touch device doesn't work if the target of the gesture is an element using matTooltip.\nThis is apparently a regression as people mentioned it being fixed in angular 11+:\nhttps://github.com/angular/components/issues/4892\n\nTagging @wagnermaciel @crisbeto and @jelbourn as they commented on the previous issue.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nnqsnt?file=src%2Fmain.html\nSteps to reproduce:\n1. Open the stackblitz link with a touch enabled device (I tested with my Android phone and Firefox browser)\n2. Try scrolling the element - it will not scroll if you target the \"This will not scroll with touch\" text.\n\nI also included a CSS workaround which appears to be working but shouldn't be necessary.\n\n### Expected Behavior\n\nScrolling behavior should not be affected by the presence or absence of a mat tooltip.\n\n### Actual Behavior\n\nScrolling behavior is disabled by targeting a mat tooltip element.\n\n### Environment\n\n- Angular: \n- Angular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n- CDK/Material:    \"@angular/material\": \"^19\"\n\n- Browser(s): Firefox \n- Operating System (e.g. Windows, macOS, Ubuntu): Android\n","Url":"https://github.com/angular/components/issues/30069","RelatedDescription":"Open issue \"bug(MatTooltip): Can't scroll if target element has matTooltip\" (#30069)"},{"Id":"2683276552","IsPullRequest":true,"CreatedAt":"2024-11-22T13:49:18","Actor":"im100ra","Number":"30068","RawContent":null,"Title":"fix(docs): add example for adding icon in meta section using matListI…","State":"open","Body":"resolves #26415","Url":"https://github.com/angular/components/pull/30068","RelatedDescription":"Open PR \"fix(docs): add example for adding icon in meta section using matListI…\" (#30068)"},{"Id":"2683246726","IsPullRequest":true,"CreatedAt":"2024-11-22T13:47:34","Actor":"im100ra","Number":"30067","RawContent":null,"Title":"Fix list item meta icons docs","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30067","RelatedDescription":"Closed or merged PR \"Fix list item meta icons docs\" (#30067)"},{"Id":"2681092105","IsPullRequest":false,"CreatedAt":"2024-11-22T11:26:57","Actor":"f-mon","Number":"30061","RawContent":null,"Title":"bug(timepicker): cannot disable timepicker from template","State":"closed","Body":"\n### Description\n\nThe disable input in timepicker.ts component is protected so angular compiler reports an error if you try to diable it from template:\n\n\n```\n<mat-form-field>\n  <mat-label>Pick a time</mat-label>\n  <input matInput [matTimepicker]=\"picker\" disabled >\n  <mat-timepicker-toggle matIconSuffix [for]=\"picker\"/>\n  <mat-timepicker #picker/>\n</mat-form-field>\n```\n\n\n\ncompiling will report:\n\n\n```\n\nError: src/example/timepicker-overview-example.html:4:44 - error TS2445: Property 'disabledInput' is protected and only accessible within class 'MatTimepickerInput<D>' and its subclasses.\n\n4   <input matInput [matTimepicker]=\"picker\" disabled >\n                                             ~~~~~~~~\n\n  src/example/timepicker-overview-example.ts:10:16\n    10   templateUrl: 'timepicker-overview-example.html',\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/tn1pxy?file=src%2Fexample%2Ftimepicker-overview-example.html\n\n\n### Expected Behavior\n\nshould be possible to disable the timepicker field from template\n\n### Actual Behavior\n\nit reports a compiling error\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n","Url":"https://github.com/angular/components/issues/30061","RelatedDescription":"Closed issue \"bug(timepicker): cannot disable timepicker from template\" (#30061)"},{"Id":"2682254799","IsPullRequest":true,"CreatedAt":"2024-11-22T11:26:56","Actor":"crisbeto","Number":"30063","RawContent":null,"Title":"fix(material/timepicker): make disabled input public","State":"closed","Body":"Initially the `disabled` input was marked as `protected`, because the actual disabled state is a `computed`. This seems to break with some compiler options so these changes switches it to be public.\r\n\r\nFixes #30061.","Url":"https://github.com/angular/components/pull/30063","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): make disabled input public\" (#30063)"},{"Id":"2682694340","IsPullRequest":true,"CreatedAt":"2024-11-22T11:26:37","Actor":"im100ra","Number":"30064","RawContent":null,"Title":"fix(docs): update document refs to mat-chip-set","State":"closed","Body":"resolves #29943","Url":"https://github.com/angular/components/pull/30064","RelatedDescription":"Closed or merged PR \"fix(docs): update document refs to mat-chip-set\" (#30064)"},{"Id":"2682836813","IsPullRequest":true,"CreatedAt":"2024-11-22T11:10:08","Actor":"ElDemetriou","Number":"30066","RawContent":null,"Title":"Update package.json","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30066","RelatedDescription":"Closed or merged PR \"Update package.json\" (#30066)"},{"Id":"2682735244","IsPullRequest":false,"CreatedAt":"2024-11-22T10:28:17","Actor":"anlexN","Number":"30065","RawContent":null,"Title":"docs-bug(COMPONENT): I can not use 0.0.0.0 ?","State":"open","Body":"### Documentation Feedback\n\nI want to change localhost to 0.0.0.0 ?\n\n![Image](https://github.com/user-attachments/assets/59f5c211-4dcb-47aa-a3b0-04b7bccacf35)\n\nI have tried:\n\n![Image](https://github.com/user-attachments/assets/2e8c82c5-7d76-4bf8-ab8d-01133f1961cb)\n\nI tried this:\n\n![Image](https://github.com/user-attachments/assets/a6e7f709-bedd-46e9-a89e-33edc968145a)\n\nor I tried this:\n\n![Image](https://github.com/user-attachments/assets/e0546673-fc45-4d19-ba39-80cdaed6a7b0)\n\nBecause I use docker in the windows. I want to access docker's ibazel url in the windows.\n\nBut `--host=0.0.0.0` is wrong.\n\n### Affected documentation page\n\nhttps://material.angular.io/guides","Url":"https://github.com/angular/components/issues/30065","RelatedDescription":"Open issue \"docs-bug(COMPONENT): I can not use 0.0.0.0 ?\" (#30065)"},{"Id":"2679400707","IsPullRequest":true,"CreatedAt":"2024-11-22T08:06:24","Actor":"Sepandard","Number":"30059","RawContent":null,"Title":"fix(docs): update errorState example to cover handle missing state","State":"closed","Body":"resolves#29750","Url":"https://github.com/angular/components/pull/30059","RelatedDescription":"Closed or merged PR \"fix(docs): update errorState example to cover handle missing state\" (#30059)"},{"Id":"2681230953","IsPullRequest":false,"CreatedAt":"2024-11-21T22:47:53","Actor":"Frankystan","Number":"30062","RawContent":null,"Title":"bug(CHIPS): Global configuration (provider) for MatChipsModule does not work","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you create a provider to configure adding chips behaviour globally such as when user press COMMA, SPACE or ENTER keycodes , chips are not shown/added to the input.\n// custom-chips.provider.ts\nimport { Provider } from '@angular/core';\nimport { MAT_CHIPS_DEFAULT_OPTIONS } from '@angular/material/chips';\nimport { ENTER, COMMA, SPACE } from '@angular/cdk/keycodes';\n\n\nexport const provideCustomChipsProvider: Provider[] = [\n    {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n            separatorKeyCodes: [COMMA, ENTER, SPACE],\n        },\n        multi: true,\n    },\n];\n\n// Usage in app.config.ts\n...\nimport { provideCustomChipsProvider } from '@providers/custom-chips.provider';\n\nexport const appConfig: ApplicationConfig = {\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideAnimationsAsync(),\n        provideHttpClient(),\n        provideRouter(APP_ROUTES, withComponentInputBinding()),\n        .....\n       provideCustomChipsProvider,\n    ],\n};\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Create provider file for custom configuration for Material Chips named:  custom-chips.provider.ts:\n```\nimport { Provider } from '@angular/core';\nimport { MAT_CHIPS_DEFAULT_OPTIONS } from '@angular/material/chips';\nimport { ENTER, COMMA, SPACE } from '@angular/cdk/keycodes';\n\n\nexport const provideCustomChipsProvider: Provider[] = [\n    {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n            separatorKeyCodes: [COMMA, ENTER, SPACE],\n        },\n        multi: true,\n    },\n];\n```\n\n2. Import it in app.config.ts\n```\nimport { provideCustomChipsProvider } from '@providers/custom-chips.provider';\n\nexport const appConfig: ApplicationConfig = {\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideAnimationsAsync(),\n        provideHttpClient(),\n        provideRouter(APP_ROUTES, withComponentInputBinding()),\n        .....\n       provideCustomChipsProvider,\n    ],\n};\n```\n\n### Expected Behavior\n\nChips added to the input they belong as soon as user press COMMA, SPACE or ENTER keycodes, previously configured in a custom provider\n\n### Actual Behavior\n\nChips are not added to the input they belong to\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30062","RelatedDescription":"Open issue \"bug(CHIPS): Global configuration (provider) for MatChipsModule does not work\" (#30062)"},{"Id":"2679342286","IsPullRequest":false,"CreatedAt":"2024-11-21T21:40:44","Actor":"marcelMaier","Number":"30058","RawContent":null,"Title":"bug(Timepicker): Timepicker design against Material 3 specifications","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe Timepicker we got with @angular/material 19 doesn't look like it should be according to the Material 3 specifications.\n\n### Reproduction\n\nRight now it's more like a select list with different times: https://material.angular.io/components/timepicker/overview\nBut this is far away from the Material specifications and I don't think it's a good UI/UX experience either.\n\n### Expected Behavior\n\nThe Timepicker should work, look and feel like described in the official material specifications over here: https://m3.material.io/components/time-pickers/overview.\n\n![Image](https://github.com/user-attachments/assets/dcac0cba-1885-426c-802e-063b29cf1be5)\n\nI also found this open source example which I would expect it to be: https://dev.to/dhutaryan/a-new-material-timepicker-component-51aj\n\n### Actual Behavior\n\nIt doesn't look like in the specifications, and I think this is not the UI quality most of us expect from the material components.\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Every Browser\n- Operating System (e.g. Windows, macOS, Ubuntu): Every operating system\n","Url":"https://github.com/angular/components/issues/30058","RelatedDescription":"Closed issue \"bug(Timepicker): Timepicker design against Material 3 specifications\" (#30058)"},{"Id":"2680040312","IsPullRequest":true,"CreatedAt":"2024-11-21T16:04:42","Actor":"josephperrott","Number":"30060","RawContent":null,"Title":"ci: update to latest actions from angular/dev-infra","State":"closed","Body":"Update to latest commit","Url":"https://github.com/angular/components/pull/30060","RelatedDescription":"Closed or merged PR \"ci: update to latest actions from angular/dev-infra\" (#30060)"},{"Id":"2678929485","IsPullRequest":true,"CreatedAt":"2024-11-21T10:33:48","Actor":"crisbeto","Number":"30057","RawContent":null,"Title":"fix(material/sort): simplify animations","State":"open","Body":"For a long time the sort header's animation was set up by rendering out 4 `div` elements and then arranging them to look like an arrow. This is somewhat complicated to maintain, difficult to customize, in some cases it leads to weird visual bugs and ends up triggering excessive change detections. On top of that, because it depends on `@angular/animations`, it is prone to memory leaks (see https://github.com/angular/angular/issues/54149).\r\n\r\nThese changes aim to simplify the component and make it more robust by using an `svg` icon and dealing with the animations using CSS.\r\n\r\nFixes #9758.\r\nFixes #9844.\r\nFixes #10088.\r\nFixes #15451.\r\nFixes #19441.\r\nFixes #10242.","Url":"https://github.com/angular/components/pull/30057","RelatedDescription":"Open PR \"fix(material/sort): simplify animations\" (#30057)"},{"Id":"2677808709","IsPullRequest":false,"CreatedAt":"2024-11-21T03:04:38","Actor":"SvenBudak","Number":"30056","RawContent":null,"Title":"bug(Mat Slider): mark--active class is set incorrectly","State":"open","Body":"![Image](https://github.com/user-attachments/assets/aced39bd-51ef-4c29-80be-06d9309a2e17)\n\nThe problem is so easy to describe that I hope I can get away with this screenshot... It's just that when the slider is set to the last step, the last mark is set as inactive... Which is of course wrong.","Url":"https://github.com/angular/components/issues/30056","RelatedDescription":"Open issue \"bug(Mat Slider): mark--active class is set incorrectly\" (#30056)"},{"Id":"2677330257","IsPullRequest":false,"CreatedAt":"2024-11-20T22:05:13","Actor":"martinboue","Number":"30055","RawContent":null,"Title":"docs-bug(*): Missing migration guide to v19","State":"open","Body":"### Documentation Feedback\n\nI'm struggling to migrate from Angular Material v18 (with MD3) to v19. I did not find any migration guide and the new guides do not explain the basics as deeply as in the previous version.\n\nHere are the most important use cases that I don't know how to deal with:\n\n> Note: I'm trying to remove the old `$theme = mat.define-theme(...)` to use the new `@include mat.theme` mixins\n\n## Styling custom components\n### Before\n```\n.my-component {\n   background-color: mat.get-theme-color(theme.$theme, neutral, 98)\n}\n```\n### After\nI cannot use mat.get-theme-color because I don't have a $theme anymore (previously from mat.define-theme). How can I do that?\n\n## Material 3 theme setup\n### Before\n```\n@include mat.core();\n:root {\n   @include mat.core-theme(theme.$light-theme);\n}\n```\n\n### After \nIt has been automatically replaced to:\n\n```\n@include mat.elevation-classes();\n@include mat.app-background();\n:root {\n   @include mat.elevation-classes();\n   @include mat.app-background();\n}\n```\nWhat is it for? Why isn't it present if I create a new application with Angular Material? Should it be duplicated? I don't see any documentation mentioning those mixins.\n\n## Customising material components\n### Before\nI could do this:\n```\n@include mat.chips-color(theme.$theme, $color-variant: primary);\n@include mat.form-field-density(-3);\n```\n\n### After\nHow to do the same? Do I need to use the new overrides mixins and set each color tokens? For example, that would be 25 colors for the chip component.\n \n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30055","RelatedDescription":"Open issue \"docs-bug(*): Missing migration guide to v19\" (#30055)"},{"Id":"2676796920","IsPullRequest":true,"CreatedAt":"2024-11-20T19:57:28","Actor":"josephperrott","Number":"30054","RawContent":null,"Title":"ci: update to latest actions from angular/dev-infra","State":"closed","Body":"Update to latest commit","Url":"https://github.com/angular/components/pull/30054","RelatedDescription":"Closed or merged PR \"ci: update to latest actions from angular/dev-infra\" (#30054)"},{"Id":"2676796225","IsPullRequest":true,"CreatedAt":"2024-11-20T18:45:57","Actor":"DBowen33","Number":"30053","RawContent":null,"Title":"fix(material/select): fix panel max height","State":"closed","Body":"fix panel max height so that panel does not get cutoff at 200% zoom on 1024x768 pixel view\r\n\r\nfixes b/286420340","Url":"https://github.com/angular/components/pull/30053","RelatedDescription":"Closed or merged PR \"fix(material/select): fix panel max height\" (#30053)"},{"Id":"2672674793","IsPullRequest":false,"CreatedAt":"2024-11-20T12:02:27","Actor":"SharadKamate","Number":"30044","RawContent":null,"Title":"Mat-datepicker  default date binding after focus out of partial manual entry","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMat datepicker partial manual entry taking default 2001 date year.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nNot working\n\n### Actual Behavior\n\nDefault date binding\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30044","RelatedDescription":"Closed issue \"Mat-datepicker  default date binding after focus out of partial manual entry\" (#30044)"},{"Id":"2675332912","IsPullRequest":false,"CreatedAt":"2024-11-20T12:01:56","Actor":"dinesh250-star","Number":"30052","RawContent":null,"Title":"Angular 18 tokens no longer emitted","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nIn angular 18, tokens which were previously available for customizing a component is not emitted anymore.  Is this approach not used anymore?\nhttps://v18.material.angular.io/guide/theming#granular-customizations-with-css-custom-properties\neg-\n  --mdc-checkbox-unselected-hover-state-layer-color: red;\n  --mdc-checkbox-unselected-hover-icon-color: red;\n\nInstead a new way to override components has been introduced.\nhttps://material.angular.io/guide/theming#component-tokens\neg - \n elevated-container-color: red,\n elevated-container-shape: 32px,\n title-text-size: 2rem,\n\nWhat is the right way to use them? In angular 18, we used the first link but now when moving to angular 19 do we need to change it again?\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nAccording to angular 18 docs we should have got token emitted but its not defined by default in angular material. Instead in style section of angular 19 we have new way to customize components.\n\n### Actual Behavior\n\nInstead of new way to override we should have got token which was in angular 18 as promised.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30052","RelatedDescription":"Closed issue \"Angular 18 tokens no longer emitted\" (#30052)"},{"Id":"2675239037","IsPullRequest":true,"CreatedAt":"2024-11-20T10:03:55","Actor":"PowerKiKi","Number":"30051","RawContent":null,"Title":"docs(material/ timepicker): must provide a MatTimepickerConfig, not MatTimepickerOption","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30051","RelatedDescription":"Closed or merged PR \"docs(material/ timepicker): must provide a MatTimepickerConfig, not MatTimepickerOption\" (#30051)"},{"Id":"2675221518","IsPullRequest":false,"CreatedAt":"2024-11-20T09:42:17","Actor":"Xylios13","Number":"30050","RawContent":null,"Title":"bug(CdkMenuItem): Main menu closes after clicking on a menu item that is a menu","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nClicking on a menu item that is also a menu will close the whole menu, instead of closing only the opened submenu.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/4aortd\nSteps to reproduce:\n1. Click on `File` button\n2. Click on `New` menu item\n\n\n### Expected Behavior\n\nThe submenu for the `New` menu item is closed  (or kept open), the menu associated with `File` is kept open (like a `CdkMenuBar` or the menu nested example: https://material.angular.io/components/menu/examples#menu-nested)\n\n### Actual Behavior\n\nThe submenu for the `New` menu item is closed and the `File` menu is closed as well.\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): 131.0.6778.70 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 Pro\n","Url":"https://github.com/angular/components/issues/30050","RelatedDescription":"Open issue \"bug(CdkMenuItem): Main menu closes after clicking on a menu item that is a menu\" (#30050)"},{"Id":"2674219860","IsPullRequest":false,"CreatedAt":"2024-11-20T03:29:23","Actor":"danielalexis","Number":"30049","RawContent":null,"Title":"bug(Button): Ripple color is not automatically calculated","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using mat.button-overrides() when changing the filled-ripple-color property the ripple becames the full color instead of having an opacity of 12%\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-heyt9c\nSteps to reproduce:\n1. Press on button\n2. Wrong opacity is displayed\n\nin the SCSS file theres the right way to do it\n\n### Expected Behavior\n\nRipple have a subtle color, opacity 12%\nExpected Color: ![Image](https://github.com/user-attachments/assets/947b27c6-591e-47ee-9845-00645de10afd)\n\n\n### Actual Behavior\n\nRipple has full color\nActual behavior: ![Image](https://github.com/user-attachments/assets/019fefde-e369-4403-a615-261477fb12c1)\n\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Firefox 132\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30049","RelatedDescription":"Open issue \"bug(Button): Ripple color is not automatically calculated\" (#30049)"},{"Id":"2673437155","IsPullRequest":false,"CreatedAt":"2024-11-19T23:45:17","Actor":"adamlwomble","Number":"30048","RawContent":null,"Title":"docs-bug(app): theme text colors are inaccessible","State":"closed","Body":"### Documentation Feedback\n\nThe text on documentation pages is difficult to read when the Cyan & Orange theme is selected: e.g., the page text for the Autocomplete component seems to be the color `rgb(26, 27, 31)` while the background-color for the page seems to be `rgb(16, 20, 20)`, which yields a color contrast ratio of about 1.07:1.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/autocomplete/overview","Url":"https://github.com/angular/components/issues/30048","RelatedDescription":"Closed issue \"docs-bug(app): theme text colors are inaccessible\" (#30048)"},{"Id":"2672780149","IsPullRequest":true,"CreatedAt":"2024-11-19T16:36:56","Actor":"crisbeto","Number":"30047","RawContent":null,"Title":"docs: release notes for the v19.0.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30047","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0 release\" (#30047)"},{"Id":"2672772165","IsPullRequest":true,"CreatedAt":"2024-11-19T16:33:45","Actor":"crisbeto","Number":"30046","RawContent":null,"Title":"Bump version to \"v19.0.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30046","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0\" with changelog.\" (#30046)"},{"Id":"2672741683","IsPullRequest":true,"CreatedAt":"2024-11-19T16:26:58","Actor":"crisbeto","Number":"30045","RawContent":null,"Title":"build: update to v19 final","State":"closed","Body":"Updates the repo to the final v19 version.","Url":"https://github.com/angular/components/pull/30045","RelatedDescription":"Closed or merged PR \"build: update to v19 final\" (#30045)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-25T03:30:02.3224055Z","RunDurationInMilliseconds":1589}