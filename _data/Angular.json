{"Data":{"Angular-Issues":{"Issues":[{"Id":"2771808731","IsPullRequest":true,"CreatedAt":"2025-01-07T03:19:33","Actor":"zhangenming","Number":"59388","RawContent":null,"Title":"fix link.","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59388","RelatedDescription":"Open PR \"fix link.\" (#59388)"},{"Id":"2770442419","IsPullRequest":true,"CreatedAt":"2025-01-06T22:30:47","Actor":"hardikpatel043","Number":"59374","RawContent":null,"Title":"docs(changelog): removed repetitive point from CHANGELOG.md of 18.0.0","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCHANGELOG.md has repetitive point mentioned as breaking changes mentioned under 18.0.0 (2024-05-22)\r\n\r\ncore\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWith this PR, repetitive point has been removed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59374","RelatedDescription":"Closed or merged PR \"docs(changelog): removed repetitive point from CHANGELOG.md of 18.0.0\" (#59374)"},{"Id":"2771459606","IsPullRequest":true,"CreatedAt":"2025-01-06T22:24:10","Actor":"thePunderWoman","Number":"59385","RawContent":null,"Title":"[patch] build: lock file maintenance","State":"closed","Body":"This is a Patch only clone of #59291\r\n\r\nThis PR contains the following updates:\r\n\r\n| Update | Change |\r\n|---|---|\r\n| lockFileMaintenance | All locks refreshed |\r\n\r\n🔧 This Pull Request updates lock files to use the latest dependency versions.\r\n\r\n---\r\n\r\n### Configuration\r\n\r\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\r\n\r\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\r\n\r\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\r\n\r\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\r\n\r\n---\r\n\r\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\r\n\r\n---\r\n","Url":"https://github.com/angular/angular/pull/59385","RelatedDescription":"Closed or merged PR \"[patch] build: lock file maintenance\" (#59385)"},{"Id":"2771538493","IsPullRequest":true,"CreatedAt":"2025-01-06T22:16:14","Actor":"arturovt","Number":"59387","RawContent":null,"Title":"refactor(core): prevent duplicating LView destroyed checks","State":"open","Body":"The `type_checks` module already exposes a utility function that checks whether `LView` is marked as destroyed. There is no need to check flags in other places, as we can reuse the helper function.","Url":"https://github.com/angular/angular/pull/59387","RelatedDescription":"Open PR \"refactor(core): prevent duplicating LView destroyed checks\" (#59387)"},{"Id":"2771472592","IsPullRequest":true,"CreatedAt":"2025-01-06T21:36:01","Actor":"thePunderWoman","Number":"59386","RawContent":null,"Title":"Revert \"refactor(core): remove unused injection props (#59209)\"","State":"closed","Body":"This reverts commit 91b53881d1cedec7173929874a6960780bc8b1d3.\r\n","Url":"https://github.com/angular/angular/pull/59386","RelatedDescription":"Closed or merged PR \"Revert \"refactor(core): remove unused injection props (#59209)\"\" (#59386)"},{"Id":"2771413253","IsPullRequest":true,"CreatedAt":"2025-01-06T20:42:40","Actor":"JeanMeche","Number":"59384","RawContent":null,"Title":"docs(docs-infra): fix entry labels.","State":"open","Body":"fixes #59382\r\n","Url":"https://github.com/angular/angular/pull/59384","RelatedDescription":"Open PR \"docs(docs-infra): fix entry labels.\" (#59384)"},{"Id":"2768200841","IsPullRequest":true,"CreatedAt":"2025-01-06T19:58:32","Actor":"maxktz","Number":"59359","RawContent":null,"Title":"docs: update copyright year","State":"closed","Body":"Happy new year, love your project <3","Url":"https://github.com/angular/angular/pull/59359","RelatedDescription":"Closed or merged PR \"docs: update copyright year\" (#59359)"},{"Id":"2771280894","IsPullRequest":true,"CreatedAt":"2025-01-06T19:15:55","Actor":"RafaelJCamara","Number":"59383","RawContent":null,"Title":"docs: add $default to path","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nIssue Number: #59378\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/59383","RelatedDescription":"Open PR \"docs: add $default to path\" (#59383)"},{"Id":"2771278450","IsPullRequest":false,"CreatedAt":"2025-01-06T19:14:11","Actor":"timdeschryver","Number":"59382","RawContent":null,"Title":"Developer preview label not showing correctly","State":"open","Body":"### Describe the problem that you experienced\n\nIt seems as the style for the developer preview label is broken.\nThis happens on all pages containing a developer preview label, in light and dark theme, and on every browser.\n\n![Image](https://github.com/user-attachments/assets/4680cbae-4915-4b57-97e7-4bdf2dd694d9)\n\n\n### Enter the URL of the topic with the problem\n\n https://angular.dev/api/core/effect?tab=description\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59382","RelatedDescription":"Open issue \"Developer preview label not showing correctly\" (#59382)"},{"Id":"2771154721","IsPullRequest":true,"CreatedAt":"2025-01-06T17:53:14","Actor":"arturovt","Number":"59381","RawContent":null,"Title":"refactor(core): drop `DEFER_BLOCK_DEPENDENCY_INTERCEPTOR` in production","State":"open","Body":"`new` expressions are not dropped by default because they are considered side-effectful, even if they are not referenced anywhere in production mode.","Url":"https://github.com/angular/angular/pull/59381","RelatedDescription":"Open PR \"refactor(core): drop `DEFER_BLOCK_DEPENDENCY_INTERCEPTOR` in production\" (#59381)"},{"Id":"2768664948","IsPullRequest":true,"CreatedAt":"2025-01-06T17:25:27","Actor":"crisbeto","Number":"59362","RawContent":null,"Title":"fix(compiler): allow $any in two-way bindings","State":"closed","Body":"Some time ago we narrowed down the expressions we support in two-way bindings, because in most cases any apart from property reads doesn't make sense. This ended up preventing users from using `$any` in the binding since it's considered a function call.\r\n\r\nThese changes update the validation logic to allow `$any`.\r\n\r\nFixes #51165.","Url":"https://github.com/angular/angular/pull/59362","RelatedDescription":"Closed or merged PR \"fix(compiler): allow $any in two-way bindings\" (#59362)"},{"Id":"2771088030","IsPullRequest":true,"CreatedAt":"2025-01-06T17:24:28","Actor":"AndrewKushnir","Number":"59380","RawContent":null,"Title":"Revert \"refactor(platform-server): reduce timeout used in tests (#59275)\"","State":"closed","Body":"This reverts commit 19ec8266d1ef01ff59dfad55bc54e0f83bb87e67.\r\n\r\nReason for revert: it looks like the original change increases flakiness of a few tests on CI. Reverting the change to get back to a more stable state.","Url":"https://github.com/angular/angular/pull/59380","RelatedDescription":"Closed or merged PR \"Revert \"refactor(platform-server): reduce timeout used in tests (#59275)\"\" (#59380)"},{"Id":"2770945976","IsPullRequest":false,"CreatedAt":"2025-01-06T16:22:36","Actor":"dogandipcin","Number":"59379","RawContent":null,"Title":"I am encountering the TS-998113 error when using a custom pipe in TS file","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am encountering the TS-998113 error in Angular when using a custom pipe (FormatMoneyPipe) exclusively in a TypeScript file and not within an Angular template. Here's an example of the code:\n\n```\nformatMoneyPipe = inject(FormatMoneyPipe);\n\nngOnInit() {\n    const formattedMoney = this.formatMoneyPipe.transform(data);\n}\n```\n\n### Expectation\n\nThe pipe is used solely within the TypeScript logic, not in the Angular template. Therefore, I should not receive this error since the pipe is properly injected and utilized in the component's code.\n\n","Url":"https://github.com/angular/angular/issues/59379","RelatedDescription":"Closed issue \"I am encountering the TS-998113 error when using a custom pipe in TS file\" (#59379)"},{"Id":"2768353410","IsPullRequest":true,"CreatedAt":"2025-01-06T16:14:59","Actor":"angular-robot","Number":"59360","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to aff53ca","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `df7d2a9` -> `aff53ca` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59360","RelatedDescription":"Closed or merged PR \"build: update io_bazel_rules_sass digest to aff53ca\" (#59360)"},{"Id":"2768354027","IsPullRequest":true,"CreatedAt":"2025-01-06T16:14:28","Actor":"angular-robot","Number":"59361","RawContent":null,"Title":"build: update dependency ngx-progressbar to v14","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ngx-progressbar](https://ngx-progressbar.netlify.app/) ([source](https://redirect.github.com/MurhafSousli/ngx-progressbar)) | dependencies | major | [`^13.0.0` -> `^14.0.0`](https://renovatebot.com/diffs/npm/ngx-progressbar/13.0.0/14.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>MurhafSousli/ngx-progressbar (ngx-progressbar)</summary>\n\n### [`v14.0.0`](https://redirect.github.com/MurhafSousli/ngx-progressbar/blob/HEAD/CHANGELOG.md#1400)\n\n[Compare Source](https://redirect.github.com/MurhafSousli/ngx-progressbar/compare/v13.0.0...v14.0.0)\n\n-   Upgrade to Angular 19 (still compatible v17.3.0 and above).\n-   fix: `ngProgressHttp` gives an error with http requests inside effects, closes [#&#8203;386](https://redirect.github.com/MurhafSousli/ngx-progressbar/issues/386)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59361","RelatedDescription":"Closed or merged PR \"build: update dependency ngx-progressbar to v14\" (#59361)"},{"Id":"2769389826","IsPullRequest":true,"CreatedAt":"2025-01-06T16:11:04","Actor":"JeanMeche","Number":"59367","RawContent":null,"Title":"docs: fix link to API entry `AngularAppEngine`","State":"closed","Body":"fixes #59342\r\n","Url":"https://github.com/angular/angular/pull/59367","RelatedDescription":"Closed or merged PR \"docs: fix link to API entry `AngularAppEngine`\" (#59367)"},{"Id":"2770557518","IsPullRequest":false,"CreatedAt":"2025-01-06T14:43:26","Actor":"Ghostbird","Number":"59375","RawContent":null,"Title":"Seemingly arbitrary imports are `undefined` at runtime","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm trying to upgrade our app to Angular 19, but have run into a bizarre problem. When I start the app, it gives a reference error on an imported object. That import is valid, and compiles correctly, but at runtime it's `undefined`.\n\n- All imports from that same file suffer the same problem.\n- There is _no_ call stack in Chrome debugger when the error occurs.\n- If I rename the source file that the import comes from, the problem does not occur when importing from the newly named file.\n- The problem is stable, it's always the same files that fail, until I rename them.\n- This happens for so many files that I have not yet managed to be able to fully bootstrap the Angular 19 app version. (Our repo has 647 TS files)\n- I have not managed to reproduce it in a minimal example.\n\n### Please provide a link to a minimal reproduction of the bug\n\nSorry, haven't managed to reproduce it.\n\n### Please provide the exception or error you saw\n\n```log\nUncaught TypeError: Cannot read properties of undefined\nUncaught TypeError: Class extends value undefined is not a constructor or null\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```log\nAngular CLI: 19.0.5\nNode: 22.8.0\nPackage Manager: npm 10.9.2\nOS: linux x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, elements\n... forms, language-service, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.5\n@angular-devkit/build-angular   19.0.5\n@angular-devkit/core            19.0.5\n@angular-devkit/schematics      19.0.5\n@angular/cdk                    19.0.3\n@angular/cli                    19.0.5\n@angular/material               19.0.3\n@schematics/angular             19.0.5\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59375","RelatedDescription":"Closed issue \"Seemingly arbitrary imports are `undefined` at runtime\" (#59375)"},{"Id":"2770582761","IsPullRequest":false,"CreatedAt":"2025-01-06T12:43:23","Actor":"maurotamm","Number":"59376","RawContent":null,"Title":"Dynamic component setInput does not respect internal input value changes (signal based inputs/model)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am trying to switch to signal based inputs with dynamic components.\nI use model as input (because input is read only and can't be changed).\n` open = model<boolean>();`\n\nA close() method (on dialog close click) calls:\n`this.open.set(false);`\n\nIt all works as intended.\nHowever, when i try to open the dialog again, using:\n`this.componentRef.setInput('open', state);`\nIt fails. Because it still sees it as true and does not update the signal value.\n\nIf i add \n```\nthis.componentRef.setInput('open', false);\nthis.componentRef.setInput('open', true);\n```\nIt works - because i explicitly set it to false first with setInput - but fails if signal model is updated internally.\n\nWhy does it not check against the signal real value, why does it still assume it is true? Is there some internal change detection layer that does not respect the signal changes inside the component?\n\n`...instance.open.set(state);` works - but direct instance manipulation is not recommended.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-awwtth?file=src%2Fapp%2Fapp.component.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.11\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: linux x64\n\nAngular: 18.2.10\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    18.2.11\n@angular/cli                    18.2.11\n@schematics/angular             18.2.11\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59376","RelatedDescription":"Open issue \"Dynamic component setInput does not respect internal input value changes (signal based inputs/model)\" (#59376)"},{"Id":"2770347658","IsPullRequest":true,"CreatedAt":"2025-01-06T11:15:42","Actor":"hardikpatel043","Number":"59373","RawContent":null,"Title":"aborted","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCHANGELOG.md has repetitive point mentioned as breaking changes mentioned under 18.0.0 (2024-05-22)\r\n\r\ncore\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWith this PR, repetitive point has been removed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59373","RelatedDescription":"Closed or merged PR \"aborted\" (#59373)"},{"Id":"2770328884","IsPullRequest":false,"CreatedAt":"2025-01-06T10:48:09","Actor":"mk-16","Number":"59372","RawContent":null,"Title":"ViewContainerRef  createComponent UI Flickering","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nokey, so i encountered this issue, when needed to create a component dynamically. \nnow the issue is noticeable when the component to render, has a position absolute property for it's CSS \n\nafter doing some tinkering, I found the source of the issue...\n\ninside the ViewContainerRef, createComponent function \nthere is the following stack\n\n\ninsertImpl \naddLViewToContainer\naddViewToDOM\napplyView\napplyNodes\napplyToElementOrContainer\nnativeInsertBefore\ninsertBefore\n\nat `insertBefore` the issue unravels, because there at:\n`targetParent.insertBefore(newChild, refChild); ` \n\nyou first append the component element to the DOM (without taking account its stylesheet file) and any changes to the DOM force a render, then use\ndelayChangeDetectionForEventsDelegate() to rerender the DOM and then the css file kicks in...\n\nnow i didn't go inside the rabbit hole with delayChangeDetectionForEventsDelegate to point out the source of the issue, im sure you can take it from here....\n\n\nworry not, for now there is a workaround (although very ugly), when you create a component via ViewContainerRef.createComponent,\nfor now manually set the position to \"absolute\" this way, it set before delayChangeDetectionForEventsDelegate run on another cycle,\nso screen wont flicker e.g:\nconst cmp = ViewContainerRef.createComponent(MyComp);\nconst dom: HTMLElement = cmp.location.nativeElement;\ndom.style.position = \"absolute\"\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nim too lazy to setup a reproduction, cant show code for NDA reasons\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.16.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@angular/ssr                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59372","RelatedDescription":"Closed issue \"ViewContainerRef  createComponent UI Flickering\" (#59372)"},{"Id":"2770318699","IsPullRequest":true,"CreatedAt":"2025-01-06T10:17:14","Actor":"hardikpatel043","Number":"59371","RawContent":null,"Title":"aborted","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCHANGELOG.md has repetitive point mentioned as breaking changes mentioned under 18.0.0 (2024-05-22) \r\n\r\ncore\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n- OnPush views at the root of the application need to be marked dirty for their host bindings to refresh. Previously, the host bindings were refreshed for all root views without respecting the OnPush change detection strategy.\r\n\r\n\r\n## What is the new behavior?\r\nWith this PR, repetitive point has been removed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59371","RelatedDescription":"Closed or merged PR \"aborted\" (#59371)"},{"Id":"2769980424","IsPullRequest":false,"CreatedAt":"2025-01-06T08:17:32","Actor":"SriramR-9401","Number":"59369","RawContent":null,"Title":"Date Pipe broken when current week's Thursday is next year","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhile converting the date (30 December 2024) into (YYYY) format the result is  2025.\n\n\nfunction weekNumberingYearGetter(size, trim = false) {\n    return function (date, locale) {\n        const thisThurs = getThursdayThisWeek(date);      ----> thisThurs may be next year. \n        const weekNumberingYear = thisThurs.getFullYear();\n        return padNumber(weekNumberingYear, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim);\n    };\n}\n\nReproducible in the Dates like these December 30 2024, December 31 2012 ,....\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo Exception found.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.12\nNode: 18.20.5 (Unsupported)\nPackage Manager: npm 10.8.2 \nOS: darwin arm64\n\nAngular: 14.3.0\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1402.12\n@angular-devkit/build-angular   14.2.12\n@angular-devkit/core            14.2.12\n@angular-devkit/schematics      14.2.12\n@angular/cdk                    14.2.7\n@angular/cli                    14.2.12\n@angular/flex-layout            14.0.0-beta.41\n@angular/language-service       14.2.2\n@angular/material               14.2.7\n@schematics/angular             14.2.12\nrxjs                            6.6.2\ntypescript                      4.6.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59369","RelatedDescription":"Closed issue \"Date Pipe broken when current week's Thursday is next year\" (#59369)"},{"Id":"2769784360","IsPullRequest":false,"CreatedAt":"2025-01-06T04:20:00","Actor":"FlorianGrimm","Number":"59368","RawContent":null,"Title":"Unclear Refer to locales by ID and extract-i18n error message","State":"open","Body":"### Describe the problem that you experienced\n\nIn the page https://angular.dev/guide/i18n/locale-id their is a table with French | France | fr-FR.\n\nThe link in\nThe [Angular repository](https://github.com/angular/angular/tree/main/packages/common/locales) includes common locales.\nit is not obvious, where to look for the common locales.\n\nBut according to \n.../node_modules/@angular/common/locales/global/*.js\n\"fr-FR\", \"de-DE\", \"en-US\",... is not a common locales.\n\nThe warning (during the build)\nLocale data for 'fr-FR' cannot be found. Using locale data for 'fr'.\nIs may either \ncorrect  than the documentation should use French | France | fr.\nor it's misleading - it's a (red) warning - than the the documentation should mention this, (and it's more likely a issue for the toolkit)\nor I'm missing something.\n\nIn the page https://angular.dev/guide/i18n/locale-id\n\"By default, Angular uses en-US as the source locale of your project.\"\ndiffers from https://github.com/angular/angular/blob/main/packages/common/locales/generate-locales-tool/README.md\n\"A default locale used within @angular/core. This is the locale_en.ts file.\"\nSo locale_fr-FR.ts, locale_en-US.ts, ... does not exists, because of the later mentioned optimization.\n\nIMHO: The warning while build is misleading and the documentation should explain the this..\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/i18n/locale-id\n","Url":"https://github.com/angular/angular/issues/59368","RelatedDescription":"Open issue \"Unclear Refer to locales by ID and extract-i18n error message\" (#59368)"},{"Id":"2769252337","IsPullRequest":false,"CreatedAt":"2025-01-05T13:23:56","Actor":"wszgrcy","Number":"59366","RawContent":null,"Title":"@let / typeof not support Type protection","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/4470af22-d9fa-44b4-9b23-8f317a9012ed)\n```html\n  @let defaultData =\n    typeof type === 'string' ? formlyConfig?.types?.[type] : undefined;\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6        \nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59366","RelatedDescription":"Closed issue \"@let / typeof not support Type protection\" (#59366)"},{"Id":"2769220796","IsPullRequest":true,"CreatedAt":"2025-01-05T11:02:08","Actor":"johnsoncodehk","Number":"59365","RawContent":null,"Title":"refactor: remove unnecessary TSLint rule flags","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI found in #59364 that there are many TSLint rule flags in the source code that have no effect, and after testing they can be safely removed to keep the code clean.","Url":"https://github.com/angular/angular/pull/59365","RelatedDescription":"Open PR \"refactor: remove unnecessary TSLint rule flags\" (#59365)"},{"Id":"2768998971","IsPullRequest":true,"CreatedAt":"2025-01-04T22:51:53","Actor":"johnsoncodehk","Number":"59364","RawContent":null,"Title":"dev-infra: run TSLint rules on top of TSSLint","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [x] Other... Please describe: Refactor the linting infrastructure\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI am the author of [TSSLint](https://github.com/johnsoncodehk/tsslint) 👋. TSSLint is a newer linting solution. It is mainly built to improve the linting experience and performance in TS projects.\r\n\r\nSince the TSLint related tool chain is no longer maintained, and the API design of TSSLint has good compatibility with TSLint, I think running TSLint rules on top of TSSLint is a feasible solution to regain a good linting experience.\r\n\r\nThe switch required very few changes, mainly rewriting tslint.json to tsslint.config.ts, and we found some clear benefits:\r\n\r\n- The TSLint VSCode extension is no longer available with the latest TS/VSCode version. Switching to TSSLint will regain IDE support.\r\n- TSSLint cache non-type-aware rules's results by default, which greatly reduces the time for CLI to perform linting. (19.106s -> 7.740s)\r\n- TSSLint natively supports writing config/rules in TS, so tsNodeLoaderRule/ts-node is no longer necessary.\r\n- `tslint:disable-next-line:`, `tslint:disable:` are supported through the plugin API. By enabling the second parameter of `createIgnorePlugin()` we found many unused `tslint:disable-next-line:`, `tslint:disable:` comments.\r\n- The way to write custom rules is simpler than TSLint.\r\n\r\nI hope this PR helps you simply start testing TSSLint, but if Angular team ultimately decide that staying with TSLint is more appropriate, that's a perfectly acceptable conclusion and feel free to close this PR.\r\n\r\nThank you for reading this far!","Url":"https://github.com/angular/angular/pull/59364","RelatedDescription":"Closed or merged PR \"dev-infra: run TSLint rules on top of TSSLint\" (#59364)"},{"Id":"2768914377","IsPullRequest":false,"CreatedAt":"2025-01-04T16:31:19","Actor":"Neutrino-Sunset","Number":"59363","RawContent":null,"Title":"Routing documentation does not appear to describe how to change route programatically","State":"open","Body":"### Describe the problem that you experienced\n\nUnless I'm missing something there does not appear to be anything in the documentation on how to control the loaded route programatically.\n\n[Common routing tasks](https://angular.dev/guide/routing/common-router-tasks) - nothing here.\n[Routing in signle-page applications](https://angular.dev/guide/routing/router-tutorial) - nothing here.\n[Creating custom route matches](https://angular.dev/guide/routing/routing-with-urlmatcher) - nothing here.\n[Router reference](https://angular.dev/guide/routing/router-reference#configuration) - nothing here.\n\n\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59363","RelatedDescription":"Open issue \"Routing documentation does not appear to describe how to change route programatically\" (#59363)"},{"Id":"2767533715","IsPullRequest":true,"CreatedAt":"2025-01-03T14:28:49","Actor":"aceArt-GmbH","Number":"59357","RawContent":null,"Title":"Backport: feat(compiler): add support for the typeof keyword in template expressions #58183 ","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\nThis is just a backport of #58183 to v18\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nCurrently `typeof` is not usable on angular <v19.\r\n\r\nIssue Number: #58183\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThis is not a breaking change, so allow it in v18 too.\r\nMany projects can't make major updates quickly\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nDo you make/accept backports of this kind?","Url":"https://github.com/angular/angular/pull/59357","RelatedDescription":"Closed or merged PR \"Backport: feat(compiler): add support for the typeof keyword in template expressions #58183 \" (#59357)"},{"Id":"2767446088","IsPullRequest":false,"CreatedAt":"2025-01-03T11:49:46","Actor":"rpeshkov","Number":"59356","RawContent":null,"Title":"Provide example with track function in `@for` docs","State":"open","Body":"### Describe the problem that you experienced\n\nDocumentation for `@for` control flow syntax might be improved with examples on how to use track functions. I've noticed that many developers when switching from `ngFor` to `@for` continue to use track function and provide it as a reference to a function which is incorrect.\n\nFor example, developers are switching from `<div *ngFor=\"let item of items; trackBy: myCustomFn\">` to `@for (item of items, track myCustomFn)` which is incorrect. Another problem is that only starting from Angular 18 you'll see a warning that this is incorrect, while previous versions would silently use incorrect tracking.\n\nIn the documentation it's stated that you need to use expression there, but small explicit example would make things much better.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/api/core/@for\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59356","RelatedDescription":"Open issue \"Provide example with track function in `@for` docs\" (#59356)"},{"Id":"2767315259","IsPullRequest":true,"CreatedAt":"2025-01-03T10:14:01","Actor":"hawkgs","Number":"59355","RawContent":null,"Title":"docs(docs-infra): generate errors and extended-diagnostics route NavigationItem-s","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nHandles: https://github.com/angular/angular/issues/55593\r\n\r\n\r\n## What is the new behavior?\r\n\r\nGenerate the `NavigationItem`-s of the `errors` and `extended-diagnostics` routes as part of adev/shared-docs pipeline (at build time) and use the output JSON files instead of the hardcoded objects in the `sub-navigation-data.ts`.\r\n\r\nThe generator can be used for substituting most of the hardcoded data in `sub-navigation-data.ts` but I haven't done it yet since I think it's better having a review of the Bazel package design (the strategies part, I guess).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n","Url":"https://github.com/angular/angular/pull/59355","RelatedDescription":"Open PR \"docs(docs-infra): generate errors and extended-diagnostics route NavigationItem-s\" (#59355)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2770674203","IsPullRequest":false,"CreatedAt":"2025-01-06T23:55:16","Actor":"GKersten","Number":"29256","RawContent":null,"Title":"ngCspNonce broken since `domutils` v3.2.1","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nany\n\n### Description\n\nAfter regenerating our `package-lock.json` file we ran into an issue where `ngCspNonce` is no longer working. After debugging we figured out that it is caused with an update of `domutils` package to v3.2.1. Since downgrading that package to v3.1.0 seems to fix the issue. For this we were able to find these probably related Github issues on external repositories for indirect dependencies of `@angular/build`:\nhttps://github.com/fb55/htmlparser2/issues/1987\nhttps://github.com/fb55/domutils/issues/1855\n\nHowever since this actually breaks the `ngCspNonce` functionality we thought it would be good to also report the issue here.\n\nThe issue happens when creating a new Angular app with `ngCspNonce` attribute added, after building the app, the `<style>` tags are not generated. Seems like `ngCspNonce` is ignored?\n\nSee comparison of \"excepted\" (left) and \"actual\" (right) of the `index.html` from the `dist` folder after running `build`\n![Image](https://github.com/user-attachments/assets/c0107736-f0a3-4dfc-b080-35094640690c\n\nDependency tree: `@angular/build` > `beasties` > `htmlparser2` > `domutils`\n\n### Minimal Reproduction\n\nSee Stackblitz:\nhttps://stackblitz.com/edit/ng-csp-nonce?file=src%2Findex.html\n\nOr take full reproduction steps:\n1. Create a new Angular app using `ng new` (latest v19, but also reproducable with v18)\n2. add some styles to global `styles.scss`\n3. add `ngCspNonce=\"randomNonceGoesHere\"` to `<app-root>` as described in https://angular.dev/best-practices/security#content-security-policy\n4. run `npm install` & `npm run build`\n5. Look at `dist` directory and lookup the generated `index.html` find this line `<link rel=\"stylesheet\" href=\"styles-RP5GNS3S.css\" media=\"print\" onload=\"this.media='all'\"><noscript><link rel=\"stylesheet\" href=\"styles-RP5GNS3S.css\"></noscript></head>`. Notice that it contains `onload=\"this.media='all'\"`  which should actually have been prevented by the `ngCspNonce` attribute.\n\nTo work-around:\n1. in `package.json` add\n```  \n\"overrides\": {\n    \"domutils\": \"3.1.0\"\n  }\n```\n2. delete `node_modules` & `package-lock.json` to be sure.\n3. run `npm install` & `npm run build`\n4. Look at dist directory and lookup the generated `index.html` find this line\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.6 (cli-only)\n@angular-devkit/core         19.0.6 (cli-only)\n@angular-devkit/schematics   19.0.6 (cli-only)\n@schematics/angular          19.0.6 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29256","RelatedDescription":"Closed issue \"ngCspNonce broken since `domutils` v3.2.1\" (#29256)"},{"Id":"2771523361","IsPullRequest":true,"CreatedAt":"2025-01-06T23:49:16","Actor":"josephperrott","Number":"29261","RawContent":null,"Title":"ci: run less jobs per executor for RBE","State":"closed","Body":"Use less jobs per bazel run to reduce the rate at which we perform API calls for RBE\r\n","Url":"https://github.com/angular/angular-cli/pull/29261","RelatedDescription":"Closed or merged PR \"ci: run less jobs per executor for RBE\" (#29261)"},{"Id":"2771216865","IsPullRequest":true,"CreatedAt":"2025-01-06T18:33:07","Actor":"clydin","Number":"29260","RawContent":null,"Title":"refactor(@angular/build): support multiple results per application build action","State":"open","Body":"The `application` builder may now return more than one build result per rebuild action. This will typically occur when using the development server with HMR enabled. In this scenario, component template update results may be sent to the development server in addition to incremental updates for global styles. TailwindCSS, for instance, may update the global stylesheet for an application based on the usage of styles within a given template.\r\n\r\nCloses #29096","Url":"https://github.com/angular/angular-cli/pull/29260","RelatedDescription":"Open PR \"refactor(@angular/build): support multiple results per application build action\" (#29260)"},{"Id":"2766206004","IsPullRequest":true,"CreatedAt":"2025-01-06T18:10:15","Actor":"clydin","Number":"29242","RawContent":null,"Title":"build: migrate tests infrastructure to `ts_project`","State":"closed","Body":"The miscellaneous test infrastructure targets within `tests/` have been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29242","RelatedDescription":"Closed or merged PR \"build: migrate tests infrastructure to `ts_project`\" (#29242)"},{"Id":"2771147409","IsPullRequest":true,"CreatedAt":"2025-01-06T18:07:29","Actor":"clydin","Number":"29259","RawContent":null,"Title":"build: fix schematics API golden for 19.0.x","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29259","RelatedDescription":"Closed or merged PR \"build: fix schematics API golden for 19.0.x\" (#29259)"},{"Id":"2767879689","IsPullRequest":true,"CreatedAt":"2025-01-06T17:19:23","Actor":"clydin","Number":"29245","RawContent":null,"Title":"build: migrate `@angular-devkit/schematics` to `ts_project`","State":"closed","Body":"The `@angular-devkit/schematics` package has been migrated to the `rules_js` ts_project rule. The tsconfig path mappings for the `@angular-devkit` scope have also been cleaned up now that all the packages within this scope have been migrated.","Url":"https://github.com/angular/angular-cli/pull/29245","RelatedDescription":"Closed or merged PR \"build: migrate `@angular-devkit/schematics` to `ts_project`\" (#29245)"},{"Id":"2766858466","IsPullRequest":true,"CreatedAt":"2025-01-06T16:00:38","Actor":"clydin","Number":"29243","RawContent":null,"Title":"refactor(@angular/build): support application incremental build result in dev-server","State":"closed","Body":"The dev-server will now leverage the incremental build result data from the application\r\nbuilder. This removes the need to directly analyze all the newly built files within the\r\ndev-server to determine what type of update is needed. Incremental build results also\r\nonly contain the files that are new and/or modified and removes the need to pass a potentially\r\nlarge amount of file content between the application build and the dev-server.","Url":"https://github.com/angular/angular-cli/pull/29243","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): support application incremental build result in dev-server\" (#29243)"},{"Id":"2770673716","IsPullRequest":true,"CreatedAt":"2025-01-06T14:33:51","Actor":"alan-agius4","Number":"29255","RawContent":null,"Title":"refactor(@angular/build): normalize source path for windows compatibility","State":"closed","Body":"\r\nThis update resolves an issue that prevents SSR from functioning correctly on Windows when using the latest Vite.\r\n","Url":"https://github.com/angular/angular-cli/pull/29255","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): normalize source path for windows compatibility\" (#29255)"},{"Id":"2770729662","IsPullRequest":false,"CreatedAt":"2025-01-06T14:33:39","Actor":"HazzMan2409","Number":"29257","RawContent":null,"Title":"Custom loader support","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nIt would nice to support custom loaders so that import statements like:\n\n`import myProperties from \"./my-properties.properties\";`\n\ncould load an export which was some custom javascript object built from the contents of the .properties file.\n\nCurrently I can use @angular-builders/custom-esbuild to load .properties files in my source and from library imports with an ng build. But with an ng serve Vite's pre-bundling causes library imports to .properties files to fail. The only workaround we have is to disable pre-bundling for the library.\n\n### Describe the solution you'd like\n\nAn API to define custom loaders so that the build option:\n\n```\n\"loader\": {\n    \".properties\": \"properties\"\n}\n```\n\nwould use a custom loader that I defined called \"properties\".\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29257","RelatedDescription":"Closed issue \"Custom loader support\" (#29257)"},{"Id":"2770495542","IsPullRequest":true,"CreatedAt":"2025-01-06T14:19:00","Actor":"alan-agius4","Number":"29254","RawContent":null,"Title":"fix(@angular-devkit/architect): provide better error when builder is not defined","State":"closed","Body":"\r\n\r\nWhen a builder is not defined a more actionable error message is now displayed.\r\n\r\nCloses #29226","Url":"https://github.com/angular/angular-cli/pull/29254","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/architect): provide better error when builder is not defined\" (#29254)"},{"Id":"2762194611","IsPullRequest":false,"CreatedAt":"2025-01-06T14:18:34","Actor":"AmitMY","Number":"29236","RawContent":null,"Title":"SSG allow loading static assets","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nI am using [transloco](https://github.com/jsverse/transloco) for localization.\nWhen building (used to be prerendering) now the build process tries to render the pages.\nIn doing so, it hits this loader, which loads a static asset (the language in question)\n```ts\n@Injectable({providedIn: 'root'})\nexport class HttpLoader implements TranslocoLoader {\n  private http = inject(HttpClient);\n\n  getTranslation(langPath: string): Observable<Translation> {\n    return this.http.get<Translation>(`assets/i18n/${langPath}.json`);\n  }\n}\n```\nHowever, the HTTP request fails, since there seems to not be an http server involved in the SSG process.\n\nIf I run this in SSR, it also fails, but that is because it can't handle the path, and requires a full URL (http://localhost:4000/assets/...)\n\nIf I accept not having a server, I need to have a similar behavior to what I do during testing:\n```ts\n    if (isPlatformServer(this.platformId)) {\n      const path = require('path');\n      const filePath = path.join(__dirname, '..', '..', '..', assetPath);\n      console.error('filePath', filePath);\n      const fs = require('fs');\n\n      const data = fs.readFileSync(filePath, 'utf8');\n      return of(JSON.parse(data));\n    }\n```\n\nBut this relies on node modules, and the builder errors:\n>   The package \"fs\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n\nTherefore, my issues are:\n\n1. SSG should have some sort of way to load static assets. \n2. SSR should not need the full URL. somehow, it should understand that any path requested is under the same host as the REQUEST.\n\n### Minimal Reproduction\n\n1. Make a new app, with ssr and ssg (`\"prerender\": true`, \"ssr\": {\"entry\": \"src/server.ts\"}`)\n2. under `src/assets` add `something.json`\n3. in the `AppComponent`'s `ngOnInit` function, make `this.httpClient.get('/assets/something.json').subscribe()`\n4. run `ng build --configuration=production`\n\n### Exception or Error\n\n```text\n- SSG should have a way to load static assets\n- SSR should be able to load assets using HTTP\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.0.0\nPackage Manager: npm 10.5.1\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/material               19.0.4\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nIn the old prerendering, it used to work.","Url":"https://github.com/angular/angular-cli/issues/29236","RelatedDescription":"Closed issue \"SSG allow loading static assets\" (#29236)"},{"Id":"2770184693","IsPullRequest":true,"CreatedAt":"2025-01-06T14:18:33","Actor":"alan-agius4","Number":"29252","RawContent":null,"Title":"fix(@angular/build): handle relative URLs when constructing new URLs during server fetch","State":"closed","Body":"\r\n\r\nEnsures proper handling of relative URLs to prevent errors in server-side fetch operations.\r\n\r\nCloses #29236","Url":"https://github.com/angular/angular-cli/pull/29252","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle relative URLs when constructing new URLs during server fetch\" (#29252)"},{"Id":"2761054409","IsPullRequest":false,"CreatedAt":"2025-01-06T13:07:46","Actor":"xjlzy","Number":"29231","RawContent":null,"Title":"ESBuild is very slow!!!","State":"closed","Body":"### Command\n\nserve, build\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI created a project through Angular/cli@18.2.12. This project contains ten thousand components, which are distributed into one hundred modules. These codes take up approximately 20MB of disk space. When I execute the default dev-server builder, it takes about 300 seconds or so. Then, when performing an incremental build after modifying the files for the first time, it also takes around 300 seconds to complete the build. And the incremental compilation time after modifying the files later is about 15 seconds or so. Moreover, it occupies a huge amount of memory. The processes of Node.js and Esbuild take up approximately 14GB of memory.\n\n### Minimal Reproduction\n\nhttps://github.com/xjlzy/test.git\nThis is the git repository address of my local test code. You just need to run it and you'll be able to know the specific situation. I hope to reduce the time for the first incremental build and also lower the memory usage.\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.12\nNode: 22.11.0\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\nOS: Windows 11 Home 24H2\nmemory: 32GB\nCPU: Intel(R) Core(TM) Ultra 7 155H   3.80 GHz","Url":"https://github.com/angular/angular-cli/issues/29231","RelatedDescription":"Closed issue \"ESBuild is very slow!!!\" (#29231)"},{"Id":"2769399610","IsPullRequest":true,"CreatedAt":"2025-01-06T10:54:34","Actor":"jsaguet","Number":"29250","RawContent":null,"Title":"fix(@angular/build): do not mark Babel _defineProperty helper function as pure","State":"closed","Body":"Fixes #29145\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n_defineProperty is marked as pure and then tree shaken when targeting Safari < 15 or Chrome < 84 which breaks the application.\r\n\r\nIssue Number: #29145\r\n\r\n## What is the new behavior?\r\n\r\n_defineProperty is not marked as pure\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29250","RelatedDescription":"Closed or merged PR \"fix(@angular/build): do not mark Babel _defineProperty helper function as pure\" (#29250)"},{"Id":"2769391285","IsPullRequest":true,"CreatedAt":"2025-01-06T10:54:20","Actor":"JeanMeche","Number":"29249","RawContent":null,"Title":"refactor(@angular/ssr): clean up comment.","State":"closed","Body":"The double JSDoc start sequence was visible in the docs (https://angular.dev/api/ssr/provideServerRoutesConfig). This commit fixes it.\r\n","Url":"https://github.com/angular/angular-cli/pull/29249","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): clean up comment.\" (#29249)"},{"Id":"2770213749","IsPullRequest":false,"CreatedAt":"2025-01-06T09:19:04","Actor":"AllenGong0","Number":"29253","RawContent":null,"Title":"angular v9 - v13 support vite or esbuild","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nMy teams are use angular versions in v9 - v13, can support vite in this versions?\nMy teams are very very need it, beacuse use these old version buid or hmr speed is too slow\n\n### Proposed solution\n\nsupport a package to support it\n\n### Alternatives considered\n\nsupport a package to support it","Url":"https://github.com/angular/angular-cli/issues/29253","RelatedDescription":"Closed issue \"angular v9 - v13 support vite or esbuild\" (#29253)"},{"Id":"2770072588","IsPullRequest":false,"CreatedAt":"2025-01-06T09:12:02","Actor":"omergafla","Number":"29251","RawContent":null,"Title":"ng build fails due to changes on fast-uri module","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n└─┬ @angular-devkit/build-angular@12.2.18\n  └─┬ @angular-devkit/core@12.2.18\n    └─┬ ajv-formats@2.1.0\n      └─┬ ajv@8.17.1\n        └── fast-uri@3.0.3\n\n\nsince yesterday (https://github.com/fastify/fast-uri/pull/113) this module (fast-uri) uses optional chaining (\"?.\") which isn't supported for Node v12.14.0\nand ng build fails due to unexpected token (\"?.\")\n\n### Minimal Reproduction\n\nng build uses this node module and now it's incompatible with node V12.14.0\n\n### Exception or Error\n\n```text\nUnexecpted Token \".\"\n```\n\n### Your Environment\n\n```text\nAngular CLI: 12.2.18\nNode: 12.14.0\nPackage Manager: npm 6.14.11\nOS: linux x64\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29251","RelatedDescription":"Closed issue \"ng build fails due to changes on fast-uri module\" (#29251)"},{"Id":"2768283193","IsPullRequest":false,"CreatedAt":"2025-01-06T09:11:03","Actor":"davidbusuttil","Number":"29246","RawContent":null,"Title":"Transition Libraries from @angular-devkit/build-angular to @angular/build","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nupgrade\n\n### Description\n\nLibraries are still using ng-packer and @angular-devkit/build-angular.\n\n### Proposed solution\n\nIntegrate libraries into @angular/build with a separate process - @angular/build:library\n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular-cli/issues/29246","RelatedDescription":"Closed issue \"Transition Libraries from @angular-devkit/build-angular to @angular/build\" (#29246)"},{"Id":"2768533558","IsPullRequest":false,"CreatedAt":"2025-01-06T09:10:54","Actor":"durai145","Number":"29247","RawContent":null,"Title":"Support for Non-ASCII Characters in Angular Project Names","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nI would like to bring attention to the current limitation in Angular CLI that restricts project names to match the regex:\n^(?:@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*/)?[a-zA-Z0-9-~][a-zA-Z0-9-._~]*$.\n\nThis restriction effectively prevents developers from using non-ASCII characters (e.g., names in native languages like Tamil, Hindi, or Chinese) in project names. For example, a name like \"உறுப்புகள்\" is rejected during project creation.\n\nWhy This Matters:\n\nCultural Representation: Developers should have the ability to use their native languages in their projects. This fosters inclusivity and better represents diverse communities.\nGlobalization: As technology continues to expand globally, frameworks and tools need to support multiple languages and character sets. ASCII-only restrictions feel outdated and limit creative freedom.\nModern Standards: Many modern systems (e.g., UTF-8) already support non-ASCII characters. Angular CLI should leverage these standards for broader compatibility.\nProposed Solution:\n\nAllow the use of Unicode characters in project names by relaxing the regex validation.\nFor compatibility (e.g., npm package names), generate an ASCII-compliant identifier internally while preserving the original name for display purposes.\nDocument any limitations or edge cases where non-ASCII characters might cause issues to ensure transparency for developers.\nImpact:\nThis enhancement would enable developers worldwide to better connect with their projects and showcase cultural identity in their work. It would also align Angular CLI with modern inclusivity standards, making it a stronger choice for a global audience.\n\nWorkarounds Are Not Ideal:\nCurrent workarounds, such as using ASCII names and displaying native language names in the UI or modifying Angular CLI locally, are not developer-friendly and add unnecessary complexity.\n\nCall to Action:\nPlease consider prioritizing this feature to make Angular more inclusive and supportive of developers from all linguistic backgrounds. I’d be happy to contribute to this effort or assist in testing if needed.\n\n\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29247","RelatedDescription":"Closed issue \"Support for Non-ASCII Characters in Angular Project Names\" (#29247)"},{"Id":"2763535252","IsPullRequest":false,"CreatedAt":"2025-01-06T09:03:33","Actor":"filipsobol","Number":"29237","RawContent":null,"Title":"Duplicate dependencies in server bundle","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm the author of [Sonda](https://sonda.dev/), a bundle visualizer and analyzer for JavaScript and CSS. I was asked to create an integration with Angular, which I did here: https://github.com/filipsobol/sonda/issues/48.\n\nOne of the features of Sonda is that it warns about duplicate dependencies that seem to exist in the server bundle(s) in a fresh Angular project. This is probably unintentional.\n\nBelow is a list of dependencies that are bundled in more than one version.\n\nWhen using `npm`:\n\n![npm](https://github.com/user-attachments/assets/85355763-d9b7-4667-9655-f746762cffdf)\n\nWhen using `pnpm`:\n\n![pnpm](https://github.com/user-attachments/assets/07c8bfcb-c6a9-4728-855d-22f4895308ed)\n\n### Minimal Reproduction\n\n1. Create a new Angular app.\n2. Install the integration following this guide: https://sonda.dev/frameworks/angular-cli.html.\n3. Generate and open a report.\n4. See the warning in the top-left corner and inspect the file `dist/<PROJECT>/server/server.mjs`.\n\n(Steps 2 and 3 may change once I release the integration).\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29237","RelatedDescription":"Closed issue \"Duplicate dependencies in server bundle\" (#29237)"},{"Id":"2769014449","IsPullRequest":false,"CreatedAt":"2025-01-04T21:49:36","Actor":"karptonite","Number":"29248","RawContent":null,"Title":"`application` builder not loading css from localhost correctly with `ng serve` when using remote dev with HMR","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.11\n\n### Description\n\nWhen using the `application` builder to serve on localhost, but with the main website loaded from a remote dev server, stylesheets are not loading properly for us as of Angular CLI 19. \n\nFor our development environment, we are loading our main website (including index.html) from a remote dev server (say, `dev.example.com`), but running `ng serve` from localhost. To do this, we have been serving a copy of `index.html` when appropriate (not all pages of the application use Angular) from the remote dev server, and rewriting all the `src` attributes in index.html to point `//localhost:4200/main.js`, etc so that vite, the js, and the main css load correctly.\n\nIn Angular 18, the result of this is that all the js chunk files are requested from localhost, and all of the other requests go to our dev server--this is the intended behavior. In particular, the js chunks for components had all of the styles inlined in the js file.\n\nIn Angular 19, we are seeing new requests, for css files, requests we never saw in Angular 18, presumably because these stylesheets are no longer inlined in the js. Unfortunately, these requests for css files are going to our remote dev server, but are, of course, being served by `localhost`, so we are getting 404s for all of these. \n\nI'm calling this a regression, because styles worked properly in dev for Angular 18 but not Angular 19, but I recognize that our use case is unusual. I'd like to find some solution that allows us to run a dev environment for Angular 19, probably by getting the CSS files to load from the localhost, but if there is some other solution (perhaps returning to inlining stylesheets in the js files?), I'm open to that as well.\n\n (I initially thought this was related to the `deployUrl` feature (see #26411) which we use in production to serve js and stylesheets from a CDN, and am still a little concerned about whether this will be a problem for us in production.)\n\nEDIT: As noted below in the comments, this is happening because HMR has been turned on by default in Angular 19. I suspect that the sort of configuration I'm using has never worked with HMR.\n\n### Minimal Reproduction\n\nServe `index.html` (with the `src`s rewritten to load from localhost) from a server different from localhost.\nrun `ng serve` on localhost.\nTry to load the site on from the remove server.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 18.20.5\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29248","RelatedDescription":"Open issue \"`application` builder not loading css from localhost correctly with `ng serve` when using remote dev with HMR\" (#29248)"},{"Id":"2767226172","IsPullRequest":false,"CreatedAt":"2025-01-03T10:46:01","Actor":"TobiasNoell","Number":"29244","RawContent":null,"Title":"Certain .browserslistrc contents with buildOptimizer and optimization enabled will cause NullInjectorError","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nIn Angular 19, certain `.browserslistrc` contents can lead to `NullInjectorError: No provider for [mangled name]` runtime exceptions in production builds when the `buildOptimizer` is enabled.\nThis error occurs even if the project does not contain any service that is injected somewhere.\n\nIf either:\n\n- `buildOptimizer` is set to `false`\n- `optimization` is set to `false`\n- `.browserslistrc` file is modified by changing `>0.3%` to` >0.5%`\n\nthe project runs fine (after re-compiling)\n\n### Minimal Reproduction\n\nA [example project](https://github.com/TobiasNoell/angular-tour-of-heroes) was generated to demonstrate the bug:\n\n- `buildOptimizer: true`\n- `optimization: true`\n- `.browserslistrc` file is present in the project\n\nRunning the application using `npm start` and navigating to `http://localhost:4200/` will yield the following runtime error:\n\n`ERROR NullInjectorError: R3InjectorError[t -> Ct -> Ct]:  NullInjectorError: No provider for Ct!`\n\nModifying the contents of `.browserslistrc` changing `>0.3%` to` >0.5%` will resolve the bug\n\n\n\n### Exception or Error\n\n```text\nERROR NullInjectorError: R3InjectorError[t -> Ct -> Ct]:  NullInjectorError: No provider for Ct!\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.9.0\nPackage Manager: npm 10.2.3\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29244","RelatedDescription":"Closed issue \"Certain .browserslistrc contents with buildOptimizer and optimization enabled will cause NullInjectorError\" (#29244)"},{"Id":"2765954221","IsPullRequest":false,"CreatedAt":"2025-01-03T10:45:49","Actor":"BehzodRj","Number":"29241","RawContent":null,"Title":"Issue with JavaScriptOptimizerPlugin Configuration in Angular Build","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello Angular Team,\n\nI have encountered an issue while working with Angular in an Ionic project. The problem arises during the build process when the JavaScriptOptimizerPlugin is included in the Webpack configuration. Specifically, the following error occurs:\n\nError: NullInjectorError: No provider for Mr!\n\nProblem Details\nThe issue appears to be related to the following block in node_modules/@angular-devkit/build-angular/src/tools/webpack/configs/common.js:\n\n`const extraMinimizers = [];\nif (scriptsOptimization) {\n    extraMinimizers.push(new plugins_1.JavaScriptOptimizerPlugin({\n        define: {\n            ...(buildOptions.aot ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT : GLOBAL_DEFS_FOR_TERSER),\n            'ngServerMode': isPlatformServer,\n        },\n        sourcemap: scriptsSourceMap,\n        supportedBrowsers: buildOptions.supportedBrowsers,\n        keepIdentifierNames: !environment_options_1.allowMangle || isPlatformServer,\n        removeLicenses: buildOptions.extractLicenses,\n        advanced: buildOptions.buildOptimizer,\n    }));\n}`\n\nWhen this block of code is active, the error appears. However, if I remove it, the project builds and functions correctly.\n\nConfiguration Details\nHere is an excerpt of the relevant buildOptions object for your reference:\n\n`{\n  outputPath: 'www',\n  index: 'src/index.html',\n  main: 'src/main.ts',\n  tsConfig: 'tsconfig.app.json',\n  aot: true,\n  sourceMap: { vendor: false, scripts: false },\n  optimization: { scripts: true, styles: { minify: true } },\n  extractLicenses: true,\n  buildOptimizer: true,\n  supportedBrowsers: [\n    'and_chr 131', 'chrome 131', 'edge 131', ...\n  ],\n}`\n\nAdditional Information\nI have tested this issue on multiple machines with the same results.\nRemoving the block mentioned above resolves the issue, but I am aware that modifying node_modules is not a recommended practice.\nI have also attempted clearing caches and re-installing dependencies, but the issue persists.\nRequest\nCould you please confirm whether this is a known issue with Angular's JavaScriptOptimizerPlugin or provide guidance on how to address this without manually modifying the node_modules?\n\nIf necessary, I am happy to provide additional details or create a minimal reproducible example for further investigation.\n\nBest regards,\nBehzod\nbehzod.rajabaliev@gmail.com\n\n![Image](https://github.com/user-attachments/assets/0095b048-58cb-498d-820f-eb90b1223828)\n![Image](https://github.com/user-attachments/assets/b7125a2e-81f3-48b2-afed-ec3f35b94259)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNullInjectorError: R3InjectorError(Platform: core)[t -> Mr]: \n  NullInjectorError: No provider for Mr!\n    at Oi.get (main.13dfbe05a7d37cd3.js:1:169709)\n    at Sr.get (main.13dfbe05a7d37cd3.js:1:173110)\n    at ue (main.13dfbe05a7d37cd3.js:1:168245)\n    at Qe (main.13dfbe05a7d37cd3.js:1:168324)\n    at Object.factory (main.13dfbe05a7d37cd3.js:1:281600)\n    at Sr.hydrate (main.13dfbe05a7d37cd3.js:1:174434)\n    at Sr.get (main.13dfbe05a7d37cd3.js:1:173062)\n    at AO (main.13dfbe05a7d37cd3.js:1:282030)\n    at main.13dfbe05a7d37cd3.js:1:282121\n    at Object.<anonymous> (main.13dfbe05a7d37cd3.js:1:281885)\n\nThis error occurs during the build process, and it is resolved when the following block in the @angular-devkit/build-angular package is removed:\n\nconst extraMinimizers = [];\nif (scriptsOptimization) {\n    extraMinimizers.push(new plugins_1.JavaScriptOptimizerPlugin({\n        define: {\n            ...(buildOptions.aot ? GLOBAL_DEFS_FOR_TERSER_WITH_AOT : GLOBAL_DEFS_FOR_TERSER),\n            'ngServerMode': isPlatformServer,\n        },\n        sourcemap: scriptsSourceMap,\n        supportedBrowsers: buildOptions.supportedBrowsers,\n        keepIdentifierNames: !environment_options_1.allowMangle || isPlatformServer,\n        removeLicenses: buildOptions.extractLicenses,\n        advanced: buildOptions.buildOptimizer,\n    }));\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.12.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.5\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.6\n@angular-devkit/core         19.0.6\n@angular-devkit/schematics   19.0.6\n@angular/cli                 19.0.6\n@schematics/angular          19.0.6\n\nSystem:\n\n   NodeJS : v22.12.0 (C:\\Program Files\\nodejs\\node.exe)\n   npm    : 10.9.0\n   OS     : Windows 10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29241","RelatedDescription":"Closed issue \"Issue with JavaScriptOptimizerPlugin Configuration in Angular Build\" (#29241)"},{"Id":"2764244023","IsPullRequest":false,"CreatedAt":"2025-01-01T15:06:37","Actor":"arkthur","Number":"29239","RawContent":null,"Title":"tsconfig.spec.json types are not being resolved when opening testing files in VSCode","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn an Angular project created by CLI, there are three tsconfig files: the base one, the app one and the tests (spec) one. Since Angular has been moving towards esbuild and Vite to build its apps, I'm trying Vitest to run its unit tests. For this, I'm using the integration made by Analog.js (https://analogjs.org/docs/features/testing/vitest).\n\nEverything works fine testing-wise, but in VSCode, and after I removed every package related to any other test runner (karma and jasmine in this case), when I open any ´src/**/*.spec.ts´ file, there are error concerning typing not being resolved for every global testing function, like ´describe´, ´it´ or ´expect´, even though, and as per instructed, ´vitest/globals´ are being correctly referenced in the ´tsconfig.spec.json´.\n\nWhen I open any testing file, aside of the errors, VSCode tells me the config file it's using to resolve this file is the base one (tsconfig.json). And, if I add ´vitest/globals´ to the base config, errors disappear.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-kgrhhncg\n\n### Please provide the exception or error you saw\n\n```true\nCannot find name 'describe'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha`. ts(2582)\n\nCannot find name 'beforeEach'.ts(2304)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.5\nNode: 22.12.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1800.7\n@angular-devkit/build-angular   19.0.5\n@angular-devkit/core            19.0.5\n@angular-devkit/schematics      19.0.5\n@angular/cdk                    19.0.3\n@angular/cli                    19.0.5\n@angular/material               19.0.3\n@schematics/angular             19.0.5\nrxjs                            7.8.1\ntypescript                      5.6.3\n```\n\n### Anything else?\n\n> [!NOTE]\n>  I have doubts about this issue being Angular related. Maybe this is a TypeScript and/or VSCode error. Even so, this issue might be of the interest of the Angular team concerning the way ´tsconfig.json´ files are being used by VSCode to resolve its ts files.","Url":"https://github.com/angular/angular-cli/issues/29239","RelatedDescription":"Closed issue \"tsconfig.spec.json types are not being resolved when opening testing files in VSCode\" (#29239)"},{"Id":"2765108253","IsPullRequest":false,"CreatedAt":"2024-12-31T14:10:21","Actor":"kajal-neema","Number":"29240","RawContent":null,"Title":"Angular 19/18 build is not taking any new file to the build and just generating artifact from the existing files","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI am trying to create a new project through angular version 19/18 , and after npm install , i run he ng serve... so if icreate any new component this change is not detected by angular but if i change the existing file like app.component.ts its detecting the code changes\nFacing thiss issue since yesterday only earlier it was working \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo error but any new  file is not detected and not getting build as well\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... google-maps, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.8\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29240","RelatedDescription":"Open issue \"Angular 19/18 build is not taking any new file to the build and just generating artifact from the existing files\" (#29240)"},{"Id":"2764169321","IsPullRequest":false,"CreatedAt":"2024-12-31T09:38:21","Actor":"jimjim2a","Number":"29238","RawContent":null,"Title":"AngularNodeAppEngine : dynamic route paths added with Router.resetConfig during AppInitializer can't be reached on SSR","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nHello everyone,\n\nI'm currently trying to migrate an Angular 18 app with SSR enabled using CommonEngine. After switching to V19 I wanted to move to `AngularNodeAppEngine` to be able to have hybrid rendering but I'm facing an issue with dynamic route paths.\n\nThe app we are working on, by default, has no pre-defined route paths. They all come from an API. The end user can edit all the slugs of its app on a dedicated interface.\n\nSo, during `APP_INITIALIZER` we fetch the routes from the API and `Router.resetConfig`.\nThis is working using `CommonEngine`.\n\nBut it doesn't when using AngularNodeAppEngine because of the route extraction phase during build time to feed the Manifest in this scenario.\n\nWhen the app is built, let's say the end user has only activated one route `routeA`. The server manifest has only a route.\n\nBut after some time, the end user chose to add another route to the app (`routeB`). During `APP_INITIALIZER` the route is correctly added to the router config, but since it's not part of the manifest, `routeB` leads to a 404 on SSR.\n\n### Minimal Reproduction\n\nI added a repo to highlight the issue : https://github.com/jimjim2a/ssr-dynamic-routing.\n\nHere are the steps to reproduce the issue : \n\n1. Build the app -> at this time route extraction knows only \"article\" route\n2. open the \"/article\" page -> During app initializer we now add a second route (\"video\")\n3. Click on the \"Go to Video page !\" button -> This works since the second route is added on CSR\n4. Refresh the \"/video\" page -> This path can not be found and leads to a 404\n\nWe are in case there both SSR and CSR Router has correct configuration, but since the manifest extracted during build time is not complete, the SSR of the newly added route leads to 404.\n\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.14.0\nPackage Manager: npm 10.7.0\nOS: darwin x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\nThanks everyone for all the great Job you're doing !","Url":"https://github.com/angular/angular-cli/issues/29238","RelatedDescription":"Open issue \"AngularNodeAppEngine : dynamic route paths added with Router.resetConfig during AppInitializer can't be reached on SSR\" (#29238)"},{"Id":"2761856411","IsPullRequest":false,"CreatedAt":"2024-12-28T19:04:17","Actor":"Char2sGu","Number":"29235","RawContent":null,"Title":"SSR Text Loader Resolves To Wrong Result","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWith the following loader configuration:\n\n```json\n            \"loader\": {\n              \".svg\": \"text\"\n            }\n```\n\nWhen importing the following asset on server:\n\n```ts\nimport icon from '@material-symbols/svg-500/outlined/add.svg';\n```\n\nThe asset is resolved to a path `/@fs/home/char2s/projects/issue-ssr-dev-loader/node_modules/@material-symbols/svg-500/outlined/add.svg` instead of the text content of the asset.\n\nThe loader works correctly on browser or for local assets (not in node_modules)\n\n### Minimal Reproduction\n\nSee https://github.com/Char2sGu/issue-ssr-dev-loader/\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29235","RelatedDescription":"Open issue \"SSR Text Loader Resolves To Wrong Result\" (#29235)"},{"Id":"2761803945","IsPullRequest":true,"CreatedAt":"2024-12-28T17:07:32","Actor":"santoshyadavdev","Number":"29234","RawContent":null,"Title":"fix(@angular-devkit/build-angular) : fix incorrect budget calculation","State":"open","Body":"Fixes #29040\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #29040\r\n\r\n## What is the new behavior?\r\n\r\nIt uses kb value from packages/angular/build/src/utils/bundle-calculator.ts so there is no difference in value when running tests\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29234","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular) : fix incorrect budget calculation\" (#29234)"},{"Id":"2761697711","IsPullRequest":true,"CreatedAt":"2024-12-28T12:58:55","Actor":"faraon-bot","Number":"29233","RawContent":null,"Title":"Add Habilita builder","State":"closed","Body":"Add a new \"Habilita\" builder to the Angular CLI.\n\n* **New Builder Implementation**\n  - Create `habilita.ts` file to implement the \"Habilita\" builder.\n  - Implement the builder logic to log a message.\n  - Export the builder using `createBuilder` function.\n\n* **Builder Configuration**\n  - Modify `builders.json` to add a new entry for the \"Habilita\" builder.\n  - Specify the implementation file and schema for the builder.\n\n* **Schema Definition**\n  - Create `habilita-schema.json` to define the input properties for the \"Habilita\" builder.\n  - Define the \"message\" property as a required string.\n\n---\n\nFor more details, open the [Copilot Workspace session](https://copilot-workspace.githubnext.com/angular/angular-cli/pull/29233?shareId=f736661d-12bb-408b-8ff3-432eb3b83ae5).","Url":"https://github.com/angular/angular-cli/pull/29233","RelatedDescription":"Closed or merged PR \"Add Habilita builder\" (#29233)"},{"Id":"2761196294","IsPullRequest":false,"CreatedAt":"2024-12-27T19:11:46","Actor":"mauriziocescon","Number":"29232","RawContent":null,"Title":"ng-serve: bundle main.js loaded instead of public/main.js","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0 (not sure which one changed the behaviour... but for sure 19.0.0 was fine)\n\n### Description\n\nHey! \n\nIt seems to me the current `ng serve` (cli 19.0.6) has a problem loading any file named `main.js` saved in the public folder. The issue is very easy to reproduce: \n- create a new project, \n- save a simple `main.js` in `public/test`, \n- run `ng serve`\n- open `http://localhost:4200/test/main.js`, \n- the `main.js` from the bundle is loaded. \n\n<img width=\"1678\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/deef8e70-7e06-42e8-860e-4d1c7af75275\" />\n\n\n### Minimal Reproduction\n\n- create a new project,\n- save a simple `main.js` in `public/test`,\n- run `ng serve`,\n- open `http://localhost:4200/test/main.js`,\n- the `main.js` from the bundle is loaded.\n\n\n### Your Environment\n\n```text\ncli 19.0.6\n```","Url":"https://github.com/angular/angular-cli/issues/29232","RelatedDescription":"Open issue \"ng-serve: bundle main.js loaded instead of public/main.js\" (#29232)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2765335638","IsPullRequest":true,"CreatedAt":"2025-01-07T02:03:10","Actor":"IgnacioCabanellas","Number":"30261","RawContent":null,"Title":"fix(material/menu): prevent interaction with <a> in disabled menu items (#30203)","State":"closed","Body":"Fix the issue where <a> tags inside disabled mat-menu-items were still interactive, allowing users to navigate even when the menu item was disabled.\r\n\r\n### Problem:\r\n- The anchor links inside disabled `mat-menu-items` were still interactive.\r\n- Users could right click on them and navigate to the associated link with the `Open link in new tab`  for example, despite the items being disabled.\r\n\r\n### Solution:\r\n- Added the CSS rule pointer-events: none; to disable interaction with anchor tags inside disabled mat-menu-item elements.\r\n\r\n### Additional Information:\r\n- A StackBlitz demo is available to showcase both the bug and the fix: https://stackblitz.com/~/github.com/IgnacioCabanellas/met-menu-item-demo\r\n\r\nFixes #30203\r\n","Url":"https://github.com/angular/components/pull/30261","RelatedDescription":"Closed or merged PR \"fix(material/menu): prevent interaction with <a> in disabled menu items (#30203)\" (#30261)"},{"Id":"2766578370","IsPullRequest":true,"CreatedAt":"2025-01-06T21:02:25","Actor":"kseamon","Number":"30265","RawContent":null,"Title":"perf(material/tooltip): Use afterNextRender to invoke aria describer …","State":"closed","Body":"…to align layout updates with other components using afterNextRender.\r\n\r\nIn tandem with #30242 reduces layout thrashing for tables with sticky columns and tooltips.","Url":"https://github.com/angular/components/pull/30265","RelatedDescription":"Closed or merged PR \"perf(material/tooltip): Use afterNextRender to invoke aria describer …\" (#30265)"},{"Id":"2771287064","IsPullRequest":false,"CreatedAt":"2025-01-06T19:20:10","Actor":"martinboue","Number":"30276","RawContent":null,"Title":"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`mat-icon-button` ripple color is incorrect when the button is a child of a selected `mat-radio-button` .\n\n### Reproduction\n\ncomponent.html:\n\n```\n<mat-radio-group>\n\t<mat-radio-button>\n\t\t<span>Option 1</span>\n\t\t<button mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</mat-radio-button>\n</mat-radio-group>\n```\n\n### Expected Behavior\n\nclose icon button ripple color is light grey/transparent:\n![Image](https://github.com/user-attachments/assets/1ed8a6c2-d6f3-46d6-96a8-7dc72de78ba2)\n\n\n### Actual Behavior\n\nclose icon button ripple color is the primary opaque color:\n![Image](https://github.com/user-attachments/assets/4e1a9d9f-2b7f-4aa6-a55a-6076a0ec1258)\n \n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30276","RelatedDescription":"Open issue \"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button\" (#30276)"},{"Id":"2771249791","IsPullRequest":false,"CreatedAt":"2025-01-06T18:54:49","Actor":"martinboue","Number":"30275","RawContent":null,"Title":"bug(form-field): Default options not applied in dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`MAT_FORM_FIELD_DEFAULT_OPTIONS` do not apply to form-field inside material dialog component.\n\n\n### Reproduction\n\nin root app.component.ts:\n```\n@Component({\n\t...\n\tproviders: [\n\t\t{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } }\n\t]\n})\nexport class AppComponent { ... }\n```\nin dialog.component.html:\n\n```\n<h2 mat-dialog-title i18n>My title</h2>\n<mat-dialog-content>\n\t<mat-form-field>\n\t\t<mat-label>Some field</mat-label>\n\t\t<input matInput type=\"text\">\n\t</mat-form-field>\n</mat-dialog-content>\n```\n\ndialog.component is opened using `this.dialog.open(ExerciseImportDialogComponent)`\n\n### Expected Behavior\n\nOutline appearance\n![Image](https://github.com/user-attachments/assets/1276bb87-2d2c-4cc8-8335-1fe8c9cf9321)\n\n### Actual Behavior\n\nFill appearance\n![Image](https://github.com/user-attachments/assets/3035ef89-77fd-4b95-8e14-51dfce379042)\n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30275","RelatedDescription":"Open issue \"bug(form-field): Default options not applied in dialog\" (#30275)"},{"Id":"2771196552","IsPullRequest":true,"CreatedAt":"2025-01-06T18:36:14","Actor":"josephperrott","Number":"30274","RawContent":null,"Title":"[Patch version] build: update angular shared dev-infra code to 359350b","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30274","RelatedDescription":"Closed or merged PR \"[Patch version] build: update angular shared dev-infra code to 359350b\" (#30274)"},{"Id":"2771184742","IsPullRequest":true,"CreatedAt":"2025-01-06T18:25:45","Actor":"josephperrott","Number":"30273","RawContent":null,"Title":"build: update angular shared dev-infra code to 359350b","State":"closed","Body":"Closes #30219 as a pr takeover","Url":"https://github.com/angular/components/pull/30273","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code to 359350b\" (#30273)"},{"Id":"2770794396","IsPullRequest":false,"CreatedAt":"2025-01-06T14:35:31","Actor":"tp1906","Number":"30272","RawContent":null,"Title":"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nI'm unable to use mat-divider inside the mat-dialog when setting the vertical property to true.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Create mat-dialog\n2. Add mat-dialog-actions\n3. Add mat-divider with vertical option as true\n\n\n### Expected Behavior\n\nI expect to see a vertical divider between buttons.\n\n### Actual Behavior\n\nNothing is shown.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30272","RelatedDescription":"Open issue \"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog\" (#30272)"},{"Id":"2764034636","IsPullRequest":false,"CreatedAt":"2025-01-06T08:42:24","Actor":"pramodcr28","Number":"30251","RawContent":null,"Title":"feat(COMPONENT): TITLE","State":"closed","Body":"### Feature Description\n\nI would like to suggest adding a mat-slot-picker component similar to the mat-calendar component, which allows users to select specific time slots or predefined intervals seamlessly, enhancing scheduling and booking functionalities in Angular Material. \n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30251","RelatedDescription":"Closed issue \"feat(COMPONENT): TITLE\" (#30251)"},{"Id":"2764436332","IsPullRequest":false,"CreatedAt":"2025-01-06T08:34:51","Actor":"gangadharjannu","Number":"30255","RawContent":null,"Title":"bug(menu): Nested Mat Menu misaligns and appears on click instead of hover for a reusable component with content projection","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm creating a reusable mat menu component with content projection.\n\nFor a single menu, it is working fine without any issue, but for nested menu, it is not showing the default behavior:\n\n1. Not showing right chevron for nested menu trigger \n2. Nested menu opens only on click instead of on hover\n3. Nested menu position is not aligned with parent menu\n\n<img width=\"153\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f9a2a52-093e-49e5-8715-89f8ea47373c\" />\n\nThis issue also is in Angular 8 and 18\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-waqmm6ja?file=src%2Fapp%2Fmenu-panel%2Fmenu-panel.component.html (Angular 18)\nhttps://stackblitz.com/edit/dynamic-material-menu-angular-8-dzzqt2cq?file=src%2Fapp%2Fmenu-panel%2Fmenu-panel.component.html (Angular 8)\n\nSteps to reproduce:\n1. Open StackBlitz, Click on 'Animal index' menu trigger which should open Mat Menu, click on 'Vertebrates' which should opens nested menu\n\n\n\n### Expected Behavior\n\nIt should \n1. Show right chevron for nested menu trigger \n2. Nested menu opens on hover\n3. Nested menu position aligned with parent menu\n\n<img width=\"345\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/268dca45-db69-4a47-99f4-dbb04b65fc2a\" />\n\n\n\n\n### Actual Behavior\n\n1. Not showing right chevron for nested menu trigger \n2. Nested menu opens only on click instead of on hover\n3. Nested menu position is not aligned with parent menu\n\n<img width=\"153\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f9a2a52-093e-49e5-8715-89f8ea47373c\" />\n\n### Environment\n\n- Angular: 8 and 18\n- CDK/Material: 18\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30255","RelatedDescription":"Closed issue \"bug(menu): Nested Mat Menu misaligns and appears on click instead of hover for a reusable component with content projection\" (#30255)"},{"Id":"2769289836","IsPullRequest":false,"CreatedAt":"2025-01-06T08:32:23","Actor":"NkhilKajrekar","Number":"30269","RawContent":null,"Title":"Button style is not getting applied","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nWe migrated from angular Material 14 to angular Material 18 we observed that after migration buttons are not getting rounded corner.  \nif we add below variable then only buttons are getting rounded corner \n  --mdc-button-border-radius: 28px;\n  --mdc-raised-button-border-radius: 28px;\n  --mdc-protected-button-container-shape: 28px;\nIf we create new project with angular Material 18 then this issue is not appearing.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Migrate angular project to Material 18 from 14\n2. check the button appearance \n\n\n### Expected Behavior\n\nButton should have rounded corner\n\n### Actual Behavior\n\nbuttons are not appearing with rounded corner\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30269","RelatedDescription":"Closed issue \"Button style is not getting applied\" (#30269)"},{"Id":"2770094103","IsPullRequest":true,"CreatedAt":"2025-01-06T08:13:15","Actor":"crisbeto","Number":"30271","RawContent":null,"Title":"refactor(multiple): use renderer for manually-bound events with options","State":"open","Body":"This is a second attempt at landing the changes from #30195. I've removed some of the riskier changes.\r\n\r\nSwitches all manually-bound event handlers that were passing options to go through the renderer.","Url":"https://github.com/angular/components/pull/30271","RelatedDescription":"Open PR \"refactor(multiple): use renderer for manually-bound events with options\" (#30271)"},{"Id":"2769887343","IsPullRequest":false,"CreatedAt":"2025-01-06T08:08:14","Actor":"linlexing","Number":"30270","RawContent":null,"Title":"bug( overlay): @layer not work at chrome 78","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nold browser not support cascade layers css command,such as @layer.all overlay div not visible, the z-index not set.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\noverlay can work\n\n### Actual Behavior\n\noverlay not work,css error\n\n### Environment\n\n- Angular:\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n- CDK/Material:\n@angular/cdk                    19.0.4\n@angular/material               19.0.4\n- Browser(s):\nchrome 78.0.3904.70 \n- Operating System (e.g. Windows, macOS, Ubuntu):\nwindows","Url":"https://github.com/angular/components/issues/30270","RelatedDescription":"Closed issue \"bug( overlay): @layer not work at chrome 78\" (#30270)"},{"Id":"2769188315","IsPullRequest":true,"CreatedAt":"2025-01-05T09:26:43","Actor":"crisbeto","Number":"30268","RawContent":null,"Title":"fix(material/sidenav): remove deprecated API usage","State":"open","Body":"The sidenav was using `AfterRenderPhase` which is deprecated. These changes switch it to the supported API.","Url":"https://github.com/angular/components/pull/30268","RelatedDescription":"Open PR \"fix(material/sidenav): remove deprecated API usage\" (#30268)"},{"Id":"2768827763","IsPullRequest":false,"CreatedAt":"2025-01-04T13:00:28","Actor":"tayambamwanza","Number":"30267","RawContent":null,"Title":"docs-bug(THEMING): simple M3 Button colour variants example","State":"open","Body":"### Documentation Feedback\n\nIt took me a while but I figured out how to acheive similar behaviour to the color input that m2 had without using `  @include mat.color-variants-backwards-compatibility($theme);`\n\nI chose to use \"tertiary\" as my \"accent\"\n\nFirst I ran \n\n`npm run ng generate @angular/material:theme-color -- --primary-color '#7AA802' --secondary-color '' --tertiary-color '#276667' --neutral-color '' --include-high-contrast --directory=src/app/styles/`\n\nAfter that in the styles.scss I added these 2 classes\n\n```scss\n// Custom Theming for Angular Material\n// For more information: https://material.angular.io/guide/theming\n@use '@angular/material' as mat;\n@use 'app/styles/theme-colors' as theme;\n\n:root {\n  .tertiary {\n    @include mat.theme((\n      color: theme.$tertiary-palette,\n    ));\n  }\n\n  .error {\n    @include mat.theme((\n      color: mat.$red-palette,\n    ));\n  }\n}\n```\n\nI then removed the color input from my buttons and then added the appropriate class e.g. (no need to add a primary class as \"primary\" is the default)\n\n```html\n  <button mat-flat-button> View </button>\n  <button mat-flat-button class=\"tertiary\"> Close </button>\n  <button mat-flat-button class=\"error\"> Delete </button>\n```\n\nThis restored behaviour similar to the old color input\n\n\nI believe an example of similar steps would be helpful to those moving over from m2 to m3 as this was the single biggest issue I faced, the key paragraph was here, so maybe such an example could be provided there:\n\nhttps://material.angular.io/guide/theming#context-specific-themes\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#context-specific-themes","Url":"https://github.com/angular/components/issues/30267","RelatedDescription":"Open issue \"docs-bug(THEMING): simple M3 Button colour variants example\" (#30267)"},{"Id":"2764703890","IsPullRequest":false,"CreatedAt":"2025-01-03T21:16:59","Actor":"GeorgeKnap","Number":"30256","RawContent":null,"Title":"bug(icon): Error retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nAfter migrating from material 18 to 19 I'm getting runtime error on all of my svg icons. \n\n```\nError retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'\n at Object.error (icon.mjs:969:40)\n    at ConsumerObserver2.error (Subscriber.js:100:25)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at tap.js:28:18\n    at OperatorSubscriber2._this._error (OperatorSubscriber.js:21:9)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subject.js:66:29\n    at errorContext (errorContext.js:23:5)\n    at Subject2.error (Subject.js:59:5)\n    at Object.error (share.js:63:18)\n    at ConsumerObserver2.error (Subscriber.js:100:25)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at Subscriber2._error (Subscriber.js:63:24)\n    at Subscriber2.error (Subscriber.js:40:12)\n    at OperatorSubscriber2._this._next (OperatorSubscriber.js:16:21)\n    at Subscriber2.next (Subscriber.js:32:12)\n    at Observable2._subscribe (innerFrom.js:51:18)\n    at Observable2._trySubscribe (Observable.js:33:19)\n    at Observable.js:27:115\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at mergeInternals (mergeInternals.js:54:10)\n    at mergeMap.js:20:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at filter.js:6:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at map.js:6:12\n    at OperatorSubscriber2.<anonymous> (lift.js:10:18)\n    at Observable.js:27:42\n    at errorContext (errorContext.js:23:5)\n    at Observable2.subscribe (Observable.js:23:5)\n    at map.js:6:12\n```\n\nmy icons are registered in MatIconsRegistry like this\n```\nmatIconRegistry.addSvgIconInNamespace(\n        'gk',\n        'bike',\n        domSanitizer.bypassSecurityTrustResourceUrl('assets/img/bike.svg')\n      );\n```\n provided via app initializer:\n```\nprovideAppInitializer(() => registerSvgIcons(inject(MatIconRegistry), inject(DomSanitizer))),\n```\nand used in component\n```\n<mat-icon svgIcon=\"gk:bike\"></mat-icon>\n```\nI run all the automatic migrations and I'm not aware any breaking changes here.\n\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nno error expected just like in material 18\n\n### Actual Behavior\n\nerror above\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30256","RelatedDescription":"Closed issue \"bug(icon): Error retrieving icon gk:bike! Cannot assign to read only property 'taskId' of object '[object Object]'\" (#30256)"},{"Id":"2764133448","IsPullRequest":true,"CreatedAt":"2025-01-03T20:02:52","Actor":"crisbeto","Number":"30253","RawContent":null,"Title":"refactor(material/paginator): switch to inject function","State":"closed","Body":"Switches `mat-paginator` to use the `inject` function now that we've cleaned up the internal usages.","Url":"https://github.com/angular/components/pull/30253","RelatedDescription":"Closed or merged PR \"refactor(material/paginator): switch to inject function\" (#30253)"},{"Id":"2767421842","IsPullRequest":false,"CreatedAt":"2025-01-03T11:32:22","Actor":"benelliott","Number":"30266","RawContent":null,"Title":"docs-bug(theming): Update M2 theme guide with new `theme` mixin","State":"open","Body":"### Documentation Feedback\n\nI am trying to migrate an M2 app to M3 using the documentation on this page [A]: \n\nhttps://material.angular.io/guide/material-2-theming#how-to-migrate-an-app-from-material-2-to-material-3\n\nHowever there are some incongruities when comparing to the guide to theming an M3 app from scratch here [B]:\n\nhttps://material.angular.io/guide/theming#getting-started\n\nNamely, page A implies that you must use the `mat.define-theme` mixin to create a new M3 theme, with no reference of `mat.theme`:\n\n> Create a new M3 theme object using define-theme and pass it everywhere you were previously passing your M2 theme. All Angular Material mixins that take an M2 theme are compatible with M3 themes as well.\n\nWhile page B only mentions `mat.define-theme` in the context of legacy M2 themes:\n\n> If your application depends on a version before v19, or if your application's theme is applied using a theme config created with mat.define-theme, mat.define-light-theme, or mat.define-dark-theme, then you can refer to the theming guides at [v18.material.angular.io/guides](https://v18.material.angular.io/guides).\n\nAnd then onwards only refers to `mat.theme` for defining an M3 theme. \n\nThe docs don't really explain how to use `define-theme` to generate an M3 theme, and it's unclear that the output of `define-theme` is not comparable to the config that can be passed to `mat.theme`. Similarly, it's not clear that a \"valid\" M3 theme config (as can be passed to `mat.theme`) is not sufficient to be passed to a mixin such as `mat.color-variants-backwards-compatibility`.\n\nSome documentation that clarifies the difference between `define-theme` and `theme` would really help here I think. It might also be worth linking to https://v18.material.angular.io/guide/theming from the M2-M3 migration page (https://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles) as there is otherwise no way to see how `define-theme` should be called (despite it being mandatory for the migration).\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles","Url":"https://github.com/angular/components/issues/30266","RelatedDescription":"Open issue \"docs-bug(theming): Update M2 theme guide with new `theme` mixin\" (#30266)"},{"Id":"2764951847","IsPullRequest":true,"CreatedAt":"2025-01-03T07:53:44","Actor":"crisbeto","Number":"30259","RawContent":null,"Title":"fix(cdk/scrolling): avoid SSR error in CdkVirtualScrollableWindow","State":"closed","Body":"The `CdkVirtualScrollableWindow` was referring to the `document` directly which can break in SSR. These changes use the DI token instead.","Url":"https://github.com/angular/components/pull/30259","RelatedDescription":"Closed or merged PR \"fix(cdk/scrolling): avoid SSR error in CdkVirtualScrollableWindow\" (#30259)"},{"Id":"2762169463","IsPullRequest":true,"CreatedAt":"2025-01-03T07:51:51","Actor":"crisbeto","Number":"30247","RawContent":null,"Title":"fix(material/datepicker): simplify DI setup","State":"closed","Body":"Previously we had to define an injection token for the `MatDateRangeInput` in order to avoid circular references. Now we can do the same with a type-only imports so we can simplify the setup.\r\n\r\nFixes #30238.","Url":"https://github.com/angular/components/pull/30247","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): simplify DI setup\" (#30247)"},{"Id":"2762812561","IsPullRequest":true,"CreatedAt":"2025-01-03T07:47:11","Actor":"crisbeto","Number":"30249","RawContent":null,"Title":"fix(cdk/menu): avoid resetting the scroll position when using the mouse","State":"closed","Body":"The CDK menu has some logic that forwards focus to the first item when the host is focused. The problem is that every time the user clicks on the scrollbar, they blur the current item and focus the menu which then forwards focus back to the first item which in turn causes the scroll position to jump to the top.\r\n\r\nThese changes add some logic to not forward focus when focus comes from a mouse interaction.\r\n\r\nFixes #30130.","Url":"https://github.com/angular/components/pull/30249","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): avoid resetting the scroll position when using the mouse\" (#30249)"},{"Id":"2766387391","IsPullRequest":false,"CreatedAt":"2025-01-02T17:31:45","Actor":"tayambamwanza","Number":"30264","RawContent":null,"Title":"bug(THEMING): When generating custom color pallette $secondary-palette is not generated","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen generating a custom theme $secondary-pallette is missing\n\n### Reproduction\n\nRun \n\n```\nng generate @angular/material:theme-color -- --primary-color '#FFFFFF' --secondary-color '#000000' --tertiary-color '#FF9800' --neutral-color ''\n```\n\n\n### Expected Behavior\n\nIn the _theme-colors.scss it should generates:\n\n```scss\n$primary-palette: map.merge(map.get($_palettes, primary), $_rest);\n$secondary-palette: map.merge(map.get($_palettes, secondary), $_rest);\n$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);\n```\n\n### Actual Behavior\n\nIn the _theme-colors.scss it generates:\n\n```scss\n$primary-palette: map.merge(map.get($_palettes, primary), $_rest);\n$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);\n```\n\n### Environment\n\n- Angular: 19.0.5\n","Url":"https://github.com/angular/components/issues/30264","RelatedDescription":"Closed issue \"bug(THEMING): When generating custom color pallette $secondary-palette is not generated\" (#30264)"},{"Id":"2764730828","IsPullRequest":true,"CreatedAt":"2025-01-02T16:38:25","Actor":"crisbeto","Number":"30257","RawContent":null,"Title":"build: bump year","State":"closed","Body":"Happy New Year! 🎉","Url":"https://github.com/angular/components/pull/30257","RelatedDescription":"Closed or merged PR \"build: bump year\" (#30257)"},{"Id":"2763039165","IsPullRequest":false,"CreatedAt":"2025-01-02T16:37:48","Actor":"chandanbhatt","Number":"30250","RawContent":null,"Title":"bug(cdkMenuItem): Pressing \"Enter\" on non-button and non-anchor elements reopens the menu unexpectedly.","State":"closed","Body":"### Description\n\nWhen using the cdkMenuItem directive on non-button and non-anchor elements (e.g., \\<div> or \\<span>), pressing the \"Enter\" key causes the current menu to reopen unexpectedly. This issue affects accessibility and usability when creating custom menu components. Menu is properly closed on mouse click and pressing the \"Spacebar\" key.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vsy7hsgs?file=src%2Fexample%2Fcdk-menu-menubar-example.html\nSteps to reproduce:\n1. Create a cdkMenu with cdkMenuItem directives applied to non-button and non-anchor elements (e.g., \\<div>).\n2. Open the menu and navigate to a menu item using the keyboard.\n3. Press the \"Enter\" key on a non-button cdkMenuItem.\n\n\n### Expected Behavior\n\nThe menu should not reopen or toggle when \"Enter\" is pressed on a cdkMenuItem element if no additional click or keyboard action is configured.\n\n### Actual Behavior\n\nPressing \"Enter\" on a cdkMenuItem element (e.g., \\<div>) causes the menu to reopen unexpectedly.\n\n\n### Environment\n\n- Angular: v19.0.0\n- CDK/Material: v19.0.0\n- Browser(s): Google Chrome | Version 131.0.6778.86\n- Operating System: macOS 14.3.1","Url":"https://github.com/angular/components/issues/30250","RelatedDescription":"Closed issue \"bug(cdkMenuItem): Pressing \"Enter\" on non-button and non-anchor elements reopens the menu unexpectedly.\" (#30250)"},{"Id":"2765639060","IsPullRequest":true,"CreatedAt":"2025-01-02T16:37:47","Actor":"crisbeto","Number":"30263","RawContent":null,"Title":"fix(cdk/menu): avoid re-opening the menu on enter","State":"closed","Body":"Fixes that the CDK menu was re-opening immediately on enter presses on elements that aren't buttons or links.\r\n\r\nFixes #30250.","Url":"https://github.com/angular/components/pull/30263","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): avoid re-opening the menu on enter\" (#30263)"},{"Id":"2764996858","IsPullRequest":true,"CreatedAt":"2025-01-02T08:43:51","Actor":"matrix-compute","Number":"30260","RawContent":null,"Title":"Refs/heads/main","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30260","RelatedDescription":"Closed or merged PR \"Refs/heads/main\" (#30260)"},{"Id":"2765574433","IsPullRequest":false,"CreatedAt":"2025-01-02T07:39:08","Actor":"DerBasler","Number":"30262","RawContent":null,"Title":"bug(@angular/material/core): CanUpdateErrorState and mixinErrorState are removed","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nDisclaimer: I am not sure if this is a bug or just needs some documentation. (I could not find anything about this in the recent changelog)\n\n@angular/material/core used to export CanUpdateErrorState and mixinErrorState which it does not anymore.\n\nI can see it getting deprecated here: https://github.com/DerBasler/components/commit/94306f370d7cdb71d6dd0b55d3274bf4bb310ed5#diff-606a332883a0dda9b5ef3fa3473ab14ab59820c71ae2b04f801ec4d1d4e0ccb4R85\n\nand removed here: https://github.com/DerBasler/components/commit/5b8d8c396c7c91d11ba2126ed9387712c4c82614\n\nBut there is no mention in the changelog that I could find and no example how to migrate this.\n\nI will post my findings here once I know more.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nPreferably would be some automatic migration in the cli otherwise a checkpoint in the migration checklist from 18 to 19\n\n### Actual Behavior\n\nBuild fails\n\n### Environment\n\n- Angular: 19.0.6\n- CDK/Material: 19.0.4\n- Browser(s): - (fails to build)\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30262","RelatedDescription":"Open issue \"bug(@angular/material/core): CanUpdateErrorState and mixinErrorState are removed\" (#30262)"},{"Id":"2764950560","IsPullRequest":false,"CreatedAt":"2025-01-01T09:17:57","Actor":"danielsharvey","Number":"30258","RawContent":null,"Title":"bug(mat-tree): How to maintain tree expansion state if TreeControl is deprecated?","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\npre v18.2.0\n\n### Description\n\nPreviously, it was possible to maintain the expansion state independent of the MatTree (rendered) component by using a TreeControl.\n\nWith TreeControl deprecated, this does not appear possible any longer.\n\nI rely on this feature so would appreciate consideration of a path forward.\n\nOf note, the selection model is maintained privately in MatTree:\nhttps://github.com/angular/components/blob/b961966d285c1f4986d214084ff585a713adc3bd/src/cdk/tree/tree.ts#L366-L372\n\n\nNote that this is not a duplicate of #29856, which looks to relate to accessing some of the methods of TreeControl, which have been made available on MatTree itself.\n\n### Reproduction\n\nI can produce a reproduction but I believe the regression has been clearly explained above and a reproduction does not add value.\n\n### Expected Behavior\n\nThere is a mechanism for maintaining expansion state independent of the rendered component.\n\n### Actual Behavior\n\nExpansion state is lost when the component is destroyed.\n\n### Environment\n\n```\nAngular CLI: 18.0.3\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.0.2\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1800.3\n@angular-devkit/build-angular     18.0.3\n@angular-devkit/core              18.0.3\n@angular-devkit/schematics        18.0.3\n@angular/cdk                      18.2.14\n@angular/cli                      18.0.3\n@angular/flex-layout              14.0.0-beta.41\n@angular/material                 18.2.14\n@angular/material-luxon-adapter   18.2.14\n@schematics/angular               18.0.3\nng-packagr                        18.0.0\nrxjs                              7.8.1\ntypescript                        5.4.5\nzone.js                           0.14.4\n```","Url":"https://github.com/angular/components/issues/30258","RelatedDescription":"Open issue \"bug(mat-tree): How to maintain tree expansion state if TreeControl is deprecated?\" (#30258)"},{"Id":"2764255672","IsPullRequest":false,"CreatedAt":"2024-12-31T11:08:46","Actor":"lopatnov","Number":"30254","RawContent":null,"Title":"bug(Autocomplete): Incorrect overlay in Dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n- Create Autocomplete in dialog with scroll\n- Open Autocomplete options\n- Scroll down\n- Autocomplete options above the dialog, because overlay for Autocomplete creates in the same way of dialog. So overlay for Autocomplete is wrong. Options should be inside Dialog.\n \n![Image](https://github.com/user-attachments/assets/0b7f7837-6c52-4835-862d-becb28dd68f1)\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n\n1. Create Autocomplete in dialog with scroll\n2. Open Autocomplete options\n3. Scroll down\n4. Autocomplete options above the dialog, because overlay for Autocomplete creates in the same way of dialog. \n\n### Expected Behavior\n\nAutocomplete options should be inside the dialog\n\n### Actual Behavior\n\nAutocomplete options above the dialog\n\n### Environment\n\n- Angular: 18.2.13\n- CDK/Material: 18.2.14\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n\nTo be precise:\n\n\"@angular/cdk\": \"^18.2.14\",\n\"@angular/common\": \"^18.2.13\",\n\"@angular/material\": \"^18.2.14\",\n","Url":"https://github.com/angular/components/issues/30254","RelatedDescription":"Open issue \"bug(Autocomplete): Incorrect overlay in Dialog\" (#30254)"},{"Id":"2764088591","IsPullRequest":false,"CreatedAt":"2024-12-31T08:58:27","Actor":"gurelsoycaner","Number":"30252","RawContent":null,"Title":"bug(COMPONENT):  [ERROR] TS2305: Module '\"@angular/material/core\"' has no exported member 'CanUpdateErrorState'","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm getting a datetimepicker component error like\n [ERROR] TS2305: Module '\"@angular/material/core\"' has no exported member 'CanUpdateErrorState'\nafter updating to NG19;\n\nI gat several error but all abt datetimepicker I guess\nError like :-\n    node_modules/@angular-material-components/datetime-picker/lib/date-range-input-parts.d.ts:81:74:\n      81 │ ...\"@angular/material/core\")._Constructor<CanUpdateErrorState> & i.\n\n   node_modules/@angular-material-components/datetime-picker/lib/date-range-input-parts.d.ts:81:143:\n      81 │ ...gular/material/core\")._AbstractConstructor<CanUpdateErrorState>...\n         ╵                          ~~~~~~~~~~~~~~~~~~~~\n\nHow do I fix this, pls help.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\n   node_modules/@angular-material-components/datetime-picker/lib/date-range-input-parts.d.ts:81:143:\n      81 │ ...gular/material/core\")._AbstractConstructor<CanUpdateErrorState>...\n         ╵                          ~~~~~~~~~~~~~~~~~~~~\n\n\n### Actual Behavior\n\n   node_modules/@angular-material-components/datetime-picker/lib/date-range-input-parts.d.ts:81:143:\n      81 │ ...gular/material/core\")._AbstractConstructor<CanUpdateErrorState>...\n         ╵                          ~~~~~~~~~~~~~~~~~~~~\n\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30252","RelatedDescription":"Closed issue \"bug(COMPONENT):  [ERROR] TS2305: Module '\"@angular/material/core\"' has no exported member 'CanUpdateErrorState'\" (#30252)"},{"Id":"2762232701","IsPullRequest":false,"CreatedAt":"2024-12-29T12:33:14","Actor":"jorgedacal","Number":"30248","RawContent":null,"Title":"feat(mat.*-overrides): Improve the styles overrides functions to not generate so much duplicity selectors in the css.","State":"open","Body":"### Feature Description\n\n# Explain the issue\nFollowing your documentation, when we override the style we can do the next:\n``` scss\n.SELECTOR {\n  @include mat.*-overrides((\n    TOKEN_1,\n    TOKEN_2,\n    TOKEN_3,\n    ...\n    TOKEN_n,\n  ));\n}\n```\n\nBut this is translated into css in N duplicate definitios of SELECTOR:\n``` scss\n.SELECTOR {\n    TOKEN_1_RESULT;\n}\n.SELECTOR {\n    TOKEN_2_RESULT;\n}\n.SELECTOR {\n    TOKEN_3_RESULT;\n}\n...\n.SELECTOR {\n    TOKEN_n_RESULT;\n}\n```\n\nAnd they should be filled togeteher in only one SELECTOR:\n``` scss\n.SELECTOR {\n    TOKEN_1_RESULT;\n    TOKEN_2_RESULT;\n    TOKEN_3_RESULT;\n    TOKEN_n_RESULT;\n}\n```\n\n## Example with button\nFor example to override the button style we can do the next:\n``` scss\n@use '@angular/material' as mat;\n\n:root {\n  @include mat.button-overrides((\n    filled-container-color: orange,\n    filled-label-text-color: red,\n  ));\n}\n```\n\nBut this is translated into css in two duplicate definitios of :root\n``` scss\n:root {\n  --mdc-filled-button-container-color: orange;\n}\n:root {\n  --mdc-filled-button-label-text-color: red;\n}\n```\n\nAnd they should be filled togeteher:\n``` scss\n:root {\n  --mdc-filled-button-container-color: orange;\n  --mdc-filled-button-label-text-color: red;\n}\n```\n# Explanation of why this should be improved\nIf we edit a lot of things it generate a lot of unnecessary verbiage that is unefficiency and cause greatly hinders debugging during develmpment.\n\nFor example, if we edit 100 Selectors and modify 20 tokens in each one, we have at the end 20 duplicate definitions per each selector that is a total of 2000 selector definitions with one line each instead of 100 selector definitions with 20 lines each.\n\nLogically this makes the final css inefficient as it has many selectors to check, in this case 2000 instead of 100.\n\n\n# Thanks\nThank you very much for your great work. I hope you correct this, and if there is already a way to avoid these duplicities please let me know and you should add it to the official documentation.\n\n\n\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30248","RelatedDescription":"Open issue \"feat(mat.*-overrides): Improve the styles overrides functions to not generate so much duplicity selectors in the css.\" (#30248)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-07T03:30:02.5873715Z","RunDurationInMilliseconds":1638}