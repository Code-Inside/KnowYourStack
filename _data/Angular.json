{"Data":{"Angular-Issues":{"Issues":[{"Id":"2576596340","IsPullRequest":false,"CreatedAt":"2024-10-09T18:40:59","Actor":"superamadeus","Number":"58142","RawContent":null,"Title":"Allow Pipes (or Similar) in Action Expressions (Event Bindings)","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, compiler\n\n### Description\n\nPipes are forbidden in action expressions (event bindings) according to the parser. \nThere are times that it would be convenient and (IMO) a huge productivity and organization boost if they were allowed.\n\nExample:\n```html\n<button (click)=\"count.set(count() | contrivedIncrementPipe)\">Count: {{count()}}</button>\n// NG5002: Parser Error: Cannot have a pipe in an action expression at column 21 in [count.set(count() | contrivedIncrementPipe)] \n// in /home/projects/stackblitz-starters-p3ug7s/src/main.ts@18:21\n```\n\nI imagine that this use case does not map directly to the other semantics of pipes as they exist in Angular today (re: change detection mostly). \n\nMy motivating use case is emulating Vue's _[Event Modifiers](https://vuejs.org/guide/essentials/event-handling#event-modifiers)_ for `Event.stopPropagation()` and `Event.preventDefault()`.\n\n```html\n<button (click)=\"handleClickRun($event | $stop | $prevent)\">Run!</button>\n// NG5002: Parser Error: Cannot have a pipe in an action expression at column 25 in [handleClickRun($event | $stop | $prevent)] \n// in /home/projects/stackblitz-starters-p3ug7s/src/main.ts@32:21\n```\n\n```typescript\n@Pipe({\n  name: '$prevent',\n  standalone: true,\n  // idempotent: true,\n})\nexport class EventPreventDefaultPipe implements PipeTransform {\n  transform<T extends Event>(event: T): T {\n    event.preventDefault();\n    return event;\n  }\n}\n\n@Pipe({\n  name: '$stop',\n  standalone: true,\n  // idempotent: true,\n})\nexport class EventStopPropagationPipe implements PipeTransform {\n  transform<T extends Event>(event: T): T {\n    event.stopPropagation();\n    return event;\n  }\n}\n```\n\n### Proposed solution\n\nEnd the prohibition of pipes in action expressions.\n\n**or**\n\nProvide a new thing (i.e. new decorator instead of `@Pipe`) to achieve the same goal: make it easier to share certain functionality in action expressions.\n\n### Alternatives considered\n\n**Dependency Injection / Local Member Declaration**\nThis could also be resolved by explicitly injecting a service object or otherwise manually providing the functionality to your component.\nThis is the status quo, but it is often excessively cumbersome and error prone-- for what I imagine to be the precise reasons pipes exist in the first place. \n\nKeywords I used to try to find existing discussion/issues (with no luck): pipes, NG5002, action expression, event binding, event modifier\n\nEdit: removed `pure: true` from my example pipes, because they are not pure :)","Url":"https://github.com/angular/angular/issues/58142","RelatedDescription":"Closed issue \"Allow Pipes (or Similar) in Action Expressions (Event Bindings)\" (#58142)"},{"Id":"2576249667","IsPullRequest":true,"CreatedAt":"2024-10-09T16:23:35","Actor":"devversion","Number":"58139","RawContent":null,"Title":"refactor(migrations): allow reuse of input incompatibility categorization in query migration","State":"closed","Body":"This commit moves the incompatibility categorization into a more common place, and renames it from Input incompatibilities to \"field incompatibilities\". This construct can then be used in the queries migration as well to give insight into why certain fields weren't migrated.","Url":"https://github.com/angular/angular/pull/58139","RelatedDescription":"Closed or merged PR \"refactor(migrations): allow reuse of input incompatibility categorization in query migration\" (#58139)"},{"Id":"2576279346","IsPullRequest":false,"CreatedAt":"2024-10-09T15:56:59","Actor":"taylorwaddell","Number":"58140","RawContent":null,"Title":"HEAD TO ANGULAR.DEV button does lead to correct page for @defer","State":"closed","Body":"### Describe the problem that you experienced\n\nThe old documentation page for `@defer`, [angular.io/api/core/defer](https://angular.io/api/core/defer), has the standard \"HEAD TO ANGULAR.DEV\" button in the header of the pagee. This button brings the user to [angular.dev/api/core/defer](https://angular.dev/api/core/defer) which is not a valid page. The new angular.dev page for `@defer` is [angular.dev/api/core/@defer](https://angular.dev/api/core/@defer).\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/api/core/defer\n\n### Describe what you were looking for in the documentation\n\nI was looking for the updated docs page for `@defer`.\n\n### Describe the actions that led you to experience the problem\n\nClicking the \"HEAD TO ANGULAR.DEV\" button in the header on the [angular.dev/api/core/defer](https://angular.dev/api/core/defer) page.\n\n### Describe what you want to experience that would fix the problem\n\nI want this button to bring me to [angular.dev/api/core/@defer](https://angular.dev/api/core/@defer).\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/58140","RelatedDescription":"Closed issue \"HEAD TO ANGULAR.DEV button does lead to correct page for @defer\" (#58140)"},{"Id":"2576337225","IsPullRequest":true,"CreatedAt":"2024-10-09T15:55:46","Actor":"JeanMeche","Number":"58141","RawContent":null,"Title":"docs(docs-infra): fix redirect for `@defer`","State":"open","Body":"fixes #58140\r\n","Url":"https://github.com/angular/angular/pull/58141","RelatedDescription":"Open PR \"docs(docs-infra): fix redirect for `@defer`\" (#58141)"},{"Id":"2575349819","IsPullRequest":false,"CreatedAt":"2024-10-09T15:23:37","Actor":"jsaguet","Number":"58132","RawContent":null,"Title":"Signal input/queries migrations fail on Windows","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nOn Windows systems, the signal/queries migrations fail with the following error.\n```\nError: File does not exist for \"lstat\": /C/tsconfig.app.json\n    at DevkitMigrationFilesystem.lstat (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:31333:19)\n    at calcProjectFileAndBasePath (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:144:31)\n    at readConfiguration (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:176:43)\n    at createNgtscProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:331:22)\n    at SignalQueriesMigration.createProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:367:16)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:861:40\n    at Array.map (<anonymous>)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:859:60\n    at async callRuleAsync (C:\\angular-project\\node_modules\\@angular-devkit\\schematics\\src\\rules\\call.js:77:18)\n```\n\nThis is reproducible with a new angular project generated by the CLI and updated to ng 19.\nCommands run: `ng g @angular/core:signal-input-migration` or `ng g @angular/core:signal-queries-migration` with default options.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/jsaguet/angular-signal-migration\n\n### Please provide the exception or error you saw\n\n```\nError: File does not exist for \"lstat\": /C/tsconfig.app.json\n    at DevkitMigrationFilesystem.lstat (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:31333:19)\n    at calcProjectFileAndBasePath (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:144:31)\n    at readConfiguration (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:176:43)\n    at createNgtscProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:331:22)\n    at SignalQueriesMigration.createProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:367:16)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:861:40\n    at Array.map (<anonymous>)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:859:60\n    at async callRuleAsync (C:\\angular-project\\node_modules\\@angular-devkit\\schematics\\src\\rules\\call.js:77:18)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-next.8\nAngular Core: 19.0.0-next.8\n\nPlatform: Windows 10 64bits\n\n### Anything else?\n\nFrom what I've seen while debugging, it looks like this line behaves differently on macOS and Windows:\nhttps://github.com/angular/angular/blob/306443dc7c7987da1d22a9ae65b0becfd31f9781/packages/core/schematics/utils/tsurge/helpers/angular_devkit/devkit_filesystem.ts#L79\n\nOn MacOS it returns `/tsconfig.app.json` which is working and on windows it returns `/C/tsconfig.app.json` which doesn't resolve to anything.","Url":"https://github.com/angular/angular/issues/58132","RelatedDescription":"Closed issue \"Signal input/queries migrations fail on Windows\" (#58132)"},{"Id":"2576095247","IsPullRequest":true,"CreatedAt":"2024-10-09T15:23:35","Actor":"devversion","Number":"58137","RawContent":null,"Title":"fix(migrations): properly resolve tsconfig paths on windows","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/58137","RelatedDescription":"Closed or merged PR \"fix(migrations): properly resolve tsconfig paths on windows\" (#58137)"},{"Id":"2576228233","IsPullRequest":true,"CreatedAt":"2024-10-09T15:12:59","Actor":"josephperrott","Number":"58138","RawContent":null,"Title":"build: migrate to use yarn v4","State":"open","Body":"Building on top of @clydin's work in #56442\r\n","Url":"https://github.com/angular/angular/pull/58138","RelatedDescription":"Open PR \"build: migrate to use yarn v4\" (#58138)"},{"Id":"2575779749","IsPullRequest":true,"CreatedAt":"2024-10-09T13:50:04","Actor":"JeanMeche","Number":"58135","RawContent":null,"Title":"fix(platform-server): destroy `PlatformRef` when error happens duringthe `bootstrap()` phase","State":"closed","Body":"The `bootstrap()` phase might fail e.g. due to an rejected promise in some `APP_INIIALIZER`. If `PlatformRef` is not destroyed, then the main app's injector is not destroyed and therefore `ngOnDestroy` hooks of singleton services is not called on the end (failure) of SSR.\r\n\r\nThis could lead to possible memory leaks in custom SSR apps, if their singleton services' `ngOnDestroy` hooks contained an important teardown logic (e.g. unsubscribing from RxJS observable).\r\n\r\nNote: I needed to fix by the way another thing too: now we destroy `moduleRef` when `platformInjector` is destroyed - by setting a `PLATFORM_DESTROY_LISTENER`\r\n\r\nPatch port of #58112\r\n","Url":"https://github.com/angular/angular/pull/58135","RelatedDescription":"Closed or merged PR \"fix(platform-server): destroy `PlatformRef` when error happens duringthe `bootstrap()` phase\" (#58135)"},{"Id":"2575998761","IsPullRequest":true,"CreatedAt":"2024-10-09T13:47:41","Actor":"devversion","Number":"58136","RawContent":null,"Title":"refactor(migrations): detect ternary narrowing in input and query migrations","State":"open","Body":"\r\nWe should skip inputs/queries that are part of ternary narrowing expressions. Those would break builds and we can quickly avoid this in the safe mode as detection is rather easy with the existing analysis data we have.","Url":"https://github.com/angular/angular/pull/58136","RelatedDescription":"Open PR \"refactor(migrations): detect ternary narrowing in input and query migrations\" (#58136)"},{"Id":"2571451367","IsPullRequest":false,"CreatedAt":"2024-10-09T12:12:39","Actor":"Platonn","Number":"58111","RawContent":null,"Title":"`PlatformRef` is not destroyed in SSR if error happens during the `bootstrap()` phase (e.g. when an `APP_INITIALIZER` rejects)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\n### Problem\nIn SSR in `renderApplication()` (or analogically in `renderModule()`) when an error happens in the [bootstrap()](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/platform-server/src/utils.ts#L304) (or respectively  in [platformRef.bootstrapModule()](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/platform-server/src/utils.ts#L267)) - for instance when one of the `APP_INITIALIZER` rejects - the `PlatformRef` is not destroyed. Then `ngOnDestroy()` hooks of singleton services are not called at the end of the SSR, which can lead to possible memory leaks in SSR. \n\n### Reason\nThe [logic for destroying the PlatformRef](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/platform-server/src/utils.ts#L219) is lying only at the end of the `_redner()` function body. So if an error happens earlier during the `bootstrap()` phase, the rest of the `_render()` function (including its ending which destroys the `PlatformRef`) is skipped.\n\nSince the `PlatformRef` is not destroyed, the `EnvironmentInjector` (or the `ModuleRef.injector`) is not destroyed in cascade. Therefore the `ngOnDestroy()` hooks of singleton services provided in such an injector are not invoked. This can can lead to memory leaks in custom apps which have important teardown logics (e.g. unsubscribing from RxJs observables) in their singleton services' `ngOnDestroy` hooks).\n\n### Additional flaw in case of `renderModule()`\n- in case of `renderApplication()`, the `EnvironmentInjector` is destroyed when the `PlatformRef` is destroyed thanks to [setting up a PLATFORM_DESTROY_LISTENER](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L97-L99).\n- but in case of `renderModule()`, the the main `ModuleRef` (and its injector) is not destroyed, even if the `PlatformRef` is destroyed, because in the source code of Angular we currently [we don't setup the PLATFORM_DESTROY_LISTENER](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L105-L109) in the case of `moduleRender()` flow. Moreover, we can't count on [the  `PlatformRef.destroy()` inner logic](https://github.com/Platonn/angular/blob/1b84662677cff3f913b62a573434c7778250bff1/packages/core/src/platform/platform_ref.ts#L143) which invokes `this._modules.forEach(module=>module.destroy())`, because the `this._modules` array is empty until it's populated with the main `moduleRef` [inside the `moduleDoBootstrap()` function](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L158). Unfortunately, if the [error happens early enough, e.g. during resolving the the APP_INITIALIZERs phase](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L116), the error is thrown early and the control doesn't manage to reach [the invocation of `moduleDoBootstrap()`](https://github.com/Platonn/angular/blob/1b84662677cff3f913b62a573434c7778250bff1/packages/core/src/platform/bootstrap.ts#L138) in the end of the `bootstrap()` function body. Therefore the `this._modules` array remain empty and the logic `this._modules.forEach(module=>module.destroy())` does no help - the main `ModuleRef` is never destroyed.\n\nIn other words, to fix the bug:\n- in case of `renderApplication`, it suffices to destroy `PlatformRef` even on failed `bootstrap()` function, e.g. wrap it with a `try{}` block and call the `PlatformRef.destroy()` in the `finally{}` block:\n   ```ts\n   export async function renderApplication<T>(/*...*/) {\n     /* ... */\n      const platformRef = createServerPlatform(options);\n      try {\n        const applicationRef = await bootstrap();\n        return await _render(platformRef, applicationRef);\n      } finally {\n        platformRef.destroy();\n      }\n   ```\n\n- in case of `renderModule`, we need to do the analogical fix as above (i.e. destroy `PlatformRef` in the try-finally block ) AND moreover _I believe (but please correct me if I'm wrong!)_ we should setup the `PLATFORM_DESTROY_LISTENER` [there](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L105-L109), similarly to [how we already do it for the `renderApplication` flow](https://github.com/angular/angular/blob/a36744e4bb946cb10c10542e6b3700cd70633666/packages/core/src/platform/bootstrap.ts#L97-L99).\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Platonn/ng-ssr-memory-leak-bug\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.5\nNode: 20.14.0\nPackage Manager: npm 10.7.0\nOS: darwin arm64\n\nAngular: 18.2.5\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.5\n@angular-devkit/build-angular   18.2.5\n@angular-devkit/core            18.2.5\n@angular-devkit/schematics      18.2.5\n@schematics/angular             18.2.5\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\nI've provided PR with a proposed fix https://github.com/angular/angular/pull/58112","Url":"https://github.com/angular/angular/issues/58111","RelatedDescription":"Closed issue \"`PlatformRef` is not destroyed in SSR if error happens during the `bootstrap()` phase (e.g. when an `APP_INITIALIZER` rejects)\" (#58111)"},{"Id":"2571488128","IsPullRequest":true,"CreatedAt":"2024-10-09T12:12:38","Actor":"Platonn","Number":"58112","RawContent":null,"Title":"fix(platform-server): destroy `PlatformRef` when error happens during the `bootstrap()` phase, e.g. in `APP_INIIALIZER` - to prevent memory leaks in SSR","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [N/A] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n`PlatformRef` is not destroyed if an error happens during the `bootstrap()` phase (e.g. in `APP_INITIALIZER`). Then the main app's injector is not destroyed and therefore `ngOnDestroy` hooks of singleton services were not called on the end (failure) of SSR. \r\n\r\nNote: This could lead to possible memory leaks in custom SSR apps, if their singleton services' `ngOnDestroy` hooks contained an important teardown logic (e.g. unsubscribing from RxJS observable).\r\n\r\nIssue Number: https://github.com/angular/angular/issues/58111\r\n\r\n\r\n## What is the new behavior?\r\n- `PlatformRef` is guaranteed to be destroyed in `renderApplication()` and `renderModule()` functions of `@angular/platform-server` both in the case of successful render and in the case of a failure (resulting in a rejected promise)\r\n- `PLATFORM_DESTROY_LISTENERS` that destroys the app's main injector is now set not only in case of `renderApplication()`, but also in case of `renderModule()`\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information","Url":"https://github.com/angular/angular/pull/58112","RelatedDescription":"Closed or merged PR \"fix(platform-server): destroy `PlatformRef` when error happens during the `bootstrap()` phase, e.g. in `APP_INIIALIZER` - to prevent memory leaks in SSR\" (#58112)"},{"Id":"2575672709","IsPullRequest":false,"CreatedAt":"2024-10-09T11:44:13","Actor":"kaisnb","Number":"58134","RawContent":null,"Title":"Inconsistent recommendation for HostBinding vs host in styleguide and docs","State":"closed","Body":"### Describe the problem that you experienced\n\nThe Angular docs say [\"Always prefer using the host property over @HostBinding and @HostListener. These decorators exist exclusively for backwards compatibility.\"](https://angular.dev/guide/components/host-elements#the-hostbinding-and-hostlistener-decorators:~:text=Always%20prefer%20using,for%20backwards%20compatibility.) but the Angular style guide says [\"Consider preferring the @HostListener and @HostBinding to the host property of the @Directive and @Component decorators.\"](https://angular.dev/style-guide#style-06-03:~:text=Consider%20preferring%20the,decorators.).\n\nThis sounds contradictive to me and I wonder what the official recommendation is.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/host-elements#the-hostbinding-and-hostlistener-decorators:~:text=Always%20prefer%20using,for%20backwards%20compatibility.\n\nhttps://angular.dev/style-guide#style-06-03:~:text=Consider%20preferring%20the,decorators.","Url":"https://github.com/angular/angular/issues/58134","RelatedDescription":"Closed issue \"Inconsistent recommendation for HostBinding vs host in styleguide and docs\" (#58134)"},{"Id":"2574114728","IsPullRequest":true,"CreatedAt":"2024-10-09T08:57:59","Actor":"devversion","Number":"58126","RawContent":null,"Title":"refactor(migrations): fix unique name generation not marking generated identifiers","State":"closed","Body":"The unique name generator did not properly work to avoid collisions with previously generated unique names. This commit fixes this and also improves type safety of the logic.","Url":"https://github.com/angular/angular/pull/58126","RelatedDescription":"Closed or merged PR \"refactor(migrations): fix unique name generation not marking generated identifiers\" (#58126)"},{"Id":"2575159750","IsPullRequest":true,"CreatedAt":"2024-10-09T08:12:45","Actor":"rozpuszczalny","Number":"58131","RawContent":null,"Title":"fix(service-worker): assign initializing client's app version, when a…","State":"open","Body":"… request is for worker script\r\n\r\nWhen a new version of app is available in a service worker, and a client with old version exists, web workers initialized from a client with old version will now be properly assigned with the same version.\r\n\r\nBefore this change, a web worker was assigned with the newest version.\r\n\r\nFixes #57971\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #57971 \r\n\r\n\r\n## What is the new behavior?\r\n\r\nWhen a web worker script request is made to a service worker, it gets assigned the same version as the tab that created it.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n_Not sure if it's a breaking change_\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58131","RelatedDescription":"Open PR \"fix(service-worker): assign initializing client's app version, when a…\" (#58131)"},{"Id":"2574486494","IsPullRequest":false,"CreatedAt":"2024-10-09T06:45:21","Actor":"johncrim","Number":"58129","RawContent":null,"Title":"model() input binding does not emit changes","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo - `model()` is relatively new and in developer preview\n\n### Description\n\nA `model()` property provides an input and an output binding; but when the input is bound to a normal object (not a signal) no change is emitted.\n\nGiven a component:\n\n```ts\n@Component({\n  selector: 'test-model',\n  template: '<ng-content></ng-content>'\n})\nclass ModelEmitComponent {\n\n  readonly model = model<number | null>(null);\n\n  // Set of all non-null emitted values.\n  readonly emitted: number[] = [];\n\n  @Input()\n  set setModelValue(v: number) {\n    this.model.set(v);\n  }\n\n  constructor() {\n    this.model.subscribe(v => {\n      if (v !== null) {\n        this.emitted.push(v);\n      }\n    })\n  }\n}\n```\n\nwhen the `model` object is set via the old-school `@Input` and `WritableSignal.set()`, like:\n\n```html\n<test-model [setModelValue]=\"3\" />\n```\n\nThe value change is emitted, so a change listener can see it.\n\nWhen the `model` object is set using `model` input binding:\n\n```html\n<test-model [model]=\"3\" />\n```\n\nThe value change is _not_ emitted, so there is no way to know that a change occurred. I'm pretty confident in saying that developers will expect all `model` changes to be emitted, not just those caused by `WriteableSignal.set()`.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/johncrim/ng18-tests/blob/main/projects/output-emit/src/app/model-emit.spec.ts\n\n### Please provide the exception or error you saw\n\nNo exception; the error is that the change event is not emitted.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 22.6.0\nPackage Manager: yarn 4.5.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\nTest cases show that the model binding failing to emit occurs both for initial binding, and for input changes after the component is created.\n\n```ts\ndescribe('model() emit', () => {\n  let spectator: SpectatorHost<ModelEmitComponent>;\n  const createHost = createHostFactory(ModelEmitComponent);\n\n  it('@Input model.set() is emitted', () => {\n    spectator = createHost(`<test-model [setModelValue]=\"3\" />`);\n    expect(spectator.component.model()).toBe(3);\n    expect(spectator.component.emitted).toEqual([3]);\n  });\n\n  it('model input is emitted (fails)', () => {\n    spectator = createHost(`<test-model [model]=\"3\" />`);\n    expect(spectator.component.model()).toBe(3);\n    expect(spectator.component.emitted).toEqual([3]); // fails b/c model binding to regular object doesn't emit\n  });\n\n  it('@Input model.set() emits when changed after create', () => {\n    spectator = createHost(`<test-model [setModelValue]=\"initialValue\" />`, {\n      hostProps: {\n        initialValue: null\n      }\n    });\n    expect(spectator.component.model()).toBe(null);\n    expect(spectator.component.emitted).toEqual([]);\n\n    spectator.setHostInput('initialValue', 2);\n    expect(spectator.component.model()).toBe(2);\n    expect(spectator.component.emitted).toEqual([2]);\n  });\n\n  it('model input emits when changed after create (fails)', () => {\n    spectator = createHost(`<test-model [model]=\"initialValue\" />`, {\n      hostProps: {\n        initialValue: null\n      }\n    });\n    expect(spectator.component.model()).toBe(null);\n    expect(spectator.component.emitted).toEqual([]);\n\n    spectator.setHostInput('initialValue', 2);\n    expect(spectator.component.model()).toBe(2);\n    expect(spectator.component.emitted).toEqual([2]); // fails b/c model binding to regular object doesn't emit\n  });\n\n});\n```","Url":"https://github.com/angular/angular/issues/58129","RelatedDescription":"Closed issue \"model() input binding does not emit changes\" (#58129)"},{"Id":"2574867563","IsPullRequest":false,"CreatedAt":"2024-10-09T06:26:06","Actor":"hkashlan","Number":"58130","RawContent":null,"Title":"how to serve from  server.ts","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI am trying to include the trpc in angular server.ts like https://trpc.io/docs/server/adapters/express\n\nthe issue the application is not starting from server.ts\n\n\n### Proposed solution\n\nwe have several options:\n\n- have a flag in serve to start from server.ts\n- have a new command to server from sever.ts\n\n### Alternatives considered\n\nrunning from server.ts may improve the angular Fullstack for ssr, especially if we can debug it.\nin this way Angular can move from only client framework to full stack\nBTW I tried analogjs and it is not mature enough like nextjs","Url":"https://github.com/angular/angular/issues/58130","RelatedDescription":"Closed issue \"how to serve from  server.ts\" (#58130)"},{"Id":"2574354063","IsPullRequest":false,"CreatedAt":"2024-10-08T22:43:30","Actor":"paulirwin","Number":"58128","RawContent":null,"Title":"Signal for TransferState data","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nWhen creating an app that uses Signals and TransferState, it was found that we had to do a fair amount of boilerplate for this to work with persisting the signal state to TransferState and then loading it again on the browser: \n\n- Create a state key with `makeStateKey` that requires a new constant with duplicated type and string key\n- Inject TransferState\n- Create a signal property\n- Set the signal on the server once data is loaded\n- Set the TransferState data keys for each signal\n- Set the signal on the browser from TransferState data\n\nIt would be handy if there is a signal that wraps TransferState and can remove some of this boilerplate to just:\n\n- Create a `transferStateSignal` property, giving it the key and initial value\n- Set the signal on the server once data is loaded\n- (Signal is automatically loaded on the browser from TransferState data)\n\nNo state key, TransferState injection, or setting/loading TransferState is needed.\n\n### Proposed solution\n\nHere is a quick example of a prototype of what this could look like:\n\n```ts\nimport { inject, makeStateKey, signal, TransferState, WritableSignal } from \"@angular/core\";\n\nexport function transferStateSignal<T>(key: string, initialValue: T): WritableSignal<T> {\n    const stateKey = makeStateKey<T>(key);\n    const transferState = inject(TransferState);\n\n    const value = transferState.hasKey(stateKey)\n        ? transferState.get(stateKey, initialValue)\n        : initialValue;\n\n    const signalValue = signal(value);\n\n    const signalProxy = new Proxy(signalValue, {\n        // override `set` method of signalValue to set on TransferState\n        get: (target, prop, receiver) => {\n            if (prop === 'set') {\n                return (newValue: T) => {\n                    transferState.set(stateKey, newValue);\n                    target.set(newValue);\n                };\n            }\n            return Reflect.get(target, prop, receiver);\n        }\n    });\n\n    return signalProxy;\n}\n```\n\nExample usage:\n```ts\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, Inject, PLATFORM_ID } from '@angular/core';\nimport { transferStateSignal } from '../transferStateSignal';\n\n@Component({\n    selector: 'app-transfer-state-signal',\n    standalone: true,\n    imports: [],\n    template: `\n    <h1>TransferStateSignal Example</h1>\n    <p>String: {{dataString()}}</p>\n    <p>Number: {{dataNumber()}}</p>\n    <p>Boolean: {{dataBoolean()}}</p>\n    <p>Object.key: {{dataObject().key}}</p>\n    <p>Computed: {{computedNumber()}}</p>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransferStateSignalComponent {\n    readonly dataString = transferStateSignal<string>('dataString', 'Hello, World!');\n    readonly dataNumber = transferStateSignal<number>('dataNumber', 42);\n    readonly dataBoolean = transferStateSignal<boolean>('dataBoolean', true);\n    readonly dataObject = transferStateSignal<{ key: string }>('dataObject', { key: 'value' });\n\n    readonly computedNumber = computed<number>(() => this.dataNumber() * 100);\n\n    constructor(\n        @Inject(PLATFORM_ID) private readonly platformId: Object\n    ) { }\n\n    ngOnInit(): void {\n        if (isPlatformServer(this.platformId)) {\n            // pretend we load data on the server here, then set in signals for SSR,\n            // and no need to set on TransferState as it's done in transferStateSignal\n            this.dataString.set('Hello, Server!');\n            this.dataNumber.set(24);\n            this.dataBoolean.set(false);\n            this.dataObject.set({ key: 'server' });\n        } else if (isPlatformBrowser(this.platformId)) {\n            setInterval(() => {\n                this.dataNumber.set(this.dataNumber() + 1);\n            }, 1000);\n        }\n    }\n}\n```\n\nCompare this to what is required to do this without `transferStateSignal`:\n\n```ts\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, Inject, makeStateKey, PLATFORM_ID, signal, TransferState } from '@angular/core';\n\n// duplicated effort of having to make a state key for each and ensure data types match\nconst dataStringKey = makeStateKey<string>('dataStringCurrent');\nconst dataNumberKey = makeStateKey<number>('dataNumberCurrent');\nconst dataBooleanKey = makeStateKey<boolean>('dataBooleanCurrent');\nconst dataObjectKey = makeStateKey<{ key: string }>('dataObjectCurrent');\n\n@Component({\n    selector: 'app-current',\n    standalone: true,\n    imports: [],\n    template: `\n    <h1>Current Example</h1>\n    <p>String: {{dataString()}}</p>\n    <p>Number: {{dataNumber()}}</p>\n    <p>Boolean: {{dataBoolean()}}</p>\n    <p>Object.key: {{dataObject().key}}</p>\n    <p>Computed: {{computedNumber()}}</p>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CurrentComponent {\n    readonly dataString = signal<string>('Hello, World!');\n    readonly dataNumber = signal<number>(42);\n    readonly dataBoolean = signal<boolean>(true);\n    readonly dataObject = signal<{ key: string }>({ key: 'value' });\n\n    readonly computedNumber = computed<number>(() => this.dataNumber() * 100);\n\n    constructor(\n        @Inject(PLATFORM_ID) private readonly platformId: Object,\n        private readonly transferState: TransferState, // extra import\n    ) { }\n\n    ngOnInit(): void {\n        if (isPlatformServer(this.platformId)) {\n            // pretend we load data on the server here, then set in signals for SSR\n            this.dataString.set('Hello, Server!');\n            this.dataNumber.set(24);\n            this.dataBoolean.set(false);\n            this.dataObject.set({ key: 'server' });\n\n            // duplicated effort of setting on TransferState\n            this.transferState.set(dataStringKey, this.dataString());\n            this.transferState.set(dataNumberKey, this.dataNumber());\n            this.transferState.set(dataBooleanKey, this.dataBoolean());\n            this.transferState.set(dataObjectKey, this.dataObject());\n        } else if (isPlatformBrowser(this.platformId)) {\n            // duplicated effort of getting from TransferState\n            this.dataString.set(this.transferState.get(dataStringKey, this.dataString()));\n            this.dataNumber.set(this.transferState.get(dataNumberKey, this.dataNumber()));\n            this.dataBoolean.set(this.transferState.get(dataBooleanKey, this.dataBoolean()));\n            this.dataObject.set(this.transferState.get(dataObjectKey, this.dataObject()));\n\n            setInterval(() => {\n                this.dataNumber.set(this.dataNumber() + 1);\n            }, 1000);\n        }\n    }\n}\n```\n\n### Alternatives considered\n\nWill consider creating this as a third-party OSS library if the Angular team is not interested in adding something like this to the framework.","Url":"https://github.com/angular/angular/issues/58128","RelatedDescription":"Open issue \"Signal for TransferState data\" (#58128)"},{"Id":"2573869046","IsPullRequest":true,"CreatedAt":"2024-10-08T20:28:01","Actor":"angular-robot","Number":"58125","RawContent":null,"Title":"build: update actions/cache digest to 3624ceb","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | digest | `2cdf405` -> `3624ceb` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58125","RelatedDescription":"Closed or merged PR \"build: update actions/cache digest to 3624ceb\" (#58125)"},{"Id":"2572451472","IsPullRequest":true,"CreatedAt":"2024-10-08T20:27:09","Actor":"crisbeto","Number":"58119","RawContent":null,"Title":"fix(core): clean up afterRender after it is executed","State":"closed","Body":"We stop tracking `afterRender` hooks as soon as they execute, but their on destroy callbacks stay registered until either the injector is destroyed or the user calls `destroy` manually. This was leading to memory leaks in the `@defer` triggers based on top of `afterRender` when placed inside long-lived views, because the callback would execute, but its destroy logic was waiting for the view to be destroyed.\r\n\r\nThese changes resolve the issue by destroying the `AfterRenderRef` once it is executed.","Url":"https://github.com/angular/angular/pull/58119","RelatedDescription":"Closed or merged PR \"fix(core): clean up afterRender after it is executed\" (#58119)"},{"Id":"2574127080","IsPullRequest":false,"CreatedAt":"2024-10-08T20:21:19","Actor":"DAVIAMERICO242","Number":"58127","RawContent":null,"Title":"Css Intellisense for inline styles ([style] binding) ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIs there no way to get intellisense in [style] binding?\n\n![Image](https://github.com/user-attachments/assets/7fc3014a-922b-46a2-8be7-eeb9a064d82b)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58127","RelatedDescription":"Open issue \"Css Intellisense for inline styles ([style] binding) \" (#58127)"},{"Id":"2573607508","IsPullRequest":true,"CreatedAt":"2024-10-08T15:54:37","Actor":"JeanMeche","Number":"58124","RawContent":null,"Title":"refactor(core): drop the `Mutable` utility type.","State":"open","Body":"The complexity of this type isn't necessary, `Writable` is well suited where it was used.\r\n","Url":"https://github.com/angular/angular/pull/58124","RelatedDescription":"Open PR \"refactor(core): drop the `Mutable` utility type.\" (#58124)"},{"Id":"2572323698","IsPullRequest":false,"CreatedAt":"2024-10-08T10:34:41","Actor":"neena38","Number":"58117","RawContent":null,"Title":"Differences in change detection between components using @for vs *ngFor","State":"closed","Body":"I am facing the same issue already pointed by https://github.com/angular/angular/issues/55486.\n\nAs a part of migrating the project from Angular 15 to 17, I have replaced *ngFor with @for, and it is no longer working as before.\n\nIdeal case, one edit values in parent component which on saving should be reflected in the child component.\n\nCode before:\n\n```\n  <div table-row *ngFor=\"let action of actions; let i = index\">\n          <child-component\n            [actionId]=\"action.actionId\"\n            (editEvent)=\"onEditEvent(action)\"\n          ></child-component>\n   </div>\n```\n\nAfter Migration to 17:\n\n```\n     @for (action of actions; let i = $index; track action.actionId) {\n        <div table-row>\n          <child-component\n            [actionId]=\"action.actionId\"\n            (editEvent)=\"onEditEvent(action)\"\n          ></child-component>\n        </div>\n        }\n \n```\nOn editing parent component, values are no longer reflected in child component after using @for. Any idea why?\n\nI did try tracking the entire object as below which works, but I have come to understand that it is not a good practice to do so.\n\n```\n     @for (action of actions; let i = $index; track action) {\n        <div table-row>\n          <child-component\n            [actionId]=\"action.actionId\"\n            (editEvent)=\"onEditEvent(action)\"\n          ></child-component>\n        </div>\n        }\n```\n\nNote: \nChangeDetectionStrategy is OnPush, howevere we are calling changeDetectorRef.detectChanges() in onEditEvent(action).\nThe action list is dynamic and could be added/modified in parent.\n","Url":"https://github.com/angular/angular/issues/58117","RelatedDescription":"Closed issue \"Differences in change detection between components using @for vs *ngFor\" (#58117)"},{"Id":"2572712643","IsPullRequest":false,"CreatedAt":"2024-10-08T09:59:29","Actor":"kklocker","Number":"58121","RawContent":null,"Title":"Feature request: Case guard: Extended when-conditions on @switch syntax","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nThe new `@switch` syntax is a very welcome one for me. One of the things I noticed when migrating from `[ngSwitch]` was that I wanted to have a way of saying that I only want to switch on a thing `if` another condition was satisfied\n\n### Proposed solution\n\nInspired by [case guards in c#](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/selection-statements#case-guards)\n\nMain suggestion:\n\nUsing the (seems to be standard?) semicolon separated syntax in similar expressions (`@for (...; track ..) `, I would suggest something like this:\n```\n@switch (condition) {\n  @case (caseA; when a == b) {\n    Case A, and a is equal to b\n  }\n  @case (caseA) {\n    Default for case A.\n  }\n.... // further cases\n}\n```\n\ni.e adding support for a `when` selector in the `@switch` syntax\n\n\n### Alternatives considered\n\nC# also supports (from the same link as above) direct comparisons on variables themselves, as sort of implicit inline variables. \n```csharp\nswitch ((a, b))\n{\n    case (> 0, > 0) when a == b:\n    // ....\n}\n\n```\n\nCould be nice to have in angular as well, but probably would require some more thinking","Url":"https://github.com/angular/angular/issues/58121","RelatedDescription":"Open issue \"Feature request: Case guard: Extended when-conditions on @switch syntax\" (#58121)"},{"Id":"2572625587","IsPullRequest":false,"CreatedAt":"2024-10-08T09:30:11","Actor":"kkachniarz220","Number":"58120","RawContent":null,"Title":"Content projection doesn't work with nested @if","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nUsing content projection with new control flow nested @if doesn`t work.\n\n**NOT WORKING**\n```html\n@if(true) {\n  @if(true) {\n    <div card-title>Some title</div>\n  }\n}\n```\n\n**WORKS WELL**\n```html\n@if(true) {\n   <div *ngIf=\"true\" card-title>Some title</div>\n}\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-a9ttfd?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58120","RelatedDescription":"Closed issue \"Content projection doesn't work with nested @if\" (#58120)"},{"Id":"2572346770","IsPullRequest":false,"CreatedAt":"2024-10-08T07:48:59","Actor":"misko626","Number":"58118","RawContent":null,"Title":"NG01050: formControlName must be used with a parent formGroup directive","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello. \n\nI have a problem:\n---------------------------\nI have my custom component. I send form: UntypedFormGroup like an Input to this component.\nComponent code: \n\nimport { Component, Input } from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-radio-buttons',\n  templateUrl: './radio-buttons.component.html',\n  styleUrl: './radio-buttons.component.scss'\n})\nexport class RadioButtonsComponent {\n  @Input() form: UntypedFormGroup;\n  @Input() values: string[];\n  @Input() formControlName: string;\n}\n\n\nTemplate code: \n\n@if (form && values) {\n  <div class=\"radio-buttons-container\" [formGroup]=\"form\">\n    @for (value of values; track value) {\n      <div class=\"buttons-wrapper\">\n        <input\n            type=\"radio\"\n            class=\"radio form-control\"\n            formControlName=\"{{formControlName}}\"\n            [id]=\"'radioButton' + value\"\n            [value]=\"value\"\n            [attr.data-test]=\"'radio-button-' + value\">\n        <label [for]=\"'radioButton' + value\">\n          {{ 'order-approve.' + value | translate }}\n        </label>\n      </div>\n    }\n  </div>\n} @else {\n  {{ 'order-approve.no-needed-data-provided' | translate }}\n}\n\n\nI have got the error (see below in error section).\n\nIn case I move template code right to the parent component, the error not appears. \n\nCan someone help me with that?\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\nNG01050: formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    \n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 17.3.6\nNode: 20.16.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 17.3.6\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.6\n@angular-devkit/build-angular   17.3.6\n@angular-devkit/core            17.3.6\n@angular-devkit/schematics      17.3.6\n@schematics/angular             17.3.6\nrxjs                            7.8.1\ntypescript                      5.3.3\nzone.js                         0.14.4\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58118","RelatedDescription":"Closed issue \"NG01050: formControlName must be used with a parent formGroup directive\" (#58118)"},{"Id":"2572085106","IsPullRequest":true,"CreatedAt":"2024-10-08T06:18:18","Actor":"angular-robot","Number":"58116","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.1` |\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.26.10` -> `v3.26.12` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.26.12`](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n### [`v3.26.11`](https://redirect.github.com/github/codeql-action/compare/v3.26.10...v3.26.11)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.10...v3.26.11)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58116","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#58116)"},{"Id":"2572083118","IsPullRequest":true,"CreatedAt":"2024-10-08T05:04:51","Actor":"angular-robot","Number":"58115","RawContent":null,"Title":"build: update babel dependencies to v7.25.7","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/cli](https://babel.dev/docs/en/next/babel-cli) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-cli)) | dependencies | patch | [`7.25.6` -> `7.25.7`](https://renovatebot.com/diffs/npm/@babel%2fcli/7.25.6/7.25.7) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | dependencies | patch | [`7.25.2` -> `7.25.7`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.25.2/7.25.7) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-generator)) | dependencies | patch | [`7.25.6` -> `7.25.7`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.25.6/7.25.7) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/cli)</summary>\n\n### [`v7.25.7`](https://redirect.github.com/babel/babel/blob/HEAD/CHANGELOG.md#v7257-2024-10-02)\n\n[Compare Source](https://redirect.github.com/babel/babel/compare/v7.25.6...v7.25.7)\n\n##### :bug: Bug Fix\n\n-   `babel-helper-validator-identifier`\n    -   [#&#8203;16825](https://redirect.github.com/babel/babel/pull/16825) fix: update identifier to unicode 16 ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n-   `babel-traverse`\n    -   [#&#8203;16814](https://redirect.github.com/babel/babel/pull/16814) fix: issue with node path keys updated on unrelated paths ([@&#8203;DylanPiercey](https://redirect.github.com/DylanPiercey))\n-   `babel-plugin-transform-classes`\n    -   [#&#8203;16797](https://redirect.github.com/babel/babel/pull/16797) Use an inclusion rather than exclusion list for `super()` check ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n-   `babel-generator`\n    -   [#&#8203;16788](https://redirect.github.com/babel/babel/pull/16788) Fix printing of TS `infer` in compact mode ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n    -   [#&#8203;16785](https://redirect.github.com/babel/babel/pull/16785) Print TS type annotations for destructuring in assignment pattern ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n    -   [#&#8203;16778](https://redirect.github.com/babel/babel/pull/16778) Respect `[no LineTerminator here]` after nodes ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n##### :nail_care: Polish\n\n-   `babel-types`\n    -   [#&#8203;16852](https://redirect.github.com/babel/babel/pull/16852) Add deprecated JSDOC for fields ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n\n##### :house: Internal\n\n-   `babel-core`\n    -   [#&#8203;16820](https://redirect.github.com/babel/babel/pull/16820) Allow sync loading of ESM when `--experimental-require-module` ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n-   `babel-helper-compilation-targets`, `babel-helper-plugin-utils`, `babel-preset-env`\n    -   [#&#8203;16858](https://redirect.github.com/babel/babel/pull/16858) Add browserslist config to external dependency ([@&#8203;JLHwung](https://redirect.github.com/JLHwung))\n-   `babel-plugin-proposal-destructuring-private`, `babel-plugin-syntax-decimal`, `babel-plugin-syntax-import-reflection`, `babel-standalone`\n    -   [#&#8203;16809](https://redirect.github.com/babel/babel/pull/16809) Archive syntax-import-reflection and syntax-decimal ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n-   `babel-generator`\n    -   [#&#8203;16779](https://redirect.github.com/babel/babel/pull/16779) Simplify logic for `[no LineTerminator here]` before nodes ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n##### :running_woman: Performance\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;16875](https://redirect.github.com/babel/babel/pull/16875) perf: Avoid extra cloning of namespaces ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n-   `babel-types`\n    -   [#&#8203;16842](https://redirect.github.com/babel/babel/pull/16842) perf: Improve [@&#8203;babel/types](https://redirect.github.com/babel/types) builders ([@&#8203;liuxingbaoyu](https://redirect.github.com/liuxingbaoyu))\n    -   [#&#8203;16828](https://redirect.github.com/babel/babel/pull/16828) Only access `BABEL_TYPES_8_BREAKING` at startup ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58115","RelatedDescription":"Open PR \"build: update babel dependencies to v7.25.7\" (#58115)"},{"Id":"2572082727","IsPullRequest":true,"CreatedAt":"2024-10-08T05:04:30","Actor":"angular-robot","Number":"58114","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/chrome](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/chrome) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/chrome)) | dependencies | patch | [`^0.0.276` -> `^0.0.277`](https://renovatebot.com/diffs/npm/@types%2fchrome/0.0.276/0.0.277) |\n| [@types/hammerjs](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/hammerjs) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/hammerjs)) | dependencies | patch | [`2.0.45` -> `2.0.46`](https://renovatebot.com/diffs/npm/@types%2fhammerjs/2.0.45/2.0.46) |\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58114","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#58114)"},{"Id":"2571492697","IsPullRequest":false,"CreatedAt":"2024-10-07T21:15:33","Actor":"vmachacek","Number":"58113","RawContent":null,"Title":"mute NG6002 when there are other issues as well","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [ ] Bug Report\n- [x] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\nWhen Im working on project with 30+ modules it can happen there is a lot of NG6002 errors which are not root cause of the issue. In such case I have to scroll thru the command line to locate compile type issue which will lead to the resolution of the issue\n\n### Proposed solution [Feature Request only]\n\nWrite NG6002 to console in bulk or grey color or hide them completely (probably not a good idea) when other errors are present\n\n### Alternatives considered [Feature Request only]\n\nscrolling thru 200 lines of command line output","Url":"https://github.com/angular/angular/issues/58113","RelatedDescription":"Open issue \"mute NG6002 when there are other issues as well\" (#58113)"},{"Id":"2571421015","IsPullRequest":false,"CreatedAt":"2024-10-07T20:36:00","Actor":"twittwer","Number":"58110","RawContent":null,"Title":"ng-content doesn't project deferrable views","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIt is not possible to use content projection based on CSS selectors when the projected content is in a deferrable view.  \nBut it works when using `contentChildren` with structural directives and `ngTemplateOutlet`.\nI was expecting that both approaches work the same regarding deferrable views, and it would be really nice to use `@defer` in simple CSS selector based content projection as well.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-ty28hm?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular v18\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58110","RelatedDescription":"Open issue \"ng-content doesn't project deferrable views\" (#58110)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2576890744","IsPullRequest":true,"CreatedAt":"2024-10-09T20:30:52","Actor":"clydin","Number":"28611","RawContent":null,"Title":"refactor(@angular/build): reduce inline style language value per call usage","State":"open","Body":"The configured inline style language for Angular components is now set during the construction of the component stylesheet bundler. This avoids needing to repeatedly pass the value into each inline bundling call. The ability to customize the language per call is retained to allow individual style control if needed.","Url":"https://github.com/angular/angular-cli/pull/28611","RelatedDescription":"Open PR \"refactor(@angular/build): reduce inline style language value per call usage\" (#28611)"},{"Id":"2573099933","IsPullRequest":true,"CreatedAt":"2024-10-09T18:31:00","Actor":"alan-agius4","Number":"28598","RawContent":null,"Title":"feat(@angular/build): introduce `ssr.experimentalPlatform` option","State":"closed","Body":"\r\n\r\nThis commit introduces a new option called `experimentalPlatform` to the Angular SSR configuration. \r\n\r\nThe `experimentalPlatform` option allows developers to specify the target platform for the server bundle, enabling the generation of platform-neutral bundles suitable for deployment in environments like edge workers and other serverless platforms that do not rely on Node.js APIs.\r\n\r\nThis change enhances the portability of Angular SSR applications and expands their deployment possibilities.\r\n\r\n**Note:** that this feature does not include polyfills for Node.js modules and is experimental, subject to future changes.","Url":"https://github.com/angular/angular-cli/pull/28598","RelatedDescription":"Closed or merged PR \"feat(@angular/build): introduce `ssr.experimentalPlatform` option\" (#28598)"},{"Id":"2576566747","IsPullRequest":true,"CreatedAt":"2024-10-09T18:06:55","Actor":"dgp1130","Number":"28610","RawContent":null,"Title":"Bump version to \"v19.0.0-next.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28610","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.10\" with changelog.\" (#28610)"},{"Id":"2576555646","IsPullRequest":true,"CreatedAt":"2024-10-09T17:47:17","Actor":"dgp1130","Number":"28609","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28609","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#28609)"},{"Id":"2576519100","IsPullRequest":true,"CreatedAt":"2024-10-09T17:44:36","Actor":"dgp1130","Number":"28608","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28608","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#28608)"},{"Id":"2574869436","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:39","Actor":"angular-robot","Number":"28603","RawContent":null,"Title":"build: update dependency typescript to v5.6.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | devDependencies | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | resolutions | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>microsoft/TypeScript (typescript)</summary>\n\n### [`v5.6.3`](https://redirect.github.com/microsoft/TypeScript/releases/tag/v5.6.3): TypeScript 5.6.3\n\n[Compare Source](https://redirect.github.com/microsoft/TypeScript/compare/v5.6.2...v5.6.3)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/).\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for Typescript 5.6.0 (Beta)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.0%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.1 (RC)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.1%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.2 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.2%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.3 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.3%22+is%3Aclosed+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28603","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v5.6.3\" (#28603)"},{"Id":"2574781042","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:17","Actor":"angular-robot","Number":"28601","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.4.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28601","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.4.2\" (#28601)"},{"Id":"2572631644","IsPullRequest":true,"CreatedAt":"2024-10-09T13:57:27","Actor":"alan-agius4","Number":"28596","RawContent":null,"Title":"fix(@angular/build): move lmdb to optionalDependencies","State":"closed","Body":"A warning mechanism has been implemented to notify users when lmdb is unavailable. On Windows ARM64 systems, however, installing this package with pnpm appears to cause installation failures.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/27882#issuecomment-2395029997\r\n\r\nCloses #27882\r\n","Url":"https://github.com/angular/angular-cli/pull/28596","RelatedDescription":"Closed or merged PR \"fix(@angular/build): move lmdb to optionalDependencies\" (#28596)"},{"Id":"2575683653","IsPullRequest":true,"CreatedAt":"2024-10-09T13:11:29","Actor":"alan-agius4","Number":"28606","RawContent":null,"Title":"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/28604","Url":"https://github.com/angular/angular-cli/pull/28606","RelatedDescription":"Closed or merged PR \"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28606)"},{"Id":"2575786495","IsPullRequest":false,"CreatedAt":"2024-10-09T12:27:48","Actor":"zip-fa","Number":"28607","RawContent":null,"Title":"Feature request: add indexHtmlTransformer and plugins options to application builder","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nHi. This feature exists for a long time in angular-builders and nx custom builders' code.\n`plugins` allows adding vite plugins; we use this option to use custom plugin with .env file parsing, adding ENVIRONMENT_NAME and __APP_VERSION__ global variables and much more. I guess there are plenty of other use-cases for this.\n`indexHtmlTransformer` allows to replace some placeholders in index.html while building or serving an app. Useful to make similar DX when building or developing locally my app. \n\nThere is [not much to do](https://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts) with these two, but i think this will boost DX many times.\nThanks for your time!\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\nhttps://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts","Url":"https://github.com/angular/angular-cli/issues/28607","RelatedDescription":"Open issue \"Feature request: add indexHtmlTransformer and plugins options to application builder\" (#28607)"},{"Id":"2575591269","IsPullRequest":false,"CreatedAt":"2024-10-09T11:39:59","Actor":"mrwiora","Number":"28605","RawContent":null,"Title":"angular-devkit/build-angular esbuild dependency issues","State":"closed","Body":"### Description\n\nMy run of \"npm install @angular-devkit/build-angular\" failed with the following error:\n```\nnpm error code 1\nnpm error path /home/xxx/project/node_modules/@angular/build/node_modules/esbuild\nnpm error command failed\nnpm error command sh -c node install.js\nnpm error /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134\nnpm error     throw new Error(`Expected ${JSON.stringify(versionFromPackageJSON)} but got ${JSON.stringify(stdout)}`);\nnpm error           ^\nnpm error\nnpm error Error: Expected \"0.23.0\" but got \"0.21.5\"\nnpm error     at validateBinaryVersion (/home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134:11)\nnpm error     at /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:284:5\nnpm error\nnpm error Node.js v20.18.0\n```\n\nwhich I resolved by adding the following overrides section to my package.json:\n```\n{\n  \"dependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.6\",\n    \"@angular/core\": \"^18.2.6\",\n  },\n  \"overrides\": {\n    \"esbuild\": \"^0.23.0\"\n  }\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.6\n... core\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.6\n@angular-devkit/build-angular   18.2.6\n@angular-devkit/core            18.2.6\n@angular-devkit/schematics      18.2.7 (cli-only)\n@schematics/angular             18.2.7 (cli-only)\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28605","RelatedDescription":"Closed issue \"angular-devkit/build-angular esbuild dependency issues\" (#28605)"},{"Id":"2575294158","IsPullRequest":true,"CreatedAt":"2024-10-09T11:33:56","Actor":"alan-agius4","Number":"28604","RawContent":null,"Title":"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"This commit provides a workaround for https://github.com/angular/angular-cli/issues/28336, which occurs due to the interaction between `zone.js` and `listr2`. The issue prevents proper termination of the development server using Ctrl + C when dev-server.\r\n\r\nCloses: #28336","Url":"https://github.com/angular/angular-cli/pull/28604","RelatedDescription":"Closed or merged PR \"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28604)"},{"Id":"2574781174","IsPullRequest":true,"CreatedAt":"2024-10-09T09:28:57","Actor":"angular-robot","Number":"28602","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | patch | `v4.1.0` -> `v4.1.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.0` -> `4.21.1`](https://renovatebot.com/diffs/npm/express/4.21.0/4.21.1) |\n| [undici](https://undici.nodejs.org) ([source](https://redirect.github.com/nodejs/undici)) | devDependencies | minor | [`6.19.8` -> `6.20.0`](https://renovatebot.com/diffs/npm/undici/6.19.8/6.20.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.1.1`](https://redirect.github.com/actions/cache/releases/tag/v4.1.1)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.0...v4.1.1)\n\n##### What's Changed\n\n-   Restore original behavior of `cache-hit` output by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/cache/pull/1467](https://redirect.github.com/actions/cache/pull/1467)\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4.1.0...v4.1.1\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.1`](https://redirect.github.com/expressjs/express/releases/tag/4.21.1)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.0...4.21.1)\n\n#### What's Changed\n\n-   Backport a fix for CVE-2024-47764 to the 4.x branch by [@&#8203;joshbuker](https://redirect.github.com/joshbuker) in [https://github.com/expressjs/express/pull/6029](https://redirect.github.com/expressjs/express/pull/6029)\n-   Release: 4.21.1 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6031](https://redirect.github.com/expressjs/express/pull/6031)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.0...4.21.1\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.20.0`](https://redirect.github.com/nodejs/undici/releases/tag/v6.20.0)\n\n[Compare Source](https://redirect.github.com/nodejs/undici/compare/v6.19.8...v6.20.0)\n\n#### What's Changed\n\n-   Remove patched dom types (`v6.x` branch) by [@&#8203;eXhumer](https://redirect.github.com/eXhumer) in [https://github.com/nodejs/undici/pull/3531](https://redirect.github.com/nodejs/undici/pull/3531)\n-   docs(Backport v6.x): Fix signature of RetryHandler by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3594](https://redirect.github.com/nodejs/undici/pull/3594)\n-   deps(dev): update [@&#8203;types/node](https://redirect.github.com/types/node) by [@&#8203;metcoder95](https://redirect.github.com/metcoder95) in [https://github.com/nodejs/undici/pull/3618](https://redirect.github.com/nodejs/undici/pull/3618)\n-   fix: throw on retry when payload is consume by downstream by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3596](https://redirect.github.com/nodejs/undici/pull/3596)\n-   feat(Backport v6.x): move throwOnError to interceptor by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3595](https://redirect.github.com/nodejs/undici/pull/3595)\n-   \\[Backport v6.x] fix: reduce memory usage in client-h1 by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3672](https://redirect.github.com/nodejs/undici/pull/3672)\n-   \\[Backport v6.x] fix: refactor fast timers, fix UND_ERR_CONNECT_TIMEOUT on event loop blocking by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3673](https://redirect.github.com/nodejs/undici/pull/3673)\n-   \\[Backport v6.x] fix: run asserts first if possible by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3674](https://redirect.github.com/nodejs/undici/pull/3674)\n-   \\[Backport v6.x] fix: use fasttimers for all connection timeouts by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3675](https://redirect.github.com/nodejs/undici/pull/3675)\n-   \\[Backport v6.x] ci: less flaky test/request-timeout.js test by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3678](https://redirect.github.com/nodejs/undici/pull/3678)\n-   \\[Backport v6.x] test: less flaky timers acceptance test, rework fast timer tests to pass them faster by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3679](https://redirect.github.com/nodejs/undici/pull/3679)\n-   \\[Backport v6.x] ignore leading and trailing crlfs in formdata body by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3681](https://redirect.github.com/nodejs/undici/pull/3681)\n-   \\[Backport v6.x] mock: fix mocking of Uint8Array and ArrayBuffers as provided mock-responses by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3689](https://redirect.github.com/nodejs/undici/pull/3689)\n-   \\[Backport v6.x] handle body errors by [@&#8203;Uzlopak](https://redirect.github.com/Uzlopak) in [https://github.com/nodejs/undici/pull/3700](https://redirect.github.com/nodejs/undici/pull/3700)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v6.19.8...v6.20.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28602","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28602)"},{"Id":"2569576182","IsPullRequest":true,"CreatedAt":"2024-10-09T09:28:47","Actor":"angular-robot","Number":"28586","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMDkuMSIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28586","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#28586)"},{"Id":"2572353411","IsPullRequest":true,"CreatedAt":"2024-10-09T08:29:13","Actor":"alan-agius4","Number":"28594","RawContent":null,"Title":"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled","State":"closed","Body":"\r\n\r\nThis commit addresses an issue where `index.csr.html` was not being generated when SSR was disabled and prerendering was enabled.\r\n\r\nCloses #28580\r\n","Url":"https://github.com/angular/angular-cli/pull/28594","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled\" (#28594)"},{"Id":"2574388558","IsPullRequest":false,"CreatedAt":"2024-10-08T23:10:01","Actor":"lekhmanrus","Number":"28600","RawContent":null,"Title":"Injecting Custom Template Loading Logic","State":"open","Body":"### Command\n\nbuild, serve\n\n### Description\n\nIn previous Angular versions, when using webpack-based builders, we had the ability to customize how component templates were processed (e.g., using third-party loaders like [ngx-pug-builders](https://github.com/lekhmanrus/ngx-pug-builders) to support Pug templates). With ESBuild, template loading logic to be managed internally by the `AdapterResourceLoader`.\nIt looks, like currently there appears to be no way to inject custom logic into the template loading process. This limits the ability for third-party libraries to provide support for alternative template formats or to apply custom modifications during the build.\n\n### Describe the solution you'd like\n\nIt would be beneficial for Angular to expose a mechanism for developers to hook into or modify the HTML loading logic. This would enable third-party libraries to support template engines like Pug or apply other transformations.\n\nWhile Angular CLI may not want to handle all possible template engines directly, allowing developers to customize the HTML loading process would open the door for greater flexibility and extensibility within the ecosystem.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28600","RelatedDescription":"Open issue \"Injecting Custom Template Loading Logic\" (#28600)"},{"Id":"2572093827","IsPullRequest":true,"CreatedAt":"2024-10-08T17:11:46","Actor":"angular-robot","Number":"28593","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.1` |\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.26.11` -> `v3.26.12` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.26.12`](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28593","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#28593)"},{"Id":"2571124808","IsPullRequest":false,"CreatedAt":"2024-10-08T15:28:50","Actor":"zip-fa","Number":"28590","RawContent":null,"Title":"\"prerender\": false is ignored with \"outputMode\": \"server\"","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi.\n\"prerender\": false is ignored with \"outputMode\": \"server\": angular tries to prerender all my routes and i receive \"undefined\" message on routes extraction step:\n\n![Image](https://github.com/user-attachments/assets/a2e8e9dc-a706-4c4c-a5dd-869036d95e2c)\n\n\nng build command now only reacts to \"export NG_BUILD_PARTIAL_SSR=true && ng build\" - build does not fail with this setup\n\n### Minimal Reproduction\n\nng build\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nv19.0.0-next.8\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28590","RelatedDescription":"Closed issue \"\"prerender\": false is ignored with \"outputMode\": \"server\"\" (#28590)"},{"Id":"2572361742","IsPullRequest":true,"CreatedAt":"2024-10-08T15:28:49","Actor":"alan-agius4","Number":"28595","RawContent":null,"Title":"fix(@angular/build): show error message when error stack is undefined","State":"closed","Body":"Handle cases where the error stack is missing by displaying a relevant message.\r\n\r\nCloses #28590\r\n","Url":"https://github.com/angular/angular-cli/pull/28595","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error message when error stack is undefined\" (#28595)"},{"Id":"2573067411","IsPullRequest":false,"CreatedAt":"2024-10-08T15:06:26","Actor":"Carlosamouco","Number":"28597","RawContent":null,"Title":"extract-i18n performance issues","State":"closed","Body":"### Command\n\nextract-i18n\n\n### Description\n\nAfter installing https://www.npmjs.com/package/stimulsoft-reports-js, I noticed that `ng extract-i18n` became very slow, from approx. 1 minute to almost 4 minutes. This package is very large, and I suspect that it is taking so long because the extract-i18n command is trying to look for messages in the whole chunk that contains this dependency.\n\n### Describe the solution you'd like\n\nCould there be a way to make the tool skip analyzing third-party dependencies that have nothing to do with angular? For example, create a list of dependencies to skip?\n\n### Describe alternatives you've considered\n\nSince I am not using any third party angular libraries, I am considering extracting the messages directly from the source code using a ts parser.","Url":"https://github.com/angular/angular-cli/issues/28597","RelatedDescription":"Closed issue \"extract-i18n performance issues\" (#28597)"},{"Id":"2573450085","IsPullRequest":false,"CreatedAt":"2024-10-08T14:53:47","Actor":"sureshkumarsendrayan","Number":"28599","RawContent":null,"Title":"CSS Skipped selector issue while using SSR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm using Angular Server Side Rendering with Ionic. While building the basic application even without any project code using Server Side Rendering I'm getting the below issue for styles.\n\n`20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir`\n\nI tried setting the below build configuration in angular.json. But it's not resolving the issue.\n\n`\"optimization\": {\n      \"styles\": {\n          \"inlineCritical\": false\n        }\n   }`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.15.0\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\n--------------\nIonic version: \n\n    \"@ionic/angular\": \"^8.0.0\",\n    \"@ionic/angular-server\": \"^8.3.2\",\n    \"@ionic/angular-toolkit\": \"^11.0.1\"\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28599","RelatedDescription":"Closed issue \"CSS Skipped selector issue while using SSR\" (#28599)"},{"Id":"2570574858","IsPullRequest":true,"CreatedAt":"2024-10-08T11:49:03","Actor":"clydin","Number":"28588","RawContent":null,"Title":"refactor(@angular/build): only ignore watching node modules when watching root","State":"closed","Body":"The application builder performs fine-grained file watching now which removes the need to watch the project root by default as it did in early implementations. As a result, the need to ignore the `node_modules` directory is not longer necessary by default and is only needed when the `NG_BUILD_WATCH_ROOT` environment variable is enabled.","Url":"https://github.com/angular/angular-cli/pull/28588","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): only ignore watching node modules when watching root\" (#28588)"},{"Id":"2568905100","IsPullRequest":true,"CreatedAt":"2024-10-08T08:11:06","Actor":"angular-robot","Number":"28583","RawContent":null,"Title":"build: update dependency @inquirer/confirm to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | major | [`4.0.1` -> `5.0.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/4.0.1/5.0.0) |\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | major | [`4.0.1` -> `5.0.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/4.0.1/5.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.0.0`](https://redirect.github.com/SBoudrias/Inquirer.js/releases/tag/v5.0.0)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@4.0.1...@inquirer/confirm@5.0.0)\n\n**Breaking**: Upgrade to RxJS v5 which updates a bunch of Reactive interface method names.\n\nFor people not using the Reactive interface directly, this new major release should just work out of the box.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMDkuMSIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28583","RelatedDescription":"Closed or merged PR \"build: update dependency @inquirer/confirm to v5\" (#28583)"},{"Id":"2572093588","IsPullRequest":true,"CreatedAt":"2024-10-08T05:14:00","Actor":"angular-robot","Number":"28592","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `058af75` -> `b98c0c8` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `e9e110c` -> `5d27ee1` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `fc538e2` -> `f4e57f1` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `81d7211` -> `9235a7d` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `f3e2e8d` -> `69f6867` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `77056c0` -> `c1fa73a` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `491c7b5` -> `ee71b1d` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `d937ed4` -> `852faed` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `944f1ef` -> `22b987f` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `d0839df` -> `1d48341` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `81ad26b` -> `ede7135` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `94b328a` -> `52a17b4` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8c60ac2` -> `129e73c` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `79fb271` -> `1712174` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `5ba3367` -> `d72c9b9` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a5bb449` -> `b6be75b` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `a55009d` -> `492abe2` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `28cc0e8` -> `02b9918` |\n| angular/dev-infra | action | digest | `46771fc` -> `a566262` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-next.8`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-next8-thulium-trumpet-2024-10-09)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-next.7...19.0.0-next.8)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9eb1f867d](https://redirect.github.com/angular/components/commit/9eb1f867d8b45bbc9771062e6a6c40fdd2ca24d1) | fix | **stepper:** remove mock of forms type |\n| [02823c080](https://redirect.github.com/angular/components/commit/02823c080be730d3c8cb7900b2449b660a5b0e08) | fix | **stepper:** reset submitted state when resetting stepper |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b777c2df0](https://redirect.github.com/angular/components/commit/b777c2df0052232cc304e20c46b0d0572d1f9894) | feat | **core:** expose styling information to the docs site |\n| [9546fe77e](https://redirect.github.com/angular/components/commit/9546fe77ef7322276bddf25ed826b2ab73e5ee20) | feat | **timepicker:** add test harnesses |\n| [2646e0885](https://redirect.github.com/angular/components/commit/2646e088510f00ca2ae885d42acae9c7fcd8656e) | feat | **timepicker:** add timepicker component |\n| [0fb4247ce](https://redirect.github.com/angular/components/commit/0fb4247ce834c475556a17e116e20f1ec0fd5a5a) | fix | **core:** avoid browser inconsistencies when parsing time |\n| [984723e10](https://redirect.github.com/angular/components/commit/984723e10bf3cf412058f20c57a4c8117024b0c0) | fix | **schematics:** treat lower dependency builder as default builder ([#&#8203;29833](https://redirect.github.com/angular/components/pull/29833)) |\n| [14e9ec7cc](https://redirect.github.com/angular/components/commit/14e9ec7ccb0956f54604ee9f19c6dbee6b496fcd) | fix | **timepicker:** always re-focus input |\n| [1eda48604](https://redirect.github.com/angular/components/commit/1eda4860400fbb08c76b7760bb0eba3234f0c707) | fix | **timepicker:** hide toggle icon from assistive technology |\n| [490bcfe38](https://redirect.github.com/angular/components/commit/490bcfe38c1f640beefdf537d2af46467f07a4c7) | fix | **timepicker:** more flexible interval parsing |\n| [fb6e20290](https://redirect.github.com/angular/components/commit/fb6e20290ba6842c5190217de55d13044169eebf) | fix | **timepicker:** text field in parse error not up to date |\n\n##### mat\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8f0369a27](https://redirect.github.com/angular/components/commit/8f0369a27faa7cd6758d78a0a4e1c40811747e49) | fix | **paginator:** fix focus issues with paginator buttons ([#&#8203;29379](https://redirect.github.com/angular/components/pull/29379)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [be342289c](https://redirect.github.com/angular/components/commit/be342289c2cc720af31edf1ce98eee08e2bf9235) | fix | remove final references to ComponentFactoryResolver ([#&#8203;29832](https://redirect.github.com/angular/components/pull/29832)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28592","RelatedDescription":"Open PR \"build: update angular\" (#28592)"},{"Id":"2571974031","IsPullRequest":false,"CreatedAt":"2024-10-08T03:47:00","Actor":"sonnyk22","Number":"28591","RawContent":null,"Title":"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nBased on the feedback in this link [#28346](https://github.com/angular/angular-cli/pull/28346), `Angular v19` will provide a much better and easier way to handle the prerendering when it comes to the routes that starts with `\"id\"`.  But this version will not be released until Nov 19th or so.\n\nUsing the below section in the `angular.json` file:\n```\n\"prerender\": {\n    \"routesFile\": \"routes.txt\",\n    \"discoverRoutes\": false\n},\n\"ssr\": {\n    \"entry\": \"server.ts\"\n}\n```\n\nIn `Angular v18.x`, it is is really easy to get prerendered for such basic routes as below:\n```\n   /auth\n   /contact  \n   /info/:id\n```\n\nHowever, is there a way to prerender when the \"id\" is right at the beginning of the route? For example:\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\nThis is a unique request to prerender that I have not found any solution to on search engines.  \n\n\n### Describe the solution you'd like\n\nWhile waiting for `Angular v19` to be released, it would be nice to be able to prerender in `v18.x` via the `routesFile` `routes.txt` for the example routes below:\n\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28591","RelatedDescription":"Open issue \"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"\" (#28591)"},{"Id":"2570630485","IsPullRequest":false,"CreatedAt":"2024-10-07T16:55:09","Actor":"eneajaho","Number":"28589","RawContent":null,"Title":"feat: do full-rebuild when angular.json changes","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nWhen running ng serve and then changing angular.json nothing happens. \n\n\n\n### Describe the solution you'd like\n\nCan we at least expect a full app rebuild. \n\nInstead of killing the dev server and running the command again, ng serve would just refresh on its own? \n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28589","RelatedDescription":"Closed issue \"feat: do full-rebuild when angular.json changes\" (#28589)"},{"Id":"2568905130","IsPullRequest":true,"CreatedAt":"2024-10-07T16:44:53","Actor":"angular-robot","Number":"28584","RawContent":null,"Title":"build: update dependency @inquirer/prompts to v7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | major | [`6.0.1` -> `7.0.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/6.0.1/7.0.0) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | major | [`6.0.1` -> `7.0.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/6.0.1/7.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/prompts)</summary>\n\n### [`v7.0.0`](https://redirect.github.com/SBoudrias/Inquirer.js/releases/tag/%40inquirer/prompts%407.0.0)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/prompts@6.0.1...@inquirer/prompts@7.0.0)\n\n-   `@types/node` is now only a `peerDependencies`. This reduces the install size of inquirer dramatically for folks not using Typescript. It's unlikely to break your builds if you used TS already, if it does run `npm install --dev @&#8203;types/node`/`yarn add --dev @&#8203;types/node`.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMDkuMSIsInVwZGF0ZWRJblZlciI6IjM4LjEwOS4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28584","RelatedDescription":"Closed or merged PR \"build: update dependency @inquirer/prompts to v7\" (#28584)"},{"Id":"2569569413","IsPullRequest":true,"CreatedAt":"2024-10-07T16:43:37","Actor":"alan-agius4","Number":"28585","RawContent":null,"Title":"fix(@schematics/angular): include `index.csr.html` in resources asset group","State":"closed","Body":"\r\nEnsure `index.csr.html` is available for the service worker when using SSR/SSG.\r\n\r\nCloses #28574\r\n","Url":"https://github.com/angular/angular-cli/pull/28585","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): include `index.csr.html` in resources asset group\" (#28585)"},{"Id":"2569847883","IsPullRequest":false,"CreatedAt":"2024-10-07T09:19:03","Actor":"sod","Number":"28587","RawContent":null,"Title":"Allow to configure sass `fatalDeprecations` and `silenceDeprecations` options","State":"open","Body":"### Command\n\nserve, build\n\n### Description\n\nPlease allow to configure [fatalDeprecations](https://sass-lang.com/documentation/js-api/interfaces/options/#fatalDeprecations) and [silenceDeprecations](https://sass-lang.com/documentation/js-api/interfaces/options/#silenceDeprecations).\n\n* `fatalDeprecations` can be used to prevent already deprecated features or syntax be added to the code - by failing the build - in a code base where a lot of people are working on.\n* `silenceDeprecations` can be used, so you don't have to [downgrade sass](https://github.com/angular/angular-cli/pull/28234) anymore.\n\n### Describe the solution you'd like\n\nperhaps in the angular.json:\n\n```\n\"stylePreprocessorOptions\": {\n    \"fatalDeprecations\": [\"color-functions\", \"1.70.0\"],\n    \"silenceDeprecations\": [\"1.77.0\"],\n}\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28587","RelatedDescription":"Open issue \"Allow to configure sass `fatalDeprecations` and `silenceDeprecations` options\" (#28587)"},{"Id":"2568893795","IsPullRequest":false,"CreatedAt":"2024-10-07T07:26:06","Actor":"zip-fa","Number":"28582","RawContent":null,"Title":"Feature request: move ɵextractRoutesAndCreateRouteTree to public api","State":"closed","Body":"### Command\n\nserve, build\n\n### Description\n\nHi. We use ɵextractRoutesAndCreateRouteTree to build sitemap.xml without a hassle. Currently, this api is private and i don't think it will last long here. Is it possible to move it to public api?\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28582","RelatedDescription":"Closed issue \"Feature request: move ɵextractRoutesAndCreateRouteTree to public api\" (#28582)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2576911515","IsPullRequest":true,"CreatedAt":"2024-10-09T20:41:44","Actor":"essjay05","Number":"29853","RawContent":null,"Title":"fix(material/dialog): updates dialog max-height in landscape","State":"open","Body":"Updates Angular Component Dialog component to have a max-height of 95vh which gives it a calculable height for its contents to adjust on smaller screens or in landscape mode so that the action buttons are able to be accessed by scrolling rather than the dialog window cutting them off.\r\n\r\n[Before screencast](https://screencast.googleplex.com/cast/NDYwNTM5NjIzNTg0NTYzMnxkNTBkMzBmYS1mZQ)\r\n[After screencast](https://screencast.googleplex.com/cast/NTI3OTgxMDMwNDYwNjIwOHw0YTkxYjc3ZS04Yw)\r\n\r\nFixes b/323588333","Url":"https://github.com/angular/components/pull/29853","RelatedDescription":"Open PR \"fix(material/dialog): updates dialog max-height in landscape\" (#29853)"},{"Id":"2575971596","IsPullRequest":true,"CreatedAt":"2024-10-09T13:40:18","Actor":"crisbeto","Number":"29852","RawContent":null,"Title":"Bump version to \"v19.0.0-next.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29852","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.8\" with changelog.\" (#29852)"},{"Id":"2575948684","IsPullRequest":true,"CreatedAt":"2024-10-09T13:32:15","Actor":"crisbeto","Number":"29851","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29851","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#29851)"},{"Id":"2575943880","IsPullRequest":true,"CreatedAt":"2024-10-09T13:28:18","Actor":"crisbeto","Number":"29850","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29850","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#29850)"},{"Id":"2568899974","IsPullRequest":false,"CreatedAt":"2024-10-09T12:51:36","Actor":"Cfun1","Number":"29838","RawContent":null,"Title":"docs-bug(icon): The link to","State":"closed","Body":"### Documentation Feedback\n\nThe website https://fortawesome.github.io/Font-Awesome/examples/ mentioned in the documentation below is incorret https://github.com/angular/components/blob/76ada37dfb0a9cfade1157684b74e61e68a5cc13/src/material/icon/icon.ts#L130\n\nsuggestion: https://fontawesome-v4.github.io/examples/index.html\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/icon/api","Url":"https://github.com/angular/components/issues/29838","RelatedDescription":"Closed issue \"docs-bug(icon): The link to\" (#29838)"},{"Id":"2575822668","IsPullRequest":true,"CreatedAt":"2024-10-09T12:51:35","Actor":"miguelcsx","Number":"29849","RawContent":null,"Title":"docs(material/icon): #29838 update broken link in icon documentation","State":"closed","Body":"This pull request fixes a broken link in the documentation for the Angular Material `icon` component. \r\n\r\n**Changes:**\r\n- The incorrect link in `components/src/material/icon/icon.ts` has been updated to the correct one.\r\n  \r\n**Motivation:**\r\n- A broken link can lead to confusion and a poor user experience when reading the documentation.\r\n\r\n**No functionality or API was modified.**\r\n\r\n- closes #29838 \r\n\r\nPlease review and merge if everything looks good. Let me know if any further changes are needed.\r\n","Url":"https://github.com/angular/components/pull/29849","RelatedDescription":"Closed or merged PR \"docs(material/icon): #29838 update broken link in icon documentation\" (#29849)"},{"Id":"2575738364","IsPullRequest":true,"CreatedAt":"2024-10-09T12:48:08","Actor":"crisbeto","Number":"29848","RawContent":null,"Title":"build: account for absolute paths in token extraction","State":"closed","Body":"Fixes an error that is currently breaking the patch branch, because we didn't have a resolver for imports like `@use '@angular/cdk';`.","Url":"https://github.com/angular/components/pull/29848","RelatedDescription":"Closed or merged PR \"build: account for absolute paths in token extraction\" (#29848)"},{"Id":"2575712502","IsPullRequest":false,"CreatedAt":"2024-10-09T11:54:57","Actor":"BackwardsMan","Number":"29847","RawContent":null,"Title":"bug(Badge): position and size on page is off","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe position of the Badge on the Angular Material webpage is off and the wrong size for some badges. \nDon't know if this is a bug in the component itself or strictly how it is displayed on the webpage\nSee image:\n\n![Image](https://github.com/user-attachments/assets/6ba2b982-92c4-4e13-b2ed-1cd08a4ab37b)\n\n\n### Reproduction\n\nLink: https://material.angular.io/components/badge/overview \n\nSteps to reproduce:\n1. Go to webpage\n2. Look at examples for the Badge\n\n\n\n### Expected Behavior\n\n1. Expect a small badge to be smaller than default\n2. Expect a large badge to be larger than default\n3. Expect no badges to overlap text\n4. Expect no badges to overlap icons\n5. Expect badge with icon to show number 15 \n\n### Actual Behavior\n\n1. Small badge is not smaller than default badge\n2. Large badge is nog bigger than default badge\n3. Large badge overlaps with text\n4. Icon with a badge overlaps the icon\n5. Icon with a badge shows \"1 and ellipsis\"\n\n### Environment\n\n- Browser(s): Chrome Version 129.0.6668.90 (Official Build) (arm64)\n- Operating System: macOS\n","Url":"https://github.com/angular/components/issues/29847","RelatedDescription":"Open issue \"bug(Badge): position and size on page is off\" (#29847)"},{"Id":"2572086016","IsPullRequest":false,"CreatedAt":"2024-10-09T09:40:40","Actor":"reuse-ay","Number":"29843","RawContent":null,"Title":"docs-bug(COMPONENT): MatListItem activated type is not shown","State":"closed","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/list/api#MatListItem\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/list/api#MatListItem","Url":"https://github.com/angular/components/issues/29843","RelatedDescription":"Closed issue \"docs-bug(COMPONENT): MatListItem activated type is not shown\" (#29843)"},{"Id":"2573667019","IsPullRequest":true,"CreatedAt":"2024-10-09T09:40:39","Actor":"ChinoUkaegbu","Number":"29845","RawContent":null,"Title":"docs: show MatListItem activated type","State":"closed","Body":"Closes #29843 ","Url":"https://github.com/angular/components/pull/29845","RelatedDescription":"Closed or merged PR \"docs: show MatListItem activated type\" (#29845)"},{"Id":"2575272016","IsPullRequest":true,"CreatedAt":"2024-10-09T09:38:40","Actor":"crisbeto","Number":"29846","RawContent":null,"Title":"Token extraction updates","State":"closed","Body":"Includes a couple of changes (see individual commits) to ensure that we extract tokens correctly from the `core-theme` and that we correctly reflect tokens whose names overlap between different prefixes.","Url":"https://github.com/angular/components/pull/29846","RelatedDescription":"Closed or merged PR \"Token extraction updates\" (#29846)"},{"Id":"2572704535","IsPullRequest":false,"CreatedAt":"2024-10-08T09:56:20","Actor":"valentyna-sidorova-simpligov","Number":"29844","RawContent":null,"Title":"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus","State":"open","Body":"### Description\n\nWhen using screen readers and lazy load menu, the menu closes faster than the state (aria-expanded) updates so when the trigger refocuses it has an expanded state. Then it changes to collapsed state, which causes reading 2 states.\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/2tyoy4?file=src%2Fexample%2Fmenu-overview-example.html\nSteps to reproduce:\nUse any menu with matMenuContent\n\n### Expected Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **collapsed**  subMenu \n\n\n### Actual Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **expanded**  subMenu  \n  **collapsed**\n\n\n### Environment\n\n- Angular: 18.2.6\n- CDK/Material: 18.2.6\n- Browser(s): Chrome Version 129.0.6668.72\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/29844","RelatedDescription":"Open issue \"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus\" (#29844)"},{"Id":"2571264712","IsPullRequest":true,"CreatedAt":"2024-10-08T06:58:13","Actor":"crisbeto","Number":"29842","RawContent":null,"Title":"build: rework tokens extraction","State":"closed","Body":"Reworks how we extract the tokens so we can output `override` calls instead of the full CSS variables.","Url":"https://github.com/angular/components/pull/29842","RelatedDescription":"Closed or merged PR \"build: rework tokens extraction\" (#29842)"},{"Id":"2568844696","IsPullRequest":true,"CreatedAt":"2024-10-07T15:24:31","Actor":"naaajii","Number":"29837","RawContent":null,"Title":"ci: `form-field` was added twice to commit scopes array","State":"closed","Body":"`form-field` scope was repeated twice in in commit message config","Url":"https://github.com/angular/components/pull/29837","RelatedDescription":"Closed or merged PR \"ci: `form-field` was added twice to commit scopes array\" (#29837)"},{"Id":"2566972986","IsPullRequest":true,"CreatedAt":"2024-10-07T13:58:42","Actor":"amysorto","Number":"29829","RawContent":null,"Title":"fix(material/chips): Add missing padding to basic chips in M3","State":"closed","Body":"Before:\r\n![image](https://github.com/user-attachments/assets/98d9676f-859a-4313-9233-bf3d740d04dd)\r\n\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/09cd14bc-76de-4ad1-b7d3-1626d4480972)","Url":"https://github.com/angular/components/pull/29829","RelatedDescription":"Closed or merged PR \"fix(material/chips): Add missing padding to basic chips in M3\" (#29829)"},{"Id":"2569913669","IsPullRequest":false,"CreatedAt":"2024-10-07T09:46:14","Actor":"MikaStark","Number":"29841","RawContent":null,"Title":"bug(buttons): align button types with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for buttons mention 5 differents kind of buttons :\n\n- [Elevated](https://m3.material.io/components/buttons/specs#0eea2a85-b4d7-4c74-b08e-98410b9412c7) : currently named `raised` but wrong background color is applied (should be `surface-container-low`)\n- [Filled](https://m3.material.io/components/buttons/specs#0b1b7bd2-3de8-431a-afa1-d692e2e18b0d) : currently named `flat`\n- [Filled tonal](https://m3.material.io/components/buttons/specs#158f0a18-67fb-4ac4-9d22-cc4d1adc4579) : not supported\n- [Outlined](https://m3.material.io/components/buttons/specs#de72d8b1-ba16-4cd7-989e-e2ad3293cf63) : currently named `flat`\n- [Text](https://m3.material.io/components/buttons/specs#899b9107-0127-4a01-8f4c-87f19323a1b4) : not supported\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\nFuthermore, a appreciable enhancement whould be to regroup all css selectors for `MatButton` and `MatAnchor` directives into one `mat-button` and add an extra `appearance` input like cards does. Acceptable values would be `elevated`, `filled`, `filled-tonal`, `outlined` and `text` (default one)\n\n### Reproduction\n\nIf really needed, tell me...\n\n### Expected Behavior\n\n- Rename `mat-raised-button` to `mat-elevated-button`\n- Rename `mat-flat-button` to `mat-filled-button`\n- Add missing `mat-filled-tonal-button`\n- Rename `mat-flat-button` to `mat-outlined-button`\n- Add missing `mat-text-button`\n\n### Actual Behavior\n\n*cf. Expected Behavior*\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29841","RelatedDescription":"Open issue \"bug(buttons): align button types with m3 specs\" (#29841)"},{"Id":"2569839813","IsPullRequest":false,"CreatedAt":"2024-10-07T09:15:30","Actor":"MikaStark","Number":"29840","RawContent":null,"Title":"bug(card): align card appearance with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for cards mention 3 differents appearance :\n- [Elevated](https://m3.material.io/components/cards/specs#a012d40d-7a5c-4b07-8740-491dec79d58b) : currently corresponds to `raised`\n- [Filled](https://m3.material.io/components/cards/specs#0f55bf62-edf2-4619-b00d-b9ed462f2c5a) : currently missing \n- [Outlined](https://m3.material.io/components/cards/specs#9ad208b3-3d37-475c-a0eb-68cf845718f8) : fully supported\n\nThat's why I proposed to add a new `filled` appearance to the existing ones and rename `raised` into `elevated`.\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/zkkqyi?file=src%2Fexample%2Fcard-footer-example.css\n\n\n### Expected Behavior\n\nHaving 3 appearance for cards : `outlined`, `elevated` and `filled`\n\n### Actual Behavior\n\n- Missing `filled` appearance\n- `elevated` appearance is instead named `raised`\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29840","RelatedDescription":"Open issue \"bug(card): align card appearance with m3 specs\" (#29840)"},{"Id":"2568906688","IsPullRequest":false,"CreatedAt":"2024-10-06T21:20:21","Actor":"moniuch","Number":"29839","RawContent":null,"Title":"docs-bug(common): The way deprecated symbols are rendered","State":"open","Body":"### Documentation Feedback\n\nThe docs for material have a general problem with deprecated symbols.\nHere is just an example of *TreeControl\n\n1. The word **Deprecated** on hover suggests through the question mark that there is some explanation behind it (which there is when you look into the TS code), but nothing happens either on hover or on click [it was impossible to capture that cursor in the screenshot]\n2. I think for the sake of clarity, the name of a deprecated symbol should be style using strikethrough, and the explanation + suggestions what to use should immediately follow it, even before the old description. Currently the styling of the Deprecated word doesn't really stand out as much as it should, blends into the body text, IMO. \n\n![Image](https://github.com/user-attachments/assets/bd2fcfde-a218-4c57-ae08-b0f923bb7308)\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/api#BaseTreeControl","Url":"https://github.com/angular/components/issues/29839","RelatedDescription":"Open issue \"docs-bug(common): The way deprecated symbols are rendered\" (#29839)"},{"Id":"2568522070","IsPullRequest":true,"CreatedAt":"2024-10-06T18:13:46","Actor":"crisbeto","Number":"29834","RawContent":null,"Title":"build: update to latest next versions","State":"closed","Body":"We were running behind on the `next` releases. These changes update us to the latest version so we can catch upcoming issues early.","Url":"https://github.com/angular/components/pull/29834","RelatedDescription":"Closed or merged PR \"build: update to latest next versions\" (#29834)"},{"Id":"2567708153","IsPullRequest":true,"CreatedAt":"2024-10-06T18:13:16","Actor":"crisbeto","Number":"29832","RawContent":null,"Title":"fix(multiple): remove final references to ComponentFactoryResolver","State":"closed","Body":"Removes the final places where we were referring to `ComponentFactoryResolver` in our code.","Url":"https://github.com/angular/components/pull/29832","RelatedDescription":"Closed or merged PR \"fix(multiple): remove final references to ComponentFactoryResolver\" (#29832)"},{"Id":"2568717125","IsPullRequest":true,"CreatedAt":"2024-10-06T15:28:49","Actor":"naaajii","Number":"29836","RawContent":null,"Title":"fix(material/form-field): account in `cols` attribute on textarea","State":"open","Body":"previously we were setting width of 180px on our input field however this also made that textarea width stays the same if they are used with `cols` attribute, this commit ensures we dont do that if we have a textarea with `cols` attribute allowing it to grow in width as much as the attribute wants it to\r\n\r\nfixes #29459","Url":"https://github.com/angular/components/pull/29836","RelatedDescription":"Open PR \"fix(material/form-field): account in `cols` attribute on textarea\" (#29836)"},{"Id":"2568659592","IsPullRequest":true,"CreatedAt":"2024-10-06T13:21:26","Actor":"naaajii","Number":"29835","RawContent":null,"Title":"fix(material/card): elevated card container color","State":"open","Body":"update elevated card container color from `surface` to  `surface-container-low` matching the M3 specification\r\n\r\nfixes #29163\r\n\r\n---\r\nbefore:\r\n![image](https://github.com/user-attachments/assets/24bb0bbb-c95a-470e-8d58-7001a59e6ed8)\r\n![image](https://github.com/user-attachments/assets/732c2062-28e1-4c70-b490-2048776b8691)\r\n\r\nafter:\r\n![image](https://github.com/user-attachments/assets/fbd0ec5b-a097-4c4a-843d-4122d96099a8)\r\n![image](https://github.com/user-attachments/assets/61d27cb4-226d-4fb0-8065-dc11a26a1067)\r\n\r\n\r\n","Url":"https://github.com/angular/components/pull/29835","RelatedDescription":"Open PR \"fix(material/card): elevated card container color\" (#29835)"},{"Id":"2568329621","IsPullRequest":true,"CreatedAt":"2024-10-06T07:54:09","Actor":"floxay","Number":"29833","RawContent":null,"Title":"fix(material/schematics): treat lower dependency builder as default b…","State":"closed","Body":"…uilder","Url":"https://github.com/angular/components/pull/29833","RelatedDescription":"Closed or merged PR \"fix(material/schematics): treat lower dependency builder as default b…\" (#29833)"},{"Id":"2567464523","IsPullRequest":true,"CreatedAt":"2024-10-04T21:56:09","Actor":"essjay05","Number":"29831","RawContent":null,"Title":"fix(material/form-field): changes show/hide mechanism of mat-error for screenreaders","State":"open","Body":"Attempts to fix a bug with Angular Components Form-field component where the mat-error and mat-hint component are just visually hidden in the DOM, but visibility is toggled depending on the form field state. Also updates the .mat-mdc-form-field-subscript-wrapper to have aria-live=assertive in order to prioritize the error/hint being read when it appears.\r\n\r\nFixes b/370743693","Url":"https://github.com/angular/components/pull/29831","RelatedDescription":"Open PR \"fix(material/form-field): changes show/hide mechanism of mat-error for screenreaders\" (#29831)"},{"Id":"2567198001","IsPullRequest":false,"CreatedAt":"2024-10-04T19:40:19","Actor":"cfinlinson-incomm","Number":"29830","RawContent":null,"Title":"bug(CdkTree): Clicking on nested tree nodes collapses parent tree node","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular CDK 17\n\n### Description\n\nWhen using `cdk-nested-tree-node`, if I click on a child/leaf node, it collapses the parent tree node.\n\nThis does not occur when using `cdk-tree-node`; presumably, DOM click events are bubbling up and unexpectedly being handled by parent nodes. This was not happening on Angular CDK 17.\n\n### Reproduction\n\nStackBlitz link: Angular components docs: https://material.angular.io/cdk/tree/examples#cdk-tree-nested-level-accessor\nSteps to reproduce:\n1. Click on a parent node (e.g. \"Fruit\")\n2. Click on a nested child node (e.g. \"Apple\")\n\n\n### Expected Behavior\n\nI would expect the nodes to be expanded or collapsed only when I click an element with the `cdkTreeNodeToggle` directive. But it seems to expand/collapse whenever I click anywhere in the sub-DOM of the `cdk-nested-tree-node`, including child nodes.\n\n### Actual Behavior\n\nClicking on child nodes collapses the parent node. Also, clicking on a part of the node that is not the `cdkTreeNodeToggle` collapses the node.\n\n### Environment\n\n- Angular: 17\n- CDK/Material: 17\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/29830","RelatedDescription":"Open issue \"bug(CdkTree): Clicking on nested tree nodes collapses parent tree node\" (#29830)"},{"Id":"2565750992","IsPullRequest":true,"CreatedAt":"2024-10-04T12:03:09","Actor":"crisbeto","Number":"29826","RawContent":null,"Title":"Stepper forms integrations fixes","State":"closed","Body":"Fixes a couple of issues with the integration between the CDK stepper and the forms module.\r\n\r\n### fix(cdk/stepper): remove mock of forms type\r\nPreviously we were mocking out the `AbstractControl` type, because we didn't want to bring in additional code for the optional forms integration. That's no longer necessary, because we can use type-only imports.\r\n\r\n### fix(cdk/stepper): reset submitted state when resetting stepper\r\n`CdkStepper` has a `reset` method that reset all the controls to their initial values, but that won't necessarily put the form into its initial state, because form controls also show errors on submit by default and `AbstractControl.reset` won't reset the submitted state.\r\n\r\nThese changes add a call to reset all child forms to their unsubmitted state.\r\n\r\nFixes #29781.","Url":"https://github.com/angular/components/pull/29826","RelatedDescription":"Closed or merged PR \"Stepper forms integrations fixes\" (#29826)"},{"Id":"2566184174","IsPullRequest":false,"CreatedAt":"2024-10-04T11:26:25","Actor":"aujlambkar","Number":"29828","RawContent":null,"Title":"Space and New line key not working in a textarea used inside a mat-tree","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIf a `<textarea>` is used inside a `<mat-tree>`, then any `space` or `newline` key inputs to the textarea are ignored\n\nThis issue has been occurring since the time the angular version was upgraded to `18.2.26`\nThe issue didn't exist before that\n\n### Directions to reproduce the issue\nAttached a [link ](https://stackblitz.com/edit/ctwk44-nkcxdo?file=src%2Fexample%2Ftree-dynamic-example.html)where you can reproduce the issue\nThe textarea inside the mat tree exhibits the problem (try typing in some data with spaces and newlines)\nThe text area which is out side the mat-tree works well with spaces and newline inputs\n\n### Workaround:-\nThe only workaround we could think for currently is to stop propagating the `keydown` event on `textarea` which prevents the problem currently\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/ctwk44-nkcxdo?file=src%2Fexample%2Ftree-dynamic-example.html\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 22.4.1\nPackage Manager: npm 10.8.1\nOS: darwin arm64\n\nAngular: 18.2.7\n... animations, cdk, cli, common, compiler-cli, core, forms\n... language-service, localize, material, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\ntypescript                      5.5.4\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/29828","RelatedDescription":"Open issue \"Space and New line key not working in a textarea used inside a mat-tree\" (#29828)"},{"Id":"2565889282","IsPullRequest":false,"CreatedAt":"2024-10-04T09:18:29","Actor":"deefdragon","Number":"29827","RawContent":null,"Title":"feat(cdkDrag): cdkDragExclude to mark a part of the tree as should not be","State":"open","Body":"### Feature Description\n\nCreate a Directive (tentatively named cdkDragExclude) that when applied to an element does the effective inverse of cdkDragHandle. That element and it's children will not be able to be dragged/not cause the cdkDrag'ed item to be dragged. \n\n\nAs an alternative to a new directive, It should be possible to accomplish the same goal without adding a new directive by making it so that a cdkDragHandle that's disabled, inside another cdkDragHandle, (or a cdkDrag that's disabled inside another cdkDrag), will result in that element being un-dragable. As it stands, a cdkDrag in a cdkDrag will result in the parent one being moved, and a cdkDragHandle in a cdkDragHandle has no impact. I'm not sure how changing the interactions like that needs to be considered from an API stability point, and I'm also unsure if that's an acceptable option as it is not very intuitive. \n\n### Use Case\n\nThis is specifically targeted at parts of a component/component tree that have interactive elements of their own. (or where one might wish there to be interactivity)\n\n- Text inputs: Unable to highlight the text on an input with a mouse.\n- Text Area: Unable to change the size of a text area input as dragging the anchor in the bottom right corner results in the node moving instead\n- Sliders: Sliders become difficult/nearly impossible to use\n- Simply Highlighting text: Highlighting text in an element becomes difficult as the node itself will move instead of allowing the text to be selected.\n\nThis was discussed previously in #12929 and there was a response of \"You can use the cdkDragHandle directive to configure which element should be draggable\". The complexity of certain draggable components makes this nearly untenable under some circumstances unfortunately. \n\nIf I need to disable dragging on a single sibling element, I have to add cdkDragHandle to all other siblings of that element, all siblings of the element's parent, the parents parent, and so on until I reach the root dragable element itself. That process alone does not account for any margin on the element, which would have to be replaced with margin elements that also have cdkDragHandle, or other such hacks.\n\nThis only gets more complicated and unweildly the more elements you have that require disabling of the dragging.","Url":"https://github.com/angular/components/issues/29827","RelatedDescription":"Open issue \"feat(cdkDrag): cdkDragExclude to mark a part of the tree as should not be\" (#29827)"},{"Id":"2564990127","IsPullRequest":true,"CreatedAt":"2024-10-03T20:57:01","Actor":"DBowen33","Number":"29825","RawContent":null,"Title":"fix(material/slider): change color of inactive track","State":"open","Body":"change color and remove the opacity of inactive track to pass 3:1 non text color contrast ratio.\r\n\r\nhttps://screenshot.googleplex.com/9xZQAkEaEjY2Ad4\r\n\r\nBEFORE:\r\nforeground: #E1E3E13d\r\nbackground: #faf9fd\r\nratio: 1.04:1\r\n\r\nAFTER:\r\nforeground: #74777f\r\nbackground: #faf9fd\r\nratio: 4.27:1\r\n\r\nNOTE: This is a significant design change, so curious to see what y'all think of this\r\n\r\nfixes b/286300099","Url":"https://github.com/angular/components/pull/29825","RelatedDescription":"Open PR \"fix(material/slider): change color of inactive track\" (#29825)"},{"Id":"2564224153","IsPullRequest":true,"CreatedAt":"2024-10-03T14:35:28","Actor":"mmalerba","Number":"29824","RawContent":null,"Title":"Bump version to \"v19.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29824","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.7\" with changelog.\" (#29824)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-10T03:30:02.6047119Z","RunDurationInMilliseconds":1812}