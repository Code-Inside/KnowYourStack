{"Data":{"Angular-Issues":{"Issues":[{"Id":"1768816066","IsPullRequest":true,"CreatedAt":"2023-06-22T02:19:48","Actor":"mmalerba","Number":"50805","RawContent":null,"Title":"refactor(compiler): add support for style property bindings","State":"open","Body":"Add support for style property bindings in the template pipeline## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50805","RelatedDescription":"Open PR \"refactor(compiler): add support for style property bindings\" (#50805)"},{"Id":"1768688701","IsPullRequest":false,"CreatedAt":"2023-06-22T01:37:11","Actor":"CharlieGreenman","Number":"50804","RawContent":null,"Title":"throw new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nUpgrade to the latest Angular and installed the latest node version i.e. 18.16.1. \r\n\r\nWhen running my application it will be a blank page with the above error. \n\n### Please provide a link to a minimal reproduction of the bug\n\nNA\n\n### Please provide the exception or error you saw\n\n```true\nthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nI can't \r\n\r\n >  NX   Cannot find configuration for task zeta-frontend:version\n```\n\n\n### Anything else?\n\nAngular 16 application elsewhere works as expected in a standalone angular 16 application, so pretty sure non-related to node version and more so to my packages and builds. However, I am confused as to the cause of such, so bringing up here. Thank you ","Url":"https://github.com/angular/angular/issues/50804","RelatedDescription":"Closed issue \"throw new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\" (#50804)"},{"Id":"1768660836","IsPullRequest":true,"CreatedAt":"2023-06-21T23:20:49","Actor":"JeanMeche","Number":"50803","RawContent":null,"Title":"docs(docs-infra): remove transitions on sidenav","State":"open","Body":"The style of the sidenav can be breaking when height > 4000. Lets remove this transition to not depend on a max height.\r\n\r\nfixes #50537\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] angular.io application / infrastructure changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/50803","RelatedDescription":"Open PR \"docs(docs-infra): remove transitions on sidenav\" (#50803)"},{"Id":"1768643311","IsPullRequest":true,"CreatedAt":"2023-06-21T23:05:43","Actor":"angular-robot","Number":"50802","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to f89fc59","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `e141d5a` -> `f89fc59` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/50802","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to f89fc59\" (#50802)"},{"Id":"1768227565","IsPullRequest":true,"CreatedAt":"2023-06-21T20:15:25","Actor":"arturovt","Number":"50799","RawContent":null,"Title":"refactor(core): throw error when `provideZoneChangeDetection` is called in wrong context","State":"closed","Body":"This commit updates the implementation of the `provideZoneChangeDetection` function and checks whether the current platform is browser (where this code is executed). This function should not be called in server application config because this will lead to runtime errors.","Url":"https://github.com/angular/angular/pull/50799","RelatedDescription":"Closed or merged PR \"refactor(core): throw error when `provideZoneChangeDetection` is called in wrong context\" (#50799)"},{"Id":"1768364324","IsPullRequest":false,"CreatedAt":"2023-06-21T19:49:44","Actor":"arturovt","Number":"50801","RawContent":null,"Title":"Server-side running code throws an error if the `provideZoneChangeDetection` is used","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe code which is running in the Node.js throws an error `Cannot read properties of undefined (reading 'call')` when the `provideZoneChangeDetection` is called in `ApplicationConfig.providers`.\r\n\r\nThis happens because the `NgZone` delays change detection to coalesce event tasks (happened within the same animation frame) or multiple `ngZone.run` calls in a row. The change detection is delayed through the native `requestAnimationFrame` which isn't available in the Node.js.\r\n\r\nQuick solution:\r\n```ts\r\n// server.ts\r\nimport 'zone.js/node';\r\n\r\nglobalThis.requestAnimationFrame =\r\n  // @ts-ignore\r\n  setTimeout[Zone.__symbol__('OriginalDelegate')];\r\nglobalThis.cancelAnimationFrame =\r\n  // @ts-ignore\r\n  setTimeout[Zone.__symbol__('OriginalDelegate')];\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/arturovt/provide-cd-ssr\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.0\r\nNode: 16.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 16.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@nguniversal/builders           16.1.0\r\n@nguniversal/express-engine     16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50801","RelatedDescription":"Open issue \"Server-side running code throws an error if the `provideZoneChangeDetection` is used\" (#50801)"},{"Id":"1768356690","IsPullRequest":false,"CreatedAt":"2023-06-21T19:44:11","Actor":"whittet","Number":"50800","RawContent":null,"Title":"\"ng test\" expect output to be prefixed with error/warning codes, i.e. disabled attribute with a reactive form directive","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon, core, forms\n\n### Description\n\n\"ng test\" output is not human readable in a significant size project.\r\n\r\nFor example, \"disabled attribute with a reactive form directive\". This informational message is contained within 10+ lines of output. The lack of NGcode like NG0303 and shear number of lines of output causes obfuscation of any other errors in the output.\n\n### Proposed solution\n\nRequest that any \"ng test\" errors and warnings are limitted to one line, AND begin with a code like NG0303. Obviously, file name and line number is ideal, but must still be limitted to one line of output. This makes it easy to use a search engine to look up the solution and easily read even 100 (or more) errors. I'm seeing 1000 lines of output, which would be solved with this change, because I can then grep for codes to ignore.\n\n### Alternatives considered\n\nStatus-quo","Url":"https://github.com/angular/angular/issues/50800","RelatedDescription":"Open issue \"\"ng test\" expect output to be prefixed with error/warning codes, i.e. disabled attribute with a reactive form directive\" (#50800)"},{"Id":"1767275659","IsPullRequest":true,"CreatedAt":"2023-06-21T18:48:17","Actor":"bampakoa","Number":"50788","RawContent":null,"Title":"docs: review hydration guide","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50788","RelatedDescription":"Closed or merged PR \"docs: review hydration guide\" (#50788)"},{"Id":"1767214049","IsPullRequest":true,"CreatedAt":"2023-06-21T18:47:33","Actor":"pkozlowski-opensource","Number":"50786","RawContent":null,"Title":"test(core): remove microbenchmarks","State":"closed","Body":"The existing microbenchmarks are not widely known\r\nand are not used to drive design / coding decissions. At the same time those test add to the maintanance cost:\r\n- use hand-written instructions;\r\n- plug into runtime internals and are fragile;\r\n- require development of mocks for the runtime internals.\r\n\r\nThose tests are removed since they are costly to maintain and, at the same, don't provide enough value.\r\n","Url":"https://github.com/angular/angular/pull/50786","RelatedDescription":"Closed or merged PR \"test(core): remove microbenchmarks\" (#50786)"},{"Id":"1766516813","IsPullRequest":true,"CreatedAt":"2023-06-21T18:46:38","Actor":"angular-robot","Number":"50784","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to e141d5a","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `13ff55c` -> `e141d5a` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/50784","RelatedDescription":"Closed or merged PR \"build: update io_bazel_rules_sass digest to e141d5a\" (#50784)"},{"Id":"1768187613","IsPullRequest":true,"CreatedAt":"2023-06-21T18:36:00","Actor":"AndrewKushnir","Number":"50798","RawContent":null,"Title":"Bump version to \"v16.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/50798","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.0-next.0\" with changelog.\" (#50798)"},{"Id":"1768176859","IsPullRequest":true,"CreatedAt":"2023-06-21T18:29:15","Actor":"AndrewKushnir","Number":"50797","RawContent":null,"Title":"docs: release notes for the v16.1.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/50797","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.1.2 release\" (#50797)"},{"Id":"1768169949","IsPullRequest":true,"CreatedAt":"2023-06-21T18:25:31","Actor":"AndrewKushnir","Number":"50796","RawContent":null,"Title":"Bump version to \"v16.1.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/50796","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.1.2\" with changelog.\" (#50796)"},{"Id":"1768017253","IsPullRequest":true,"CreatedAt":"2023-06-21T16:49:53","Actor":"nczempin","Number":"50795","RawContent":null,"Title":"docs: fix minor typo in tutorial","State":"open","Body":"\"uses\", the verb, not \"users\", the noun\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50795","RelatedDescription":"Open PR \"docs: fix minor typo in tutorial\" (#50795)"},{"Id":"1767783829","IsPullRequest":false,"CreatedAt":"2023-06-21T14:48:22","Actor":"zjian107-su","Number":"50794","RawContent":null,"Title":"Router tutorial tour of heroes - doc bug fix suggestion","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nI am new to open source contribution and it is my first issue ticket. I am following the \"Router tutorial: tour of heroes\". It requires some previous knowledge of the \"Tour of Heroes application and tutorial\", but I have some suggestions for improvements to the documentation. These enhancements will help beginners follow the tutorial more smoothly so they don't get stuck debugging. \r\n\r\n## First: Inconsistency in the component metadata\r\n**Location**: After “Change the selector to app-hero-list.” in the page\r\n\r\n**Suggested change**: Change the `templateUrl` to _./hero-list.component.html_, and Change the `styleUrls` to _./hero-list.component.css_\r\n\r\n**Screenshot**\r\n![Inconsistency in the component metadata](https://github.com/angular/angular/assets/35544956/94f09ae5-5041-4e72-b7c9-6745a5e9d31a)\r\n\r\n## Second: Import path update\r\n**Location**: After \"• Update the relative path import to the message.service in the hero.service.ts file\" in the page\r\n\r\n**Suggested change**: Update the relative path import to the `message.service` in the \"hero-list.component.ts\" file. Instead of “../message.service”, it should be “../../message.service”, because now the message.service is under /app folder.\r\n\r\n**Screenshot**\r\n![Import path update](https://github.com/angular/angular/assets/35544956/f7aa3034-a6ae-483f-94e8-72fe5e83f0bd)\r\n","Url":"https://github.com/angular/angular/issues/50794","RelatedDescription":"Open issue \"Router tutorial tour of heroes - doc bug fix suggestion\" (#50794)"},{"Id":"1767633874","IsPullRequest":false,"CreatedAt":"2023-06-21T13:42:05","Actor":"Bogs-123","Number":"50793","RawContent":null,"Title":"Trigger control validators without valueChange event","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nWe miss the ability to trigger validators without triggering ValueChange event.\r\n\r\nThe only way to trigger the validators is to call **updateValueAndValidity** on form or control. But this also triggers the ValueChange event. Setting **emitEvent** to false, will not trigger the validators.\n\n### Proposed solution\n\nHave a function to trigger validators on form and/or control.\n\n### Alternatives considered\n\nMake a difference between emitEvent**s**, emitValueChangeEvent and emitStatusChangeEvent.","Url":"https://github.com/angular/angular/issues/50793","RelatedDescription":"Open issue \"Trigger control validators without valueChange event\" (#50793)"},{"Id":"1767614884","IsPullRequest":false,"CreatedAt":"2023-06-21T13:32:14","Actor":"luizfbicalho","Number":"50792","RawContent":null,"Title":"error NG6002 shows a problem in an import, but there is no other error detailing what is wrong with the module","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\n```\r\nERROR in src/app/corretor/corretor.module.ts:27:36 - error NG6002: This import contains errors, which may affect components that depend on this NgModule.\r\n\r\n27   imports: [CommonModule, routing, SharedModule, AcoesAprovacaoModule],\r\n                                      ~~~~~~~~~~~~\r\nError: src/app/corretor/corretor.module.ts:27:36 - error NG6002: This import contains errors, which may affect components that depend on this NgModule.\r\n\r\n27   imports: [CommonModule, routing, SharedModule, AcoesAprovacaoModule],\r\n                                      ~~~~~~~~~~~~\r\n\r\n    at addError (C:\\ProjetosGIT\\SA\\NgSa\\node_modules\\@ngtools\\webpack\\src\\ivy\\diagnostics.js:31:29)\r\n    at C:\\ProjetosGIT\\SA\\NgSa\\node_modules\\@ngtools\\webpack\\src\\ivy\\diagnostics.js:17:17\r\n    at C:\\ProjetosGIT\\SA\\NgSa\\node_modules\\@ngtools\\webpack\\src\\ivy\\plugin.js:408:17\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n```\r\n\r\nWe got this error after upgrade to angular 16, the problem is that the error doesn't show any information on what is the error\r\n\r\n\n\n### Proposed solution\n\nerror NG6002 should display more information on what is causing this problem in the module import\n\n### Alternatives considered\n\none alternative is to have another error first that show the error in the module","Url":"https://github.com/angular/angular/issues/50792","RelatedDescription":"Open issue \"error NG6002 shows a problem in an import, but there is no other error detailing what is wrong with the module\" (#50792)"},{"Id":"1767525850","IsPullRequest":false,"CreatedAt":"2023-06-21T12:45:06","Actor":"waterplea","Number":"50791","RawContent":null,"Title":"`REMOVE_STYLES_ON_COMPONENT_DESTROY` breaks :leave animations","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nanimations, platform-browser\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf you enable `REMOVE_STYLES_ON_COMPONENT_DESTROY`, it does not wait for `:leave` animations to finish, causing components to lose styles before they are gone from DOM.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-ktwdzy\r\n\r\nToggle a simple component with fade animation on/off using `*ngComponentOutlet` on the reproduction link, background disappears before component is gone.\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular 16.1.1\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/50791","RelatedDescription":"Open issue \"`REMOVE_STYLES_ON_COMPONENT_DESTROY` breaks :leave animations\" (#50791)"},{"Id":"1767439404","IsPullRequest":false,"CreatedAt":"2023-06-21T12:18:29","Actor":"cesco69","Number":"50790","RawContent":null,"Title":"ChangeDetectorRef detached with detectChanges in a effect: UI doesn't update","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have a component with detached `ChangeDetectorRef`. Into the signal `effect()` there is a `detectChanges()`\r\n\r\nWhy the component update the UI only if into the `effect()` there is a `counter()` call?\r\n\r\n```ts\r\nimport 'zone.js/dist/zone';\r\nimport { Component, ChangeDetectorRef, signal, effect } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n   {{ counter() }}\r\n   <button (click)=\"incement()\">Increment</button>\r\n  `,\r\n})\r\nexport class App {\r\n  counter = signal(0);\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {\r\n    this.cdr.detach();\r\n    effect(() => {\r\n      this.counter(); // remove this line and component don't update the ui\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  incement() {\r\n    this.counter.update((value) => value + 1);\r\n  }\r\n}\r\n\r\nbootstrapApplication(App);\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-92tchj?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nNo exception\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.12.1\r\nPackage Manager: pnpm 8.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-date-fns-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0 (cli-only)\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0 (cli-only)\r\n@angular-devkit/schematics      16.1.0 (cli-only)\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0 (cli-only)\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50790","RelatedDescription":"Closed issue \"ChangeDetectorRef detached with detectChanges in a effect: UI doesn't update\" (#50790)"},{"Id":"1767300331","IsPullRequest":true,"CreatedAt":"2023-06-21T10:41:00","Actor":"bampakoa","Number":"50789","RawContent":null,"Title":"docs: fix typos in signals guide","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50789","RelatedDescription":"Open PR \"docs: fix typos in signals guide\" (#50789)"},{"Id":"1767272716","IsPullRequest":false,"CreatedAt":"2023-06-21T10:24:22","Actor":"michaelbromley","Number":"50787","RawContent":null,"Title":"Parentheses in url cause Error: NG04002: Cannot match any routes.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen a url contains parentheses such as `localhost:4200/(1)`, the router will throw the error `Error: NG04002: Cannot match any routes.`\r\n\r\nIn an Angular Universal app I have, this causes the entire node process to crash (which is another issue....).\r\n\r\nSome notes on what type of urls cause the issue:\r\n\r\n- `/(1)` -> Cannot match any routes. URL Segment: '1'\r\n- `/(foo)` -> Cannot match any routes. URL Segment: 'foo'\r\n- `/(foo:bar)` -> Cannot match any routes. URL Segment: 'bar'\r\n- `/(foo;bar)` -> Cannot match any routes. URL Segment: 'foo;bar='\r\n- `/(foo?)` ->no error\r\n- `/()` -> no error\r\n- `/(foo` -> no error\r\n- `/foo)` -> no error\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-router-parentheses-issue?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nError: Uncaught (in promise): Error: NG04002: Cannot match any routes. URL Segment: '1'\r\nError: NG04002: Cannot match any routes. URL Segment: '1'\r\nat Recognizer.noMatchError (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/@angular/router@16.1.1/fesm2022/router.mjs:3713:16)\r\nat eval (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/@angular/router@16.1.1/fesm2022/router.mjs:3728:28)\r\nat eval (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/operators/catchError.js:13:51)\r\nat OperatorSubscriber._this._error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/operators/OperatorSubscriber.js:43:21)\r\nat Subscriber.error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:60:18)\r\nat Subscriber._error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:84:30)\r\nat Subscriber.error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:60:18)\r\nat Subscriber._error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:84:30)\r\nat Subscriber.error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:60:18)\r\nat Subscriber._error (https://angular-router-parentheses-issue.stackblitz.io/turbo_modules/rxjs@7.8.1/dist/cjs/internal/Subscriber.js:84:30)\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular core, route @ 16.1.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50787","RelatedDescription":"Open issue \"Parentheses in url cause Error: NG04002: Cannot match any routes.\" (#50787)"},{"Id":"1767187814","IsPullRequest":true,"CreatedAt":"2023-06-21T09:36:00","Actor":"bampakoa","Number":"50785","RawContent":null,"Title":"docs: make review adjustments in the SSR guide","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50785","RelatedDescription":"Open PR \"docs: make review adjustments in the SSR guide\" (#50785)"},{"Id":"1764679592","IsPullRequest":false,"CreatedAt":"2023-06-20T20:31:33","Actor":"leo6104","Number":"50775","RawContent":null,"Title":"`withFetch` doesn't support json object as body with POST method api call","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nYes ( compared with XHR ) \r\n\r\n### Description\r\n\r\nWhen i request like this, \r\n\r\n```\r\nconst httpHeaders = new HttpHeaders();\r\nhttpHeaders.set('Content-Type', 'application/json');\r\nhttpHeaders.set('Accept', 'application/json'); \r\n\r\nconst httpParams = new HttpParams(); \r\nthis.http.request(\r\n  new HttpRequest<T>('POST', 'https://127.0.0.1/api', { payload: 'hello world' }, {\r\n      params: httpParams,\r\n      headers: httpHeaders,\r\n      responseType: 'json',\r\n   })\r\n)\r\n```\r\n\r\n`withFetch()` doesn't support Object and it just goes to '[object Object]' \r\n\r\n![image](https://github.com/angular/angular/assets/7777929/9e1ffbd3-a94f-4018-96d4-25442b23ffa3)\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker, youtube-player\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.2.0-next.0\r\n@angular/cli                    16.1.0\r\n@angular/material               16.2.0-next.0\r\n@nguniversal/builders           16.1.0-rc.0\r\n@nguniversal/common             16.1.0-rc.0\r\n@nguniversal/express-engine     16.1.0-rc.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker, youtube-player\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.2.0-next.0\r\n@angular/cli                    16.1.0\r\n@angular/material               16.2.0-next.0\r\n@nguniversal/builders           16.1.0-rc.0\r\n@nguniversal/common             16.1.0-rc.0\r\n@nguniversal/express-engine     16.1.0-rc.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\n\r\n```\r\n\r\n### Anything else?\r\n\r\n\r\nhttps://github.com/angular/angular/blob/main/packages/common/http/src/fetch.ts#L224 \r\nHere is the root cause. \r\n\r\nIf i change the implementation like this, it solved.  \r\n```\r\n      body: req.serializeBody(),\r\n```\r\n\r\nIn XhrBackend, `serializeBody` convert its body to be serialized json string.\r\n\r\nhttps://github.com/angular/angular/blob/254023a03c3aaa26e2d01c02f9b9933b82fd971e/packages/common/http/src/request.ts#L295 \r\n","Url":"https://github.com/angular/angular/issues/50775","RelatedDescription":"Closed issue \"`withFetch` doesn't support json object as body with POST method api call\" (#50775)"},{"Id":"1764699619","IsPullRequest":true,"CreatedAt":"2023-06-20T20:31:32","Actor":"leo6104","Number":"50776","RawContent":null,"Title":"fix(http): use `serializeBody` to support JSON payload in FetchBackend","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/angular/angular/issues/50775 \r\n\r\n\r\n## What is the new behavior?\r\nit correctly serialize request body (same behavior with HttpXhrBackend)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50776","RelatedDescription":"Closed or merged PR \"fix(http): use `serializeBody` to support JSON payload in FetchBackend\" (#50776)"},{"Id":"1766051084","IsPullRequest":true,"CreatedAt":"2023-06-20T19:48:15","Actor":"simonhock","Number":"50783","RawContent":null,"Title":"docs(core): Improve injectors documentation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nImprove [Dependency Injection](https://angular.io/guide/hierarchical-dependency-injection#providing-services-in-component) documentation.\r\n\r\nAdds some display of the injected value\r\nFixes Injected value annotations not corresponding to the _note_\r\nFixes a closing <#VIEW> tag\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nN/A","Url":"https://github.com/angular/angular/pull/50783","RelatedDescription":"Open PR \"docs(core): Improve injectors documentation\" (#50783)"},{"Id":"1765897178","IsPullRequest":false,"CreatedAt":"2023-06-20T18:37:42","Actor":"martinmcwhorter","Number":"50782","RawContent":null,"Title":"hgroup is a valid HTML5 element","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIn the [original bug report](https://github.com/angular/angular/issues/38831) the rational for not supporting hgroup is that it has been removed from the W3C's definition of HTML5. The problem with that rational is that the WHATWG defines the HTML5 standard, not the W3C. \r\n\r\nIn the WHATWG definition, [hgroup](https://html.spec.whatwg.org/dev/sections.html#the-hgroup-element) is a valid HTML5 element. \r\n\r\nAs well as being part of the WHATWG official HTML5 standard, it is a living standard as can be seen in the MDN documentation as well as can-i-use browser support: \r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup\r\nhttps://caniuse.com/?search=hgroup\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-vwcpfd?file=src/app/app.component.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n'hgroup' is not a known element:\r\n1. If 'hgroup' is an Angular component, then verify that it is part of this module.\r\n2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/50782","RelatedDescription":"Closed issue \"hgroup is a valid HTML5 element\" (#50782)"},{"Id":"1765752881","IsPullRequest":true,"CreatedAt":"2023-06-20T16:31:01","Actor":"devversion","Number":"50781","RawContent":null,"Title":"build: replace legacy saucelabs infrastructure with bazel","State":"open","Body":"Replaces the legacy Saucelabs infrastructure with Bazel, so that we do not have two\r\ncompilation pipelines processing source files.\r\n\r\nThe legacy pipeline caused increased infrastructure complexity, and also made it non-trivial\r\nto work with generated files that are made available via Bazel. e.g. the locale files needed to\r\nbe manually put into the source tree to enable `tsc` to run for the legacy build.\r\n\r\nAdditionally, it was almost impossible to run the legacy saucelabs pipeline locally-\r\nmaking failures super frustrating. Note there was also no caching for the legacy job, so we\r\nstarted browsers unnecessarily, or drained CircleCI usage.\r\n","Url":"https://github.com/angular/angular/pull/50781","RelatedDescription":"Open PR \"build: replace legacy saucelabs infrastructure with bazel\" (#50781)"},{"Id":"1765742588","IsPullRequest":true,"CreatedAt":"2023-06-20T16:23:40","Actor":"josephperrott","Number":"50780","RawContent":null,"Title":"build: update cross-repo angular dependencies ","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/50780","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies \" (#50780)"},{"Id":"1765639221","IsPullRequest":true,"CreatedAt":"2023-06-20T16:04:56","Actor":"devversion","Number":"50779","RawContent":null,"Title":"[16.1.x]: build: update angular dev-infra and chromium","State":"closed","Body":"Patch port of https://github.com/angular/angular/pull/50772","Url":"https://github.com/angular/angular/pull/50779","RelatedDescription":"Closed or merged PR \"[16.1.x]: build: update angular dev-infra and chromium\" (#50779)"},{"Id":"1765255399","IsPullRequest":false,"CreatedAt":"2023-06-20T12:26:31","Actor":"Muxriddin8687","Number":"50778","RawContent":null,"Title":"Mainbar's error","State":"closed","Body":"### Describe the problem that you experienced\n\nwhen opened menu item bugged another menu item\r\n![Снимок экрана (48)](https://github.com/angular/angular/assets/58684555/383e473e-640c-4c85-9a97-dc1c2b36a547)\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/singleton-services\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/50778","RelatedDescription":"Closed issue \"Mainbar's error\" (#50778)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1768491810","IsPullRequest":false,"CreatedAt":"2023-06-21T21:10:37","Actor":"bh3605","Number":"25417","RawContent":null,"Title":"ES2022 not a valid value in new Angular 16 project.","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCreated a new Angular 16 project. Immediately see this error\r\n\r\n`Argument for '--target' option must be: 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'esnext'`\r\n\r\nHave \"typescript\": \"~5.1.3\" installed. Angular cli 16.1.0\r\n\r\nI think this error is also contributing to another problem I'm seeing with @Input decorators too\r\n\r\n![image](https://github.com/angular/angular-cli/assets/3073436/e3e2bf7f-707e-4ab0-8c10-4fc0f9cac5b6)\r\n![image](https://github.com/angular/angular-cli/assets/3073436/abc8eb92-f4a1-4905-a899-788cc484455a)\r\n![image](https://github.com/angular/angular-cli/assets/3073436/85b414f8-ab02-43a2-82b5-fd364213cfd8)\r\n\r\n\n\n### Minimal Reproduction\n\nng new MyApplication\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n16.1.0\n```\n\n\n### Anything else relevant?\n\nNo","Url":"https://github.com/angular/angular-cli/issues/25417","RelatedDescription":"Open issue \"ES2022 not a valid value in new Angular 16 project.\" (#25417)"},{"Id":"1768214907","IsPullRequest":true,"CreatedAt":"2023-06-21T18:52:14","Actor":"clydin","Number":"25416","RawContent":null,"Title":"fix(@angular-devkit/build-angular): watch all bundler provided inputs with esbuild builder","State":"open","Body":"When using the esbuild-based browser application builder in watch mode (including `ng serve`), all input files provided by the bundler via the internal metafile information will now be watched and will trigger rebuilds if changed. This allows for files outside of the TypeScript compilation that are also outside of the project source root to be watched. This situation can be encountered in monorepo setups where library code is directly referenced within an application.","Url":"https://github.com/angular/angular-cli/pull/25416","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): watch all bundler provided inputs with esbuild builder\" (#25416)"},{"Id":"1768032679","IsPullRequest":true,"CreatedAt":"2023-06-21T16:57:58","Actor":"cexbrayat","Number":"25415","RawContent":null,"Title":"fix(@schematics/angular): platform-browser-dynamic as dev dependency in standalone apps","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe generated application with `--standalone` has `@angular/platform-browser-dynamic` as a dependency but does not use it. It is only useful for `ng test`\r\n\r\n## What is the new behavior?\r\n\r\nWhen using the `--standalone` flag, `@angular/platform-browser-dynamic` is added a dev dependency\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25415","RelatedDescription":"Open PR \"fix(@schematics/angular): platform-browser-dynamic as dev dependency in standalone apps\" (#25415)"},{"Id":"1767517192","IsPullRequest":false,"CreatedAt":"2023-06-21T12:41:43","Actor":"mattlewis92","Number":"25413","RawContent":null,"Title":"Extract i18n broken in v16 due to sourcemap issue","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.x\r\n\r\n### Description\r\n\r\nExtracting i18n is broken with certain libraries after upgrading to v16.\r\n\r\nThe issue appears to be in the sourcemap processing of the library, as deleting the libraries source map fixes the issue.\r\n\r\nI tried upgrading the library to the latest v16 (`npm i angular-calendar@next` on the reproduction repo to try it) and confirmed the issue is still present so I think the issue must be fixed in the angular CLI itself (or in a dependency?)\r\n\r\n### Minimal Reproduction\r\n\r\n```\r\ngit clone https://github.com/mattlewis92/angular-calendar-ng16-test.git\r\ncd angular-calendar-ng16-test\r\nnpm i \r\nnpx ng extract-i18n\r\n```\r\n\r\n### Exception or Error\r\n\r\n```text\r\nmattlewis@Matts-MacBook-Pro-3 angular-calendar-ng16-test % npx ng extract-i18n                                                                \r\n✔ Browser application bundle generation complete.\r\n\r\nInitial Chunk Files | Names         |  Raw Size\r\nmain.js             | main          |   1.96 MB | \r\npolyfills.js        | polyfills     | 120.30 kB | \r\nruntime.js          | runtime       |   6.38 kB | \r\n\r\n                    | Initial Total |   2.08 MB\r\n\r\nBuild at: 2023-06-21T12:35:46.006Z - Hash: 69af8508e517ec82 - Time: 2500ms\r\n\r\n./node_modules/angular-calendar/fesm2020/angular-calendar.mjs - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):\r\nError: /Users/mattlewis/Code/open-source/angular-calendar-ng16-test/node_modules/angular-calendar/fesm2020/angular-calendar.mjs: `column` must be greater than or equal to 0 (columns start\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nmattlewis@Matts-MacBook-Pro-3 angular-calendar-ng16-test % npx ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\r\n    \r\n```\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25413","RelatedDescription":"Open issue \"Extract i18n broken in v16 due to sourcemap issue\" (#25413)"},{"Id":"1767493377","IsPullRequest":false,"CreatedAt":"2023-06-21T12:28:51","Actor":"JeanMeche","Number":"25412","RawContent":null,"Title":"Support for NG_BUILD_MANGLE with esbuild.","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nWhen using the default builder we can use `NG_BUILD_MANGLE` to disable the mangling. \r\n\r\nThis does not work with the esbuild. \r\n","Url":"https://github.com/angular/angular-cli/issues/25412","RelatedDescription":"Open issue \"Support for NG_BUILD_MANGLE with esbuild.\" (#25412)"},{"Id":"1766999267","IsPullRequest":false,"CreatedAt":"2023-06-21T07:59:17","Actor":"k3nsei","Number":"25411","RawContent":null,"Title":"Support for PandaCSS","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\n[PandaCSS](https://panda-css.com/) is first CSS-in-JS solution that works in Angular. Only problem that I have with it is not perfect developer experience, because Angular CLI don't allow to override PostCSS config to make it seamless and to work out of the box. As there is support for TailwindCSS already done somehow it should be inclusive for other technologies and not to favorite one solution over the other.\r\n\r\nHere you can find example app https://github.com/k3nsei/ng-panda-css\r\n\r\n### Describe the solution you'd like\r\n\r\nAngular CLI could expose function to decorate it's postcss config and read `postcss.config.js` in root directory or way to declare own postcss plugins configs in `angular.json`.\r\n\r\n### Describe alternatives you've considered\r\n\r\nNow I need to run separate watch command in background in parallel to ng serve and have prebuild command when building app. Those are extra steps that affecting developer experience.","Url":"https://github.com/angular/angular-cli/issues/25411","RelatedDescription":"Open issue \"Support for PandaCSS\" (#25411)"},{"Id":"1766082948","IsPullRequest":true,"CreatedAt":"2023-06-20T20:11:29","Actor":"clydin","Number":"25410","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): configure AOT compiler to skip class metadata in esbuild","State":"open","Body":"The esbuild plugin used within the esbuild-based browser application builder will not use the newly introduced internal `supportTestBed` AOT compiler option to disable the emit of class metadata functions within the output code. This removes the need to perform an additional transformation of the AOT compiler generated code to immediately remove the class metadata. The class metadata is only needed when using TestBed with AOT generated code but testing infrastructure within the CLI only performs unit-testing in JIT mode. In the future event that AOT enabled unit-testing is supported, this compiler option can be enabled for test related builds.\r\n","Url":"https://github.com/angular/angular-cli/pull/25410","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): configure AOT compiler to skip class metadata in esbuild\" (#25410)"},{"Id":"1766025836","IsPullRequest":true,"CreatedAt":"2023-06-20T19:31:01","Actor":"josephperrott","Number":"25409","RawContent":null,"Title":"ci: publish to builds repos for all managed branches (feature and releasable branches)","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/25409","RelatedDescription":"Open PR \"ci: publish to builds repos for all managed branches (feature and releasable branches)\" (#25409)"},{"Id":"1765789670","IsPullRequest":true,"CreatedAt":"2023-06-20T16:55:45","Actor":"clydin","Number":"25408","RawContent":null,"Title":"fix(@angular-devkit/build-angular): track postcss provided file depenencies in esbuild builder","State":"open","Body":"Postcss plugins may provide result messages that contain stylesheet dependencies that should be watched and should trigger a rebuild of the stylesheet being processed. These files will now be linked to the stylesheet and will allow the provided file dependencies to be watched and in-memory caches to be invalidated. Both the `dependency` and `dir-dependency` postcss messages are supported.","Url":"https://github.com/angular/angular-cli/pull/25408","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): track postcss provided file depenencies in esbuild builder\" (#25408)"},{"Id":"1762908147","IsPullRequest":true,"CreatedAt":"2023-06-20T16:19:53","Actor":"angular-robot","Number":"25401","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25401","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25401)"},{"Id":"1765410971","IsPullRequest":false,"CreatedAt":"2023-06-20T16:16:19","Actor":"devversion","Number":"25405","RawContent":null,"Title":"RxJS v6 testing breaking with ESBuild bundling (Jest testing)","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nmain\n\n### Description\n\nCurrently, using a builder that leverages ESBuild under the hood. e.g. the Jest builder- results in runtime breakages when **RxJS v6** is used together with the `TestScheduler` code.\r\n\r\n```ts\r\n  it('should work', () => {\r\n    new TestScheduler((a, b) => expect(a).toEqual(b)).run(({cold, expectObservable}) => {\r\n      expectObservable(cold('-t', {t: 'hi'})).toBe('-t', {t: 'hi'});\r\n    });\r\n  });\r\n```\r\n\r\n**Root cause**:\r\n\r\nRxJS v6 does not have exports conditions, so the `mainFields` will be respected. The ESBuild code path\r\ndoes not match the ES2015+ main fields, but instead matches just `module`- causing the ES5 distribution\r\nto be bundled. This ends up breaking at runtime. If the `es2015` main field would have matched- no error\r\nwould have occurred.\r\n\r\nThis seems to happen **because**, the ES5 distribution applies mixins for the `ColdObservable` class using a `@PURE` side-effect call, while in ES2015 it's not marked as side-effect free.\r\n\r\n**ES5 (breaking)**\r\n<img width=\"638\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/4987015/1747d2c8-b6ca-4992-b909-787f8006fe8d\">\r\n\r\n\r\n**ES2015**\r\n<img width=\"606\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/4987015/57e7c94f-a615-4288-9655-0045fff6f802\">\r\n\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nhttps://github.com/devversion/rxjs-v6-esbuild-cli-breaking\n\n### Exception or Error\n\n```text\n● AppComponent › should work\r\n\r\n    expect(received).toEqual(expected) // deep equality\r\n\r\n    - Expected  - 5\r\n    + Received  + 5\r\n\r\n      Array [\r\n        Object {\r\n    -     \"frame\": 1,\r\n    +     \"frame\": 0,\r\n          \"notification\": Notification2 {\r\n    -       \"error\": undefined,\r\n    -       \"hasValue\": true,\r\n    -       \"kind\": \"N\",\r\n    -       \"value\": \"hi\",\r\n    +       \"error\": [TypeError: observable.logSubscribedFrame is not a function],\r\n    +       \"hasValue\": false,\r\n    +       \"kind\": \"E\",\r\n    +       \"value\": undefined,\r\n          },\r\n        },\r\n      ]\r\n\r\n      at TestScheduler2.TestScheduler.run.cold.cold [as assertDeepEqual] (src/app/app.component.spec.ts:35:43)\r\n      at node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:122:23\r\n          at Array.filter (<anonymous>)\r\n      at TestScheduler2.flush (node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:120:43)\r\n      at TestScheduler2.run (node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:346:18)\r\n      at src/app/app.component.spec.ts:35:55\r\n      at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:368:26)\r\n      at ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:273:39)\r\n      at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:367:52)\r\n      at _Zone.run (node_modules/zone.js/fesm2015/zone.js:129:43)\r\n      at Object.wrappedFunc (node_modules/zone.js/fesm2015/zone-testing.js:740:30)\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 16.14.2\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            6.6.7\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\nPossible solutions:\r\n\r\n- For RxJS v6, we should add `es2015` as condition.\r\n- We should consider not optimizing when bundling for tests?","Url":"https://github.com/angular/angular-cli/issues/25405","RelatedDescription":"Closed issue \"RxJS v6 testing breaking with ESBuild bundling (Jest testing)\" (#25405)"},{"Id":"1765431425","IsPullRequest":true,"CreatedAt":"2023-06-20T16:16:18","Actor":"devversion","Number":"25406","RawContent":null,"Title":"fix(@angular-devkit/build-angular): experimental esbuild pipeline, add `es2015` to main fields for RxJS v6 compatibility","State":"closed","Body":"Currently, for RxJS v6, no conditions are available, and the ESBuild pipeline will select the\r\nES5 distribution based on the `module` main field. This is fine in most cases, but applications\r\ncould benefit from better optimization with the use of the ES2015 output + there are certain\r\ncode differences that currently would cause runtime breakages when e.g. `rxjs/testing` is used.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/25405 for more details.\r\n\r\nFixes #25405.","Url":"https://github.com/angular/angular-cli/pull/25406","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): experimental esbuild pipeline, add `es2015` to main fields for RxJS v6 compatibility\" (#25406)"},{"Id":"1765638037","IsPullRequest":true,"CreatedAt":"2023-06-20T15:21:21","Actor":"clydin","Number":"25407","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use direct fs caching for font inlining","State":"open","Body":"The `cacache` package was only minimally used within the font inlining post-build processing. The usage has now been replaced with direct filesystem access and key hashing to cache any font files. This not only lowers the overall dependency count but also provides a small performance improvement by removing the need to resolve, load, and evaluate additional JavaScript at build time.","Url":"https://github.com/angular/angular-cli/pull/25407","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): use direct fs caching for font inlining\" (#25407)"},{"Id":"1767879581","IsPullRequest":false,"CreatedAt":"2023-06-20T08:41:06","Actor":"kukjevov","Number":"25414","RawContent":null,"Title":"BUG: Angular 16.1.1 causing problem with babel during compilation","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter updating to angular 16.1.1 application will not compile anymore. Previous version 16.0.4 works just fine.\r\n\r\nMinimal reproduction for non working version\r\n`git clone https://github.com/kukjevov/ng-universal-demo`\r\n`cd ng-universal-demo`\r\n`git checkout 2.0`\r\n`npm install --legacy-peer-deps`\r\n`npm run build`\r\n\r\nMinimal reproduction for working version\r\n`git clone https://github.com/kukjevov/ng-universal-demo`\r\n`cd ng-universal-demo`\r\n`git checkout 1.0`\r\n`npm install --legacy-peer-deps`\r\n`npm run build`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nERROR in ./node_modules/@anglr/notifications/es2020/src/components/notificationMessage/notificationMessage.component.js\r\nModule build failed (from ./node_modules/babel-loader/lib/index.js):\r\nError: D:\\git\\universal-demo\\node_modules\\@anglr\\notifications\\es2020\\src\\components\\notificationMessage\\notificationMessage.component.js: `column` must be greater than or equal to 0 (columns start at column 0)\r\n    at exports.originalPositionFor (D:\\git\\universal-demo\\node_modules\\@jridgewell\\trace-mapping\\dist\\trace-mapping.umd.js:402:23)\r\n    at SourceMap.mark (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\source-map.js:57:65)\r\n    at Buffer._mark (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:191:60)\r\n    at Buffer._appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:135:12)\r\n    at Buffer.appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:104:10)\r\n    at Generator._appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:205:15)\r\n    at Generator.tokenChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:126:10)\r\n    at Generator.rightParens (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:81:10)\r\n    at Generator.CallExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:196:8)\r\n    at Buffer.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:249:5)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:163:15)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ExpressionStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:227:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printSequence (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:476:10)\r\n    at Generator.BlockStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\base.js:51:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printAndIndentOnComments (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:423:10)\r\n    at Generator.IfStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\statements.js:52:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printSequence (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:476:10)\r\n    at Generator.BlockStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\base.js:51:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.FunctionExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\methods.js:109:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ObjectProperty (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\types.js:82:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printList (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:482:10)\r\n    at Generator.ObjectExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\types.js:49:10)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printList (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:482:10)\r\n    at Generator.CallExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:195:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.AssignmentExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:252:8)\r\n    at Buffer.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:249:5)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:163:15)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ExpressionStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:227:8)\r\n @ ./node_modules/@anglr/notifications/es2020/src/index.js 4:0-79 4:0-79\r\n @ ./app/boot/app.component.ts 27:0-43 179:90-121\r\n @ ./app/boot/browser-app.module.ts 6:0-47 16:14-26\r\n @ ./app/main.browser.bootstrap.ts 11:0-61 16:45-61\r\n @ ./app/main.browser.ts 11:10-4\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 16.1.1\r\nNode: v16.15.0\r\nnpm: 8.19.4\r\nWindows: 10.0.19045\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25414","RelatedDescription":"Open issue \"BUG: Angular 16.1.1 causing problem with babel during compilation\" (#25414)"},{"Id":"1764890344","IsPullRequest":false,"CreatedAt":"2023-06-20T08:14:16","Actor":"wartab","Number":"25404","RawContent":null,"Title":"Runtime error with some projects since Angular CLI 16.1.0 when using esbuild.","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.6\n\n### Description\n\nWhen runnning `ng serve` and then opening the project in the browser, the application fails to load printing errors in console.\r\n\r\nThis only happens with Angular CLI 16.1.0 in combination with esbuild. When using Angular CLI 16.0.6 with esbuild or Angular CLI 16.1.0 without esbuild, this error does not happen.\n\n### Minimal Reproduction\n\nThe error is hard to reproduce, but I have an extract of our project in a Github repository where the error occurs. Unfortunately, I can't share it publicly, but can provide it privately if needed (I'm wartab in the Angular Discord if you need to contact me).\n\n### Exception or Error\n\n```text\ntemplate.html:26 NG0304: 'router-outlet' is not a known element (used in the '_a48' component template):\r\n1. If 'router-outlet' is an Angular component, then verify that it is a part of an @NgModule where this component is declared.\r\n2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n   template.html:1 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'ng-container' (used in the '_a48' component template).\r\n   If the 'ngIf' is an Angular control flow directive, please make sure that either the 'NgIf' directive or the 'CommonModule' is a part of an @NgModule where this component is declared.\r\n```\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25404","RelatedDescription":"Open issue \"Runtime error with some projects since Angular CLI 16.1.0 when using esbuild.\" (#25404)"},{"Id":"1764853922","IsPullRequest":false,"CreatedAt":"2023-06-20T07:51:24","Actor":"zehavibarak","Number":"25403","RawContent":null,"Title":"Build error with library dependency","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.4\n\n### Description\n\nWe're developing a library package that is locally hosted in a test app.\r\nBuilding the library works. However, while running `build` on the app, we're getting:\r\n\r\n` Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):  `column` must be greater than or equal to 0 (columns start`\r\n\r\nThis is a regression from previous version.\n\n### Minimal Reproduction\n\nNot sure where the issue here.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.6\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@nguniversal/express-engine     16.1.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\r\nwebpack                         5.87.0\n```\n\n\n### Anything else relevant?\n\nThanks","Url":"https://github.com/angular/angular-cli/issues/25403","RelatedDescription":"Open issue \"Build error with library dependency\" (#25403)"},{"Id":"1764552305","IsPullRequest":false,"CreatedAt":"2023-06-20T03:29:30","Actor":"sergey-morenets","Number":"25402","RawContent":null,"Title":"Data path \"\" must have required property 'project'.","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi\r\n\r\nWe have two projects that use Angular and Angular CLI. After we've upgraded both projects to Angular 16.x we can't use schematics for one of the projects (second project is fine). \r\nWe tried to clear node_modules or cache folders but it didn't help.\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nAny time we try to use schematics we always receive an error:\r\n\r\n`ng generate class Test`\n\n### Exception or Error\n\n```text\nSchematic input does not validate against the Schema: {\"name\":\"Test\",\"path\":\"src/app/model\"}\r\nErrors:\r\n\r\n  Data path \"\" must have required property 'project'.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: yarn 3.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... google-maps, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25402","RelatedDescription":"Open issue \"Data path \"\" must have required property 'project'.\" (#25402)"},{"Id":"1762177012","IsPullRequest":false,"CreatedAt":"2023-06-18T08:19:21","Actor":"leon","Number":"25400","RawContent":null,"Title":"using tailwind with esbuild doesn't trigger reload of styles","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI setup a bare minimum angular project  using css (also tried scss but no different), and follow the guide here\r\nhttps://tailwindcss.com/docs/guides/angular\r\n\r\nusing webpack `ng serve` will correctly handle changes when changing any components class such as `class=\"bg-white text-blue\"`\r\n\r\nBut If I then switch to the new esbuild version by changing angular.json to `@angular-devkit/build-angular:browser-esbuild`\r\nThe browser reloads, but the tailwind css is not getting updated.\r\nIf I stop `ng serve` and start up again the changes are there.\r\n\r\n\r\nHas anyone else got esbuild and tailwind working well together?\r\n\n\n### Minimal Reproduction\n\n- pnpx @angular/cli new --routing --standalone --strict --style=css --view-encapsulation=None --package-manager=pnpm myapp\r\n- follow https://tailwindcss.com/docs/guides/angular\r\n- change angular.json to use `@angular-devkit/build-angular:browser-esbuild` for serve executor\r\n- change the app.component.html to contain some tailwind classes\r\n\r\nHere is a reproduction repo\r\nhttps://github.com/leon/bug-angular-esbuild-tailwind\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: pnpm 8.6.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25400","RelatedDescription":"Open issue \"using tailwind with esbuild doesn't trigger reload of styles\" (#25400)"},{"Id":"1761899271","IsPullRequest":false,"CreatedAt":"2023-06-17T15:38:17","Actor":"sir-babagee","Number":"25399","RawContent":null,"Title":"Cannot add @angular/pwa to my angular project","State":"open","Body":"### Command\r\n\r\nadd\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm trying to add @angular/pwa to my angular project but I keep running into this error.\r\n\r\n`× Unable to load package information from registry: The \"timeout\" argument must be of type number. Received type string ('6000000')`\r\n\r\nI've been looking and I can't seem to find anywhere where this error occurred. I would appreciate if a solution to this can be provided.\r\n\r\n### Minimal Reproduction\r\n\r\nCan't really say what caused the issue or how to reproduce as this project is pretty large and has been in the works for a while\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.7\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1502.7\r\n@angular-devkit/build-angular       15.2.7\r\n@angular-devkit/core                16.1.0\r\n@angular-devkit/schematics          16.1.0\r\n@angular/animations                 15.2.8\r\n@angular/cdk                        15.2.8\r\n@angular/cli                        15.2.7\r\n@angular/common                     15.2.8\r\n@angular/compiler                   15.2.8\r\n@angular/compiler-cli               15.2.8\r\n@angular/fire                       7.5.0\r\n@angular/forms                      15.2.8\r\n@angular/material                   15.2.8\r\n@angular/platform-browser           15.2.8\r\n@angular/platform-browser-dynamic   15.2.8\r\n@angular/router                     15.2.8\r\n@schematics/angular                 16.1.0\r\nrxjs                                7.8.1\r\ntypescript                          4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25399","RelatedDescription":"Open issue \"Cannot add @angular/pwa to my angular project\" (#25399)"},{"Id":"1761761356","IsPullRequest":false,"CreatedAt":"2023-06-17T11:25:54","Actor":"zygarios","Number":"25398","RawContent":null,"Title":"Add HMR support for esbuild","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI would like to have the option of using HMR when using esbuild:\r\n@angular-devkit/build-angular:browser-esbuild.\r\n\r\nCurrently, this is possible when using the classic approach, but esbuild is faster, and this functionality is highly anticipated by me.\n\n### Proposed solution\n\nAdd HMR support for ESbuild :)\n\n### Alternatives considered\n\nNo idea","Url":"https://github.com/angular/angular-cli/issues/25398","RelatedDescription":"Closed issue \"Add HMR support for esbuild\" (#25398)"},{"Id":"1761097072","IsPullRequest":true,"CreatedAt":"2023-06-16T18:08:41","Actor":"alan-agius4","Number":"25397","RawContent":null,"Title":"build: update critters to 0.19.0","State":"open","Body":"Update critters to the latest version.\r\n\r\nCloses #25388\r\n","Url":"https://github.com/angular/angular-cli/pull/25397","RelatedDescription":"Open PR \"build: update critters to 0.19.0\" (#25397)"},{"Id":"1760911123","IsPullRequest":true,"CreatedAt":"2023-06-16T16:28:58","Actor":"clydin","Number":"25396","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded static block workaround","State":"closed","Body":"esbuild 0.18.2 contains a fix that removes the need for the workaround of disabling support for static class blocks.\r\nRelated issue: https://github.com/evanw/esbuild/issues/2950","Url":"https://github.com/angular/angular-cli/pull/25396","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded static block workaround\" (#25396)"},{"Id":"1760278216","IsPullRequest":true,"CreatedAt":"2023-06-16T16:05:22","Actor":"alan-agius4","Number":"25390","RawContent":null,"Title":"build: update build-tooling package and enable Node.js 18 tests","State":"closed","Body":"This commit updates the build-tooling package which contains fixes for RBE on Node.js 18. It also enables the Node.js 18 test suit.","Url":"https://github.com/angular/angular-cli/pull/25390","RelatedDescription":"Closed or merged PR \"build: update build-tooling package and enable Node.js 18 tests\" (#25390)"},{"Id":"1760482674","IsPullRequest":false,"CreatedAt":"2023-06-16T15:51:33","Actor":"LanderBeeuwsaert","Number":"25393","RawContent":null,"Title":"es-build starts to fail when upgrading from 16.0.5 to 16.1.0","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.5\n\n### Description\n\nes-build starts to fail when upgrading from 16.0.5 to 16.1.0\r\n\r\n<img width=\"1259\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/1098243/b9130ad6-dca9-4c67-bc53-d5d018a54828\">\r\n\n\n### Minimal Reproduction\n\n---\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nPS C:\\lander\\devprojects\\acro-companion> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 8.6.0\r\nOS: win32 x64\r\n\r\nAngular: 16.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1601.0\r\n@angular-devkit/build-angular        16.1.0\r\n@angular-devkit/core                 16.1.0\r\n@angular-devkit/schematics           16.1.0\r\n@angular/cdk                         14.2.4\r\n@angular/fire                        7.6.1\r\n@angular/google-maps                 14.2.4\r\n@angular/material                    14.2.4\r\n@angular/material-date-fns-adapter   14.2.4\r\n@angular/youtube-player              14.2.4\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.1.0\r\nrxjs                                 7.8.1\r\ntypescript                           5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25393","RelatedDescription":"Closed issue \"es-build starts to fail when upgrading from 16.0.5 to 16.1.0\" (#25393)"},{"Id":"1760839362","IsPullRequest":false,"CreatedAt":"2023-06-16T15:16:30","Actor":"atsjo","Number":"25395","RawContent":null,"Title":"esbuild ng serve not watching html and css files outside project root","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is a follow-up to https://github.com/angular/angular-cli/issues/25011\r\n\r\n16.1 fixed watching ts files, but it still doesn't pick up changes in html and css files in library components. It picks up the change if first changing html, then a dummy write to the component ts file, but changes to the html/css doesn't trigger re-generation itself.\n\n### Minimal Reproduction\n\nhttps://github.com/angular/angular-cli/issues/25011\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nNode   : 18.16.0\r\n   OS     : win32 x64\r\n   pnpm   : 8.6.2\r\n   Hasher : Native\r\n   \r\n   nx                 : 16.3.2\r\n   @nx/js             : 16.3.2\r\n   @nx/jest           : 16.3.2\r\n   @nx/linter         : 16.3.2\r\n   @nx/workspace      : 16.3.2\r\n   @nx/angular        : 16.3.2\r\n   @nx/cypress        : 16.3.2\r\n   @nx/devkit         : 16.3.2\r\n   @nx/esbuild        : 16.3.2\r\n   @nx/eslint-plugin  : 16.3.2\r\n   @nrwl/tao          : 16.3.2\r\n   @nx/webpack        : 16.3.2\r\n   typescript         : 5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25395","RelatedDescription":"Open issue \"esbuild ng serve not watching html and css files outside project root\" (#25395)"},{"Id":"1760664647","IsPullRequest":true,"CreatedAt":"2023-06-16T14:20:28","Actor":"clydin","Number":"25394","RawContent":null,"Title":"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"","State":"closed","Body":"These changes are causing imported types to be incorrectly retained.\r\n\r\nThis reverts commit https://github.com/angular/angular-cli/commit/c462d9cb90377342980384c6bccb3ddfef533282.","Url":"https://github.com/angular/angular-cli/pull/25394","RelatedDescription":"Closed or merged PR \"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"\" (#25394)"},{"Id":"1760263416","IsPullRequest":true,"CreatedAt":"2023-06-16T14:14:07","Actor":"alan-agius4","Number":"25389","RawContent":null,"Title":"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/25379","Url":"https://github.com/angular/angular-cli/pull/25389","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`\" (#25389)"},{"Id":"1760429096","IsPullRequest":false,"CreatedAt":"2023-06-16T11:27:50","Actor":"gmfun","Number":"25392","RawContent":null,"Title":"esbuild dev server thowing error","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0.1\n\n### Description\n\n`Uncaught SyntaxError: The requested module '/.angular/cache/16.1.0/vite/deps/@angular_core.js?v=73a37d0a' does not provide an export named 'Signal'`\r\n\r\nI am seeing the above error when running `ng serve` with esbuild\n\n### Minimal Reproduction\n\n- Create a new standalone app using nx (application should be inside apps directory)\r\n- Add `someSignal: Signal<any> = signal('123')` in `app.component.ts`\r\n- switch to esbuild\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.0.3\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.0.5\r\nng-packagr                      16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25392","RelatedDescription":"Open issue \"esbuild dev server thowing error\" (#25392)"},{"Id":"1760198864","IsPullRequest":false,"CreatedAt":"2023-06-16T08:44:32","Actor":"mbertuzzi","Number":"25388","RawContent":null,"Title":"v16.1 build escapes special characters in index.html","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0\n\n### Description\n\nBuilding a project with some special characters in index.html (e.g. '$' or '&') makes them to be escaped in HTML format (&#x24; or &amp;)\r\n\r\n<img width=\"1335\" alt=\"immagine\" src=\"https://github.com/angular/angular-cli/assets/103991825/995f522e-87e7-4dfd-b1c0-7794f0407dd2\">\r\n\n\n### Minimal Reproduction\n\nCreate a new empty angular 16.1 project, change the title e.g. with ${title} in index.html and build it.\r\nIn the dist folder the index.html has the escaped string &#x24;{title} instead of the original string\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25388","RelatedDescription":"Open issue \"v16.1 build escapes special characters in index.html\" (#25388)"},{"Id":"1759556293","IsPullRequest":false,"CreatedAt":"2023-06-15T21:13:39","Actor":"JSMike","Number":"25387","RawContent":null,"Title":"Blue Oak license in dependency tree is not OSI approved","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRecent changes to `glob` result in issues with licenses. `glob` now depends on `jackspeak` and `path-scurry` which are using the new `Blue Oak` license. The `Blue Oak` license is not approved by OSI. This is impacting my company's ability to pull in `@angular-devkit/build-angular@16` and `@angular/cli@15`, along with any other company that relies on OSI standards for legal.\r\n\r\nhttps://github.com/isaacs/path-scurry/issues/7\n\n### Minimal Reproduction\n\n`npx @angular/cli@latest new blueoak16 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls jackspeak\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls path-scurry\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── path-scurry@1.9.2\r\n\r\nor:\r\n\r\n`npx @angular/cli@l15.2.4 new blueoak15 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls jackspeak\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls path-scurry\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── path-scurry@1.9.2\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25387","RelatedDescription":"Open issue \"Blue Oak license in dependency tree is not OSI approved\" (#25387)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1761349985","IsPullRequest":false,"CreatedAt":"2023-06-21T14:26:32","Actor":"DJayFreshBlock","Number":"27318","RawContent":null,"Title":"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n6\r\n\r\n### Description\r\n\r\nExpansion panels currently render with a flash of content when nested in MatStepper -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\nReported fixed by #13870 \r\nHowever this is just when opened in a dialog without any other nesting\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://angular-issue13870-stepper-dialog.stackblitz.io](https://angular-issue13870-stepper-dialog.stackblitz.io)\r\nSteps to reproduce:\r\n1. Create a MatStepper component to contain an expansion panel\r\n3. Add a MatExpansionPanel\r\n4. Set [expanded]=\"false\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nMatExpansionPanels currently render with a flash of content when nested -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\n### Actual Behavior\r\n\r\nMatExpansionPanels should appear as collapsed when the dialog opens when `expanded=false` instead of briefly appearing as expanded, then collapsing after a delay.\r\n\r\n### Environment\r\n\r\n- Angular: 14.2\r\n- CDK/Material: 14.2\r\n- Browser(s): Chrome\r\n- Operating System : Windows\r\n\r\n","Url":"https://github.com/angular/components/issues/27318","RelatedDescription":"Closed issue \"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]\" (#27318)"},{"Id":"1766996067","IsPullRequest":true,"CreatedAt":"2023-06-21T14:26:31","Actor":"crisbeto","Number":"27338","RawContent":null,"Title":"fix(material/stepper): allow child animations to run","State":"closed","Body":"Currently the stepper doesn't explicitly allow child animations to run which means that other componets like expansion panels may be blocked from animating their initial state.\r\n\r\nThese changes add an `animateChild` query to the stepper to unblock the child animations.\r\n\r\nFixes #27318.","Url":"https://github.com/angular/components/pull/27338","RelatedDescription":"Closed or merged PR \"fix(material/stepper): allow child animations to run\" (#27338)"},{"Id":"1767714598","IsPullRequest":false,"CreatedAt":"2023-06-21T14:18:05","Actor":"quoctintran","Number":"27341","RawContent":null,"Title":"bug(material/date-range-picker): placeholders for start and end show 'undefined'","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello\r\n\r\nIf the placeholder of the start or the end of the date range picker is undefined, the control shows 'undefined' for the placeholder.\r\n\r\n![image](https://github.com/angular/components/assets/22502986/91b69bde-2c29-4ac2-9fb6-0079625e322a)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/mrm9eu-q3oknm?file=src%2Fexample%2Fdate-range-picker-forms-example.ts\r\nSteps to reproduce:\r\n1. Click into the input control to focus\r\n2. Undefined is showing (as an example only for the start)\r\n\n\n### Expected Behavior\n\nDisplay nothing or empty string\n\n### Actual Behavior\n\nDisplay 'undefined'\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Edge 114.0.1823.51 (Official build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 22H2 (OS Build 19045.2965)\r\n","Url":"https://github.com/angular/components/issues/27341","RelatedDescription":"Open issue \"bug(material/date-range-picker): placeholders for start and end show 'undefined'\" (#27341)"},{"Id":"1767126001","IsPullRequest":false,"CreatedAt":"2023-06-21T11:16:51","Actor":"infacto","Number":"27339","RawContent":null,"Title":"bug(slide-toggle): Component does not look like Material Design (icon inside).","State":"closed","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\nTested on website with version menu 14.2.7.\r\n\r\n### Description\r\n\r\nI wonder why you didn't stick to the Material Design for the slide-toggle aka switches. Since you strictly reject any suggestions to improve these components in case of non-compliance with the Material Design. In this case, it's about the switch/toggle.\r\n\r\n| Angular Material | Material Design |\r\n| --- | --- |\r\n|![image](https://github.com/angular/components/assets/60390085/0cf827e3-44cb-4b42-a448-20402f6d3ce0)|![image](https://github.com/angular/components/assets/60390085/59b9ecd8-e238-439e-a90a-457756550c1d)|\r\n| https://material.angular.io/components/slide-toggle | https://m2.material.io/components/switches |\r\n\r\nHow to remove the icon? At least there should be an option to hide the icon. Or better vice versa (option to show). Maybe configure this global instead of each time.\r\n\r\nAngular Material 14\r\n![image](https://github.com/angular/components/assets/60390085/364130b8-fedc-41b7-9b1f-324a63c2171d)\r\n\r\n\r\n### Reproduction\r\n\r\n1. Try to implement M2 switches.\r\n2. Checkout Angular Material slide-toggle.\r\n3. Wonder why this component does not look like M2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nLook like Material Design (M2).\r\n\r\n### Actual Behavior\r\n\r\nDoes not look like Material Design.\r\n\r\n### Environment\r\n\r\n- Angular: latest\r\n- CDK/Material: latest\r\n- Browser(s):Chrome latest\r\n- Operating System: Windows 10\r\n","Url":"https://github.com/angular/components/issues/27339","RelatedDescription":"Closed issue \"bug(slide-toggle): Component does not look like Material Design (icon inside).\" (#27339)"},{"Id":"1765740044","IsPullRequest":false,"CreatedAt":"2023-06-21T11:13:03","Actor":"mattiLeBlanc","Number":"27333","RawContent":null,"Title":"bug(Youtube player): Gtm.video event keeps emitting even after component is destroyed","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am having issues in Angular with the youtube video player and GTM integration.\r\nI know the issue most likely is caused in GTM, but  I have no access to that for support.\r\n\r\nWhat happens is that when I play a video, I am seeing `gtm.video` events. But when I navigate away from the videoplayer page (and the components get destroyed), I am still seeing `gtm.video: progress` events being emitted from the last video.\r\n\r\nI have tried loading GTM via an angular plugin, directly as instructed on the GTM website, I have tried adding youtube via this youtube component and manually used and Iframe or create it myself using the YT class.\r\n\r\nAll these efforts have the same end result; I keep getting `gtm.video` events in my analytic debugger.\r\n\r\nI found something on stackoverflow: \r\n`https://stackoverflow.com/questions/66569432/tag-manager-youtube-progress-trigger-continues-after-iframe-removed-from-dom`\r\nand people seem to confirm the issue.\r\n\r\nPausing the video, wait for 500ms and then do a Route navigation is not really an option in my app.\r\nHow do I get this under the attention of the GTM team?\r\nOr can Angular do anything for this issue?\n\n### Reproduction\n\nIt is hard for me to create a copy of our app in stackblitz, or create an example where you can navigate away from the youtube player to another client side url.\r\n\r\nTo reproduce, I use `angular-google-tag-manager` and `@angular/youtube-player` and setup my GTM and use a chrome plugin called Analytics Debugger to see the events pushed to the DataLayer.\r\nThen I start playing a video, and navigate to another client side url in the app and after 1 minute or so, I see another `gtm.video` event appear in the debugger.\n\n### Expected Behavior\n\nWhen video is destroyed, all GTM related events should stop.\r\n\n\n### Actual Behavior\n\nGTM progress events are still being emitted even when the video is no longer playing, buffering or even exists in the Dom.\n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System : Macos\r\n","Url":"https://github.com/angular/components/issues/27333","RelatedDescription":"Closed issue \"bug(Youtube player): Gtm.video event keeps emitting even after component is destroyed\" (#27333)"},{"Id":"1762994944","IsPullRequest":false,"CreatedAt":"2023-06-21T11:08:19","Actor":"rcb98","Number":"27326","RawContent":null,"Title":"feat(theming): roadmap for the theming API","State":"closed","Body":"Since a new token-based theming API is on the works, we would like to get some insight as to what exactly we will be getting on future versions of Angular Material, perhaps in the form of a roadmap.\r\n\r\nFor instance, Material 3 support [Shapes](https://m3.material.io/styles/shape/overview), offering full range of roundedness for components, which would be very useful, but when can we expect to be able to use all of these features?","Url":"https://github.com/angular/components/issues/27326","RelatedDescription":"Closed issue \"feat(theming): roadmap for the theming API\" (#27326)"},{"Id":"1767292556","IsPullRequest":false,"CreatedAt":"2023-06-21T10:35:39","Actor":"keienla","Number":"27340","RawContent":null,"Title":"bug(MatChips): Pipe in mat-chip-row use wrong value when add a date with DatePicker","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI think this is a very specific bug because I haven't been able to reproduce it without all of these components. \r\nI have a mat-form-field that contain a <mat-chip-grid> to see multiple date and a datepicker to select a date. When I add a new date everything work well and the date in <mat-chip-row> is well formatted but when I want to add a new date the pipe refire and an error appear.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/bug-pipes-chip-row\r\nSteps to reproduce:\r\n1. Open the console to see the error\r\n2. Select a date with button or enter one in input and press validate it\r\n3. Click on button to add date or focus then blur input\r\n4. An error will appear in the console and the previous date is showed with empty string\r\n\n\n### Expected Behavior\n\nThe pipe should use the value of the var instead of the previous formatted text to show the value. \n\n### Actual Behavior\n\nThe pipe fire everytime the button is clicked or input blur and use the wrong value to do the transform\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Firefox/Chrome/Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27340","RelatedDescription":"Open issue \"bug(MatChips): Pipe in mat-chip-row use wrong value when add a date with DatePicker\" (#27340)"},{"Id":"1766192306","IsPullRequest":false,"CreatedAt":"2023-06-20T21:14:44","Actor":"bdirito","Number":"27337","RawContent":null,"Title":"bug(mat-input): MatInput's autofill styling only covers part of the displayed input","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen you add an autofill attribute (autofill=\"name\" here) the browser may add some styling as part of its user agent. https://developer.mozilla.org/en-US/docs/Web/CSS/:autofill\r\n\r\nThis looks very poor on angular material as the autofill color only covers part of the input box;  the rest is covered with the configured material color.\r\n![mat16](https://github.com/angular/components/assets/8117238/dac17999-591e-4b57-8174-ed18eeca1651)\r\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/g3qkzv?file=src%2Fexample%2Fform-field-appearance-example.html\r\nSteps to reproduce:\r\n1.  Click the 'Fill form field'\r\n2.  Select an autocomplete \r\n\n\n### Expected Behavior\n\nAutofill styling should cover the whole input box\n\n### Actual Behavior\n\nThe chrome defined 'blue area' only covers the internal 'input', the rest of the mat-input gets its gray background styling.\r\n\r\nAuto-fill behavior appears work 'correctly' on the mdc-web 'demo' page https://material-components.github.io/material-components-web-catalog/#/component/text-field\r\n\r\n(I added the autofill attribute)\r\n![mdc](https://github.com/angular/components/assets/8117238/1ab5e128-b034-4e34-9c3f-746eda922867)\r\n\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s):  Chrome 113.0.5672.126 (Official Build) (64-bit) \r\n- Operating System (e.g. Windows, macOS, Ubuntu):  Ubuntu 22.04.2 LTS\r\n","Url":"https://github.com/angular/components/issues/27337","RelatedDescription":"Open issue \"bug(mat-input): MatInput's autofill styling only covers part of the displayed input\" (#27337)"},{"Id":"1765936190","IsPullRequest":true,"CreatedAt":"2023-06-20T19:41:45","Actor":"wagnermaciel","Number":"27335","RawContent":null,"Title":"refactor(material/core): handle global ripples disabled state","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27335","RelatedDescription":"Closed or merged PR \"refactor(material/core): handle global ripples disabled state\" (#27335)"},{"Id":"1766020371","IsPullRequest":true,"CreatedAt":"2023-06-20T19:26:29","Actor":"zarend","Number":"27336","RawContent":null,"Title":"docs(material/chips): require communicating to AT how to edit a chip","State":"open","Body":"Update the accessibility section of chips component to adress editable chips. Require developer to communicate to AT how to edit a chip using a keyboard.\r\n\r\nRelates to issue #27106.","Url":"https://github.com/angular/components/pull/27336","RelatedDescription":"Open PR \"docs(material/chips): require communicating to AT how to edit a chip\" (#27336)"},{"Id":"1765888163","IsPullRequest":true,"CreatedAt":"2023-06-20T17:59:45","Actor":"wagnermaciel","Number":"27334","RawContent":null,"Title":"perf(material/chips): make chip ripples lazy","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27334","RelatedDescription":"Open PR \"perf(material/chips): make chip ripples lazy\" (#27334)"},{"Id":"1762886222","IsPullRequest":true,"CreatedAt":"2023-06-20T16:40:59","Actor":"crisbeto","Number":"27325","RawContent":null,"Title":"refactor(material/paginator): switch to tokens API","State":"closed","Body":"Reworks the paginator use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27325","RelatedDescription":"Closed or merged PR \"refactor(material/paginator): switch to tokens API\" (#27325)"},{"Id":"1765612660","IsPullRequest":true,"CreatedAt":"2023-06-20T16:27:32","Actor":"devversion","Number":"27332","RawContent":null,"Title":"test: trigger core changes","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27332","RelatedDescription":"Closed or merged PR \"test: trigger core changes\" (#27332)"},{"Id":"1765396230","IsPullRequest":false,"CreatedAt":"2023-06-20T13:18:37","Actor":"TheSlimvReal","Number":"27331","RawContent":null,"Title":"bug(MatDialog): Closes before `canDeactivate` of route is checked on navigation","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI want to prevent navigation while a dialog is open.\r\nFor this I am using a `canDeactivate` guard on the route which checks if there is an open dialog. \r\nThe problem is now that when using the browser back button then the popup is already closed **before** the `canDeactivate` guard is even checked. This then results in the behaviour that the popup is closed even when no navigation happens.\r\n\r\nI know there is the `closeOnNavigation` option but I only want to prevent navigation and the dialog from closing in certain cases (e.g. unsaved changes in a popup).\r\n\r\n### Reproduction\r\n\r\nClone `https://github.com/TheSlimvReal/angular-dialog-route-guard.git` (does not work in Stackblitz because the back button triggers a page reload there)\r\nSteps to reproduce:\r\n1. Click `First`\r\n2. Click `Dialog`\r\n3. Click the back button of browser\r\n\r\nThe app will route to `second` even though the `canDeactivate` guard is checking whether a dialog is open.\r\nThis is because the dialog is closed **before** route guards are checked.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe dialog should only close if navigation actually happens.\r\n\r\n### Actual Behavior\r\n\r\nThe dialog is always closed.\r\n\r\n### Environment\r\n\r\nAngular CLI: 16.1.0\r\nNode: 16.16.0\r\nPackage Manager: npm 8.17.0\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n","Url":"https://github.com/angular/components/issues/27331","RelatedDescription":"Open issue \"bug(MatDialog): Closes before `canDeactivate` of route is checked on navigation\" (#27331)"},{"Id":"1762064791","IsPullRequest":false,"CreatedAt":"2023-06-20T11:53:03","Actor":"CrowhopTech","Number":"27321","RawContent":null,"Title":"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle","State":"closed","Body":"### Feature Description\n\nWith newer updates of Angular Material, the Material Slider now has a checkmark when activated, and a minus sign when deactivated. This is good for \"activate/deactivate\" cases, but makes it less useful for cases where I just want a toggle when neither is the \"active\" one.\r\n\r\nMy preferred fix would be a boolean (true by default) to show/hide the icons. If false, it would make it into a simple slide toggle, with no checkmark or minus sign, though the colors would still change.\n\n### Use Case\n\nIn my case, I was using this toggle to indicate \"match any/match all\". While the new slide toggle still technically works for this, it would be more appealing without implying one is the \"active\" choice.","Url":"https://github.com/angular/components/issues/27321","RelatedDescription":"Closed issue \"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle\" (#27321)"},{"Id":"1764779637","IsPullRequest":true,"CreatedAt":"2023-06-20T11:53:01","Actor":"crisbeto","Number":"27330","RawContent":null,"Title":"feat(material/slide-toggle): allow for icon to be hidden","State":"closed","Body":"Adds an input that allows users to opt into hiding the slide toggle icon.\r\n\r\nFixes #27321.","Url":"https://github.com/angular/components/pull/27330","RelatedDescription":"Closed or merged PR \"feat(material/slide-toggle): allow for icon to be hidden\" (#27330)"},{"Id":"1763551173","IsPullRequest":false,"CreatedAt":"2023-06-19T13:28:35","Actor":"bradws","Number":"27329","RawContent":null,"Title":"bug(Table Schematic Code): Build warning error in the 'table' schematic code","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen creating a fresh Angular v16.1.0 project, then adding Angular Material to the project, and finally adding the 'table' schematic to produce an example component, the component produces an Angular build warning error in line 20 of the html template stating that the '?.' operator can be replaced with the '.' operator.\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [Build Warning Error](https://stackblitz.com/edit/stackblitz-starters-barqkq?file=src%2Fmy-table%2Fmy-table.component.html)\r\nSteps to reproduce:\r\n1. Create a fresh Angular v16.1.0 project:\r\n>ng new angular-material-ex2 --standalone\r\n2. Change directory:\r\n>cd angular-material-ex2/src/app\r\n3. Add Angular Material:\r\n>ng add @angular/material\r\n4. Generate the 'table' schematic:\r\n>ng g @angular/material:table MyTable\r\n5. Modify code to accept the newly-created MyTable\r\n  5.1 In app.component.ts file, change code line from:\r\n    imports: [CommonModule],\r\n    ..to..\r\n    imports: [CommonModule, MyTableComponent],\r\n  5.2 In app.component.ts file, after the code line:\r\n    import { CommonModule } from '@angular/common';\r\n    ..put an additional code line..\r\n    import { MyTableComponent } from './my-table/my-table.component';\r\n6. Build the project:\r\n>ng run build\r\n7. You will be presented with the Angular build warning error:\r\n\"Warning: src/app/my-table/my-table.component.html:20:29 - warning NG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be replaced with the '.' operator.\"\r\n**Note**: _The Stackblitz code sample should show the error_\r\n8. To fix, just remove the two Optional Chaining operators; i.e. the two question marks\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo Build warning error will appear.\r\n\r\n### Actual Behavior\r\n\r\nCode will compile with out any errors.\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.0\r\n- CDK/Material: 16.1.1 / 16.1.1\r\n- Browser(s): Any (Firefox & Chrome)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27329","RelatedDescription":"Open issue \"bug(Table Schematic Code): Build warning error in the 'table' schematic code\" (#27329)"},{"Id":"1763459460","IsPullRequest":false,"CreatedAt":"2023-06-19T12:39:49","Actor":"dkimmich-onventis","Number":"27328","RawContent":null,"Title":"bug(snack-bar): action button color not changeable","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nI have a snack bar with a custom component. In this component I have a custom action button. I want this button to be in the primary color, so I set the `color` attribute of the button to `\"primary\"`:\r\n\r\n```\r\n<button mat-button color=\"primary\" matSnackBarAction>\r\n  My custom action\r\n</button>\r\n```\r\n\r\nBefore MDC, the `color` attribute was respected, and the button changed its color accordingly. After MDC migration, the button stays in the accent color regardless of what `color` is set.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/kbv7nf\r\n\r\nSteps to reproduce:\r\n1. Create a custom snack bar component / template\r\n2. Add an action button to the custom snack bar\r\n3. Set the `color` of the action button to `\"primary\"`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe button is displayed in the primary color\r\n\r\n### Actual Behavior\r\n\r\nThe button is displayed in the accent color\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n\r\n### Further notes\r\n\r\nI investigated the issue a bit, and it seems like using the `matSnackBarAction` directive overrides the color of the button. Omitting this directive fixes the issue, however the [docs](https://material.angular.io/components/snack-bar/api#MatSnackBarAction) state that this directive should be used.\r\n","Url":"https://github.com/angular/components/issues/27328","RelatedDescription":"Open issue \"bug(snack-bar): action button color not changeable\" (#27328)"},{"Id":"1763359271","IsPullRequest":false,"CreatedAt":"2023-06-19T12:33:00","Actor":"JoranLive","Number":"27327","RawContent":null,"Title":"feat(COMPONENT): Customize component size","State":"closed","Body":"### Feature Description\n\nHello,\r\n\r\nWe usually needs to customize the size of angular material components.\r\n\r\nEspecially, mat form fields & buttons.\r\n\r\nFrom what I know, there isn't any elegant way to customize the default size of Angular components.\r\nUsually, we have to play with the deprecated \"::ngdeep\".\r\nWorking at class levels can also make our application incompatible with future versions.\r\n\r\nCould it be good to adapt all the components size according to the font-size of the parent ?\r\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27327","RelatedDescription":"Closed issue \"feat(COMPONENT): Customize component size\" (#27327)"},{"Id":"1762151074","IsPullRequest":true,"CreatedAt":"2023-06-18T21:44:12","Actor":"crisbeto","Number":"27323","RawContent":null,"Title":"refactor(material/select): rename some tokens for more clarity","State":"closed","Body":"Renames some of the `mat-select` tokens to make it clearer what they're referring to.","Url":"https://github.com/angular/components/pull/27323","RelatedDescription":"Closed or merged PR \"refactor(material/select): rename some tokens for more clarity\" (#27323)"},{"Id":"1762317822","IsPullRequest":true,"CreatedAt":"2023-06-18T19:49:29","Actor":"SaishNarvekar","Number":"27324","RawContent":null,"Title":"docs(material/theming): add missing theme variable to theming guide docs","State":"closed","Body":"Fixes missing $theme variable in [Reading color values](https://material.angular.io/guide/theming-your-components#reading-color-values) in [Theme your own components](https://material.angular.io/guide/theming-your-components)\r\n\r\nFixes https://github.com/angular/components/issues/24405","Url":"https://github.com/angular/components/pull/27324","RelatedDescription":"Closed or merged PR \"docs(material/theming): add missing theme variable to theming guide docs\" (#27324)"},{"Id":"1761684333","IsPullRequest":true,"CreatedAt":"2023-06-18T17:57:50","Actor":"crisbeto","Number":"27319","RawContent":null,"Title":"test(cdk/testing): attempt to deflake webdriver tests","State":"closed","Body":"The Selenium Webdriver tests for harnesses have been flaky for a while now, because the click coordinates haven't been consistent across test runs. My theory is that it's due to the page being scrolled down on some of them.\r\n\r\nThese changes attempt to reduce the flakes by making the clicked element fixed.","Url":"https://github.com/angular/components/pull/27319","RelatedDescription":"Closed or merged PR \"test(cdk/testing): attempt to deflake webdriver tests\" (#27319)"},{"Id":"1762083441","IsPullRequest":false,"CreatedAt":"2023-06-18T02:43:10","Actor":"robmv","Number":"27322","RawContent":null,"Title":"bug(datepicker): Date range picker emit repeated events after the first date is selected","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a date range picker is opened and the start date is selected, two consecutive `valueChanges` event are triggered, and after the end date is selected the final event is triggered, in total 3 events happens instead of only two.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/shrtut?\r\nSteps to reproduce:\r\n1. Click on the `mat-datepicker-toggle` button.\r\n2. Select a start date like: 6/18/2023\r\n3. Notice on the _Changes_ section below that two events were triggered.\r\n4. Select the end date: 6/24/2023.\r\n5. A final event in logged on the _Changes_ section.\r\n\n\n### Expected Behavior\n\nAfter selecting the first date only a single `valueChanges` event should be triggered.\r\n\r\nThe expected behavior is show on the _Workaround Changes_ section where a `debounceTime(0)` is forced in order to remove the spurious repeated event.\n\n### Actual Behavior\n\nTwo events are triggered after selecting the start date\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Firefox, Chrome.\r\n- Operating System: Linux (Fedora)\r\n","Url":"https://github.com/angular/components/issues/27322","RelatedDescription":"Open issue \"bug(datepicker): Date range picker emit repeated events after the first date is selected\" (#27322)"},{"Id":"1761702917","IsPullRequest":true,"CreatedAt":"2023-06-17T11:28:31","Actor":"crisbeto","Number":"27320","RawContent":null,"Title":"build: fix out of sync file","State":"closed","Body":"Fixes that the select.scss is out of sync with g3.","Url":"https://github.com/angular/components/pull/27320","RelatedDescription":"Closed or merged PR \"build: fix out of sync file\" (#27320)"},{"Id":"1761293746","IsPullRequest":true,"CreatedAt":"2023-06-16T20:32:55","Actor":"zarend","Number":"27317","RawContent":null,"Title":"fix(material/chips): remove button role from editable chips","State":"open","Body":"[fix(material/chips): remove button role from editable chips](https://github.com/angular/components/pull/27317/commits/b056fc25b8bccce941b861cc774ad9185aa9a303) \r\n\r\nRemoves the button role from editable input chips. Fix accessibility\r\nissue in ChipRow where the chip action element is mislabeled as a\r\nbutton (https://github.com/angular/components/issues/27106). Remove butotn role by remove DOM node thtat used to\r\nhave button role and using the gridcell role element for the primary\r\nchip action instead.\r\n\r\nTested cross-browser with supported screen readers on MacOS and Windows.\r\nTested on \"Chips with input\" example by verifying that a chip could be\r\nadded then edited after adding. Also verifying that AT read the chip's\r\naria description.\r\n\r\nTesting Environment\r\n - macOS 13.4 (22F66) / VoiceOver\r\n   - Chrome Version 114.0.5735.133 (Official Build) (arm64)\r\n   - Firefox 114.0.1 (64-bit)\r\n - windows 10 Enteprise Version 22H2\r\n   - JAWS VERSION 2020.2006.12 ILM\r\n   - NVDA version 2022.3\r\n   - Chrome Version 114.0.5735.134 (Official Build) (64-bit)\r\n   - Firefox 114.0.2 (64-bit)\r\n\r\nFix https://github.com/angular/components/issues/27106","Url":"https://github.com/angular/components/pull/27317","RelatedDescription":"Open PR \"fix(material/chips): remove button role from editable chips\" (#27317)"},{"Id":"1760746801","IsPullRequest":false,"CreatedAt":"2023-06-16T14:24:14","Actor":"jbgtmartin","Number":"27316","RawContent":null,"Title":"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIn iOS Safari, when the [step] input is used, the slider can not be dragged from outside of the thumb. It means that if I start dragging on the slider track for instance, but not on the slider thumb itself, the thumb's ripple will show, but the thumb won't move to my finger's location.\r\n\r\nIf I remove the [step] input, the thumb is behaving correctly.\r\n\r\nI didn't have this issue with the legacy implementation.\r\n\r\nIt can be measleading, because if the user drags a little outside the \"drag target\", the ripple will show as if the interaction was working, but the thumb will not move.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-bf7qpd?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the stackblitz on iOS. You can also see it on Angular's website in the [first example](https://material.angular.io/components/slider/examples), by switching between 0 and non-0 step value.\r\n2. Start dragging on the track, not on the thumb itself\r\n\n\n### Expected Behavior\n\nThe thumb should move to the finger's location, and then follow the finger.\n\n### Actual Behavior\n\nThe thumb's ripple shows, but the thumb does not move.\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Safari on iOS\r\n- Operating System (e.g. Windows, macOS, Ubuntu): iOS 16.3.1, iPad OS 16.2, iPad OS 15.6\r\n","Url":"https://github.com/angular/components/issues/27316","RelatedDescription":"Open issue \"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS\" (#27316)"},{"Id":"1760047954","IsPullRequest":true,"CreatedAt":"2023-06-16T11:24:04","Actor":"crisbeto","Number":"27315","RawContent":null,"Title":"fix(cdk/a11y): don't emit blurred events on the server","State":"closed","Body":"The `FocusMonitor` is set up to emit `null` when an element is blurred and we have some components that depend on that value to mark themselves as touched. However, it's also set up to return an rxjs observale `of(null)` on the server which means that it'll emit and complete immediately. This is problematic, because it can mark components as touched even though they haven't been.\r\n\r\nThese changes remove the parameter from `of()` so it never emits.\r\n\r\nFixes #27234.","Url":"https://github.com/angular/components/pull/27315","RelatedDescription":"Closed or merged PR \"fix(cdk/a11y): don't emit blurred events on the server\" (#27315)"},{"Id":"1759206737","IsPullRequest":true,"CreatedAt":"2023-06-15T17:36:45","Actor":"devversion","Number":"27314","RawContent":null,"Title":"build: speed up RBE by allowing more concurrent jobs","State":"closed","Body":"Bazel detects maximum number of jobs based on host resources. Since we run remotely, we can increase this number significantly.","Url":"https://github.com/angular/components/pull/27314","RelatedDescription":"Closed or merged PR \"build: speed up RBE by allowing more concurrent jobs\" (#27314)"},{"Id":"1758377423","IsPullRequest":false,"CreatedAt":"2023-06-15T17:14:51","Actor":"GarfieldDeepClone","Number":"27312","RawContent":null,"Title":"Button inside Datepicker has mdc* classes though I'm using legacy","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi\r\n\r\nFirst, I wanted to open a discussion and not a bug because I'm not sure if I'm doing something wrong.\r\n\r\nI upgraded from Angular 14 to 15 and also updated Material with this command:\r\nng update @angular/material@15\r\n\r\nI'd like to use all the legacy stuff and migrate at a later point.\r\nAll material components look like before except the datepicker.\r\n\r\nI'm using the datepicker like:\r\n`<mat-form-field appearance=\"legacy\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tmatInput\r\n\t\t\t\t[formControl]=\"datepickerInputControl\"\r\n\t\t\t\t[matDatepicker]=\"datePicker\"\r\n\t\t\t\t[min]=\"dateRange.start\"\r\n\t\t\t\t[max]=\"dateRange.end\"\r\n\t\t\t\t(dateChange)=\"onDateChange()\"\r\n\t\t\t/>\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #datePicker></mat-datepicker>\r\n\t\t</mat-form-field>`\r\n\r\nWe styled the datepicker on our own and after the material update it looks different than before.\r\nI noticed that the button inside the datepicker for selecting a period has some additional classes (the mdc* ones) which destroys our styling.\r\n\r\n`<button mat-button=\"\" type=\"button\" aria-live=\"polite\" class=\"mat-calendar-period-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\"`\r\n\r\nmdc is the new styling right? So why is this added when I'm using legacy?\r\n\r\nSo I thought I'm not really using the legacy button and imported it explicitly in the module where this component is used:\r\n`import { MatLegacyButtonModule } from '@angular/material/legacy-button';\r\nimports: [\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatButtonModule,\r\n\t\tMatDatepickerModule,\r\n\t]`\r\n\r\nBut that didn't change anything. And I also noticed that there isn't a MatLegacyDatepickerModule?\r\n\r\nSo what I'm doing wrong?\r\n\r\n\r\n### Expected Behavior\r\n\r\nButton without mdc classes\r\n\r\n### Actual Behavior\r\n\r\nbutton with mdc classes\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.2.8\r\nNode: 16.18.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.8\r\n@angular-devkit/build-angular   15.2.8\r\n@angular-devkit/core            15.2.8\r\n@angular-devkit/schematics      15.2.8\r\n@angular/cli                    15.2.8\r\n@schematics/angular             15.2.8\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\nwebpack                         5.75.0\r\n\r\n\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27312","RelatedDescription":"Closed issue \"Button inside Datepicker has mdc* classes though I'm using legacy\" (#27312)"},{"Id":"1758777471","IsPullRequest":false,"CreatedAt":"2023-06-15T12:59:39","Actor":"AntonEvseev","Number":"27313","RawContent":null,"Title":"bug(table): Table with sticky header 'jumping'","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen scrolling, a table with a sticky header \"jumps\" if you add an element that has a absolute position. For example, if you display the tooltip and scroll, then the sticky header will change position for a short time. \r\nThis is also true with the mat-progress-bar element.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Open [link](https://stackblitz.com/edit/gatzhq-oe6hfq?file=src%2Fexample%2Ftable-sticky-header-example.ts) \r\n2. The sticky header changes the position on scroll when there is another element on the page with absolute position\r\n\r\nhttps://github.com/angular/components/assets/16895663/bf5172c5-8cba-4a0b-b5da-89afab55d7ee\r\n\r\n\n\n### Expected Behavior\n\nThe sticky header should not change position on scroll when there is another element on the page with an absolute position\n\n### Actual Behavior\n\nThe sticky header changes the position on scroll when there is another element on the page with absolute position\n\n### Environment\n\n- Angular: v12, v15, v16\r\n- CDK/Material:  v12, v15, v16\r\n- Browser(s): **Chrome Version 114.0.5735.110 (Official Build) (64-bit)**\r\n- Operating System (e.g. Windows, macOS, Ubuntu): **Windows**\r\n","Url":"https://github.com/angular/components/issues/27313","RelatedDescription":"Open issue \"bug(table): Table with sticky header 'jumping'\" (#27313)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-22T03:30:03.088398Z","RunDurationInMilliseconds":1921}