{"Data":{"Angular-Issues":{"Issues":[{"Id":"2918619514","IsPullRequest":true,"CreatedAt":"2025-03-13T23:51:39","Actor":"dgp1130","Number":"60381","RawContent":null,"Title":"refactor(devtools): add support for mutating objects inside signals","State":"open","Body":"Angular DevTools now supports mutating objects underneath signals in the property explorer view.\r\n\r\nThis is done by performing an \"immutable update\" by recursively copying objects underneath a signal and overwriting the one property specified. For example, if the user attempted to set `foo.bar.baz[2].hello = 'world'` and `bar` was a signal, this would effectively become:\r\n\r\n```typescript\r\nfoo.bar.set({\r\n  ...foo.bar(),\r\n  baz: [\r\n    ...foo.bar().baz.slice(0, 2),\r\n    {\r\n      ...foo.bar().baz[2],\r\n      hello: 'world',\r\n    },\r\n    ...foo.bar().baz.slice(3),\r\n  ],\r\n})\r\n```\r\n\r\nThe motivation for immutable updates is because signals and Angular change detection don't really like interior mutability of signal values. If we didn't do this, any kind of comparison or dirty check would prevent the UI from updating. If an application attempts to change a deeply nested property inside a signal, it doesn't work today. DevTools should generally be limited to operations an application could do itself, and the recommended approach to make such a change like this is an immutable update. Creating entirely new objects intentionally breaks referential equality such that the application can properly react to the change.\r\n\r\nUnfortunately, it is not possible to make immutable updates in a truly generic sense. You can't just copy a class for instance `({...new MyFoo()}).doSomething()`. We could do something fancier like manually copying over the prototype or something like that, but there is no way to do this without breaking class semantics (ex. the class might reasonably rely on the constructor being called). Therefore we instead reject any mutations to non-primitive objects. In the future, we might expand the set of \"primitives\" to include other built-ins and well-known objects like `URL` or `Element`, but those are out of scope for now.\r\n\r\nI opted to ban mutating the result of a readonly/computed signal. While the mutation is likely to succeed, a subsequent rerun of the `computed` will immediately drop the change. However, I opted to allow mutating the result of a getter property. This has a similar problem because it might be returning a synthetic object which will be invalidated on the next execution, but it is possible and reasonable for a getter to return the same object multiple times such that a mutation may reasonably survive other updates. DevTools can't easily know whether a getter actually will return the same object on each execution or not, so we optimistically assume the reference is stable. If it isn't, the mutation will be lost whenever the getter is re-executed.\r\n\r\nI'm particularly open to feedback on whether the distinction of allowing mutations of objects returned from getters but not computeds is the correct balance.\r\n\r\nThe UI still allows mutating any property, it's just that some properties may fail based on the restrictions defined here. A follow-up PR should communicate to the UI whether or not any particular property is editable.","Url":"https://github.com/angular/angular/pull/60381","RelatedDescription":"Open PR \"refactor(devtools): add support for mutating objects inside signals\" (#60381)"},{"Id":"2918530551","IsPullRequest":true,"CreatedAt":"2025-03-13T22:44:07","Actor":"atscott","Number":"60380","RawContent":null,"Title":"feat(router): Add ability to directly abort a navigation","State":"open","Body":"This commit adds the ability to directly abort a navigation through the\r\n`Router.getCurrentNavigation()?.abort()` method. While there are no\r\nfeature requests for this, it is a feature that will be necessary for\r\nintegration with the navigation API. The API enables better tracking of\r\nan ongoing navigation for SPAs and a site visitor can cancel a\r\nnavigation by clicking the stop button in the browser. While this could\r\ntechnically be done on the transition with an internal jsdoc comment to\r\nhide it from application developers, there's no need.\r\n\r\nWith this feature, I believe it would be possible to create somewhat of a shim\r\nto integrate with the navigation API even before the router has full support\r\nusing the router events to control a deferred navigation that never\r\ncommits the URL and always aborts itself on navigation end.","Url":"https://github.com/angular/angular/pull/60380","RelatedDescription":"Open PR \"feat(router): Add ability to directly abort a navigation\" (#60380)"},{"Id":"2918498529","IsPullRequest":true,"CreatedAt":"2025-03-13T22:20:28","Actor":"atscott","Number":"60379","RawContent":null,"Title":"refactor(router): Update tests to not use deprecated string tokens","State":"closed","Body":"This replaces string tokens in the router tests with functional guards.\r\n","Url":"https://github.com/angular/angular/pull/60379","RelatedDescription":"Closed or merged PR \"refactor(router): Update tests to not use deprecated string tokens\" (#60379)"},{"Id":"2918484414","IsPullRequest":true,"CreatedAt":"2025-03-13T22:08:30","Actor":"atscott","Number":"60378","RawContent":null,"Title":"fix(router): Remove 'any' type from route guards","State":"open","Body":"This commit removes `'any'` from the type union for router guards and replaces it with 'string', which will eventually also be removed. This change allows TypeScript to infer the parameter types of functions when using functional guards and enables stricter type-checking to ensure the guard array contains valid values.\r\n\r\nBREAKING CHANGE: The guards arrays on `Route` no longer include `any` in the type union. The union includes functions for the functional guards as well as a type matching `Injector.get`: `ProviderToken<T>|string`. Note that string is still deprecated on both the route guards and `Injector.get`.","Url":"https://github.com/angular/angular/pull/60378","RelatedDescription":"Open PR \"fix(router): Remove 'any' type from route guards\" (#60378)"},{"Id":"2918069858","IsPullRequest":true,"CreatedAt":"2025-03-13T18:25:16","Actor":"atscott","Number":"60377","RawContent":null,"Title":"refactor(router): Update to use early return to reduce nesting","State":"open","Body":"Updates a switchTap body to use early return to reduce nesting\r\n","Url":"https://github.com/angular/angular/pull/60377","RelatedDescription":"Open PR \"refactor(router): Update to use early return to reduce nesting\" (#60377)"},{"Id":"2918020633","IsPullRequest":true,"CreatedAt":"2025-03-13T18:03:00","Actor":"atscott","Number":"60376","RawContent":null,"Title":"fix(compiler-cli): Produce fatal diagnostic on duplicate decorated pr…","State":"open","Body":"…operties\r\n\r\nThis prevents the compilation and language service from crashing.\r\n\r\nfixes https://github.com/angular/vscode-ng-language-service/issues/2091\r\n","Url":"https://github.com/angular/angular/pull/60376","RelatedDescription":"Open PR \"fix(compiler-cli): Produce fatal diagnostic on duplicate decorated pr…\" (#60376)"},{"Id":"2917833353","IsPullRequest":true,"CreatedAt":"2025-03-13T16:51:49","Actor":"angular-robot","Number":"60375","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/60375","RelatedDescription":"Open PR \"docs: update Angular CLI help [main]\" (#60375)"},{"Id":"2917818790","IsPullRequest":true,"CreatedAt":"2025-03-13T16:46:56","Actor":"hawkgs","Number":"60374","RawContent":null,"Title":"refactor(devtools): extract and organize colors into themes","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## What is the new behavior?\r\n\r\nThe refactoring consists of:\r\n\r\n1. Extraction of colors from the stylesheets and their replacement with variables.\r\n2. Color number reduction (we had ~84 pre-refactoring) and color correction.\r\n3. Theming. It's similar to what we use in A.dev.\r\n\r\nHere is a diagram with all solid colors that the app uses (excl. Special colors; check the code comments).\r\n\r\n<img width=\"1134\" alt=\"Screenshot 2025-03-13 at 18 02 48\" src=\"https://github.com/user-attachments/assets/50bd4843-842e-4d28-ac89-ee591cededa9\" />\r\n\r\nHopefully, the change should make color management easier and cleaner.\r\n\r\n@dgp1130, there is some room for improvement in terms of accessibility. I did some tests by simulating some vision deficiencies – most of the colors are distinguishable but not by a huge margin. I am not sure if that's something that we should handle ourselves or let the OS do its work. Alternatively, we can introduce a high contrast theme (BTW, Chrome DevTools do not react to the high-contrast OS setting).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/60374","RelatedDescription":"Open PR \"refactor(devtools): extract and organize colors into themes\" (#60374)"},{"Id":"2916589016","IsPullRequest":false,"CreatedAt":"2025-03-13T16:37:01","Actor":"Daess","Number":"60366","RawContent":null,"Title":"Output emitters are not properly supported in hybrid AngularJS application","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nupgrade\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello!\n\nWe have a big application implemented with AngularJS, which we are currently migrating to the latest Angular (19.2.2 at the moment of bug report creation). We have stumbled into the following error when trying to integrate downgraded component into AngularJS component: \"TypeError: listenerFn is not a function at OutputEmitterRef.emit\". I looked into the Angular source codes to find out the reason and saw the following: OutputEmitterRef.subscribe accepts a function as an argument (output_emitter_ref.ts:47) while upgrade assistant provides an object RxJS style (downgrade_component_adapter.ts:263). So I believe any case of usage of downgraded component with outputs in it will lead to this issue.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: listenerFn is not a function\n    at OutputEmitterRef.emit (.angular/cache/19.2.2/jsengine/vite/deps/chunk-2NASP45P.js?v=ed0c9fb9:5735:11)\n    at ... (proprietary code)\n    at .angular/cache/19.2.2/jsengine/vite/deps/@angular_upgrade_static.js?v=a8bb2139:401:31\n    at Scope.$digest (.angular/cache/19.2.2/jsengine/vite/deps/angular.js?v=a8bb2139:9796:29)\n    at Object.next (.angular/cache/19.2.2/jsengine/vite/deps/@angular_upgrade_static.js?v=a8bb2139:1277:29)\n    at ConsumerObserver2.next (.angular/cache/19.2.2/jsengine/vite/deps/chunk-GM2YTKEO.js?v=ed0c9fb9:583:25)\n    at Subscriber2._next (.angular/cache/19.2.2/jsengine/vite/deps/chunk-GM2YTKEO.js?v=ed0c9fb9:553:22)\n    at Subscriber2.next (.angular/cache/19.2.2/jsengine/vite/deps/chunk-GM2YTKEO.js?v=ed0c9fb9:526:12)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.2\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.2.2\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router, upgrade\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.2\n@angular-devkit/build-angular   19.2.2\n@angular-devkit/core            19.2.2\n@angular-devkit/schematics      19.2.2\n@schematics/angular             19.2.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60366","RelatedDescription":"Closed issue \"Output emitters are not properly supported in hybrid AngularJS application\" (#60366)"},{"Id":"2916961697","IsPullRequest":true,"CreatedAt":"2025-03-13T16:36:59","Actor":"crisbeto","Number":"60369","RawContent":null,"Title":"fix(upgrade): handle output emitters when downgrading a component","State":"closed","Body":"The `DowngradeComponentAdapter` adapter was assuming that all outputs are observables, but they can also be `OutputEmitterRef`.\r\n\r\nFixes #60366.\r\n","Url":"https://github.com/angular/angular/pull/60369","RelatedDescription":"Closed or merged PR \"fix(upgrade): handle output emitters when downgrading a component\" (#60369)"},{"Id":"2916479211","IsPullRequest":true,"CreatedAt":"2025-03-13T16:24:21","Actor":"pkozlowski-opensource","Number":"60364","RawContent":null,"Title":"refactor(core): pass signal equal function to primitives","State":"closed","Body":"The signals primitives package understands the equals option now so we can pass it to the signal / computed creation methods instead of manually assigning the equality function on a reactive node.\r\n","Url":"https://github.com/angular/angular/pull/60364","RelatedDescription":"Closed or merged PR \"refactor(core): pass signal equal function to primitives\" (#60364)"},{"Id":"2917501215","IsPullRequest":false,"CreatedAt":"2025-03-13T15:05:38","Actor":"gboutte","Number":"60373","RawContent":null,"Title":"Defer is keeping application unstable, hydration cleanup not done until defer finished","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\n#### Problem\nIf you have an application with ssr enabled and your ssr is not rendering the same as the browser side, during the defer, you will have both information.\n\n#### Details\nI provided a git repository that show the problem. \nTo simplify I used the isBrowser to show an information.\n\n```\n<div>Is Browser = {{ isBrowserSide }}</div>\n@if(isBrowserSide){\n  <div>Inside if: browser bool = {{ isBrowserSide }}</div>\n} @else{\n  <div>Inside else: browser bool = {{ isBrowserSide }}</div>\n}\n```\n\nIf anywhere in the application there is a `@defer`, during the timing both parts ssr/ browser version will be shown.\n\nIn my example I used a timing of 20s\n```\n@defer {\n  <app-defered/>\n} @placeholder (minimum 20s){\n  placeholder shown during 20s\n}\n\n```\n\nAnd during the 20s I will see this:\n```\nIs Browser = true\nInside if: browser bool = true\nInside else: browser bool = false\n```\n\n# Use case\n\nThis apply to some application that does not handle the user auth server side and only browser side.\n\nFor example your navbar is showing a \"login\" button when not connected. And when connected it's an \"my account\" button. \n\nIf you want to defer some heavy components while the components is loading both button will be show. Which is not ideal.\n\n#### Explanation\nI think it's because the hydration wait for any defered action started initially to be finished before cleaning up.  It seem to be designed that way, so I don't know if it's a bug.\n\nMaybe a solution would be a way to ask the defer to be ran after hydration / application stable.\n\n#### Workaround\n\nI found a workaround without using the defer, I waited for the application to be stable and then with a setTimeout waited some seconds to update a boolean to true, and my defered component is juste wrapped inside a `@if`\n\nI made a stack overflow post about it: https://stackoverflow.com/questions/79500651/angular-hydration-waiting-for-defer-to-be-done-and-show-the-if-and-the-else\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/gboutte/angular-defer-keep-unstable.git\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.14\nNode: 20.18.3\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.14\n@angular-devkit/build-angular   18.2.14\n@angular-devkit/core            18.2.14\n@angular-devkit/schematics      18.2.14\n@angular/cli                    18.2.14\n@angular/ssr                    18.2.14\n@schematics/angular             18.2.14\nrxjs                            7.8.2\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60373","RelatedDescription":"Open issue \"Defer is keeping application unstable, hydration cleanup not done until defer finished\" (#60373)"},{"Id":"2916098657","IsPullRequest":true,"CreatedAt":"2025-03-13T14:50:43","Actor":"starsbit","Number":"60362","RawContent":null,"Title":"docs(cli): note that CSS is also taken into account in the max bundle size","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe size of files needed for bootstrapping the application only mentions JS files in the docs.\r\n\r\nIssue Number: https://github.com/angular/angular/issues/60356\r\n\r\n## What is the new behavior?\r\nThe size of files needed for bootstrapping the application mentions JS and CSS files in the docs.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60362","RelatedDescription":"Closed or merged PR \"docs(cli): note that CSS is also taken into account in the max bundle size\" (#60362)"},{"Id":"2917438268","IsPullRequest":true,"CreatedAt":"2025-03-13T14:49:46","Actor":"arturovt","Number":"60372","RawContent":null,"Title":"refactor(core): inline `isDirectiveHost`","State":"open","Body":"This commit inlines the `isDirectiveHost` function at the call site. The inline check is faster than using a separate function because `ɵɵelementStart` is a hot path function in the generated code.\r\n\r\nBenchmarks were conducted by bootstrapping an application with 100 `<div></div>` elements (`div*100`):\r\n\r\n```js\r\nsuite\r\n  .add('ɵɵelementStart (old)', async () => {\r\n    // globalThis.bootstrapMe = () => bootstrapApplication(...);\r\n    const appRef = await globalThis.bootstrapMe();\r\n    appRef.destroy();\r\n    document.body.appendChild(document.createElement('app-root'));\r\n  })\r\n```\r\n\r\nThe results compare the previous and inlined implementations:\r\n\r\n```\r\nɵɵelementStart (old)  x 10,955 ops/sec ±1.55% (56 runs sampled)\r\nɵɵelementStart (new)  x 13,195 ops/sec ±2.02% (21 runs sampled)\r\n```","Url":"https://github.com/angular/angular/pull/60372","RelatedDescription":"Open PR \"refactor(core): inline `isDirectiveHost`\" (#60372)"},{"Id":"2917292087","IsPullRequest":true,"CreatedAt":"2025-03-13T14:49:39","Actor":"angular-robot","Number":"60371","RawContent":null,"Title":"docs: update Angular CLI help [19.2.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/60371","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [19.2.x]\" (#60371)"},{"Id":"2917242266","IsPullRequest":true,"CreatedAt":"2025-03-13T13:50:43","Actor":"thePunderWoman","Number":"60370","RawContent":null,"Title":"WIP","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/60370","RelatedDescription":"Open PR \"WIP\" (#60370)"},{"Id":"2916765018","IsPullRequest":false,"CreatedAt":"2025-03-13T12:51:10","Actor":"cendrinemeystre","Number":"60368","RawContent":null,"Title":"error NG2012: Component imports must be standalone components, directives, pipes, or must be NgModules.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI ran into the error that's in the title while updating, and it is only happening in version 19.2.2\nBoth components are standalone: true\n\n`\n@Component({\n  selector: 'importing-component',\n  ...\n  standalone: true,\n  imports: [\n    ImportedComponent\n  ],\n})`\n\n\n`@Component({\n  selector: 'Imported',\n  ...\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nerror NG2012: Component imports must be standalone components, directives, pipes, or must be NgModules.\n\n35     SomeComponent,\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.2.3\nNode: 22.7.0\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 19.2.2\n... animations, common, compiler, core, forms, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.0\n@angular-devkit/build-angular   19.2.0\n@angular-devkit/core            19.2.0\n@angular-devkit/schematics      19.2.0\n@angular/cdk                    19.2.3\n@angular/cli                    19.2.3\n@angular/compiler-cli           19.2.0\n@angular/language-service       19.2.0\n@angular/localize               19.2.0\n@schematics/angular             19.2.0\nrxjs                            7.5.7\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60368","RelatedDescription":"Closed issue \"error NG2012: Component imports must be standalone components, directives, pipes, or must be NgModules.\" (#60368)"},{"Id":"2916744875","IsPullRequest":false,"CreatedAt":"2025-03-13T11:44:53","Actor":"cendrinemeystre","Number":"60367","RawContent":null,"Title":"ChangeDetectionStrategy Enum has the wrong type","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen I updated to 19.2.2 I ran into the error below, during ng build:\n```\nerror NG1010: changeDetection must be a member of ChangeDetectionStrategy enum from @angular/core\n  Value is of type 'ChangeDetectionStrategy$1'.\n\n15   changeDetection: ChangeDetectionStrategy.OnPush,\n```\n\nWhen I went to check out the source files I saw that the Enum indeed now is called \"ChangeDetectionStrategy**$1**\".\n\nThis issue is specifically in Version 19.2.2 of the angular/core package. I tested it with the Version 19.2.1, and I did not have this error.\n\n\nMy Component looks smt like this:\n```ts\nimport { ChangeDetectionStrategy } from '@angular/core';\n\n\n@Component({\n  selector: 'something',\n  templateUrl: './something.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true\n})\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nerror NG1010: changeDetection must be a member of ChangeDetectionStrategy enum from @angular/core\n  Value is of type 'ChangeDetectionStrategy$1'.\n\n15   changeDetection: ChangeDetectionStrategy.OnPush,\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n$ ng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.2.3\nNode: 22.7.0\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 19.2.2\n... animations, common, compiler, core, forms, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.0\n@angular-devkit/build-angular   19.2.0\n@angular-devkit/core            19.2.0\n@angular-devkit/schematics      19.2.0\n@angular/cdk                    19.2.3\n@angular/cli                    19.2.3\n@angular/compiler-cli           19.2.0\n@angular/language-service       19.2.0\n@angular/localize               19.2.0\n@schematics/angular             19.2.0\nrxjs                            7.5.7\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60367","RelatedDescription":"Closed issue \"ChangeDetectionStrategy Enum has the wrong type\" (#60367)"},{"Id":"2916533727","IsPullRequest":true,"CreatedAt":"2025-03-13T09:51:04","Actor":"pkozlowski-opensource","Number":"60365","RawContent":null,"Title":"refactor(core): move signal toString to primitives","State":"open","Body":"This change pushes the toString implementation of signal getters down to the primitives package so it can be shared with other frameworks.\r\n\r\nCloses #59990\r\n","Url":"https://github.com/angular/angular/pull/60365","RelatedDescription":"Open PR \"refactor(core): move signal toString to primitives\" (#60365)"},{"Id":"2916084595","IsPullRequest":false,"CreatedAt":"2025-03-13T07:16:43","Actor":"imaksp","Number":"60361","RawContent":null,"Title":"VSCode/language service changeDetection enum error after 19.2.2 update","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.2.1\n\n### Description\n\nGetting following error in IDE after update:\n```\nchangeDetection must be a member of ChangeDetectionStrategy enum from @angular/core\n  Value is of type 'ChangeDetectionStrategy$1'\n```\n\n### Minimal Reproduction\n\nOpen any component with change detection OnPush in VSCode\n\n### Exception or Error\n\n```text\nchangeDetection must be a member of ChangeDetectionStrategy enum from @angular/core\n  Value is of type 'ChangeDetectionStrategy$1'\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.2\nNode: 22.13.1\nPackage Manager: yarn 4.7.0\nOS: darwin arm64\n\nAngular: 19.2.2\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.2\n@angular-devkit/build-angular   19.2.2\n@angular-devkit/core            19.2.2\n@angular-devkit/schematics      19.2.2\n@angular/cdk                    19.2.3\n@schematics/angular             19.2.2\nrxjs                            7.8.2\ntypescript                      5.8.2\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nserve & build command works as expected but IDE shows this error.\n\n<img width=\"874\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ad9716fa-c9bd-4a56-a795-e7f937331aec\" />","Url":"https://github.com/angular/angular/issues/60361","RelatedDescription":"Closed issue \"VSCode/language service changeDetection enum error after 19.2.2 update\" (#60361)"},{"Id":"2915858669","IsPullRequest":true,"CreatedAt":"2025-03-13T04:52:45","Actor":"milomg","Number":"60360","RawContent":null,"Title":"fix(devtools): show preview content even after expanding node","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n<img width=\"167\" alt=\"Screenshot 2025-03-13 at 12 48 16 AM\" src=\"https://github.com/user-attachments/assets/3fe657d0-dc9c-4341-928b-1172e4b291b5\" />\r\n\r\n<img width=\"266\" alt=\"Screenshot 2025-03-13 at 12 51 37 AM\" src=\"https://github.com/user-attachments/assets/a74f3ba1-73e1-4ac3-ba4c-6038385bfa82\" />\r\n\r\n## What is the new behavior?\r\n\r\n<img width=\"206\" alt=\"Screenshot 2025-03-13 at 12 47 49 AM\" src=\"https://github.com/user-attachments/assets/75a9625b-84a8-42c1-aaed-3c411b772ecd\" />\r\n<img width=\"297\" alt=\"Screenshot 2025-03-13 at 12 51 28 AM\" src=\"https://github.com/user-attachments/assets/f7029ded-197e-40cd-afd9-9e05e44dfa9b\" />\r\n\r\nThis aligns with Chrome devtools behavior, and now shows that an object is a signal even if it has been expanded\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nHere's what the current Chrome devtools behavior looks like (note that it still shows the preview for the class even though the class has been expanded)\r\n\r\n<img width=\"276\" alt=\"Screenshot 2025-03-13 at 12 49 35 AM\" src=\"https://github.com/user-attachments/assets/c8238de6-6593-43ad-8e50-60a44a01855d\" />\r\n","Url":"https://github.com/angular/angular/pull/60360","RelatedDescription":"Open PR \"fix(devtools): show preview content even after expanding node\" (#60360)"},{"Id":"2915509825","IsPullRequest":true,"CreatedAt":"2025-03-13T01:01:06","Actor":"MatthewDyerOSU","Number":"60359","RawContent":null,"Title":"Jsdoc update viewcontainerref","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: Fixes #59918\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60359","RelatedDescription":"Open PR \"Jsdoc update viewcontainerref\" (#60359)"},{"Id":"2915268540","IsPullRequest":true,"CreatedAt":"2025-03-12T22:05:49","Actor":"iteriani","Number":"60358","RawContent":null,"Title":"refactor(core): Return NOT_FOUND from the retrieve method, inline with the API requirements.","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60358","RelatedDescription":"Open PR \"refactor(core): Return NOT_FOUND from the retrieve method, inline with the API requirements.\" (#60358)"},{"Id":"2915089509","IsPullRequest":true,"CreatedAt":"2025-03-12T20:26:03","Actor":"atscott","Number":"60357","RawContent":null,"Title":"refactor(router): Clean up the transition subject","State":"open","Body":"This commit cleans up the transition subject a bit so it doesn't use a dummy initial value that needs to be skipped\r\n","Url":"https://github.com/angular/angular/pull/60357","RelatedDescription":"Open PR \"refactor(router): Clean up the transition subject\" (#60357)"},{"Id":"2914566368","IsPullRequest":true,"CreatedAt":"2025-03-12T17:36:06","Actor":"Avcharov","Number":"60350","RawContent":null,"Title":"docs: remove --all argument from ng update","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n--all argument from ng update still mentioned in documentation, argument has been removed a couple of major versions ago\r\n\r\nIssue Number: #60340 \r\n\r\n\r\n## What is the new behavior?\r\nRemove --all argument mentioning from documentation\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60350","RelatedDescription":"Closed or merged PR \"docs: remove --all argument from ng update\" (#60350)"},{"Id":"2914640811","IsPullRequest":true,"CreatedAt":"2025-03-12T17:35:31","Actor":"devversion","Number":"60355","RawContent":null,"Title":"build: enable remote execution keepalive","State":"closed","Body":"This should help with network issues of spawned RBE actions. It should also introduce timeouts when actions couldn't be spawned in a timely manner.","Url":"https://github.com/angular/angular/pull/60355","RelatedDescription":"Closed or merged PR \"build: enable remote execution keepalive\" (#60355)"},{"Id":"2914637015","IsPullRequest":true,"CreatedAt":"2025-03-12T17:11:54","Actor":"JeanMeche","Number":"60354","RawContent":null,"Title":"feat(forms): Allow to reset a form without emitting events","State":"open","Body":"This change  add an option paramter to `resetForm` that is passed to the FormGroup.\r\n\r\nfixes #60274\r\n","Url":"https://github.com/angular/angular/pull/60354","RelatedDescription":"Open PR \"feat(forms): Allow to reset a form without emitting events\" (#60354)"},{"Id":"2914590095","IsPullRequest":true,"CreatedAt":"2025-03-12T16:52:41","Actor":"AndrewKushnir","Number":"60353","RawContent":null,"Title":"Bump version to \"v20.0.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60353","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.2\" with changelog.\" (#60353)"},{"Id":"2914571418","IsPullRequest":true,"CreatedAt":"2025-03-12T16:45:05","Actor":"AndrewKushnir","Number":"60352","RawContent":null,"Title":"docs: release notes for the v19.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/60352","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.2 release\" (#60352)"},{"Id":"2914566412","IsPullRequest":true,"CreatedAt":"2025-03-12T16:42:52","Actor":"AndrewKushnir","Number":"60351","RawContent":null,"Title":"Bump version to \"v19.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60351","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.2\" with changelog.\" (#60351)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2914962768","IsPullRequest":true,"CreatedAt":"2025-03-13T23:38:15","Actor":"clydin","Number":"29828","RawContent":null,"Title":"refactor(@angular/build): define an internal ngHmrMode value","State":"closed","Body":"An `ngHmrMode` boolean value will now be defined within application bundles. The value is based on the development server's `hmr` option with `true` when HMR is enabled and `false` when disabled. For all application builds, the value will be `false`. `ngHmrMode` is similar in behavior to `ngServeMode` or `ngDevMode`. It will not be present in the output code unless referenced and in those cases only the final boolean value will be present if not optimized out of the final code.\r\nThe value is not considered part of the public API and may change in the future.","Url":"https://github.com/angular/angular-cli/pull/29828","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): define an internal ngHmrMode value\" (#29828)"},{"Id":"2917639646","IsPullRequest":true,"CreatedAt":"2025-03-13T17:49:56","Actor":"clydin","Number":"29849","RawContent":null,"Title":"fix(@angular/build): ensure relative karma stack traces for test failures","State":"closed","Body":"The karma configuration will now automatically set the `basePath` option to the temporary output path when using the application build system's karma testing. This ensures that only the relative path of the test files is represented in the stack traces of test failures.\r\n\r\nCloses #29766","Url":"https://github.com/angular/angular-cli/pull/29849","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure relative karma stack traces for test failures\" (#29849)"},{"Id":"2917118457","IsPullRequest":true,"CreatedAt":"2025-03-13T16:40:26","Actor":"alan-agius4","Number":"29846","RawContent":null,"Title":"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs","State":"closed","Body":"\r\n**feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs**\r\n\r\nThis commit promotes the `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs from dev preview to stable. These APIs enhance server-side rendering (SSR) capabilities in Angular applications, improving routing and server integration for better performance and reliability.\r\n\r\n----\r\n\r\n**feat(@schematics/angular): remove `--server-routing` option**\r\n\r\nServer-side rendering (SSR) will always enable server routing when using the application builder.\r\n\r\nBREAKING CHANGE: `--server-routing` option has been removed from several schematics. Server routing will be used when using the application builder.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29846","RelatedDescription":"Closed or merged PR \"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs\" (#29846)"},{"Id":"2917449624","IsPullRequest":true,"CreatedAt":"2025-03-13T14:53:00","Actor":"devversion","Number":"29848","RawContent":null,"Title":"build: remove `rules_js` migration interop files and clean up","State":"open","Body":"Removes the `rules_js` migration interop files and cleans up other remainings.\r\n\r\nBlocked on the `ng_package` `rules_js` variant where we currently use the old one w/ interop.","Url":"https://github.com/angular/angular-cli/pull/29848","RelatedDescription":"Open PR \"build: remove `rules_js` migration interop files and clean up\" (#29848)"},{"Id":"2917129146","IsPullRequest":true,"CreatedAt":"2025-03-13T13:51:31","Actor":"alan-agius4","Number":"29847","RawContent":null,"Title":"docs(@angular-devkit/build-angular): update `forceEsbuild` option description","State":"closed","Body":"\r\n\r\nEsbuild builder is stable and is no longer in developer preview.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29847","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): update `forceEsbuild` option description\" (#29847)"},{"Id":"2916893733","IsPullRequest":true,"CreatedAt":"2025-03-13T12:03:46","Actor":"alan-agius4","Number":"29845","RawContent":null,"Title":"docs: release notes for the v17.3.13 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29845","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.13 release\" (#29845)"},{"Id":"2916389226","IsPullRequest":false,"CreatedAt":"2025-03-13T12:01:06","Actor":"jlssmt","Number":"29836","RawContent":null,"Title":"Application Builder fileReplacements for .json","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello,\nI migrated my application (Angular 18) to the new build system (application builder).\nAfter that the file replacement for .json files is no longer working.\nIs this a bug or is there an new alternative? (I already tried a lot of stuff including conditional imports, changing from .json to .ts, ...)\nI would prefer not to copy the json into the frontend folder or similar. I also don't want to copy it into assets and then access it via httpClient, because the config then becomes an observable.\n\n```markdown\n📦 project-root\n├── 📂 frontend\n│   ├── angular.json\n├── 📂 backend\n└── 📂 shared\n    ├── 📂 config\n    │   ├── app.config.prod.json\n    │   ├── app.config.dev.json\n    │   ├── app.config.stage.json\n    │   ├── app.config.test.json\n    │   └── app.config.json\n```\n\n```json\n{\n  \"projects\": {\n    \"frontend\": {\n      \"architect\": {\n        \"build\": {\n          \"configurations\": {\n            \"production\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.prod.ts\"\n                },\n                {\n                  \"replace\": \"../shared/config/app.config.json\",\n                  \"with\": \"../shared/config/app.config.prod.json\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nThe config json is shared between frontend and backend (typescript express).\nHas anybody a clue whats wrong?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nI see zero errors.\nNo build errors, no browser console errors.\nThats also confusing for me.\nI just see that the config is not replaced (verified with dist folder and in deployed app).\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.14\nNode: 22.12.0\nPackage Manager: pnpm 7.33.5\nOS: win32 x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.14\n@angular-devkit/core         18.2.14\n@angular-devkit/schematics   18.2.14\n@angular/build               18.2.14\n@angular/cli                 18.2.14\n@schematics/angular          18.2.14\nrxjs                         7.8.1\ntypescript                   5.4.5\nzone.js                      0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29836","RelatedDescription":"Closed issue \"Application Builder fileReplacements for .json\" (#29836)"},{"Id":"2916883604","IsPullRequest":true,"CreatedAt":"2025-03-13T11:52:20","Actor":"alan-agius4","Number":"29844","RawContent":null,"Title":"Bump version to \"v17.3.13\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29844","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.13\" with changelog.\" (#29844)"},{"Id":"2916696530","IsPullRequest":true,"CreatedAt":"2025-03-13T11:45:44","Actor":"alan-agius4","Number":"29843","RawContent":null,"Title":"build: configure Bazel to ignore `packages/angular/build/node_modules`","State":"closed","Body":"Although the `build` package is not present in this branch, the `node_modules` directory may persist when switching branches during a release, potentially causing the build to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/29843","RelatedDescription":"Closed or merged PR \"build: configure Bazel to ignore `packages/angular/build/node_modules`\" (#29843)"},{"Id":"2916656082","IsPullRequest":true,"CreatedAt":"2025-03-13T10:34:05","Actor":"alan-agius4","Number":"29842","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29842","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#29842)"},{"Id":"2916645105","IsPullRequest":true,"CreatedAt":"2025-03-13T10:32:10","Actor":"alan-agius4","Number":"29841","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29841","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#29841)"},{"Id":"2916571962","IsPullRequest":true,"CreatedAt":"2025-03-13T10:09:45","Actor":"alan-agius4","Number":"29840","RawContent":null,"Title":"docs: release notes for the v18.2.15 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29840","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.15 release\" (#29840)"},{"Id":"2916547508","IsPullRequest":true,"CreatedAt":"2025-03-13T10:03:23","Actor":"alan-agius4","Number":"29839","RawContent":null,"Title":"Bump version to \"v18.2.15\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29839","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.15\" with changelog.\" (#29839)"},{"Id":"2916401643","IsPullRequest":true,"CreatedAt":"2025-03-13T09:58:49","Actor":"alan-agius4","Number":"29837","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update babel packages","State":"closed","Body":"This fixes a security report: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\r\n\r\nCloses #29833\r\n","Url":"https://github.com/angular/angular-cli/pull/29837","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update babel packages\" (#29837)"},{"Id":"2915872720","IsPullRequest":true,"CreatedAt":"2025-03-13T09:51:01","Actor":"angular-robot","Number":"29829","RawContent":null,"Title":"build: update dependency aspect_rules_ts to v3.5.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_rules_ts](https://redirect.github.com/aspect-build/rules_ts) | http_archive | patch | `v3.5.0` -> `v3.5.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/rules_ts (aspect_rules_ts)</summary>\n\n### [`v3.5.1`](https://redirect.github.com/aspect-build/rules_ts/releases/tag/v3.5.1)\n\n[Compare Source](https://redirect.github.com/aspect-build/rules_ts/compare/v3.5.0...v3.5.1)\n\n#### Using [Bzlmod]:\n\nAdd to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_rules_ts\", version = \"3.5.1\")\n\nrules_ts_ext = use_extension(\"@&#8203;aspect_rules_ts//ts:extensions.bzl\", \"ext\", dev_dependency = True)\n\nrules_ts_ext.deps(\n    ts_version_from = \"//:package.json\",\n)\n\nuse_repo(rules_ts_ext, \"npm_typescript\")\n```\n\n[Bzlmod]: https://bazel.build/build/bzlmod\n\n#### Using legacy WORKSPACE\n\nPaste this snippet into your `WORKSPACE` file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"aspect_rules_ts\",\n    sha256 = \"d584e4bc80674d046938563678117d17df962fe105395f6b1efe2e8a248b8100\",\n    strip_prefix = \"rules_ts-3.5.1\",\n    url = \"https://github.com/aspect-build/rules_ts/releases/download/v3.5.1/rules_ts-v3.5.1.tar.gz\",\n)\n\n##################\n\n### rules_ts setup #\n##################\n\n### Fetches the rules_ts dependencies.\n### If you want to have a different version of some dependency,\n\n### you should fetch it *before* calling this.\n### Alternatively, you can skip calling this function, so long as you've\n\n### already fetched all the dependencies.\nload(\"@&#8203;aspect_rules_ts//ts:repositories.bzl\", \"rules_ts_dependencies\")\n\nrules_ts_dependencies(\n\n### This keeps the TypeScript version in-sync with the editor, which is typically best.\n    ts_version_from = \"//:package.json\",\n\n### Alternatively, you could pick a specific version, or use\n### load(\"@&#8203;aspect_rules_ts//ts:repositories.bzl\", \"LATEST_TYPESCRIPT_VERSION\")\n\n### ts_version = LATEST_TYPESCRIPT_VERSION\n)\n\nload(\"@&#8203;aspect_rules_js//js:repositories.bzl\", \"rules_js_dependencies\")\n\nrules_js_dependencies()\n\nload(\"@&#8203;aspect_rules_js//js:toolchains.bzl\", \"DEFAULT_NODE_VERSION\", \"rules_js_register_toolchains\")\n\nrules_js_register_toolchains(node_version = DEFAULT_NODE_VERSION)\n\n### Register aspect_bazel_lib toolchains;\n### If you use npm_translate_lock or npm_import from aspect_rules_js you can omit this block.\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_copy_directory_toolchains\", \"register_copy_to_directory_toolchains\")\n\nregister_copy_directory_toolchains()\n\nregister_copy_to_directory_toolchains()\n```\n\nTo use rules_ts with bazel-lib 2.x, you must additionally register the coreutils toolchain.\n\n```starlark\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_coreutils_toolchains\")\n\nregister_coreutils_toolchains()\n```\n\n#### What's Changed\n\n-   chore: upgrade rules_lint to v1.2.0 by [@&#8203;jbedard](https://redirect.github.com/jbedard) in [https://github.com/aspect-build/rules_ts/pull/774](https://redirect.github.com/aspect-build/rules_ts/pull/774)\n-   docs: add performance.md discussing transpilers and isolated_typecheck by [@&#8203;jbedard](https://redirect.github.com/jbedard) in [https://github.com/aspect-build/rules_ts/pull/768](https://redirect.github.com/aspect-build/rules_ts/pull/768)\n-   test: resolve_json_module with transpiler by [@&#8203;jbedard](https://redirect.github.com/jbedard) in [https://github.com/aspect-build/rules_ts/pull/747](https://redirect.github.com/aspect-build/rules_ts/pull/747)\n-   Disallow remote cache with workers by [@&#8203;MichaelMitchell-at](https://redirect.github.com/MichaelMitchell-at) in [https://github.com/aspect-build/rules_ts/pull/776](https://redirect.github.com/aspect-build/rules_ts/pull/776)\n-   Add support to `ts_project()` for `assets` that are generated directly into the `outDir` by [@&#8203;walkerburgin](https://redirect.github.com/walkerburgin) in [https://github.com/aspect-build/rules_ts/pull/779](https://redirect.github.com/aspect-build/rules_ts/pull/779)\n\n#### New Contributors\n\n-   [@&#8203;walkerburgin](https://redirect.github.com/walkerburgin) made their first contribution in [https://github.com/aspect-build/rules_ts/pull/779](https://redirect.github.com/aspect-build/rules_ts/pull/779)\n\n**Full Changelog**: https://github.com/aspect-build/rules_ts/compare/v3.5.0...v3.5.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29829","RelatedDescription":"Closed or merged PR \"build: update dependency aspect_rules_ts to v3.5.1\" (#29829)"},{"Id":"2916287269","IsPullRequest":false,"CreatedAt":"2025-03-13T09:50:17","Actor":"json-derulo","Number":"29833","RawContent":null,"Title":"Angular v19 projects depend on a vulnerable version of babel","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nv19 Angular projects depend on a vulnerable version of babel, which can lead to the generated code being vulnerable. For more information, see the related GitHub advisory: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\n\nThis is probably also an issue with v18 and v17.\n\n### Minimal Reproduction\n\nCreat a new v19 project and run `npm audit`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.2\nNode: 22.14.0\nPackage Manager: npm 11.2.0\nOS: darwin arm64\n\nAngular: 19.2.2\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.2\n@angular-devkit/build-angular   19.2.2\n@angular-devkit/core            19.2.2\n@angular-devkit/schematics      19.2.2\n@angular/cdk                    19.2.3\n@angular/material               19.2.3\n@schematics/angular             19.2.2\nng-packagr                      19.2.0\nrxjs                            7.8.2\ntypescript                      5.8.2\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29833","RelatedDescription":"Closed issue \"Angular v19 projects depend on a vulnerable version of babel\" (#29833)"},{"Id":"2916372874","IsPullRequest":true,"CreatedAt":"2025-03-13T09:44:08","Actor":"alan-agius4","Number":"29834","RawContent":null,"Title":"fix(@angular/build): update babel packages","State":"closed","Body":"This fixes a security report: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\r\n\r\nCloses #29833\r\n","Url":"https://github.com/angular/angular-cli/pull/29834","RelatedDescription":"Closed or merged PR \"fix(@angular/build): update babel packages\" (#29834)"},{"Id":"2916388105","IsPullRequest":true,"CreatedAt":"2025-03-13T09:42:47","Actor":"alan-agius4","Number":"29835","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update babel packages","State":"closed","Body":"This fixes a security report: https://github.com/babel/babel/security/advisories/GHSA-968p-4wvh-cqc8\r\n\r\nCloses #29833\r\n","Url":"https://github.com/angular/angular-cli/pull/29835","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update babel packages\" (#29835)"},{"Id":"2916492786","IsPullRequest":true,"CreatedAt":"2025-03-13T09:39:40","Actor":"devversion","Number":"29838","RawContent":null,"Title":"Bump version to \"v20.0.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29838","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.1\" with changelog.\" (#29838)"},{"Id":"2916222155","IsPullRequest":true,"CreatedAt":"2025-03-13T08:29:35","Actor":"devversion","Number":"29832","RawContent":null,"Title":"build: update angular","State":"closed","Body":"Fixed up version of #29798","Url":"https://github.com/angular/angular-cli/pull/29832","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29832)"},{"Id":"2916188462","IsPullRequest":true,"CreatedAt":"2025-03-13T08:11:26","Actor":"devversion","Number":"29831","RawContent":null,"Title":"build: avoid WSL interop flake when preparing Windows CI environment","State":"closed","Body":"For our native Windows tests (verifying `ng` CLI outside WSL), we currently build the test binaries inside WSL, leveraging bazel remote execution.\r\n\r\nThe scripts involved in moving the built binaries to outside WSL rarely flake due to a WSL interop bug when we invoke Windows commands from inside WSL (which is an untypical thing to do; but a needed trick given some WSL limitation).\r\n\r\nThis commit tries to stabilize/avoid this flake by retrying if we recognize this","Url":"https://github.com/angular/angular-cli/pull/29831","RelatedDescription":"Closed or merged PR \"build: avoid WSL interop flake when preparing Windows CI environment\" (#29831)"},{"Id":"2914676132","IsPullRequest":true,"CreatedAt":"2025-03-12T17:29:26","Actor":"devversion","Number":"29827","RawContent":null,"Title":"docs: release notes for the v19.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29827","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.2 release\" (#29827)"},{"Id":"2914669525","IsPullRequest":true,"CreatedAt":"2025-03-12T17:27:20","Actor":"devversion","Number":"29826","RawContent":null,"Title":"Bump version to \"v19.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29826","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.2\" with changelog.\" (#29826)"},{"Id":"2914124772","IsPullRequest":true,"CreatedAt":"2025-03-12T17:27:03","Actor":"clydin","Number":"29821","RawContent":null,"Title":"test: remove E2E test for ngrx Effect decorator usage","State":"closed","Body":"The `misc/third-party-decorators` E2E test has been deleted as its purpose was to test the usage of the now removed `Effect` decorator from `ngrx`.  Version 14 which contains the `Effect` decorator does not support use with the upcoming Angular v20 and will result in a compilation error due to the removal of the `InjectFlags` export.\r\nhttps://github.com/angular/angular-cli/actions/runs/13814669150/job/38644847372?pr=29798#step:6:1235","Url":"https://github.com/angular/angular-cli/pull/29821","RelatedDescription":"Closed or merged PR \"test: remove E2E test for ngrx Effect decorator usage\" (#29821)"},{"Id":"2914658938","IsPullRequest":true,"CreatedAt":"2025-03-12T17:23:49","Actor":"alan-agius4","Number":"29825","RawContent":null,"Title":"ci: update `matchCurrentVersion` RegExp","State":"closed","Body":"The previous regexp also matches `20.0.0-next` which causes Angular FW packages not to be updated.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29825","RelatedDescription":"Closed or merged PR \"ci: update `matchCurrentVersion` RegExp\" (#29825)"},{"Id":"2914645774","IsPullRequest":true,"CreatedAt":"2025-03-12T17:23:18","Actor":"devversion","Number":"29824","RawContent":null,"Title":"build: update ng-dev","State":"closed","Body":"Updates `ng-dev` again as we made another release-tool fix for pnpm. See: https://github.com/angular/dev-infra-private-ng-dev-builds/commit/9fd3adb2e8b9a0fef1ba5bc905a900e018445e05","Url":"https://github.com/angular/angular-cli/pull/29824","RelatedDescription":"Closed or merged PR \"build: update ng-dev\" (#29824)"},{"Id":"2914456589","IsPullRequest":true,"CreatedAt":"2025-03-12T16:38:12","Actor":"devversion","Number":"29823","RawContent":null,"Title":"build: update `ng-dev` to include latest pnpm release tool fixes","State":"closed","Body":"The release tool did check for a `yarn.lock` file. This check was updated to also work with pnpm.","Url":"https://github.com/angular/angular-cli/pull/29823","RelatedDescription":"Closed or merged PR \"build: update `ng-dev` to include latest pnpm release tool fixes\" (#29823)"},{"Id":"2914000541","IsPullRequest":false,"CreatedAt":"2025-03-12T13:47:37","Actor":"timneil","Number":"29819","RawContent":null,"Title":"Remove protractor from @angular-devkit/build-angular","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\n> Protractor is already an optional peer  dependency.  The builder will eventually be removed once the deprecation period is over and protractor in end of life.\n\n _Originally posted by @alan-agius4 in [#25298](https://github.com/angular/angular-cli/issues/25298#issuecomment-1570727426)_\n\nIf I run an `npm install --omit=optional` I get an error from ESBuild when trying to build the Angular application. \n```cli\nThe package \"@esbuild/win32-x64\" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n\"--no-optional\" or \"--omit=optional\" flags. The \"optionalDependencies\" feature\nof \"package.json\" is used by esbuild to install the correct binary executable\nfor your current platform.\n```\n\nThis makes it impossible to not install Protractor which means alerts from vulnerability checkers. The only way I can see to avoid this is to add overrides to the appliction's `package.json` which creates an unnecessary maintenance task.\n\n### Describe the solution you'd like\n\nRemoval of Protractor from the optional dependancies.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29819","RelatedDescription":"Closed issue \"Remove protractor from @angular-devkit/build-angular\" (#29819)"},{"Id":"2913651495","IsPullRequest":false,"CreatedAt":"2025-03-12T11:42:31","Actor":"timneil","Number":"29818","RawContent":null,"Title":"Can't avoid installing Protractor","State":"closed","Body":"> Protractor is already an optional peer  dependency.  The builder will eventually be removed once the deprecation period is over and protractor in end of life.\n\n _Originally posted by @alan-agius4 in [#25298](https://github.com/angular/angular-cli/issues/25298#issuecomment-1570727426)_\n\nIf I run an `npm install --omit=optional` I get an error from ESBuild when trying to build the Angular application. How am I supposed to avoid installing Protractor but still be able to build?\n\n```cli\nThe package \"@esbuild/win32-x64\" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n\"--no-optional\" or \"--omit=optional\" flags. The \"optionalDependencies\" feature\nof \"package.json\" is used by esbuild to install the correct binary executable\nfor your current platform.\n```","Url":"https://github.com/angular/angular-cli/issues/29818","RelatedDescription":"Closed issue \"Can't avoid installing Protractor\" (#29818)"},{"Id":"2913309241","IsPullRequest":true,"CreatedAt":"2025-03-12T11:13:29","Actor":"devversion","Number":"29817","RawContent":null,"Title":"docs: improve developer guide for pnpm and windows","State":"closed","Body":"Improves the developer guide for pnpm and Windows.\r\n\r\nSee for the Windows change:\r\nhttps://github.com/angular/angular-cli/pull/29705.","Url":"https://github.com/angular/angular-cli/pull/29817","RelatedDescription":"Closed or merged PR \"docs: improve developer guide for pnpm and windows\" (#29817)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2914672502","IsPullRequest":true,"CreatedAt":"2025-03-13T20:32:30","Actor":"wagnermaciel","Number":"30625","RawContent":null,"Title":"fix(cdk-experimental/ui-patterns): small fixes for internal compatibi…","State":"closed","Body":"…lity","Url":"https://github.com/angular/components/pull/30625","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/ui-patterns): small fixes for internal compatibi…\" (#30625)"},{"Id":"2917934558","IsPullRequest":true,"CreatedAt":"2025-03-13T17:30:00","Actor":"andrewseguin","Number":"30628","RawContent":null,"Title":"fix(material/select): use flexible overlay dimensions","State":"open","Body":"When the browser window is small, the select's listbox panel does not shrink in size, which causes options to become unreachable.\r\n\r\nWith flexible positioning, the overlay is constrained in height causing the panel to shrink as well, rendering all available options with scrolling\r\n\r\n## Example: Panel displayed underneath the select. Observe that the Milk option was not fully visible when the panel is scrolled all the way down\r\n- old: \r\n![image](https://github.com/user-attachments/assets/4a2b3f29-39ff-4dc1-bacf-ab2c6c0f4d23)\r\n- new: \r\n![image](https://github.com/user-attachments/assets/c2d37c2a-be13-49e2-bce2-b144f5ae58e3)\r\n\r\n## Example: Panel displayed above the select. Observe the None option was not at all visible when scrolled up\r\n- old: \r\n![image](https://github.com/user-attachments/assets/f723ce44-7771-4479-a910-b0fb76800249)\r\n- new: \r\n![image](https://github.com/user-attachments/assets/eb84bb49-09a0-4568-845c-2a621870216c)\r\n\r\n","Url":"https://github.com/angular/components/pull/30628","RelatedDescription":"Open PR \"fix(material/select): use flexible overlay dimensions\" (#30628)"},{"Id":"2917745646","IsPullRequest":true,"CreatedAt":"2025-03-13T16:22:41","Actor":"andrewseguin","Number":"30627","RawContent":null,"Title":"fix(material/paginator): prevent keyboard nav to disabled buttons","State":"open","Body":"Previous and next buttons should not be in the tab order if they are disabled\r\n\r\nFixes b/395610398","Url":"https://github.com/angular/components/pull/30627","RelatedDescription":"Open PR \"fix(material/paginator): prevent keyboard nav to disabled buttons\" (#30627)"},{"Id":"2916650331","IsPullRequest":true,"CreatedAt":"2025-03-13T10:31:26","Actor":"crisbeto","Number":"30626","RawContent":null,"Title":"feat(material/button): allow appearance to be set dynamically","State":"open","Body":"Adds the following features to the button:\r\n* Allows the appearance of a button to be set dynamically using the `matButton` input.\r\n* Aligns the terminology with the M3 spec. Currently the names are derived from an old spec.\r\n* Adds the ability to set the default appearance for buttons.\r\n* Adds a `matIconButton` selector to the icon button for consistency.\r\n* Adds a `matFab` selector to the FAB for consistency.\r\n* Adds a `matMiniFab` selector to the mini FAB for consistency.\r\n\r\nAll of these changes are backwards-compatible and allow us to evolve the button in the future.\r\n\r\nBREAKING CHANGE:\r\n* `ButtonVariant` which is returned by `MatButtonHarness.getVariant` no longer includes the appearance of the button. Use `MatButtonHarness.getAppearance` instead.\r\n\r\nFixes #15367.\r\nFixes #29841.","Url":"https://github.com/angular/components/pull/30626","RelatedDescription":"Open PR \"feat(material/button): allow appearance to be set dynamically\" (#30626)"},{"Id":"2914423966","IsPullRequest":true,"CreatedAt":"2025-03-12T15:53:40","Actor":"crisbeto","Number":"30624","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30624","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#30624)"},{"Id":"2914414785","IsPullRequest":true,"CreatedAt":"2025-03-12T15:51:16","Actor":"crisbeto","Number":"30623","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30623","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#30623)"},{"Id":"2914381273","IsPullRequest":true,"CreatedAt":"2025-03-12T15:39:32","Actor":"crisbeto","Number":"30622","RawContent":null,"Title":"Bump version to \"v20.0.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30622","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.1\" with changelog.\" (#30622)"},{"Id":"2907088931","IsPullRequest":false,"CreatedAt":"2025-03-12T14:29:47","Actor":"diesenj","Number":"30611","RawContent":null,"Title":"bug(matAutocomplete): Autocomplete not opening with shadow DOM","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Angular’s ViewEncapsulation.ShadowDom, the MatAutocomplete component fails to reopen the list of options after an option has been selected.\nThis issue has already been reported, but it still appears to be unresolved in Angular 19 + Material 19: https://github.com/angular/components/issues/30153\n\nWorkarounds:\n- Pressing an additional key (e.g., arrow key) after typing causes it to open.\n- Triggering a blur and then refocusing the input also makes it work again.\n\n\nThe provided Stackblitz demo app shows the behaviour of MatAutocomplete with and without ViewEncapsulation.ShadowDom.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-rzrzwrx7\nSteps to reproduce:\n1. Type \"One\"\n2. Select \"One\"\n3. Type \"Two\"\n\n\n### Expected Behavior\n\nMatAutocomplete should reopen the list of options immediately on typing, even after a previous selection, without requiring additional key presses or focus shifts.\n\n### Actual Behavior\n\nWhen typing, MatAutocomplete component fails to reopen the list of options (after an option has been selected).\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n","Url":"https://github.com/angular/components/issues/30611","RelatedDescription":"Closed issue \"bug(matAutocomplete): Autocomplete not opening with shadow DOM\" (#30611)"},{"Id":"2913104664","IsPullRequest":true,"CreatedAt":"2025-03-12T14:29:46","Actor":"crisbeto","Number":"30619","RawContent":null,"Title":"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM","State":"closed","Body":"There are a few places where the autocomplete was checking if it has focus which were breaking down when inside the shadow DOM, because `document.activeElement` will point to the closest shadow root.\r\n\r\nThese changes consolidate the places where we check for focus and use our utility for resolving the focused element through shadow boundaries.\r\n\r\nFixes #30611.","Url":"https://github.com/angular/components/pull/30619","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM\" (#30619)"},{"Id":"2913556358","IsPullRequest":true,"CreatedAt":"2025-03-12T10:58:24","Actor":"mistrykaran91","Number":"30621","RawContent":null,"Title":"fix(material/slider): handle null values in slider input","State":"open","Body":"The slider values behaved inconsistently when we reset the formGroup. This MR will resolve that issue by setting `value` to default value when its `null`\r\n\r\nFixes #30614","Url":"https://github.com/angular/components/pull/30621","RelatedDescription":"Open PR \"fix(material/slider): handle null values in slider input\" (#30621)"},{"Id":"2913491987","IsPullRequest":false,"CreatedAt":"2025-03-12T10:33:52","Actor":"laliconfigcat","Number":"30620","RawContent":null,"Title":"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1.x\n\n### Description\n\nI asked for a new feature recently, introducing the MAT_TIMEPICKER_SCROLL_STRATEGY: https://github.com/angular/components/issues/30421\n\nIt has been implemented, but there was a bug, after opening the Timepicker and closing it via scroll (with a close scroll strategy), the Timepicker could not be opened again: https://github.com/angular/components/issues/30558\n\nThat issue was solved in 19.2.x and it is working fine.\n\nBut in 19.2.x, now the Select is having the same issue when having a close scroll strategy as MAT_SELECT_SCROLL_STRATEGY.\n```\nconst closeScrollStrategyFactory = (overlay: Overlay): (() => CloseScrollStrategy) => {\n  return () => overlay.scrollStrategies.close();\n};\n```\n\n\nAfter opening the select, and closing it via scrolling on the page, the select cannot be opened again.\nI'm not sure if the issue has anything to do with the TimePicker.\n\nWe have the same scroll strategy for MAT_DATEPICKER_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY and MAT_MENU_SCROLL_STRATEGY, all the others are working fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/timepicker-scroll-strategy-issue-cjulrhcw?file=src%2Fmain.ts\nSteps to reproduce:\n1. Open the select.\n2. Scroll on the page.\n3. The select should be closed.\n4. Try opening the select again, it won't work\n\n\n### Expected Behavior\n\nWe should be able to reopen the select after it is closed with a scroll strategy.\n\n### Actual Behavior\n\nThe select cannot be reopened.\n\n### Environment\n\n- Angular: 19.2.x\n- CDK/Material: 19.2.x\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30620","RelatedDescription":"Open issue \"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue\" (#30620)"},{"Id":"2911913116","IsPullRequest":true,"CreatedAt":"2025-03-12T07:36:29","Actor":"devversion","Number":"30618","RawContent":null,"Title":"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30618","RelatedDescription":"Closed or merged PR \"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30618)"},{"Id":"2905307649","IsPullRequest":true,"CreatedAt":"2025-03-12T05:38:19","Actor":"crisbeto","Number":"30608","RawContent":null,"Title":"fix(multiple): deprecate exported factories","State":"closed","Body":"There are a bunch of factory functions that made it into our public API as a result of an old ViewEngine limitation where the factories had to be separate variables and had to be exported. With Ivy this isn't necessary and the factories can be inlined. Also they were never meant to be public APIs.\r\n\r\nThese changes mark them as deprecated so they can be dropped from the public API in v21.","Url":"https://github.com/angular/components/pull/30608","RelatedDescription":"Closed or merged PR \"fix(multiple): deprecate exported factories\" (#30608)"},{"Id":"2911894445","IsPullRequest":true,"CreatedAt":"2025-03-11T21:20:57","Actor":"devversion","Number":"30617","RawContent":null,"Title":"build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30617","RelatedDescription":"Closed or merged PR \"build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30617)"},{"Id":"2910701103","IsPullRequest":false,"CreatedAt":"2025-03-11T14:09:13","Actor":"TimUnderhay","Number":"30616","RawContent":null,"Title":"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav","State":"open","Body":"### Documentation Feedback\n\nThe sidenav component's \"Autosize sidenav\" example is incorrect: it uses mat-drawer rather than sidenav.\n\n![Image](https://github.com/user-attachments/assets/1075bcb0-9c69-43f5-84bc-5c219a0c93e7)\n\n### Affected documentation page\n\nhttps://material.angular.io/components/sidenav/examples","Url":"https://github.com/angular/components/issues/30616","RelatedDescription":"Open issue \"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav\" (#30616)"},{"Id":"2910564045","IsPullRequest":false,"CreatedAt":"2025-03-11T13:28:16","Actor":"scarrasco-pgr","Number":"30615","RawContent":null,"Title":"bug(form-field): mdc-notched-outline__notch shows overlapping border","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf the form field is contained in a parent that contains the `transform` CSS property e.g. `transform: translate3d(40px, -38px, 0px);` then the notch shows an overlapping border. \n\n![Image](https://github.com/user-attachments/assets/c54e280a-8a0e-4d4f-bd6e-e5a5220eb455)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/hcnjyvfa?file=src%2Fexample%2Fcdk-drag-drop-root-element-example.html\nSteps to reproduce:\n1. Move the dialog around\n2. Adjust the zoom level\n\n\n### Expected Behavior\n\nFor the notch to not contain an overlapping border\n\n### Actual Behavior\n\nNotch contains an overlapping border\n\n### Environment\n\nAngular CLI: 19.2.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.2.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1902.0\n@angular-devkit/build-angular      19.2.0\n@angular-devkit/core               19.2.0\n@angular-devkit/schematics         19.2.0\n@angular/cdk                       19.2.1\n@angular/material                  19.2.1\n@angular/material-moment-adapter   19.2.1\n@schematics/angular                19.2.0\nrxjs                               7.4.0\ntypescript                         5.8.2\nzone.js                            0.15.0\n","Url":"https://github.com/angular/components/issues/30615","RelatedDescription":"Open issue \"bug(form-field): mdc-notched-outline__notch shows overlapping border\" (#30615)"},{"Id":"2904659734","IsPullRequest":true,"CreatedAt":"2025-03-11T12:55:38","Actor":"crisbeto","Number":"30606","RawContent":null,"Title":"fix(multiple): resolve directive host binding issues","State":"closed","Body":"Fixes several issues that weren't caught, because of lack of type checking of directive host bindings.","Url":"https://github.com/angular/components/pull/30606","RelatedDescription":"Closed or merged PR \"fix(multiple): resolve directive host binding issues\" (#30606)"},{"Id":"2903494943","IsPullRequest":false,"CreatedAt":"2025-03-11T08:49:21","Actor":"bastiW","Number":"30604","RawContent":null,"Title":"bug(autocomplete): Autocomplete in combination with input validation triggers validation during mousedown","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nLet's combine a Autocomplete and a `Validator.required`. \nDuring the mousedown the validation is triggered and the Form Field is invalid and the form field is marked red. On mouse up  it is then valid again. \n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/mat-autocomplete-validated?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\nSteps to reproduce:\n\n1. Open the Autocomplete\n\n![Image](https://github.com/user-attachments/assets/08d6332e-c9a3-48d6-a61e-261f9efdf319)\n\n2. Mousedown an item -> You see it is validated, as the input blurs\n\n![Image](https://github.com/user-attachments/assets/89b0da76-c346-4976-833c-6c63ffc260ed)\n\n3. It is valid again\n\n![Image](https://github.com/user-attachments/assets/7490662f-11a9-4775-b607-923db097a9e1)\n \n\n\n\n\n### Expected Behavior\n\nValidation should be only triggerd after value change, either: \n- select an option\n- leave the autoselect without selection\n- after changing the value on input\n\n### Actual Behavior\n\nValidation is triggered during mouse down\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.2\n- Browser(s): Chrome\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30604","RelatedDescription":"Closed issue \"bug(autocomplete): Autocomplete in combination with input validation triggers validation during mousedown\" (#30604)"},{"Id":"2908141285","IsPullRequest":false,"CreatedAt":"2025-03-10T18:50:11","Actor":"kenyerman","Number":"30614","RawContent":null,"Title":"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `mat-slider` with **range thumbs** (start and end thumbs) in a reactive form, resetting the form sets the control values to `null`. This results in:  \n\n1. The thumbs repositioning **to slice the range into equal parts**, despite their values being `null`.  \n2. A conflict with the initialization logic, where `null` values correctly position the thumbs **at the range’s endpoints**.  \n\n##### Investigation  \n- On reset, the slider attempts to **divide the range into equal sections**.  \n- This behavior works fine for **single-thumb sliders**, but for **range sliders**, it introduces **rounding errors** (since the range is divided by 3, which becomes worse as the value of `steps` gets closer to `0`).  \n- As a result, multiple resets can produce **different thumb positions**, making the behavior inconsistent:  \n  - **Inconsistent with initialization** (where `null` places thumbs at the ends).  \n  - **Inconsistent with itself** (due to rounding errors). \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-ak9ciyht?file=src%2Fmain.ts\nSteps to reproduce:\n1. Click on `reset` button\n2. Notice the thumbs are trying to slice the range into 3 parts\n3. Click on `reset` button \n4. Notice the thumbs are getting into different positions\n\n\n### Expected Behavior\n\nWhen resetting the form, the thumbs should **match the initialization logic**:  \n  - If the control values are `null`, **both thumbs should be placed at the range’s endpoints**.  \n  - The reset behavior should be **consistent and predictable**.  \n\n### Actual Behavior\n\nInstead of moving to the endpoints, the thumbs attempt to **slice the range into equal parts**, leading to:  \n  - Inconsistency with initialization (`null` values initially place thumbs at the range’s ends).  \n  - Rounding errors when dividing the range, causing the reset position to change across multiple resets.  \n\n\n### Environment\n\n```\nAngular CLI: 18.2.8\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```","Url":"https://github.com/angular/components/issues/30614","RelatedDescription":"Open issue \"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms\" (#30614)"},{"Id":"2908042706","IsPullRequest":true,"CreatedAt":"2025-03-10T18:04:51","Actor":"jamOne-","Number":"30613","RawContent":null,"Title":"refactor(multiple): eliminate usages of `any` type (batch 2)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30613","RelatedDescription":"Open PR \"refactor(multiple): eliminate usages of `any` type (batch 2)\" (#30613)"},{"Id":"2905541710","IsPullRequest":true,"CreatedAt":"2025-03-10T15:55:29","Actor":"JoostK","Number":"30610","RawContent":null,"Title":"fix(cdk/portal): fix incorrect injector hierarchy with DomPortalOutlet and child environment injectors","State":"closed","Body":"This commit fixes a regression that was introduced in #27427, where the injector hierarchy\r\ndid not respect nested environment injectors. `DomPortalOutlet` was always using the application\r\nroot as environment injector, yet the element injector may have a custom child environment injector\r\nas ancestor. This child environment injector has to be retrieved manually and passed as environment\r\ninjector of the portal component.\r\n\r\nFixes #30609","Url":"https://github.com/angular/components/pull/30610","RelatedDescription":"Closed or merged PR \"fix(cdk/portal): fix incorrect injector hierarchy with DomPortalOutlet and child environment injectors\" (#30610)"},{"Id":"2907456411","IsPullRequest":true,"CreatedAt":"2025-03-10T14:29:12","Actor":"jamOne-","Number":"30612","RawContent":null,"Title":"Eliminate `any` type: first batch","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30612","RelatedDescription":"Closed or merged PR \"Eliminate `any` type: first batch\" (#30612)"},{"Id":"2904825399","IsPullRequest":true,"CreatedAt":"2025-03-08T14:34:37","Actor":"SocDario","Number":"30607","RawContent":null,"Title":"feat(material/button): add missing tokens for hover, focus, and active pseudo-classes","State":"open","Body":"Add missing tokens for overriding hover, focus, and active outlines, as well as the label styling of the `outlined-button` in Angular Material.\r\n\r\nFixes #30573 ","Url":"https://github.com/angular/components/pull/30607","RelatedDescription":"Open PR \"feat(material/button): add missing tokens for hover, focus, and active pseudo-classes\" (#30607)"},{"Id":"2903898607","IsPullRequest":false,"CreatedAt":"2025-03-07T21:39:38","Actor":"danielschmitz","Number":"30605","RawContent":null,"Title":"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the Angular Material Datepicker with the locale set to 'pt-BR', manually entering a date in the DD/MM/YYYY format and then losing focus causes the format to be incorrectly swapped to MM/DD/YYYY.\n\nExpected behavior:\nThe Datepicker should respect the 'pt-BR' locale and maintain the DD/MM/YYYY format after the input loses focus.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/wvap6bl6?file=src%2Fexample%2Fdatepicker-custom-icon-example.html\nSteps to reproduce:\n1. Write a date like \"07/03/2025\"\n2. press tab or lose focus\n3. The date swaps to: \"03/07/2025\"\n\n\n### Expected Behavior\n\nWrite a date like \"07/03/2025\"\nand date don't swaps to \"03/07/2025\"\n\n### Actual Behavior\n\n Date swaps from DD/MM/YYYY to MM/DD/YYYY\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30605","RelatedDescription":"Closed issue \"bug(datepicker): Datepicker incorrectly swaps day and month when using 'pt-BR' locale\" (#30605)"},{"Id":"2902742448","IsPullRequest":false,"CreatedAt":"2025-03-07T18:15:36","Actor":"ManelBH","Number":"30600","RawContent":null,"Title":"docs-bug(CdkTree): Most examples are broken","State":"closed","Body":"### Documentation Feedback\n\nThe following examples in the cdk tree page are broken or incomplete and won't compile in Stackblitz:\n\ncdk-tree-nested-level-accessor-example\ncdk-tree-nested-children-accessor-example\ncdk-tree-flat-level-accessor-example\ncdk-tree-flat-children-accessor-example\ncdk-tree-complex-example\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/examples","Url":"https://github.com/angular/components/issues/30600","RelatedDescription":"Closed issue \"docs-bug(CdkTree): Most examples are broken\" (#30600)"},{"Id":"2902836013","IsPullRequest":true,"CreatedAt":"2025-03-07T18:15:35","Actor":"crisbeto","Number":"30601","RawContent":null,"Title":"docs(cdk/tree): examples not working when forked to Stackblitz","State":"closed","Body":"The tree examples were breaking down when forked to Stackblitz, because of a couple of reasons:\r\n1. They had their sample data in a separate file which the build process wasn't picking up.\r\n2. They had compilation errors only with rxjs 7+ which we didn't notice, because our local setup is on rxjs 6.\r\n\r\nI also went through all the examples and moved the sample data further down so it doesn't distract from the actual code.\r\n\r\nFixes #30600.","Url":"https://github.com/angular/components/pull/30601","RelatedDescription":"Closed or merged PR \"docs(cdk/tree): examples not working when forked to Stackblitz\" (#30601)"},{"Id":"2902946202","IsPullRequest":true,"CreatedAt":"2025-03-07T18:14:52","Actor":"crisbeto","Number":"30602","RawContent":null,"Title":"fix(material/schematics): some options missing from schema","State":"closed","Body":"Fixes that the `neutralVariantColor` and `errorColor` were missing from the schema which meant that users can't pass them in.\r\n\r\nFixes #30571.","Url":"https://github.com/angular/components/pull/30602","RelatedDescription":"Closed or merged PR \"fix(material/schematics): some options missing from schema\" (#30602)"},{"Id":"2903408413","IsPullRequest":false,"CreatedAt":"2025-03-07T16:14:02","Actor":"clark-stevenson","Number":"30603","RawContent":null,"Title":"bug(Theme):  The M3 Theme Generator schematic selects an incorrect value for high-contrast onTertiary","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nWhen using `ng generate @angular/material:theme-color` schematic to generate a CSS theme and comparing this to my own color tools, I noticed that for high contrast onTertiary, there seems to be a mismatch. \n\n\nShortened for simplicity in the generated CSS.  Notice these colors match which means they would blend together.\n\n```\n@media (prefers-contrast: more) {\n    --mat-sys-tertiary: light-dark(#56004f, #ffeaf6);\n    --mat-sys-on-tertiary: light-dark(#56004f, #ffeaf6);\n}\n````\n\nI tracked this down to [this section of the schematic](https://github.com/angular/components/blob/1b721a03faca95636d202660167ff35c2399bdfb/src/material/schematics/ng-generate/theme-color/index.ts#L533): \n\n\n```\n  css += createLightDarkVar(\n    leftSpacing,\n    'on-tertiary',\n    isHighContrast ? lightScheme.tertiary : lightScheme.tertiaryPalette.tone(100),\n    isHighContrast ? darkScheme.tertiary : darkScheme.tertiaryPalette.tone(20),\n  );\n```\n\n\nI believe that `lightScheme.onTertiary` and `darkScheme.onTertiary` should be used here?  However I am honestly out of my depth. \n\n\n### Reproduction\n\nSteps to reproduce:\n1. run `ng generate @angular/material:theme-color`\n2. Use primary `#6002EE` with the rest at defaults, choose high-contrast and no to scss.\n3. Consult high contrast section for tertiary\n\n\n### Expected Behavior\n\nThe content and surface should be highly contrasting.\n\n### Actual Behavior\n\nThe content and surface are the same color.\n\n### Environment\n\nAngular CLI: 19.2.1\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.1\n@angular-devkit/build-angular   19.2.1\n@angular-devkit/core            19.2.1\n@angular-devkit/schematics      19.2.1\n@angular/cdk                    19.2.2\n@angular/material               19.2.2\n@schematics/angular             19.2.1\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n","Url":"https://github.com/angular/components/issues/30603","RelatedDescription":"Open issue \"bug(Theme):  The M3 Theme Generator schematic selects an incorrect value for high-contrast onTertiary\" (#30603)"},{"Id":"2902395904","IsPullRequest":false,"CreatedAt":"2025-03-07T08:53:06","Actor":"phrei","Number":"30599","RawContent":null,"Title":"bug(google-maps): Warning in Console about adding Event-Listener for click instead of gmp-click","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm getting the following warning in console when I use `@angular/google-maps@19.2.2`:\n\n`<gmp-advanced-marker>: Please use addEventListener('gmp-click', ...) instead of addEventListener('click', ...).`\n\nWould this mean the following code should be changed to `gmp-click` as suggested in the warning?\n\nhttps://github.com/angular/components/blob/1b721a03faca95636d202660167ff35c2399bdfb/src/google-maps/map-advanced-marker/map-advanced-marker.ts#L136\n\n### Reproduction\n\nCreate a project that uses the `(mapClick)`-Output on a `<map-advanced-marker>`\n\n### Expected Behavior\n\nNo warning in console.\n\n### Actual Behavior\n\nWarning in console.\n\n### Environment\n\n- Angular: 19.2.1\n- CDK/Material: 19.2.2\n- Google-Maps: 19.2.2\n- Browser(s): Chrome\n- Operating System: Windows\n","Url":"https://github.com/angular/components/issues/30599","RelatedDescription":"Open issue \"bug(google-maps): Warning in Console about adding Event-Listener for click instead of gmp-click\" (#30599)"},{"Id":"2901221626","IsPullRequest":true,"CreatedAt":"2025-03-06T23:11:31","Actor":"devversion","Number":"30598","RawContent":null,"Title":"build: update `@angular/bazel` for relative imports in `ng_package`","State":"closed","Body":"See: https://github.com/angular/angular/commit/1f1039475c573d7b87b0f9a2e01619736b17bbf5","Url":"https://github.com/angular/components/pull/30598","RelatedDescription":"Closed or merged PR \"build: update `@angular/bazel` for relative imports in `ng_package`\" (#30598)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-14T03:30:02.6875037Z","RunDurationInMilliseconds":1643}