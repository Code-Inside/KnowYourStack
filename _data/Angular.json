{"Data":{"Angular-Issues":{"Issues":[{"Id":"773455882","IsPullRequest":false,"CreatedAt":"2020-12-23T03:22:14","Actor":"shybaLen","Number":"40248","RawContent":null,"Title":"what features I wanted to be supported","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n\r\n1. support json to component render. now only define in component template can works to binding. but I think ivy can support json to component binding. json define is a component that can be rendered when a componet use it.\r\n2. support template anonymous declaration\r\n3. support input output spread binding. spread a object binding. angular can detect on object property change. and spread it to class input. may be [...inputs] (...outputs)\r\n4. remove zone.js\r\n5. support none host tag render. host tag behavior as template. component host tag can not be rendered. maybe supported as `@Template()` component, can be renderred by ng-template outlet\r\n\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n","Url":"https://github.com/angular/angular/issues/40248","RelatedDescription":"Open issue \"what features I wanted to be supported\" (#40248)"},{"Id":"773362998","IsPullRequest":false,"CreatedAt":"2020-12-23T01:55:16","Actor":"lacolaco","Number":"40247","RawContent":null,"Title":"Proposal: Component AbortSignal Support","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature Proposal\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/core\r\n\r\n\r\n### Description\r\n\r\nThis proposal adds the first-class support of the [`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal) web standard.\r\nAbortSignal is not only for Fetch API but will be used for unregistering DOM event listeners. \r\n\r\n[add signal to addEventListener by benjamingr · Pull Request \\#919 · whatwg/dom](https://github.com/whatwg/dom/pull/919)\r\n\r\nAbortSignal will become a new web-standard for various async tasks. If a component exposes its signal on destroyed, developers can use it for interop to other web-compatible (abortable) APIs.\r\n\r\nRxJS team is also considering adding support of AbortSignal for automatic unsubscribing subscriptions.\r\n\r\n[Discussion: AbortSignal approach · Issue \\#5863 · ReactiveX/rxjs](https://github.com/ReactiveX/rxjs/issues/5863)\r\n\r\n### Describe the solution you'd like\r\n\r\nThis is still a rough idea. I think `ElementRef` can expose its aborting signal.\r\n\r\n```ts\r\n@Component()\r\nexport class SomeComponent {\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    const signal: AbortSignal = this.elRef.abortSignal;\r\n\r\n    // DOM event\r\n    window.addEventListener('keyup', ..., { signal });\r\n\r\n    // Fetch\r\n    fetch(url, {signal}).then(...);\r\n\r\n    // RxJS\r\n    someStream$.subscribe(handler, { signal });\r\n  }\r\n}\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\n\r\n","Url":"https://github.com/angular/angular/issues/40247","RelatedDescription":"Open issue \"Proposal: Component AbortSignal Support\" (#40247)"},{"Id":"773343795","IsPullRequest":false,"CreatedAt":"2020-12-23T01:00:13","Actor":"ORESoftware","Number":"40246","RawContent":null,"Title":"Documentation - explain how environment.ts gets switched by flags with CLI","State":"open","Body":"# 🚀 feature request\r\n\r\nNeed to improve documentation for  `ng build --prod` or `ng build --env=prod`\r\n\r\n### Relevant Package\r\nNot sure which package\r\n\r\n\r\n### Description\r\n\r\nHere is the problem - it is highly unclear how Angular switches between environment.XXX.ts files.\r\nThe flag should also be:\r\n\r\n```\r\nng build --prod --env=prod\r\nng build --env=dev\r\nng build --env=test\r\n```\r\n\r\nHow am I suppose to import the file? If I import environment.prod, how am I not tied to that config? If I import environment.dev, how am I not tied to that config? It makes ZERO sense to me and all the answers on StackOverflow demonstrate that it makes ZERO sense to anyone else.\r\n\r\n\r\nAs you can see here, I can import environment.dev:\r\n--------------------------------\r\n\r\n![Screen Shot 2020-12-22 at 4 57 04 PM](https://user-images.githubusercontent.com/11139560/102946994-235c9880-4477-11eb-9c57-0d082bb1510d.png)\r\n\r\n\r\nAnd as you can see here, I cannot import just \"environment\":\r\n-----------------\r\n![Screen Shot 2020-12-22 at 4 57 13 PM](https://user-images.githubusercontent.com/11139560/102946996-25265c00-4477-11eb-851e-88880ae8c930.png)\r\n\r\n","Url":"https://github.com/angular/angular/issues/40246","RelatedDescription":"Open issue \"Documentation - explain how environment.ts gets switched by flags with CLI\" (#40246)"},{"Id":"773337207","IsPullRequest":false,"CreatedAt":"2020-12-23T00:40:53","Actor":"ORESoftware","Number":"40245","RawContent":null,"Title":"Documentation - how to import file from library generated in projects folder","State":"open","Body":"\r\n# 🚀 feature request\r\n\r\nI tried asking on the angular google groups \r\n\r\n### Relevant Package\r\nProbably angular core but uncertain.\r\n\r\n\r\n### Description\r\n\r\n<img width=\"1000\" alt=\"Screen Shot 2020-12-22 at 4 38 04 PM\" src=\"https://user-images.githubusercontent.com/11139560/102945991-3752cb00-4474-11eb-85c4-d94ec3a5ce25.png\">\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nThe only solution I can think of is symlinking the tools library to node_modules?\r\nSomething like:\r\n\r\n```\r\nln -sf \"$PWD/projects/tools\" \"$PWD/node_modules/@self/tools\"\r\n```\r\n\r\nbut is this feature built in? right now i have this ugly imports path:\r\n\r\n```\r\nimport {AuthService} from \"../../../tools/src/lib/auth.service\";\r\n\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/40245","RelatedDescription":"Open issue \"Documentation - how to import file from library generated in projects folder\" (#40245)"},{"Id":"773315538","IsPullRequest":true,"CreatedAt":"2020-12-22T23:32:20","Actor":"howardjing","Number":"40244","RawContent":null,"Title":"docs(router): fix typo","State":"open","Body":"Replace the word Angualr with Angular.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThere is a typo in router.ts.\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe typo is removed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40244","RelatedDescription":"Open PR \"docs(router): fix typo\" (#40244)"},{"Id":"773311854","IsPullRequest":true,"CreatedAt":"2020-12-22T23:21:22","Actor":"kyliau","Number":"40243","RawContent":null,"Title":"fix(language-service): include compilerOptions.rootDir in rootDirs","State":"open","Body":"When resolving references, the Ivy compiler has a few strategies it could use.\r\n\r\nFor relative path, one of strategies is [`RelativePathStrategy`](https://github.com/angular/angular/blob/master/packages/compiler-cli/src/ngtsc/imports/README.md#relativepathstrategy). This strategy\r\nrelies on `compilerOptions.rootDir` and `compilerOptions.rootDirs` to perform\r\nthe resolution, but language service only passes `rootDirs` to the compiler,\r\nand not `rootDir`.\r\n\r\nIn reality, `rootDir` is very different from `rootDirs` even though they\r\nsound the same.\r\nAccording to the official [TS documentation][1],\r\n> `rootDir` specifies the root directory of input files. Only use to control\r\n> the output directory structure with --outDir.\r\n\r\n> `rootDirs` is a list of root folders whose combined content represent the\r\n> structure of the project at runtime. See [Module Resolution documentation](https://www.typescriptlang.org/docs/handbook/module-resolution.html#virtual-directories-with-rootdirs)\r\n> for more details.\r\n\r\nFor now, we keep the behavior between compiler and language service consistent,\r\nbut we will revisit the notion of `rootDir` and how it is used later.\r\n\r\nFix angular/vscode-ng-language-service#1039\r\n\r\n[1]: https://www.typescriptlang.org/docs/handbook/compiler-options.html\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40243","RelatedDescription":"Open PR \"fix(language-service): include compilerOptions.rootDir in rootDirs\" (#40243)"},{"Id":"773114791","IsPullRequest":true,"CreatedAt":"2020-12-22T22:50:31","Actor":"atscott","Number":"40239","RawContent":null,"Title":"fix(language-service): shorthand syntax with variables","State":"closed","Body":"This commit fixes an issue in the ivy native language service\r\nthat caused the logic that finds a target node given a template\r\nposition to throw away the results. This happened because the\r\nsource span of a variable node in the shorthand structural\r\ndirective syntax (i.e. `*ngIf=`) included the entire binding.\r\n\r\nThe result was that we would add the variable node to the path and then\r\nlater detect that the cursor was outside the key and value spans and\r\nthrow away the whole result. In general, we do this because we do not\r\nwant to show information when the cursor is between a key/value\r\n(`inputA=¦\"123\"`). However, when using the shorthand syntax, we run into\r\nthe situation where we can match an `AttributeBinding` as well as the\r\nvaariable in `*ngIf=\"som¦eValue as myLocalVar\"`. This commit updates the\r\nvisitor to retain enough information in the visit path to throw away\r\ninvalid targets but keep valid ones if there were multiple results on a\r\n`t.Element` or `t.Template`.\r\n","Url":"https://github.com/angular/angular/pull/40239","RelatedDescription":"Closed or merged PR \"fix(language-service): shorthand syntax with variables\" (#40239)"},{"Id":"773289528","IsPullRequest":true,"CreatedAt":"2020-12-22T22:25:37","Actor":"kyliau","Number":"40242","RawContent":null,"Title":"fix(language-service): LSParseConfigHost.resolve should collapse abs paths","State":"open","Body":"`ts.server.ServerHost.resolvePath()` is different from Angular's\r\n`FileSystem.resolve()` because the signature of the former is\r\n\r\n```ts\r\nresolvePath(path: string): string;\t// ts.server.ServerHost\r\n```\r\n\r\nwhereas the signature of the latter is\r\n```ts\r\nresolve(...paths: string[]): AbsoluteFsPath; // FileSystem on compiler-cli\r\n```\r\n\r\nThe current implementation calls `path.join()` to concatenate all the input\r\npaths and pass the result to `ts.server.ServerHost.resolvePath()`, but doing\r\nso results in filenames like\r\n```\r\n/foo/bar/baz/foo/bar/baz/tsconfig.json\r\n```\r\nif both input paths are absolute.\r\n\r\n`ts.server.ServerHost` should not be used to implement the\r\n`resolve()` method expected by Angular's `FileSystem`.\r\nWe should use Node's `path.resolve()` instead, which will correctly collapse the absolute paths.\r\n\r\nFix https://github.com/angular/vscode-ng-language-service/issues/1035\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40242","RelatedDescription":"Open PR \"fix(language-service): LSParseConfigHost.resolve should collapse abs paths\" (#40242)"},{"Id":"772238656","IsPullRequest":false,"CreatedAt":"2020-12-22T21:26:19","Actor":"mylifeandcode","Number":"40222","RawContent":null,"Title":"Angular 11: FormGroup Code Which Worked Using Angular 10 Now Fails","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/angular (reactive_errors.ts)\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: Angular 10\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> \r\nThe code for one of my components fails with an error concerning the FormGroup. This code worked as-is under Angular 10, before upgrading to 11. I originally found this problem when running the unit tests for this component, and then replicated the issue live while running the app.\r\n\r\nThe error in question is: **formGroup expects a FormGroup instance. Please pass one in.**\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nI'm unable to share this code, but the component in question takes in an instance of FormBuilder as shown below:\r\n`  \r\nconstructor(private _formBuilder: FormBuilder, private _registrationService: RegistrationService) { }\r\n`\r\n\r\nThen, on ngOnInit(), it makes a call to a function which sets up the FormGroup:\r\n```\r\nasync ngOnInit() {\r\n\r\n    this.displayLoader = false;\r\n\r\n    this.buildForm();\r\n\r\n```\r\nHere's the function which creates the FormGroup:\r\n\r\n```\r\n  private buildForm(): void {\r\n\r\n    this.certEvalFilterForm = this._formBuilder.group({\r\n      id: ['', [Validators.minLength(2) , Validators.pattern(\"^[0-9]*$\") ]],\r\n      firstName: ['', [Validators.minLength(2), this.nameValidator]],\r\n      lastName: ['', [Validators.minLength(2), this.nameValidator]],\r\n      examAdmin: ['', Validators.required],\r\n      examName: '',\r\n      issues: '',\r\n      evalStatus: '',\r\n      regDateFrom:  [ '', [ this.validateTodaysDate ,this.validateToFromDates('regDateFrom', 'regDateTo' ) ] ], \r\n      regDateTo: ['', [ this.validateTodaysDate , this.validateToFromDates('regDateFrom', 'regDateTo' ) ] ],\r\n      attempt: '',\r\n      isFinalEval: false\r\n    });\r\n  }\r\n\r\n```\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nERROR Error: formGroup expects a FormGroup instance. Please pass one in.\r\n\r\n       Example:\r\n\r\n       \r\n    <div [formGroup]=\"myGroup\">\r\n      <input formControlName=\"firstName\">\r\n    </div>\r\n\r\n    In your class:\r\n\r\n    this.myGroup = new FormGroup({\r\n       firstName: new FormControl()\r\n    });\r\n    at Function.missingFormException (reactive_errors.ts:38)\r\n    at FormGroupDirective._checkFormPresent (form_group_directive.ts:300)\r\n    at FormGroupDirective.ngOnChanges (form_group_directive.ts:98)\r\n    at FormGroupDirective.rememberChangeHistoryAndInvokeOnChangesHook (core.js:1471)\r\n    at callHook (core.js:2490)\r\n    at callHooks (core.js:2456)\r\n    at executeInitAndCheckHooks (core.js:2408)\r\n    at selectIndexInternal (core.js:8181)\r\n    at Module.ɵɵadvance (core.js:8164)\r\n    at CertEvalFilterComponent_Template (cert-eval-filter.component.html:12)\r\ndefaultErrorLogger @ core.js:5967\r\ncore.js:5967 ERROR TypeError: Cannot read property 'get' of undefined\r\n    at FormGroupDirective.addControl (form_group_directive.ts:140)\r\n    at FormControlName._setUpControl (form_control_name.ts:207)\r\n    at FormControlName.ngOnChanges (form_control_name.ts:146)\r\n    at FormControlName.rememberChangeHistoryAndInvokeOnChangesHook (core.js:1471)\r\n    at callHook (core.js:2490)\r\n    at callHooks (core.js:2456)\r\n    at executeInitAndCheckHooks (core.js:2408)\r\n    at selectIndexInternal (core.js:8181)\r\n    at Module.ɵɵadvance (core.js:8164)\r\n    at CertEvalFilterComponent_Template (cert-eval-filter.component.html:12)\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 11.0.5\r\nNode: 12.14.1\r\nOS: win32 x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@angular/cdk                    8.2.3\r\n@angular/http                   7.2.16\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nng-packagr                      11.0.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/40222","RelatedDescription":"Closed issue \"Angular 11: FormGroup Code Which Worked Using Angular 10 Now Fails\" (#40222)"},{"Id":"773217635","IsPullRequest":true,"CreatedAt":"2020-12-22T20:12:32","Actor":"atscott","Number":"40241","RawContent":null,"Title":"Routerscroller","State":"open","Body":"Refactors and fixes the `BrowserViewportScroller`'s scrolling behavior.\r\n\r\nCommit 1:\r\nThe `BrowserViewportScroller` injects but does not use the `ErrorHandler`.\r\nThis commit removes the `ErrorHandler` from the constructor.\r\n\r\nCommit 2:\r\nThe current tests in the router scroller are\r\n[change-detector tests](https://testing.googleblog.com/2015/01/testing-on-toilet-change-detector-tests.html)\r\nand do not ensure the correct behavior of the scroller.\r\nThis commit updates the tests to assert actual scrolling behavior of the\r\nbrowser.\r\n\r\nCommit 3:\r\nRather than computing a scroll location, this commit updates the\r\n`BrowserViewportScroller` to use the `Element#scrollIntoView` method,\r\nwhich is supported in all browsers that Angular supports. The scroll\r\nbehavior options follow the guidelines in the\r\n[spec](https://html.spec.whatwg.org/#scroll-to-fragid). Note that IE 11\r\ndoes not support the `scrollIntoViewOptions` but does still support\r\n`scrollIntoView` when called with the options.\r\n\r\nCommit 4:\r\nAccording to the [spec](https://html.spec.whatwg.org/#scroll-to-fragid),\r\nwe should attempt to set the browser focus after scrolling to a\r\nfragment. Note that this change does not exactly follow the robust steps\r\noutlined in the spec by finding a fallback target if the original is not\r\nfocusable. Instead, we simply attempt to focus the element by calling\r\n`focus` on it, which will do nothing if the element is not focusable.\r\n\r\nfixes #30067","Url":"https://github.com/angular/angular/pull/40241","RelatedDescription":"Open PR \"Routerscroller\" (#40241)"},{"Id":"773164246","IsPullRequest":true,"CreatedAt":"2020-12-22T18:42:12","Actor":"kyliau","Number":"40240","RawContent":null,"Title":"docs: use kebab-case for CLI commands","State":"open","Body":"Kebab-case is preferred over camelCase in Angular CLI.\r\ncamelCase support is deprecated and will be removed eventually.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40240","RelatedDescription":"Open PR \"docs: use kebab-case for CLI commands\" (#40240)"},{"Id":"773091713","IsPullRequest":false,"CreatedAt":"2020-12-22T17:06:49","Actor":"shiftybloke","Number":"40238","RawContent":null,"Title":"Adding Navigation Id generator issue","State":"closed","Body":"\r\n# 📚 Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nThis part of the tutorial asks a user to create a For loop to dynamically create an Id value for each item in products.ts\r\nhowever, the Id value is not created by following the steps in the tutorial and so the app fails to load information about each product when you click through to their individual pages.\r\n\r\nManually adding an Id variable to each of the products in products.ts resolves the issue, but does not allow a user to dynamically set the value with a For loop.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/start/start-routing\r\n\r\n## 🔥 Exception or Error\r\n\r\nProperty 'id' does not exist on type '{ name: string; price: number; description: string; }'.\r\n\r\nFound in file: product-details.component.ts when inspecting this line: return product.id === Number(productIdFromRoute);\r\n![image](https://user-images.githubusercontent.com/60511512/102912418-45edb200-4475-11eb-9d2b-1e15eb1d3add.png)\r\n","Url":"https://github.com/angular/angular/issues/40238","RelatedDescription":"Closed issue \"Adding Navigation Id generator issue\" (#40238)"},{"Id":"773081024","IsPullRequest":true,"CreatedAt":"2020-12-22T16:33:05","Actor":"petebacondarwin","Number":"40237","RawContent":null,"Title":"Linker external source map preemptive","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/40237","RelatedDescription":"Open PR \"Linker external source map preemptive\" (#40237)"},{"Id":"773056403","IsPullRequest":true,"CreatedAt":"2020-12-22T16:02:17","Actor":"H--o-l","Number":"40236","RawContent":null,"Title":"feat(service-worker): Add to ErrorHandler that the error is from SW","State":"open","Body":"With Angular v11.0.4 and commit [_fix(service-worker): handle error with\r\nErrorHandler_](https://github.com/angular/angular/pull/39990/commits/552419d)\r\nAngular start to send all service worker registration errors to the Angular\r\nstandard `ErrorHandler.handleError()` interface, instead of logging them in the\r\nconsole.\r\n\r\nBut service worker registration errors are a lot different than other code\r\nerrors:\r\n- They are frequent, for example, they happen a lot with Chrome v84,\r\n  Chrome v85, Firefox 84, and Samsung Internet v13.\r\n- Most applications can run even without a registered service worker.\r\n\r\nUse case example:\r\n- All errors send to `ErrorHandler.handleError()` show a `window.confirm`\r\n  pop-up, so developers see the error right away during development, and users\r\n  of the application have a huge error message before trying to use a broken\r\n  application.\r\n- All errors from service worker registration are ignored, so users are not\r\n  annoyed in that case.\r\n\r\nWith the actual code, inside `ErrorHandler.handleError()`, we can't\r\ndifferentiate a service worker registration error from any other error, and\r\nservice worker registration errors are already not clear at all, so we are\r\nlosing a valuable piece of information.\r\nI propose to add a \"source\" of the error, like that service worker registration\r\nerrors are cachable inside `ErrorHandler.handleError()`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features) => too specific, no doc\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nWhen implementing `ErrorHandler.handleError()` interface, we don't know if the error is from service worker registration or something else.\r\n\r\n## What is the new behavior?\r\n\r\nInstead of `error`, we get `{source: 'Service worker registration', error: error}`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/40236","RelatedDescription":"Open PR \"feat(service-worker): Add to ErrorHandler that the error is from SW\" (#40236)"},{"Id":"773031975","IsPullRequest":false,"CreatedAt":"2020-12-22T15:29:07","Actor":"fetis","Number":"40235","RawContent":null,"Title":"i18n-extract generates incompatible XLIFF","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n@angular/localize\r\n\r\n### Is this a regression?\r\nYes, it worked fine in v10\r\n\r\n### Description\r\nAfter upgrade to v11, XLIF export is not accepted by our translation tool anymore. We use the Lokalise platform for translation and it reports missed placeholders in files from v11, the same codebase from v10 produces zero errors.\r\n\r\nHere's an example of an error message\r\n\r\n![Screen Shot 2020-12-22 at 16 08 13](https://user-images.githubusercontent.com/577042/102903522-be9e3f80-4470-11eb-9964-5a7fc42c56b8.png)\r\n\r\nWhy do I think it's an Angular problem? I see that the generated output has changed from version 10 to 11, so this might be the reason for issue. I'm not sure is it a valid output from the XLIFF perspective and I would like to clarify it from both sides (Angular and Lokalise)\r\n\r\n## 🔬 Minimal Reproduction\r\nhere's the source code for translation\r\n```\r\n    <p i18n>Please note,<br>\r\n            that a phone call is required to fix your created case as soon as possible.<br>\r\n            Please call our repair service at <a href=\"tel:{{repairNumber.international}}\">{{repairNumber.humanReadable}}</a>,<br>\r\n            and provide your case number {{caseId}}.</p>\r\n```\r\n\r\nhere's the XLIFF output from Angular 10\r\n\r\n```\r\n<trans-unit id=\"cffc0f93e757e51e8c783232713584e9c65d35f6\" datatype=\"html\">\r\n  <source>Please note,<x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br/&gt;\"/>\r\n      that a phone call is required to fix your created case as soon as possible.<x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br/&gt;\"/>\r\n      Please call our repair service at <x id=\"START_LINK\" ctype=\"x-a\" equiv-text=\"&lt;a&gt;\"/><x id=\"INTERPOLATION\" equiv-text=\"{{repairNumber.humanReadable}}\"/><x id=\"CLOSE_LINK\" ctype=\"x-a\" equiv-text=\"&lt;/a&gt;\"/>,<x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br/&gt;\"/>\r\n      and provide your case number <x id=\"INTERPOLATION_1\" equiv-text=\"{{caseId}}\"/>.</source>\r\n  <context-group purpose=\"location\">\r\n...\r\n  </context-group>\r\n</trans-unit>\r\n```\r\n\r\nand here's the same output from Angular 11\r\n```\r\n<trans-unit id=\"cffc0f93e757e51e8c783232713584e9c65d35f6\" datatype=\"html\">\r\n  <source>Please note,<x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br&gt;\"/> that a phone call is required to fix your created case as soon as possible.<x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br&gt;\"/> Please call our repair service at <x id=\"START_LINK\" ctype=\"x-a\" equiv-text=\"&lt;a href=&quot;tel:{{repairNumber.international}}&quot;&gt;\"/>\r\n  <x id=\"INTERPOLATION\" equiv-text=\"{{repairNumber.humanReadable}}\"/><x id=\"CLOSE_LINK\" ctype=\"x-a\" equiv-text=\"&lt;/a&gt;\"/>,\r\n  <x id=\"LINE_BREAK\" ctype=\"lb\" equiv-text=\"&lt;br&gt;\"/> and provide your case number <x id=\"INTERPOLATION_1\" equiv-text=\"{{caseId}}\"/>.\r\n</source>\r\n  <context-group purpose=\"location\">\r\n...\r\n  </context-group>\r\n</trans-unit>\r\n```\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 11.0.5\r\nNode: 12.18.3\r\nOS: darwin x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@angular/cdk                    11.0.3\r\n@angular/material               11.0.3\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\n</code></pre>\r\n\r\n\r\n","Url":"https://github.com/angular/angular/issues/40235","RelatedDescription":"Open issue \"i18n-extract generates incompatible XLIFF\" (#40235)"},{"Id":"773028293","IsPullRequest":true,"CreatedAt":"2020-12-22T15:24:00","Actor":"gkalpak","Number":"40234","RawContent":null,"Title":"fix(service-worker): allow checking for updates when constantly polling the server","State":"open","Body":"Previously, the SW would wait to become idle before executing scheduled tasks (including checks for newer app versions). It was considered idle when it hadn't received any request for at least 5 seconds. As a result, if the app performed polling (i.e. sent requests to the server) in a shorter than 5 seconds interval, the SW would never detect and update to a newer app version.  \r\nRelated issue: #40207\r\n\r\nThis PR fixes this by adding a max delay to `IdleScheduler` to ensure that no scheduled task will remain pending for longer than the specified max delay.\r\n\r\n##\r\nThis PR also includes some minor refactorings/improvements. See the individual commits for more details.","Url":"https://github.com/angular/angular/pull/40234","RelatedDescription":"Open PR \"fix(service-worker): allow checking for updates when constantly polling the server\" (#40234)"},{"Id":"772862286","IsPullRequest":false,"CreatedAt":"2020-12-22T11:20:26","Actor":"DavideViolante","Number":"40232","RawContent":null,"Title":"Karma tests exit with \"Cannot read property 'range' of undefined\" with node >=v14.15.2","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/core/testing I think\r\n\r\n### Description\r\n\r\n<!-- ✍️--> Running `ng test` using node >=v14.15.2 returns:\r\n```\r\n⠙ Generating browser application bundles (phase: building)...22 12 2020 12:04:26.906:WARN [karma]: No captured browser, open http://localhost:9876/\r\n22 12 2020 12:04:26.910:INFO [karma-server]: Karma v5.1.1 server started at http://localhost:9876/\r\n22 12 2020 12:04:26.911:INFO [launcher]: Launching browsers Chrome with concurrency unlimited\r\n22 12 2020 12:04:26.917:INFO [launcher]: Starting browser Chrome\r\n✔ Browser application bundle generation complete.\r\n22 12 2020 12:04:38.116:WARN [karma]: No captured browser, open http://localhost:9876/\r\n22 12 2020 12:04:38.338:INFO [Chrome 87.0.4280.88 (Linux x86_64)]: Connected on socket q9H-XQKOR1UxhC76AAAA with id 44160212\r\nChrome 87.0.4280.88 (Linux x86_64): Executed 1 of 54 SUCCESS (0 secs / 0.075 secs)\r\n22 12 2020 12:04:41.304:ERROR [karma-server]: UnhandledRejection: Cannot read property 'range' of undefined\r\n22 12 2020 12:04:41.380:ERROR [karma-server]: TypeError: Cannot read property 'range' of undefined\r\n    at handleRangeHeaders (/home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/util.js:131:21)\r\n    at processRequest (/home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/middleware.js:98:19)\r\n    at ready (/home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/util.js:53:12)\r\n    at handleRequest (/home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/util.js:182:5)\r\n    at /home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/middleware.js:64:7\r\n    at new Promise (<anonymous>)\r\n    at middleware (/home/dave/projects/myproject/node_modules/webpack-dev-middleware/lib/middleware.js:63:12)\r\n    at /home/dave/projects/myproject/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma.js:288:13\r\n    at call (/home/dave/projects/myproject/node_modules/connect/index.js:239:7)\r\n    at next (/home/dave/projects/myproject/node_modules/connect/index.js:183:5)\r\n    at /home/dave/projects/myproject/node_modules/karma/lib/web-server.js:24:9\r\n    at call (/home/dave/projects/myproject/node_modules/connect/index.js:239:7)\r\n    at next (/home/dave/projects/myproject/node_modules/connect/index.js:183:5)\r\n    at nullProxy (/home/dave/projects/myproject/node_modules/karma/lib/middleware/proxy.js:86:52)\r\n    at call (/home/dave/projects/myproject/node_modules/connect/index.js:239:7)\r\n    at next (/home/dave/projects/myproject/node_modules/connect/index.js:183:5)\r\n```\r\nGoing back to the past commits is the same results, so I assume it's not my code problem.\r\n\r\nAnother similar or same problem: https://stackoverflow.com/questions/64752689/karma-server-typeerror-cannot-read-property-range-of-undefined-angular-u\r\nNote the comment `having the same issue with v14.15.2. Switching to v14.15.1 works. – user985409 Dec 17 at 7:28`\r\n\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 11.0.1\r\nNode: 14.15.2\r\nOS: linux x64\r\n\r\nAngular: 11.0.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.1\r\n@angular-devkit/build-angular   0.1100.1\r\n@angular-devkit/core            11.0.1\r\n@angular-devkit/schematics      11.0.1\r\n@angular/cli                    11.0.1\r\n@schematics/angular             11.0.1\r\n@schematics/update              0.1100.1\r\nrxjs                            6.6.3\r\ntypescript                      4.0.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/40232","RelatedDescription":"Closed issue \"Karma tests exit with \"Cannot read property 'range' of undefined\" with node >=v14.15.2\" (#40232)"},{"Id":"772863887","IsPullRequest":true,"CreatedAt":"2020-12-22T11:15:01","Actor":"crisbeto","Number":"40233","RawContent":null,"Title":"fix(compiler): incorrectly interpreting some HostBinding names","State":"open","Body":"Currently when analyzing the metadata of a directive, we bundle together the bindings from `host` and the `HostBinding` and `HostListener` together. This can become a problem later on in the compilation pipeline, because we try to evaluate the value of the binding, causing something like `@HostBinding('class.foo') public true = 1;` to be treated the same as `host: {'[class.foo]': 'true'}`.\r\n\r\nWhile looking into the issue, I noticed another one that is closely related: we weren't treating quoted property names correctly. E.g. `@HostBinding('class.foo') public \"foo-bar\" = 1;` was being interpreted as `classProp('foo', ctx.foo - ctx.bar)` due to the same issue where property names were being evaluated.\r\n\r\nThese changes resolve both of the issues by treating all `HostBinding` instances as if they're reading the property from `this`. E.g. the `@HostBinding('class.foo') public true = 1;` from above is now being treated as `host: {'[class.foo]': 'this.true'}` which further down the pipeline becomes `classProp('foo', ctx.true)`. This doesn't have any payload size implications for existing code, because we've always been prefixing implicit property reads with `ctx.`. If the property doesn't have an identifier that can be read using dotted access, we convert it to a quoted one (e.g. `classProp('foo', ctx['is-foo']))`.\r\n\r\nFixes #40220.\r\nFixes #40230.","Url":"https://github.com/angular/angular/pull/40233","RelatedDescription":"Open PR \"fix(compiler): incorrectly interpreting some HostBinding names\" (#40233)"},{"Id":"772791364","IsPullRequest":false,"CreatedAt":"2020-12-22T10:45:53","Actor":"iamsjy17","Number":"40231","RawContent":null,"Title":"Is there a way to support Android (6.0) or (5.0, 5.1) or (4.4) on Angular 9.0 or higher?","State":"closed","Body":"# 🚀 feature request\r\n\r\n### Description\r\n\r\nWe are developing and serving web services using angular 8.\r\n\r\nI've been using Angular for a long time and I've been constantly updating the version, but in Angular 9 I can't update the version due to the range of browser support.\r\n\r\nI am worried that this problem will not be resolved over and over again.\r\n\r\n\r\nIs there a way to support Android 4.4 to 6.0 on Angular 9+ including Polyfill?\r\n\r\nor can we solve it by providing a different build option?\r\nor is there any other way? \r\n\r\nI would like to solve this problem while keeping one source as possible.\r\n","Url":"https://github.com/angular/angular/issues/40231","RelatedDescription":"Closed issue \"Is there a way to support Android (6.0) or (5.0, 5.1) or (4.4) on Angular 9.0 or higher?\" (#40231)"},{"Id":"772603779","IsPullRequest":false,"CreatedAt":"2020-12-22T10:38:47","Actor":"aohan237","Number":"40228","RawContent":null,"Title":"how to render rawhtml with mathml in angular?","State":"closed","Body":"for example.\r\n\r\nusing mathjax to render mathml in chrome.\r\n\r\na content modified by ckeditor5 with mathml.\r\n\r\nwhat should i do if i want to render this rawhtml with mathml.\r\n\r\nevent if i use sanitizer.bypassSecurityTrustHtml, the rawhtml still cant render mathml.\r\n","Url":"https://github.com/angular/angular/issues/40228","RelatedDescription":"Closed issue \"how to render rawhtml with mathml in angular?\" (#40228)"},{"Id":"772781133","IsPullRequest":false,"CreatedAt":"2020-12-22T09:13:28","Actor":"crisbeto","Number":"40230","RawContent":null,"Title":"Host bindings generate invalid code for quoted property names with dashes","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/....\r\n`@angular/compiler-cli`\r\n\r\n### Is this a regression?\r\nIt's not a regression, it seems to have been there since the early days of the framework.\r\n\r\n### Description\r\nWhen the compiler [is analyzing the class members](https://github.com/angular/angular/blob/master/packages/compiler-cli/src/ngtsc/annotations/src/directive.ts#L741) decorated with `@HostBinding`, it takes the property name as is and adds it to the analysis result. Further down the compilation pipeline, we try to evaluate the value to determine whether it is a primitive or a reference to something on the component class. For `HostBinding` specifically it is always a reference, but it can get mixed up, because we use the same logic for the `HostBinding` decorator and the `host` object. The root cause is identical to what is happening in #40220.\r\n\r\nHere's an example of the TS source code and the transpiled expression:\r\n```\r\n// Source\r\n@HostBinding('class.some-class') \"foo-bar\": boolean;\r\n\r\n// Result\r\nɵɵclassProp(\"some-class\", ctx.foo - ctx.bar);\r\n```\r\nNote how the property name is actually treated as subtraction.\r\n","Url":"https://github.com/angular/angular/issues/40230","RelatedDescription":"Open issue \"Host bindings generate invalid code for quoted property names with dashes\" (#40230)"},{"Id":"772572406","IsPullRequest":false,"CreatedAt":"2020-12-22T01:35:25","Actor":"xpusostomos","Number":"40227","RawContent":null,"Title":"Awful Angular template documentation.","State":"open","Body":"\r\n### Description\r\n\r\nThe documentation here is really bad:\r\n\r\nfor example:\r\n\r\n```\r\n<label for=\"name\">Name</label>\r\n<input type=\"text\" class=\"form-control\" id=\"name\"\r\n       required\r\n       [(ngModel)]=\"model.name\" name=\"name\"\r\n       #name=\"ngModel\">\r\n<div [hidden]=\"name.valid || name.pristine\"\r\n     class=\"alert alert-danger\">\r\n  Name is required\r\n</div>\r\n```\r\n\r\nNever use a code example where the field or variable in question is something generic like \"name\". How does the beginner know here whether we're talking about the html name attribute, or the generic concept of the name of a field, or the specific \"name\" field of the Hero class? for example we've got name=\"name\", which I guess is the html name attribute referring to the Hero class name. What a mess. I always like to use a name like \"myEmail\" or some such, the \"my\" hinting to the user that this is a name you made up, but either way, something far more specific like email, or even better favouriteColor or some such would make things a lot clearer.\r\n\r\n### What's the affected URL?**\r\n\r\nhttps://angular.io/guide/forms\r\n\r\n","Url":"https://github.com/angular/angular/issues/40227","RelatedDescription":"Open issue \"Awful Angular template documentation.\" (#40227)"},{"Id":"772549674","IsPullRequest":true,"CreatedAt":"2020-12-22T00:24:22","Actor":"josephperrott","Number":"40226","RawContent":null,"Title":"ci: move \"test\" job to use 2xlarge resource class","State":"open","Body":"Move to use the 2xlarge resource class for the test job. For unknown reasons the 2xlarge+ resource\r\nclass does not work for our configuration currently, a ticket has been opened with CircleCI to resolve\r\nthe configuration issue.\r\n","Url":"https://github.com/angular/angular/pull/40226","RelatedDescription":"Open PR \"ci: move \"test\" job to use 2xlarge resource class\" (#40226)"},{"Id":"771833025","IsPullRequest":false,"CreatedAt":"2020-12-21T20:41:29","Actor":"b-anani","Number":"40216","RawContent":null,"Title":"Support for .invalid operator in html to validate html min/max value","State":"closed","Body":"# 🚀 feature request\r\n\r\n### Description\r\n.invalid at the moment supports `required` flag, and regex `pattern` flags among others but does not validate for `min` and `max` \r\n### Describe the solution you'd like\r\nWould be nice to have support for this, if html has `min=\"1\"` and in the field one were to put `0` then it would be nice if I did something like `<div *ngIf=\"field.invalid>...</div>` for that div to appear because the input is in fact invalid.  \r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> At the moment I have been using complicated regex patterns in order to work around this issue but support of this would make life significantly easier.\r\n","Url":"https://github.com/angular/angular/issues/40216","RelatedDescription":"Closed issue \"Support for .invalid operator in html to validate html min/max value\" (#40216)"},{"Id":"772364759","IsPullRequest":true,"CreatedAt":"2020-12-21T18:07:41","Actor":"jessicajaniuk","Number":"40225","RawContent":null,"Title":"ci: add group for core docs to pullapprove","State":"open","Body":"This adds a second pullapprove group to just include the aio content for core.\r\nIt ensures that the comp: docs label gets applied properly\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [x] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nAny docs content in the angular.io code will not have `core: docs` applied to it properly.\r\nPullApprove auto removes the `core: docs` if it's manually added, since paths don't line up\r\nto any docs config.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nCore will have its own docs config, and the docs label will be automatically added by PullApprove\r\ngoing forward for any aio content added matching core paths.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/40225","RelatedDescription":"Open PR \"ci: add group for core docs to pullapprove\" (#40225)"},{"Id":"772321531","IsPullRequest":true,"CreatedAt":"2020-12-21T17:01:12","Actor":"alan-agius4","Number":"40224","RawContent":null,"Title":"docs: update boolean and enumerated CLI section","State":"open","Body":"With this change we change the `Boolean and enumerated options` to use kebab-case flags\r\n as the camelCase variant are deprecated. We also remove the `enumerated option description`\r\n as this is no longer correct and needed following the CLI MAN page update in #40038\r\n","Url":"https://github.com/angular/angular/pull/40224","RelatedDescription":"Open PR \"docs: update boolean and enumerated CLI section\" (#40224)"},{"Id":"772187136","IsPullRequest":false,"CreatedAt":"2020-12-21T15:18:59","Actor":"BrunoBeraudPW","Number":"40221","RawContent":null,"Title":"Angular/core 11.0.3 E2E tests error","State":"closed","Body":"# 🐞 bug report\r\n\r\nHello !\r\n\r\nSince 11.0.3 angular/core version, E2E tests are not working on a project with the default configuration.\r\n\r\n### Affected Package\r\nangular/core\r\n\r\n\r\n### Is this a regression?\r\nYes, error are appearing since angular/core 11.0.3, it was working in previous version\r\n\r\n### Description\r\n\r\nWhen executing \"ng e2e\" cmd.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nhttps://github.com/BrunoBeraudPW/issue-angular-11.0.3\r\n\r\nIt's a default project angular 11.0.3 where I have updated all packages to their latest version\r\n\r\nI have updated \"manually\" all packages because the \"ng new\" cmd was creating an angular 10 app and so I was thinking that maybe the problem came because of the others packages.\r\n\r\nBut even when I have just updated angular packages, the error was still here \r\n\r\n## 🔥 Exception or Error\r\nWhen using fakeAsync :\r\n<pre><code>\r\nFailed: zone-testing.js is needed for the async() test helper but could not be found.\r\n                Please make sure that your environment includes zone.js/dist/zone-testing.js\r\n</code></pre>\r\nSeveral errors in selenium-webdriver libs (promise)\r\n<pre><code>\r\n C:\\dev-phoenix\\1-Photoweb-Forks\\test\\node_modules\\selenium-webdriver\\lib\\promise.js:3067:27\r\n              this.pending_ = {task: task, q: this.subQ_};\r\n              task.promise.queue_ = this;\r\n              result = this.subQ_.execute_(task.execute);\r\n                                  ~\r\n              this.subQ_.start();\r\n            } catch (ex) {\r\n</code></pre>\r\nSeveral errors in internal/modules/cjs/loader.js\r\n<pre><code>\r\ninternal/modules/cjs/loader.js:955:30\r\n        jasmine-spec-reporter: unable to open 'internal/modules/cjs/loader.js'\r\n        Error: ENOENT: no such file or directory, open 'internal/modules/cjs/loader.js'\r\n</code></pre>\r\n\r\nIt seem to not recognize jasmine functions, it underlines in red the name of the main functions describe, it, fit, etc., like if it didn't include test.ts and its import 'zone.js/dist/zone-testing';\r\n![image](https://user-images.githubusercontent.com/62344493/102784185-50884880-439c-11eb-9417-7adccc6b9762.png)\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n@angular-devkit/architect       0.1100.3\r\n@angular-devkit/build-angular   0.1100.3\r\n@angular-devkit/core            11.0.3\r\n@angular-devkit/schematics      11.0.3\r\n@schematics/angular             11.0.3\r\n@schematics/update              0.1100.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\nThank !\r\n","Url":"https://github.com/angular/angular/issues/40221","RelatedDescription":"Closed issue \"Angular/core 11.0.3 E2E tests error\" (#40221)"},{"Id":"772117696","IsPullRequest":false,"CreatedAt":"2020-12-21T12:07:42","Actor":"Airblader","Number":"40220","RawContent":null,"Title":"HostBinding supports an undocumented magic property name(?)","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/core (?)\r\n\r\n### Is this a regression?\r\n\r\nNo.\r\n\r\n### Description\r\n\r\nLet's look at the following component:\r\n\r\n```\r\n@Component({ … })\r\npublic class TestComponent {\r\n  @HostBinding('class.a') true;\r\n  @HostBinding('class.b') false;\r\n  @HostBinding('class.c') other;\r\n}\r\n```\r\n\r\nThis component ends up with the class `a` on its host, but neither one of the other two. The latter part is what I would expect, given that all three lines define a class member implicitly typed `any` initialized as undefined, a falsy value. It appears, however, that the name \"true\" is somehow treated like a magic value.\r\n\r\nThis is surprising, and undocumented as far as I can tell. In fact, in modern projects this would be an error due to noImplicitAny as well as strictPropertyInitialization.\r\n\r\nThis could of course also be some ES quirk that I'm not familiar with, but at least this behaves as expected (in plain JS):\r\n\r\n```\r\nclass Test { true; }\r\nconst test = new Test();\r\nconsole.log(test.true); // undefined\r\n```\r\n\r\nAs far as I can tell there's no test for this behavior in Angular, so I don't know if this works accidentally or whether in a time before noImplicitAny this was considered a feature. The documentation all the way back to v2 also doesn't mention this.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-5dzgsw?file=src/app/hello.component.ts\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n\r\nGiven that there are [StackOverflow posts dating back years](https://stackoverflow.com/questions/35168683/hostbinding-with-a-variable-class-in-angular) I assume this has existed for a long, long time.\r\n\r\n<pre><code>\r\n    \"@angular/common\": \"^10.0.9\",\r\n    \"@angular/compiler\": \"^10.0.9\",\r\n    \"@angular/core\": \"^10.0.9\",\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/40220","RelatedDescription":"Open issue \"HostBinding supports an undocumented magic property name(?)\" (#40220)"},{"Id":"772057289","IsPullRequest":true,"CreatedAt":"2020-12-21T10:37:56","Actor":"crisbeto","Number":"40219","RawContent":null,"Title":"fix(core): memory leak if view container host view is destroyed while view ref is not","State":"open","Body":"When we attach a `ViewRef` to a `ViewContainerRef`, we save a reference to the container onto the `ViewRef` so that we can remove it when the ref is destroyed. The problem is that if the container's `hostView` is destroyed first, the `ViewRef` has no way of knowing that it should stop referencing the container.\r\n\r\nThese changes remove the leak by not saving a reference at all. Instead, when a `ViewRef` is destroyed, we clean it up through the `LContainer` directly. We don't need to worry about the case where the container is destroyed before the view, because containers automatically clean up all of their views upon destruction.\r\n\r\nFixes #38648.","Url":"https://github.com/angular/angular/pull/40219","RelatedDescription":"Open PR \"fix(core): memory leak if view container host view is destroyed while view ref is not\" (#40219)"},{"Id":"772055810","IsPullRequest":true,"CreatedAt":"2020-12-21T10:36:56","Actor":"crisbeto","Number":"40218","RawContent":null,"Title":"fix(core): memory leak if view container host view is destroyed while view ref is not","State":"closed","Body":"When we attach a `ViewRef` to a `ViewContainerRef`, we save a reference to the container onto the `ViewRef` so that we can remove it when the ref is destroyed. The problem is that if the container's `hostView` is destroyed first, the `ViewRef` has no way of knowing that it should stop referencing the container.\r\n\r\nThese changes remove the leak by not saving a reference at all. Instead, when a `ViewRef` is destroyed, we clean it up through the `LContainer` directly. We don't need to worry about the case where the container is destroyed before the view, because containers automatically clean up all of their views upon destruction.\r\n\r\nFixes #38648.","Url":"https://github.com/angular/angular/pull/40218","RelatedDescription":"Closed or merged PR \"fix(core): memory leak if view container host view is destroyed while view ref is not\" (#40218)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"773359089","IsPullRequest":true,"CreatedAt":"2020-12-23T01:49:23","Actor":"clydin","Number":"19669","RawContent":null,"Title":"test(@angular-devkit/build-angular): add browser builder assets option tests","State":"open","Body":"This change adds expanded unit tests for the browser builder's `assets` option using the builder test harness.","Url":"https://github.com/angular/angular-cli/pull/19669","RelatedDescription":"Open PR \"test(@angular-devkit/build-angular): add browser builder assets option tests\" (#19669)"},{"Id":"773155897","IsPullRequest":false,"CreatedAt":"2020-12-22T18:26:10","Actor":"arobinson","Number":"19668","RawContent":null,"Title":"Declaration maps in Angular libraries point to the wrong directory","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNo, `declarationMap`s have never worked for us with Angular\r\n\r\n### Description\r\n\r\nThe `sourceRoot` in the produced `*.d.ts.map` files is an invalid path.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n1. Clone: https://github.com/arobinson/angularCLI_bug_19668\r\n2. In the root `test-lib` directory just run `ng b`\r\n3. Run `cat dist/testlib/public-api.d.ts.map` to see the contents after the build\r\n4. Verify an incorrect path of `../../../projects/testlib/src/` (it should be `../../projects/testlib/src/`)\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 11.0.5\r\nNode: 12.14.1\r\nOS: darwin x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nng-packagr                      11.0.3\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19668","RelatedDescription":"Open issue \"Declaration maps in Angular libraries point to the wrong directory\" (#19668)"},{"Id":"773122190","IsPullRequest":false,"CreatedAt":"2020-12-22T18:00:07","Actor":"chrissyast","Number":"19667","RawContent":null,"Title":"CSS Module imports stopped working from v10 to v11.","State":"closed","Body":"### Is this a regression?\r\n\r\nYes. V10 worked.\r\n\r\n\r\n### Description\r\n\r\nUp to and including Angular 10, it was possible to use [CSS Modules](https://github.com/css-modules/css-modules) to import CSS into the script of the component (via the `:export` function on the .scss file and `import styles from \"../foo.scss\";` within the script of the component). You can see a live example [here](https://scss-import-angular-v10.herokuapp.com/), a minimal reproduction of which is linked below. The variable was imported from the .scss into the .ts and then consequently available within the html too.\r\n\r\nThis has stopped working in v11 with more details below.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nWorking example https://github.com/chrissyast/scss-import-ng-ten\r\nNot working example https://github.com/chrissyast/scss-import-ng-eleven\r\n\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n`import styles from \"../styles.scss\"` gives an error   ` \"export 'default' (imported as 'styles') was not found in '../styles.scss'`\r\n\r\n`const styles = require(\"../styles.scss\")` works but it is not possible to extract the variable from the created map\r\n\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nWorking\r\n======\r\nAngular CLI: 10.0.8\r\nNode: 10.15.3\r\nOS: win32 x64\r\n\r\nAngular: 10.0.14\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1000.8\r\n@angular-devkit/build-angular     0.1000.8\r\n@angular-devkit/build-optimizer   0.1000.8\r\n@angular-devkit/build-webpack     0.1000.8\r\n@angular-devkit/core              10.0.8\r\n@angular-devkit/schematics        10.0.8\r\n@angular/cli                      10.0.8\r\n@ngtools/webpack                  10.0.8\r\n@schematics/angular               10.0.8\r\n@schematics/update                0.1000.8\r\nrxjs                              6.5.5\r\ntypescript                        3.9.7\r\nwebpack                           4.43.0\r\n\r\nNot working\r\n========\r\nAngular CLI: 11.0.5\r\nNode: 10.15.3\r\nOS: win32 x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\n\r\n</code></pre>\r\n\r\n\r\n## Additional info\r\nIn a discussion on https://stackoverflow.com/a/63429103/8940624, a fellow user stated:\r\n\r\n> Css modules configuration changed considerably from ng 10 to ng 11. Now, its not the default. You have to set modules : true on the webpack configuration, which is not enabled on ng 11. I think its the case to create an issue on the @angular/cli repo to ask for expose the configuration of it.\r\n\r\nMy knowledge is not sufficient to be able to verify or refute whether this is the underlying issue but adding for extra info.","Url":"https://github.com/angular/angular-cli/issues/19667","RelatedDescription":"Closed issue \"CSS Module imports stopped working from v10 to v11.\" (#19667)"},{"Id":"772840235","IsPullRequest":false,"CreatedAt":"2020-12-22T12:38:32","Actor":"popec","Number":"19665","RawContent":null,"Title":"Angular --prod build as development when optimization: false and custom webpack config","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package angular-builders/custom-webpack: 10.0.1 \r\nWhen using custom webpack config (customWebpackConfig in angular.json architect->build->options) and setting optimization: false (in angular.json architect->build->configurations->production), config.mode available in customWebpack JS file during ng build --prod is being set to development instead of production.\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> \r\nIt was the same with version 9.x\r\n","Url":"https://github.com/angular/angular-cli/issues/19665","RelatedDescription":"Closed issue \"Angular --prod build as development when optimization: false and custom webpack config\" (#19665)"},{"Id":"772883008","IsPullRequest":false,"CreatedAt":"2020-12-22T11:50:53","Actor":"cyrilletuzi","Number":"19666","RawContent":null,"Title":"Allow `+` in lazy-loaded module schematic","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Command\r\n- [x] generate\r\n\r\n### Description\r\n\r\nSome Angular good practices for architecture use a `+` in lazy-loaded modules paths, so it's clearly visible it's lazy-loaded. The official documentation was recommending this practice in previous versions (but maybe not anymore).\r\n\r\nUnfortunately, `ng g module features/+hello --route hello --module app` is currently failing, as it also generates a root component, and its selector is guessed from the path. And `+` is not allowed in component selectors.\r\n\r\n### Describe the solution you'd like\r\n\r\nIt would be easy in the schematic to remove the `+` from the selector when generating the root component. **I can take care of the PR.**\r\n\r\n### Describe alternatives you've considered\r\n\r\nIt's not just about a naming convention. One thing very important with lazy-loaded modules is that you must not import things from another module (otherwise lazy-loading is broken).\r\n\r\nWith a special character like `+` in the path, it's easy to add just one lint rule to check there is no cross-imports.\r\n\r\nOtherwise, you have to prohibit each lazy-loaded module path, and add a rule each time you add a new lazy-loaded module.\r\n","Url":"https://github.com/angular/angular-cli/issues/19666","RelatedDescription":"Closed issue \"Allow `+` in lazy-loaded module schematic\" (#19666)"},{"Id":"772673210","IsPullRequest":true,"CreatedAt":"2020-12-22T11:30:56","Actor":"renovate[bot]","Number":"19663","RawContent":null,"Title":"build: update enhanced-resolve to version 5.4.1","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [enhanced-resolve](https://togithub.com/webpack/enhanced-resolve) | [`5.4.0` -> `5.4.1`](https://renovatebot.com/diffs/npm/enhanced-resolve/5.4.0/5.4.1) | [![age](https://badges.renovateapi.com/packages/npm/enhanced-resolve/5.4.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/enhanced-resolve/5.4.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/enhanced-resolve/5.4.1/compatibility-slim/5.4.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/enhanced-resolve/5.4.1/confidence-slim/5.4.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/enhanced-resolve</summary>\n\n### [`v5.4.1`](https://togithub.com/webpack/enhanced-resolve/releases/v5.4.1)\n\n[Compare Source](https://togithub.com/webpack/enhanced-resolve/compare/v5.4.0...v5.4.1)\n\n##### Bugfixes\n\n-   add browser fallbacks when using this library in browsers\n-   even when using Yarn Pnp, handle the `exports` field in packages\n-   fix typings\n\n##### Contribution\n\n-   Replace Travis CI with Github Actions\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19663","RelatedDescription":"Closed or merged PR \"build: update enhanced-resolve to version 5.4.1\" (#19663)"},{"Id":"772804609","IsPullRequest":false,"CreatedAt":"2020-12-22T09:47:47","Actor":"Seikilos","Number":"19664","RawContent":null,"Title":"Referencing images is still either broken or very inconsistent (css + html)","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [x] build\r\n- [x] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nUnknown\r\n\r\n### Description\r\n\r\nWhen referencing images, there is wild mix of broken or inconsistent behaviour through `ng serve`, `ng test` and `ng build`. Especially when images are referenced from css files and when the intention is running the deployed app from a subdirectory.\r\nIt is also trivially to reproduce.\r\n\r\nI tried to follow up on all of those changes with how [urls are treated](https://github.com/angular/angular-cli/issues/4778#issuecomment-280798718) but the varying mix up of broken behaviour is noteworthy.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n* Init project with `ng new image-test --style css --strict`\r\n* Select No for routing\r\n* Save the following image into the `src/assets` folder: https://angular.io/assets/images/logos/angular/angular.png\r\n* Replace `app.component.html` with this:\r\n```html\r\n<h1>Sample. TWO images should be displayed</h1>\r\n<div style='background: url(\"assets/angular.png\") no-repeat; width: 200px; height:200px'></div>\r\n<div class=\"the-image\"></div>\r\n```\r\n* Insert into `app.component.css` the following style:\r\n```css\r\n.the-image\r\n{\r\n    width: 200px;\r\n    height: 200px;\r\n    background: url('../assets/angular.png') no-repeat;\r\n}\r\n```\r\nDepending of the type of path in the css file you get very different results. The scenario above:\r\n\r\n* `ng serve` -> works\r\n* `ng build --base-href '/image-test/'` -> angular.png is now placed in two locations at `dist/image-test` and in `dist/image-test/assets`\r\n* `ng test` -> karma dies hard. Starts chrome, chokes and dies. See error section.\r\n\r\nIf one start to mix up paths you get into different hells. I tried absolute paths in css, e.g. `/assets/angular.png`, but beside a configuration that I have to do so that karma does not choke on this, I was unable to figure out, how to run such an app from a subfolder, because during `ng build` all absolute css paths are untouched and 404 on a webserver when serving from `/image-test/` because the paths point to `/assets/angular.png` which is 404, the file is rather located at `/image-test/assets/angular.png`\r\n\r\n## 🔥 Exception or Error\r\n\r\n*  `ng build --base-href '/image-test/'` -> angular.png is now placed in **two** locations at the `top level` and in `assets`. Why do I need doubling the resources?\r\n\r\n* `ng test` -> karma chokes and dies with this exception:\r\n```\r\n22 12 2020 10:24:24.449:ERROR [karma-server]: UnhandledRejection: Cannot read property 'range' of undefined\r\n22 12 2020 10:24:24.449:ERROR [karma-server]: TypeError: Cannot read property 'range' of undefined\r\n    at handleRangeHeaders (d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\util.js:131:21)\r\n    at processRequest (d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\middleware.js:98:19)\r\n    at ready (d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\util.js:53:12)\r\n    at handleRequest (d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\util.js:182:5)\r\n    at d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\middleware.js:64:7\r\n    at new Promise (<anonymous>)\r\n    at middleware (d:\\image-test\\node_modules\\webpack-dev-middleware\\lib\\middleware.js:63:12)\r\n    at d:\\image-test\\node_modules\\@angular-devkit\\build-angular\\src\\webpack\\plugins\\karma.js:288:13\r\n    at call (d:\\image-test\\node_modules\\connect\\index.js:239:7)\r\n    at next (d:\\image-test\\node_modules\\connect\\index.js:183:5)\r\n    at d:\\image-test\\node_modules\\karma\\lib\\web-server.js:24:9\r\n    at call (d:\\image-test\\node_modules\\connect\\index.js:239:7)\r\n    at next (d:\\image-test\\node_modules\\connect\\index.js:183:5)\r\n    at nullProxy (d:\\image-test\\node_modules\\karma\\lib\\middleware\\proxy.js:86:52)\r\n    at call (d:\\image-test\\node_modules\\connect\\index.js:239:7)\r\n    at next (d:\\image-test\\node_modules\\connect\\index.js:183:5)```\r\n```\r\n\r\nWhen I comment out only the css part and add this snippet to `karma.conf.js`\r\n```js\r\n proxies: {\r\n      '/assets/': '/base/src/assets/',\r\n    },\r\n    files: [\r\n      { pattern: './src/assets/**', watched: false, included: false, nocache: false, served: true }\r\n    ],\r\n```\r\nI could run ng test, with broken styles but at least with some images (the image referenced from html will work).\r\nUsing relative paths I was unable to make `ng test` run, but maybe I am just lacking some more configuration\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 11.0.5\r\nNode: 14.15.2\r\nOS: win32 x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nDeveloping on windows 10 x64 (1903)\r\n\r\nMaybe relevant: The css url `background: url('../assets/angular.png')` is compacted to `angular.png` during `ng serve`. Regardless how deep I nest the png file into `assets`, even when I move the file deeper and reference it via `background: url('../assets/many/levels/deep/angular.png')`, `ng serve` will still fetch `/angular.png` which is probably why karma cannot handle it properly as well.","Url":"https://github.com/angular/angular-cli/issues/19664","RelatedDescription":"Open issue \"Referencing images is still either broken or very inconsistent (css + html)\" (#19664)"},{"Id":"772671402","IsPullRequest":true,"CreatedAt":"2020-12-22T06:10:41","Actor":"renovate[bot]","Number":"19662","RawContent":null,"Title":"build: update angular packages","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`2129f4f` -> `2fe50fb`](https://renovatebot.com/diffs/npm/@angular%2fanimations//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`2f60df8` -> `726763d`](https://renovatebot.com/diffs/npm/@angular%2fcommon//) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`4db278f` -> `b79fd02`](https://renovatebot.com/diffs/npm/@angular%2fcompiler//) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`23e1e7d` -> `f1b2f2b`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli//) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`9f2aa82` -> `84bd184`](https://renovatebot.com/diffs/npm/@angular%2fcore//) |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | [`2ecec27` -> `0167e75`](https://renovatebot.com/diffs/npm/@angular%2fdev-infra-private//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`c229d20` -> `7670de3`](https://renovatebot.com/diffs/npm/@angular%2fforms//) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`ff901c6` -> `011d504`](https://renovatebot.com/diffs/npm/@angular%2flanguage-service//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`b66332a` -> `9609de2`](https://renovatebot.com/diffs/npm/@angular%2flocalize//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`e039fa6` -> `346f765`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`3905317` -> `012af6c`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic//) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`347d6c3` -> `09dad51`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server//) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`1f2cbd2` -> `b17ff6d`](https://renovatebot.com/diffs/npm/@angular%2frouter//) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19662","RelatedDescription":"Open PR \"build: update angular packages\" (#19662)"},{"Id":"772500024","IsPullRequest":false,"CreatedAt":"2020-12-21T16:50:50","Actor":"tsvetomir","Number":"19660","RawContent":null,"Title":"Out of memory exception on localized build due to web-animations-js","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\nThe issue is caused by package @angular/compiler-cli _(maybe?)_\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was: 9.x\r\n\r\n\r\n### Description\r\n\r\nLocalized build fails when importing `web-animations-js` polyfill.\r\n\r\n## 🔬 Minimal Reproduction\r\n1. Clone https://github.com/tsvetomir/angular-localize-bug-oom\r\n2. Run `npm install`\r\n3. Run `ng serve --configuration=de`\r\n\r\n* Commenting the `web-animations-js` import in `src/polyfills.ts` resolves the issue.\r\n* Serving the application with `ng serve --configuration=de --source-map=false` resolves the issue.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n> ng serve --configuration=de\r\n\r\n⠇ Generating browser application bundles (phase: building)...\r\n<--- Last few GCs --->\r\n\r\n[52153:0x102803000]    31680 ms: Scavenge 1373.8 (1422.6) -> 1373.1 (1423.1) MB, 1.8 / 0.0 ms  (average mu = 0.281, current mu = 0.236) allocation failure \r\n[52153:0x102803000]    31685 ms: Scavenge 1374.0 (1423.1) -> 1373.4 (1424.1) MB, 3.9 / 0.0 ms  (average mu = 0.281, current mu = 0.236) allocation failure \r\n[52153:0x102803000]    31688 ms: Scavenge 1374.9 (1424.1) -> 1374.4 (1424.6) MB, 2.0 / 0.0 ms  (average mu = 0.281, current mu = 0.236) allocation failure \r\n\r\n\r\n<--- JS stacktrace --->\r\n\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0xea07ccdbe3d]\r\nSecurity context: 0x0715f149e6e9 <JSObject>\r\n    1: SourceMapConsumer_allGeneratedPositionsFor [0x71592abfe49] [/Users/[redacted]/test-messages-v2/node_modules/source-map/lib/source-map-consumer.js:~178] [pc=0xea07deb1f5c](this=0x07152c7f6e89 <BasicSourceMapConsumer map = 0x71577d90e81>,aArgs=0x0715b839c501 <Object map = 0x71577d91771>)\r\n    2: /* anonymous */(aka /* anonymous */) [0x7152ff9ff99] [/U...\r\n\r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0x10003d051 node::Abort() [/usr/local/bin/node]\r\n 2: 0x10003d25b node::OnFatalError(char const*, char const*) [/usr/local/bin/node]\r\n 3: 0x1001b90e5 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]\r\n 4: 0x100587042 v8::internal::Heap::FatalProcessOutOfMemory(char const*) [/usr/local/bin/node]\r\n 5: 0x100589b15 v8::internal::Heap::CheckIneffectiveMarkCompact(unsigned long, double) [/usr/local/bin/node]\r\n 6: 0x1005859bf v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [/usr/local/bin/node]\r\n 7: 0x100583b94 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/bin/node]\r\n 8: 0x10059042c v8::internal::Heap::AllocateRawWithLigthRetry(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment) [/usr/local/bin/node]\r\n 9: 0x1005904af v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment) [/usr/local/bin/node]\r\n10: 0x10055fdf4 v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationSpace) [/usr/local/bin/node]\r\n11: 0x1007e80d4 v8::internal::Runtime_AllocateInNewSpace(int, v8::internal::Object**, v8::internal::Isolate*) [/usr/local/bin/node]\r\n12: 0xea07ccdbe3d \r\n[1]    52152 abort      npm start\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 11.0.5\r\nNode: 10.19.0\r\nOS: darwin x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19660","RelatedDescription":"Open issue \"Out of memory exception on localized build due to web-animations-js\" (#19660)"},{"Id":"772247307","IsPullRequest":true,"CreatedAt":"2020-12-21T15:21:23","Actor":"oleksiipotiekhin","Number":"19659","RawContent":null,"Title":"fix(@schematics/angular): replace of old default html placeholder in the template","State":"open","Body":"When `--inline-template` flag is set to `true` the `app.component.html` will be generated with old html placeholder. Instead it should use new template from `app.component.html.template`.\r\n\r\nP.S. the html placeholder was copied and only one adjustment was made. Content of `.terminal::before` pseudo-element was changed from `content: \"\\2022 \\2022 \\2022\";` to `content: \"\\\\2022 \\\\2022 \\\\2022\";` because of inline template parsing.","Url":"https://github.com/angular/angular-cli/pull/19659","RelatedDescription":"Open PR \"fix(@schematics/angular): replace of old default html placeholder in the template\" (#19659)"},{"Id":"772234826","IsPullRequest":false,"CreatedAt":"2020-12-21T15:09:53","Actor":"MadhaviTix","Number":"19658","RawContent":null,"Title":"Angular - Outputhashing not working in dev or prod","State":"closed","Body":"Hello,\r\n\r\nWe are using Angular 8 with service worker enabled on all environments. Any changes made on angular side, not reflecting on client side unless we do force refresh or ctrl + shft  + R. Server side always new files are generating, but client side only after hard refresh changes are reflecting.\r\n\r\nmy angular.json config\r\n  \"configurations\": {\r\n            \"production\": {\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.prod.ts\"\r\n                }\r\n              ],\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"serviceWorker\": true,\r\n              \"ngswConfigPath\": \"ngsw-config.json\"\r\n            },\r\n            \"sit\": {\r\n              \"outputHashing\": \"all\",\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.sit.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"dev\": {\r\n              \"outputHashing\": \"all\",\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.dev.ts\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n\r\n\r\nPost deployment script in jenkins\r\nng build --prod --aot --output-Hashing=all\r\n\r\nKindly help me to find out the solution.\r\nThanks,\r\nMadhavi.","Url":"https://github.com/angular/angular-cli/issues/19658","RelatedDescription":"Closed issue \"Angular - Outputhashing not working in dev or prod\" (#19658)"},{"Id":"771954895","IsPullRequest":true,"CreatedAt":"2020-12-21T08:40:19","Actor":"renovate[bot]","Number":"19656","RawContent":null,"Title":"build: update to version","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n:wrench: This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19656","RelatedDescription":"Closed or merged PR \"build: update to version\" (#19656)"},{"Id":"771961876","IsPullRequest":true,"CreatedAt":"2020-12-21T08:19:07","Actor":"alan-agius4","Number":"19657","RawContent":null,"Title":"docs: add default value for karma watch option","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/19657","RelatedDescription":"Open PR \"docs: add default value for karma watch option\" (#19657)"},{"Id":"771923470","IsPullRequest":false,"CreatedAt":"2020-12-21T07:56:51","Actor":"calidion","Number":"19655","RawContent":null,"Title":"test won't end when npm test","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [x ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> npm test won't end\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nng new project-name\r\nnpm test/ ng test\r\n\r\n## 🔥 Exception or Error\r\n\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 11.0.5\r\nNode: 12.19.0\r\nOS: linux x64\r\n\r\nAngular: 11.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.5\r\n@angular-devkit/build-angular   0.1100.5\r\n@angular-devkit/core            11.0.5\r\n@angular-devkit/schematics      11.0.5\r\n@schematics/angular             11.0.5\r\n@schematics/update              0.1100.5\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\n![2020-12-21 15-15-47屏幕截图](https://user-images.githubusercontent.com/131776/102750045-1ae55e80-43a0-11eb-9ae8-3f7a5a72ac68.png)\r\n![2020-12-21 15-21-52屏幕截图](https://user-images.githubusercontent.com/131776/102750147-48caa300-43a0-11eb-9a35-e66fdf323939.png)\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19655","RelatedDescription":"Closed issue \"test won't end when npm test\" (#19655)"},{"Id":"771689837","IsPullRequest":false,"CreatedAt":"2020-12-20T21:02:09","Actor":"a0309nkita","Number":"19654","RawContent":null,"Title":"Access-Control-Allow-Origin' header is present on the requested resource","State":"closed","Body":"\r\nHi , \r\n\r\nI am trying to post some data to a server from my angular UI(6), but while calling that server I’m getting CORS error as 'Access to XMLHttpRequest at 'https://login.microsoftonline.com/********/oauth2/v2.0/token' from origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.'\r\n\r\nPlease provide any help on that and if more more data required I can provide that too.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19654","RelatedDescription":"Closed issue \"Access-Control-Allow-Origin' header is present on the requested resource\" (#19654)"},{"Id":"772500219","IsPullRequest":false,"CreatedAt":"2020-12-19T21:08:06","Actor":"ORESoftware","Number":"19661","RawContent":null,"Title":"Generating inline single-file index.html for faster load","State":"open","Body":"# 🚀 feature request\r\n\r\n### Relevant Package\r\nNot sure which package, possibly all\r\n\r\n### Description\r\n\r\nWe have an angular folder with multiple projects:\r\n\r\n```\r\n./projects/\r\n    admin-app\r\n    login-and-signup-app   // this project needs fastest page load\r\n    main-app\r\n.angular.json\r\n```\r\n\r\nin the login-and-signup-app, we won't do server-side rendering, but I do want to make the angular code and webpack code inline, something like this:\r\n\r\nbefore:\r\n\r\n```html\r\n<html>\r\n  <head>\r\n       <script type=\"text/javascript\" src=\"my-angular-code-in-google-cloud-storage\"\r\n  </head>\r\n</html>\r\n```\r\n\r\nafter:\r\n\r\n```html\r\n<html>\r\n  <head>\r\n       <script type=\"text/javascript\">\r\n            write the code inline here\r\n      </script>\r\n  </head>\r\n</html>\r\n```\r\n\r\nSo I am looking for a way to write the code inline automatically.\r\nI assume there is no tooling for this and it's best to do it yourself using templating?\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19661","RelatedDescription":"Open issue \"Generating inline single-file index.html for faster load\" (#19661)"},{"Id":"770735439","IsPullRequest":true,"CreatedAt":"2020-12-19T20:01:02","Actor":"alan-agius4","Number":"19649","RawContent":null,"Title":"docs: clarify that the options of `ng lint` in AIO are of the deprecated builder","State":"closed","Body":"\r\nFix: #19638","Url":"https://github.com/angular/angular-cli/pull/19649","RelatedDescription":"Closed or merged PR \"docs: clarify that the options of `ng lint` in AIO are of the deprecated builder\" (#19649)"},{"Id":"771417293","IsPullRequest":false,"CreatedAt":"2020-12-19T17:09:21","Actor":"joshorvis","Number":"19653","RawContent":null,"Title":"Index.html is produced locally when outputPath is a remote folder","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n### UPDATE 2020-12-20:  I discovered this morning that the index.html files ARE being produced, but they are being pushed to my local machine instead of the remove machine.  \r\n\r\nFrom my angular.json:  `\"outputPath\": \"\\\\\\\\remote-computer-name\\\\all-projects-folder\\\\project-folder\"`\r\n\r\nFiles SHOULD be copying to C:\\all-projects-folder\\project-folder. on the REMOTE machine.  Instead, files are copying to C:\\remote-computer-name\\all-projects-folder\\project-folder on my LOCAL machine\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> No.  Discovered in 9.1.7.  Updated to latest hoping to fix the problem.  Still exists.\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> \r\nTitle says it all.  When run ng build, everything works as expected.  When I run ng build --configuration=remote-build, the build completes without errors and  all files are pushed to the remote folder EXCEPT index.html.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nLink to repro project here:  https://github.com/joshorvis/remote-build.  (Only change from the default ng new is a new target added in angular.json)  \r\n\r\n1) set up a folder you can access on another machine.  confirm file permissions aren't blocking writes from your local machine.\r\n2) npm install project on local machine.  Update angular.json line 86 with the network path to your remote folder.\r\n3) run ng build.  See index.html in local project folder /dist/remote-build\r\n4) run ng build --configuration=remote-build.  See everything but index.html\r\n5) cry with me.  \r\n\r\n\r\nUPDATE:  It appears that mapping the remote folder to a network drive letter will produce the index.html as expected.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19653","RelatedDescription":"Open issue \"Index.html is produced locally when outputPath is a remote folder\" (#19653)"},{"Id":"771316528","IsPullRequest":true,"CreatedAt":"2020-12-19T09:32:50","Actor":"renovate[bot]","Number":"19652","RawContent":null,"Title":"build: update less to version 4.0.0","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [less](http://lesscss.org) ([source](https://togithub.com/less/less.js)) | [`3.13.0` -> `4.0.0`](https://renovatebot.com/diffs/npm/less/3.13.0/4.0.0) | [![age](https://badges.renovateapi.com/packages/npm/less/4.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/less/4.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/less/4.0.0/compatibility-slim/3.13.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/less/4.0.0/confidence-slim/3.13.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>less/less.js</summary>\n\n### [`v4.0.0`](https://togithub.com/less/less.js/blob/master/CHANGELOG.md#v400-2020-12-18)\n\n[Compare Source](https://togithub.com/less/less.js/compare/v3.13.1...v4.0.0)\n\n-   [#&#8203;3573](https://togithub.com/less/less.js/pull/3573) v4.0.0 ([#&#8203;3573](https://togithub.com/less/less.js/issues/3573)) ([@&#8203;matthew-dean](https://togithub.com/matthew-dean))\n\n### [`v3.13.1`](https://togithub.com/less/less.js/blob/master/CHANGELOG.md#v3131-2020-12-18)\n\n[Compare Source](https://togithub.com/less/less.js/compare/v3.13.0...v3.13.1)\n\n-   [#&#8203;3575](https://togithub.com/less/less.js/pull/3575) Fixes [#&#8203;3574](https://togithub.com/less/less.js/issues/3574) ([#&#8203;3575](https://togithub.com/less/less.js/issues/3575)) ([@&#8203;matthew-dean](https://togithub.com/matthew-dean))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19652","RelatedDescription":"Closed or merged PR \"build: update less to version 4.0.0\" (#19652)"},{"Id":"771314487","IsPullRequest":true,"CreatedAt":"2020-12-19T07:57:08","Actor":"emirhg","Number":"19650","RawContent":null,"Title":"new: user: newProjectRoot CLI argument for \"library\" schematic","State":"closed","Body":"Closes https://github.com/angular/angular-cli/issues/11927#issue-351478431","Url":"https://github.com/angular/angular-cli/pull/19650","RelatedDescription":"Closed or merged PR \"new: user: newProjectRoot CLI argument for \"library\" schematic\" (#19650)"},{"Id":"771315108","IsPullRequest":true,"CreatedAt":"2020-12-19T07:56:07","Actor":"emirhg","Number":"19651","RawContent":null,"Title":"Feature/library test script","State":"closed","Body":"A test script added to package.json's library schematic template","Url":"https://github.com/angular/angular-cli/pull/19651","RelatedDescription":"Closed or merged PR \"Feature/library test script\" (#19651)"},{"Id":"770334064","IsPullRequest":true,"CreatedAt":"2020-12-18T07:32:01","Actor":"clydin","Number":"19646","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use URL rewrite in karma fallback middleware","State":"closed","Body":"This changes the internal Angular Karma plugin's asset fallback middleware to rewrite the request URL directly instead of trying to copy the request properties.  With changes in newer Node.js versions, not all request properties may be enumerable.\r\n\r\nFixes: #19644","Url":"https://github.com/angular/angular-cli/pull/19646","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use URL rewrite in karma fallback middleware\" (#19646)"},{"Id":"770129331","IsPullRequest":false,"CreatedAt":"2020-12-18T07:32:01","Actor":"devoto13","Number":"19644","RawContent":null,"Title":"ng test crashes on Node 14.15.2 and Node 15","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n\r\nNo.\r\n\r\n### Description\r\n\r\nNode has made [a change](https://github.com/nodejs/node/issues/36550), which was released in Node 14.15.2 and Node 15.x lines. This change caused Angular CLI Karma plugin crash (https://github.com/karma-runner/karma/issues/3588) because of the behaviour change. The culprit seems to be [this line](https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/webpack/plugins/karma.ts#L329). On Node 14.15.2 this code will result in a `webpackReq.headers` being `undefined`, which leads to the crash in `webpack-dev-middleware` down the callstack. From the Node issue it looks like change is going to be reverted in 14.x, but maybe not in 15.x. So I think it still makes sense to adjust Angular CLI code to be compatible with the future Node release.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. `git clone git@github.com:devoto13/ng-test-crash.git`\r\n2. `cd ng-test-crash`\r\n3. `npm i`\r\n4. `npm test`\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>17 12 2020 16:06:15.208:ERROR [karma-server]: UnhandledRejection: Cannot read property 'range' of undefined\r\n17 12 2020 16:06:15.211:ERROR [karma-server]: TypeError: Cannot read property 'range' of undefined\r\n    at handleRangeHeaders (/Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/util.js:131:21)\r\n    at processRequest (/Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/middleware.js:98:19)\r\n    at ready (/Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/util.js:53:12)\r\n    at handleRequest (/Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/util.js:182:5)\r\n    at /Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/middleware.js:64:7\r\n    at new Promise (<anonymous>)\r\n    at middleware (/Users/devoto13/Projects/trash/dummy/node_modules/webpack-dev-middleware/lib/middleware.js:63:12)\r\n    at /Users/devoto13/Projects/trash/dummy/node_modules/@angular-devkit/build-angular/src/webpack/plugins/karma.js:288:13\r\n    at call (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:239:7)\r\n    at next (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:183:5)\r\n    at /Users/devoto13/Projects/trash/dummy/node_modules/karma/lib/web-server.js:24:9\r\n    at call (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:239:7)\r\n    at next (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:183:5)\r\n    at nullProxy (/Users/devoto13/Projects/trash/dummy/node_modules/karma/lib/middleware/proxy.js:86:52)\r\n    at call (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:239:7)\r\n    at next (/Users/devoto13/Projects/trash/dummy/node_modules/connect/index.js:183:5)\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>Angular CLI: 11.0.4\r\nNode: 14.15.2\r\nOS: darwin x64\r\n\r\nAngular: 11.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.4\r\n@angular-devkit/build-angular   0.1100.4\r\n@angular-devkit/core            11.0.4\r\n@angular-devkit/schematics      11.0.4\r\n@schematics/angular             11.0.4\r\n@schematics/update              0.1100.4\r\nrxjs                            6.6.3\r\ntypescript                      4.0.5</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19644","RelatedDescription":"Closed issue \"ng test crashes on Node 14.15.2 and Node 15\" (#19644)"},{"Id":"769181766","IsPullRequest":true,"CreatedAt":"2020-12-18T07:31:35","Actor":"oleksiipotiekhin","Number":"19639","RawContent":null,"Title":"fix(@schematics/angular): remove unnecessary scripts and dependencies","State":"closed","Body":"When new application is generated with `--minimal` flag it will be created without any testing frameworks, linters, etc. But `package.json` still contains broken scripts and dependencies. So `\"test\": \"ng test\"`, `\"lint\": \"ng lint\"` and `\"tslint\": \"~6.1.0\"` should be removed. By analogy with `\"e2e\": \"ng e2e\"`.","Url":"https://github.com/angular/angular-cli/pull/19639","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove unnecessary scripts and dependencies\" (#19639)"},{"Id":"769234338","IsPullRequest":true,"CreatedAt":"2020-12-18T07:30:20","Actor":"djbrown","Number":"19640","RawContent":null,"Title":"fix(@schematics/update): fix typo in info log","State":"closed","Body":"fix grammar typo in note about additional packages  from #18888","Url":"https://github.com/angular/angular-cli/pull/19640","RelatedDescription":"Closed or merged PR \"fix(@schematics/update): fix typo in info log\" (#19640)"},{"Id":"770529793","IsPullRequest":true,"CreatedAt":"2020-12-18T07:29:46","Actor":"flamerohr","Number":"19648","RawContent":null,"Title":"docs(@angular/cli): fix schema.json description for `lazyModules`","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19648","RelatedDescription":"Closed or merged PR \"docs(@angular/cli): fix schema.json description for `lazyModules`\" (#19648)"},{"Id":"770444328","IsPullRequest":false,"CreatedAt":"2020-12-18T01:08:17","Actor":"thatcort","Number":"19647","RawContent":null,"Title":"CLI Doesn't Run","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] new\r\n- [x] build\r\n- [x] serve\r\n- [x] test\r\n- [x] e2e\r\n- [x] generate\r\n- [x] add\r\n- [x] update\r\n- [x] lint\r\n- [x] extract-i18n\r\n- [x] run\r\n- [x] config\r\n- [x] help\r\n- [x] version\r\n- [x] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n\r\n### Description\r\n\r\nI get the following error message when trying to run any CLI command: `Error: Cannot find module './debug'`\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. Uninstall any old version of the angular cli: `npm uninstall -g @angular/cli`\r\n2. Install the angular cli: `npm i -g @angular/cli`\r\n3. Attempt to create a new project: `ng new ngtest`\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n% npm uninstall -g @angular/cli\r\nremoved 254 packages in 2.482s\r\n% npm i -g @angular/cli\r\nnpm WARN deprecated debug@4.2.0: Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)\r\nnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\r\nnpm WARN deprecated har-validator@5.1.5: this library is no longer supported\r\n/Users/briancort/.nvm/versions/node/v14.13.0/bin/ng -> /Users/briancort/.nvm/versions/node/v14.13.0/lib/node_modules/@angular/cli/bin/ng\r\n\r\n> @angular/cli@11.0.5 postinstall /Users/briancort/.nvm/versions/node/v14.13.0/lib/node_modules/@angular/cli\r\n> node ./bin/postinstall/script.js\r\n\r\n+ @angular/cli@11.0.5\r\nadded 254 packages from 201 contributors in 8.359s\r\n% ng new ngtest\r\ninternal/modules/cjs/loader.js:905\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module './debug'\r\nRequire stack:\r\n- /usr/local/lib/node_modules/@angular/cli/node_modules/debug/src/node.js\r\n- /usr/local/lib/node_modules/@angular/cli/node_modules/debug/src/index.js\r\n- /usr/local/lib/node_modules/@angular/cli/node_modules/silent-error/index.js\r\n- /usr/local/lib/node_modules/@angular/cli/utilities/app-utils.js\r\n- /usr/local/lib/node_modules/@angular/cli/commands/build.js\r\n- /usr/local/lib/node_modules/@angular/cli/lib/cli/index.js\r\n- /usr/local/lib/node_modules/@angular/cli/bin/ng\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:902:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:747:27)\r\n    at Module.require (internal/modules/cjs/loader.js:974:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at Object.<anonymous> (/usr/local/lib/node_modules/@angular/cli/node_modules/debug/src/node.js:14:28)\r\n    at Module._compile (internal/modules/cjs/loader.js:1085:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\r\n    at Module.load (internal/modules/cjs/loader.js:950:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:791:14)\r\n    at Module.require (internal/modules/cjs/loader.js:974:19) {\r\n  code: 'MODULE_NOT_FOUND',\r\n  requireStack: [\r\n    '/usr/local/lib/node_modules/@angular/cli/node_modules/debug/src/node.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/node_modules/debug/src/index.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/node_modules/silent-error/index.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/utilities/app-utils.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/commands/build.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/lib/cli/index.js',\r\n    '/usr/local/lib/node_modules/@angular/cli/bin/ng'\r\n  ]\r\n}\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n`ng version` generates the same error message as above. From the output you can see that it installed 11.0.5.\r\n\r\n**Anything else relevant?**\r\nI'm running Node v14.13.0, npm 6.14.8, MacOS 10.15.7\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19647","RelatedDescription":"Closed issue \"CLI Doesn't Run\" (#19647)"},{"Id":"769565234","IsPullRequest":true,"CreatedAt":"2020-12-17T19:07:10","Actor":"renovate[bot]","Number":"19642","RawContent":null,"Title":"build: update license-checker-webpack-plugin to version 0.2.1","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [license-checker-webpack-plugin](https://togithub.com/Microsoft/license-checker-webpack-plugin) | [`0.2.0` -> `0.2.1`](https://renovatebot.com/diffs/npm/license-checker-webpack-plugin/0.2.0/0.2.1) | [![age](https://badges.renovateapi.com/packages/npm/license-checker-webpack-plugin/0.2.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/license-checker-webpack-plugin/0.2.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/license-checker-webpack-plugin/0.2.1/compatibility-slim/0.2.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/license-checker-webpack-plugin/0.2.1/confidence-slim/0.2.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/license-checker-webpack-plugin</summary>\n\n### [`v0.2.1`](https://togithub.com/Microsoft/license-checker-webpack-plugin/compare/v0.2.0...v0.2.1)\n\n[Compare Source](https://togithub.com/Microsoft/license-checker-webpack-plugin/compare/v0.2.0...v0.2.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19642","RelatedDescription":"Closed or merged PR \"build: update license-checker-webpack-plugin to version 0.2.1\" (#19642)"},{"Id":"769863962","IsPullRequest":true,"CreatedAt":"2020-12-17T10:56:25","Actor":"alan-agius4","Number":"19643","RawContent":null,"Title":"docs: update optimization and sourceMap descriptions with new links","State":"open","Body":"https://next.angular.io/guide/workspace-config#source-map-configuration\r\nhttps://next.angular.io/guide/workspace-config#optimization-configuration","Url":"https://github.com/angular/angular-cli/pull/19643","RelatedDescription":"Open PR \"docs: update optimization and sourceMap descriptions with new links\" (#19643)"},{"Id":"769254512","IsPullRequest":true,"CreatedAt":"2020-12-16T20:36:48","Actor":"clydin","Number":"19641","RawContent":null,"Title":"feat(@angular-devkit/build-angular): integrate Angular compiler linker","State":"open","Body":"The newly introduced library linker mode that removes the need for ngcc is integrated into the Angular CLI's build system.  This allows libraries that are built in linker mode to be used when building an application.","Url":"https://github.com/angular/angular-cli/pull/19641","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): integrate Angular compiler linker\" (#19641)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"771861776","IsPullRequest":true,"CreatedAt":"2020-12-23T05:17:13","Actor":"dependabot[bot]","Number":"21408","RawContent":null,"Title":"build: bump @bazel/jasmine from 2.2.1 to 2.3.2","State":"closed","Body":"Bumps [@bazel/jasmine](https://github.com/bazelbuild/rules_nodejs/tree/HEAD/packages/jasmine) from 2.2.1 to 2.3.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/releases\">@bazel/jasmine's releases</a>.</em></p>\n<blockquote>\n<h2>2.3.2</h2>\n<p><strong>Note</strong>: this is likely the last 2.x release of rules_nodejs, we expect 3.0.0 next week.</p>\n<p>To upgrade:</p>\n<pre><code>http_archive(\n    name = &quot;build_bazel_rules_nodejs&quot;,\n    sha256 = &quot;b3521b29c7cb0c47a1a735cce7e7e811a4f80d8e3720cf3a1b624533e4bb7cb6&quot;,\n    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/2.3.2/rules_nodejs-2.3.2.tar.gz&quot;],\n)\n</code></pre>\n<p>and update your <code>@bazel</code>-scoped npm packages to <code>latest</code></p>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> add DeclarationInfo sources from dependencies as inputs to npm_package_bin driven actions (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2353\">#2353</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/85dc132\">85dc132</a>)</li>\n<li><strong>builtin:</strong> give better error when linker runs on Node &lt;10 (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c344401\">c344401</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2304\">#2304</a></li>\n<li><strong>examples:</strong> fix jest example on windows (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/cc04f6c\">cc04f6c</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/1454\">#1454</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>allow running NPM tools from execroot (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2297\">#2297</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/364ac89\">364ac89</a>)</li>\n</ul>\n<h2>2.3.1</h2>\n<p>To upgrade,</p>\n<pre><code>http_archive(\n    name = &quot;build_bazel_rules_nodejs&quot;,\n    sha256 = &quot;121f17d8b421ce72f3376431c3461cd66bfe14de49059edc7bb008d5aebd16be&quot;,\n    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/2.3.1/rules_nodejs-2.3.1.tar.gz&quot;],\n)\n</code></pre>\n<p>and remember to update your <code>@bazel</code>-scoped npm dependencies.</p>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> make linker deterministic when resolving from manifest &amp; fix link_workspace_root with no runfiles (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/8adebda\">8adebda</a>)</li>\n<li>npm_package.pack on Windows should not generate undefined.tgz (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/76c3f51\">76c3f51</a>)</li>\n</ul>\n<h3>Performance Improvements</h3>\n<ul>\n<li><strong>cypress:</strong> pack cypress runfiles into a single tar (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/185c632\">185c632</a>)</li>\n</ul>\n<h2>2.3.0</h2>\n<p>To upgrade,</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/blob/stable/CHANGELOG.md\">@bazel/jasmine's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.3.1...2.3.2\">2.3.2</a> (2020-12-18)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> add DeclarationInfo sources from dependencies as inputs to npm_package_bin driven actions (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2353\">#2353</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/85dc132\">85dc132</a>)</li>\n<li><strong>builtin:</strong> give better error when linker runs on Node &lt;10 (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c344401\">c344401</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2304\">#2304</a></li>\n<li><strong>examples:</strong> fix jest example on windows (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/cc04f6c\">cc04f6c</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/1454\">#1454</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>allow running NPM tools from execroot (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2297\">#2297</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/364ac89\">364ac89</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.3.0...2.3.1\">2.3.1</a> (2020-11-24)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> make linker deterministic when resolving from manifest &amp; fix link_workspace_root with no runfiles (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/8adebda\">8adebda</a>)</li>\n<li>npm_package.pack on Windows should not generate undefined.tgz (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/76c3f51\">76c3f51</a>)</li>\n</ul>\n<h3>Performance Improvements</h3>\n<ul>\n<li><strong>cypress:</strong> pack cypress runfiles into a single tar (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/185c632\">185c632</a>)</li>\n</ul>\n<h1><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.2.2...2.3.0\">2.3.0</a> (2020-11-10)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>typescript:</strong> specify rootDir as absolute path (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/86bef24\">86bef24</a>)</li>\n<li>npm_package.pack should work in windows os (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/bc36519\">bc36519</a>)</li>\n<li><strong>builtin:</strong> give a longer timeout for _create_build_files (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/e72c145\">e72c145</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2231\">#2231</a></li>\n<li><strong>exmaples/nestjs:</strong> add module_name field in ts_library (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/700374a\">700374a</a>)</li>\n<li><strong>typescript:</strong> don't include _valid_options marker file in outs (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/6305db3\">6305db3</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2078\">#2078</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>cypress:</strong> remove browiserify preprocessor (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/1eeabbe\">1eeabbe</a>)</li>\n<li><strong>examples:</strong> adds example for running jest with typescript (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2245\">#2245</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/3c11800\">3c11800</a>)</li>\n<li><strong>node_repositories:</strong> Added auth option for downloading nodejs and yarn (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/51de4e0\">51de4e0</a>)</li>\n<li><strong>typescript:</strong> add allow_js support to ts_project (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/12571ee\">12571ee</a>)</li>\n<li><strong>typescript:</strong> worker mode for ts_project (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2136\">#2136</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/9663b85\">9663b85</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/bazelbuild/rules_nodejs/commits/2.3.2/packages/jasmine\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@bazel/jasmine&package-manager=npm_and_yarn&previous-version=2.2.1&new-version=2.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/angular/components/pull/21408","RelatedDescription":"Closed or merged PR \"build: bump @bazel/jasmine from 2.2.1 to 2.3.2\" (#21408)"},{"Id":"773492875","IsPullRequest":true,"CreatedAt":"2020-12-23T05:17:08","Actor":"dependabot[bot]","Number":"21424","RawContent":null,"Title":"build: bump @bazel/jasmine from 2.2.1 to 3.0.0","State":"open","Body":"Bumps [@bazel/jasmine](https://github.com/bazelbuild/rules_nodejs/tree/HEAD/packages/jasmine) from 2.2.1 to 3.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/releases\">@bazel/jasmine's releases</a>.</em></p>\n<blockquote>\n<h2>3.0.0</h2>\n<p>Following our usual 6-month cadence for major releases, here is 3.0.0 just in time for your winter vacation!\nAs usual, we've done our best to make breaking changes that improve the long-term health of the project and which are easy to adopt. Give us feedback in the <code>#javascript</code> channel on slack.bazel.build</p>\n<p>👏🏻  Thanks to our awesome contributors for this release! 👏🏻</p>\n<p><a href=\"https://github.com/mistic\">@mistic</a>, <a href=\"https://github.com/lukasholzer\">@lukasholzer</a>, <a href=\"https://github.com/duarten\">@duarten</a>, <a href=\"https://github.com/jbedard\">@jbedard</a>, <a href=\"https://github.com/mrmeku\">@mrmeku</a> , <a href=\"https://github.com/opelhoward\">@opelhoward</a> , <a href=\"https://github.com/Schibum\">@Schibum</a> , <a href=\"https://github.com/mattinsler\">@mattinsler</a> , <a href=\"https://github.com/JiaLiPassion\">@JiaLiPassion</a> , <a href=\"https://github.com/fredrikredflag\">@fredrikredflag</a> , <a href=\"https://github.com/KrauseStefan\">@KrauseStefan</a> , <a href=\"https://github.com/comius\">@comius</a> , <a href=\"https://github.com/lovepocky\">@lovepocky</a> , <a href=\"https://github.com/tylerhou\">@tylerhou</a> and <a href=\"https://github.com/OlaviSau\">@OlaviSau</a></p>\n<p>To upgrade:</p>\n<pre><code>http_archive(\n    name = &quot;build_bazel_rules_nodejs&quot;,\n    sha256 = &quot;6142e9586162b179fdd570a55e50d1332e7d9c030efd853453438d607569721d&quot;,\n    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/3.0.0/rules_nodejs-3.0.0.tar.gz&quot;],\n)\n</code></pre>\n<p>and upgrade your <code>@bazel</code>-scoped npm packages (you'll get an error when installing 2.x version packages with rules_nodejs 3.x)</p>\n<p>Finally, read the 📚  Migration instructions from 2.x for breaking changes:\n<a href=\"https://github.com/bazelbuild/rules_nodejs/wiki#migrating-to-30\">https://github.com/bazelbuild/rules_nodejs/wiki#migrating-to-30</a></p>\n<h3>BREAKING CHANGES</h3>\n<h4>Stricter installs</h4>\n<p>For both <code>yarn_install</code> and <code>npm_install</code> we now fail if the lockfile is out-of-date, rather than update it.\nThis assumes you'll use the tooling to manually update the lockfile as needed.</p>\n<p><code>yarn_install</code> now passes <code>--frozen_lockfile</code> by default, but you can use <code>yarn_install(frozen_lockfile = False)</code> to go back to the old behavior.</p>\n<p><code>npm_install</code> now has an attribute <code>npm_command</code> that defaults to <code>ci</code> but you can set it to <code>install</code> to go back to the old behavior.</p>\n<p>We also flipped the default for <code>strict_visibility</code> on these two rules. This prevents you adding a Bazel dependency on a library that isn't listed as a dependency in <code>package.json</code>. You can set it back to <code>False</code> if you need the old behavior.</p>\n<h4>--bazel_patch_module_resolver defaults to false</h4>\n<p>By default, we no longer patch the require() function, instead you should rely on the linker to make node modules resolvable at the standard location\nif this breaks you, the quickest fix is to flip the flag back on a nodejs_binary/nodejs_test/npm_package_bin with <code>templated_args = [&quot;--bazel_patch_module_resolver&quot;]</code>, see <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/pull/2344\">bazelbuild/rules_nodejs#2344</a> as an example.\nAnother fix is to explicitly use our runfiles helper library, see <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/pull/2341\">bazelbuild/rules_nodejs#2341</a> as an example.</p>\n<h4>karma and ts_devserver rules moved to new package @bazel/concatjs</h4>\n<p><code>packages/karma:package.bzl</code> is gone, in your WORKSPACE replace</p>\n<pre><code>load(&quot;//packages/karma:package.bzl&quot;, &quot;npm_bazel_karma_dependencies&quot;)\n<p>&lt;/tr&gt;&lt;/table&gt;\n</code></pre></p>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/blob/stable/CHANGELOG.md\">@bazel/jasmine's changelog</a>.</em></p>\n<blockquote>\n<h1><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/3.0.0-rc.1...3.0.0\">3.0.0</a> (2020-12-22)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> only pass kwargs to the test, not the .update binary (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2361\">#2361</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/afa095b\">afa095b</a>)</li>\n</ul>\n<h3>Code Refactoring</h3>\n<ul>\n<li><strong>builtin:</strong> remove node_modules attribute from nodejs_binary, nodejs_test &amp; ts_library (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c2927af\">c2927af</a>)</li>\n</ul>\n<h3>BREAKING CHANGES</h3>\n<ul>\n<li><strong>builtin:</strong> We removed the node_modules attribute from <code>nodejs_binary</code>, <code>nodejs_test</code>, <code>jasmine_node_test</code> &amp; <code>ts_library</code>.</li>\n</ul>\n<p>If you are using the <code>node_modules</code> attribute, you can simply add the target specified there to the <code>data</code> or <code>deps</code> attribute of the rule instead.</p>\n<p>For example,</p>\n<pre><code>nodejs_test(\n    name = &quot;test&quot;,\n    data = [\n        &quot;test.js&quot;,\n        &quot;@npm//:node_modules&quot;,\n    ],\n    entry_point = &quot;test.js&quot;,\n)\n</code></pre>\n<p>or</p>\n<pre><code>ts_library(\n    name = &quot;lib&quot;,\n    srcs = glob([&quot;*.ts&quot;]),\n    tsconfig = &quot;:tsconfig.json&quot;,\n    deps = [&quot;@npm//:node_modules&quot;],\n)\n</code></pre>\n<p>We also dropped support for filegroup based node_modules target and removed <code>node_modules_filegroup</code> from <code>index.bzl</code>.</p>\n<p>If you are using this feature for user-managed deps, you must now a <code>js_library</code> target\nwith <code>external_npm_package</code> set to <code>True</code> instead.</p>\n<p>For example,</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c2927afa9a5d77652783f94eada80baf1c9be68f\"><code>c2927af</code></a> refactor(builtin): remove node_modules attribute from nodejs_binary, nodejs_t...</li>\n<li><a href=\"https://github.com/bazelbuild/rules_nodejs/commit/0203c065b0c065e9314bc6786028c62dd16e3082\"><code>0203c06</code></a> refactor: make dependencies on --bazel_patch_module_resolver explicit</li>\n<li>See full diff in <a href=\"https://github.com/bazelbuild/rules_nodejs/commits/3.0.0/packages/jasmine\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@bazel/jasmine&package-manager=npm_and_yarn&previous-version=2.2.1&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/angular/components/pull/21424","RelatedDescription":"Open PR \"build: bump @bazel/jasmine from 2.2.1 to 3.0.0\" (#21424)"},{"Id":"773172287","IsPullRequest":false,"CreatedAt":"2020-12-22T18:56:47","Actor":"alvipeo","Number":"21423","RawContent":null,"Title":"bug(TreeControl): TreeControl's trackBy is unusable","State":"open","Body":"Here's the code to create FlatTreeControl:\r\n```\r\n    this.treeControl = new FlatTreeControl<GeoEntityFlatNode>(\r\n      (node) => node.nodeLevel,\r\n      (node) => node.expandable,\r\n      { trackBy: this.trackByGroupPath } // ========> DOES NOT COMPILE\r\n    );\r\n```\r\nand the `trackByGroupPath`:\r\n```\r\n  trackByGroupPath(index: number, node: GeoEntityFlatNode): string {\r\n    return node.groupPath;\r\n  }\r\n```\r\nAnd this whole thing does not compile as \r\n> Type '(node: GeoEntityFlatNode) => string' is not assignable to type '(dataNode: GeoEntityFlatNode) => GeoEntityFlatNode'.\r\n\r\nAm I missing something or this makes `trackBy` completely useless?","Url":"https://github.com/angular/components/issues/21423","RelatedDescription":"Open issue \"bug(TreeControl): TreeControl's trackBy is unusable\" (#21423)"},{"Id":"773104334","IsPullRequest":false,"CreatedAt":"2020-12-22T17:04:44","Actor":"alvipeo","Number":"21422","RawContent":null,"Title":"help(Tree): TreeControl selection model doesn't work for immutable data","State":"open","Body":"Please see this - https://stackoverflow.com/q/65412659/2896495.\r\n\r\nI needed a dynamically loading nodes in the angular material tree, so I created my own `GeoDataSource` which internally uses **_@ngrx/component-store_** to handle all the interaction between data source, TreeControl and the tree itself.\r\n\r\nNow, the problem is the tree doesn't keep its expansion state because the `abstract class BaseTreeControl<T, K = T>` uses `SelectionModel<T>` class and this in turn uses `Set<T>` to keep track of items that are selected. So if node is expanded it just does this:\r\n```\r\nthis._selection.add(value); // Set<T>.add(value)\r\n```\r\n\r\nWhen using immutable data (from the component store) those items are always new.\r\n\r\nI tried to use `trackBy` optional function:\r\n```\r\n    this.treeControl = new FlatTreeControl<SomeEntityFlatNode, string>(\r\n      (node) => node.nodeLevel,\r\n      (node) => node.expandable, {\r\n        trackBy: (node) => node.groupPath // *** groupPath is string (it's an ID) ***\r\n      }\r\n    );\r\n```\r\n\r\nand for this I had to change `FlatTreeControl<SomeEntityFlatNode>` to `FlatTreeControl<SomeEntityFlatNode, string>`, otherwise it doesn't compile. But then I got the following error in the **_template_**:\r\n\r\n> Type 'FlatTreeControl<SomeEntityFlatNode, string>' is not assignable to type 'TreeControl<SomeEntityFlatNode, SomeEntityFlatNode>'\r\n\r\nHere's the template:\r\n```\r\n<mat-tree *ngIf=\"hasData$ | async\" [dataSource]=\"geoDataSource\" [treeControl]=\"treeControl\">\r\n</mat-tree>\r\n```\r\n\r\nNow what? How do I make all this work with immutable data from the store?","Url":"https://github.com/angular/components/issues/21422","RelatedDescription":"Open issue \"help(Tree): TreeControl selection model doesn't work for immutable data\" (#21422)"},{"Id":"773082885","IsPullRequest":true,"CreatedAt":"2020-12-22T16:35:28","Actor":"POFerro","Number":"21421","RawContent":null,"Title":"fix(cdk/tree): add missing generic types to trackBy Fixes (#21364)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21421","RelatedDescription":"Open PR \"fix(cdk/tree): add missing generic types to trackBy Fixes (#21364)\" (#21421)"},{"Id":"773029565","IsPullRequest":false,"CreatedAt":"2020-12-22T15:25:51","Actor":"jamesnben","Number":"21420","RawContent":null,"Title":"bug(mat-menu): min-height menu gets cut off below the screen if you force it not to close and then filter a list","State":"open","Body":"This bug is an update to this with the requirement for min height: https://github.com/angular/components/issues/21413\r\n\r\nReproduction\r\nhttps://stackblitz.com/edit/angular-11-material-mat-menu-cutoff-issue\r\n\r\nSteps to reproduce:\r\n\r\n1. Scroll down until the menu can open downward\r\n2. Open Menu\r\n3. Click \"Filter less than 6\"\r\n4. Notice menu options below \"Filter less than 7\" are cut off\r\n5. Menu should go on top instead of being cut off\r\n6. Issue is caused by stopPropagation\r\n7. The requirement is to have the menu remain open and not scroll\r\n8. Even if the min height is removed and allowed to scroll, there is still a cutoff issue\r\n\r\nActual Behavior\r\nThe menu cuts off options below the bottom of the screen scroll height.\r\n\r\nThis appears to be similar to:\r\n[#17477](https://github.com/angular/components/issues/17477)\r\n\r\nThe workaround listed in that bug report does not fix the issue.\r\n\r\nThe menu cut-off issue still exists if you remove min-height. The actual requirement I have is to have the menu remain open and not scroll internally.\r\n\r\nEnvironment\r\nAngular: 11.0.5\r\nCDK/Material: 11.0.3\r\nBrowser(s):\r\nChrome 87.0.4280.88 (Official Build) (64-bit),\r\nFirefox 82.0.3 (64-bit),\r\nEdge 44.18362.449.0\r\nOperating System (e.g. Windows, macOS, Ubuntu): Windows 10","Url":"https://github.com/angular/components/issues/21420","RelatedDescription":"Open issue \"bug(mat-menu): min-height menu gets cut off below the screen if you force it not to close and then filter a list\" (#21420)"},{"Id":"772942431","IsPullRequest":true,"CreatedAt":"2020-12-22T13:21:16","Actor":"crisbeto","Number":"21419","RawContent":null,"Title":"fix(google-maps): typo in retina methods","State":"open","Body":"Fixes a couple of typos in the names of methods in the marker clusterer.\r\n\r\nFixes #21418.\r\n\r\n**Note:** this isn't a breaking change, because the code that introduced the typo hasn't been released yet.\r\n\r\ncc @mbehrlich ","Url":"https://github.com/angular/components/pull/21419","RelatedDescription":"Open PR \"fix(google-maps): typo in retina methods\" (#21419)"},{"Id":"772861421","IsPullRequest":false,"CreatedAt":"2020-12-22T11:11:19","Actor":"GrandSchtroumpf","Number":"21418","RawContent":null,"Title":"bug(map-market-cluster): Typos + import @googlemaps/marketclusterplus","State":"open","Body":"I found some typos in MapMarketClusterer :\r\n- `getEnableRetinalIcons` should be `getEnableRetinaIcons` (without \"l\"). [here](https://github.com/angular/components/blob/master/src/google-maps/map-marker-clusterer/map-marker-clusterer.ts#L273)\r\n- `setEnableRetinalIcons` should be `setEnableRetinaIcons` (without \"l\"). [here](https://github.com/angular/components/blob/master/src/google-maps/map-marker-clusterer/map-marker-clusterer.ts#L452)\r\n\r\nAlso I would definitely recommend to directly import the lib `@googlemaps/markerclustererplus` in the component. It would avoid this kind of typos and would improve devX.\r\nIt could be an `optionalDependencies` and have its own module to avoid errors when importing the `GoogleMapsModule`","Url":"https://github.com/angular/components/issues/21418","RelatedDescription":"Open issue \"bug(map-market-cluster): Typos + import @googlemaps/marketclusterplus\" (#21418)"},{"Id":"772650068","IsPullRequest":true,"CreatedAt":"2020-12-22T05:23:56","Actor":"annieyw","Number":"21417","RawContent":null,"Title":"docs(material/progress-bar): add harness example for progress bar","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21417","RelatedDescription":"Open PR \"docs(material/progress-bar): add harness example for progress bar\" (#21417)"},{"Id":"772645158","IsPullRequest":true,"CreatedAt":"2020-12-22T05:11:42","Actor":"annieyw","Number":"21416","RawContent":null,"Title":"docs(material/input): add harness example for input","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21416","RelatedDescription":"Open PR \"docs(material/input): add harness example for input\" (#21416)"},{"Id":"772338599","IsPullRequest":true,"CreatedAt":"2020-12-21T17:22:28","Actor":"POFerro","Number":"21415","RawContent":null,"Title":"fix(cdk/tree): add missing generic types to trackBy Fixes (#21364)","State":"open","Body":"This PR is my sugestion to correct: #21364 ","Url":"https://github.com/angular/components/pull/21415","RelatedDescription":"Open PR \"fix(cdk/tree): add missing generic types to trackBy Fixes (#21364)\" (#21415)"},{"Id":"772332643","IsPullRequest":false,"CreatedAt":"2020-12-21T17:13:39","Actor":"Araknos","Number":"21414","RawContent":null,"Title":"help(Dialog): 100% height on body element causing issues","State":"open","Body":"I have an issue with Dialog component from Material similar to https://github.com/angular/material/issues/681\r\n\r\nWhen opening a dialog with\r\n\r\n```\r\nhtml, body {\r\n    height: 100%;\r\n}\r\n```\r\n\r\nA second scrollbar appears and the background screen is buggy (going under my footer, out of the screen).\r\n\r\nThis answer https://github.com/angular/material/issues/681#issuecomment-86023189 fixed my bug but is this supposed to be resolved ?\r\n\r\n#### Environment\r\n\r\n- Angular: 9\r\n- CDK/Material: 10.2.7\r\n","Url":"https://github.com/angular/components/issues/21414","RelatedDescription":"Open issue \"help(Dialog): 100% height on body element causing issues\" (#21414)"},{"Id":"772317631","IsPullRequest":false,"CreatedAt":"2020-12-21T16:57:32","Actor":"hypocore","Number":"21413","RawContent":null,"Title":"bug(mat-menu): menu gets cut off below the screen if you force it not to close and then filter a list","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: \r\n- https://stackblitz.com/edit/angular-10-material-mat-menu-cutoff-issue-test\r\n\r\nSteps to reproduce:\r\n1. Scroll down until half of the \"8\" is visible\r\n2. There should be just enough room for the menu to open downward\r\n3. Open the menu\r\n4. Click \"Filter less than 6\" in the menu\r\n5. Notice the menu is cutoff at the bottom of the screen\r\n6. If a scroll bar appears on the menu, you have either scrolled down too far or scrolled back up after opening the menu\r\n \r\n \r\n#### Expected Behavior\r\n\r\nA scrollbar appears or the menu repositions itself above the trigger.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nThe menu cuts off options below the bottom of the screen scroll height.\r\n\r\nThis appears to be similar to:\r\nhttps://github.com/angular/components/issues/17477\r\n\r\nThe workaround listed in that bug report does not fix the issue.\r\n\r\nThe menu cut-off issue is much worse if you add a min-height to the menu. The actual requirement I have is to have the menu remain open and not scroll internally. \r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 10.2.4\r\n- CDK/Material: 10.2.7\r\n- Browser(s): \r\nChrome 87.0.4280.88 (Official Build) (64-bit), \r\nFirefox 82.0.3 (64-bit), \r\nEdge 44.18362.449.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/21413","RelatedDescription":"Open issue \"bug(mat-menu): menu gets cut off below the screen if you force it not to close and then filter a list\" (#21413)"},{"Id":"772262630","IsPullRequest":true,"CreatedAt":"2020-12-21T15:43:49","Actor":"MendyBerger","Number":"21412","RawContent":null,"Title":"Minor grammar fix","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21412","RelatedDescription":"Open PR \"Minor grammar fix\" (#21412)"},{"Id":"772111878","IsPullRequest":false,"CreatedAt":"2020-12-21T12:56:13","Actor":"ms-dosx86","Number":"21411","RawContent":null,"Title":"bug(dialog): mat-dialog doesn't close when a navigation happens","State":"closed","Body":"#### Expected Behavior\r\n\r\nA dialog should close when an angular navigation happens\r\n\r\n\r\n#### Actual Behavior\r\n\r\nA dialog closes only when you hit the \"back\" button, but doesn't close when you navigate via `routerLink` or `Router.navigate`. It does make sense, since OverlayRef subscribes to `Location`'s events, not `Router`'s. But what's the point of `closeOnNavigation` option if it doesn't close on angular navigation? I've googled and haven't found an answer to my question, so I'm asking here. Why do you guys use `Location`'s events? It seems like [this code](https://github.com/angular/components/blob/master/src/cdk/overlay/overlay-ref.ts#L153) should look like\r\n```\r\n    if (this._config.disposeOnNavigation) {\r\n      this._locationChanges = this._router.events\r\n        .pipe(filter(event => event instanceof NavigationEnd))\r\n        .subscribe(() => this.dispose());\r\n    }\r\n```\r\n\r\nwhere `this._router` is a `Router`'s instance. But surely you know more than I do, so I just wanna know why it is designed like so.\r\n\r\n#### Environment\r\n\r\n- Angular: 11.0.0\r\n- CDK/Material: 11.0.0\r\n- Browser(s): Google Chrome Version 87.0.4280.88 (Official Build) (x86_64)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS 10.15.7\r\n","Url":"https://github.com/angular/components/issues/21411","RelatedDescription":"Closed issue \"bug(dialog): mat-dialog doesn't close when a navigation happens\" (#21411)"},{"Id":"772101672","IsPullRequest":false,"CreatedAt":"2020-12-21T11:45:28","Actor":"Aivanic","Number":"21410","RawContent":null,"Title":"bug(mat-select): Screen reader announcing item 3 times.","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: \r\nhttps://stackblitz.com/edit/components-issue-wedt81?file=src/app/mat-select.html\r\n\r\nSteps to reproduce:\r\n1.  Focus select\r\n2.  Use arrow keys to select a dropdown option (Dropdown is not expanded).\r\n \r\n#### Expected Behavior\r\nScreen reader announce item only once.\r\n\r\n#### Actual Behavior\r\nScreen reader announce item 3 times.\r\n\r\n#### Environment\r\n\r\n- Angular:  V. 10.1.3\r\n- CDK/Material: V. 10.2.3\r\n- Browser(s): Google Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):  Windows 10\r\n","Url":"https://github.com/angular/components/issues/21410","RelatedDescription":"Open issue \"bug(mat-select): Screen reader announcing item 3 times.\" (#21410)"},{"Id":"771983394","IsPullRequest":true,"CreatedAt":"2020-12-21T08:50:08","Actor":"annieyw","Number":"21409","RawContent":null,"Title":"docs(material/stepper): add harness example for stepper","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21409","RelatedDescription":"Open PR \"docs(material/stepper): add harness example for stepper\" (#21409)"},{"Id":"771858629","IsPullRequest":true,"CreatedAt":"2020-12-21T05:38:25","Actor":"dependabot[bot]","Number":"21407","RawContent":null,"Title":"build: bump @bazel/karma from 2.2.1 to 2.3.2","State":"open","Body":"Bumps [@bazel/karma](https://github.com/bazelbuild/rules_nodejs/tree/HEAD/packages/karma) from 2.2.1 to 2.3.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/releases\">@bazel/karma's releases</a>.</em></p>\n<blockquote>\n<h2>2.3.2</h2>\n<p><strong>Note</strong>: this is likely the last 2.x release of rules_nodejs, we expect 3.0.0 next week.</p>\n<p>To upgrade:</p>\n<pre><code>http_archive(\n    name = &quot;build_bazel_rules_nodejs&quot;,\n    sha256 = &quot;b3521b29c7cb0c47a1a735cce7e7e811a4f80d8e3720cf3a1b624533e4bb7cb6&quot;,\n    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/2.3.2/rules_nodejs-2.3.2.tar.gz&quot;],\n)\n</code></pre>\n<p>and update your <code>@bazel</code>-scoped npm packages to <code>latest</code></p>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> add DeclarationInfo sources from dependencies as inputs to npm_package_bin driven actions (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2353\">#2353</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/85dc132\">85dc132</a>)</li>\n<li><strong>builtin:</strong> give better error when linker runs on Node &lt;10 (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c344401\">c344401</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2304\">#2304</a></li>\n<li><strong>examples:</strong> fix jest example on windows (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/cc04f6c\">cc04f6c</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/1454\">#1454</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>allow running NPM tools from execroot (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2297\">#2297</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/364ac89\">364ac89</a>)</li>\n</ul>\n<h2>2.3.1</h2>\n<p>To upgrade,</p>\n<pre><code>http_archive(\n    name = &quot;build_bazel_rules_nodejs&quot;,\n    sha256 = &quot;121f17d8b421ce72f3376431c3461cd66bfe14de49059edc7bb008d5aebd16be&quot;,\n    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/2.3.1/rules_nodejs-2.3.1.tar.gz&quot;],\n)\n</code></pre>\n<p>and remember to update your <code>@bazel</code>-scoped npm dependencies.</p>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> make linker deterministic when resolving from manifest &amp; fix link_workspace_root with no runfiles (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/8adebda\">8adebda</a>)</li>\n<li>npm_package.pack on Windows should not generate undefined.tgz (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/76c3f51\">76c3f51</a>)</li>\n</ul>\n<h3>Performance Improvements</h3>\n<ul>\n<li><strong>cypress:</strong> pack cypress runfiles into a single tar (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/185c632\">185c632</a>)</li>\n</ul>\n<h2>2.3.0</h2>\n<p>To upgrade,</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/bazelbuild/rules_nodejs/blob/stable/CHANGELOG.md\">@bazel/karma's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.3.1...2.3.2\">2.3.2</a> (2020-12-18)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> add DeclarationInfo sources from dependencies as inputs to npm_package_bin driven actions (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2353\">#2353</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/85dc132\">85dc132</a>)</li>\n<li><strong>builtin:</strong> give better error when linker runs on Node &lt;10 (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/c344401\">c344401</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2304\">#2304</a></li>\n<li><strong>examples:</strong> fix jest example on windows (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/cc04f6c\">cc04f6c</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/1454\">#1454</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>allow running NPM tools from execroot (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2297\">#2297</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/364ac89\">364ac89</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.3.0...2.3.1\">2.3.1</a> (2020-11-24)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>builtin:</strong> make linker deterministic when resolving from manifest &amp; fix link_workspace_root with no runfiles (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/8adebda\">8adebda</a>)</li>\n<li>npm_package.pack on Windows should not generate undefined.tgz (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/76c3f51\">76c3f51</a>)</li>\n</ul>\n<h3>Performance Improvements</h3>\n<ul>\n<li><strong>cypress:</strong> pack cypress runfiles into a single tar (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/185c632\">185c632</a>)</li>\n</ul>\n<h1><a href=\"https://github.com/bazelbuild/rules_nodejs/compare/2.2.2...2.3.0\">2.3.0</a> (2020-11-10)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>typescript:</strong> specify rootDir as absolute path (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/86bef24\">86bef24</a>)</li>\n<li>npm_package.pack should work in windows os (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/bc36519\">bc36519</a>)</li>\n<li><strong>builtin:</strong> give a longer timeout for _create_build_files (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/e72c145\">e72c145</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2231\">#2231</a></li>\n<li><strong>exmaples/nestjs:</strong> add module_name field in ts_library (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/700374a\">700374a</a>)</li>\n<li><strong>typescript:</strong> don't include _valid_options marker file in outs (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/6305db3\">6305db3</a>), closes <a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2078\">#2078</a></li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>cypress:</strong> remove browiserify preprocessor (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/1eeabbe\">1eeabbe</a>)</li>\n<li><strong>examples:</strong> adds example for running jest with typescript (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2245\">#2245</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/3c11800\">3c11800</a>)</li>\n<li><strong>node_repositories:</strong> Added auth option for downloading nodejs and yarn (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/51de4e0\">51de4e0</a>)</li>\n<li><strong>typescript:</strong> add allow_js support to ts_project (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/12571ee\">12571ee</a>)</li>\n<li><strong>typescript:</strong> worker mode for ts_project (<a href=\"https://github-redirect.dependabot.com/bazelbuild/rules_nodejs/issues/2136\">#2136</a>) (<a href=\"https://github.com/bazelbuild/rules_nodejs/commit/9663b85\">9663b85</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/bazelbuild/rules_nodejs/commit/9a50cb694e39fba8874f991675ae7ca585108df5\"><code>9a50cb6</code></a> chore(karma): remove dependency on tmp</li>\n<li><a href=\"https://github.com/bazelbuild/rules_nodejs/commit/af9feb4f658d9ed6300eb5296cdd3f86038f6201\"><code>af9feb4</code></a> feat(karma): use Trusted Types policy when loading scripts for Karma</li>\n<li>See full diff in <a href=\"https://github.com/bazelbuild/rules_nodejs/commits/2.3.2/packages/karma\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@bazel/karma&package-manager=npm_and_yarn&previous-version=2.2.1&new-version=2.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","Url":"https://github.com/angular/components/pull/21407","RelatedDescription":"Open PR \"build: bump @bazel/karma from 2.2.1 to 2.3.2\" (#21407)"},{"Id":"771817765","IsPullRequest":true,"CreatedAt":"2020-12-21T04:04:52","Actor":"annieyw","Number":"21406","RawContent":null,"Title":"docs(material/icon): add harness example for icon","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21406","RelatedDescription":"Open PR \"docs(material/icon): add harness example for icon\" (#21406)"},{"Id":"771802450","IsPullRequest":true,"CreatedAt":"2020-12-21T03:18:13","Actor":"annieyw","Number":"21405","RawContent":null,"Title":"docs(material/table): add harness example for table","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21405","RelatedDescription":"Open PR \"docs(material/table): add harness example for table\" (#21405)"},{"Id":"771783534","IsPullRequest":true,"CreatedAt":"2020-12-21T02:17:09","Actor":"annieyw","Number":"21404","RawContent":null,"Title":"docs(material/tabs): add harness example for tabs","State":"open","Body":"","Url":"https://github.com/angular/components/pull/21404","RelatedDescription":"Open PR \"docs(material/tabs): add harness example for tabs\" (#21404)"},{"Id":"771612000","IsPullRequest":true,"CreatedAt":"2020-12-20T15:27:04","Actor":"crisbeto","Number":"21403","RawContent":null,"Title":"fix(material/table): increase specificity on sticky selector","State":"open","Body":"The sticky styles were switched to a class in #19823 which has a very low specificity. As a result, there's a high chance of it being overwritten by some user styles.\r\n\r\nThese changes use `!important` so that we get a similar specificity as when the styles were being set inline before #19823.\r\n\r\nFixes #20558.\r\n\r\ncc @kseamon ","Url":"https://github.com/angular/components/pull/21403","RelatedDescription":"Open PR \"fix(material/table): increase specificity on sticky selector\" (#21403)"},{"Id":"771565496","IsPullRequest":true,"CreatedAt":"2020-12-20T11:11:45","Actor":"crisbeto","Number":"21402","RawContent":null,"Title":"fix(material/tabs): strong focus indicator not visible when tab header has a background","State":"open","Body":"`mat-tab-group` has the ability to theme both the foreground and background. When the background color is different from the default, the strong focus indicator blends into it, making it invisible.\r\n\r\nThese changes invert the color of the indicator so it stands out.\r\n\r\ncc @zelliott ","Url":"https://github.com/angular/components/pull/21402","RelatedDescription":"Open PR \"fix(material/tabs): strong focus indicator not visible when tab header has a background\" (#21402)"},{"Id":"771556338","IsPullRequest":true,"CreatedAt":"2020-12-20T10:13:17","Actor":"crisbeto","Number":"21401","RawContent":null,"Title":"feat(youtube-player): add config option to automatically load the YouTube API","State":"open","Body":"Adds a new injection token that allows the `YouTubePlayer` to automatically load the API, instead of depending on it to be loaded by the consumer.\r\n\r\nFixes #17037.","Url":"https://github.com/angular/components/pull/21401","RelatedDescription":"Open PR \"feat(youtube-player): add config option to automatically load the YouTube API\" (#21401)"},{"Id":"771545020","IsPullRequest":true,"CreatedAt":"2020-12-20T08:59:39","Actor":"crisbeto","Number":"21400","RawContent":null,"Title":"feat(cdk/drag-drop): support configurable scroll speed","State":"open","Body":"Adds the ability for the scrolling speed of a drop list to be configured.\r\n\r\nFixes #19401.","Url":"https://github.com/angular/components/pull/21400","RelatedDescription":"Open PR \"feat(cdk/drag-drop): support configurable scroll speed\" (#21400)"},{"Id":"771168520","IsPullRequest":false,"CreatedAt":"2020-12-19T18:33:10","Actor":"WaterLion-Be","Number":"21396","RawContent":null,"Title":"bug(datepicker) : The callback on matDatepickerFilter does not receive a Date, but an object like { _d: Date , ...}","State":"closed","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: \r\nTo reproduce : https://stackblitz.com/edit/angular-ivy-yeydki\r\n\r\nSteps to reproduce:\r\n1. Create a project containing a Datapicker with matDatepickerFilter\r\n\r\nnpm install @angular/material @angular/cdk\r\nnpm install @angular/animations\r\nnpm install hammerjs\r\nnpm install moment\r\nnpm install @angular/material-moment-adapter\r\n \r\n#### Expected Behavior\r\n\r\nContinue to receive a (Date | null) in matDatepickerFilter callback.\r\n\r\n#### Actual Behavior\r\n\r\nReceiving an object like \r\n`Object { _isAMomentObject: true, _i: {…}, _isUTC: false, _pf: {…}, _locale: {…}, _d: Date Thu Dec 24 2020 00:00:00 GMT+0100 (heure normale d’Europe centrale), _isValid: true }`\r\n(You can see it in a browser console (not in the StackBlitz console))\r\n\r\n#### Environment\r\n\r\n- Angular: 11.0.5\r\n- CDK/Material: 11.0.3 / 11.0.3\r\n- Browser(s): FireFox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/21396","RelatedDescription":"Closed issue \"bug(datepicker) : The callback on matDatepickerFilter does not receive a Date, but an object like { _d: Date , ...}\" (#21396)"},{"Id":"771404441","IsPullRequest":true,"CreatedAt":"2020-12-19T15:51:11","Actor":"crisbeto","Number":"21399","RawContent":null,"Title":"fix(material/datepicker): unable to distinguish disabled calendar cells in high contrast mode","State":"open","Body":"Fixes that users in high contrast mode aren't able to distinguish between enabled and disabled calendar cells.","Url":"https://github.com/angular/components/pull/21399","RelatedDescription":"Open PR \"fix(material/datepicker): unable to distinguish disabled calendar cells in high contrast mode\" (#21399)"},{"Id":"771397236","IsPullRequest":true,"CreatedAt":"2020-12-19T15:06:38","Actor":"crisbeto","Number":"21398","RawContent":null,"Title":"build: fix not being able to test MDC density in RTL","State":"open","Body":"Our dev app is set up so that the density styles are set on the `body` while the `dir` is set only around the content. The problem is that MDC's mixins output density styles for RTL in the format `[dir='rtl'] .density .foo` which means that the directionality has to be a level above the density class or we won't get an accurate representation of how the components look. This threw me off for a while earlier today, because I noticed that the MDC slide toggle didn't behave correctly in RTL.\r\n\r\nThese changes fix the issue by moving the `dir` a level up and applying the density class in a couple of places.","Url":"https://github.com/angular/components/pull/21398","RelatedDescription":"Open PR \"build: fix not being able to test MDC density in RTL\" (#21398)"},{"Id":"771383529","IsPullRequest":true,"CreatedAt":"2020-12-19T13:43:34","Actor":"crisbeto","Number":"21397","RawContent":null,"Title":"fix(material/autocomplete): not closing when clicking outside using auxilliary button","State":"open","Body":"Fixes that the autocomplete panel doesn't close when the user presses outside using the middle or right mouse button.","Url":"https://github.com/angular/components/pull/21397","RelatedDescription":"Open PR \"fix(material/autocomplete): not closing when clicking outside using auxilliary button\" (#21397)"},{"Id":"771145785","IsPullRequest":true,"CreatedAt":"2020-12-18T20:17:57","Actor":"DuncanFaulkner","Number":"21395","RawContent":null,"Title":"docs(material/slider): updated slider documentation.","State":"open","Body":"In the tick marks section of the slider the word between is repeated.","Url":"https://github.com/angular/components/pull/21395","RelatedDescription":"Open PR \"docs(material/slider): updated slider documentation.\" (#21395)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-23T05:30:05.4738351Z","RunDurationInMilliseconds":3028}