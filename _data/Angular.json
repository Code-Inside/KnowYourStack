{"Data":{"Angular-Issues":{"Issues":[{"Id":"2582406556","IsPullRequest":true,"CreatedAt":"2024-10-12T01:54:54","Actor":"dgp1130","Number":"58176","RawContent":null,"Title":"refactor(compiler): trim expression whitespace when `preserveSignificantWhitespace === false`","State":"open","Body":"This PR trims whitespace in expressions when `preserveSignificantWhitespace === false`. This allows messages to be a bit more durable to insignificant whitespace changes. For example, reformatting the following:\r\n\r\n```html\r\n<div i18n>Hello, {{ name }}!</div>\r\n```\r\n\r\nInto:\r\n\r\n```html\r\n<div i18n>Hello, {{\r\n  name\r\n}}!</div>\r\n```\r\n\r\nIs a whitespace-only change which has no visible effect to translators. Therefore we trim whitespace before extracting messages and normalize it to a standard format (`{{name}}`).\r\n\r\nThis PR also removes the functionality for ignoring placeholder expressions entirely (originally added as part of dab722f9c899d775bb886a1d5beb5970f79c4cd8). Ideally, we wouldn't take placeholders into account at all, since whether an expression is `{{foo}}` or `{{bar}}` is also irrelevant to the translator. However doing so causes some challenges with TC, so we can't go that far just yet (see http://b/367255149#comment10). Therefore this PR rolls back that particular feature and replaces it with this one which trims expression whitespace instead.","Url":"https://github.com/angular/angular/pull/58176","RelatedDescription":"Open PR \"refactor(compiler): trim expression whitespace when `preserveSignificantWhitespace === false`\" (#58176)"},{"Id":"2582392320","IsPullRequest":true,"CreatedAt":"2024-10-12T01:22:11","Actor":"JeanMeche","Number":"58175","RawContent":null,"Title":"refactor(compiler-cli): Prepare the compiler to flip the default standalone value. ","State":"open","Body":"On top of #58169\r\n\r\nThis is mainly a refactor to prepare the repo to flip the change and ease the landing into G3. ","Url":"https://github.com/angular/angular/pull/58175","RelatedDescription":"Open PR \"refactor(compiler-cli): Prepare the compiler to flip the default standalone value. \" (#58175)"},{"Id":"2582346054","IsPullRequest":true,"CreatedAt":"2024-10-11T23:50:07","Actor":"arturovt","Number":"58174","RawContent":null,"Title":"fix(core): clean up event contract once hydration is done","State":"open","Body":"In this commit, we also clean up the event contract once the hydration is done, as this removes event listeners registered through the container manager, since listeners registered on the `document.body` are never removed.","Url":"https://github.com/angular/angular/pull/58174","RelatedDescription":"Open PR \"fix(core): clean up event contract once hydration is done\" (#58174)"},{"Id":"2582186953","IsPullRequest":true,"CreatedAt":"2024-10-11T21:05:41","Actor":"clydin","Number":"58173","RawContent":null,"Title":"Adjust HMR initializer code","State":"open","Body":"**refactor(compiler): support generating URL expressions with dynamic imports**\r\nThe compiler's AST factories now support generating a dynamic import call\r\nexpression with either a string literal or an expression. The later is useful\r\nfor cases where the URL is dynamically created at runtime. Also, a leading\r\ncomment can now be added to the URL for cases where bundler behavior\r\nneeds to be included via special comments.\r\n\r\n**refactor(compiler): adjust HMR initializer block for improved Vite support**\r\nFor the HMR initializer block to support being used in a Vite setup with\r\nimport analysis, the import call expression needs to be a runtime generated\r\nvalue and include the `@vite-ignore` special comment. Without the first,\r\nVite will error prior to loading the application. Without the second, a\r\nwarning will be shown for each import which is effectively each component\r\nwithin the application when HMR is enabled.","Url":"https://github.com/angular/angular/pull/58173","RelatedDescription":"Open PR \"Adjust HMR initializer code\" (#58173)"},{"Id":"2582133965","IsPullRequest":false,"CreatedAt":"2024-10-11T20:27:25","Actor":"willemtoerien","Number":"58172","RawContent":null,"Title":"Animations not working for ViewEncapsulation.ShadowDom.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations\n\n### Is this a regression?\n\nNo\n\n### Description\n\n# Current behavior\n\nAnimations won't work for components that has encapsulation set to ShadowDom, or if rendered within a component that has encapsulation set to ShadowDom.\n\n# Expected behavior\n\nAnimations should work regardless of the encapsulation and regardless for both the component and the component that it is rendering it.\n\nYou'll see that the animations won't work. Now if you remove the encapsulation for both, you'll see that the animations works.\n\n# Reproduce\n\n## ShadowDom component\n\nTo reproduce, make a new angular project and create this component[1]. You'll see the animations won't work. Remove the encapsulation, then it works.\n\n## ShadowDom rendering component\n\nCreate another component with animations and change the template to use that component. You'll see no animations working.\n\n[1]\n```typescript\nimport { state, style, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, HostListener, signal, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.ShadowDom,\n  template: `<span>Click Me!</span>`,\n  host: {\n    '[@active]': 'active()',\n  },\n  animations: [\n    trigger('active', [\n      state('true', style({ backgroundColor: 'red' })),\n      state('false', style({ backgroundColor: 'blue' })),\n    ]),\n  ],\n})\nexport class AppButton {\n  readonly active = signal(false);\n\n  @HostListener('click')\n  onClick() {\n    this.active.set(!this.active());\n  }\n}\n```\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.6\nNode: 22.9.0\nPackage Manager: npm 10.2.5\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.6 (cli-only)\n@angular-devkit/core         18.2.6 (cli-only)\n@angular-devkit/schematics   18.2.6 (cli-only)\n@schematics/angular          18.2.6 (cli-only)\n\n### Anything else?\n\nI see there was a similar issue, https://github.com/angular/angular/issues/25672, and it was closed. This may be related.\n\nI really don't want to create my own animator directive that observes a signal and runs .animate on the element, but without this, I would have to.","Url":"https://github.com/angular/angular/issues/58172","RelatedDescription":"Open issue \"Animations not working for ViewEncapsulation.ShadowDom.\" (#58172)"},{"Id":"2581996761","IsPullRequest":true,"CreatedAt":"2024-10-11T18:52:22","Actor":"huwyca","Number":"58171","RawContent":null,"Title":"fix(core): Clear lView from IcuIteratorState when stack is empty to prevent memory leak","State":"open","Body":"If a component template contains an icu expression, it can being retained until the next change detection cycle for that template section. This results in a net retention of only ever a single copy of the given lView but that creates an opportunity for compounding leaks.\r\n\r\nChange the icu i18n_icu_container_visitor to free the IcuIteratorState retained lView when the stack is empty so that garbage collection can occur when the view is discarded.\r\n\r\nI didn't see an existing test file for the icu iterator validation so wasn't sure where to put a test case to verify the new behavior regarding the IcuIteratorState.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nComponent templates with i18n icu expressions are retaining the lView until change detection is run again on that template. This is due to the `IcuIteratorState` establishing a reference to the corresponding lView and then not releasing it when the stack is empty.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe IcuIteratorState clears the lView property retainer when the iterator stack is empty. This allows the components to be garbage collected when the component/lView is discarded.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58171","RelatedDescription":"Open PR \"fix(core): Clear lView from IcuIteratorState when stack is empty to prevent memory leak\" (#58171)"},{"Id":"2581428778","IsPullRequest":true,"CreatedAt":"2024-10-11T17:47:21","Actor":"meenachan","Number":"58166","RawContent":null,"Title":"fix(directive): add optional autoUniqueId property","State":"closed","Body":"Add an optional `autoUniqueId` boolean property to the directive interface to enhance flexibility in directive instantiation.\r\n\r\nFixes #55062\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently, the directive interface does not support the flexibility to generate unique IDs automatically, which limits its usability in certain scenarios.\r\nIssue Number: #55062\r\n\r\n\r\n## What is the new behavior?\r\nThis PR introduces an optional autoUniqueId boolean property to the directive interface. When set to true, it enables the directive to automatically generate a unique ID for each instance, enhancing flexibility during instantiation.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58166","RelatedDescription":"Closed or merged PR \"fix(directive): add optional autoUniqueId property\" (#58166)"},{"Id":"2581739288","IsPullRequest":true,"CreatedAt":"2024-10-11T16:13:55","Actor":"Ismaestro","Number":"58170","RawContent":null,"Title":"docs: update two-way-binding page","State":"open","Body":"Replace Output() decorator usage with the new output function.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nNow the two-way-binding page is using the @Output() decorator style in all the examples.\r\n\r\n## What is the new behavior?\r\nThe documentation uses the new output function.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58170","RelatedDescription":"Open PR \"docs: update two-way-binding page\" (#58170)"},{"Id":"2581553531","IsPullRequest":true,"CreatedAt":"2024-10-11T14:42:54","Actor":"JeanMeche","Number":"58169","RawContent":null,"Title":"feat(compiler-cli): Adapt the compiler to use standalone by default. ","State":"open","Body":"On top of #58160 & #58175\r\n\r\nThis PR flips the default for standalone from `false` to `true` for components, directives and pipes. \r\nThis PR also includes the necessary changes for the impacted tests as well as other targets that dependens on them (adev, benchmarks etc). ","Url":"https://github.com/angular/angular/pull/58169","RelatedDescription":"Open PR \"feat(compiler-cli): Adapt the compiler to use standalone by default. \" (#58169)"},{"Id":"2579868226","IsPullRequest":false,"CreatedAt":"2024-10-11T14:41:01","Actor":"Blackbaud-PaulCrowder","Number":"58153","RawContent":null,"Title":"View encapsulation no longer handles `:is()` and `:not()` consistently","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAs of [this change](https://github.com/angular/angular/commit/7a6fd427d5ad70ad4c50693f54a6e77bf51eea86) that was released in Angular 18.2.8, inner selectors of `:is()` are now scoped for view encapsulation. This broke a Sass mixin my team wrote that worked regardless of whether view encapsulation was enabled. We added branching logic to our mixin to work around this, but while troubleshooting we noticed that `:not()` still does not scope inner selectors, leading to inconsistencies between the two otherwise very similar pseudo-classes.\n\nThis Stackblitz exhibits the [old behavior](https://stackblitz.com/edit/angular-vnauyk-4tulmw?file=src%2Fapp%2Fdemo.component.ts) and this Stackblitz exhibits the [new behavior](https://stackblitz.com/edit/angular-vnauyk-98uu1x?file=src%2Fapp%2Fdemo.component.ts).\n\nMy main concern is less about whether the change to `:is()` is appropriate and more about whether `:not()` is going to change at a later date, especially in a patch release which will result in another breaking change for my team.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-vnauyk-98uu1x?file=src%2Fapp%2Fdemo.component.ts\n\n### Please provide the exception or error you saw\n\nN/A\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.8\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.8\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58153","RelatedDescription":"Closed issue \"View encapsulation no longer handles `:is()` and `:not()` consistently\" (#58153)"},{"Id":"2581080442","IsPullRequest":true,"CreatedAt":"2024-10-11T14:07:37","Actor":"devversion","Number":"58162","RawContent":null,"Title":"ci: disable bazel-saucelabs job","State":"closed","Body":"Disables the `bazel-saucelabs` job in `main`, and re-uses the PR legacy saucelabs job to run on `main` instead (which is much more stable and reliable).","Url":"https://github.com/angular/angular/pull/58162","RelatedDescription":"Closed or merged PR \"ci: disable bazel-saucelabs job\" (#58162)"},{"Id":"2581473882","IsPullRequest":true,"CreatedAt":"2024-10-11T14:06:56","Actor":"devversion","Number":"58168","RawContent":null,"Title":"Various improvements for queries migration","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/58168","RelatedDescription":"Open PR \"Various improvements for queries migration\" (#58168)"},{"Id":"2581462624","IsPullRequest":false,"CreatedAt":"2024-10-11T14:01:12","Actor":"BenRacicot","Number":"58167","RawContent":null,"Title":"Components used with attribute selector are not recognized by the language service","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlanguage-service\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI've noticed for some time now that within VSC the language service is hit or miss on recognizing the bindings of components used with an attribute selector. \n\n- However, some use-case scenarios with the same setup are recognized. \n- **In all cases the application builds without error.**\n\nHere is my latest example\n```\n<li\n  lib-tag\n  [ngClass]=\"{ 'border-watermelon-6': match?.skills?.includes(tag?.id) }\"\n  [iconLeft]=\"match?.skills?.includes(tag?.id) ? 'check-circle' : ''\"   <-- Can't bind to 'iconLeft' since it isn't a known property of 'li'\n  [name]=\"tag?.name\" <-- Can't bind to 'name' since it isn't a known property of 'li'\n></li>\n```\n\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\nCan't bind to 'iconLeft' since it isn't a known property of 'li'\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\nNode v22.9.0\nAngular * 18.2.8","Url":"https://github.com/angular/angular/issues/58167","RelatedDescription":"Open issue \"Components used with attribute selector are not recognized by the language service\" (#58167)"},{"Id":"2580970135","IsPullRequest":false,"CreatedAt":"2024-10-11T13:55:19","Actor":"muuvmuuv","Number":"58158","RawContent":null,"Title":"NG8113: unusedStandaloneImports using Component host-elements","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAngular 19.next extended diagnostic for unused standalone imports does not respect component host-elements. As suggested here and in best-practises: https://next.angular.dev/guide/components/host-elements.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n```ts\n@Component({\n  selector: 'app-dialog-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['../dialog-shared.scss', './info.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [DialogHeaderComponent, DialogBodyComponent, CdkTrapFocus],\n  host: {\n    role: 'dialog',\n    'aria-modal': 'true',\n    tabindex: '-1',\n    cdkTrapFocus: 'true',\n  },\n})\n```\n\n### Please provide the exception or error you saw\n\n```\nWarning: src/app/components/dialog/info/info.component.ts:17:12 - warning NG8113: Imports array contains unused imports\n\n17   imports: [DialogHeaderComponent, DialogBodyComponent, CdkTrapFocus],\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  src/app/components/dialog/info/info.component.ts:17:57\n    17   imports: [DialogHeaderComponent, DialogBodyComponent, CdkTrapFocus],\n                                                               ~~~~~~~~~~~~\n    Directive \"CdkTrapFocus\" is not used within the template\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```\nAngular CLI: 19.0.0-next.10\nNode: 22.9.0\nPackage Manager: pnpm 9.12.0\nOS: darwin arm64\n\nAngular: 19.0.0-next.9\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-next.10\n@angular-devkit/build-angular   19.0.0-next.10\n@angular-devkit/core            19.0.0-next.10\n@angular-devkit/schematics      19.0.0-next.10\n@angular/build                  19.0.0-next.10\n@angular/cdk                    19.0.0-next.8\n@angular/cli                    19.0.0-next.10\n@angular/material               19.0.0-next.8\n@schematics/angular             19.0.0-next.10\nrxjs                            7.8.1\ntypescript                      5.5.4\nwebpack                         5.95.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58158","RelatedDescription":"Closed issue \"NG8113: unusedStandaloneImports using Component host-elements\" (#58158)"},{"Id":"2581427343","IsPullRequest":false,"CreatedAt":"2024-10-11T13:46:56","Actor":"szendezsombor","Number":"58165","RawContent":null,"Title":"Generic constant type calculations","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have an issue with the generic version of the structural directive I add a constant to a generic typed input but it sometimes breaks and sometimes not, the webstorm also mark it sometimes okay and sometimes not good. The required funcionality is to calculate the input types correctly based on the basic input.\nI have the following simple example scenario created only for this:\n\n`sandbox.type.ts`\n```ts\nimport {sandboxConstant} from './sandbox.constant';\n\nexport type SomeFunctionWithNumberInput = (data: number) => {[count: string]: string};\nexport type GenericFunctionWithObjectExtend<T extends {[key: string]: string}> = (data: T) => string;\nexport type ObjectValue = string | GenericFunctionWithObjectExtend<never> | SomeFunctionWithNumberInput;\nexport type ObjectWithSpecifiedTypes = {[key: string]: ObjectWithSpecifiedTypes | ObjectValue};\n\n// Specified pattern\nexport type ObjectWithSpecifiedTypesVariant = {\n  regularKey: ObjectValue;\n  genericKey: ObjectValue;\n  numberKey: ObjectValue;\n};\n\nexport type ArgumentOfPropertyFunction<T extends ObjectWithSpecifiedTypes, K extends keyof T> = T[K] extends infer Z\n  ? Z extends GenericFunctionWithObjectExtend<infer G>\n    ? G\n    : Z extends SomeFunctionWithNumberInput\n      ? number\n      : never\n  : never;\n\nconst genericKeyType: ArgumentOfPropertyFunction<typeof sandboxConstant, 'genericKey'> = {g1: 'g1', g2: 'g2'}; // {g1: 'g1', g2: 'g2'}\nconst numberKeyType: ArgumentOfPropertyFunction<typeof sandboxConstant, 'numberKey'> = 1; // number\nlet _regularKeyType: ArgumentOfPropertyFunction<typeof sandboxConstant, 'regularKey'>; // never\nconsole.log(genericKeyType, numberKeyType);\n```\n\n---\n\n`sandbox.constant.ts`\n```ts\nimport {ObjectWithSpecifiedTypes} from './sandbox.type';\n\nexport const sandboxConstant = {\n  regularKey: 'regularKey',\n  genericKey: <T extends {g1: string; g2: string}>({g1, g2}: T) => `${g1} ${g2}`,\n  numberKey: (data: number) => ({count: `${data}`}),\n} as const satisfies ObjectWithSpecifiedTypes;\n```\n\n---\n\n`sandbox.component.html`\n```html\n<!-- NG2: Type '{ g1: string; g2: string; }' is not assignable to type 'undefined' -->\n<input *axoSandbox=\"sandboxConstant; regularKey { g1: 'a', g2: 'a' }\" type=\"text\">\n```\n\n---\n\n`sandbox.directive.ts`\n```ts\nimport {Directive, input, OnInit, Optional, TemplateRef} from '@angular/core';\n\nimport {ArgumentOfPropertyFunction, ObjectWithSpecifiedTypesVariant} from './sandbox.type';\n\n@Directive({\n  selector: '[axoSandbox]',\n  standalone: true,\n})\nexport class DocsTooltipDirective<T extends ObjectWithSpecifiedTypesVariant> implements OnInit {\n  axoSandbox = input.required<T>();\n  axoSandboxRegularKey = input<ArgumentOfPropertyFunction<T, 'regularKey'>>();  // Sometimes undefined sometimes {g1: 'g1', g2: 'g2'}\n  // axoSandboxNumberKey = input<ArgumentOfPropertyFunction<T, 'numberKey'>>();\n\n  constructor(@Optional() private readonly templateRef: TemplateRef<unknown>) {}\n\n  ngOnInit(): void {\n    if (!this.templateRef) return;\n    // Some business logic here\n    console.log(this.axoSandbox().genericKey);\n  }\n}\n````\n\n---\n\n`sandbox.component.ts`\n```ts\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\n\nimport {sandboxConstant} from './sandbox.constant';\nimport {DocsTooltipDirective} from './sandbox.directive';\n\n@Component({\n  selector: 'axo-sandbox',\n  templateUrl: './sandbox.component.html',\n  imports: [DocsTooltipDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class SandboxComponent {\n  sandboxConstant = sandboxConstant;\n}\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nIt is provided inside the description\n\n### Please provide the exception or error you saw\n\n✘ [ERROR] NG2: Type '{ g1: string; g2: string; }' is not assignable to type 'undefined'. [plugin angular-compiler]\n\n    libs/hosts/detailed-view/src/lib/tabs/sandbox/sandbox.component.html:6:37:\n      6 │ ...oSandbox=\"sandboxConstant; regularKey { g1: 'a', g2: 'a' }\" type...\n        ╵                               ~~~~~~~~~~\n\n  Error occurs in the template of component SandboxComponent.\n\n    libs/hosts/detailed-view/src/lib/tabs/sandbox/sandbox.component.ts:13:15:\n      13 │   templateUrl: './sandbox.component.html',\n         ╵                ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n    \"@angular/animations\": \"18.0.6\",\n    \"@angular/cdk\": \"18.0.6\",\n    \"@angular/common\": \"18.0.6\",\n    \"@angular/core\": \"18.0.6\",\n    \"@angular/forms\": \"18.0.6\",\n    \"@angular/material\": \"18.0.6\",\n    \"@angular/platform-browser\": \"18.0.6\",\n    \"@angular/platform-browser-dynamic\": \"18.0.6\",\n    \"@angular/router\": \"18.0.6\",\n    \"rxjs\": \"^7.8.1\",\n    \"typescript\": \"~5.4.0\"\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58165","RelatedDescription":"Open issue \"Generic constant type calculations\" (#58165)"},{"Id":"2581271968","IsPullRequest":true,"CreatedAt":"2024-10-11T12:31:42","Actor":"arturovt","Number":"58164","RawContent":null,"Title":"refactor(docs-infra): allow home editor to be cleaned up properly","State":"open","Body":"In this commit, we're replacing the `async-await` style in the `home-editor` component with the `from()` observable, which allows us to invert a dependency and avoid memory leaks. Because an `async` function has a closure, just like any other function in JavaScript, using `await` captures `this` until the promise is resolved.","Url":"https://github.com/angular/angular/pull/58164","RelatedDescription":"Open PR \"refactor(docs-infra): allow home editor to be cleaned up properly\" (#58164)"},{"Id":"2581043460","IsPullRequest":true,"CreatedAt":"2024-10-11T11:29:06","Actor":"angular-robot","Number":"58161","RawContent":null,"Title":"docs: update Angular CLI help [17.3.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/58161","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [17.3.x]\" (#58161)"},{"Id":"2579362297","IsPullRequest":true,"CreatedAt":"2024-10-11T11:23:39","Actor":"devversion","Number":"58152","RawContent":null,"Title":"refactor(migrations): assign incompatibility reasons for query migration","State":"closed","Body":"Instead of skipping queries without any reasoning, we should categorize fields that couldn't be migrated. This is also important for the VSCode integration— similar to how it's done with the inputs migration.\r\n\r\nWe are fully sharing the problematic pattern detection etc. This means we are also sharing the enum. Not super ideal, but enables the best sharing of code.","Url":"https://github.com/angular/angular/pull/58152","RelatedDescription":"Closed or merged PR \"refactor(migrations): assign incompatibility reasons for query migration\" (#58152)"},{"Id":"2581082450","IsPullRequest":false,"CreatedAt":"2024-10-11T10:57:29","Actor":"e-oz","Number":"58163","RawContent":null,"Title":"`@defer (on interaction(element))` doesn't trigger when inside ng-template","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen `@defer` is inside an ng-template, `on interaction(element)` doesn't trigger at all, and `on hover(element)` triggers on the second event.\n\n```html\n<button #btn (click)=\"toggle()\">Menu Button</button>\n    <ng-template #tpl>\n      @defer(on interaction(btn)) {\n        <div>On interaction</div>\n      }\n      @defer(on idle) {\n        <div>On idle</div>\n      }\n      @defer(on hover(btn)) {\n        <div>On hover</div>\n      }\n      @defer(on viewport(btn)) {\n        <div>On viewport</div>\n      }\n    </ng-template>\n\n    @if ($show()) {\n      <ng-container *ngTemplateOutlet=\"tpl\"/>\n    }\n```\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-s2z6n2?file=src%2Fmain.ts\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nPlease see the versions here:\nhttps://stackblitz.com/edit/stackblitz-starters-s2z6n2?file=package.json\n","Url":"https://github.com/angular/angular/issues/58163","RelatedDescription":"Open issue \"`@defer (on interaction(element))` doesn't trigger when inside ng-template\" (#58163)"},{"Id":"2581035979","IsPullRequest":true,"CreatedAt":"2024-10-11T10:55:10","Actor":"devversion","Number":"58159","RawContent":null,"Title":"ci: disable bazel-saucelabs job","State":"closed","Body":"Disables the `bazel-saucelabs` job in `main`, and re-uses the PR legacy saucelabs job to run on `main` instead (which is much more stable and reliable).","Url":"https://github.com/angular/angular/pull/58159","RelatedDescription":"Closed or merged PR \"ci: disable bazel-saucelabs job\" (#58159)"},{"Id":"2580195550","IsPullRequest":true,"CreatedAt":"2024-10-11T10:37:59","Actor":"angular-robot","Number":"58155","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to 583fc8c","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `7bceee9` -> `583fc8c` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTYuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58155","RelatedDescription":"Closed or merged PR \"build: update io_bazel_rules_sass digest to 583fc8c\" (#58155)"},{"Id":"2581037005","IsPullRequest":true,"CreatedAt":"2024-10-11T10:37:12","Actor":"JeanMeche","Number":"58160","RawContent":null,"Title":"refactor(core): `standalone: false`","State":"open","Body":"1st step to migrate the repo to enable standalone by default: Prepare the codebase to recieve the change by setting `standalone: false` on NgModule declared components. ","Url":"https://github.com/angular/angular/pull/58160","RelatedDescription":"Open PR \"refactor(core): `standalone: false`\" (#58160)"},{"Id":"2580768957","IsPullRequest":false,"CreatedAt":"2024-10-11T08:24:36","Actor":"TCB13","Number":"58157","RawContent":null,"Title":"Router unnecessarily waits for child resolvers before building parent component","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nLike described before at https://github.com/angular/angular/issues/14064\n\nThe router rendering process is synchronous, so all guards and resolvers are run before that process begins. Guards and resolvers are blocking actions which is why your **deep child route holds up the entire rendering until its complete**.\n\nThe current state of things render Resolvers useless if you have something that may take a few seconds to load in a child component that has its own resolver.\n\n**Simple use case for this:**\n```\nYour Account Page\n    > Your Orders\n```\nI want 'Your Account' to display while orders are loading. Orders may take 5 seconds to load but the user should be able to see the rest of the information on the 'Your Account' page.\n\n### Proposed solution\n\nA child route with a resolver should NOT block a parent from rendering. Parents should be rendered as soon as they are resolved.\n\nAllow the router to work in a non-synchronous way and eagerly load what routes it can and their respective components. This can be a configurable option in order to avoid breaking solutions that depend on the current behavior.\n\n### Alternatives considered\n\n- Workarounds like using ngIf on the router have other undesirable side effects such as \"Expression Changed After Checked\".\n\nThank you.\n","Url":"https://github.com/angular/angular/issues/58157","RelatedDescription":"Open issue \"Router unnecessarily waits for child resolvers before building parent component\" (#58157)"},{"Id":"2578609182","IsPullRequest":true,"CreatedAt":"2024-10-11T07:04:42","Actor":"crisbeto","Number":"58148","RawContent":null,"Title":"refactor(core): add internal utility to resolve the component name of a node","State":"closed","Body":"Adds a utility, meant for internal consumption, that will return the class name of the closest component node to an element.","Url":"https://github.com/angular/angular/pull/58148","RelatedDescription":"Closed or merged PR \"refactor(core): add internal utility to resolve the component name of a node\" (#58148)"},{"Id":"2578983291","IsPullRequest":true,"CreatedAt":"2024-10-11T07:03:17","Actor":"crisbeto","Number":"58150","RawContent":null,"Title":"Generate HMR initializer code","State":"closed","Body":"Includes a couple of commits that enable the compiler to output calls that will enable HMR for component classes, as well as fix for file paths in `setClassDebugInfo`.\r\n\r\n### refactor(compiler): add logic to generate the HMR initializer\r\nAdds the logic that will generate the `import` expression that will initializer HMR for a specific component.\r\n\r\n### refactor(compiler-cli): output HMR initializer code\r\nAdds the logic to the compiler that will output the HMR initializer code for each component, if enabled.\r\n\r\n### fix(compiler-cli): incorrectly generating relative file paths on case-insensitive platforms\r\n\r\nWe're using `path.relative` to compute a relative path between a `SourceFile` and the one of the `rootDirs`. The problem is that the `rootDirs` get passed through `getCanonicalFileName` which lowercases the path in some platforms, while `SourceFile.fileName` is always case-insensitive. This yields a path outside of the project which we were ignoring.\r\n\r\nThis change passes the `SourceFile.fileName` before passing it through `path.relative` to ensure that we get a valid result.","Url":"https://github.com/angular/angular/pull/58150","RelatedDescription":"Closed or merged PR \"Generate HMR initializer code\" (#58150)"},{"Id":"2580355536","IsPullRequest":true,"CreatedAt":"2024-10-11T03:41:51","Actor":"HyperLife1119","Number":"58156","RawContent":null,"Title":"docs(service-worker): corrected default values ​​for navigation URLs","State":"open","Body":"The default value described in the documentation is inconsistent with the actual default value.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe navigationUrls defaults described in the service worker documentation do not match the actual defaults.\r\n\r\nhttps://angular.dev/ecosystem/service-workers/config#matching-navigation-request-urls\r\n\r\n![QQ_1728618169477](https://github.com/user-attachments/assets/d1f7fbac-2a6c-4037-8e6e-05dcb937ed71)\r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nFix the navigationUrls defaults in the document to the correct defaults.\r\n\r\nhttps://github.com/angular/angular/blob/08b4a8af6e1b7974c3c4c13d4f6de6dbe7d1f2bb/packages/service-worker/config/src/generator.ts#L14-L19\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58156","RelatedDescription":"Open PR \"docs(service-worker): corrected default values ​​for navigation URLs\" (#58156)"},{"Id":"2580105312","IsPullRequest":true,"CreatedAt":"2024-10-11T00:11:05","Actor":"dgp1130","Number":"58154","RawContent":null,"Title":"fix(compiler): ignore placeholder-only i18n messages","State":"open","Body":"Message which only contain a single placeholder cannot be translated, there is no static text to be translated. Therefore these messages can be skipped and shouldn't be extracted at all.\r\n\r\nIdeally, Angular would throw an error if a message is only a placeholder, since it should not contain an `i18n` attribute at all. However this would be a breaking change and require a migration which isn't in scope right now. We can explore converting this to a hard error sometime in the future.\r\n\r\nNote that this change is not gated on any flag and is currently targeting `patch`. I think this is reasonable because placeholder-only messages are useless to extract, but it is an observable behavior change. If we think that's too risky, I can put it behind a flag or target `major`.","Url":"https://github.com/angular/angular/pull/58154","RelatedDescription":"Open PR \"fix(compiler): ignore placeholder-only i18n messages\" (#58154)"},{"Id":"2579152506","IsPullRequest":false,"CreatedAt":"2024-10-10T15:56:14","Actor":"aguskov1987","Number":"58151","RawContent":null,"Title":"Unable to resolve dependency tree during NPM install","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nTHIS ERROR HAPPENS WHEN INSTALLING DEPS FOR THE ACTUAL ANGULAR FRAMEWORK, NOT ANGULAR APPLICATION\nWhen installing the npm dependencies for the latest main branch (19.0.0-next-8) I encounter the following error:\n\nnpm error code ERESOLVE\nnpm error ERESOLVE unable to resolve dependency tree\nnpm error\nnpm error While resolving: angular-srcs@19.0.0-next.8\nnpm error Found: @angular/core@19.0.0-next.5\nnpm error node_modules/@angular/core\nnpm error   dev @angular/core@\"^19.0.0-next\" from the root project\nnpm error   peer @angular/core@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/material@19.0.0-next.4\nnpm error   node_modules/@angular/material\nnpm error     @angular/material@\"19.0.0-next.4\" from the root project\nnpm error   2 more (@angular/animations, @angular/cdk)\nnpm error\nnpm error Could not resolve dependency:\nnpm error peer @angular/core@\"19.0.0-next.9\" from @angular/common@19.0.0-next.9\nnpm error node_modules/@angular/common\nnpm error   peer @angular/common@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/material@19.0.0-next.4\nnpm error   node_modules/@angular/material\nnpm error     @angular/material@\"19.0.0-next.4\" from the root project\nnpm error   peer @angular/common@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/cdk@19.0.0-next.4\nnpm error   node_modules/@angular/cdk\nnpm error     @angular/cdk@\"19.0.0-next.4\" from the root project\nnpm error     1 more (@angular/material)\nnpm error\nnpm error Fix the upstream dependency conflict, or retry\nnpm error this command with --force or --legacy-peer-deps\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\nnpm error\nnpm error\nnpm error For a full report see:\nnpm error ---\nnpm verbose cwd ---\nnpm verbose os Windows_NT 10.0.22631\nnpm verbose node v20.18.0\nnpm verbose npm  v10.8.2\nnpm verbose exit 1\nnpm verbose code 1\nnpm error A complete log of this run can be found in: ---\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.8\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.8 (cli-only)\n@angular-devkit/core         18.2.8 (cli-only)\n@angular-devkit/schematics   18.2.8 (cli-only)\n@schematics/angular          18.2.8 (cli-only)\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58151","RelatedDescription":"Closed issue \"Unable to resolve dependency tree during NPM install\" (#58151)"},{"Id":"2578770267","IsPullRequest":false,"CreatedAt":"2024-10-10T12:57:01","Actor":"vz-tl","Number":"58149","RawContent":null,"Title":"origin entry in HTTP_TRANSFER_CACHE_ORIGIN_MAP doesn't allow empty value","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhile trying to use  `HTTP_TRANSFER_CACHE_ORIGIN_MAP` InjectionToken for providing different endpoint origins on server and client side, we faced and issue where the client endpoint (the value of a map's property) has to stay empty. \n\nExample:\n```\n{\n  provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n  useValue: {\n    'https://internal.endpoint:8000': ''\n  }\n}\n```\nOn server side, Angular should request from a network-internal endpoint origin, whereas the endpoint is mapped to the root when accessing it publicly on client-side, so only the pathname without any origin has to be used.\n\nBUT, the above configuration unfortunately won't work with emtpy values, as those are considered invalid, because of just doing a falsy check instead of checking against null/undefined. See https://github.com/angular/angular/blob/main/packages/common/http/src/transfer_cache.ts#L401\n\nSo, in our case we aren't able to use this very handy functionality, forcing us to continue using our existing custom transfer-cache interceptor, we actually planned to get rid of after migrating to NG18.\n\nHighly appreciating a fix that also allows empty origins for the client-side.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.0\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... google-maps, language-service, platform-browser\n... platform-browser-dynamic, platform-server, router, ssr\n... youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@angular/cli                    18.2.0\n@schematics/angular             18.2.7\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58149","RelatedDescription":"Open issue \"origin entry in HTTP_TRANSFER_CACHE_ORIGIN_MAP doesn't allow empty value\" (#58149)"},{"Id":"2578326221","IsPullRequest":true,"CreatedAt":"2024-10-10T10:16:52","Actor":"devversion","Number":"58147","RawContent":null,"Title":"Bump version to \"v19.0.0-next.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58147","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.9\" with changelog.\" (#58147)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2580746729","IsPullRequest":true,"CreatedAt":"2024-10-11T15:45:52","Actor":"angular-robot","Number":"28617","RawContent":null,"Title":"build: update dependency magic-string to v0.30.12","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | dependencies | patch | [`0.30.11` -> `0.30.12`](https://renovatebot.com/diffs/npm/magic-string/0.30.11/0.30.12) |\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | devDependencies | patch | [`0.30.11` -> `0.30.12`](https://renovatebot.com/diffs/npm/magic-string/0.30.11/0.30.12) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rich-harris/magic-string (magic-string)</summary>\n\n### [`v0.30.12`](https://redirect.github.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#03012-2024-10-11)\n\n[Compare Source](https://redirect.github.com/rich-harris/magic-string/compare/v0.30.11...v0.30.12)\n\n##### Performance Improvements\n\n-   skip line break mappings ([#&#8203;284](https://redirect.github.com/rich-harris/magic-string/issues/284)) ([5b1ecf7](https://redirect.github.com/rich-harris/magic-string/commit/5b1ecf701f663d29891c8d24b3f5869147757a99))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTYuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28617","RelatedDescription":"Closed or merged PR \"build: update dependency magic-string to v0.30.12\" (#28617)"},{"Id":"2572093588","IsPullRequest":true,"CreatedAt":"2024-10-11T15:45:27","Actor":"angular-robot","Number":"28592","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `058af75` -> `474e97f` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `e9e110c` -> `0716bad` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `fc538e2` -> `defc6e3` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `81d7211` -> `a40afd6` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `f3e2e8d` -> `84d19b5` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `77056c0` -> `691c846` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `491c7b5` -> `a96ba58` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `d937ed4` -> `b842c52` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `944f1ef` -> `31ba422` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `d0839df` -> `e98fcd4` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `81ad26b` -> `94818ca` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `94b328a` -> `1f9f19e` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8c60ac2` -> `683ea7c` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `79fb271` -> `d408f95` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `5ba3367` -> `52bbf51` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a5bb449` -> `8ca8cae` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `a55009d` -> `4168980` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `28cc0e8` -> `6b59f4d` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.0.0-next.8/19.0.0-next.9) |\n| angular/dev-infra | action | digest | `46771fc` -> `37d6ab6` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.0.0-next.9`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1900-next9-2024-10-10)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.0.0-next.8...19.0.0-next.9)\n\n#### Breaking Changes\n\n##### compiler\n\n-   `this.foo` property reads no longer refer to template context variables. If you intended to read the template variable, do not use `this.`.\n\n##### core\n\n-   The deprecated `factories` property in `KeyValueDiffers` has been removed.\n\n##### localize\n\n-   The `name` option in the ` ng add  `@localize\\`\\` schematic has been removed in favor of the `project` option.\n\n##### platform-browser\n\n-   The deprecated `BrowserModule.withServerTransition` method has been removed. Please use the `APP_ID` DI token to set the application id instead.\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [09f589f000](https://redirect.github.com/angular/angular/commit/09f589f0006f4b428b675b83c12c0dc8ebb7e45f) | fix | `this.a` should always refer to class property `a` ([#&#8203;55183](https://redirect.github.com/angular/angular/pull/55183)) |\n| [e8d1944999](https://redirect.github.com/angular/angular/commit/e8d1944999e1fdfbd67630d475334c0d7f41a0eb) | fix | add multiple :host and nested selectors support ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [82144b6d63](https://redirect.github.com/angular/angular/commit/82144b6d63d072d112d1a7f4dcc018a1d64bb994) | fix | allow combinators inside pseudo selectors ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [292ea4714f](https://redirect.github.com/angular/angular/commit/292ea4714fb7e76cf1748d2f9059991e05c42574) | fix | fix comment typo ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [69529d8873](https://redirect.github.com/angular/angular/commit/69529d8873fbd7888ab68fddc6e7c654c5065764) | fix | fix parsing of the :host-context with pseudo selectors ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [2374b87b64](https://redirect.github.com/angular/angular/commit/2374b87b643e0373f85cf126d4b01b2fff785f64) | fix | preserve attributes attached to :host selector ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [46a6324c82](https://redirect.github.com/angular/angular/commit/46a6324c82a41b69c16a4c8c9f3fc52d1ecf6917) | fix | scope :host-context inside pseudo selectors, do not decrease specificity ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [bc5f1175e9](https://redirect.github.com/angular/angular/commit/bc5f1175e9f39dfa2699c4de19ee9af4ce4b50d1) | fix | transform pseudo selectors correctly for the encapsulated view ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8d8c03abc4](https://redirect.github.com/angular/angular/commit/8d8c03abc40099da268d7301f029954f3e3f1c90) | fix | defer symbols only used in types ([#&#8203;58104](https://redirect.github.com/angular/angular/pull/58104)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ee426c62f0](https://redirect.github.com/angular/angular/commit/ee426c62f07579ec7dc89ce9582972cc1e3471d4) | fix | allow signal write error ([#&#8203;57973](https://redirect.github.com/angular/angular/pull/57973)) |\n| [67db4305c2](https://redirect.github.com/angular/angular/commit/67db4305c2261625fd54d284c29e94e26cb19488) | fix | clean up afterRender after it is executed ([#&#8203;58119](https://redirect.github.com/angular/angular/pull/58119)) |\n| [656b5d3e78](https://redirect.github.com/angular/angular/commit/656b5d3e78004229a76488e0de1eb1d3508d8f6d) | fix | Re-assign error codes to be within core bounds (<1000) ([#&#8203;53455](https://redirect.github.com/angular/angular/pull/53455)) |\n| [97fb86d331](https://redirect.github.com/angular/angular/commit/97fb86d3310ae891ba4d894a8d3479eda08bd4c2) | perf | set encapsulation to `None` for empty component styles ([#&#8203;57130](https://redirect.github.com/angular/angular/pull/57130)) |\n| [c15ec36bd1](https://redirect.github.com/angular/angular/commit/c15ec36bd1dcff4c7c387337a5bcfd928994db2f) | refactor | remove deprecated `factories` Property in `KeyValueDiffers` ([#&#8203;58064](https://redirect.github.com/angular/angular/pull/58064)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bc83fc1e2e](https://redirect.github.com/angular/angular/commit/bc83fc1e2ebac1a99b6e8ed63cea48f48dd7c863) | feat | support converting to signal queries in VSCode extension ([#&#8203;58106](https://redirect.github.com/angular/angular/pull/58106)) |\n\n##### localize\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9c3bd1b5d1](https://redirect.github.com/angular/angular/commit/9c3bd1b5d119bdcd4818892deae7f8a17861da42) | refactor | remove deprecated `name` option. ([#&#8203;58063](https://redirect.github.com/angular/angular/pull/58063)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c1aa411cf1](https://redirect.github.com/angular/angular/commit/c1aa411cf13259d991c8f224a2bafc3e9763fe8d) | fix | properly resolve tsconfig paths on windows ([#&#8203;58137](https://redirect.github.com/angular/angular/pull/58137)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5c61f46409](https://redirect.github.com/angular/angular/commit/5c61f46409855bb8fe66d71a9c16c00753032987) | refactor | remove deprecated `BrowserModule.withServerTransition` method ([#&#8203;58062](https://redirect.github.com/angular/angular/pull/58062)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9e82559de4](https://redirect.github.com/angular/angular/commit/9e82559de4e99a1aedf645a05b01fc08d3f4b1b1) | fix | destroy `PlatformRef` when error happens during the `bootstrap()` phase ([#&#8203;58112](https://redirect.github.com/angular/angular/pull/58112)) |\n\n##### service-worker\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [1479af978c](https://redirect.github.com/angular/angular/commit/1479af978cd2bbe4ee9f1ca9682684b8e5135fa7) | feat | finish implementation of refreshAhead feature ([#&#8203;53356](https://redirect.github.com/angular/angular/pull/53356)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-next.8`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-next8-thulium-trumpet-2024-10-09)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-next.7...19.0.0-next.8)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9eb1f867d](https://redirect.github.com/angular/components/commit/9eb1f867d8b45bbc9771062e6a6c40fdd2ca24d1) | fix | **stepper:** remove mock of forms type |\n| [02823c080](https://redirect.github.com/angular/components/commit/02823c080be730d3c8cb7900b2449b660a5b0e08) | fix | **stepper:** reset submitted state when resetting stepper |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b777c2df0](https://redirect.github.com/angular/components/commit/b777c2df0052232cc304e20c46b0d0572d1f9894) | feat | **core:** expose styling information to the docs site |\n| [9546fe77e](https://redirect.github.com/angular/components/commit/9546fe77ef7322276bddf25ed826b2ab73e5ee20) | feat | **timepicker:** add test harnesses |\n| [2646e0885](https://redirect.github.com/angular/components/commit/2646e088510f00ca2ae885d42acae9c7fcd8656e) | feat | **timepicker:** add timepicker component |\n| [0fb4247ce](https://redirect.github.com/angular/components/commit/0fb4247ce834c475556a17e116e20f1ec0fd5a5a) | fix | **core:** avoid browser inconsistencies when parsing time |\n| [984723e10](https://redirect.github.com/angular/components/commit/984723e10bf3cf412058f20c57a4c8117024b0c0) | fix | **schematics:** treat lower dependency builder as default builder ([#&#8203;29833](https://redirect.github.com/angular/components/pull/29833)) |\n| [14e9ec7cc](https://redirect.github.com/angular/components/commit/14e9ec7ccb0956f54604ee9f19c6dbee6b496fcd) | fix | **timepicker:** always re-focus input |\n| [1eda48604](https://redirect.github.com/angular/components/commit/1eda4860400fbb08c76b7760bb0eba3234f0c707) | fix | **timepicker:** hide toggle icon from assistive technology |\n| [490bcfe38](https://redirect.github.com/angular/components/commit/490bcfe38c1f640beefdf537d2af46467f07a4c7) | fix | **timepicker:** more flexible interval parsing |\n| [fb6e20290](https://redirect.github.com/angular/components/commit/fb6e20290ba6842c5190217de55d13044169eebf) | fix | **timepicker:** text field in parse error not up to date |\n\n##### mat\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8f0369a27](https://redirect.github.com/angular/components/commit/8f0369a27faa7cd6758d78a0a4e1c40811747e49) | fix | **paginator:** fix focus issues with paginator buttons ([#&#8203;29379](https://redirect.github.com/angular/components/pull/29379)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [be342289c](https://redirect.github.com/angular/components/commit/be342289c2cc720af31edf1ce98eee08e2bf9235) | fix | remove final references to ComponentFactoryResolver ([#&#8203;29832](https://redirect.github.com/angular/components/pull/29832)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28592","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28592)"},{"Id":"2580800151","IsPullRequest":true,"CreatedAt":"2024-10-11T11:17:37","Actor":"alan-agius4","Number":"28618","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unused dependencies","State":"closed","Body":"These dependencies are no longer utilized within the `@angular-devkit/build-angular` package.\r\n","Url":"https://github.com/angular/angular-cli/pull/28618","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unused dependencies\" (#28618)"},{"Id":"2580448517","IsPullRequest":false,"CreatedAt":"2024-10-11T09:17:15","Actor":"sureshkumarsendrayan","Number":"28616","RawContent":null,"Title":"Ionic component styles not loading with Angular SSR","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm using Angular 18 standalone application with Ionic 8 and enabled server side rendering. When I try to run SSR, the styles of ionic components are not loading. It just loads the plain html.\n![Image](https://github.com/user-attachments/assets/8ab6078a-699f-4965-901f-9ad67197749a)\n\n\n\n### Minimal Reproduction\n\n**server.ts:**\n`const commonEngine = new CommonEngine({\n\tenablePerformanceProfiler: true\n});\n\n// Cerca dinamicamente il file CSS generato con hash\nconst cssFileName = readdirSync(distFolder).find(\n\t(file) => file.startsWith('styles') && file.endsWith('.css')\n);\n\nserver.set('view engine', 'html');\nserver.set('views', distFolder);\n\n// Serve i file statici\nserver.get(\n\t'*.*',\n\texpress.static(distFolder, {\n\t\tmaxAge: '1y'\n\t})\n);\n\n// Gestisce tutte le altre richieste utilizzando l'engine Angular\nserver.get('*', (req, res, next) => {\n\tconst { protocol, originalUrl, baseUrl, headers } = req;\n\n\tcommonEngine\n\t\t.render({\n\t\t\tbootstrap,\n\t\t\tdocumentFilePath: indexHtml,\n\t\t\turl: `${protocol}://${headers.host}${originalUrl}`,\n\t\t\tpublicPath: distFolder,\n\t\t\tinlineCriticalCss: false,\n\t\t\tproviders: [\n\t\t\t\t{ provide: APP_BASE_HREF, useValue: req.baseUrl },\n\t\t\t\t{ provide: 'REQUEST', useValue: req },\n\t\t\t\t{ provide: 'RESPONSE', useValue: res }\n\t\t\t]\n\t\t})\n\t\t.then((html) => {\n\t\t\t// Inietta dinamicamente il CSS nel contenuto HTML generato\n\t\t\tif (cssFileName) {\n\t\t\t\thtml = html.replace(\n\t\t\t\t\t'</head>',\n\t\t\t\t\t`<link rel=\"stylesheet\" href=\"${cssFileName}\"></head>`\n\t\t\t\t);\n\t\t\t}\n\t\t\tres.send(html);\n\t\t})\n\t\t.catch((err) => next(err));\n});\n\nreturn server;`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.7\nNode: 20.15.0\nPackage Manager: pnpm 9.12.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, pwa, router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7 (cli-only)\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7 (cli-only)\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7 (cli-only)\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\n--------------------------------\n\nIonic version:\nIonic:\n\n   Ionic CLI                     : 7.2.0 (C:\\Users\\ssendrayan\\AppData\\Roaming\\nvm\\v20.15.0\\node_modules\\@ionic\\cli)\n   Ionic Framework               : @ionic/angular 8.3.2\n   @angular-devkit/build-angular : 18.2.7\n   @angular-devkit/schematics    : 18.2.7\n   @angular/cli                  : 18.2.7\n   @ionic/angular-toolkit        : 12.1.1\n\nCapacitor:\n\n   Capacitor CLI      : 6.1.0\n   @capacitor/android : 6.1.2\n   @capacitor/core    : 6.1.0\n   @capacitor/ios     : 6.1.2\n\nUtility:\n\n   cordova-res : not installed globally\n   native-run  : not installed globally\n\nSystem:\n\n   NodeJS : v20.15.0 (C:\\Program Files\\nodejs\\node.exe)\n   npm    : 10.7.0\n   OS     : Windows 10\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28616","RelatedDescription":"Closed issue \"Ionic component styles not loading with Angular SSR\" (#28616)"},{"Id":"2579824929","IsPullRequest":true,"CreatedAt":"2024-10-11T08:03:29","Actor":"angular-robot","Number":"28615","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [critters](https://redirect.github.com/GoogleChromeLabs/critters) ([source](https://redirect.github.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | dependencies | patch | [`0.0.24` -> `0.0.25`](https://renovatebot.com/diffs/npm/critters/0.0.24/0.0.25) |\n| [critters](https://redirect.github.com/GoogleChromeLabs/critters) ([source](https://redirect.github.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | devDependencies | patch | [`0.0.24` -> `0.0.25`](https://renovatebot.com/diffs/npm/critters/0.0.24/0.0.25) |\n| [sass](https://redirect.github.com/sass/dart-sass) | dependencies | patch | [`1.79.4` -> `1.79.5`](https://renovatebot.com/diffs/npm/sass/1.79.4/1.79.5) |\n| [sass](https://redirect.github.com/sass/dart-sass) | devDependencies | patch | [`1.79.4` -> `1.79.5`](https://renovatebot.com/diffs/npm/sass/1.79.4/1.79.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChromeLabs/critters (critters)</summary>\n\n### [`v0.0.25`](https://redirect.github.com/GoogleChromeLabs/critters/compare/0.0.24...c5702fcddb1da57fe403b8089a94fefdac806292)\n\n[Compare Source](https://redirect.github.com/GoogleChromeLabs/critters/compare/0.0.24...c5702fcddb1da57fe403b8089a94fefdac806292)\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.79.5`](https://redirect.github.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1795)\n\n[Compare Source](https://redirect.github.com/sass/dart-sass/compare/1.79.4...1.79.5)\n\n-   Changes to how `selector.unify()` and `@extend` combine selectors:\n\n    -   The relative order of pseudo-classes (like `:hover`) and pseudo-elements\n        (like `::before`) within each original selector is now preserved when\n        they're combined.\n\n    -   Pseudo selectors are now consistently placed at the end of the combined\n        selector, regardless of which selector they came from. Previously, this\n        reordering only applied to pseudo-selectors in the second selector.\n\n-   Tweak the color transformation matrices for OKLab and OKLCH to match the\n    newer, more accurate values in the CSS spec.\n\n-   Fix a slight inaccuracy case when converting to `srgb-linear` and\n    `display-p3`.\n\n-   **Potentially breaking bug fix:** `math.unit()` now wraps multiple denominator\n    units in parentheses. For example, `px/(em*em)` instead of `px/em*em`.\n\n##### Command-Line Interface\n\n-   Use `@parcel/watcher` to watch the filesystem when running from JavaScript and\n    not using `--poll`. This should mitigate more frequent failures users have\n    been seeing since version 4.0.0 of Chokidar, our previous watching tool, was\n    released.\n\n##### JS API\n\n-   Fix `SassColor.interpolate()` to allow an undefined `options` parameter, as\n    the types indicate.\n\n##### Embedded Sass\n\n-   Properly pass missing color channel values to and from custom functions.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTYuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28615","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28615)"},{"Id":"2578353225","IsPullRequest":true,"CreatedAt":"2024-10-10T20:20:57","Actor":"alan-agius4","Number":"28614","RawContent":null,"Title":"fix(@angular/build): use named export `reqHandler` for server.ts request handling","State":"closed","Body":"\r\nSome cloud providers, such as Cloudflare, expect the default export to follow a specific structure (e.g., an object with a `fetch` property). To prevent the need for creating a separate `server.ts` file for production builds, the request handler is now exported as `reqHandler` instead of a default export.\r\n","Url":"https://github.com/angular/angular-cli/pull/28614","RelatedDescription":"Closed or merged PR \"fix(@angular/build): use named export `reqHandler` for server.ts request handling\" (#28614)"},{"Id":"2577630715","IsPullRequest":true,"CreatedAt":"2024-10-10T17:23:05","Actor":"angular-robot","Number":"28613","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.4.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.2` -> `v4.4.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28613","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.4.3\" (#28613)"},{"Id":"2577630662","IsPullRequest":true,"CreatedAt":"2024-10-10T17:21:39","Actor":"angular-robot","Number":"28612","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.25.7/7.25.8) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.25.7/7.25.8) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.25.7/7.25.8) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.25.7/7.25.8) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.25.7/7.25.8) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.25.7/7.25.8) |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.2` -> `v4.4.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.25.8`](https://redirect.github.com/babel/babel/blob/HEAD/CHANGELOG.md#v7258-2024-10-10)\n\n[Compare Source](https://redirect.github.com/babel/babel/compare/v7.25.7...v7.25.8)\n\n##### :bug: Bug Fix\n\n-   `babel-core`\n    -   [#&#8203;16888](https://redirect.github.com/babel/babel/pull/16888) Restore public API of `resolvePlugin`/`resolvePreset` ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-parser`, `babel-plugin-proposal-async-do-expressions`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-proposal-do-expressions`, `babel-plugin-proposal-explicit-resource-management`, `babel-plugin-proposal-export-default-from`, `babel-plugin-proposal-function-bind`, `babel-plugin-proposal-function-sent`, `babel-plugin-proposal-import-defer`, `babel-plugin-proposal-partial-application`, `babel-plugin-proposal-throw-expressions`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-dynamic-import`, `babel-plugin-transform-export-namespace-from`, `babel-plugin-transform-json-strings`, `babel-plugin-transform-logical-assignment-operators`, `babel-plugin-transform-nullish-coalescing-operator`, `babel-plugin-transform-numeric-separator`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-catch-binding`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-private-property-in-object`, `babel-preset-env`\n    -   [#&#8203;16824](https://redirect.github.com/babel/babel/pull/16824) Inline one-line syntax plugins ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28612","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28612)"},{"Id":"2576890744","IsPullRequest":true,"CreatedAt":"2024-10-10T11:12:28","Actor":"clydin","Number":"28611","RawContent":null,"Title":"refactor(@angular/build): reduce inline style language value per call usage","State":"closed","Body":"The configured inline style language for Angular components is now set during the construction of the component stylesheet bundler. This avoids needing to repeatedly pass the value into each inline bundling call. The ability to customize the language per call is retained to allow individual style control if needed.","Url":"https://github.com/angular/angular-cli/pull/28611","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): reduce inline style language value per call usage\" (#28611)"},{"Id":"2573099933","IsPullRequest":true,"CreatedAt":"2024-10-09T18:31:00","Actor":"alan-agius4","Number":"28598","RawContent":null,"Title":"feat(@angular/build): introduce `ssr.experimentalPlatform` option","State":"closed","Body":"\r\n\r\nThis commit introduces a new option called `experimentalPlatform` to the Angular SSR configuration. \r\n\r\nThe `experimentalPlatform` option allows developers to specify the target platform for the server bundle, enabling the generation of platform-neutral bundles suitable for deployment in environments like edge workers and other serverless platforms that do not rely on Node.js APIs.\r\n\r\nThis change enhances the portability of Angular SSR applications and expands their deployment possibilities.\r\n\r\n**Note:** that this feature does not include polyfills for Node.js modules and is experimental, subject to future changes.","Url":"https://github.com/angular/angular-cli/pull/28598","RelatedDescription":"Closed or merged PR \"feat(@angular/build): introduce `ssr.experimentalPlatform` option\" (#28598)"},{"Id":"2576566747","IsPullRequest":true,"CreatedAt":"2024-10-09T18:06:55","Actor":"dgp1130","Number":"28610","RawContent":null,"Title":"Bump version to \"v19.0.0-next.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28610","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.10\" with changelog.\" (#28610)"},{"Id":"2576555646","IsPullRequest":true,"CreatedAt":"2024-10-09T17:47:17","Actor":"dgp1130","Number":"28609","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28609","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#28609)"},{"Id":"2576519100","IsPullRequest":true,"CreatedAt":"2024-10-09T17:44:36","Actor":"dgp1130","Number":"28608","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28608","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#28608)"},{"Id":"2574869436","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:39","Actor":"angular-robot","Number":"28603","RawContent":null,"Title":"build: update dependency typescript to v5.6.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | devDependencies | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | resolutions | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>microsoft/TypeScript (typescript)</summary>\n\n### [`v5.6.3`](https://redirect.github.com/microsoft/TypeScript/releases/tag/v5.6.3): TypeScript 5.6.3\n\n[Compare Source](https://redirect.github.com/microsoft/TypeScript/compare/v5.6.2...v5.6.3)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/).\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for Typescript 5.6.0 (Beta)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.0%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.1 (RC)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.1%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.2 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.2%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.3 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.3%22+is%3Aclosed+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28603","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v5.6.3\" (#28603)"},{"Id":"2574781042","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:17","Actor":"angular-robot","Number":"28601","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.4.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28601","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.4.2\" (#28601)"},{"Id":"2572631644","IsPullRequest":true,"CreatedAt":"2024-10-09T13:57:27","Actor":"alan-agius4","Number":"28596","RawContent":null,"Title":"fix(@angular/build): move lmdb to optionalDependencies","State":"closed","Body":"A warning mechanism has been implemented to notify users when lmdb is unavailable. On Windows ARM64 systems, however, installing this package with pnpm appears to cause installation failures.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/27882#issuecomment-2395029997\r\n\r\nCloses #27882\r\n","Url":"https://github.com/angular/angular-cli/pull/28596","RelatedDescription":"Closed or merged PR \"fix(@angular/build): move lmdb to optionalDependencies\" (#28596)"},{"Id":"2575683653","IsPullRequest":true,"CreatedAt":"2024-10-09T13:11:29","Actor":"alan-agius4","Number":"28606","RawContent":null,"Title":"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/28604","Url":"https://github.com/angular/angular-cli/pull/28606","RelatedDescription":"Closed or merged PR \"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28606)"},{"Id":"2575786495","IsPullRequest":false,"CreatedAt":"2024-10-09T12:27:48","Actor":"zip-fa","Number":"28607","RawContent":null,"Title":"Feature request: add indexHtmlTransformer and plugins options to application builder","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nHi. This feature exists for a long time in angular-builders and nx custom builders' code.\n`plugins` allows adding vite plugins; we use this option to use custom plugin with .env file parsing, adding ENVIRONMENT_NAME and __APP_VERSION__ global variables and much more. I guess there are plenty of other use-cases for this.\n`indexHtmlTransformer` allows to replace some placeholders in index.html while building or serving an app. Useful to make similar DX when building or developing locally my app. \n\nThere is [not much to do](https://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts) with these two, but i think this will boost DX many times.\nThanks for your time!\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\nhttps://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts","Url":"https://github.com/angular/angular-cli/issues/28607","RelatedDescription":"Open issue \"Feature request: add indexHtmlTransformer and plugins options to application builder\" (#28607)"},{"Id":"2575591269","IsPullRequest":false,"CreatedAt":"2024-10-09T11:39:59","Actor":"mrwiora","Number":"28605","RawContent":null,"Title":"angular-devkit/build-angular esbuild dependency issues","State":"closed","Body":"### Description\n\nMy run of \"npm install @angular-devkit/build-angular\" failed with the following error:\n```\nnpm error code 1\nnpm error path /home/xxx/project/node_modules/@angular/build/node_modules/esbuild\nnpm error command failed\nnpm error command sh -c node install.js\nnpm error /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134\nnpm error     throw new Error(`Expected ${JSON.stringify(versionFromPackageJSON)} but got ${JSON.stringify(stdout)}`);\nnpm error           ^\nnpm error\nnpm error Error: Expected \"0.23.0\" but got \"0.21.5\"\nnpm error     at validateBinaryVersion (/home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134:11)\nnpm error     at /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:284:5\nnpm error\nnpm error Node.js v20.18.0\n```\n\nwhich I resolved by adding the following overrides section to my package.json:\n```\n{\n  \"dependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.6\",\n    \"@angular/core\": \"^18.2.6\",\n  },\n  \"overrides\": {\n    \"esbuild\": \"^0.23.0\"\n  }\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.6\n... core\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.6\n@angular-devkit/build-angular   18.2.6\n@angular-devkit/core            18.2.6\n@angular-devkit/schematics      18.2.7 (cli-only)\n@schematics/angular             18.2.7 (cli-only)\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28605","RelatedDescription":"Closed issue \"angular-devkit/build-angular esbuild dependency issues\" (#28605)"},{"Id":"2575294158","IsPullRequest":true,"CreatedAt":"2024-10-09T11:33:56","Actor":"alan-agius4","Number":"28604","RawContent":null,"Title":"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"This commit provides a workaround for https://github.com/angular/angular-cli/issues/28336, which occurs due to the interaction between `zone.js` and `listr2`. The issue prevents proper termination of the development server using Ctrl + C when dev-server.\r\n\r\nCloses: #28336","Url":"https://github.com/angular/angular-cli/pull/28604","RelatedDescription":"Closed or merged PR \"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28604)"},{"Id":"2574781174","IsPullRequest":true,"CreatedAt":"2024-10-09T09:28:57","Actor":"angular-robot","Number":"28602","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | patch | `v4.1.0` -> `v4.1.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.0` -> `4.21.1`](https://renovatebot.com/diffs/npm/express/4.21.0/4.21.1) |\n| [undici](https://undici.nodejs.org) ([source](https://redirect.github.com/nodejs/undici)) | devDependencies | minor | [`6.19.8` -> `6.20.0`](https://renovatebot.com/diffs/npm/undici/6.19.8/6.20.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.1.1`](https://redirect.github.com/actions/cache/releases/tag/v4.1.1)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.0...v4.1.1)\n\n##### What's Changed\n\n-   Restore original behavior of `cache-hit` output by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/cache/pull/1467](https://redirect.github.com/actions/cache/pull/1467)\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4.1.0...v4.1.1\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.1`](https://redirect.github.com/expressjs/express/releases/tag/4.21.1)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.0...4.21.1)\n\n#### What's Changed\n\n-   Backport a fix for CVE-2024-47764 to the 4.x branch by [@&#8203;joshbuker](https://redirect.github.com/joshbuker) in [https://github.com/expressjs/express/pull/6029](https://redirect.github.com/expressjs/express/pull/6029)\n-   Release: 4.21.1 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6031](https://redirect.github.com/expressjs/express/pull/6031)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.0...4.21.1\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.20.0`](https://redirect.github.com/nodejs/undici/releases/tag/v6.20.0)\n\n[Compare Source](https://redirect.github.com/nodejs/undici/compare/v6.19.8...v6.20.0)\n\n#### What's Changed\n\n-   Remove patched dom types (`v6.x` branch) by [@&#8203;eXhumer](https://redirect.github.com/eXhumer) in [https://github.com/nodejs/undici/pull/3531](https://redirect.github.com/nodejs/undici/pull/3531)\n-   docs(Backport v6.x): Fix signature of RetryHandler by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3594](https://redirect.github.com/nodejs/undici/pull/3594)\n-   deps(dev): update [@&#8203;types/node](https://redirect.github.com/types/node) by [@&#8203;metcoder95](https://redirect.github.com/metcoder95) in [https://github.com/nodejs/undici/pull/3618](https://redirect.github.com/nodejs/undici/pull/3618)\n-   fix: throw on retry when payload is consume by downstream by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3596](https://redirect.github.com/nodejs/undici/pull/3596)\n-   feat(Backport v6.x): move throwOnError to interceptor by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3595](https://redirect.github.com/nodejs/undici/pull/3595)\n-   \\[Backport v6.x] fix: reduce memory usage in client-h1 by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3672](https://redirect.github.com/nodejs/undici/pull/3672)\n-   \\[Backport v6.x] fix: refactor fast timers, fix UND_ERR_CONNECT_TIMEOUT on event loop blocking by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3673](https://redirect.github.com/nodejs/undici/pull/3673)\n-   \\[Backport v6.x] fix: run asserts first if possible by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3674](https://redirect.github.com/nodejs/undici/pull/3674)\n-   \\[Backport v6.x] fix: use fasttimers for all connection timeouts by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3675](https://redirect.github.com/nodejs/undici/pull/3675)\n-   \\[Backport v6.x] ci: less flaky test/request-timeout.js test by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3678](https://redirect.github.com/nodejs/undici/pull/3678)\n-   \\[Backport v6.x] test: less flaky timers acceptance test, rework fast timer tests to pass them faster by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3679](https://redirect.github.com/nodejs/undici/pull/3679)\n-   \\[Backport v6.x] ignore leading and trailing crlfs in formdata body by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3681](https://redirect.github.com/nodejs/undici/pull/3681)\n-   \\[Backport v6.x] mock: fix mocking of Uint8Array and ArrayBuffers as provided mock-responses by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3689](https://redirect.github.com/nodejs/undici/pull/3689)\n-   \\[Backport v6.x] handle body errors by [@&#8203;Uzlopak](https://redirect.github.com/Uzlopak) in [https://github.com/nodejs/undici/pull/3700](https://redirect.github.com/nodejs/undici/pull/3700)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v6.19.8...v6.20.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28602","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28602)"},{"Id":"2572353411","IsPullRequest":true,"CreatedAt":"2024-10-09T08:29:13","Actor":"alan-agius4","Number":"28594","RawContent":null,"Title":"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled","State":"closed","Body":"\r\n\r\nThis commit addresses an issue where `index.csr.html` was not being generated when SSR was disabled and prerendering was enabled.\r\n\r\nCloses #28580\r\n","Url":"https://github.com/angular/angular-cli/pull/28594","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled\" (#28594)"},{"Id":"2574388558","IsPullRequest":false,"CreatedAt":"2024-10-08T23:10:01","Actor":"lekhmanrus","Number":"28600","RawContent":null,"Title":"Injecting Custom Template Loading Logic","State":"open","Body":"### Command\n\nbuild, serve\n\n### Description\n\nIn previous Angular versions, when using webpack-based builders, we had the ability to customize how component templates were processed (e.g., using third-party loaders like [ngx-pug-builders](https://github.com/lekhmanrus/ngx-pug-builders) to support Pug templates). With ESBuild, template loading logic to be managed internally by the `AdapterResourceLoader`.\nIt looks, like currently there appears to be no way to inject custom logic into the template loading process. This limits the ability for third-party libraries to provide support for alternative template formats or to apply custom modifications during the build.\n\n### Describe the solution you'd like\n\nIt would be beneficial for Angular to expose a mechanism for developers to hook into or modify the HTML loading logic. This would enable third-party libraries to support template engines like Pug or apply other transformations.\n\nWhile Angular CLI may not want to handle all possible template engines directly, allowing developers to customize the HTML loading process would open the door for greater flexibility and extensibility within the ecosystem.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28600","RelatedDescription":"Open issue \"Injecting Custom Template Loading Logic\" (#28600)"},{"Id":"2572093827","IsPullRequest":true,"CreatedAt":"2024-10-08T17:11:46","Actor":"angular-robot","Number":"28593","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.1` |\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.26.11` -> `v3.26.12` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.26.12`](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28593","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#28593)"},{"Id":"2571124808","IsPullRequest":false,"CreatedAt":"2024-10-08T15:28:50","Actor":"zip-fa","Number":"28590","RawContent":null,"Title":"\"prerender\": false is ignored with \"outputMode\": \"server\"","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi.\n\"prerender\": false is ignored with \"outputMode\": \"server\": angular tries to prerender all my routes and i receive \"undefined\" message on routes extraction step:\n\n![Image](https://github.com/user-attachments/assets/a2e8e9dc-a706-4c4c-a5dd-869036d95e2c)\n\n\nng build command now only reacts to \"export NG_BUILD_PARTIAL_SSR=true && ng build\" - build does not fail with this setup\n\n### Minimal Reproduction\n\nng build\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nv19.0.0-next.8\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28590","RelatedDescription":"Closed issue \"\"prerender\": false is ignored with \"outputMode\": \"server\"\" (#28590)"},{"Id":"2572361742","IsPullRequest":true,"CreatedAt":"2024-10-08T15:28:49","Actor":"alan-agius4","Number":"28595","RawContent":null,"Title":"fix(@angular/build): show error message when error stack is undefined","State":"closed","Body":"Handle cases where the error stack is missing by displaying a relevant message.\r\n\r\nCloses #28590\r\n","Url":"https://github.com/angular/angular-cli/pull/28595","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error message when error stack is undefined\" (#28595)"},{"Id":"2573067411","IsPullRequest":false,"CreatedAt":"2024-10-08T15:06:26","Actor":"Carlosamouco","Number":"28597","RawContent":null,"Title":"extract-i18n performance issues","State":"closed","Body":"### Command\n\nextract-i18n\n\n### Description\n\nAfter installing https://www.npmjs.com/package/stimulsoft-reports-js, I noticed that `ng extract-i18n` became very slow, from approx. 1 minute to almost 4 minutes. This package is very large, and I suspect that it is taking so long because the extract-i18n command is trying to look for messages in the whole chunk that contains this dependency.\n\n### Describe the solution you'd like\n\nCould there be a way to make the tool skip analyzing third-party dependencies that have nothing to do with angular? For example, create a list of dependencies to skip?\n\n### Describe alternatives you've considered\n\nSince I am not using any third party angular libraries, I am considering extracting the messages directly from the source code using a ts parser.","Url":"https://github.com/angular/angular-cli/issues/28597","RelatedDescription":"Closed issue \"extract-i18n performance issues\" (#28597)"},{"Id":"2573450085","IsPullRequest":false,"CreatedAt":"2024-10-08T14:53:47","Actor":"sureshkumarsendrayan","Number":"28599","RawContent":null,"Title":"CSS Skipped selector issue while using SSR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm using Angular Server Side Rendering with Ionic. While building the basic application even without any project code using Server Side Rendering I'm getting the below issue for styles.\n\n`20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir`\n\nI tried setting the below build configuration in angular.json. But it's not resolving the issue.\n\n`\"optimization\": {\n      \"styles\": {\n          \"inlineCritical\": false\n        }\n   }`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.15.0\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\n--------------\nIonic version: \n\n    \"@ionic/angular\": \"^8.0.0\",\n    \"@ionic/angular-server\": \"^8.3.2\",\n    \"@ionic/angular-toolkit\": \"^11.0.1\"\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28599","RelatedDescription":"Closed issue \"CSS Skipped selector issue while using SSR\" (#28599)"},{"Id":"2571974031","IsPullRequest":false,"CreatedAt":"2024-10-08T03:47:00","Actor":"sonnyk22","Number":"28591","RawContent":null,"Title":"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nBased on the feedback in this link [#28346](https://github.com/angular/angular-cli/pull/28346), `Angular v19` will provide a much better and easier way to handle the prerendering when it comes to the routes that starts with `\"id\"`.  But this version will not be released until Nov 19th or so.\n\nUsing the below section in the `angular.json` file:\n```\n\"prerender\": {\n    \"routesFile\": \"routes.txt\",\n    \"discoverRoutes\": false\n},\n\"ssr\": {\n    \"entry\": \"server.ts\"\n}\n```\n\nIn `Angular v18.x`, it is is really easy to get prerendered for such basic routes as below:\n```\n   /auth\n   /contact  \n   /info/:id\n```\n\nHowever, is there a way to prerender when the \"id\" is right at the beginning of the route? For example:\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\nThis is a unique request to prerender that I have not found any solution to on search engines.  \n\n\n### Describe the solution you'd like\n\nWhile waiting for `Angular v19` to be released, it would be nice to be able to prerender in `v18.x` via the `routesFile` `routes.txt` for the example routes below:\n\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28591","RelatedDescription":"Open issue \"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"\" (#28591)"},{"Id":"2570630485","IsPullRequest":false,"CreatedAt":"2024-10-07T16:55:09","Actor":"eneajaho","Number":"28589","RawContent":null,"Title":"feat: do full-rebuild when angular.json changes","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nWhen running ng serve and then changing angular.json nothing happens. \n\n\n\n### Describe the solution you'd like\n\nCan we at least expect a full app rebuild. \n\nInstead of killing the dev server and running the command again, ng serve would just refresh on its own? \n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28589","RelatedDescription":"Closed issue \"feat: do full-rebuild when angular.json changes\" (#28589)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2582374089","IsPullRequest":true,"CreatedAt":"2024-10-12T00:38:22","Actor":"naaajii","Number":"29868","RawContent":null,"Title":"feat(material/card): support filled variant","State":"open","Body":"feat(material/card): support filled variant\r\n\r\nthis commit add `filled` variant for material card which provides subtle seperation from background and has less emphasis than elevated or outlined cards\r\n\r\nfixes https://github.com/angular/components/issues/29840\r\n\r\n---\r\ndocs(material/card): add each appearance example\r\n\r\nupdate the example to contain `elevated`, `outlined` &  `filled` variants\r\n\r\n---\r\n![image](https://github.com/user-attachments/assets/38c9494b-2883-4c56-9fbe-932a64a2ed2d)\r\n![image](https://github.com/user-attachments/assets/81fee990-bbb5-482d-b899-62d09d40a571)\r\n\r\n---\r\nI tried to have a swing at this and it might be not perfect.\r\n","Url":"https://github.com/angular/components/pull/29868","RelatedDescription":"Open PR \"feat(material/card): support filled variant\" (#29868)"},{"Id":"2579942608","IsPullRequest":true,"CreatedAt":"2024-10-11T17:09:05","Actor":"mmalerba","Number":"29859","RawContent":null,"Title":"feat(material/theming): Disambiguate token names in theme overrides","State":"closed","Body":"Prior to this change a single key in the theme overrides map sometimes resulted in mutliple tokens being overridden. This change gives every token a unique name, by prefixing when necessary. The old ambiguous keys are still allowed for compatibility, but will now log a warning when they're used.","Url":"https://github.com/angular/components/pull/29859","RelatedDescription":"Closed or merged PR \"feat(material/theming): Disambiguate token names in theme overrides\" (#29859)"},{"Id":"2581648206","IsPullRequest":false,"CreatedAt":"2024-10-11T15:28:00","Actor":"clem4net","Number":"29867","RawContent":null,"Title":"bug(cdkDrag): \"pointerPosition\" property of the \"CdkDragMove\" event is not correct with \"cdkDragBoundary\"","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Context**\nAccording to the official documentation, the property \"pointerPosition\" of the \"CdkDragMove\" event is : \"Position of the user's pointer on the page.\"\nSee : https://material.angular.io/cdk/drag-drop/api#CdkDragMove\n\n**Problem**\nIf I use the \"cdkDragBoundary\" property, the property \"pointerPosition\" returns cursor position only between boundaries.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-knrvcz?file=src%2Fmain.ts\nSteps to reproduce:\n1. Move the red block until the cursor moves out of the blue block\n2. At the bottom of the blue box, you will see that the cursor position is stuck to the boundaries of the blue box.\n\n\n### Expected Behavior\n\nI expect to have the current position of the cursor on screen, wherever it is located.\n\n\n### Actual Behavior\n\nThe position displayed of the cursor is limited to the limits of the blue block\n\n### Environment\n\n- Angular: 18.2.8\n- CDK/Material: 18.2.8\n- Browser(s): Chrome 129.0.6668.100 \n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/29867","RelatedDescription":"Open issue \"bug(cdkDrag): \"pointerPosition\" property of the \"CdkDragMove\" event is not correct with \"cdkDragBoundary\"\" (#29867)"},{"Id":"2581579057","IsPullRequest":false,"CreatedAt":"2024-10-11T14:53:24","Actor":"sdedieu","Number":"29866","RawContent":null,"Title":"bug(material/progress-bar): mat-progress-bar not displaying in mat-option","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPutting a mat-progress-bar inside of a mat-option won't display.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/s6vpnq?file=src%2Fexample%2Fselect-overview-example.html,src%2Fexample%2Fselect-overview-example.ts\nSteps to reproduce:\n1. Open the select dropdown\n\n\n### Expected Behavior\n\nI expect to have a progress bar inside each mat-option.\n\n### Actual Behavior\n\nmat-progress-bar does not display\n\n### Environment\n\n- Angular: 19.0.0-next.2\n- CDK/Material: 19.0.0-next.2\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n\nNote: The issue is also present in cdk/material 15.x.x, 18.x.x, ... as it is not a regression or due to a preview version.  \n","Url":"https://github.com/angular/components/issues/29866","RelatedDescription":"Open issue \"bug(material/progress-bar): mat-progress-bar not displaying in mat-option\" (#29866)"},{"Id":"2581578434","IsPullRequest":false,"CreatedAt":"2024-10-11T14:53:09","Actor":"robmv","Number":"29865","RawContent":null,"Title":"bug(MatTree): expandAll() only expand the first level","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.x\n\n### Description\n\nThe method `expandAll()` of MatTree expands only the first level of a deeply nested tree. On deprecated MatTreeControl, the same method was able to expand the entire tree without problems.\n\nNote: the deprecated control had an advantage that the expansion state could be manipulated before even the view was initialized, but that is another topic.\n\nWORKAROUND: \n\n```typescript\nthis.dataSource.forEach(node => this.tree.expandDescendants(node));\n```\n\n### Reproduction\n\nStackBlitz link: \n\n- Flat nodes: https://stackblitz.com/edit/rk3djh\n- Nested nodes: https://stackblitz.com/edit/mv8yub\n\nSteps to reproduce:\n1. Open the demos.\n2. The tree is partially expanded\n3. Edit the demo and enable the workaround on the `ngAfterViewInit` callback.\n4. The tree is now fully expanded.\n\n\n### Expected Behavior\n\nMatTree's expandAll()  should expand all nodes.\n\n### Actual Behavior\n\nOnly the first level nodes are expanded.\n\n### Environment\n\n- Angular: 18.2.8\n- CDK/Material: 18.2.8\n- Browser(s): Firefox, Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Linux (Fedora)\n","Url":"https://github.com/angular/components/issues/29865","RelatedDescription":"Open issue \"bug(MatTree): expandAll() only expand the first level\" (#29865)"},{"Id":"2581531969","IsPullRequest":false,"CreatedAt":"2024-10-11T14:34:30","Actor":"jumbolu","Number":"29864","RawContent":null,"Title":"stepper icons - accessibility","State":"open","Body":"Hello, \n\nI am questioned by the accessibility testers while using Stepper.  \n\n1. The icons in stepper-header are considered as decorative icons (aria-hidden=\"true\") except \"edit\" and \"done\". I am suggested the \"number\" icons are meaningful, and should be read by the screen-reader as \"Step 1\", \"Step 2\", etc. \n\n2. The indicator icons (edit and done) are read as a separated tab in the screen-reader:\n - \"tab Editable\" then followed by \"tab matStepLabel\" \n - \"tab Completed\" then followed by \"tab matStepLabel\"  \n![Image](https://github.com/user-attachments/assets/65166385-c509-4333-9521-fc9386728573)\n\nAny comments or suggestions to address these accessibility concerns? Thank you!","Url":"https://github.com/angular/components/issues/29864","RelatedDescription":"Open issue \"stepper icons - accessibility\" (#29864)"},{"Id":"2579439379","IsPullRequest":true,"CreatedAt":"2024-10-11T11:50:23","Actor":"andrewseguin","Number":"29858","RawContent":null,"Title":"feat(material/core): add theme-overrides mixin","State":"closed","Body":"Adds a new Sass mixin API to let clients change specific system-level tokens. Similar to the overrides API provided by component theme files","Url":"https://github.com/angular/components/pull/29858","RelatedDescription":"Closed or merged PR \"feat(material/core): add theme-overrides mixin\" (#29858)"},{"Id":"2581125052","IsPullRequest":false,"CreatedAt":"2024-10-11T11:21:32","Actor":"chintankavathia","Number":"29863","RawContent":null,"Title":"bug(cdk/listbox): option remains active after tabbing out","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am not sure if this is an intended behaviour or a bug.\n\nWhen tabbing out without selecting any option within `cdkListBox` it doesn't reset the active option and when user again come back to the listbox it focuses the last active item. Also the behaviour is different when we have multiple options selected and in that case it automatically resets the active option to first selected option.\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/v4ybze?file=src%2Fexample%2Fcdk-listbox-activedescendant-example.html,src%2Fexample%2Fcdk-listbox-activedescendant-example.ts\nSteps to reproduce:\n1. use keyboard arrow keys to to move between list items\n2. tab out from the list\n3. observe `I am active` is present on last focused option\n\n\n### Expected Behavior\n\nThere should be an option to choose whether option should remain active after focus out.\n\n### Actual Behavior\n\nlast focused option remains active after tabbing out from list if no option is selected.\n\n### Environment\n\n- Angular: 18.2\n- CDK/Material: 18.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/29863","RelatedDescription":"Open issue \"bug(cdk/listbox): option remains active after tabbing out\" (#29863)"},{"Id":"2581009515","IsPullRequest":false,"CreatedAt":"2024-10-11T11:17:35","Actor":"e-oz","Number":"29862","RawContent":null,"Title":"bug(Badge): Badge only displays single-digit numbers","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0-next.3\n\n### Description\n\nStarting 19.0.0-next.4, matBadge only displays a single digit.\nHere \"Icon with a badge\" should display \"15\":\n![Image](https://github.com/user-attachments/assets/da55c574-158a-44b6-9302-1925e5dd3b41)\n\nAs it does in Angular Material docs (with older version of Angular Material):\n![Image](https://github.com/user-attachments/assets/a72d5c16-41e5-4841-8c09-9a8190e1d54b)\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/tnwnbh?file=package.json\n\n\n### Expected Behavior\n\nDisplay at least 2-3 digits. That \"...\" takes the same space as the second digit would.\n\n### Actual Behavior\n\nmatBadge only displays a single digit only, then adds \"...\" if more digits.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.0.0-next.8\n- Browser(s): Google Chrome!\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/29862","RelatedDescription":"Closed issue \"bug(Badge): Badge only displays single-digit numbers\" (#29862)"},{"Id":"2580757448","IsPullRequest":true,"CreatedAt":"2024-10-11T08:18:12","Actor":"crisbeto","Number":"29861","RawContent":null,"Title":"fix(cdk/tree): only handle keyboard events directly from the node","State":"open","Body":"Currently the CDK tree handle any keyboard event coming from a descendant. This problematic if there are interactive elements like inputs inside the tree, because their default behavior will be prevented.\r\n\r\nThis change switches to only handling events coming either directly from the tree or directly from a tree node.\r\n\r\nFixes #29828.","Url":"https://github.com/angular/components/pull/29861","RelatedDescription":"Open PR \"fix(cdk/tree): only handle keyboard events directly from the node\" (#29861)"},{"Id":"2576911515","IsPullRequest":true,"CreatedAt":"2024-10-10T22:29:32","Actor":"essjay05","Number":"29853","RawContent":null,"Title":"fix(material/dialog): updates dialog max-height in landscape","State":"closed","Body":"Updates Angular Component Dialog component to have a max-height of 95vh which gives it a calculable height for its contents to adjust on smaller screens or in landscape mode so that the action buttons are able to be accessed by scrolling rather than the dialog window cutting them off.\r\n\r\n[Before screencast](https://screencast.googleplex.com/cast/NDYwNTM5NjIzNTg0NTYzMnxkNTBkMzBmYS1mZQ)\r\n[After screencast](https://screencast.googleplex.com/cast/NTI3OTgxMDMwNDYwNjIwOHw0YTkxYjc3ZS04Yw)\r\n\r\nFixes b/323588333","Url":"https://github.com/angular/components/pull/29853","RelatedDescription":"Closed or merged PR \"fix(material/dialog): updates dialog max-height in landscape\" (#29853)"},{"Id":"2579946317","IsPullRequest":false,"CreatedAt":"2024-10-10T22:11:02","Actor":"bgotink","Number":"29860","RawContent":null,"Title":"feat(cdk/testing): be more lenient in HarnessQuery","State":"open","Body":"### Feature Description\n\nWe find the TestElement/ComponentHarness API exposed in `@angular/cdk/testing` very useful, especially because it decouples much of the test code from the actual environment the test runs in.\n\nWe want to use this for non-Angular projects, where pulling in `@angular/cdk` is a no-go. More specifically, we want to use this to create harnesses for web components, some of which will then end up being used in Angular applications.\nWe've created our own implementation of these types and we're trying to make these compatible with Angular types so that the web component library can use the non-Angular version but these harnesses can then still be used in Angular ComponentHarnesses.\n\nWe've nearly gotten to the point where everything works, there's only one thing we cannot resolve: the `HarnessQuery` used in the `LocatorFactory` interface's functions references the `HarnessPredicate` class which has private properties.\nThis makes \"our\" version of HarnessQuery and the Angular version inherently incompatible according to typescript.\n\nThis could be a small change, e.g. limiting the type in `HarnessQuery` to only the required properties:\n\n```diff\n export type HarnessQuery<T extends ComponentHarness> =\n   | ComponentHarnessConstructor<T>\n-  | HarnessPredicate<T>;\n+  | Pick<HarnessPredicate<T>, 'getDescription' | 'getSelector' | 'harnessType'>\n```\n\nand in the `harness-environment.ts` file use a new function instead of `query instanceof HarnessPredicate`\n\n```ts\nfunction isHarnessPredicate<T extends ComponentHarness>(value: HarnessQuery<T>): value is Pick<HarnessPredicate<T>, 'getDescription' | 'getSelector' | 'harnessType'> {\n  return 'harnessType' in value;\n}\n```\n\n### Use Case\n\nAs mentioned above, we want to use the component harness concept in a non-Angular context and we want those harnesses to be compatible with harnesses written using the CDK and the CDK's harness environments.\n\nAn alternative solution could be to extract part of `@angular/cdk/testing` into a separate package that doesn't have any dependencies to the Angular framework. That way we wouldn't have to maintain our own copy of these types/classes.","Url":"https://github.com/angular/components/issues/29860","RelatedDescription":"Open issue \"feat(cdk/testing): be more lenient in HarnessQuery\" (#29860)"},{"Id":"2579310664","IsPullRequest":true,"CreatedAt":"2024-10-10T17:25:23","Actor":"andrewseguin","Number":"29857","RawContent":null,"Title":"feat(material/core): rename theme mixin","State":"closed","Body":"Renamed `mat.private-experimental-theme` to just `mat.theme`","Url":"https://github.com/angular/components/pull/29857","RelatedDescription":"Closed or merged PR \"feat(material/core): rename theme mixin\" (#29857)"},{"Id":"2578802619","IsPullRequest":false,"CreatedAt":"2024-10-10T15:28:28","Actor":"naiduraa","Number":"29855","RawContent":null,"Title":"Chips: disabled chips is receiving focus","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n<mat-chip-listbox aria-label=\"Fish selection\">\n  <mat-chip-option>One fish</mat-chip-option>\n  <mat-chip-option>Two fish</mat-chip-option>\n  <mat-chip-option>Three fish</mat-chip-option>\n  <mat-chip-option disabled>Four fish</mat-chip-option>\n</mat-chip-listbox>\n\nThe disabled chips receives focus\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/xbnwf3?file=src%2Fexample%2Fchips-overview-example.html\nSteps to reproduce:\n1. Focus using tabs and see the disabled chips receives focus\n\n\n### Expected Behavior\n\nDisabled chips should not receives any focus\n\n### Actual Behavior\n\nDisabled chips receives any focus\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29855","RelatedDescription":"Closed issue \"Chips: disabled chips is receiving focus\" (#29855)"},{"Id":"2579024875","IsPullRequest":false,"CreatedAt":"2024-10-10T14:24:44","Actor":"ronlawrence3","Number":"29856","RawContent":null,"Title":"bug(mat-tree): How to control a tree expansion state if treeControl is deprecated?","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmat-tree has [treeControl] (and many other related classes and parts) deprecated. How are we supposed to control the expansion state of the tree from our component if there is to no treeControl? Was this an oversight in documentation? even your own examples in the documentation use the deprecated features!\n\n\n### Reproduction\n\nN/A\n\n\n### Expected Behavior\n\nI expect deprecated features / componenets / classes to have a new replacement or documentation on HOW to use the new way of doing things that accounts for the deprecated feature.\n\n### Actual Behavior\n\n In this case (CdkTree):\n\n```\n    /**\n     * The tree controller\n     *\n     * @deprecated Use one of `levelAccessor` or `childrenAccessor` instead. To be removed in a\n     * future version.\n     * @breaking-change 21.0.0\n     */\n    treeControl?: TreeControl<T, K>;\n```\nlevelAccessor and childrenAccessor have nothing to do with expansion state. Please tell us what we are supposed to use in place of treeControl!\n\n\n### Environment\n\n- Angular: 18.2.2\n- CDK/Material: 18.2.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): N/A\n","Url":"https://github.com/angular/components/issues/29856","RelatedDescription":"Open issue \"bug(mat-tree): How to control a tree expansion state if treeControl is deprecated?\" (#29856)"},{"Id":"2577922860","IsPullRequest":true,"CreatedAt":"2024-10-10T12:50:28","Actor":"crisbeto","Number":"29854","RawContent":null,"Title":"fix(material/badge): content incorrectly truncated in M3","State":"closed","Body":"Fixes that at some point the M3 badge regressed to where the content was always being truncated. The regression was likely, because the previous setup was very fragile and it was relying on some tokens never being emitted.\r\n\r\nThese changes remove the need to rely on fallbacks and resolve the issue by setting the correct token values.\r\n\r\nFixes #29788.","Url":"https://github.com/angular/components/pull/29854","RelatedDescription":"Closed or merged PR \"fix(material/badge): content incorrectly truncated in M3\" (#29854)"},{"Id":"2575712502","IsPullRequest":false,"CreatedAt":"2024-10-10T06:51:33","Actor":"BackwardsMan","Number":"29847","RawContent":null,"Title":"bug(Badge): position and size on page is off","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe position of the Badge on the Angular Material webpage is off and the wrong size for some badges. \nDon't know if this is a bug in the component itself or strictly how it is displayed on the webpage\nSee image:\n\n![Image](https://github.com/user-attachments/assets/6ba2b982-92c4-4e13-b2ed-1cd08a4ab37b)\n\n\n### Reproduction\n\nLink: https://material.angular.io/components/badge/overview \n\nSteps to reproduce:\n1. Go to webpage\n2. Look at examples for the Badge\n\n\n\n### Expected Behavior\n\n1. Expect a small badge to be smaller than default\n2. Expect a large badge to be larger than default\n3. Expect no badges to overlap text\n4. Expect no badges to overlap icons\n5. Expect badge with icon to show number 15 \n\n### Actual Behavior\n\n1. Small badge is not smaller than default badge\n2. Large badge is nog bigger than default badge\n3. Large badge overlaps with text\n4. Icon with a badge overlaps the icon\n5. Icon with a badge shows \"1 and ellipsis\"\n\n### Environment\n\n- Browser(s): Chrome Version 129.0.6668.90 (Official Build) (arm64)\n- Operating System: macOS\n","Url":"https://github.com/angular/components/issues/29847","RelatedDescription":"Closed issue \"bug(Badge): position and size on page is off\" (#29847)"},{"Id":"2575971596","IsPullRequest":true,"CreatedAt":"2024-10-09T13:40:18","Actor":"crisbeto","Number":"29852","RawContent":null,"Title":"Bump version to \"v19.0.0-next.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29852","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.8\" with changelog.\" (#29852)"},{"Id":"2575948684","IsPullRequest":true,"CreatedAt":"2024-10-09T13:32:15","Actor":"crisbeto","Number":"29851","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29851","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#29851)"},{"Id":"2575943880","IsPullRequest":true,"CreatedAt":"2024-10-09T13:28:18","Actor":"crisbeto","Number":"29850","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29850","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#29850)"},{"Id":"2575822668","IsPullRequest":true,"CreatedAt":"2024-10-09T12:51:35","Actor":"miguelcsx","Number":"29849","RawContent":null,"Title":"docs(material/icon): #29838 update broken link in icon documentation","State":"closed","Body":"This pull request fixes a broken link in the documentation for the Angular Material `icon` component. \r\n\r\n**Changes:**\r\n- The incorrect link in `components/src/material/icon/icon.ts` has been updated to the correct one.\r\n  \r\n**Motivation:**\r\n- A broken link can lead to confusion and a poor user experience when reading the documentation.\r\n\r\n**No functionality or API was modified.**\r\n\r\n- closes #29838 \r\n\r\nPlease review and merge if everything looks good. Let me know if any further changes are needed.\r\n","Url":"https://github.com/angular/components/pull/29849","RelatedDescription":"Closed or merged PR \"docs(material/icon): #29838 update broken link in icon documentation\" (#29849)"},{"Id":"2575738364","IsPullRequest":true,"CreatedAt":"2024-10-09T12:48:08","Actor":"crisbeto","Number":"29848","RawContent":null,"Title":"build: account for absolute paths in token extraction","State":"closed","Body":"Fixes an error that is currently breaking the patch branch, because we didn't have a resolver for imports like `@use '@angular/cdk';`.","Url":"https://github.com/angular/components/pull/29848","RelatedDescription":"Closed or merged PR \"build: account for absolute paths in token extraction\" (#29848)"},{"Id":"2572086016","IsPullRequest":false,"CreatedAt":"2024-10-09T09:40:40","Actor":"reuse-ay","Number":"29843","RawContent":null,"Title":"docs-bug(COMPONENT): MatListItem activated type is not shown","State":"closed","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/list/api#MatListItem\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/list/api#MatListItem","Url":"https://github.com/angular/components/issues/29843","RelatedDescription":"Closed issue \"docs-bug(COMPONENT): MatListItem activated type is not shown\" (#29843)"},{"Id":"2573667019","IsPullRequest":true,"CreatedAt":"2024-10-09T09:40:39","Actor":"ChinoUkaegbu","Number":"29845","RawContent":null,"Title":"docs: show MatListItem activated type","State":"closed","Body":"Closes #29843 ","Url":"https://github.com/angular/components/pull/29845","RelatedDescription":"Closed or merged PR \"docs: show MatListItem activated type\" (#29845)"},{"Id":"2575272016","IsPullRequest":true,"CreatedAt":"2024-10-09T09:38:40","Actor":"crisbeto","Number":"29846","RawContent":null,"Title":"Token extraction updates","State":"closed","Body":"Includes a couple of changes (see individual commits) to ensure that we extract tokens correctly from the `core-theme` and that we correctly reflect tokens whose names overlap between different prefixes.","Url":"https://github.com/angular/components/pull/29846","RelatedDescription":"Closed or merged PR \"Token extraction updates\" (#29846)"},{"Id":"2572704535","IsPullRequest":false,"CreatedAt":"2024-10-08T09:56:20","Actor":"valentyna-sidorova-simpligov","Number":"29844","RawContent":null,"Title":"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus","State":"open","Body":"### Description\n\nWhen using screen readers and lazy load menu, the menu closes faster than the state (aria-expanded) updates so when the trigger refocuses it has an expanded state. Then it changes to collapsed state, which causes reading 2 states.\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/2tyoy4?file=src%2Fexample%2Fmenu-overview-example.html\nSteps to reproduce:\nUse any menu with matMenuContent\n\n### Expected Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **collapsed**  subMenu \n\n\n### Actual Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **expanded**  subMenu  \n  **collapsed**\n\n\n### Environment\n\n- Angular: 18.2.6\n- CDK/Material: 18.2.6\n- Browser(s): Chrome Version 129.0.6668.72\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/29844","RelatedDescription":"Open issue \"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus\" (#29844)"},{"Id":"2571264712","IsPullRequest":true,"CreatedAt":"2024-10-08T06:58:13","Actor":"crisbeto","Number":"29842","RawContent":null,"Title":"build: rework tokens extraction","State":"closed","Body":"Reworks how we extract the tokens so we can output `override` calls instead of the full CSS variables.","Url":"https://github.com/angular/components/pull/29842","RelatedDescription":"Closed or merged PR \"build: rework tokens extraction\" (#29842)"},{"Id":"2569913669","IsPullRequest":false,"CreatedAt":"2024-10-07T09:46:14","Actor":"MikaStark","Number":"29841","RawContent":null,"Title":"bug(buttons): align button types with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for buttons mention 5 differents kind of buttons :\n\n- [Elevated](https://m3.material.io/components/buttons/specs#0eea2a85-b4d7-4c74-b08e-98410b9412c7) : currently named `raised` but wrong background color is applied (should be `surface-container-low`)\n- [Filled](https://m3.material.io/components/buttons/specs#0b1b7bd2-3de8-431a-afa1-d692e2e18b0d) : currently named `flat`\n- [Filled tonal](https://m3.material.io/components/buttons/specs#158f0a18-67fb-4ac4-9d22-cc4d1adc4579) : not supported\n- [Outlined](https://m3.material.io/components/buttons/specs#de72d8b1-ba16-4cd7-989e-e2ad3293cf63) : currently named `flat`\n- [Text](https://m3.material.io/components/buttons/specs#899b9107-0127-4a01-8f4c-87f19323a1b4) : not supported\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\nFuthermore, a appreciable enhancement whould be to regroup all css selectors for `MatButton` and `MatAnchor` directives into one `mat-button` and add an extra `appearance` input like cards does. Acceptable values would be `elevated`, `filled`, `filled-tonal`, `outlined` and `text` (default one)\n\n### Reproduction\n\nIf really needed, tell me...\n\n### Expected Behavior\n\n- Rename `mat-raised-button` to `mat-elevated-button`\n- Rename `mat-flat-button` to `mat-filled-button`\n- Add missing `mat-filled-tonal-button`\n- Rename `mat-flat-button` to `mat-outlined-button`\n- Add missing `mat-text-button`\n\n### Actual Behavior\n\n*cf. Expected Behavior*\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29841","RelatedDescription":"Open issue \"bug(buttons): align button types with m3 specs\" (#29841)"},{"Id":"2569839813","IsPullRequest":false,"CreatedAt":"2024-10-07T09:15:30","Actor":"MikaStark","Number":"29840","RawContent":null,"Title":"bug(card): align card appearance with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for cards mention 3 differents appearance :\n- [Elevated](https://m3.material.io/components/cards/specs#a012d40d-7a5c-4b07-8740-491dec79d58b) : currently corresponds to `raised`\n- [Filled](https://m3.material.io/components/cards/specs#0f55bf62-edf2-4619-b00d-b9ed462f2c5a) : currently missing \n- [Outlined](https://m3.material.io/components/cards/specs#9ad208b3-3d37-475c-a0eb-68cf845718f8) : fully supported\n\nThat's why I proposed to add a new `filled` appearance to the existing ones and rename `raised` into `elevated`.\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/zkkqyi?file=src%2Fexample%2Fcard-footer-example.css\n\n\n### Expected Behavior\n\nHaving 3 appearance for cards : `outlined`, `elevated` and `filled`\n\n### Actual Behavior\n\n- Missing `filled` appearance\n- `elevated` appearance is instead named `raised`\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29840","RelatedDescription":"Open issue \"bug(card): align card appearance with m3 specs\" (#29840)"},{"Id":"2568906688","IsPullRequest":false,"CreatedAt":"2024-10-06T21:20:21","Actor":"moniuch","Number":"29839","RawContent":null,"Title":"docs-bug(common): The way deprecated symbols are rendered","State":"open","Body":"### Documentation Feedback\n\nThe docs for material have a general problem with deprecated symbols.\nHere is just an example of *TreeControl\n\n1. The word **Deprecated** on hover suggests through the question mark that there is some explanation behind it (which there is when you look into the TS code), but nothing happens either on hover or on click [it was impossible to capture that cursor in the screenshot]\n2. I think for the sake of clarity, the name of a deprecated symbol should be style using strikethrough, and the explanation + suggestions what to use should immediately follow it, even before the old description. Currently the styling of the Deprecated word doesn't really stand out as much as it should, blends into the body text, IMO. \n\n![Image](https://github.com/user-attachments/assets/bd2fcfde-a218-4c57-ae08-b0f923bb7308)\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/api#BaseTreeControl","Url":"https://github.com/angular/components/issues/29839","RelatedDescription":"Open issue \"docs-bug(common): The way deprecated symbols are rendered\" (#29839)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-12T03:30:02.5565454Z","RunDurationInMilliseconds":1862}