{"Data":{"Angular-Issues":{"Issues":[{"Id":"3012468117","IsPullRequest":false,"CreatedAt":"2025-04-23T01:39:07","Actor":"Cynnalynna","Number":"60966","RawContent":null,"Title":"Octokit.js","State":"closed","Body":"### Is this a bug report or a feature request?\n\n- [ ] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n// Octokit.js\n// https://github.com/octokit/core.js#readme\nconst octokit = new Octokit({\n  auth: 'YOUR-TOKEN'\n})\n\nawait octokit.request('GET /repos/{owner}/{repo}/environments', {\n  owner: 'OWNER',\n  repo: 'REPO',\n  headers: {\n    'X-GitHub-Api-Version': '2022-11-28'\n  }\n})\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n// Octokit.js\n// https://github.com/octokit/core.js#readme\nconst octokit = new Octokit({\n  auth: 'YOUR-TOKEN'\n})\n\nawait octokit.request('GET /repos/{owner}/{repo}/environments', {\n  owner: 'OWNER',\n  repo: 'REPO',\n  headers: {\n    'X-GitHub-Api-Version': '2022-11-28'\n  }\n})\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\n\n```\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\n\n```\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/60966","RelatedDescription":"Closed issue \"Octokit.js\" (#60966)"},{"Id":"3012461273","IsPullRequest":false,"CreatedAt":"2025-04-23T01:26:27","Actor":"LearnGrowAndShare","Number":"60965","RawContent":null,"Title":"Help in understanding memory usage with ngif.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have created a sample application using angular cli, with app.component have a button and paragraph to toggle display of paragraph.\n\nEverytime i keep toggling the paragraph it keeps increasing the memory footprints. \n\nHere is few screenshots - \nIntial load - \n\n<img width=\"950\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2537ee7b-8b59-459f-94f8-9cfda638b01e\" />\n\ntoggling button for a few times.\n\n<img width=\"977\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/43b21aca-bc12-4950-bd1a-3d07f636cc3e\" />\n\ntoggling button for a few more times.\n\n<img width=\"918\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3788cc5a-2003-4f39-85ca-dcf970205d4a\" />\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n\nPlease find the sample app . \n[angular-19.zip](https://github.com/user-attachments/files/19859307/angular-19.zip)\n\n### Please provide the exception or error you saw\n\n```true\nNo error.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.8\nNode: 23.11.0 (Unsupported)\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.2.7\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.8\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            19.2.8\n@angular-devkit/schematics      19.2.8\n@angular/cli                    19.2.8\n@schematics/angular             19.2.8\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n    \n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60965","RelatedDescription":"Open issue \"Help in understanding memory usage with ngif.\" (#60965)"},{"Id":"3012158350","IsPullRequest":false,"CreatedAt":"2025-04-22T21:22:35","Actor":"alxhub","Number":"60964","RawContent":null,"Title":"Support for TC39 Signals","State":"open","Body":"There is a [Proposal](https://github.com/tc39/proposal-signals) for a standard signals mechanism in JavaScript, which is currently Stage 1. This issue is meant to track Angular support for builtin signals in JavaScript, if/when they become standard.\n\nAngular does not _currently_ intend to implement support for the standard while it's at Stage 1, including support for the polyfill of the proposed API. \n\nSome examples of potential benefits/considerations for interop:\n\n* #60885 - interop with non-Angular web components built on the TC39 standard","Url":"https://github.com/angular/angular/issues/60964","RelatedDescription":"Open issue \"Support for TC39 Signals\" (#60964)"},{"Id":"3012019598","IsPullRequest":true,"CreatedAt":"2025-04-22T20:12:35","Actor":"dgp1130","Number":"60963","RawContent":null,"Title":"release: bump Angular DevTools version to 1.0.29","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/60963","RelatedDescription":"Open PR \"release: bump Angular DevTools version to 1.0.29\" (#60963)"},{"Id":"3011387590","IsPullRequest":true,"CreatedAt":"2025-04-22T19:23:39","Actor":"angular-robot","Number":"60960","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `94729f4` -> `12f9c88` |\n| angular/dev-infra | action | digest | `64d0e9d` -> `9488b2f` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60960","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#60960)"},{"Id":"3011836349","IsPullRequest":false,"CreatedAt":"2025-04-22T18:43:50","Actor":"kai1992cool","Number":"60962","RawContent":null,"Title":"Enable `url` property of  `HttpResourceRequest` to be a callback","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon\n\n### Description\n\nThere is no way to trigger reactivity when using `HttpResourceRequest` with `httpResource`, when the signal inside changes, there is no reload.\n\n    import { Component, signal } from '@angular/core';\n    import { FormsModule } from '@angular/forms';\n    import { CommonModule } from '@angular/common';\n    import {\n      httpResource,\n      HttpResourceOptions,\n      HttpResourceRequest,\n      provideHttpClient,\n    } from '@angular/common/http';\n    import { bootstrapApplication } from '@angular/platform-browser';\n\n    @Component({\n      selector: 'app-root',\n      imports: [FormsModule, CommonModule],\n      template: `\n          <input [(ngModel)]=\"id\" type=\"number\"/>\n          <hr/>\n          <div>{{api.value() | json}}</div>\n          <hr/>\n          <div>{{api2.value() | json}}</div>\n          `,\n    })\n    export class App {\n      id = signal<number>(2);\n      api = httpResource(() => `https://jsonplaceholder.typicode.com/todos/${this.id()}`);\n        api2 = httpResource({\n          method: 'GET',\n          url: `https://jsonplaceholder.typicode.com/todos/${this.id()}`,\n        } as HttpResourceRequest);\n    }\n\n    bootstrapApplication(App, {\n      providers: [provideHttpClient()],\n    });\n\n[Stackblitz Demo](https://stackblitz.com/edit/stackblitz-starters-3praw1d9?file=src%2Fmain.ts)\n\n### Proposed solution\n\nEnable url property to allow a callback, so that reactivity can be achieved.\n\n    api2 = httpResource({\n      method: 'GET',\n      url: () => `https://jsonplaceholder.typicode.com/todos/${this.id()}`,\n    } as HttpResourceRequest);\n\n\n### Alternatives considered\n\nfeature request","Url":"https://github.com/angular/angular/issues/60962","RelatedDescription":"Closed issue \"Enable `url` property of  `HttpResourceRequest` to be a callback\" (#60962)"},{"Id":"3010560520","IsPullRequest":false,"CreatedAt":"2025-04-22T18:25:05","Actor":"angelaki","Number":"60950","RawContent":null,"Title":"feat(service-worker): Allow ServiceWorker to only proxy listed elements","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n@angular/service-worker / @angular/pwa\n\n### Description\n\nIf I'm not mistaken the NgSw currently proxies all requests but not only the ones listed in the `ngsw-config.json`. At least I asked in Stackoverflow (https://stackoverflow.com/questions/79577991) & Reddit (https://www.reddit.com/r/Angular2/comments/1k1a04x/force_serviceworker_to_only_proxy_datagroups/) for it but no response so far.\n\nSince I do not want to vary the default behavior **at all** (e.g. replace Http Error 0 by 503) I'd like to be able to use the ServiceWorker **only** for the listed elements / requests in it's config file. I've created an interceptor putting `ngsw-bypass` with every HttpRequest but that e.g. broke `mat-icon` relying on the HttpClient and it's icons should get cached. Sure I could filter this request but imho the cleanest solution would be to not proxy all the requests.\n\nBy the way: why does the implementation do this at all? Does it handle the cache headers? And if so, why not rely on the browsers implementation? What are its quotas? Couldn't find anything in the docs.\n\n### Proposed solution\n\nPut an option to the `ngsw-config.json` file to only proxy listed requests (and maybe make it the default option? Imho the default behavior is quite confusing).\n\n### Alternatives considered\n\nInterceptor putting an `request.clone({ setHeaders: { 'ngsw-bypass': 'true' } });` to all requests (but that won't handle all requests but only HttpClient's).","Url":"https://github.com/angular/angular/issues/60950","RelatedDescription":"Closed issue \"feat(service-worker): Allow ServiceWorker to only proxy listed elements\" (#60950)"},{"Id":"3011746142","IsPullRequest":true,"CreatedAt":"2025-04-22T17:53:46","Actor":"atscott","Number":"60961","RawContent":null,"Title":"refactor(core): Update FakeNavigation to extract some Angular quirks","State":"open","Body":"This change updates the implementation of `FakeNavigation` to extract some changes that were made due to quirks in Angular testing.\r\n","Url":"https://github.com/angular/angular/pull/60961","RelatedDescription":"Open PR \"refactor(core): Update FakeNavigation to extract some Angular quirks\" (#60961)"},{"Id":"3011019718","IsPullRequest":true,"CreatedAt":"2025-04-22T14:27:26","Actor":"JeanMeche","Number":"60956","RawContent":null,"Title":"refactor(core): mark `makeEnvironmentProviders` as public.","State":"closed","Body":"`makeEnvironmentProviders` was already exported but didn't have the `@publicApi` tag.\n","Url":"https://github.com/angular/angular/pull/60956","RelatedDescription":"Closed or merged PR \"refactor(core): mark `makeEnvironmentProviders` as public.\" (#60956)"},{"Id":"3011258262","IsPullRequest":true,"CreatedAt":"2025-04-22T14:24:00","Actor":"pkozlowski-opensource","Number":"60959","RawContent":null,"Title":"refactor(core): replace `TestBed.flushEffects` with `tick`","State":"open","Body":"Instead of stabilizing the `TestBed.flushEffects()` API we intend to replace it with the `tick()` method (equivalent of `ApplicationRef.tick()`. The reasoning here is that we prefer tests running the entire synchronization process (as in production apps) instead of invoking parts of the synchronization process in a way that would naver happen in a running application.\r\n","Url":"https://github.com/angular/angular/pull/60959","RelatedDescription":"Open PR \"refactor(core): replace `TestBed.flushEffects` with `tick`\" (#60959)"},{"Id":"3011049400","IsPullRequest":true,"CreatedAt":"2025-04-22T13:10:16","Actor":"alan-agius4","Number":"60958","RawContent":null,"Title":"refactor(router): produce error message when `canMatch` is used with `redirectTo`","State":"open","Body":"\r\n\r\nRedirects in the router are handled before `canMatch` guards are evaluated. As a result, `canMatch` will not run for routes that include a redirect. Instead of silently ignoring this misconfiguration, developers should be alerted to help them understand why it doesn't behave as expected.\r\n\r\nCloses: #60957\r\n","Url":"https://github.com/angular/angular/pull/60958","RelatedDescription":"Open PR \"refactor(router): produce error message when `canMatch` is used with `redirectTo`\" (#60958)"},{"Id":"3011007682","IsPullRequest":false,"CreatedAt":"2025-04-22T12:30:44","Actor":"dimamarksman","Number":"60955","RawContent":null,"Title":"SSR: provider with \"useValue\" syntax keeps the same instance for different requests during SSR phase","State":"open","Body":"### Command\n\nbuild\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen I define environment provider with `useValue` option SSR starts treating it as the singleton so this provider instance gets shared between all requests while during hydration this provider gets recreated so it goes to intial state. \n\n```typescript\nmakeEnvironmentProviders([\n   {\n        provide: \"MY_DATA_PROVIDER\",\n        useValue: {/*some object here*/},\n    }\n])\n```\n\nWhile with `useFactory` approach SSR treats it as unique instance for each request as expected:\n```typescript\nmakeEnvironmentProviders([\n   {\n        provide: \"MY_DATA_PROVIDER\",\n        useFactory: () => {\n           return {/*some object here*/};\n        },\n    }\n])\n```\n\nI would expect to have new `useValue` instance for every SSR request the same way as it works with `useFactory`\n\n### Minimal Reproduction\n\n[Repo to reproduce](https://github.com/dimamarksman/angular-ssr-use-value-issue/tree/main) this behaviour\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.8\nNode: 20.19.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.2.7\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.8\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            19.2.8\n@angular-devkit/schematics      19.2.8\n@angular/cli                    19.2.8\n@angular/ssr                    19.2.8\n@schematics/angular             19.2.8\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nTo test it run \n1. `npm start` \n2. Open tab with page source `view-source:http://localhost:4200` \n3. Refresh page several times and observe `Count` value, it gets incremented on every request\n\n<img width=\"817\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6338ca24-e239-432d-8233-ef11f30bbfc3\" />\n","Url":"https://github.com/angular/angular/issues/60955","RelatedDescription":"Open issue \"SSR: provider with \"useValue\" syntax keeps the same instance for different requests during SSR phase\" (#60955)"},{"Id":"3007764369","IsPullRequest":true,"CreatedAt":"2025-04-22T11:37:32","Actor":"angular-robot","Number":"60942","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60942","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#60942)"},{"Id":"3010730190","IsPullRequest":true,"CreatedAt":"2025-04-22T11:00:38","Actor":"JeanMeche","Number":"60954","RawContent":null,"Title":"refactor(core): stop producing `ng-reflect` attributes by default","State":"open","Body":"This commit deprecates `ng-reflect-*` attributes and updates the runtime to stop producing them by default. Please refactor application and test code to avoid relying on `ng-reflect-*` attributes.\r\n\r\nTo enable a more seamless upgrade to v20, we've added the `provideNgReflectAttributes()` function (can be imported from the `@angular/core` package), which enables the mode in which Angular would be producing those attribites (in dev mode only). You can add the `provideNgReflectAttributes()` function to the list of providers within the bootstrap call.\r\n\r\nBREAKING CHANGE: Angular won't produce `ng-reflect` attributes by default anymore. ","Url":"https://github.com/angular/angular/pull/60954","RelatedDescription":"Open PR \"refactor(core): stop producing `ng-reflect` attributes by default\" (#60954)"},{"Id":"3010662570","IsPullRequest":false,"CreatedAt":"2025-04-22T10:45:51","Actor":"pradeepi2i","Number":"60953","RawContent":null,"Title":"Angular 18 Vite or esbuild incompatible with json2typescript library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAngular 18 Vite incompatible with json2typescript library\n\nJson2Typescript is a library that is used to serialize/deserialize a models. \nAfter upgrading to Angular 18 (use vite build), then rendered in DOM, while rendering emits an error\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\neventhough the class used is a unique name\nError:\n\n\"You must use unique class identifiers in the @JsonObject() decorator.\"\n\n\"Class identifier: ClassA\n\nThis class identifier has been already used for class \"ClassA2\".\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 18\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60953","RelatedDescription":"Closed issue \"Angular 18 Vite or esbuild incompatible with json2typescript library\" (#60953)"},{"Id":"3010610020","IsPullRequest":true,"CreatedAt":"2025-04-22T10:10:37","Actor":"crisbeto","Number":"60952","RawContent":null,"Title":"Binder support for selectorless","State":"open","Body":"These changes update the template binder to account for selectorless. This is necessary for further compiler work. Includes the following commits:\r\n\r\n### refactor(compiler): allow different kinds of directive matchers to be passed to binder\r\nUpdates the target binder to allow either a selector-based or selectorless matcher to be passed in. This will allow us to skip some of the overhead when matching directives to nodes.\r\n\r\n### refactor(compiler): add flag to enable selectorless parsing \r\nAdds a flag to `parseTemplate` to enable selectorless.\r\n\r\n### refactor(compiler): validate references in selectorless \r\nAdds the following validations to the selectorless template parsing:\r\n* Local references with values are not allowed (e.g. `#foo=\"bar\"`).\r\n* Multiple local references with the same on a component or directive are not allowed.\r\n\r\n### refactor(compiler): account for selectorless in template binder \r\nUpdates the template binder to account for the new selectorless AST nodes. This is a prerequisite to supporting template type checking of the new syntax.","Url":"https://github.com/angular/angular/pull/60952","RelatedDescription":"Open PR \"Binder support for selectorless\" (#60952)"},{"Id":"3010569830","IsPullRequest":true,"CreatedAt":"2025-04-22T09:54:33","Actor":"pkozlowski-opensource","Number":"60951","RawContent":null,"Title":"refactor(core): alias `afterRender` to `afterEveryRender`","State":"open","Body":"Introduce an alias from afterRender to afterEveryRender in preparations for the the internal rename.\r\nOpening this intermediate PR mostly to do G3 cleanups.\r\n","Url":"https://github.com/angular/angular/pull/60951","RelatedDescription":"Open PR \"refactor(core): alias `afterRender` to `afterEveryRender`\" (#60951)"},{"Id":"3010415158","IsPullRequest":false,"CreatedAt":"2025-04-22T09:20:09","Actor":"saikrushna-dev","Number":"60949","RawContent":null,"Title":"error NG6002: 'NgReduxModule' does not appear to be an NgModule class.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi,\n\nOur application is migrate from angular 16 to angular 17 and we are using ngreduxstore for store.  when we create build its giving below exception\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError: src/app/app.module.ts:82:5 - error NG6002: 'NgReduxModule' does not appear to be an NgModule class.\n\n82     NgReduxModule,\n       ~~~~~~~~~~~~~\n\n  node_modules/@angular-redux/store/lib/src/ng-redux.module.d.ts:5:22\n    5 export declare class NgReduxModule {\n                           ~~~~~~~~~~~~~\n    This likely means that the library (@angular-redux/store) which declares NgReduxModule is not compatible with Angular Ivy. Check if a newer version of the library is available, and update if so. Also consider checking with the library's authors to see if the library is expected to be compatible with Ivy.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\"@angular-devkit/build-angular\": \"17.3.16\",\n    \"@angular/cli\": \"17.3.16\",\n    \"@angular/compiler-cli\": \"17.3.12\",\n    \"@angular/language-service\": \"17.3.12\",\n    \"@angular/localize\": \"17.3.12\",\n    \"@types/jasmine\": \"~3.6.0\",\n    \"@types/jasminewd2\": \"^2.0.13\",\n    \"@types/lodash\": \"^4.14.202\",\n    \"@types/node\": \"^11.9.5\",\n\"rxjs\": \"^7.8.2\",\n\nNode - 18.13.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60949","RelatedDescription":"Closed issue \"error NG6002: 'NgReduxModule' does not appear to be an NgModule class.\" (#60949)"},{"Id":"3007135522","IsPullRequest":true,"CreatedAt":"2025-04-22T09:14:16","Actor":"JeanMeche","Number":"60938","RawContent":null,"Title":"docs: update examples for i18n tokens","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60938","RelatedDescription":"Closed or merged PR \"docs: update examples for i18n tokens\" (#60938)"},{"Id":"3008936558","IsPullRequest":false,"CreatedAt":"2025-04-21T17:41:42","Actor":"quedicesebas","Number":"60947","RawContent":null,"Title":"NgOptimizedImage placeholder never replaced","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter adding `placeholder` to the image tag, the blured image is showed but the full image is never shown (never replaces the placeholder)\n\n```\n<img\n                  [ngSrc]=\"\n                    section.extras.image | safe: 'resourceUrl'\n                  \"\n                  alt=\"Main photo\"\n                  priority\n                  fill\n                  placeholder\n                  class=\"object-cover\"\n                />\n```\n\n**It seems like the style `filter: blur(15px);` that is added is never removed.**\n\nI try it with the url pointing to Firebase Cloud Storage and using the ImageKit loader also.\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n![Image](https://github.com/user-attachments/assets/16978ee6-703c-44ab-bc44-4fae3119de0d)\n\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.8\nNode: 20.15.0\nPackage Manager: npm 10.8.1\nOS: win32 x64\n\nAngular: 19.2.7\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1702.3\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            17.2.3\n@angular-devkit/schematics      19.2.8\n@angular/cli                    19.2.8\n@angular/fire                   19.1.0\n@angular/google-maps            19.2.10\n@angular/ssr                    19.2.8\n@schematics/angular             19.2.8\nrxjs                            7.8.2\ntypescript                      5.8.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nSeeing the source code of the directive, I found that the style is applied always that the placeholder attribute is presented, and no placeholder config is presented, or the blur property is true. This is the intended behavior, or should be unblurred when the full image loads?:\n\n```\n'[style.filter]': 'placeholder && shouldBlurPlaceholder(placeholderConfig) ? \"blur(15px)\" : null'\n```\nfrom: [ng_optimized_image.ts source](https://github.com/crisbeto/angular/blob/567522398ffc4149e726ef30d87b0169ae6f3e21/packages/common/src/directives/ng_optimized_image/ng_optimized_image.ts#L278)","Url":"https://github.com/angular/angular/issues/60947","RelatedDescription":"Open issue \"NgOptimizedImage placeholder never replaced\" (#60947)"},{"Id":"3008845782","IsPullRequest":true,"CreatedAt":"2025-04-21T16:50:40","Actor":"atscott","Number":"60946","RawContent":null,"Title":"refactor(core): `NgZone.onError` reports to application error handler","State":"open","Body":"This commit ensures that errors from the `NgZone.onError` subscription in bootstrap are reported to the internal application error handler. Practically speaking, this should not affect anything today, as the application handler goes directly to the `ErrorHandler` from the root. While TestBed installs an application error handler that rethrows, `TestBed.createComponent` does not create components through this bootstrap function.\r\n","Url":"https://github.com/angular/angular/pull/60946","RelatedDescription":"Open PR \"refactor(core): `NgZone.onError` reports to application error handler\" (#60946)"},{"Id":"3008664253","IsPullRequest":true,"CreatedAt":"2025-04-21T15:19:47","Actor":"arturovt","Number":"60945","RawContent":null,"Title":"refactor(router): remove `Compiler` injectee from `RouterPreloader`","State":"open","Body":"This commit removes the `Compiler` injectee from the `RouterPreloader` constructor. It's unused but was still being referenced in the factory definition: `static ɵfac = ɵɵngDeclareFactory(...)`.","Url":"https://github.com/angular/angular/pull/60945","RelatedDescription":"Open PR \"refactor(router): remove `Compiler` injectee from `RouterPreloader`\" (#60945)"},{"Id":"3008638197","IsPullRequest":true,"CreatedAt":"2025-04-21T15:10:45","Actor":"arturovt","Number":"60944","RawContent":null,"Title":"fix(core): do not run change detection on global error events","State":"open","Body":"This commit wraps the `error` and `unhandledrejection` event listeners so they are installed outside of the Angular zone, because otherwise they trigger change detection whenever the event callbacks are invoked.","Url":"https://github.com/angular/angular/pull/60944","RelatedDescription":"Open PR \"fix(core): do not run change detection on global error events\" (#60944)"},{"Id":"3007808916","IsPullRequest":false,"CreatedAt":"2025-04-21T07:38:09","Actor":"akib1997","Number":"60943","RawContent":null,"Title":"Please include a list of example applications in the documentation for reference.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nCan we bring in a list of example apps, like the ones below\nhttps://v17.angular.io/guide/example-apps-list\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60943","RelatedDescription":"Open issue \"Please include a list of example applications in the documentation for reference.\" (#60943)"},{"Id":"3007232834","IsPullRequest":false,"CreatedAt":"2025-04-20T21:16:59","Actor":"moniuch","Number":"60941","RawContent":null,"Title":"Introduce a11y-focus mode for element inspector?","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [ ] Bug Report\n- [x] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\nSince what I'm asking for is not achievable in the native browser DevTools inspector, I thought maybe Angular DevTools could offer it.\n\nI'd appreciate having an **a11y focus mode** in the element inspector.\n\n\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\n\n```\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\n\n```\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\nThis would be mode where the inspector would only show a specific subset of element attributes that allows debugging/troubleshooting HTML markup when ensuring proper a11y behaviors.\n\nSo the elements would show the attributes that contribute to correct a11y behavior: `id`, `role`, `aria-*`, `tabindex` (and maybe some others should they slip my memory)\n\nThis is not to be confused with the Accessibility Tree which serves a different purpose:\n\n![Image](https://github.com/user-attachments/assets/8122ccea-9e86-4bbb-942f-0da623947e35)\n\n### Alternatives considered [Feature Request only]\n\nThe alternatives aren't really there:\n- native devtools' Element inspector shows a whole bunch of attributes, some of them being Angular proprietary ones, such as `_ngcontent-ng-...` `_nghost-ng-...`, input reflections, etc. which obscure the attributes that matter for a11y. When focusing on the correct a11y markup, it is difficult to get a good representation of the rendered page with the Angular \"noise\" filtered out.\n- the Accessibility tree serves a different purpose - it's not to show HTML","Url":"https://github.com/angular/angular/issues/60941","RelatedDescription":"Open issue \"Introduce a11y-focus mode for element inspector?\" (#60941)"},{"Id":"3007152992","IsPullRequest":true,"CreatedAt":"2025-04-20T18:11:16","Actor":"JeanMeche","Number":"60940","RawContent":null,"Title":"refactor(upgrade): replace the dependency on `platform-browser-dynamic` with `compiler`","State":"open","Body":"Compiler was already a transitive dependency.\r\n","Url":"https://github.com/angular/angular/pull/60940","RelatedDescription":"Open PR \"refactor(upgrade): replace the dependency on `platform-browser-dynamic` with `compiler`\" (#60940)"},{"Id":"3007145175","IsPullRequest":false,"CreatedAt":"2025-04-20T17:52:51","Actor":"thern743","Number":"60939","RawContent":null,"Title":"Allow Arbitrary Function Calls from @for and @let blocks","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nCurrently, if we need to call a function within an Angular template, we need to use `@let` to define a variable and the function call must return a value, even if the value is not used. Furthermore, if the $index needs to be used, accessing it within the `@for` declaration doesn't allow the `let` usage for that variable.\n\nMore specifically, there currently isn't a \"clean\" way to do this within a `@for` loop block for an arbitrary number of calls:\n\n```\n@for (item of items; track item.id) {\n  @let _1 = myCalcFunction1($index);\n  @let _2 = myCalcFunction2();\n\n  Item #{{ idx }}: {{ item.name }} ( {{ myCalculatedValue1 }} - {{ myCalculatedValue2 }} )\n}\n``` \n\nAs demonstrated, the index may or may not matter - I simply want to call a function.\n\n# Example Use Case 1 - FormArrays\n\nImagine a `@for` loop is being used to iterate over a `FormArray`'s controls. The code-behind would have already spent  processing time looping to build the controls to begin with. Second, the template will already be iterating _again_ over the FormArray. If some _other_ action needs to be taken in the code-behind, it would be much more efficient to allow this to occur **while the template is already iterating the FormArray**:\n\n```\ndiv formArrayName=\"myFormArray\">\n  @for (ctl of myFormArray.controls; track ctl) {\n    @let _ = doSoethingWhileIteratingFormArray($index);\n  ...\n```\n\n# Example Use Case 2 - General Debugging, Stats, and API Calls\n\nThere may be debugging needs, statistics and usage tacking, API calls, or other use cases where we may want to simply call an arbitrary function while the code is iterating over an array already. This would vastly simplify the need for extra functions, index tracking, subscriptions, and general coordination.\n\n### Proposed solution\n\nEither allow discards to be used within `@for` and `@let` blocks or simply allow void function calls.\n\nDiscards in @for let block:\n\n```\n@for (item of items; track item.id; let idx = $index, e = $even, _ = myCalcFunction1(idx), _ = myCalcFunction2()) {\n  ...\n}\n```\n\nDiscard within @let block:\n\n```\n@for (item of items; track item.id; let idx = $index, e = $even) {\n  @let _ = myCalcFunction1(idx);\n  @let _ = myCalcFunction2();\n\n  ...\n}\n```\n\nSeparate block arguments without let:\n\n```\n@for (item of items; track item.id; let idx = $index, e = $even; myCalcFunction1($index), myCalcFunction2()) {\n  ...\n}\n```\n\n### Alternatives considered\n\nUsing `@let` blocks to call functions that _must_ return a value. If we need to use the $index value, `let` cannot be used inside the `@for` declaration.","Url":"https://github.com/angular/angular/issues/60939","RelatedDescription":"Open issue \"Allow Arbitrary Function Calls from @for and @let blocks\" (#60939)"},{"Id":"3007080447","IsPullRequest":true,"CreatedAt":"2025-04-20T15:29:19","Actor":"JeanMeche","Number":"60937","RawContent":null,"Title":"build: Run browsers tests without `platform-browser-dynamic`","State":"open","Body":"Use the regular `platform-browser` providers instead.\r\n","Url":"https://github.com/angular/angular/pull/60937","RelatedDescription":"Open PR \"build: Run browsers tests without `platform-browser-dynamic`\" (#60937)"},{"Id":"3007035813","IsPullRequest":true,"CreatedAt":"2025-04-20T13:58:10","Actor":"JeanMeche","Number":"60936","RawContent":null,"Title":"build(devtools): cleanup dependencies","State":"open","Body":"Removing `platform-browser-dynamic` because we don't need it anymore.\n","Url":"https://github.com/angular/angular/pull/60936","RelatedDescription":"Open PR \"build(devtools): cleanup dependencies\" (#60936)"},{"Id":"3007033047","IsPullRequest":true,"CreatedAt":"2025-04-20T13:52:11","Actor":"JeanMeche","Number":"60935","RawContent":null,"Title":"docs: replace the `platform-browser-dynamic` package where applicable","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/60935","RelatedDescription":"Open PR \"docs: replace the `platform-browser-dynamic` package where applicable\" (#60935)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"3012527329","IsPullRequest":false,"CreatedAt":"2025-04-23T02:31:03","Actor":"apappas1129","Number":"30150","RawContent":null,"Title":"@angular-devkit/build-angular 19.2.8 vulnerabilities from http-proxy-middleware (CVE-2025-32997, CVE-2025-32996)","State":"open","Body":"The version of `@angular-devkit/build-angular` (19.2.8) currently relies on `http-proxy-middleware` versions 3.0.0 - 3.0.4, which have been flagged as having moderate vulnerabilities. The dependency needs to address [CVE-2025-32996](https://github.com/advisories/GHSA-4www-5p9h-95mh) and [CVE-2025-32997](https://github.com/advisories/GHSA-9gqv-wp59-fq42)`\n\n```text\n# npm audit report\n\nhttp-proxy-middleware  3.0.0 - 3.0.4\nSeverity: moderate\nhttp-proxy-middleware allows fixRequestBody to proceed even if bodyParser has failed - https://github.com/advisories/GHSA-9gqv-wp59-fq42\nhttp-proxy-middleware can call writeBody twice because \"else if\" is not used - https://github.com/advisories/GHSA-4www-5p9h-95mh\nfix available via `npm audit fix --force`\nWill install @angular-devkit/build-angular@17.3.16, which is a breaking change\nnode_modules/http-proxy-middleware\n  @angular-devkit/build-angular  18.0.0-next.0 - 20.0.0-next.5\n  Depends on vulnerable versions of http-proxy-middleware\n  node_modules/@angular-devkit/build-angular\n\n2 moderate severity vulnerabilities\n```\n\n###  Environment\n\n```text\nAngular CLI: 19.2.8\nNode: 18.19.0\nPackage Manager: npm 10.8.1\nOS: win32 x64\n```","Url":"https://github.com/angular/angular-cli/issues/30150","RelatedDescription":"Open issue \"@angular-devkit/build-angular 19.2.8 vulnerabilities from http-proxy-middleware (CVE-2025-32997, CVE-2025-32996)\" (#30150)"},{"Id":"3011978036","IsPullRequest":false,"CreatedAt":"2025-04-22T19:50:28","Actor":"Lavanya0402","Number":"30149","RawContent":null,"Title":"Sourcemap not reloading after source code change","State":"open","Body":"### Command\n\nadd\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhenever I'm in debug mode, I make changes to the code, save it and try to add a breakpoint to the newly added line, the breakpoint is unbound. The sourcemap cannot detect the newly added line. \n\n### Minimal Reproduction\n\nRun the application in debug mode.\nMake code changes.\nSave and wait for it to detect changes and reload.\nSet breakpoint in newly added line.\nBreakpoint is unbound or breakpoint is set at random location.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.8\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.8 (cli-only)\n@angular-devkit/core         19.1.8 (cli-only)\n@angular-devkit/schematics   19.1.8 (cli-only)\n@schematics/angular          19.1.8 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30149","RelatedDescription":"Open issue \"Sourcemap not reloading after source code change\" (#30149)"},{"Id":"3011689684","IsPullRequest":true,"CreatedAt":"2025-04-22T17:27:52","Actor":"clydin","Number":"30148","RawContent":null,"Title":"feat(@schematics/angular): generate libraries using TypeScript project references","State":"open","Body":"When generating a project (via `ng generate library`), the created TypeScript configuration files (`tsconfig.lib.json`/`tsconfig.spec.json`) will be setup as composite projects and added as project references in the root `tsconfig.json`.  This transforms the root `tsconfig.json` into a \"solution\" style configuration. This allows IDEs to more accurately discover and provide type information for the varying types of files (test, library, etc.) within each project. The Angular build process is otherwise unaffected by these changes.","Url":"https://github.com/angular/angular-cli/pull/30148","RelatedDescription":"Open PR \"feat(@schematics/angular): generate libraries using TypeScript project references\" (#30148)"},{"Id":"3011661462","IsPullRequest":true,"CreatedAt":"2025-04-22T17:13:47","Actor":"josephperrott","Number":"30147","RawContent":null,"Title":"[PATCH] Post migration cleanups","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular-cli/pull/30147","RelatedDescription":"Open PR \"[PATCH] Post migration cleanups\" (#30147)"},{"Id":"3011638321","IsPullRequest":true,"CreatedAt":"2025-04-22T17:02:07","Actor":"josephperrott","Number":"30146","RawContent":null,"Title":"Post migration cleanups","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular-cli/pull/30146","RelatedDescription":"Open PR \"Post migration cleanups\" (#30146)"},{"Id":"3010759023","IsPullRequest":true,"CreatedAt":"2025-04-22T16:27:50","Actor":"alan-agius4","Number":"30141","RawContent":null,"Title":"build: update `baseline-browser-mapping` to `2.2.1`","State":"closed","Body":"This fixes a bug  where the `widelyAvailableOnDate` was just returning whatever is currently Widely available.\r\n","Url":"https://github.com/angular/angular-cli/pull/30141","RelatedDescription":"Closed or merged PR \"build: update `baseline-browser-mapping` to `2.2.1`\" (#30141)"},{"Id":"3011434861","IsPullRequest":true,"CreatedAt":"2025-04-22T15:30:26","Actor":"clydin","Number":"30145","RawContent":null,"Title":"fix(@angular/build): use virtual module for Karma TestBed initialization","State":"open","Body":"Using a virtual module for the Karma-based unit testing setup allows for the Angular packages used within the TestBed initialization to resolve to the same dependencies used within the application and test code. This avoids the potential for multiple copies of `@angular/core` within the test output which can result in TestBed execution failure due to the module level variable usage within TestBed.","Url":"https://github.com/angular/angular-cli/pull/30145","RelatedDescription":"Open PR \"fix(@angular/build): use virtual module for Karma TestBed initialization\" (#30145)"},{"Id":"3011098759","IsPullRequest":true,"CreatedAt":"2025-04-22T14:22:57","Actor":"alan-agius4","Number":"30144","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"Closes #30112 as a pr takeover\r\n","Url":"https://github.com/angular/angular-cli/pull/30144","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#30144)"},{"Id":"3010826123","IsPullRequest":true,"CreatedAt":"2025-04-22T12:55:26","Actor":"alan-agius4","Number":"30142","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update http-proxy-middleware to v3.0.5","State":"closed","Body":"\r\nAddresses https://github.com/advisories/GHSA-4www-5p9h-95mh\r\n","Url":"https://github.com/angular/angular-cli/pull/30142","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update http-proxy-middleware to v3.0.5\" (#30142)"},{"Id":"3010708869","IsPullRequest":false,"CreatedAt":"2025-04-22T11:02:57","Actor":"timKraeuter","Number":"30140","RawContent":null,"Title":"http-proxy-middleware outdated (CVE-2025-32996)","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn http-proxy-middleware before 2.0.8 and 3.x before 3.0.4, writeBody can be called twice because \"else if\" is not used, see https://nvd.nist.gov/vuln/detail/CVE-2025-32996.\n\nAccording to GitHub:\n\n```\n@angular-devkit/build-angular@19.2.8 requires http-proxy-middleware@3.0.3\n@angular-devkit/build-angular@19.2.8 requires http-proxy-middleware@^2.0.7 via webpack-dev-server@5.2.0\nNo patched version available for http-proxy-middleware\n```\n\nThe earliest fixed version is **3.0.5**, which was published two weeks ago.\n\n### Minimal Reproduction\n\nUse the latest Angular packages (build-angular 19.2.8 at the moment of writing) and check the package-lock.json.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.8\nNode: 22.13.1\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.2.7\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.8\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            19.2.8\n@angular-devkit/schematics      19.2.8\n@angular/cdk                    19.2.10\n@angular/cli                    19.2.8\n@angular/material               19.2.10\n@schematics/angular             19.2.8\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30140","RelatedDescription":"Closed issue \"http-proxy-middleware outdated (CVE-2025-32996)\" (#30140)"},{"Id":"3010569932","IsPullRequest":false,"CreatedAt":"2025-04-22T09:54:35","Actor":"jordimarimon","Number":"30139","RawContent":null,"Title":"Unable to use JS decorators in private methods with the development build","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.2.6\n\n### Description\n\nWhen building with the default development configuration, if one is using **JS decorators in a private method** (not the experimental ones from TypeScript, `experimentalDecorators: false`) gets the following error:\n\n![Image](https://github.com/user-attachments/assets/c9c911c4-7a16-48de-86b6-596149b1e931)\n\nIf the method is public, the error doesn't happen.\n\nThis error doesn't happen in version 19.2.6.\n\n### Minimal Reproduction\n\nReproduction url: https://github.com/jordimarimon/angular-cli-js-decorator\n\nThe application has been created using the following command:\n\n```\nnpx @angular/cli new test-app --experimental-zoneless --inline-style --inline-template --minimal --skip-git --skip-install --skip-tests --standalone --strict\n```\n\nThere are only two additional files:\n\n- `src/app/app.service.ts`\n- `src/app/debounce.ts`\n\nRun the command `npx ng build --configuration=production` and there shouldn't be any error.\n\nNow run the command `npx ng build --configuration=development` and there should be an error.\n\nIf you downgrade to version `19.2.6` both commands run without any error.\n\n### Exception or Error\n\n```text\n✘ [ERROR] Expected identifier but found \"#foo\"\n\n    src/app/app.service.ts:31:20:\n      31 │     }], () => [], { #foo: [] }); })();\n         ╵                     ~~~~\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.2.8\nNode: 22.12.0\nPackage Manager: npm 11.3.0\nOS: linux x64\n\nAngular: 19.2.7\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.8\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            19.2.8\n@angular-devkit/schematics      19.2.8\n@angular/cli                    19.2.8\n@schematics/angular             19.2.8\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30139","RelatedDescription":"Open issue \"Unable to use JS decorators in private methods with the development build\" (#30139)"},{"Id":"3004783421","IsPullRequest":false,"CreatedAt":"2025-04-22T09:34:35","Actor":"ph360","Number":"30129","RawContent":null,"Title":"Cannot GET -- when don't find the folder language -- example Cannot GET /fr/pr-home","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\n**In app.routes.ts**\n\nimport { Routes } from '@angular/router';\nimport { PrHomeComponent } from './pr-home/pr-home.component';\nimport { PrContactsComponent } from './pr-contacts/pr-contacts.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nexport const routes: Routes = [\n  { path: '', component: PrHomeComponent},\n  { path: 'pr-home', component: PrHomeComponent },\n  { path: 'pr-contacts', component: PrContactsComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n**In app.routes.server.ts**\n\nimport { RenderMode, ServerRoute } from '@angular/ssr';\n\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: 'pr-contacts',\n    renderMode: RenderMode.Prerender,\n  },\n  {\n    path: 'pr-home',\n    renderMode: RenderMode.Prerender,\n  },\n  {\n    path: '**',\n    renderMode: RenderMode.Client\n  }\n];\n\n\n* if I change the **path: 'pr-home'** for one with error, for example **pr-homefffff**\n\nhttps://pr360v2--pr360-v2.us-central1.hosted.app/es/pr-homefffff   the result i show me the follow message \n\n**Page Not Found**  is the content of component **PageNotFoundComponent** \n\nthere the wildcard route **  if work very good the routes. \n\n* but, if i change the folder the language for one that not exist, for example **fr**\n\n[](https://pr360v2--pr360-v2.us-central1.hosted.app/fr/pr-home)\n\nCannot GET /fr/pr-home\n\nin this case don't work the wildcard ** in the config the routes. \n\nThe result of  **ng build --localize**\n\n![Image](https://github.com/user-attachments/assets/1028f652-6ec6-4cf7-bfcd-ae0556d639ab)\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nWhen don't find the folder, after of build app with ng build --localize.  see example attachment\n\nCannot GET /fr/pr-home\n\nHow redirect the folder for default?\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.6\nNode: 22.14.0\nPackage Manager: npm 11.3.0\nOS: win32 x64\n\nAngular: 19.2.5\n... common, compiler, compiler-cli, core, forms, localize\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.6\n@angular-devkit/build-angular   19.2.6\n@angular-devkit/core            19.2.6\n@angular-devkit/schematics      19.2.6\n@angular/cdk                    19.2.8\n@angular/cli                    19.2.6\n@angular/fire                   19.0.0\n@angular/material               19.2.8\n@angular/ssr                    19.2.6\n@schematics/angular             19.2.6\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30129","RelatedDescription":"Closed issue \"Cannot GET -- when don't find the folder language -- example Cannot GET /fr/pr-home\" (#30129)"},{"Id":"3009880974","IsPullRequest":true,"CreatedAt":"2025-04-22T05:02:41","Actor":"angular-robot","Number":"30138","RawContent":null,"Title":"build: update rules_angular digest to 005c806","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| rules_angular | git_repository | digest | `be32410` -> `005c806` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30138","RelatedDescription":"Open PR \"build: update rules_angular digest to 005c806\" (#30138)"},{"Id":"3009880861","IsPullRequest":true,"CreatedAt":"2025-04-22T05:02:38","Actor":"angular-robot","Number":"30137","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `936eb84` -> `7296308` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `8fbf8be` -> `3915b2e` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `60a3713` -> `369f9b7` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `7b58b2a` -> `58090a1` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `560a074` -> `25e6bf7` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `e440381` -> `84942de` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `abecbfe` -> `dc74374` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `aad9257` -> `bbc8c47` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `f425d1f` -> `0487cb6` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `7ed103e` -> `dafeb48` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `4a5c01a` -> `6d7b9a6` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `94729f4` -> `12f9c88` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `c04316b` -> `6be3d1a` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `4085458` -> `c0cd9fc` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `f6bc5fb` -> `db86c6e` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `913ecbd` -> `addd2a6` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `9eecdde` -> `0ab84f3` |\n| angular/dev-infra | action | digest | `64d0e9d` -> `9488b2f` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30137","RelatedDescription":"Open PR \"build: update angular\" (#30137)"},{"Id":"3002163710","IsPullRequest":false,"CreatedAt":"2025-04-21T17:35:27","Actor":"hcornelisonJHA","Number":"30122","RawContent":null,"Title":"CVE-2025-32996 @angular-devkit/build-angular uses a vulnerable version of http-proxy-middleware","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFrom GHSA-4www-5p9h-95mh\n\n@angular-devkit/build-angular@18.2.18 requires http-proxy-middleware@3.0.3\n@angular-devkit/build-angular@18.2.18 requires http-proxy-middleware@^2.0.3 via webpack-dev-server@5.0.4\nNo patched version available for http-proxy-middleware\n\nTransitive dependency http-proxy-middleware 3.0.3 is introduced via\n@angular-devkit/build-angular 18.2.18  http-proxy-middleware 3.0.3\n\n### Minimal Reproduction\n\nNo need for steps to reproduce, the\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.18\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 18.2.13\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, material, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.18\n@angular-devkit/build-angular   18.2.18\n@angular-devkit/core            18.2.18\n@angular-devkit/schematics      18.2.18\n@angular/cli                    18.2.18\n@schematics/angular             18.2.18\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30122","RelatedDescription":"Closed issue \"CVE-2025-32996 @angular-devkit/build-angular uses a vulnerable version of http-proxy-middleware\" (#30122)"},{"Id":"3007750546","IsPullRequest":true,"CreatedAt":"2025-04-21T17:08:09","Actor":"angular-robot","Number":"30135","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30135","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#30135)"},{"Id":"3006191607","IsPullRequest":true,"CreatedAt":"2025-04-21T16:23:41","Actor":"angular-robot","Number":"30133","RawContent":null,"Title":"build: update rules_angular digest to be32410","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| rules_angular | git_repository | digest | `bc8e690` -> `be32410` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30133","RelatedDescription":"Closed or merged PR \"build: update rules_angular digest to be32410\" (#30133)"},{"Id":"3006191576","IsPullRequest":true,"CreatedAt":"2025-04-21T16:21:33","Actor":"angular-robot","Number":"30132","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `14e0b86` -> `936eb84` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `af29705` -> `8fbf8be` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `9af662e` -> `60a3713` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `5fba6f0` -> `7b58b2a` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `ab6242b` -> `560a074` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `59551fe` -> `e440381` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `72e08db` -> `abecbfe` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `63e44e4` -> `aad9257` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `c029927` -> `f425d1f` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `4542387` -> `7ed103e` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `b4f852d` -> `4a5c01a` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8b24063` -> `94729f4` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `6973e3e` -> `c04316b` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `dc78403` -> `4085458` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `5578113` -> `f6bc5fb` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `37550f3` -> `913ecbd` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `c56550a` -> `9eecdde` |\n| angular/dev-infra | action | digest | `279c93e` -> `64d0e9d` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30132","RelatedDescription":"Closed or merged PR \"build: update angular\" (#30132)"},{"Id":"3008759375","IsPullRequest":true,"CreatedAt":"2025-04-21T16:05:21","Actor":"josephperrott","Number":"30136","RawContent":null,"Title":"build: use npm_package instead of js_library for the scheamtics npm package","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/30136","RelatedDescription":"Open PR \"build: use npm_package instead of js_library for the scheamtics npm package\" (#30136)"},{"Id":"3006417235","IsPullRequest":false,"CreatedAt":"2025-04-20T18:42:17","Actor":"ph360","Number":"30134","RawContent":null,"Title":"npm warn deprecated: inflight@1.0.6, rimraf@3.0.2, glob@7.2.3 after delete node_modules and package-lock.json","State":"closed","Body":"### Command\n\nupdate, config\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nIn one project new the angular 19 happen the warn: \n\nC:\\pr360-portal-test\\pr360-test>npm install\nnpm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\nnpm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported\nnpm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported\n\n\n### Minimal Reproduction\n\nThe following step to step  to happen the warn: \n\n1.  Delete el folder **node_modules** of project\n2. Delete el file **package-lock.json**\n3. run **npm install**\n4. In the moment of installing show warn. \n\n![Image](https://github.com/user-attachments/assets/6adee244-0d70-4bac-920b-9b6a1011c047)\n\n**But, if i run **npm install**  without delete** node_modules and package-lock.json don't show anythin warn.  Example:\n\nC:\\pr360-portal-test\\pr360-test>npm install\n\nup to date, audited 1038 packages in 3s\n\n169 packages are looking for funding\n  run `npm fund` for details\n\nfound 0 vulnerabilities\n\n![Image](https://github.com/user-attachments/assets/7d806739-079a-4158-b3e5-06dbd31a215c)\n\n### Exception or Error\n\n```text\nC:\\pr360-portal-test\\pr360-test>npm install\nnpm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\nnpm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported\nnpm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.8\nNode: 22.14.0\nPackage Manager: npm 11.3.0\nOS: win32 x64\n\nAngular: 19.2.7\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.8\n@angular-devkit/build-angular   19.2.8\n@angular-devkit/core            19.2.8\n@angular-devkit/schematics      19.2.8\n@angular/cli                    19.2.8\n@angular/ssr                    19.2.8\n@schematics/angular             19.2.8\nrxjs                            7.8.2\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nNote: \n\n1. The project is absolutely new:   ng new --ssr pr360-test\n\n3.  Only i create el project, not has install other packages. \n\n4.  After of intall packages. i review the file package-lock.json and i see that inflight@1.0.6, rimraf@3.0.2, glob@7.2.3 is in the dependencies that intall the comman **npm install**\n\n![Image](https://github.com/user-attachments/assets/b0d8f7fd-570b-4d97-855f-4a4aadebefaf)","Url":"https://github.com/angular/angular-cli/issues/30134","RelatedDescription":"Closed issue \"npm warn deprecated: inflight@1.0.6, rimraf@3.0.2, glob@7.2.3 after delete node_modules and package-lock.json\" (#30134)"},{"Id":"3005185140","IsPullRequest":false,"CreatedAt":"2025-04-18T15:29:51","Actor":"alexeagle","Number":"30131","RawContent":null,"Title":"[20.0.0-next.6] new library Karma tests fail under preserveSymlinks","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFollow-up to https://github.com/angular/angular-cli/pull/30113 - setting `preserveSymlinks=false` makes the TestBed setup fail, and can only be fixed by manual fixes to the test code, something like:\n\n```\nimport {\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting\n} from '@angular/platform-browser-dynamic/testing';\n\n...\n\ndescribe('MyLib', () => {\n  beforeEach(async () => {\n    TestBed.initTestEnvironment(\n      BrowserDynamicTestingModule,\n      platformBrowserDynamicTesting()\n    );\n```\n\n\n### Minimal Reproduction\n\n```\n% npx @angular/cli@20.0.0-next.6 new angular --create-application=false --skip-install\n% cd angular\n% npx @angular/cli@20.0.0-next.6 generate library my-lib --skip-install\n% npx pnpm@8 install\n# set the preserveSymlinks option\n% jq '.projects[\"my-lib\"].architect.test.options.preserveSymlinks = true' angular.json > tmp.json && mv tmp.json angular.json\n% ./node_modules/.bin/ng test my-lib\n```\n\n### Exception or Error\n\n```text\nChrome 135.0.0.0 (Mac OS 10.15.7) MyLib should create FAILED\n\tError: Need to call TestBed.initTestEnvironment() first\n\t    at _TestBedImpl.get compiler [as compiler] (node_modules/@angular/core/fesm2022/testing.mjs:2081:19)\n\t    at _TestBedImpl.configureTestingModule (node_modules/@angular/core/fesm2022/testing.mjs:1993:14)\n\t    at _TestBedImpl.configureTestingModule (node_modules/@angular/core/fesm2022/testing.mjs:1812:37)\n\t    at Object.<anonymous> (projects/my-lib/src/lib/my-lib.spec.ts:10:19)\n\t    at Generator.next (<anonymous>)\n\t    at chunk-TTULUY32.js:48:61\n\t    at new ZoneAwarePromise (node_modules/zone.js/fesm2015/zone.js:2702:25)\n\t    at __async (chunk-TTULUY32.js:32:10)\n\t    at UserContext.<anonymous> (projects/my-lib/src/lib/my-lib.spec.ts:9:25)\n\t    at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:369:28)\n```\n\n### Your Environment\n\n```text\nMacOS\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30131","RelatedDescription":"Open issue \"[20.0.0-next.6] new library Karma tests fail under preserveSymlinks\" (#30131)"},{"Id":"3002771880","IsPullRequest":true,"CreatedAt":"2025-04-18T15:27:11","Actor":"cexbrayat","Number":"30125","RawContent":null,"Title":"fix(@schematics/angular): drop composite in tsconfig","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nBased on this [TS discussion](https://github.com/microsoft/TypeScript/issues/60465), `composite` is in fact not necessary, the TS docs are just misleading.\r\n\r\n## What is the new behavior?\r\n\r\nThis removes `composite` from the configs, as it was recently done in create-vue (see  https://github.com/vuejs/create-vue/pull/635).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/30125","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): drop composite in tsconfig\" (#30125)"},{"Id":"3005137673","IsPullRequest":true,"CreatedAt":"2025-04-18T15:02:19","Actor":"clydin","Number":"30130","RawContent":null,"Title":"feat(@angular/build): add experimental vitest unit-testing support","State":"open","Body":"When using the application build system via the `@angular/build` package (default for new projects starting in v20), a new experimental unit-test builder is available that initially uses vitest. This experimental system is intended to provide support for investigation of future unit testing efforts within the Angular CLI. As this is experimental, no SemVer guarantees are provided, the API and behavior may change, and there may be unexpected behavior. Available test runners may be added or removed as well.\r\n\r\nThe setup is somewhat different than the previous unit-testing builders. It uses a similar mechanism to that of the `dev-server` and requires a `buildTarget` option. This allows the code building aspects of the unit-testing process to leverage pre-existing option values that are already defined for development. If differing option values are required for testing, an additional build target configuration specifically for testing can be used.\r\n\r\nThe current vitest support has multiple caveats including but not limited to:\r\n\r\n* No watch support\r\n* `jsdom` based testing only (`jsdom` must be installed in the project)\r\n* Custom vitest configuration is not supported\r\n\r\nAn example configuration that would replace the `test` target for a project is as follows:\r\n```\r\n\"test\": {\r\n    \"builder\": \"@angular/build:unit-test\",\r\n    \"options\": {\r\n        \"tsConfig\": \"tsconfig.spec.json\",\r\n        \"buildTarget\": \"::development\",\r\n        \"runner\": \"vitest\"\r\n    }\r\n}\r\n```","Url":"https://github.com/angular/angular-cli/pull/30130","RelatedDescription":"Open PR \"feat(@angular/build): add experimental vitest unit-testing support\" (#30130)"},{"Id":"3002033041","IsPullRequest":true,"CreatedAt":"2025-04-18T10:54:27","Actor":"angular-robot","Number":"30121","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `fb07695` -> `14e0b86` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `11ab65d` -> `af29705` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `96c0f29` -> `9af662e` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `9dc12e9` -> `5fba6f0` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `e04a249` -> `ab6242b` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `dd70b5a` -> `59551fe` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `3f47500` -> `72e08db` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `c490059` -> `63e44e4` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `6d3f304` -> `c029927` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `de0e618` -> `4542387` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `e8a9137` -> `b4f852d` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `5793e43` -> `6973e3e` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `f72d358` -> `dc78403` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a38ebca` -> `5578113` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `1bed270` -> `37550f3` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `b948d44` -> `c56550a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMzMuMyIsInVwZGF0ZWRJblZlciI6IjM5LjIzMy4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/30121","RelatedDescription":"Closed or merged PR \"build: update angular\" (#30121)"},{"Id":"3003710907","IsPullRequest":true,"CreatedAt":"2025-04-18T10:53:31","Actor":"clydin","Number":"30128","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update http-proxy-middleware to v3.0.5","State":"closed","Body":"Addresses https://github.com/advisories/GHSA-4www-5p9h-95mh","Url":"https://github.com/angular/angular-cli/pull/30128","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update http-proxy-middleware to v3.0.5\" (#30128)"},{"Id":"3003029858","IsPullRequest":false,"CreatedAt":"2025-04-17T17:05:30","Actor":"cexbrayat","Number":"30127","RawContent":null,"Title":"Using overrideComponent breaks code coverage when testing with aot: true","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `TestBed.overrideComponent` to stub a child component, the test code coverage is no longer accurate\n\n### Minimal Reproduction\n\nGenerate a new app with latest CLI and add a component:\n\n```\nnpx @angular/cli@20.0.0-next.6 new aot-coverage --defaults --no-routing\ncd aot-coverage\nng g c user\n```\n\nUse app-user in app.html:\n```html\n<h1>Hello, aot-coverage</h1>\n<app-user></app-user>\n```\n\nEdit angular.json to add \"aot\": true in the test section and run:\n```\nng test --no-watch --code-coverage\n```\n\nCoverage is 100%\n```\nStatements   : 100% ( 12/12 )\nBranches     : 100% ( 11/11 )\nFunctions    : 100% ( 3/3 )\nLines        : 100% ( 6/6 )\n```\n\nNow, in the app.spec.ts, add in `beforeEach`:\n\n```ts\nTestBed.overrideComponent(App, {\n  remove: {\n    imports: [User],\n  },\n  add: {\n    imports: [User],\n  }\n});\n```\n\n(this happens with a proper stub of course but even removing the import and adding it back works to reproduce the issue)\n\nRun the tests again:\n\n```\nng test --no-watch --code-coverage\n```\n\nCoverage is now inaccurate:\n```\nStatements   : 58.33% ( 7/12 )\nBranches     : 90.9% ( 10/11 )\nFunctions    : 66.66% ( 2/3 )\nLines        : 66.66% ( 4/6 )\n```\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.0.0-next.6\nNode: 22.14.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 20.0.0-next.7\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.0-next.6\n@angular-devkit/core         20.0.0-next.6\n@angular-devkit/schematics   20.0.0-next.6\n@angular/build               20.0.0-next.6\n@angular/cli                 20.0.0-next.6\n@schematics/angular          20.0.0-next.6\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30127","RelatedDescription":"Open issue \"Using overrideComponent breaks code coverage when testing with aot: true\" (#30127)"},{"Id":"3002821275","IsPullRequest":true,"CreatedAt":"2025-04-17T16:03:51","Actor":"josephperrott","Number":"30126","RawContent":null,"Title":"refactor: replace usage of ng_package with new ng_package from rules_angular","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/30126","RelatedDescription":"Closed or merged PR \"refactor: replace usage of ng_package with new ng_package from rules_angular\" (#30126)"},{"Id":"3002513278","IsPullRequest":true,"CreatedAt":"2025-04-17T15:39:38","Actor":"cexbrayat","Number":"30123","RawContent":null,"Title":"fix(@schematics/angular): relative tsconfig paths in references","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nWe can't quickly navigate to the referenced paths as VSCode for example thinks they are modules (Failed tor resolve tsconfig.app.json as a module)\r\n\r\n## What is the new behavior?\r\n\r\nThis makes them clickable for a quick navigation in IDEs\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/30123","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): relative tsconfig paths in references\" (#30123)"},{"Id":"3002581367","IsPullRequest":false,"CreatedAt":"2025-04-17T13:55:28","Actor":"Loic-fr","Number":"30124","RawContent":null,"Title":"TemplateUrl, StyleUrl and StyleUrls absolute path not working anymore","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith Angular 17, we used to use absolute path for TemplateUrl, StyleUrl and/or StyleUrls to allow sharing of templates and style between components by using :\n`templateUrl: '/src/app/shared/some.component.html',`\n\nSince Angular 19, these paths don't work anymore and we had to use a lot of ../ to point to the file we need.\n\nAngular documentation seem to indicate absolute paths should be possible :\nhttps://angular.dev/api/core/Component#templateUrl\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-54tuykux?file=tsconfig.json\n\n### Please provide the exception or error you saw\n\n```true\nTS-992008: Could not find stylesheet file '/src/app/shared/some.component.css'\nand\nTS-992008: Could not find template file '/src/app/shared/some.component.html'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.1\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, language-service, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/core         19.2.1\n@angular-devkit/schematics   19.2.1\n@angular/cdk                 19.2.2\n@schematics/angular          19.2.1\nrxjs                         7.8.2\ntypescript                   5.8.2\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30124","RelatedDescription":"Closed issue \"TemplateUrl, StyleUrl and StyleUrls absolute path not working anymore\" (#30124)"},{"Id":"3000751364","IsPullRequest":true,"CreatedAt":"2025-04-16T21:28:35","Actor":"clydin","Number":"30120","RawContent":null,"Title":"Bump version to \"v20.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/30120","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.6\" with changelog.\" (#30120)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"3012048363","IsPullRequest":true,"CreatedAt":"2025-04-22T20:34:30","Actor":"mmalerba","Number":"30928","RawContent":null,"Title":"Revert \"[PATCH] Migrate to use rules_js based ng_package (#30917)\"","State":"closed","Body":"This reverts commit 89db9f709ea9e81c4773a7c4e214840626156129.","Url":"https://github.com/angular/components/pull/30928","RelatedDescription":"Closed or merged PR \"Revert \"[PATCH] Migrate to use rules_js based ng_package (#30917)\"\" (#30928)"},{"Id":"3011850131","IsPullRequest":false,"CreatedAt":"2025-04-22T19:34:57","Actor":"passee","Number":"30925","RawContent":null,"Title":"bug(COMPONENT): NO OVERVIEW MD FILE FOUND! 404","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18 on the website works\n\n### Description\n\nNo component overview file is found currently!\nEvery component overview request returns a 404 Not found.\n\nWhen selecting 18.x it works, please fix asap!\n\n### Reproduction\n\n\nany component link in v19\nhttps://material.angular.io/components/autocomplete/overview\n\n### Expected Behavior\n\nsee overview\n\n### Actual Behavior\n\n404 not found\n\n### Environment\n\n- Browser(s): Chrome\n","Url":"https://github.com/angular/components/issues/30925","RelatedDescription":"Closed issue \"bug(COMPONENT): NO OVERVIEW MD FILE FOUND! 404\" (#30925)"},{"Id":"3011942102","IsPullRequest":true,"CreatedAt":"2025-04-22T19:32:35","Actor":"andrewseguin","Number":"30927","RawContent":null,"Title":"Revert \"Migrate to use rules_js based ng_package (#30915)\"","State":"closed","Body":"This reverts commit 3b9854e97a6ff942241ef3b233939f7bd1cfd22d.","Url":"https://github.com/angular/components/pull/30927","RelatedDescription":"Closed or merged PR \"Revert \"Migrate to use rules_js based ng_package (#30915)\"\" (#30927)"},{"Id":"3011854339","IsPullRequest":true,"CreatedAt":"2025-04-22T18:46:33","Actor":"wagnermaciel","Number":"30926","RawContent":null,"Title":"refactor(cdk-experimental/ui-patterns): move active index operations …","State":"closed","Body":"…into list-focus\r\n\r\n* Move focus-related things out of the `ListNavigation` behavior and into `ListFocus`. This includes `activeIndex` and `isFocusable`.","Url":"https://github.com/angular/components/pull/30926","RelatedDescription":"Closed or merged PR \"refactor(cdk-experimental/ui-patterns): move active index operations …\" (#30926)"},{"Id":"3011797749","IsPullRequest":false,"CreatedAt":"2025-04-22T18:19:08","Actor":"robmv","Number":"30924","RawContent":null,"Title":"bug(cdk-ally): Remove development mode warning \"[cdkFocusInitial]' is not focusable\"","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCurrently the cdkFocusInitial behavior when placed on a non focusable component is to find the first tabbable child of the element with the cdkFocusInitial attribute. This is IMHO the perfect behavior.\n\nhttps://github.com/angular/components/blob/7faac700537b0bd4e75ad77365087fb8e97ea9f3/src/cdk/a11y/focus-trap/focus-trap.ts#L226-L239\n\nI propose to document this as a the intended behavior and remove the development mode warning of \"_[cdkFocusInitial]' is not focusable._\"\n\nPeople may ask why this is the right thing to do, I explaint: when using other components like a subform (maybe 3rd party) inside a focus trap like a dialog, just marking that component as cdkFocusInitial instead of modifying their internal template to add cdkFocusInitial inside of its template is the easier way to implement initial focusing. The component may be used on multiple places and each one with different initial focus constraints, so letting cdkFocusInitial works as it currently works and remove the warning avoids having to modify the reusable component for external to it focus constraints.\n\nNote: cdkFocusInitial is perfect to skip the first normally focusable element on a dialog, where that first input element has a good default and is reasonable to skip it by default when 99% of the users will use the default, specially data entry users that use keyboard navigation a lot.\n\n### Reproduction\n\nNo StackBlitz link because I am linking the code in question.\n\n\n### Expected Behavior\n\nDo not warn about cdkFocusInitial being paced on a non focusable element, and document the tabbable child finding behavior.\n\n### Actual Behavior\n\nWanings are logged in development \n\n### Environment\n\n- Angular: 19.2.7\n- CDK/Material: 19.2.10\n- Browser(s): Browser independent.\n- Operating System: OS independent.\n","Url":"https://github.com/angular/components/issues/30924","RelatedDescription":"Open issue \"bug(cdk-ally): Remove development mode warning \"[cdkFocusInitial]' is not focusable\"\" (#30924)"},{"Id":"3008936349","IsPullRequest":true,"CreatedAt":"2025-04-22T18:15:12","Actor":"josephperrott","Number":"30917","RawContent":null,"Title":"[PATCH] Migrate to use rules_js based ng_package","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30917","RelatedDescription":"Closed or merged PR \"[PATCH] Migrate to use rules_js based ng_package\" (#30917)"},{"Id":"3011753020","IsPullRequest":true,"CreatedAt":"2025-04-22T18:04:05","Actor":"mmalerba","Number":"30923","RawContent":null,"Title":"test: add back fixture.whenStable for patch branch","State":"closed","Body":"https://github.com/angular/components/pull/30878 cleaned up usages of `whenStable` that were no longer needed. However, the change that makes them unneeded (https://github.com/angular/components/pull/30703) is not on the patch branch, so this PR reverts the tests to their original form on the patch branch.","Url":"https://github.com/angular/components/pull/30923","RelatedDescription":"Closed or merged PR \"test: add back fixture.whenStable for patch branch\" (#30923)"},{"Id":"3011624101","IsPullRequest":true,"CreatedAt":"2025-04-22T16:55:49","Actor":"wagnermaciel","Number":"30922","RawContent":null,"Title":"refactor(cdk-experimental/ui-patterns): move active index operations …","State":"open","Body":"…into list-focus\r\n\r\n* Move focus-related things out of the `ListNavigation` behavior and into `ListFocus`. This includes `activeIndex` and `isFocusable`.\r\n* Make behaviors that depend on other behaviors extend the inputs of those other behaviors. This is intended to stop us from needing to prop-drill.\r\n\r\nExample:\r\n```ts\r\n// Before\r\nthis.inputs.navigation.inputs.activeIndex()\r\n\r\n// After\r\nthis.inputs.activeIndex()\r\n```","Url":"https://github.com/angular/components/pull/30922","RelatedDescription":"Open PR \"refactor(cdk-experimental/ui-patterns): move active index operations …\" (#30922)"},{"Id":"3011470720","IsPullRequest":false,"CreatedAt":"2025-04-22T15:45:31","Actor":"nicoesiea","Number":"30921","RawContent":null,"Title":"Migration to Angular Material 18 fails due to invalid regular expression in define-light-theme migration","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nYes, the previous migration from Angular Material 16 → 17 worked correctly. Angular Material 17.3.10\n\n### Description\n\nWhen running the migration command to update @angular/material from version 17 to 18 using the Angular CLI, the process fails with the following error:\n\n× Migration failed: Invalid regular expression: /*\\.define-light-theme\\(/: Nothing to repeat\n\nIt seems the migration script contains an invalid regular expression targeting define-light-theme() usage in SCSS files, possibly due to an unescaped / or *.\n\n\n\n### Reproduction\n\n1. Install Angular CLI and Angular Material 17 in a project.\n2. Ensure some use of define-light-theme() is present in SCSS (even if unused, the migration fails).\n3. Run: ng update @angular/material@18\n\n\n\n### Expected Behavior\n\nThe migration should correctly scan SCSS files and apply changes (if necessary) without failing due to a malformed regular expression.\n\n### Actual Behavior\n\nThe update process is interrupted due to a JavaScript exception caused by an invalid regular expression:\nInvalid regular expression: /*\\.define-light-theme\\(/: Nothing to repeat\n\nAs a result, no migration is applied and developers must manually adjust their styles.\n\n\n\n### Environment\n\nAngular CLI: 18.x\nNode: 18.19.0\nOS: Windows 10\nPackage manager: npm\nProject Angular version: 18.2.14\n@angular/material: 17.3.10 → 18.2.14\n@angular/cdk: 17.3.10 → 18.2.14","Url":"https://github.com/angular/components/issues/30921","RelatedDescription":"Open issue \"Migration to Angular Material 18 fails due to invalid regular expression in define-light-theme migration\" (#30921)"},{"Id":"3010391760","IsPullRequest":false,"CreatedAt":"2025-04-22T08:47:40","Actor":"151forShizzle","Number":"30920","RawContent":null,"Title":"docs-bug(COMPONENT): Missing Source Traceability for CSS Variable Overrides in DevTools","State":"open","Body":"### Documentation Feedback\n\n**Problem**\nWhen customizing component styles in Angular Material v19 using the new theming API (@use '@angular/material/theming' and mixins like mat.button-overrides()), all CSS variables get injected into a generated utility file, typically shown in DevTools as: utils.css:xxx\n\nThis makes it impossible to trace where a style override came from when inspecting an element. Even if a developer defines a style override like this: \n\n// src/theme/components/_button-theme.scss\n@include mat.button-overrides((\n  filled-label-text-weight: 600;\n));\n\nThe resulting CSS variable is injected into the final CSS bundle without any mapping to the original source file.\n\nIs there any documentation about this or information how to trace back scss files and line numbers?\n\n### Affected documentation page\n\nhttps://material.angular.io/components/button/api","Url":"https://github.com/angular/components/issues/30920","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Missing Source Traceability for CSS Variable Overrides in DevTools\" (#30920)"},{"Id":"3010166826","IsPullRequest":true,"CreatedAt":"2025-04-22T07:23:51","Actor":"crisbeto","Number":"30919","RawContent":null,"Title":"Add closePredicate option to dialog","State":"open","Body":"**Note:** this is basically a re-implementation of #25174. It was easier to redo it than rebase the original PR.\r\n\r\nUpdates the CDK and Material dialogs with the new `closePredicate` option that allows users to programmatically prevent a dialog from closing. This is different from the current `disableClose` which only covers closing through the backdrop and escape key.\r\n\r\nFixes #14292.","Url":"https://github.com/angular/components/pull/30919","RelatedDescription":"Open PR \"Add closePredicate option to dialog\" (#30919)"},{"Id":"3004214412","IsPullRequest":true,"CreatedAt":"2025-04-22T05:55:13","Actor":"crisbeto","Number":"30899","RawContent":null,"Title":"docs: remove noop module from harness examples","State":"closed","Body":"Removes the `NoopAnimationsModule` from the harness examples since it isn't necessary for most of them. The rest of the examples have been switched to our token for disabling animations.","Url":"https://github.com/angular/components/pull/30899","RelatedDescription":"Closed or merged PR \"docs: remove noop module from harness examples\" (#30899)"},{"Id":"3009583841","IsPullRequest":false,"CreatedAt":"2025-04-22T01:03:13","Actor":"PowerKiKi","Number":"30918","RawContent":null,"Title":"docs-bug(core): Missing documentation about elevation since v19.1","State":"open","Body":"### Documentation Feedback\n\nIn v18, we had https://v18.material.angular.io/guide/elevation that documented in depth what is, and how to use, elevations in Material.\n\nSince 5753ce24a3e3bf743a9fc9f471eff46b85a7817b, and v19.1 that content is declared to have been moved to https://material.angular.io/guide/theming. However that new page does not even include the term \"elevation\" at all. So we cannot even know whether classes such as `mat-elevation-z2` are still supported, and even less how to make them work (via `@include mat.elevation-classes();`).\n\nIf this is something that has been deprecated (which does not seems to be the case when reading code), then it should at least be mentioned as such. Otherwise the original documentation should be restored.\n\nWould you accept a PR that restore previous documentation, but included on the new https://material.angular.io/guide/theming ?\n\n### Affected documentation page\n\nhttps://v18.material.angular.io/guide/elevation","Url":"https://github.com/angular/components/issues/30918","RelatedDescription":"Open issue \"docs-bug(core): Missing documentation about elevation since v19.1\" (#30918)"},{"Id":"3008777932","IsPullRequest":true,"CreatedAt":"2025-04-21T22:10:11","Actor":"josephperrott","Number":"30915","RawContent":null,"Title":"Migrate to use rules_js based ng_package","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30915","RelatedDescription":"Closed or merged PR \"Migrate to use rules_js based ng_package\" (#30915)"},{"Id":"3008854388","IsPullRequest":true,"CreatedAt":"2025-04-21T16:55:42","Actor":"kseamon","Number":"30916","RawContent":null,"Title":"feat(cdk-experimental/popover-edit): Support skipping over annotated …","State":"open","Body":"…rows when the user moves focus up/down.\r\n\r\nRelates to internal issue 411710088","Url":"https://github.com/angular/components/pull/30916","RelatedDescription":"Open PR \"feat(cdk-experimental/popover-edit): Support skipping over annotated …\" (#30916)"},{"Id":"3008533200","IsPullRequest":true,"CreatedAt":"2025-04-21T16:13:20","Actor":"josephperrott","Number":"30914","RawContent":null,"Title":"build: drop usage of `rules_nodejs `'s `pkg_npm` in favor of using `npm_package`","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30914","RelatedDescription":"Closed or merged PR \"build: drop usage of `rules_nodejs `'s `pkg_npm` in favor of using `npm_package`\" (#30914)"},{"Id":"3008244825","IsPullRequest":true,"CreatedAt":"2025-04-21T12:53:16","Actor":"mistrykaran91","Number":"30912","RawContent":null,"Title":"feat(material/sort): add showSortIcon option to MatSortHeader and update styles","State":"closed","Body":"This fix will show sort icon bt  default if we provide the `showSortIcon` option to `true`\r\n\r\nFixes #30563","Url":"https://github.com/angular/components/pull/30912","RelatedDescription":"Closed or merged PR \"feat(material/sort): add showSortIcon option to MatSortHeader and update styles\" (#30912)"},{"Id":"3007765665","IsPullRequest":true,"CreatedAt":"2025-04-21T12:25:34","Actor":"crisbeto","Number":"30908","RawContent":null,"Title":"build: remove miscellaneous usages of the noop animations module","State":"closed","Body":"Removes the `NoopAnimationsModule` from the docs site and integration tests.","Url":"https://github.com/angular/components/pull/30908","RelatedDescription":"Closed or merged PR \"build: remove miscellaneous usages of the noop animations module\" (#30908)"},{"Id":"3006868561","IsPullRequest":true,"CreatedAt":"2025-04-21T12:25:17","Actor":"crisbeto","Number":"30907","RawContent":null,"Title":"fix(cdk/schematics): account for new karma builder","State":"closed","Body":"https://github.com/angular/angular-cli/pull/29640 introduced a new Karma builder that appears to be the default in v20. These changes update our code so that the new builder is recognized.\r\n\r\nI also move the names of the builders out into a constant so they're easier to update.","Url":"https://github.com/angular/components/pull/30907","RelatedDescription":"Closed or merged PR \"fix(cdk/schematics): account for new karma builder\" (#30907)"},{"Id":"3008302545","IsPullRequest":false,"CreatedAt":"2025-04-21T12:19:50","Actor":"DerAlbertCom","Number":"30913","RawContent":null,"Title":"bug(MATERIAL): Hashed Imports are generated in a .d.ts for a Library based on Angular Material >= 19.2.4","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.2.3\n\n### Description\n\nWe have an internal Component Library which is based on Angular Material.\n\nSince Angular Material Version 19.2.4 and up to19.2.10 some of our Services are a created wrong, the included import with a concrete hash in the `.d.ts` which obviously tends to compile time problems if the user does not also have the exact Angular Material Version in his project.\n\nI created a “minimal” repo, based on our library project structure.\n\nI also saw other Issues with a similar problem (also with 19.2.4), but it appears that this is different because it still happens with the current version of Angular Material.\n\n\n\n  \n\n### Reproduction\n\nhttps://stackblitz.com/~/github.com/DerAlbertCom/AngularMaterialBug\n\nReproduce\n\n1.  cd ng-mono\n2. npm install\n3. npm run lib:build\n4. look at the generated file\n5. https://stackblitz.com/~/github.com/DerAlbertCom/AngularMaterialBug?file=ng-mono/dist/%40dummy/unity-lib/confirm/dummy-confirmation.service.d.ts\n\n\n### Expected Behavior\n\nCreating a d.ts file with the general import, without the hash, like in all Version before 19.2.4.\n\n```ts\nexport declare class DummyConfirmationService {\n    private readonly matDialog;\n    confirm$<T = boolean>(data?: DummyDialogConfirmComponentData<T>, options?: MatDialogConfig<DummyDialogConfirmComponentData<T>>): import(\"@angular/material/dialog\").MatDialogRef<DummyDialogConfirmComponent<T>, T | null>;\n    dialog$<T, D = any, R = any>(component: ComponentType<T>, data?: D, options?: MatDialogConfig<D>): import(\"@angular/material/dialog\").MatDialogRef<T, R>;\n    static ɵfac: i0.ɵɵFactoryDeclaration<DummyConfirmationService, never>;\n    static ɵprov: i0.ɵɵInjectableDeclaration<DummyConfirmationService>;\n}\n```\n\n### Actual Behavior\n\nThe d.ts file is generated with the Hash in the import, this happens since Version 19.2.4\n```ts\nexport declare class DummyConfirmationService {\n    private readonly matDialog;\n    confirm$<T = boolean>(data?: DummyDialogConfirmComponentData<T>, options?: MatDialogConfig<DummyDialogConfirmComponentData<T>>): import(\"@angular/material/dialog.d-Dvsbu-0E\").MatDialogRef<DummyDialogConfirmComponent<T>, T | null>;\n    dialog$<T, D = any, R = any>(component: ComponentType<T>, data?: D, options?: MatDialogConfig<D>): import(\"@angular/material/dialog.d-Dvsbu-0E\").MatDialogRef<T, R>;\n    static ɵfac: i0.ɵɵFactoryDeclaration<DummyConfirmationService, never>;\n    static ɵprov: i0.ɵɵInjectableDeclaration<DummyConfirmationService>;\n}\n```\n\n### Environment\n\n- Angular: 19.x,\n- CDK/Material:19.2.4 to 19.2.10\n- Operating System: Windows 11 24H2\n","Url":"https://github.com/angular/components/issues/30913","RelatedDescription":"Open issue \"bug(MATERIAL): Hashed Imports are generated in a .d.ts for a Library based on Angular Material >= 19.2.4\" (#30913)"},{"Id":"3008068578","IsPullRequest":true,"CreatedAt":"2025-04-21T11:20:37","Actor":"mistrykaran91","Number":"30909","RawContent":null,"Title":"fix(material/form-field): enhance error handling for multiple form field controls","State":"closed","Body":"Currently, when multiple mat form fields are used together, the error is taken for the first control only, this take into consideration other controls too if they exist\r\n\r\nFixes #28887","Url":"https://github.com/angular/components/pull/30909","RelatedDescription":"Closed or merged PR \"fix(material/form-field): enhance error handling for multiple form field controls\" (#30909)"},{"Id":"3008126444","IsPullRequest":false,"CreatedAt":"2025-04-21T10:36:40","Actor":"Siddhu-K","Number":"30911","RawContent":null,"Title":"docs(COMPONENT): Improve styling filters","State":"open","Body":"### Documentation Feedback\n\nI would like the ability to filter by system token in the styling section of componets.\n\ncurrently the filter is limited to name (component tokens) and type\n\nexample: I would like to filter by 'primary', 'mat-sys-on-primary' etc.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/button/styling","Url":"https://github.com/angular/components/issues/30911","RelatedDescription":"Open issue \"docs(COMPONENT): Improve styling filters\" (#30911)"},{"Id":"3008120277","IsPullRequest":false,"CreatedAt":"2025-04-21T10:33:04","Actor":"LuisTovar0","Number":"30910","RawContent":null,"Title":"bug(datepicker): Localized date format issue","State":"open","Body":"MatDatepicker seems to not accept dates in `dd/mm/yyyy` format, even when the `MAT_DATE_LOCALE` and `DateAdapter`'s locale are set to a language/locale where this format is the standard.\n\nI have noticed that this problem can be circumvented [with the MomentJS date adapter for Angular](https://stackblitz.com/edit/tbjzibvt?file=src%2Fexample%2Fdatepicker-locale-example.ts), but it shouldn't be required since it's expected behaviour.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-4gjjc1ce?file=src%2Fapp%2Fapp.component.ts\n\nSteps to reproduce:\n1. Select pt-PT or fr-FR\n2. **Type** \"15/12/2024\" in the datepicker and hit tab\n3. Now **type** \"12/15/2024\" and hit tab\n\n### Expected Behavior\n\nIn step 2, the datepicker should consider that a valid date\nIn step 3, the datepicker should not consider that a valid date\n\n\n### Actual Behavior\n\nIn step 2, the datepicker considers the date invalid\nIn step 3, the datepicker changes the string to 15/12/2024, making it become valid\n\n### Environment\n\nAngular CLI: 19.2.7\nCDK/Material:19.2.9\nNode: 20.19.0\nPackage Manager: pnpm 8.15.6\nOS: linux x64\n","Url":"https://github.com/angular/components/issues/30910","RelatedDescription":"Open issue \"bug(datepicker): Localized date format issue\" (#30910)"},{"Id":"3006330863","IsPullRequest":true,"CreatedAt":"2025-04-20T16:44:16","Actor":"crisbeto","Number":"30904","RawContent":null,"Title":"perf(cdk/overlay): add tree-shakeable alternatives for overlay APIs","State":"closed","Body":"Currently all the overlay APIs go through the `Overlay` service which means that even if an app only uses the fairly simple global positioning strategy, they'd still bring in all the code for the complex flexible positioning strategy.\r\n\r\nThese changes break up the APIs into constructor functions that can be tree shaken separately.\r\n\r\nNote that I'll send follow-up PRs to roll this out in Material in order to see the full benefits.\r\n\r\nFrom a simple test of a an `ng new` app that only uses `MatTooltip`, this shaved off ~10kb of minified JS.","Url":"https://github.com/angular/components/pull/30904","RelatedDescription":"Closed or merged PR \"perf(cdk/overlay): add tree-shakeable alternatives for overlay APIs\" (#30904)"},{"Id":"3006332110","IsPullRequest":true,"CreatedAt":"2025-04-19T16:04:05","Actor":"crisbeto","Number":"30905","RawContent":null,"Title":"refactor(multiple): switch DOCUMENT imports to core","State":"closed","Body":"Switches all the places where we import `DOCUMENT` from `@angular/common` to be from `@angular/core` instead.","Url":"https://github.com/angular/components/pull/30905","RelatedDescription":"Closed or merged PR \"refactor(multiple): switch DOCUMENT imports to core\" (#30905)"},{"Id":"3006401586","IsPullRequest":false,"CreatedAt":"2025-04-19T12:19:57","Actor":"melroy89","Number":"30906","RawContent":null,"Title":"bug(mat-table): Unable to use mat-table-row-item-container-height","State":"open","Body":"### Description\n\nAs discussed earlier here: https://github.com/angular/components/issues/26438 (closed)\n\n`height: unset;` is done on purpose: https://github.com/angular/components/blob/204b289588106d90c991f26a50c23c80c68d4fc3/src/material/table/table.scss#L150C11-L150C16\n\nHowever, why does Material 3 have tokens to allow to you change those heights: https://material.angular.io/components/table/styling..?\n\nLike: `row-item-container-height`, `header-container-height` etc. But they will **NOT** work...\n\n### Reproduction\n\n1. Try to use:\n  \n  ```scss\n    @include mat.table-overrides((\n      header-container-height: 32px,\n      row-item-container-height: 32px,\n      footer-container-height: 32px\n    ));\n  ```\n2. You will notice it won't work at all\n\n\n### Expected Behavior\n\n- Either support these mixins like shown above.\n- Or: Remove the token support from it?\n\n### Actual Behavior\n\nYou provide style override tokens, but it's not working at all.  Its very confusing.\n\n### Environment\n\n- Angular: 19.x\n- CDK/Material: 19.x\n- Browser(s): Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\n","Url":"https://github.com/angular/components/issues/30906","RelatedDescription":"Open issue \"bug(mat-table): Unable to use mat-table-row-item-container-height\" (#30906)"},{"Id":"3005942075","IsPullRequest":true,"CreatedAt":"2025-04-18T23:40:40","Actor":"SergheiGurgurov","Number":"30903","RawContent":null,"Title":"fix(cdk/listbox): avoid resetting scroll position when using mouse","State":"open","Body":"The CDK listbox has some logic that forwards focus to the first item when the host is focused. The problem is that every time the user clicks on the scrollbar, they blur the current item and focus the listbox which then forwards focus back to the first item which in turn causes the scroll position to jump to the top. These changes add some logic to not forward focus when focus comes from a mouse interaction.\r\n\r\nFixes #30900","Url":"https://github.com/angular/components/pull/30903","RelatedDescription":"Open PR \"fix(cdk/listbox): avoid resetting scroll position when using mouse\" (#30903)"},{"Id":"3005552476","IsPullRequest":true,"CreatedAt":"2025-04-18T18:46:47","Actor":"SergheiGurgurov","Number":"30902","RawContent":null,"Title":"fix(material/select): select shrinking after scroll","State":"open","Body":"i added growAfterOpen to the position strategy of the overlay, matching the behaviour of the mat-menu\r\n\r\nFixes #30901\r\n","Url":"https://github.com/angular/components/pull/30902","RelatedDescription":"Open PR \"fix(material/select): select shrinking after scroll\" (#30902)"},{"Id":"3004994990","IsPullRequest":false,"CreatedAt":"2025-04-18T13:44:22","Actor":"Accir","Number":"30901","RawContent":null,"Title":"bug(Select): Select menu height shrinks when scrolling","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen select menu is opened and scrolled out of view it's height becomes really small. When scrolling back into view the height never increases and stays small. \n\nThis issue is similar to already fixed issue in mat-menu component\nhttps://github.com/angular/components/issues/18168\nhttps://github.com/angular/components/pull/21436\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/zdrajstd?file=src%2Fexample%2Fselect-custom-trigger-example.html\nSteps to reproduce:\n1. Create a page large enough where you can scroll\n2. Add a select component with a few options in the middle of the page\n3. Scroll through the page while the select is open\n\n\n### Expected Behavior\n\nSelect menu height should increase when scrolled back into view\n\n### Actual Behavior\n\nSelect menu height doesn't increase and stays small. \n\n![Image](https://github.com/user-attachments/assets/46a83001-4e12-4891-82c1-1742217bda1f)\n\n### Environment\n\n- Angular: 19.2.7,\n- CDK/Material: 19.2.10\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30901","RelatedDescription":"Open issue \"bug(Select): Select menu height shrinks when scrolling\" (#30901)"},{"Id":"3004948089","IsPullRequest":false,"CreatedAt":"2025-04-18T13:19:02","Actor":"spike-rabbit","Number":"30900","RawContent":null,"Title":"bug(cdk/listbox): using scrollbar with mouse breaks","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the cdk listbox on a list that scrolls, the listbox and scroll position behaves weird if that scrollbar is operated with a mouse.  The behavior gets worsed if a value is selected.\nOperated by mouse means either:\n- clicking on the little arrows in that scrollbar\n  ![Image](https://github.com/user-attachments/assets/122a6579-3a13-41a4-b595-ead2c72a33e0)\n- clicking on a blank space within that scrollbar\n  ![Image](https://github.com/user-attachments/assets/fa5229c2-6466-43ce-a5db-9ada9555d432)\n\nI think there was recently a similar issue in the menu: https://github.com/angular/components/pull/30249\n\n### Reproduction\n\nStackBlitz link: Also broken in your docs at https://material.angular.io/cdk/listbox/examples\nSteps to reproduce:\n1. Got to example `Listbox with forms validation.`\n2. Select option `Rat`\n3. Click the down arrow two times in the scrollbar / or two times at a blank location\n\n\n### Expected Behavior\n\nIt should just scroll normally.\n\n### Actual Behavior\n\nFirst click scrolls, at second click it jumps back to the top.\n\n### Environment\n\n- Angular: 19 / and the version your docs use\n- CDK/Material: 19 / and the version your docs use\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Linux / Mac\n","Url":"https://github.com/angular/components/issues/30900","RelatedDescription":"Open issue \"bug(cdk/listbox): using scrollbar with mouse breaks\" (#30900)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-23T03:30:02.4926926Z","RunDurationInMilliseconds":1535}