{"Data":{"Angular-Issues":{"Issues":[{"Id":"1573466123","IsPullRequest":false,"CreatedAt":"2023-02-06T23:52:09","Actor":"anjunar","Number":"48982","RawContent":null,"Title":"Reactive Form gets wrong path with nested groups when doing it recursivly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\nThe formControlName has as parent the FormControlDirective and not the formGroupName as parent. In this way the 3 Inputs are missing the Form Group \"form\"\r\n\r\n```\r\n<button type=\"button\" (click)=\"onClick()\">Load</button>\r\n<form [formGroup]=\"form\">\r\n  <ng-container *ngTemplateOutlet=\"fields; context : {$implicit : schema}\"></ng-container>\r\n\r\n  <ng-template #fields let-node>\r\n    <ng-container *ngFor=\"let control of node.properties | keyvalue\">\r\n      <ng-container [ngSwitch]=\"widget(control.value)\">\r\n        <ng-container *ngSwitchCase=\"'form'\">\r\n          <div [formGroupName]=\"key(control)\" >\r\n            <ng-container *ngTemplateOutlet=\"fields; context : {$implicit : control.value}\"></ng-container>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <input type=\"text\" [formControlName]=\"key(control)\" [placeholder]=\"key(control)\">\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-template>\r\n</form>\r\n```\r\n```\r\n{\r\n  \"$schema\" : {\r\n    \"properties\" : {\r\n      \"form\" : {\r\n        \"widget\" : \"form\",\r\n        \"type\" : \"object\",\r\n        \"properties\" : {\r\n          \"firstName\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"First Name\",\r\n            \"widget\" : \"text\"\r\n          },\r\n          \"lastName\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"Last Name\",\r\n            \"widget\" : \"text\"\r\n          },\r\n          \"birthDate\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"Birthdate\",\r\n            \"widget\" : \"date\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"form\" : {\r\n    \"firstName\" : \"Patrick\",\r\n    \"lastName\" : \"Bittner\",\r\n    \"birthDate\" : \"1980-04-01\"\r\n  }\r\n}\r\n```\r\n\r\n```\r\nimport {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Node} from \"./as-meta-form.classes\";\r\n\r\n@Component({\r\n  selector: 'as-meta-form',\r\n  templateUrl: 'as-meta-form.component.html',\r\n  styleUrls: ['as-meta-form.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AsMetaFormComponent implements OnInit {\r\n\r\n  @Input() model!: any\r\n  @Input() schema!: Node\r\n  form!: FormGroup\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group(this.schema2Form(this.schema.properties));\r\n  }\r\n\r\n  onClick() {\r\n    this.form.setValue({form: this.model.form})\r\n  }\r\n\r\n  key(value: any): string {\r\n    return value.key\r\n  }\r\n\r\n  widget(value: any): string {\r\n    return value.widget\r\n  }\r\n\r\n  schema2Form(properties: any): FormGroup {\r\n    let switchNode = (node: any) => {\r\n      switch (node.widget) {\r\n        case \"form\" : {\r\n          return this.formBuilder.group(this.schema2Form(node.properties))\r\n        }\r\n        default : {\r\n          return [\"\"]\r\n        }\r\n      }\r\n    }\r\n\r\n    return Object.entries(properties).reduce((prev, [key, value]) => {\r\n      prev[key] = switchNode(value);\r\n      return prev;\r\n    }, {} as any)\r\n  }\r\n\r\n}\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://anjunar.github.io/angular-simplicity\r\n--> Advanced --> Meta Form\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nERROR Error: Cannot find control with name: 'birthDate'\r\nERROR Error: Cannot find control with name: 'lastName'\r\nERROR Error: Cannot find control with name: 'firstName'\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.1\r\nNode: 19.4.0 (Unsupported)\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.1\r\n@angular-devkit/build-angular   15.1.1\r\n@angular-devkit/core            15.1.1\r\n@angular-devkit/schematics      15.1.1\r\n@angular/cli                    15.1.1\r\n@schematics/angular             15.1.1\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48982","RelatedDescription":"Open issue \"Reactive Form gets wrong path with nested groups when doing it recursivly\" (#48982)"},{"Id":"1573412164","IsPullRequest":true,"CreatedAt":"2023-02-06T22:49:26","Actor":"gitmibrahim","Number":"48981","RawContent":null,"Title":"docs: fix aot is the default compiler","State":"open","Body":"## PR Type\r\n\r\n- [x] Documentation content changes\r\n\r\n## What is the current behavior?\r\nIn https://angular.io/guide/file-structure#application-source-files describing `main.ts`, it still states that JIT is the default compiler over AOT.\r\n\r\n## What is the new behavior?\r\n- Updated information.\r\n- Link to the update in the docs.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48981","RelatedDescription":"Open PR \"docs: fix aot is the default compiler\" (#48981)"},{"Id":"1573411828","IsPullRequest":true,"CreatedAt":"2023-02-06T22:48:59","Actor":"alxhub","Number":"48980","RawContent":null,"Title":"feat(compiler-cli): DI mode for ctors with default values","State":"open","Body":"Previously, the AOT compiler would attempt to generate DI constructor calls for all constructors, and report errors if explicit type annotations or other problems prevented them from being generated.\r\n\r\nThis commit adds a new feature which specially handles constructors that have default values specificed for all parameters. When the compiler encounters such a constructor, it now generates a zero-arg constructor call (`new ClassName()`) as the factory function instead of a normal DI call. This means that the default values (the initializers) of all parameters will be used.\r\n\r\nWith this feature, the constructor form:\r\n\r\n```typescript\r\nconstructor(foo = inject(FooService), bar = inject(BarService)) {}\r\n```\r\n\r\nnow works correctly. Such a constructor can use DI in production, and have these default values overridden for tests.\r\n\r\nNote that this feature only works in AOT mode. In JIT, there is no reflection information available regarding the presence/absence of parameter initializers, and so the JIT compiler still generates an error if a parameter does not have an injectable type.\r\n\r\nFixes #47606","Url":"https://github.com/angular/angular/pull/48980","RelatedDescription":"Open PR \"feat(compiler-cli): DI mode for ctors with default values\" (#48980)"},{"Id":"1573269976","IsPullRequest":false,"CreatedAt":"2023-02-06T20:58:14","Actor":"shivachaturvedhi9","Number":"48979","RawContent":null,"Title":"Alter scss/css variables from angular typescript","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAble to use typescript variables, which can be rendered or altered through api calls,\r\nthese changes needs to be reflected in scss / css files\r\n\r\nRight now, only features, could be able to see are:  able to declare fixed values in scss file and then\r\nuse them in all other files.\r\nBut the scss file , we cannot change using api calls.\r\n\r\nLooking for an ability to alter scss variables throuh api calls\r\n\n\n### Proposed solution\n\nIt is a request. no idea of solution\r\n\n\n### Alternatives considered\n\nno idea how to implement","Url":"https://github.com/angular/angular/issues/48979","RelatedDescription":"Open issue \"Alter scss/css variables from angular typescript\" (#48979)"},{"Id":"1573267307","IsPullRequest":false,"CreatedAt":"2023-02-06T20:56:51","Actor":"GabrielBB","Number":"48978","RawContent":null,"Title":"Standalone Component DebugElements are missing properties","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf you use a non standalone `ChildComponent` by its selector and pass an attribute, this will be included inside `DebugElement.properties` . Example: When doing `<child-component [foos]=\"fooList\"/>` then `DebugElement.properties.foos` will contain `fooList` . However, if you add `standalone: true` to `ChildComponent` and import it from `ParentComponent` , at the time of testing `ParentComponent` and querying `child-component`, `DebugElement.properties.foos` will return `undefined` . \r\n\r\nWorkaround: If I do `DebugElement.componentInstance.foos` then the value is there, however this requires me to change a lot of tests when migrating my project to standalone.\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nFails at: `expect(childComponent.properties.foos).toBe([]);`\r\n\r\n`Expected undefined to be []`\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.4\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.2\r\n@angular-devkit/build-angular   15.1.3\r\n@angular-devkit/core            15.1.3\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.6\r\ntypescript                      4.8.4\r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48978","RelatedDescription":"Open issue \"Standalone Component DebugElements are missing properties\" (#48978)"},{"Id":"1570612653","IsPullRequest":true,"CreatedAt":"2023-02-06T20:33:29","Actor":"JeanMeche","Number":"48952","RawContent":null,"Title":"refactor(docs-infra): Enable @typescript-eslint/quotes rule for aio content","State":"closed","Body":"The commit enables the `@typescript-eslint/quotes` rule which mendates single quotes over doubles and allows template literals with backticks.","Url":"https://github.com/angular/angular/pull/48952","RelatedDescription":"Closed or merged PR \"refactor(docs-infra): Enable @typescript-eslint/quotes rule for aio content\" (#48952)"},{"Id":"1571485844","IsPullRequest":true,"CreatedAt":"2023-02-06T20:33:02","Actor":"bougwal","Number":"48961","RawContent":null,"Title":"docs(core): standalone-migration schematics typos fix and examples properties addition","State":"closed","Body":"Fixed a typo and updated the hyphenation in a couple of words to keep consistency across schematics docs style. Assuming beginners are reading docs, I also added the property called \r\n\r\n`public showGreeting = true;`\r\n\r\nThis is because it is available in the examples `.HTML` `*ngIf` directive snippets without being present in the `.ts` class properties declarations.  Also, this removes potential inference that this absence is a result of the standalone migration schematics work.\r\n","Url":"https://github.com/angular/angular/pull/48961","RelatedDescription":"Closed or merged PR \"docs(core): standalone-migration schematics typos fix and examples properties addition\" (#48961)"},{"Id":"1572950404","IsPullRequest":true,"CreatedAt":"2023-02-06T20:32:38","Actor":"jessicajaniuk","Number":"48975","RawContent":null,"Title":"fix(dev-infra): Fix code ownership for animations package","State":"closed","Body":"An incorrect username was added to the reviewers list for animations.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: pullapprove fix\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48975","RelatedDescription":"Closed or merged PR \"fix(dev-infra): Fix code ownership for animations package\" (#48975)"},{"Id":"1571505218","IsPullRequest":true,"CreatedAt":"2023-02-06T20:31:40","Actor":"simonaco","Number":"48963","RawContent":null,"Title":"docs(extended-diagnostics): fix code example","State":"closed","Body":"Update code examples to use character entities for reserved html characters\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48963","RelatedDescription":"Closed or merged PR \"docs(extended-diagnostics): fix code example\" (#48963)"},{"Id":"1572877372","IsPullRequest":true,"CreatedAt":"2023-02-06T20:28:43","Actor":"crisbeto","Number":"48974","RawContent":null,"Title":"Internal migration improvements","State":"closed","Body":"Includes a couple of improvements for running the standalone migration internally. The commits have more info, but here's an overview:\r\n1. Adds some extra logic to account for internal paths when checking if a class is a reference to an Angular package.\r\n2. Adds an API that we can use internally to generate better imports.","Url":"https://github.com/angular/angular/pull/48974","RelatedDescription":"Closed or merged PR \"Internal migration improvements\" (#48974)"},{"Id":"1571361409","IsPullRequest":true,"CreatedAt":"2023-02-06T20:27:57","Actor":"crisbeto","Number":"48958","RawContent":null,"Title":"Fixes for standalone migration path filtering and import location picking","State":"closed","Body":"See the individual commits for more info. High level changes:\r\n1. Fixes that we were throwing the error for not enough file matches incorrectly if a file has multiple projects with distinct tsconfigs.\r\n2. Tweaks the logic for import generation to try and avoid referencing internal modules.\r\n\r\nFixes #48942.","Url":"https://github.com/angular/angular/pull/48958","RelatedDescription":"Closed or merged PR \"Fixes for standalone migration path filtering and import location picking\" (#48958)"},{"Id":"1573113276","IsPullRequest":false,"CreatedAt":"2023-02-06T19:00:21","Actor":"soujam69","Number":"48977","RawContent":null,"Title":"Angular 15 - Material 'mat-sidenav' breaks page","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm new to Angular and have installed the lastest of everything. I created a new component using the -standalone switch. I've installed Material and imported it in my new component. If I insert mat-sidenav in my html it breaks the page and everything is blank. If i remove the mat-sidenav it works again. Also, 'mat-elevation-z4' does not work either.\r\n <mat-toolbar>\r\n  Header Info\r\n</mat-toolbar>\r\n\r\n  <mat-sidenav-container>\r\n    <mat-sidenav>\r\n        Side Content\r\n    </mat-sidenav>  \r\n    <mat-sidenav-content class=\"content\">\r\n        Main Content\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo errors\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48977","RelatedDescription":"Open issue \"Angular 15 - Material 'mat-sidenav' breaks page\" (#48977)"},{"Id":"1573073381","IsPullRequest":false,"CreatedAt":"2023-02-06T18:28:31","Actor":"e-oz","Number":"48976","RawContent":null,"Title":"Please report about circular dependencies of standalone components on \"build\" step","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncompiler\r\n\r\n### Description\r\n\r\nIf standalone component A imports standalone component B, and B imports A, then `ReferenceError: Cannot access 'A' before initialization` will be raised. \r\nBut it will be only raised in runtime 🤷‍♂️\r\n\r\n\r\n### Proposed solution\r\n\r\nPlease do not allow to compile components with circular dependencies.\r\n\r\n### Alternatives considered\r\n\r\nOr, allow circular dependencies 😜","Url":"https://github.com/angular/angular/issues/48976","RelatedDescription":"Open issue \"Please report about circular dependencies of standalone components on \"build\" step\" (#48976)"},{"Id":"1572097210","IsPullRequest":true,"CreatedAt":"2023-02-06T17:52:23","Actor":"crisbeto","Number":"48966","RawContent":null,"Title":"fix(migrations): duplicated comments on migrated classes","State":"closed","Body":"Fixes that the migration was duplicating the comments on class nodes that were being converted to standalone.\r\n\r\nFixes #48943.","Url":"https://github.com/angular/angular/pull/48966","RelatedDescription":"Closed or merged PR \"fix(migrations): duplicated comments on migrated classes\" (#48966)"},{"Id":"1572846307","IsPullRequest":true,"CreatedAt":"2023-02-06T16:04:28","Actor":"ymqy","Number":"48973","RawContent":null,"Title":"build(upgrade): update to rollup v3","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48973","RelatedDescription":"Open PR \"build(upgrade): update to rollup v3\" (#48973)"},{"Id":"1572756067","IsPullRequest":true,"CreatedAt":"2023-02-06T15:13:04","Actor":"kalbarczyk","Number":"48972","RawContent":null,"Title":"docs: add NG Poland 2023 and JS Poland 2023 to events","State":"open","Body":"docs: add NG Poland 2023 and JS Poland 2023 to events\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48972","RelatedDescription":"Open PR \"docs: add NG Poland 2023 and JS Poland 2023 to events\" (#48972)"},{"Id":"1572705692","IsPullRequest":false,"CreatedAt":"2023-02-06T14:46:36","Actor":"cexbrayat","Number":"48971","RawContent":null,"Title":"`ng g @angular/core:standalone` should not move `RouterTestingModule.withRoutes()` import","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe following  unit test that uses a test component, and `RouterTestingModule.withRoutes([])` in `configureTestingModule`:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\n\r\n@Component({\r\n  template: '<div>Hello World</div>'\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('AppComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    declarations: [TestComponent],\r\n    imports: [RouterTestingModule.withRoutes([])]\r\n  }));\r\n\r\n  it('should create the app', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('div').textContent).toContain('Hello World');\r\n  });\r\n});\r\n```\r\n\r\nAfter `ng g @angular/core:standalone --defaults`,\r\nit gets migrated to:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\n\r\n@Component({\r\n    template: '<div>Hello World</div>',\r\n    standalone: true,\r\n    imports: [RouterTestingModule.withRoutes([])]\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('AppComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    imports: [RouterTestingModule.withRoutes([]), TestComponent]\r\n  }));\r\n\r\n  it('should create the app', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('div').textContent).toContain('Hello World');\r\n  });\r\n});\r\n```\r\n\r\nNote that `RouterTestingModule.withRoutes([])` is still in the testing module, but all added to the imports of the standalone component, which then fails `ng test`.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError: src/app/app.component.spec.ts:8:15 - error TS2322: Type 'ModuleWithProviders<RouterTestingModule>' is not assignable to type 'readonly any[] | Type<any>'.\r\n\r\n8     imports: [RouterTestingModule.withRoutes([])]\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.0-next.3\r\nNode: 16.17.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.0-next.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.0-next.3\r\n@angular-devkit/build-angular   15.2.0-next.3\r\n@angular-devkit/core            15.2.0-next.3\r\n@angular-devkit/schematics      15.2.0-next.3\r\n@schematics/angular             15.2.0-next.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48971","RelatedDescription":"Open issue \"`ng g @angular/core:standalone` should not move `RouterTestingModule.withRoutes()` import\" (#48971)"},{"Id":"1572701218","IsPullRequest":true,"CreatedAt":"2023-02-06T14:44:10","Actor":"JeanMeche","Number":"48970","RawContent":null,"Title":"docs/devtools: Specify when an app is debuggable by the DevTools. ","State":"open","Body":"This PR improves the information given by the docs & the devTools.\r\n\r\nDevMode is when the ng debug object is available. `Optimization:true` is responsible for treeshaking everything behind `ngDevMode`.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Documentation content changes\r\n- [x] DevToos\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n\r\nFixes #48968 ","Url":"https://github.com/angular/angular/pull/48970","RelatedDescription":"Open PR \"docs/devtools: Specify when an app is debuggable by the DevTools. \" (#48970)"},{"Id":"1572638992","IsPullRequest":true,"CreatedAt":"2023-02-06T14:11:02","Actor":"JeanMeche","Number":"48969","RawContent":null,"Title":"refactor(docs-infra): Drop deprecated rxjs multicasting operators","State":"open","Body":"RxJS has deprecated the `publishReplay` & `publishLast` operators which will be removed in RxJS 8. `connectable()` should be used instead.\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] angular.io application / infrastructure changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48969","RelatedDescription":"Open PR \"refactor(docs-infra): Drop deprecated rxjs multicasting operators\" (#48969)"},{"Id":"1572498882","IsPullRequest":false,"CreatedAt":"2023-02-06T12:39:39","Actor":"ilyakonrad","Number":"48968","RawContent":null,"Title":"Devtools non-production configuration warning is not clear enough","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [ ] Bug Report\n- [X] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\n_No response_\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\nWhen Devtools are disabled, there's this message:\r\n \r\n![image](https://user-images.githubusercontent.com/25200186/216969907-22fb6e27-f79b-4008-a763-c4c356d97b38.png)\r\n\r\nwhich seems to mean that Devtools will only work when your environment has `production: false`. Or perhaps when we don't call `enableProdMode()`. What is \"produciton configuration\"? What is \"development build\"?\r\n\r\nWe have development, testing, staging and production environment. The former is used to serve the app locally, the latter is exactly what it seems. Only production environment has `production: true`, however Devtools won't run on our testing and staging servers as well.\r\n\r\nBy trial and error I found out that `\"optimization\": true` is what really prevented Devtools from running on our testing and staging environments.\r\n\r\nI could have saved time if the warning was more descriptive.\n\n### Proposed solution [Feature Request only]\n\nMake Devtools empty state 100% clear for people to understand precisely what should be done in order for it to work. Also update the docs.\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/48968","RelatedDescription":"Open issue \"Devtools non-production configuration warning is not clear enough\" (#48968)"},{"Id":"1572422057","IsPullRequest":false,"CreatedAt":"2023-02-06T11:45:59","Actor":"dkimmich-onventis","Number":"48967","RawContent":null,"Title":"Custom window properties prefixed with `on` are set to null","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm setting custom window properties in my `index.html` file in a script tag, like the following:\r\n\r\n```\r\n<script type=\"text/javascript\">\r\n  window.one = 1;\r\n  window.two = 2;\r\n</script>\r\n```\r\n\r\nAfter building and opening the application in the browser, the properties have the following values:\r\n\r\n```\r\nconsole.log(window.one); // -> null\r\nconsole.log(window.two); // -> 2\r\n```\r\n\r\nIt seems like custom window properties prefixed with \"on\" are set to `null` by Angular.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/dkimmich-onventis/angular-custom-window-properties-bug\n\n### Please provide the exception or error you saw\n\n```true\nNo exception or error, but my custom window property is overridden.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 18.14.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\nIn Angular v10 and prior it worked fine.","Url":"https://github.com/angular/angular/issues/48967","RelatedDescription":"Open issue \"Custom window properties prefixed with `on` are set to null\" (#48967)"},{"Id":"1571694313","IsPullRequest":true,"CreatedAt":"2023-02-06T00:38:01","Actor":"JeanMeche","Number":"48965","RawContent":null,"Title":"docs: Improve previous version navigation","State":"open","Body":"In archive mode the link to the current doc will point to same page. If the page doesn't exist anymore, it will show a contextualized warning message.\r\n\r\nSee #46850\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n","Url":"https://github.com/angular/angular/pull/48965","RelatedDescription":"Open PR \"docs: Improve previous version navigation\" (#48965)"},{"Id":"1571630462","IsPullRequest":true,"CreatedAt":"2023-02-05T22:01:00","Actor":"JeanMeche","Number":"48964","RawContent":null,"Title":"feat(core): Error logs links point to the archived version of the docs","State":"open","Body":"In order to point the right context, links in error messages will target the archived version of the online doc site (v*.angular.io).\r\n\r\nSee #44650\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48964","RelatedDescription":"Open PR \"feat(core): Error logs links point to the archived version of the docs\" (#48964)"},{"Id":"1570776212","IsPullRequest":true,"CreatedAt":"2023-02-05T18:53:09","Actor":"krp12345","Number":"48953","RawContent":null,"Title":"docs: What gets inserted before ngOninit","State":"closed","Body":"https://github.com/angular/angular/issues/48451\r\n\r\nI had raised above issue and it came out that there should not be any expectation about what happens before ngOnInit.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48953","RelatedDescription":"Closed or merged PR \"docs: What gets inserted before ngOninit\" (#48953)"},{"Id":"1571377036","IsPullRequest":false,"CreatedAt":"2023-02-05T18:08:03","Actor":"stothardj","Number":"48960","RawContent":null,"Title":"docs-bug(Resolve): Show how to inject services with an in-line ResolveFn.","State":"closed","Body":"### Documentation Feedback\n\nThe use of a class implementing `Resolve<Hero>` shows how to get a hero from the HeroService using `return this.service.getHero(route.paramMap.get('id'));`. The HeroService is injected in the constructor.\r\n\r\nThe inline function example for how to use a `ResolveFn` only shows how to return a constant hero. This avoids showing how to inject members into the Javascript function, which may not be known to the reader. Changing this example to also retrieve the Hero from a HeroService would help people who want to translate their Resolve class into a ResolveFn.\r\n\r\nI'm suggesting replacing:\r\n\r\n```ts\r\nexport const myHero: Hero = {\r\n  // ...\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      {\r\n        path: 'detail/:id',\r\n        component: HeroComponent,\r\n        resolve: {\r\n          hero: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => myHero\r\n        }\r\n      }\r\n    ])\r\n  ],\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nwith\r\n\r\n```ts\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      {\r\n        path: 'detail/:id',\r\n        component: HeroComponent,\r\n        resolve: {\r\n          hero: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n            const service = inject(HeroService);\r\n            return service.getHero(route.paramMap.get('id'));\r\n          }\r\n        }\r\n      }\r\n    ])\r\n  ],\r\n})\r\nexport class AppModule {}\r\n```\n\n### Affected documentation page\n\nhttps://angular.io/api/router/Resolve","Url":"https://github.com/angular/angular/issues/48960","RelatedDescription":"Closed issue \"docs-bug(Resolve): Show how to inject services with an in-line ResolveFn.\" (#48960)"},{"Id":"1571488558","IsPullRequest":false,"CreatedAt":"2023-02-05T15:55:30","Actor":"eng-dibo","Number":"48962","RawContent":null,"Title":"issue with lazy loading standalone components","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nrouter\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nin NgModule-based apps we can set custom routes like this:\r\n```\r\nconst routes: Routes = [\r\n  {\r\n    matcher: (segments: any, group: any, route: any) => { consumed: [] },\r\n    loadChildren: () => import('./feature.module').then(m=>m.FeatureModule),\r\n  },\r\n];\r\n```\r\nthis matcher matches all paths for illustrating only,\r\nnote that `consumed` has an empty array, so that `Router.url` in the component gives the full URL, instead of only a part of it.\r\n\r\nfor example when you navigate to \"/path1/path2/path3\" `Router.url` is the full path\r\nbut, if you changed consumed into `{ consumed: segments }`, `Router.url` now is '/'.\r\n\r\nto implement the exact same behavior with standalone components (Angular v15), only the second one works, which always gives the same value for Router.url which is \"/\". I don't want to use `posParams`, I just want `Router.url` to give me the full path\r\n\r\nusing the lean `Router.url` is much easier than subscribing to any Observable based method such as ActivatedRoute`\r\n\r\nreturning `{ consumed: [] }` and navigating to any path other than '/' gives the following error\r\n```\r\nError: Uncaught (in promise): Error: NG04002\r\nError: NG04002\r\n    at Mc.noMatchError (chunk-YDI57G3S.js:10:43964)\r\n    ....\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48962","RelatedDescription":"Open issue \"issue with lazy loading standalone components\" (#48962)"},{"Id":"1571332206","IsPullRequest":true,"CreatedAt":"2023-02-05T08:50:17","Actor":"cexbrayat","Number":"48957","RawContent":null,"Title":"refactor(http): simplify HttpClientModule XSRF configuration","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe current configuration of `HttpClientModule` explicitely enables the XSRF configuration, but this XSRF configuration is the one used by default by `provideHttpClient`.\r\n\r\nSee https://github.com/angular/angular/blob/main/packages/common/http/src/provider.ts#L50-L98\r\n\r\n## What is the new behavior?\r\n\r\nthe call to `withXsrfConfiguration` is removed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48957","RelatedDescription":"Open PR \"refactor(http): simplify HttpClientModule XSRF configuration\" (#48957)"},{"Id":"1571062560","IsPullRequest":true,"CreatedAt":"2023-02-05T08:40:18","Actor":"cexbrayat","Number":"48956","RawContent":null,"Title":"fix(http): export XSRF_DEFAULT_COOKIE_NAME and XSRF_DEFAULT_HEADER_NAME","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe XSRF tokens are not publicly exported, making it impossible for now to configure `provideHttpClient` in the same way `HttpClientModule` does:\r\n\r\n```\r\nprovideHttpClient(\r\n  withInterceptorsFromDi(),\r\n  withXsrfConfiguration({\r\n    cookieName: XSRF_DEFAULT_COOKIE_NAME,\r\n    headerName: XSRF_DEFAULT_HEADER_NAME,\r\n  })\r\n)\r\n```\r\n\r\n## What is the new behavior?\r\n\r\nThis PR exports the tokens\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48956","RelatedDescription":"Closed or merged PR \"fix(http): export XSRF_DEFAULT_COOKIE_NAME and XSRF_DEFAULT_HEADER_NAME\" (#48956)"},{"Id":"1570908075","IsPullRequest":false,"CreatedAt":"2023-02-04T12:51:46","Actor":"lakshmi2716","Number":"48955","RawContent":null,"Title":"Importing shared styled in global scss is not working across all application ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am using angular 15. I have created variables.scss and imported that into global style.scss . Without importing variable.scss into each component, i am not able to use it. If i use it i am getting variable is not defined. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48955","RelatedDescription":"Closed issue \"Importing shared styled in global scss is not working across all application \" (#48955)"},{"Id":"1570827319","IsPullRequest":false,"CreatedAt":"2023-02-04T09:05:28","Actor":"duykhang53","Number":"48954","RawContent":null,"Title":"NG 12 AOT cause out of memory error when compile using `ng-packagr`","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nFollow up of https://github.com/angular/angular-cli/issues/21041\r\n\r\nThis behavior still occurs in ~12.2.0\r\n\r\n### Reproduction:\r\n```bash\r\n$ npm i -g @angular/cli@v12-lts\r\n$ npx ng new angular-error-sync-async --minimal --routing false --style css\r\n$ cd angular-error-sync-async\r\n$ npx ng generate lib err-lib\r\n```\r\n\r\n> projects/err-lib/tsconfig.lib.prod.json\r\n```json\r\n{\r\n  \"extends\": \"./tsconfig.lib.json\",\r\n  \"compilerOptions\": {\r\n    \"declarationMap\": false\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"enableIvy\": false,\r\n    \"fullTemplateTypeCheck\": true\r\n  }\r\n}\r\n```\r\n\r\n> projects/err-lib/src/lib/err-lib.module.ts\r\n\r\n```typescript\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { ErrLibComponent } from './err-lib.component';\r\n\r\n@NgModule({})\r\nexport class ErrRegisterModule {\r\n  static register(arg: any): ModuleWithProviders<ErrRegisterModule> {\r\n    return { ngModule: ErrRegisterModule };\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ErrLibComponent\r\n  ],\r\n  imports: [\r\n    ErrRegisterModule.register(() => () => true)\r\n  ],\r\n  exports: [\r\n    ErrLibComponent\r\n  ]\r\n})\r\nexport class ErrLibModule { }\r\n```\r\n\r\n`$ npx ng b err-lib --configuration production`\r\n\r\n### Expected Error\r\n> \\------------------------------------------------------------------------------\r\n> Building entry point 'err-lib'\r\n> \\------------------------------------------------------------------------------\r\n> × Compiling with Angular in legacy View Engine compilation mode.\r\n> projects/err-lib/src/lib/err-lib.module.ts(17,32): Error during template compile of 'ɵ0'\r\n>   Function expressions are not supported in decorators\r\n>     Consider changing the function expression into an exported function.\r\n\r\n### Actual Error\r\n> \\------------------------------------------------------------------------------\r\n> Building entry point 'err-lib'\r\n> \\------------------------------------------------------------------------------\r\n> × Compiling with Angular in legacy View Engine compilation mode.\r\n> Angular structure loaded both synchronously and asynchronously\r\n\r\n### Temporary fix\r\nhttps://github.com/angular/angular/blob/737f71e3aa763980e4bdc6f0d3f13e2c712b12d9/packages/compiler-cli/src/transformers/program.ts#L702\r\n\r\n> node_modules/@angular/compiler-cli/src/transformers/program.js\r\n```diff\r\n        AngularCompilerProgram.prototype._addStructuralDiagnostics = function (error) {\r\n            var diagnostics = this._structuralDiagnostics || (this._structuralDiagnostics = []);\r\n            if (compiler_1.isSyntaxError(error)) {\r\n-                diagnostics.push.apply(diagnostics, tslib_1.__spreadArray([], tslib_1.__read(syntaxErrorToDiagnostics(error, this.tsProgram))));\r\n+                diagnostics.push.apply(diagnostics, tslib_1.__spreadArray([], tslib_1.__read(syntaxErrorToDiagnostics(error, this._tsProgram))));\r\n            }\r\n            else {\r\n                diagnostics.push({\r\n                    messageText: error.toString(),\r\n                    category: ts.DiagnosticCategory.Error,\r\n                    source: api_1.SOURCE,\r\n                    code: api_1.DEFAULT_ERROR_CODE\r\n                });\r\n            }\r\n        };\r\n```\r\n\r\n### POV\r\nAs I debugged:\r\n- `this.initSync()` didn't called\r\n- Exception in `this.loadNgStructureAsync()` -> `this._createProgramWithBasicStubs()` that cause `this._createCompiler()` raise `this._addStructuralDiagnostics()`\r\n- `this._createProgramOnError()` never called, `this._tsProgram` is never assigned\r\n\r\nThis issue is related to https://github.com/ng-packagr/ng-packagr\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 12.2.18\r\nNode: 16.19.0 (Unsupported)\r\nPackage Manager: npm 8.19.3\r\nOS: win32 x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router     \r\n\r\nPackage                         Version\r\n---------------------------------------------------------  \r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            12.2.18\r\n@angular-devkit/schematics      12.2.18\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48954","RelatedDescription":"Closed issue \"NG 12 AOT cause out of memory error when compile using `ng-packagr`\" (#48954)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1570788815","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:36","Actor":"angular-robot","Number":"24659","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `26bde56` -> `5ff25fd` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `57ce1b4` -> `ffd5dec` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `00ebcda` -> `691f7df` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `e630e31` -> `2e7b49f` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `b5d6896` -> `225c886` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `25e69a6` -> `2c2a736` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `b3392c5` -> `e0d805d` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `9dadc81` -> `90a69d8` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `d8a32d9` -> `e21472e` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `65e922c` -> `cf718f3` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `27e09d5` -> `91f3ec2` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c7d5d57` -> `83eb507` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ecad30a` -> `f4601b6` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `17097d0` -> `879ef52` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `422cfaf` -> `b60ba49` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `81b3f8a` -> `cfe6cfe` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `fb0e9fe` -> `b2ebd6f` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `0982a5e` -> `82f6062` |\n| angular/dev-infra | action | digest | `fa428ee` -> `fb077c1` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24659","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24659)"},{"Id":"1571354775","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:20","Actor":"crisbeto","Number":"24662","RawContent":null,"Title":"fix(@angular/cli): error if Angular compiler is used in a schematic","State":"closed","Body":"When a schematic is executed, it is wrapped in a custom Node context. This context doesn't expose the same set of global variables as the default one. This can lead to an error if a schematic is importing the Angular compiler and the app is using i18n, because the `TextEncoder` isn't exposed through the custom context (see https://github.com/angular/angular/issues/48940).\r\n\r\nThese changes add the `TextEncoder` to the context.\r\n\r\nFixes https://github.com/angular/angular/issues/48940.","Url":"https://github.com/angular/angular-cli/pull/24662","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): error if Angular compiler is used in a schematic\" (#24662)"},{"Id":"1566894832","IsPullRequest":false,"CreatedAt":"2023-02-07T01:01:09","Actor":"lukapif","Number":"24644","RawContent":null,"Title":"Karma unit tests do not work if library has no .spec.ts files - Error: Specified patterns: \"**/*.spec.ts\" did not match any spec files.","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWe are using NX CLI in our project. I upgraded my angular with the help of NX from 13->14 and run `nx run-many --all --target=test` and everything works fine. Unit tests are all successfully run. Even in the Angular libraries where there are zero unit tests.\r\n\r\nLater I updated angular from 14-15 and unit tests are failing in the libraries where there is no `.spec.ts` file present.\r\n\r\nWhat I have managed to figure out from debugging is the problem is when updating `\"@angular-devkit/build-angular\": \"14.2.10\"`,\r\nto `\"@angular-devkit/build-angular\": \"15.1.3\",` If I revert this dependency and run unit tests then it works.\r\n\r\nProblem occurs in file `find-tests-plugin.js` from `node_modules/@angular-devkit/build-angular/src/builders/karma/`. Below is the part of the code that returns the error. If I comment out this part of the code then it is ok.\r\n`\r\nconst specFiles = await findTests(include, exclude, workspaceRoot, projectSourceRoot);\r\n            if (!specFiles.length) {\r\n                (0, assert_1.default)(this.compilation, 'Compilation cannot be undefined.');\r\n                (0, webpack_diagnostics_1.addError)(this.compilation, `Specified patterns: \"${include.join(', ')}\" did not match any spec files.`);\r\n            }\r\n`\r\n\r\nThis part of code returns \r\n`Error: Specified patterns: \"**/*.spec.ts\" did not match any spec files.`\r\n\r\nI have flag `failOnEmptyTestSuite` set to `false` in the karma.conf.js.\r\n\r\n### Minimal Reproduction\r\n\r\nnx g lib shared/api/test\r\nWhich generator would you like to use? · @nrwl/angular:library\r\n\r\nUPDATE package.json\r\nUPDATE libs/shared/api/registers/project.json\r\nUPDATE angular.json\r\nCREATE libs/shared/api/test/README.md\r\nCREATE libs/shared/api/test/tsconfig.lib.json\r\nCREATE libs/shared/api/test/tsconfig.spec.json\r\nCREATE libs/shared/api/test/src/index.ts\r\nCREATE libs/shared/api/test/src/lib/shared-api-test.module.ts\r\nCREATE libs/shared/api/test/project.json\r\nCREATE libs/shared/api/test/karma.conf.js\r\nUPDATE tsconfig.base.json\r\nCREATE libs/shared/api/test/tsconfig.json\r\nCREATE libs/shared/api/test/.eslintrc.json\r\n\r\nnx run shared-api-test:test\r\n\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\n✔ Browser application bundle generation complete.\r\n\r\nError: Specified patterns: \"**/*.spec.ts\" did not match any spec files.\r\n\r\n\r\n01 02 2023 22:43:39.121:INFO [karma-server]: Karma v6.4.1 server started at http://localhost:9876/\r\n01 02 2023 22:43:39.132:INFO [launcher]: Launching browsers ChromeHeadlessNoSandbox with concurrency unlimited\r\n01 02 2023 22:43:39.137:ERROR [karma-server]: Error: Found 1 load error\r\n    at Server.<anonymous> (D:\\workspace\\WS_ANGULAR\\nlb-retail-web\\node_modules\\karma\\lib\\server.js:244:26)\r\n    at Object.onceWrapper (node:events:627:28)\r\n    at Server.emit (node:events:525:35)\r\n    at Server.emit (node:domain:489:12)\r\n    at emitListeningNT (node:net:1497:10)\r\n    at processTicksAndRejections (node:internal/process/task_queues:82:21)\r\n\r\n >  NX   Ran target test for project shared-api-test(18s)\r\n\r\n    ×    1/1 failed\r\n    √    0/1 succeeded [0 read from cache]\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n\"dependencies\": {\r\n    \"@angular/animations\": \"15.1.2\",\r\n    \"@angular/cdk\": \"15.1.2\",\r\n    \"@angular/common\": \"15.1.2\",\r\n    \"@angular/compiler\": \"15.1.2\",\r\n    \"@angular/core\": \"15.1.2\",\r\n    \"@angular/forms\": \"15.1.2\",\r\n    \"@angular/localize\": \"15.1.2\",\r\n    \"@angular/platform-browser\": \"15.1.2\",\r\n    \"@angular/platform-browser-dynamic\": \"15.1.2\",\r\n    \"@angular/router\": \"15.1.2\",\r\n    \"@backbase/ui-ang\": \"~8.2.0-pr.5\",\r\n    \"@material/animation\": \"^3.0.0\",\r\n    \"@ng-bootstrap/ng-bootstrap\": \"~11.0.0\",\r\n    \"@ng-select/ng-select\": \"~8.0.0\",\r\n    \"@ngrx/effects\": \"15.0.0\",\r\n    \"@ngrx/store\": \"15.0.0\",\r\n    \"@nrwl/angular\": \"15.6.3\",\r\n    \"@storybook/core-server\": \"6.5.15\",\r\n    \"@swimlane/ngx-charts\": \"^20.1.0\",\r\n    \"@tailwindcss/line-clamp\": \"^0.4.0\",\r\n    \"angular-oauth2-oidc\": \"13.0.1\",\r\n    \"bignumber.js\": \"~9.0.1\",\r\n    \"bootstrap\": \"^4.5.2\",\r\n    \"i18n-iso-countries\": \"^7.5.0\",\r\n    \"moment\": \"^2.29.3\",\r\n    \"ngx-cookie-service\": \"~12.0.3\",\r\n    \"ngx-mask\": \"~13.0.0\",\r\n    \"ngx-quill\": \"~16.0.0\",\r\n    \"quill\": \"~1.3.7\",\r\n    \"rxjs\": \"~7.5.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"twilio\": \"~3.81.0\",\r\n    \"uuid\": \"^9.0.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"15.1.3\",\r\n    \"@angular-devkit/core\": \"15.1.3\",\r\n    \"@angular-eslint/eslint-plugin\": \"15.0.0\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"15.0.0\",\r\n    \"@angular-eslint/template-parser\": \"15.0.0\",\r\n    \"@angular/cli\": \"~15.1.0\",\r\n    \"@angular/compiler-cli\": \"15.1.2\",\r\n    \"@angular/language-service\": \"15.1.2\",\r\n    \"@ng-apimock/core\": \"~3.5.0\",\r\n    \"@ng-apimock/dev-interface\": \"~3.1.1\",\r\n    \"@nrwl/cli\": \"15.6.3\",\r\n    \"@nrwl/cypress\": \"15.6.3\",\r\n    \"@nrwl/devkit\": \"15.6.3\",\r\n    \"@nrwl/eslint-plugin-nx\": \"15.6.3\",\r\n    \"@nrwl/jest\": \"15.6.3\",\r\n    \"@nrwl/linter\": \"15.6.3\",\r\n    \"@nrwl/node\": \"15.6.3\",\r\n    \"@nrwl/nx-cloud\": \"15.0.3\",\r\n    \"@nrwl/storybook\": \"15.6.3\",\r\n    \"@nrwl/tao\": \"15.6.3\",\r\n    \"@nrwl/workspace\": \"15.6.3\",\r\n    \"@playwright/test\": \"~1.22.2\",\r\n    \"@storybook/addon-essentials\": \"6.5.15\",\r\n    \"@storybook/angular\": \"6.5.15\",\r\n    \"@storybook/builder-webpack5\": \"6.5.15\",\r\n    \"@storybook/manager-webpack5\": \"6.5.15\",\r\n    \"@storybook/testing-angular\": \"^0.0.12\",\r\n    \"@types/jasmine\": \"4.0.3\",\r\n    \"@types/jest\": \"28.1.8\",\r\n    \"@types/node\": \"18.7.1\",\r\n    \"@typescript-eslint/eslint-plugin\": \"5.36.1\",\r\n    \"@typescript-eslint/parser\": \"5.36.1\",\r\n    \"cypress\": \"^12.2.0\",\r\n    \"eslint\": \"8.15.0\",\r\n    \"eslint-config-prettier\": \"8.1.0\",\r\n    \"eslint-plugin-cypress\": \"^2.10.3\",\r\n    \"eslint-plugin-import\": \"~2.26.0\",\r\n    \"husky\": \"^8.0.1\",\r\n    \"jasmine-core\": \"4.2.0\",\r\n    \"jasmine-spec-reporter\": \"7.0.0\",\r\n    \"jest\": \"28.1.3\",\r\n    \"karma\": \"6.4.1\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"2.1.0\",\r\n    \"karma-jasmine\": \"5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"2.0.0\",\r\n    \"ngx-i18nsupport\": \"~0.17.1\",\r\n    \"prettier\": \"2.6.2\",\r\n    \"pretty-quick\": \"^3.1.3\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"tailwindcss\": \"^3.0.24\",\r\n    \"ts-jest\": \"28.0.8\",\r\n    \"ts-node\": \"10.9.1\",\r\n    \"typescript\": \"4.8.4\"\r\n  }\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24644","RelatedDescription":"Closed issue \"Karma unit tests do not work if library has no .spec.ts files - Error: Specified patterns: \"**/*.spec.ts\" did not match any spec files.\" (#24644)"},{"Id":"1572297244","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:07","Actor":"alan-agius4","Number":"24665","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match","State":"closed","Body":"\r\n\r\nPreviously, we failed the compilation when the specified patterns did not match any spec file. This breaks the case were users configure Karma to not fail on empty test suit.\r\n\r\nCloses #24644\r\n","Url":"https://github.com/angular/angular-cli/pull/24665","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match\" (#24665)"},{"Id":"1572597744","IsPullRequest":true,"CreatedAt":"2023-02-07T01:00:51","Actor":"alan-agius4","Number":"24666","RawContent":null,"Title":"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic","State":"closed","Body":"\r\nThe bootstrapping wrapping is no longer necessary as of 15.1.3. See: https://github.com/angular/angular/pull/48868\r\n","Url":"https://github.com/angular/angular-cli/pull/24666","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic\" (#24666)"},{"Id":"1573398361","IsPullRequest":true,"CreatedAt":"2023-02-06T22:32:40","Actor":"clydin","Number":"24669","RawContent":null,"Title":"test(@angular-devkit/build-angular): port several unit tests to esbuild builder","State":"open","Body":"The following unit tests have been ported over to test the experimental esbuild-based\r\nbrowser application builder:\r\n\r\n* `assets` option\r\n* `outputHashing` option\r\n* browser support behavior (`browserslist`)\r\n\r\nSeveral small modifications were necessary to accommodate output file differences such\r\nas no runtime chunk. Additionally, two tests are temporarily disabled for the `outputHashing`\r\ntests pending implementation in the builder. These tests are the same stylesheet resource handling\r\nfile name test and no hashing of non-injected styles test.","Url":"https://github.com/angular/angular-cli/pull/24669","RelatedDescription":"Open PR \"test(@angular-devkit/build-angular): port several unit tests to esbuild builder\" (#24669)"},{"Id":"1573203230","IsPullRequest":false,"CreatedAt":"2023-02-06T20:09:05","Actor":"Andrew-Marks-Trisept","Number":"24668","RawContent":null,"Title":"extract-i18n: Broken parsing of interpolated values with es2020","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nAngular 13 / es2015\r\n\r\n### Description\r\n\r\nAfter upgrading our app to Angular 14, we noticed odd values in our .xlf files when running extract-i18n.  (We actually use the [ng-extract-i18-merge](https://github.com/daniel-sc/ng-extract-i18n-merge) package but it doesn't matter -- I was able to reproduce this with the standard `ng extract-i18n` command).\r\n\r\nIt seems like the change from `\"target\": \"es2015\"` to `\"target\": \"es2020\"` in `tsconfig.json` is causing some messages with interpolated values in them to be parsed incorrectly, resulting in broken/incorrect messages.  **If I change the value back to \"es2015\", everything works as it did before.**\r\n\r\nThere is something weird where having text inside the message with the interpolated value affects it in different ways depending on where that text is.  \r\n\r\n### Minimal Reproduction\r\n\r\nBelow you'll see cases 2 and 4 get broken in es2020:\r\n\r\n_Example HTML:_\r\n```\r\n<span i18n=\"@@something.test1\">Before {{ someVar }}</span>\r\n<span i18n=\"@@something.test2\">{{ someVar }} After</span>\r\n<span i18n=\"@@something.test3\">Before and {{ someVar }} After</span>\r\n<span i18n=\"@@something.test4\">{{ someVar }}</span>\r\n\r\n<p>Next element</p>\r\n```\r\n\r\n_**Working** .xlf output using es2015:_\r\n```\r\n<trans-unit id=\"something.test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n```\r\n\r\n_**Broken** .xlf output using es2020:_\r\n```\r\n<trans-unit id=\"something.test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"After&lt;/span&gt;\r\n&lt;\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"&lt;/span&gt;\r\n\r\n&lt;p&gt;Nex\"/></source>\r\n</trans-unit>\r\n```\r\n\r\nNote that test 2 and test 4 are broken.  Rather than having the correct variable, it pulls in an encoded version of the beginning of the next element after the one tagged for i18n.\r\n\r\nWhat's also strange is that is **just changing the length of the IDs** causes it to parse differently...\r\n\r\n_Example HTML 2 with shorter IDs:_\r\n```\r\n<span i18n=\"@@test1\">Before {{ someVar }}</span>\r\n<span i18n=\"@@test2\">{{ someVar }} After</span>\r\n<span i18n=\"@@test3\">Before and {{ someVar }} After</span>\r\n<span i18n=\"@@test4\">{{ someVar }}</span>\r\n\r\n<p>Next element</p>\r\n```\r\n\r\n_**Different broken** .xlf output using es2020:_\r\n```\r\n<trans-unit id=\"test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"Afte\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"&lt;/spa\"/></source>\r\n</trans-unit>\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 14.2.10\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1402.10\r\n@angular-devkit/build-angular     14.2.10\r\n@angular-devkit/core              13.3.7\r\n@angular-devkit/schematics        13.3.7\r\n@angular/cdk                      14.2.7\r\n@angular/cli                      14.2.10\r\n@angular/flex-layout              14.0.0-beta.41\r\n@angular/material                 14.2.7\r\n@angular/material-luxon-adapter   14.2.7\r\n@schematics/angular               13.3.7\r\nrxjs                              7.4.0\r\ntypescript                        4.6.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24668","RelatedDescription":"Open issue \"extract-i18n: Broken parsing of interpolated values with es2020\" (#24668)"},{"Id":"1572171585","IsPullRequest":false,"CreatedAt":"2023-02-06T09:14:45","Actor":"yohny","Number":"24664","RawContent":null,"Title":"Global styles linking in angular.json does not work is they come from library assets","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have an library project that includes some assets like icons and some global styles. Those are packaged in `assets` folder of library. Consuming application includes library assets by extending the `assets` section in its `angular.json`:\r\n```json\r\n\"assets\": [\r\n    \"projects/my-app/src/favicon.ico\",\r\n    \"projects/my-app/src/assets\",\r\n    {\r\n      \"input\": \"dist/my-lib/assets\", // with regular install this would go from node_modules instead of dist\r\n      \"glob\": \"**/*\",\r\n      \"output\": \"assets/my-lib\"\r\n    }\r\n  ],\r\n```\r\nwhen build, the library assets are copied into `assest/my-lib` folder of consuming application as expected.\r\nThe issue occurs when I want to use the library style from `assest/my-lib/styles.css`. If I add it to `styles` section of `angular.json` like this:\r\n```json\r\n\"styles\": [\r\n    \"projects/my-app/src/styles.css\",\r\n    \"projects/my-app/src/assets/my-lib/styles.css\" // added\r\n  ],\r\n```\r\nit ends with error:  `Error: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'`\r\nHowever when I add it in `index.html. like this `<link rel=\"stylesheet\" href=\"assets/my-lib/styles.css\">` it works as expected.\r\n\r\nIt looks like `styles` processing happens before `assets`copying, which results in the error. Expectation is that assets are copied before the styles/scripts linking because those can reference assets.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/yohny/assets-demo\n\n### Please provide the exception or error you saw\n\n```true\nError: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24664","RelatedDescription":"Closed issue \"Global styles linking in angular.json does not work is they come from library assets\" (#24664)"},{"Id":"1569859049","IsPullRequest":false,"CreatedAt":"2023-02-06T08:30:54","Actor":"Alessandroinfo","Number":"24657","RawContent":null,"Title":"Issue on building with production app-shell with different outputPath for ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\n**What happen:**\r\nWhen i try to run a build of app-shell production with  `ng run angular15-app-shell:app-shell:production\r\n ` i retrieve this error:\r\n\r\n```\r\n✖ Application shell generation failed.\r\nCould not find server output directory: /Users/user/WebstormProjects/angular15-app-shell/dist/angular15-app-shell/server.\r\n```\r\n\r\nThis happen when i change in `angular.json` the outputPath in `projects.angular15-app-shell.architect.build.outputPath`.\r\nFrom `\"outputPath\": \"dist/angular15-app-shell/browser\"` to `\"outputPath\": \"dist\"`\r\n\r\n\r\n**Step to reproduce:**\r\n1. `npx -p @angular/cli@15.1.4 ng new angular15-app-shell` (with routing and select whatever stylesheet)\r\n2. `cd angular15-app-shell`\r\n3. npx ng g app-shell\r\n4. Change outputPath for the build to `dist` (it will be `\"outputPath\": \"dist\"`)\r\n5. npx ng run angular15-app-shell:app-shell:production\r\n\r\n\r\nI tested on Angular 15.1.4 but it happen also on versione >14.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-huphbj\n\n### Please provide the exception or error you saw\n\n```true\nThe error happens only after changing  to ```dist```\r\n\r\n```\r\n✖ Application shell generation failed.\r\nCould not find server output directory: /Users/user/WebstormProjects/angular15-app-shell/dist/angular15-app-shell/server.\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\nI run it on node v14.21.2.","Url":"https://github.com/angular/angular-cli/issues/24657","RelatedDescription":"Closed issue \"Issue on building with production app-shell with different outputPath for \" (#24657)"},{"Id":"1572117577","IsPullRequest":true,"CreatedAt":"2023-02-06T08:15:38","Actor":"angular-robot","Number":"24663","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24663","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24663)"},{"Id":"1571105131","IsPullRequest":false,"CreatedAt":"2023-02-05T16:23:16","Actor":"patrickdk77","Number":"24661","RawContent":null,"Title":"angular upgrade to v14 deletes dist folder","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nng build --configuration=prodfast\r\n- Generating browser application bundles (phase: setup)...\r\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\r\n\r\nIn my build case, it's being built in docker like:\r\ndocker run --env-file .env.prod -v \"/export:/project/dist\"\r\n\r\nThis way, the build is done in a clean enviroment, and the output of dist is mapped the the host enviroment and gets pushed to prod systems\r\nBut now it is attempting to do a rmdir of dist, and since that is a mount point and not a folder, it fails and builds no longer happen.\r\n\n\n### Minimal Reproduction\n\nbuild angular while the dist is actually a mountpoint instead of a folder\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\n```\n\n\n### Your Environment\n\n```text\ndocker container inside bitbucket pipeline\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24661","RelatedDescription":"Closed issue \"angular upgrade to v14 deletes dist folder\" (#24661)"},{"Id":"1570788865","IsPullRequest":true,"CreatedAt":"2023-02-04T06:13:32","Actor":"angular-robot","Number":"24660","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.50.0/5.51.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.50.0/5.51.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild/0.17.5/0.17.6) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild/0.17.5/0.17.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.5/0.17.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.5/0.17.6) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`21.0.9` -> `21.0.10`](https://renovatebot.com/diffs/npm/quicktype-core/21.0.9/21.0.10) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.16.2` -> `5.16.3`](https://renovatebot.com/diffs/npm/terser/5.16.2/5.16.3) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.16.2` -> `5.16.3`](https://renovatebot.com/diffs/npm/terser/5.16.2/5.16.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[sort-type-constituents] fixed behavior change ([#&#8203;6384](https://togithub.com/typescript-eslint/typescript-eslint/issues/6384)) ([5bf7f7f](https://togithub.com/typescript-eslint/typescript-eslint/commit/5bf7f7fe48aee61a676dfbe829c2a5e9e44cd552)), closes [#&#8203;6339](https://togithub.com/typescript-eslint/typescript-eslint/issues/6339)\n-   **eslint-plugin:** do not use .at(), Node 14 does not support it ([#&#8203;6402](https://togithub.com/typescript-eslint/typescript-eslint/issues/6402)) ([077ed1b](https://togithub.com/typescript-eslint/typescript-eslint/commit/077ed1b5be844df35b7fba554ddae579b3144787))\n\n##### Features\n\n-   **eslint-plugin:** \\[naming-convention] improve performance by removing unnecessary selectors ([#&#8203;6376](https://togithub.com/typescript-eslint/typescript-eslint/issues/6376)) ([3647a1c](https://togithub.com/typescript-eslint/typescript-eslint/commit/3647a1c1bbcfe6551647632fc2d978fa90881de1))\n-   **eslint-plugin:** \\[no-floating-promises] error on logical expression ([#&#8203;6356](https://togithub.com/typescript-eslint/typescript-eslint/issues/6356)) ([f330e06](https://togithub.com/typescript-eslint/typescript-eslint/commit/f330e0651548d55163ddc3233c90fd3cbe37c9c0))\n-   **eslint-plugin:** \\[no-import-type-side-effects] add rule to warn against runtime side effects with `verbatimModuleSyntax` ([#&#8203;6394](https://togithub.com/typescript-eslint/typescript-eslint/issues/6394)) ([b14d3be](https://togithub.com/typescript-eslint/typescript-eslint/commit/b14d3be0f305d71e0adfc9381e9de993898b2b43))\n-   **eslint-plugin:** \\[strict-boolean-expressions] add allow nullable enum to strict boolean expressions ([#&#8203;6096](https://togithub.com/typescript-eslint/typescript-eslint/issues/6096)) ([d4747cd](https://togithub.com/typescript-eslint/typescript-eslint/commit/d4747cd8cc9dad2bf2cb64e1c0e8980ce34d82c7))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.6`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0176)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.5...v0.17.6)\n\n-   Fix a CSS parser crash on invalid CSS ([#&#8203;2892](https://togithub.com/evanw/esbuild/issues/2892))\n\n    Previously the following invalid CSS caused esbuild's parser to crash:\n\n    ```css\n    @&#8203;media screen\n    ```\n\n    The crash was caused by trying to construct a helpful error message assuming that there was an opening `{` token, which is not the case here. This release fixes the crash.\n\n-   Inline TypeScript enums that are referenced before their declaration\n\n    Previously esbuild inlined enums within a TypeScript file from top to bottom, which meant that references to TypeScript enum members were only inlined within the same file if they came after the enum declaration. With this release, esbuild will now inline enums even when they are referenced before they are declared:\n\n    ```ts\n    // Original input\n    export const foo = () => Foo.FOO\n    const enum Foo { FOO = 0 }\n\n    // Old output (with --tree-shaking=true)\n    export const foo = () => Foo.FOO;\n    var Foo = /* @&#8203;__PURE__ */ ((Foo2) => {\n      Foo2[Foo2[\"FOO\"] = 0] = \"FOO\";\n      return Foo2;\n    })(Foo || {});\n\n    // New output (with --tree-shaking=true)\n    export const foo = () => 0 /* FOO */;\n    ```\n\n    This makes esbuild's TypeScript output smaller and faster when processing code that does this. I noticed this issue when I ran the TypeScript compiler's source code through esbuild's bundler. Now that the TypeScript compiler is going to be bundled with esbuild in the upcoming TypeScript 5.0 release, improvements like this will also improve the TypeScript compiler itself!\n\n-   Fix esbuild installation on Arch Linux ([#&#8203;2785](https://togithub.com/evanw/esbuild/issues/2785), [#&#8203;2812](https://togithub.com/evanw/esbuild/issues/2812), [#&#8203;2865](https://togithub.com/evanw/esbuild/issues/2865))\n\n    Someone made an unofficial `esbuild` package for Linux that adds the `ESBUILD_BINARY_PATH=/usr/bin/esbuild` environment variable to the user's default environment. This breaks all npm installations of esbuild for users with this unofficial Linux package installed, which has affected many people. Most (all?) people who encounter this problem haven't even installed this unofficial package themselves; instead it was installed for them as a dependency of another Linux package. The problematic change to add the `ESBUILD_BINARY_PATH` environment variable was reverted in the latest version of this unofficial package. However, old versions of this unofficial package are still there and will be around forever. With this release, `ESBUILD_BINARY_PATH` is now ignored by esbuild's install script when it's set to the value `/usr/bin/esbuild`. This should unbreak using npm to install `esbuild` in these problematic Linux environments.\n\n    Note: The `ESBUILD_BINARY_PATH` variable is an undocumented way to override the location of esbuild's binary when esbuild's npm package is installed, which is necessary to substitute your own locally-built esbuild binary when debugging esbuild's npm package. It's only meant for very custom situations and should absolutely not be forced on others by default, especially without their knowledge. I may remove the code in esbuild's installer that reads `ESBUILD_BINARY_PATH` in the future to prevent these kinds of issues. It will unfortunately make debugging esbuild harder. If `ESBUILD_BINARY_PATH` is ever removed, it will be done in a \"breaking change\" release.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v21.0.10`](https://togithub.com/quicktype/quicktype/compare/1e6ed49e9cbec217a0e54383f4bf8ac7c441a0b5...12ea9f506abb3c953afecba5b3477211be2b1099)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/1e6ed49e9cbec217a0e54383f4bf8ac7c441a0b5...12ea9f506abb3c953afecba5b3477211be2b1099)\n\n</details>\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.16.3`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5163)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.16.2...v5.16.3)\n\n-   Ensure function definitions, don't assume the values of variables defined after them.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24660","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24660)"},{"Id":"1570302215","IsPullRequest":true,"CreatedAt":"2023-02-03T18:57:52","Actor":"clydin","Number":"24658","RawContent":null,"Title":"fix(@angular-devkit/build-angular): build optimizer support for spec-compliant downlevel class properties","State":"open","Body":"The build optimizer's static class field pass will now additionally wrap classes that contain side effect free class properties. This allows optimizers and bundlers further along in the build pipeline to downlevel that class properties while still retaining the ability to tree-shake the class if unused. The class properties may need to be downleveled for a variety of reasons such as lack of browser support, browser bugs with certain code structures, or to ensure spec-compliant runtime behavior.\r\n\r\nFixes: #24656","Url":"https://github.com/angular/angular-cli/pull/24658","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): build optimizer support for spec-compliant downlevel class properties\" (#24658)"},{"Id":"1568553750","IsPullRequest":false,"CreatedAt":"2023-02-03T14:29:15","Actor":"cheng93","Number":"24651","RawContent":null,"Title":"Jasmine's clock mocks can't be used in library specs v2","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI do not believe #14432 was fixed\n\n### Minimal Reproduction\n\n```shell\r\nnpm install -g @angular/cli\r\nng new ngtest1\r\n```\r\n\r\nadded to app.component.spec.ts\r\n```ts\r\nbeforeEach(() => {\r\n    jasmine.clock().install();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jasmine.clock().uninstall();\r\n  });\r\n```\n\n### Exception or Error\n\n```text\nChrome 109.0.0.0 (Windows 10) AppComponent should render title FAILED\r\n        Error: Jasmine Clock was unable to install over custom global timer functions. Is the clock already installed?\r\n            at <Jasmine>\r\n            at UserContext.apply (src/app/app.component.spec.ts:14:21)\r\n            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:375:26)\r\n            at ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:287:39)\r\n            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:374:52)\r\n            at Zone.run (node_modules/zone.js/fesm2015/zone.js:134:43)\r\n            at runInTestZone (node_modules/zone.js/fesm2015/zone-testing.js:582:34)\r\n            at UserContext.<anonymous> (node_modules/zone.js/fesm2015/zone-testing.js:597:20)\r\n            at <Jasmine>\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24651","RelatedDescription":"Closed issue \"Jasmine's clock mocks can't be used in library specs v2\" (#24651)"},{"Id":"1569442258","IsPullRequest":true,"CreatedAt":"2023-02-03T14:29:13","Actor":"alan-agius4","Number":"24655","RawContent":null,"Title":"fix(@angular-devkit/build-angular): load polyfills and runtime as scripts instead of modules","State":"closed","Body":"\r\nThis commit updates changes the way polyfills and runtime are loaded from modules to scripts. This is required as otherwise Jasmine will be loaded prior to Zone.js which causes clock patching not to work.\r\n\r\nCloses #24651\r\n","Url":"https://github.com/angular/angular-cli/pull/24655","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): load polyfills and runtime as scripts instead of modules\" (#24655)"},{"Id":"1569637575","IsPullRequest":false,"CreatedAt":"2023-02-03T10:44:59","Actor":"Coly010","Number":"24656","RawContent":null,"Title":"Angular CLI V15 + TS Target ES2022 - No longer tree shaking unused services correctly","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular v14\n\n### Description\n\nUnused Services are not being tree-shaken correctly from the bundle output with\r\n\r\n`\"target\": \"es2022\"` set in the `tsconfig.json` and Angular v15 installed.\r\n\r\nThis target is set by the Angular v15 migrations!\n\n### Minimal Reproduction\n\nI've created a repository.\r\n\r\n1. Clone https://github.com/Coly010/ng-tree-shaking\r\n\r\n## The Problem\r\n\r\nWith Angular V15, when`\"target\": \"es2022` is set in `tsconfig.json`, `UnusedService` a service that is not used in the application, is not tree shaken from the bundle.\r\n\r\nThis can be reproduced by doing the following\"\r\n\r\n1. Checkout `angular-v15-es2022`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\r\n### This is a regression\r\n\r\nTo prove this is a regression, you can do the following:\r\n\r\n1. Checkout `angular-v14-es2022`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll not see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\r\n### Futhermore\r\n\r\nIf you set the `\"target\": \"es2020` in `tsconfig.json` with Angular v15, the service is tree shaken correctly.\r\n\r\n1. Checkout `angular-v15-es2020`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll not see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\n\n### Exception or Error\n\n```text\nUnused Service is being included in the bundle when it should be tree-shaken.\n```\n\n\n### Your Environment\n\n```text\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\r\n\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24656","RelatedDescription":"Open issue \"Angular CLI V15 + TS Target ES2022 - No longer tree shaking unused services correctly\" (#24656)"},{"Id":"1569284050","IsPullRequest":true,"CreatedAt":"2023-02-03T10:41:55","Actor":"angular-robot","Number":"24653","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `79142be` -> `26bde56` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `7985b5a` -> `00ebcda` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.2/15.1.3) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b6d4855` -> `e630e31` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `dc2b4e6` -> `b5d6896` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.2/15.1.3) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5ece11d` -> `25e69a6` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.2/15.1.3) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a6eb17c` -> `b3392c5` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `0414e59` -> `9dadc81` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `0484953` -> `d8a32d9` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6499b7a` -> `65e922c` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `fa5b79f` -> `27e09d5` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.2/15.1.3) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `f96bf92` -> `c7d5d57` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `65ffa80` -> `17097d0` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `bf271f1` -> `422cfaf` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `c0ebda2` -> `81b3f8a` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `70d4dc7` -> `fb0e9fe` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `aac02cd` -> `0982a5e` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.2.0-next.2/15.2.0-next.3) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.2.0-next.3`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1520-next3-2023-02-02)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.2.0-next.2...15.2.0-next.3)\n\n##### animations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b4187548ca](https://togithub.com/angular/angular/commit/b4187548cae42f25624bf7ab7ad0cca121242de7) | fix | fix non-animatable warnings for easing ([#&#8203;48583](https://togithub.com/angular/angular/pull/48583)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a055196c55](https://togithub.com/angular/angular/commit/a055196c55c57de281ff7167cd4dfb3df783c337) | fix | warn if using ngSrcset without a configured image loader ([#&#8203;48804](https://togithub.com/angular/angular/pull/48804)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [06e161f2dd](https://togithub.com/angular/angular/commit/06e161f2dd78b42ad1938578f4d730a41404a24f) | fix | incorrect code when non-null assertion is used after a safe access ([#&#8203;48801](https://togithub.com/angular/angular/pull/48801)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [345e737daa](https://togithub.com/angular/angular/commit/345e737daa7b9f635a4c2923358e5e765f716434) | feat | add ng generate schematic to convert to standalone bootstrapping APIs ([#&#8203;48848](https://togithub.com/angular/angular/pull/48848)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2796230e95](https://togithub.com/angular/angular/commit/2796230e953eb8c29d6227a1a3858f5f08a8f200) | fix | add `enum` in `mode` option in `standalone` schema ([#&#8203;48851](https://togithub.com/angular/angular/pull/48851)) |\n| [a40cd47aa7](https://togithub.com/angular/angular/commit/a40cd47aa7ebccfbeeb26e397e03f1372aa10a55) | fix | avoid modifying testing modules without declarations ([#&#8203;48921](https://togithub.com/angular/angular/pull/48921)) |\n| [8389557848](https://togithub.com/angular/angular/commit/83895578488bd35c7e47609f092907eb0f53f435) | fix | don't copy unmigrated declarations into imports array ([#&#8203;48882](https://togithub.com/angular/angular/pull/48882)) |\n| [f82bdc4b01](https://togithub.com/angular/angular/commit/f82bdc4b01f93a7103870449d37da61cc4c4f179) | fix | don't delete classes that may provide dependencies transitively ([#&#8203;48866](https://togithub.com/angular/angular/pull/48866)) |\n| [04e0ac3d7c](https://togithub.com/angular/angular/commit/04e0ac3d7ca89bf38d4d2a38b7ca120d9b7b96ae) | fix | migration host incorrectly reading empty files ([#&#8203;48849](https://togithub.com/angular/angular/pull/48849)) |\n| [65c74ed93e](https://togithub.com/angular/angular/commit/65c74ed93e04cb560c27838d440c6aa7a9859a4e) | fix | normalize paths to posix ([#&#8203;48850](https://togithub.com/angular/angular/pull/48850)) |\n| [584976e6c8](https://togithub.com/angular/angular/commit/584976e6c8a783d40578ab191132673300394a52) | fix | support --defaults in standalone migration ([#&#8203;48921](https://togithub.com/angular/angular/pull/48921)) |\n| [03f47ac901](https://togithub.com/angular/angular/commit/03f47ac9019eddbcb373b50c41bc6f523293ece1) | fix | use consistent quotes in generated imports ([#&#8203;48876](https://togithub.com/angular/angular/pull/48876)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2fc5b70fce](https://togithub.com/angular/angular/commit/2fc5b70fcedb8ac35b825b245c0ae394dc125244) | fix | insert transfer state `script` before other `script` tags ([#&#8203;48868](https://togithub.com/angular/angular/pull/48868)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dedac8d3f7](https://togithub.com/angular/angular/commit/dedac8d3f73ebf4f05b773454e2a22ab5fa4bf7c) | feat | Add test helper for trigger navigations in tests ([#&#8203;48552](https://togithub.com/angular/angular/pull/48552)) |\n| [16ef770db8](https://togithub.com/angular/angular/commit/16ef770db803ce4037a90c72477da412642dfb33) | fix | Handle routerLink directive on svg anchors. ([#&#8203;48857](https://togithub.com/angular/angular/pull/48857)) |\n\n#### Special Thanks\n\nAlan Agius, Andrew Scott, Besim Gürbüz, Brecht Billiet, Dario Piotrowicz, Dylan Hunn, Iván Navarro, Kristiyan Kostadinov, Matthieu Riegler, Onkar Ruikar, Payam Valadkhan, Santosh Yadav, Virginia Dooley and Walid Bouguima\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.3`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1513-obsidian-organism-2023-02-02)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.2...15.1.3)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d9124166a1](https://togithub.com/angular/components/commit/d9124166a1203e43f1d9093db82365cbaf9b70bc) | fix | **collections:** SelectionModel does not always respect the compareWith function ([#&#8203;26447](https://togithub.com/angular/components/pull/26447)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [621d1755df](https://togithub.com/angular/components/commit/621d1755dfb18be44732334d784fa0d65197dca1) | fix | **checkbox:** focus not moved to input when clicking on touch target ([#&#8203;26545](https://togithub.com/angular/components/pull/26545)) |\n| [f1d83f19c9](https://togithub.com/angular/components/commit/f1d83f19c96152fc1cef63a869a7d0c3334be946) | fix | **dialog:** take dialog background from theme palette ([#&#8203;26324](https://togithub.com/angular/components/pull/26324)) |\n| [719cff0c4d](https://togithub.com/angular/components/commit/719cff0c4d4b4ece24919a9e55fefe2f1483de8a) | fix | **tabs:** set color on disabled tabs ([#&#8203;26319](https://togithub.com/angular/components/pull/26319)) |\n| [9efb60f6b4](https://togithub.com/angular/components/commit/9efb60f6b47912897a1e61e21cb64926afeed2d6) | fix | **tabs:** unable to click projected content in tab label ([#&#8203;26527](https://togithub.com/angular/components/pull/26527)) |\n\n##### google-maps\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e48a5af71f](https://togithub.com/angular/components/commit/e48a5af71fdf9057b058c91338f08bb9d9ec3cf2) | fix | error if API is initialized incorrectly ([#&#8203;26520](https://togithub.com/angular/components/pull/26520)) |\n\n#### Special Thanks\n\nAlan Agius, Aurélien Loyer, Kristiyan Kostadinov, MECHERI Akram, Paul Gschwendtner, Pei Wang and Wagner Maciel\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24653","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24653)"},{"Id":"1568754457","IsPullRequest":false,"CreatedAt":"2023-02-03T08:44:05","Actor":"bryanrideshark","Number":"24652","RawContent":null,"Title":"code in isDevMode() block is not removed from production builds.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe following code block and its assorted import statements should be elided during a production build.\r\n\r\n````ts\r\nimport { isDevMode, Injectable } from '@angular/core';\r\nimport { DevCommandService } from '@project/dev-command';\r\n\r\n@Injectable()\r\nexport class CoolService {\r\n\r\n  constructor() {\r\n    if (isDevMode()) {\r\n      import(DevCommandService).addHelperFunctionToConsoleForDevelopersOnly('someSampleCommand', () => {\r\n        console.log('do a backflip');\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n````\r\n\r\nI expect the output to be as follows:\r\n````\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CoolService {\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\n````\r\n\r\nHowever, it is unchanged.\r\n\r\nWhat is the correct way to ensure that during `ng build --prod`, `import {DevCommandService} from '@project/dev-command'; ` and the entire block which uses it are dropped from the output?\r\n\r\nCan we somehow replace `isDevMode()` with `false` during production builds, and have dead code elimination / tree shaking properly apply to the application?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.2\r\nNode: 14.19.0\r\nPackage Manager: yarn <error>\r\nOS: win32 x64\r\n\r\nAngular: 14.2.1\r\n... animations, cdk, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, material\r\n... platform-browser, platform-browser-dynamic, router, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.2\r\n@angular-devkit/build-angular   14.2.2\r\n@angular-devkit/build-webpack   0.1401.3\r\n@angular-devkit/core            14.2.2\r\n@angular-devkit/schematics      14.2.2\r\n@angular/cli                    14.2.2\r\n@angular/flex-layout            14.0.0-beta.40\r\n@schematics/angular             14.2.2\r\n@schematics/schematics          0.1102.12\r\n@schematics/update              0.1102.18\r\nng-packagr                      14.2.2\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\nMaybe `isDevMode()` is not the correct way to handle this. How should we handle tree shakable development only code, in a project that has multiple apps and libraries?","Url":"https://github.com/angular/angular-cli/issues/24652","RelatedDescription":"Closed issue \"code in isDevMode() block is not removed from production builds.\" (#24652)"},{"Id":"1569350051","IsPullRequest":false,"CreatedAt":"2023-02-03T07:21:58","Actor":"JanST123","Number":"24654","RawContent":null,"Title":"Esbuild builder - support TypeScript path mappings","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAs the experimental esbuild does not yet support features like [respecting the `paths` from tsconfig.json](https://github.com/evanw/esbuild/issues/394) that lack of features can be workarounded by custom esbuild plugins ([esbuild-ts-paths](https://www.npmjs.com/package/esbuild-ts-paths) in the case of the missing `paths` transforming).\r\n\r\nBut plugins can't be passed to the `esbuild.build` function yet.\r\n\r\n### Describe the solution you'd like\r\nPass another option `plugins` to `esbuild.build` like it was done for the `external` option in #23322\r\n\r\n### Minimal Reproduction\r\n\r\n* Have paths defined in tsconfig.json\r\n```json\r\n  \"compilerOptions\": {\r\n    \"paths\": {\r\n      \"@shared/*\": [\r\n        \"src/app/@shared/*\"\r\n      ]\r\n    }\r\n  }\r\n```\r\n\r\n* Notice that the compiler can't find the modules imported from that paths\r\n```javascript\r\nimport { MySharedModuled } from '@shared/shared.module';\r\n```\r\n\r\n* Find a plugin that can fix it: https://www.npmjs.com/package/esbuild-ts-paths\r\n* Search a way to pass this plugin to esbuild\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.1.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin x64\r\n\r\nAngular: 15.1.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24654","RelatedDescription":"Open issue \"Esbuild builder - support TypeScript path mappings\" (#24654)"},{"Id":"1568392887","IsPullRequest":false,"CreatedAt":"2023-02-02T16:48:37","Actor":"pashvin","Number":"24650","RawContent":null,"Title":"Bundle size is not enforced if name is not provided","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI am not sure if this is a bug but there is no way to put a limit one limit on all bundle sizes. I assume providing no name should check all bundles but it does not.\r\n\r\nso the following does not work\r\n```\r\n{\r\n  \"type\": \"bundle\",\r\n  \"maximumWarning\": \"150kb\",\r\n  \"maximumError\": \"300kb\"\r\n}\r\n```\r\n\r\nMy goal is to provide a higher threshold for vendors or an initial bundle but all others with lower so I am trying following but not working.\r\n\r\n```\r\n\"budgets\": [\r\n    {\r\n      \"type\": \"bundle\",\r\n      \"name\": \"vendor\",\r\n      \"maximumWarning\": \"340kb\",\r\n      \"maximumError\": \"550kb\"\r\n    },\r\n    {\r\n      \"type\": \"bundle\", // All other remaining bundles\r\n      \"maximumWarning\": \"150kb\",\r\n      \"maximumError\": \"300kb\"\r\n    }\r\n  ],\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nTry any sample Angular project and try to see the current bundle size and set the same limit of the current vendor bundle for vendor bundle but set diff very low limit for the bundle with no name. It should give a warning for any remaining bundle when you run \"npm run build\" command.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@schematics/angular             15.0.4\r\nrxjs                            7.5.4\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24650","RelatedDescription":"Open issue \"Bundle size is not enforced if name is not provided\" (#24650)"},{"Id":"1567632419","IsPullRequest":true,"CreatedAt":"2023-02-02T14:08:34","Actor":"angular-robot","Number":"24648","RawContent":null,"Title":"build: update dependency aspect_bazel_lib to v1.24.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | patch | `v1.24.0` -> `v1.24.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.24.2`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.24.2)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.24.1...v1.24.2)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.24.2\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"ef83252dea2ed8254c27e65124b756fc9476be2b73a7799b7a2a0935937fc573\",\n    strip_prefix = \"bazel-lib-1.24.2\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.24.2/bazel-lib-v1.24.2.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: update copy_directory and copy_to_directory to use binaries with copy concurrency limited by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/352](https://togithub.com/aspect-build/bazel-lib/pull/352)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.24.1...v1.24.2\n\n### [`v1.24.1`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.24.1)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.24.0...v1.24.1)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.24.1\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"5829c55a2400cdfbbdeeaf562bce947361d31c7cab13d56f12c34d781b6c0344\",\n    strip_prefix = \"bazel-lib-1.24.1\",\n    url = \"https://github.com/aspect-build/bazel-lib/releases/download/v1.24.1/bazel-lib-v1.24.1.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   fix: limit copy concurrency by [@&#8203;f0rmiga](https://togithub.com/f0rmiga) in [https://github.com/aspect-build/bazel-lib/pull/351](https://togithub.com/aspect-build/bazel-lib/pull/351)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.24.0...v1.24.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24648","RelatedDescription":"Closed or merged PR \"build: update dependency aspect_bazel_lib to v1.24.2\" (#24648)"},{"Id":"1567965932","IsPullRequest":true,"CreatedAt":"2023-02-02T14:04:01","Actor":"alan-agius4","Number":"24649","RawContent":null,"Title":"fix(@angular/cli): only set `DebugView` when `NG_DEBUG` is passed","State":"closed","Body":"`querystring.stringify` will not remove undefined values.\r\n","Url":"https://github.com/angular/angular-cli/pull/24649","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): only set `DebugView` when `NG_DEBUG` is passed\" (#24649)"},{"Id":"1566723506","IsPullRequest":false,"CreatedAt":"2023-02-02T08:23:02","Actor":"ricardochl","Number":"24639","RawContent":null,"Title":"After updating to Angular v15 my build broken - issue related to the support of Safari TP versions","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nAfter updating to Angular v15, my build broke this issue related to the support of Safari TP versions, and It was accidentally introduced in angular/angular-cli@a0f9db8.\r\n\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nAdd `unreleased versions` to the `.browserslistrc` file and `npm run build`\r\n\r\n### Exception or Error\r\n\r\n```text\r\nAn unhandled exception occurred: Transform failed with 1 error:\r\nerror: Invalid version: \"tp.0\"\r\nSee \"/private/var/folders/_1/g7z1fzm54sb_wrdyk00s32580000gn/T/ng-SQbgG6/angular-errors.log\" for further details\r\n```\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.3\r\nNode: 16.17.0\r\nPackage Manager: npm 8.15.0\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1501.3 (cli-only)\r\n@angular-devkit/core         15.1.3 (cli-only)\r\n@angular-devkit/schematics   15.1.3 (cli-only)\r\n@schematics/angular          15.1.3 (cli-only)\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI sent PR #24640 to fix it.","Url":"https://github.com/angular/angular-cli/issues/24639","RelatedDescription":"Closed issue \"After updating to Angular v15 my build broken - issue related to the support of Safari TP versions\" (#24639)"},{"Id":"1566731581","IsPullRequest":true,"CreatedAt":"2023-02-02T08:23:01","Actor":"ricardochl","Number":"24640","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fix support of Safari TP versions","State":"closed","Body":"Fix issue-related to the support of Safari TP versions. This issue was accidentally introduced in angular/angular-cli@a0f9db8\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #24639 \r\n\r\n## What is the new behavior?\r\n\r\nYou are getting an error when you try to build the project.\r\n\r\n```\r\nAn unhandled exception occurred: Transform failed with 1 error:\r\nerror: Invalid version: \"tp.0\"\r\nSee \"/private/var/folders/_1/g7z1fzm54sb_wrdyk00s32580000gn/T/ng-SQbgG6/angular-errors.log\" for further details\r\n```\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\nThe project was built successfully.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information","Url":"https://github.com/angular/angular-cli/pull/24640","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fix support of Safari TP versions\" (#24640)"},{"Id":"1567488444","IsPullRequest":false,"CreatedAt":"2023-02-02T08:18:43","Actor":"HCenggel","Number":"24646","RawContent":null,"Title":"ng new project 【The environments folder is missing】","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCreate a new project missing the environments folder\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.5\r\nNode: 16.13.1\r\nPackage Manager: npm 6.14.8\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1500.5 (cli-only)\r\n@angular-devkit/core         15.0.5 (cli-only)\r\n@angular-devkit/schematics   15.0.5 (cli-only)\r\n@schematics/angular          15.0.5 (cli-only)\n```\n\n\n### Anything else?\n\nno","Url":"https://github.com/angular/angular-cli/issues/24646","RelatedDescription":"Closed issue \"ng new project 【The environments folder is missing】\" (#24646)"},{"Id":"1567519600","IsPullRequest":false,"CreatedAt":"2023-02-02T07:57:42","Actor":"thaoula","Number":"24647","RawContent":null,"Title":"Angular CLI v15.1.4 is causing error 137 on AzureDev CI/CD Pipeline","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv15.1.3\n\n### Description\n\nThe appears to be some memory regression that is causing v15.1.4 to fail during CI/CD builds with npm error 137 which is an out of memory exception.\r\n\r\nWe are already using --max_old_space_size=8096 to avoid this error but it now seems something in 15.1.4 is using more memory than 15.1.3.\r\n\r\n\n\n### Minimal Reproduction\n\nI cannot share our repository but we a simply using the following command: \r\n`ng build --configuration production`\r\n\r\nChanging package json as below results in Error 137 on build pipeline. \r\n` \"@angular/cli\": \"15.1.3\" ->     \"@angular/cli\": \"15.1.4\"`\r\n\r\nReverting back results in a succesful build.\r\n\n\n### Exception or Error\n\n```text\n- Generating browser application bundles (phase: setup)...\r\nKilled\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 137\r\nnpm ERR! jms@1.0.0 build.dist: `ng build $npm_package_config_app --configuration production`\r\nnpm ERR! Exit status 137\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.3\r\nNode: 16.18.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.1\r\n@angular-devkit/build-angular   15.1.1\r\n@angular-devkit/core            15.1.1\r\n@angular-devkit/schematics      15.1.1\r\n@angular/cdk                    15.0.0\r\n@angular/cli                    15.1.1\r\n@schematics/angular             15.1.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24647","RelatedDescription":"Open issue \"Angular CLI v15.1.4 is causing error 137 on AzureDev CI/CD Pipeline\" (#24647)"},{"Id":"1567488020","IsPullRequest":false,"CreatedAt":"2023-02-02T07:16:26","Actor":"Eugeno","Number":"24645","RawContent":null,"Title":"Importing provider by short path makes lazy-route eager","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThis lazy route:\r\n```typescript\r\nimport { SomeService } from './some-path/some.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'some-path',\r\n    loadComponent: () => import('./some-path/some.component').then((m) => m.SomeComponent),\r\n    providers: [SomeService],\r\n  },\r\n];\r\n```\r\nbecomes eager when I create `index.ts` and export service:\r\n```typescript\r\nimport { SomeService } from './some-path';\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.4\r\nNode: 16.17.0\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cdk                    14.2.7\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24645","RelatedDescription":"Open issue \"Importing provider by short path makes lazy-route eager\" (#24645)"},{"Id":"1566801699","IsPullRequest":true,"CreatedAt":"2023-02-02T00:21:36","Actor":"dgp1130","Number":"24642","RawContent":null,"Title":"Bump version to \"v15.2.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24642","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.3\" with changelog.\" (#24642)"},{"Id":"1566831401","IsPullRequest":true,"CreatedAt":"2023-02-01T21:07:26","Actor":"clydin","Number":"24643","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add Less stylesheet support to experimental esbuild-based builder","State":"open","Body":"When using the experimental esbuild-based browser application builder, stylesheets written in the Less stylesheet language can now be used throughout an application. The support allows Less stylesheets to be used in all locations where CSS and/or Sass can be used. This includes global stylesheets and both inline and external component styles. When using inline component styles, the `inlineLanguageStyle` build option must be set to `less`.\r\nCurrently, import resolution within a Less stylesheet is limited to default Less behavior which does not include full node package resolution. Full resolution behavior will be added in a future change.","Url":"https://github.com/angular/angular-cli/pull/24643","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): add Less stylesheet support to experimental esbuild-based builder\" (#24643)"},{"Id":"1566747087","IsPullRequest":true,"CreatedAt":"2023-02-01T20:17:34","Actor":"dgp1130","Number":"24641","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24641","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#24641)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1573369130","IsPullRequest":false,"CreatedAt":"2023-02-06T22:09:45","Actor":"eLarocque","Number":"26579","RawContent":null,"Title":"bug(form-field): mat-label disappears when density < -1","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nThere seems to be an issue where the mat-labels disappear when the density of form-field is set to lower than -1. I don't think this is as designed...\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Set the density option to anything lower than -1, ex: `@include mat.form-field-density(-2);`\r\n2. Include a mat-form-field with the appearance set to \"fill\", with a mat-label\r\n\r\nnotice the labels do not appear. (Their css is set as \"display:none;\")\r\n\r\nDemo: https://stackblitz.com/edit/angular-wvlwej\r\nIn the stackblitz, you can see that the labels appear fine when density is set at >= -1, but anything lower and the label is hidden.\r\n\r\n![image](https://user-images.githubusercontent.com/8459019/217098883-527e1c7c-71a2-4cb2-8c3e-2dc2c6a1b964.png)\r\n\n\n### Expected Behavior\n\nThe labels should be visible\n\n### Actual Behavior\n\nThe labels are not visible\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s):  Chrome Version 109.0.5414.120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26579","RelatedDescription":"Open issue \"bug(form-field): mat-label disappears when density < -1\" (#26579)"},{"Id":"1573060021","IsPullRequest":false,"CreatedAt":"2023-02-06T18:19:07","Actor":"myrddraall","Number":"26578","RawContent":null,"Title":"bug(Style): Enabling `preserveSymlinks` breaks stylesheet","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13\r\n\r\n### Description\r\n\r\nwhen enabling `preserveSymlinks` in angular.json custom stylesheets no longer compile because they cannot find `@material/button/button`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Run `ng new MyProject`\r\n2. Select the default options\r\n3. Run `cd MyProject`\r\n4. `ng add @angular/material`\r\n5. Select the default options, except for the theme, select Custom\r\n6. Set  `preserveSymlinks` to true in angular.json\r\n7.  Run `ng build`\r\n\r\n\r\n### Expected Behavior\r\n\r\nFor the project to build without error\r\n\r\n### Actual Behavior\r\n\r\nThe build fails with the following message:\r\n```\r\n./src/styles.scss - Error: Module build failed (from ./node_modules/.pnpm/sass-loader@13.2.0_sass@1.57.1+webpack@5.75.0/node_modules/sass-loader/dist/cjs.js):\r\nSassError: Can't find stylesheet to import.\r\n  ╷\r\n2 │ @use '@material/button/button' as mdc-button;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  node_modules/@angular/material/button/_button-theme.scss 2:1               @use\r\n  node_modules/@angular/material/core/density/private/_all-density.scss 2:1  @forward\r\n  @angular/_index.scss 18:1                                                  @use\r\n  src/styles.scss 1:1                                                        root stylesheet\r\n\r\n```\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.1.4\r\nNode: 18.13.0\r\nPackage Manager: pnpm 7.26.2\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-date-fns-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4 (cli-only)\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4 (cli-only)\r\n@angular-devkit/schematics      15.1.4 (cli-only)\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4 (cli-only)\r\nrxjs                            7.5.6\r\ntypescript                      4.9.5","Url":"https://github.com/angular/components/issues/26578","RelatedDescription":"Open issue \"bug(Style): Enabling `preserveSymlinks` breaks stylesheet\" (#26578)"},{"Id":"1572775558","IsPullRequest":false,"CreatedAt":"2023-02-06T15:23:35","Actor":"alvaromartmart","Number":"26577","RawContent":null,"Title":"help(ComponentHarness): TestElement.sendKeys() on disabled inputs","State":"open","Body":"### What are you trying to do?\n\nI expect `TestElement.sendKeys` to respect the disabled status of input elements, however they don't seem to. The input is properly disabled on the application, the harness properly detects its disabled status... but `sendKeys` seems to bypass it.\r\n\r\nMaybe I misunderstood something, any help would be appreciated.\n\n### What troubleshooting steps have you tried?\n\nI tried running extra change detection cycles, etc. to no avail.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. In the Stackblitz demo below, the test `CustomInputHarness > should not fill disabled input` should pass\r\n\r\nhttps://stackblitz.com/edit/node-g4jhab?file=harness-sendkeys-demo/src/app/custom-input-component/custom-input-component.harness.ts\n\n### Environment\n\n- Angular: 14.2, 15.1\r\n- CDK/Material: 14.2, 15.1\r\n- Browser(s): Chrome, though doesn't seem relevant\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, though doesn't seem relevant\r\n","Url":"https://github.com/angular/components/issues/26577","RelatedDescription":"Open issue \"help(ComponentHarness): TestElement.sendKeys() on disabled inputs\" (#26577)"},{"Id":"1572457332","IsPullRequest":false,"CreatedAt":"2023-02-06T12:11:21","Actor":"plusnia-pgs","Number":"26576","RawContent":null,"Title":"bug(VIRTUAL_SCROLL): Virtual scroll problem","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nI have weird issue with Angular CDK Virtual Scroll. I have implemented a virtual scroll and during scrolling this below error occurs in random time:\r\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\r\n\r\nIn general the error occurs when eg. I go to the other tab in the browser and then I go back to the app\r\n\r\nLibs versions:\r\n`\"@angular/cdk\": \"15.1.3\"`\r\n`\"@angular/material\": \"15.1.3\"`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Init Virtual Scroll\r\n2. Go to the other tab or just minimize the browser\r\n3. Go back to the app\r\n4. Scroll\r\n\n\n### Expected Behavior\n\nNo errors like in Angular CDK examples \n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Chrome 109.0.5414.119\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26576","RelatedDescription":"Open issue \"bug(VIRTUAL_SCROLL): Virtual scroll problem\" (#26576)"},{"Id":"1572394420","IsPullRequest":false,"CreatedAt":"2023-02-06T11:24:58","Actor":"leomayer","Number":"26575","RawContent":null,"Title":"bug(Button): letter-spacing not consistent in  different buttons","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThe new `mat-button` use a `letter-spacing` which is calculated as `1.25px` with the default settings. To be more precise:\r\n\r\n```\r\nvar(--mdc-typography-button-letter-spacing, .0892857143em)\r\n```\r\n\r\nwhereas  the variable `--mdc-typography-button-letter-spacing` is undefined. \r\n\r\nFor the toggle-button the letter-spacing is used from the `user agent stylesheet` which is set to `normal`. \n\n### Reproduction\n\nSteps to reproduce:\r\n1. Inspect the HTML-code of https://material.angular.io/components/button-toggle/overview\r\n2. https://material.angular.io/components/button/overview\r\n\n\n### Expected Behavior\n\nAt least that the letter-spacing is consistent over the components.\r\n\r\nAdditionally I would have expected the same spacing for similar types. \r\n\r\nAccording to the Material 3 specs there is no additional `letter-spacing` set: https://m3.material.io/components/buttons/specs\n\n### Actual Behavior\n\nWidth is set `1.25px`\n\n### Environment\n\nAngular CLI: 15.1.3\r\nNode: 19.5.0 (Unsupported)\r\nPackage Manager: npm 9.3.1\r\nOS: linux x64\r\n\r\nAngular: 15.1.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.3\r\n@angular-devkit/build-angular   15.1.3\r\n@angular-devkit/core            15.1.3\r\n@angular-devkit/schematics      15.1.3\r\n@angular/cli                    15.1.3\r\n@schematics/angular             15.1.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n","Url":"https://github.com/angular/components/issues/26575","RelatedDescription":"Open issue \"bug(Button): letter-spacing not consistent in  different buttons\" (#26575)"},{"Id":"1572175284","IsPullRequest":false,"CreatedAt":"2023-02-06T09:01:06","Actor":"Zacherl","Number":"26574","RawContent":null,"Title":"bug(ActionList): List items react to clicks even though they are disabled","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIf a mat-action-list is used with a disabled action, the list item is greyed out, but one can still interact with it, e. g. click on it.\n\n### Reproduction\n\nStackBlitz\r\nhttps://stackblitz.com/edit/angular-y6ecj5-wsih76?file=src/app/list-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. Click on the disabled list item\r\n2. See the action\n\n### Expected Behavior\n\nThe list item should not react to clicks (no ripple, no action).\n\n### Actual Behavior\n\nA ripple is shown on the list item and the click action is triggered and executed.\n\n### Environment\n\n- Angular: 15.1.1\r\n- CDK/Material: 15.1.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26574","RelatedDescription":"Open issue \"bug(ActionList): List items react to clicks even though they are disabled\" (#26574)"},{"Id":"1570206362","IsPullRequest":false,"CreatedAt":"2023-02-06T06:07:03","Actor":"mattMcMt","Number":"26567","RawContent":null,"Title":"bug(Stepper): Stepper does not respect theme font family","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.5\n\n### Description\n\nThe typography used by the material stepper is the default Roboto font-family regardless of the defined typography theme configuration.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a custom typography configuration in accordance with https://material.angular.io/guide/typography that uses a different font-family\r\n2. Link to new font from index.html\r\n3. Create a component that includes a material stepper\r\n4. The step label will still be Roboto; other text on the page under the stepper will also be the default font-family\r\n\r\nhttps://stackblitz.com/edit/components-issue-smzgm2\n\n### Expected Behavior\n\nThe stepper label and other text under the stepper should respect the theme's typography configuration for font-family.\n\n### Actual Behavior\n\nThe font-family used for the stepper label and other text under the stepper is the default Roboto even when a custom typography theme specifies a different font-family.\r\n\r\nThe theme specifies Open Sans as the font-family.  The easiest way to tell the difference is the shape of the 'g'.\r\n![image](https://user-images.githubusercontent.com/124381122/216665366-97a681ec-a888-4a34-a69f-d58edc4f05ee.png)\r\n\r\nI believe this is do to the stepper theme (_stepper-theme.scss) still using the 2014 typography definitions:\r\n```\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2014-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  .mat-stepper-vertical, .mat-stepper-horizontal {\r\n    font-family: typography-utils.font-family($config);\r\n  }\r\n\r\n```\r\nOther components are using the 2018 config (ex from _card-theme.scss):\r\n```\r\n@mixin typography($config-or-theme) {\r\n  $config: typography.private-typography-to-2018-config(\r\n      theming.get-typography-config($config-or-theme));\r\n  @include mdc-helpers.using-mdc-typography($config) {\r\n    // Card subtitles and titles are an Angular Material construct (not MDC), so we explicitly\r\n    // set their typographic styles here.\r\n    .mat-mdc-card-title {\r\n      @include mdc-typography.typography(headline6);\r\n    }\r\n\r\n    .mat-mdc-card-subtitle {\r\n      @include mdc-typography.typography(subtitle2);\r\n    }\r\n  }\r\n} \r\n```\r\n\r\n\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26567","RelatedDescription":"Closed issue \"bug(Stepper): Stepper does not respect theme font family\" (#26567)"},{"Id":"1571753330","IsPullRequest":false,"CreatedAt":"2023-02-06T01:54:54","Actor":"fireflysemantics","Number":"26573","RawContent":null,"Title":"docs-bug(COMPONENT): Theming","State":"open","Body":"### Documentation Feedback\r\n\r\nI asked about this on Stackoverflow.  The question is about how to avoid duplicating styles in Angular 15.\r\n\r\n[This is the question](https://stackoverflow.com/questions/75276638/generating-an-angular-theme-for-angular-15).\r\n\r\nThe answer is to only call ` @include mat.all-component-themes($theme);` in the main theme, and then use `@include mat.all-component-colors($theme);` in subsequent themes like this.\r\n\r\nHowever it seems to me that this will then leave out generated CSS code for the scope of that theme.\r\n\r\n```\r\n.dark-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-theme($theme);\r\n    @include mat.all-component-themes($theme);\r\n}\r\n//and this being your secondary theme\r\n.light-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-color($theme);  <---- This is the magic\r\n    @include mat.all-component-colors($theme); <---- This is the magic\r\n}\r\n```\r\n\r\nIIUC with the above type of theme generation the rules generated for the light and dark themes would be mutually exclusive, and so the light theme would only have the color specific CSS declarations, but would be missing CSS declarations generated for the dark theme with `mat.all-component-themes($theme);`.\r\n\r\nSome clarification on this in the documentation would be terrific.\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/26573","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Theming\" (#26573)"},{"Id":"1571308277","IsPullRequest":false,"CreatedAt":"2023-02-05T08:15:26","Actor":"avishome","Number":"26572","RawContent":null,"Title":"bug(mat-sidenav): There is no focus trap when Sidenav position is 'end'","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n11\n\n### Description\n\nWhen you opens the Sidenav in over mode the focus shouldn't leave the Sidenav when it is open. it works in case the Sidenav opens in the left side. but in the right side it is broken.\n\n### Reproduction\n\nSteps to reproduce:\r\n[stackBlitz](https://stackblitz.com/edit/angular-96vr4f?file=src%2Fapp%2Fsidenav-mode-example.html)\r\n1. Open the Stackblitz example\r\n2. choose Mode: Over\r\n3. click on the toggle button\r\n4. In the keyboard, click on the tab several times.\n\n### Expected Behavior\n\nThe focus shouldn't leave the Sidenav.\n\n### Actual Behavior\n\nThe focus leaves the side pane and there is no way to return to Sidenav with the keyboard.\n\n### Environment\n\n- Angular: 14.2.10\r\n- CDK/Material: 14.2.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26572","RelatedDescription":"Open issue \"bug(mat-sidenav): There is no focus trap when Sidenav position is 'end'\" (#26572)"},{"Id":"1570854302","IsPullRequest":true,"CreatedAt":"2023-02-04T09:33:16","Actor":"crisbeto","Number":"26571","RawContent":null,"Title":"fix(material/paginator): not emitting instance of PageEvent","State":"open","Body":"Fixes that the paginator's `page` event is typed to emit a `PageEvent`, however the value is only an event that matches the `PageEvent` interface, it isn't an actual instance of the class which can throw off `instanceof` checks.\r\n\r\nFixes #26546.","Url":"https://github.com/angular/components/pull/26571","RelatedDescription":"Open PR \"fix(material/paginator): not emitting instance of PageEvent\" (#26571)"},{"Id":"1570461136","IsPullRequest":false,"CreatedAt":"2023-02-03T21:12:23","Actor":"eLarocque","Number":"26569","RawContent":null,"Title":"bug(mat-icon-button): mat-icon-button ignores density specification","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi,\r\nThere seems to be an issue where `mat-icon-button` is not affected when setting the density option.\r\n\r\nI'm not sure if this is intended, but according to material design spec, the icon buttons should be affected by the density options. \r\nreference: https://m2.material.io/design/layout/applying-density.html#components\r\n(you can see the button icon examples)\r\n![image](https://user-images.githubusercontent.com/8459019/216710371-85aec44a-1512-4969-b4ea-c39359b88832.png)\r\n\r\nIf this is intended, what would be the best way to make the buttons smaller?\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Apply the density option on buttons using the mat-icon-button directive `@include mat.button-density(-3);` \r\n2. The density (size) of the button does not change.\r\n\r\n![image](https://user-images.githubusercontent.com/8459019/217101058-ae6c3a9c-5220-4e84-85e0-646cb43da252.png)\r\n\r\nDemo: https://stackblitz.com/edit/angular-cf7rfy\r\nIn the stackblitz, you can see that although the first set of mat-button-icons are included in the selector that is affected by the `@include mat.button-density(-3);` and the second set is not, both sets are identical.\r\n\r\n### Expected Behavior\r\n\r\nI would expect a size change in the mat-icon-button\r\n\r\n### Actual Behavior\r\n\r\nmat-icon-button ignores density specification\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Chrome Version 109.0.5414.120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26569","RelatedDescription":"Open issue \"bug(mat-icon-button): mat-icon-button ignores density specification\" (#26569)"},{"Id":"1570345556","IsPullRequest":true,"CreatedAt":"2023-02-03T19:37:18","Actor":"wagnermaciel","Number":"26568","RawContent":null,"Title":"feat(material/button): make button ripples lazy","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26568","RelatedDescription":"Open PR \"feat(material/button): make button ripples lazy\" (#26568)"},{"Id":"1570088483","IsPullRequest":true,"CreatedAt":"2023-02-03T16:14:48","Actor":"angular-robot","Number":"26566","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `57ce1b4` -> `ffd5dec` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ecad30a` -> `f4601b6` |\n| angular/dev-infra | action | digest | `fa428ee` -> `fb077c1` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/components/pull/26566","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#26566)"},{"Id":"1569843319","IsPullRequest":false,"CreatedAt":"2023-02-03T13:27:09","Actor":"rengert","Number":"26565","RawContent":null,"Title":"bug(material/table): fixedLayout not applied","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.0\n\n### Description\n\nIf the attribute fixedLayout is set, the styling is not applied. The corresponding css classes are, but the style not. Table layout is always set to auto.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. set fixedLayout to true\r\n2. Check the style of table\r\n\n\n### Expected Behavior\n\nThe table-layout: fixed style is applied\n\n### Actual Behavior\n\nThe table-layout: auto style is applied, wenn fixedLayout is true\n\n### Environment\n\n- Angular:15.1.1\r\n- CDK/Material:15.1.1\r\n- Browser(s):Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs\r\n","Url":"https://github.com/angular/components/issues/26565","RelatedDescription":"Open issue \"bug(material/table): fixedLayout not applied\" (#26565)"},{"Id":"1569807980","IsPullRequest":true,"CreatedAt":"2023-02-03T13:01:38","Actor":"crisbeto","Number":"26564","RawContent":null,"Title":"fix(material/chips): unable to add space when editing chip","State":"open","Body":"Fixes that the default action of the spacebar was being prevented while the chip is in its editing state, not allowing users to enter whitespace.","Url":"https://github.com/angular/components/pull/26564","RelatedDescription":"Open PR \"fix(material/chips): unable to add space when editing chip\" (#26564)"},{"Id":"1569774680","IsPullRequest":true,"CreatedAt":"2023-02-03T12:54:30","Actor":"crisbeto","Number":"26563","RawContent":null,"Title":"docs: mention that typography hierarchy isn't included by default","State":"closed","Body":"We no longer include the typography hierarchy automatically. These changes update the docs to mention it.\r\n\r\nFixes #26524.","Url":"https://github.com/angular/components/pull/26563","RelatedDescription":"Closed or merged PR \"docs: mention that typography hierarchy isn't included by default\" (#26563)"},{"Id":"1569674178","IsPullRequest":true,"CreatedAt":"2023-02-03T12:20:43","Actor":"crisbeto","Number":"26562","RawContent":null,"Title":"fix(material/select): unable to set color of select through theming API","State":"closed","Body":"The select is set up to use the `on-surface` value from MDC for its text color, but `on-surface` is hardcoded so users don't have a way of customizing it. These changes use the `text` from the palette instead.\r\n\r\nFixes #26544.","Url":"https://github.com/angular/components/pull/26562","RelatedDescription":"Closed or merged PR \"fix(material/select): unable to set color of select through theming API\" (#26562)"},{"Id":"1567599860","IsPullRequest":true,"CreatedAt":"2023-02-02T21:18:02","Actor":"phrei","Number":"26550","RawContent":null,"Title":"docs(material/guides/v15-mdc-migration): Change CSS-Selector-Specificity","State":"closed","Body":"The specificity of the CSS-Selector is not enough to change the behaviour. I've added the \"input\"-Type.","Url":"https://github.com/angular/components/pull/26550","RelatedDescription":"Closed or merged PR \"docs(material/guides/v15-mdc-migration): Change CSS-Selector-Specificity\" (#26550)"},{"Id":"1568648249","IsPullRequest":true,"CreatedAt":"2023-02-02T19:24:34","Actor":"mmalerba","Number":"26561","RawContent":null,"Title":"Bump version to \"v15.2.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26561","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.3\" with changelog.\" (#26561)"},{"Id":"1568636906","IsPullRequest":true,"CreatedAt":"2023-02-02T19:16:50","Actor":"mmalerba","Number":"26560","RawContent":null,"Title":"docs: release notes for the v15.1.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26560","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.3 release\" (#26560)"},{"Id":"1568634964","IsPullRequest":true,"CreatedAt":"2023-02-02T19:14:14","Actor":"mmalerba","Number":"26559","RawContent":null,"Title":"Bump version to \"v15.1.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26559","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.3\" with changelog.\" (#26559)"},{"Id":"1568496349","IsPullRequest":false,"CreatedAt":"2023-02-02T17:41:22","Actor":"domestack","Number":"26558","RawContent":null,"Title":"bug(mat-form-field): Form field with icon prefix or suffix makes long label overflow  ","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using mat-form-field together with <mat-icon> prefix or suffix and long label, label is overflowing input box. Seems that text-overflow: ellipse doesn't account for suffix neither prefix width. \r\n\r\n\r\n\r\n\r\n`<div class=\"row\">\r\n  <div class=\"col-2\">\r\n    <mat-form-field>\r\n      <mat-icon matIconSuffix>info_outline</mat-icon>\r\n      <mat-label>Very very very very very long label</mat-label>\r\n      <input matInput />\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-2\">\r\n    <mat-form-field>\r\n      <mat-label>Very very very very long label</mat-label>\r\n      <input matInput [matDatepicker]=\"datePickerAfter\" formControlName=\"applicationAfter\">\r\n      <mat-datepicker-toggle matIconPrefix [for]=\"datePickerAfter\"></mat-datepicker-toggle>\r\n      <mat-datepicker #datePickerAfter></mat-datepicker>\r\n    </mat-form-field>\r\n  </div>\r\n</div>`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create mat-form-field with matIconSuffix or matIconPrefix.\r\n2. Create mat-label with long text.\r\n3. If label text is wider than input box, then label is overflowing it.\r\n\r\n\r\n### Expected Behavior\r\n\r\nLabel should not overflow input box.\r\n\r\n### Actual Behavior\r\n\r\n![Screenshot 2023-02-02 193358](https://user-images.githubusercontent.com/113232400/216400803-0a5f73b8-18e9-4505-83da-fa0ab2bd2cf4.png)\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.2\r\n- CDK/Material: 15.1.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26558","RelatedDescription":"Open issue \"bug(mat-form-field): Form field with icon prefix or suffix makes long label overflow  \" (#26558)"},{"Id":"1568480677","IsPullRequest":false,"CreatedAt":"2023-02-02T17:31:22","Actor":"ewolfman","Number":"26557","RawContent":null,"Title":"bug(material/tooltip): fix for tooltip created a new problem","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13.2.4\n\n### Description\n\nHi,\r\n\r\nI think that this fix: https://github.com/angular/components/pull/24475 created a new issue:\r\nWhen the tooltip is showing you can move the mouse to it (nice), however when you move the mouse even further away, the tooltip should having been closed. But the current behavior is that the tooltip remains until you leave the margin area (I think), causing the transparent margin to 'hide' controls beneath the tooltip and they cannot be reached using the mouse.\n\n### Reproduction\n\nSee this example: https://stackblitz.com/edit/angular-tmb9al-4kaa4l?file=src/app/tooltip-delay-example.html\r\n\r\n1. Hover over button and tooltip shows.\r\n2. Try clicking on the input field while the tooltip is showing.\n\n### Expected Behavior\n\nTooltip should not block focusing on elements (behavior as it was before 13.2.5).\r\nSame demo with 13.2.4: https://stackblitz.com/edit/angular-tmb9al-1wtpjv?file=package.json,src%2Findex.html,package-lock.json,src%2Fapp%2Ftooltip-delay-example.html\r\n\r\nhttps://user-images.githubusercontent.com/5642226/216398533-2fdcc1c1-7a0a-44a5-8c81-2cedc3560cff.mp4\r\n\r\n\r\nhttps://user-images.githubusercontent.com/5642226/216398541-294e5f47-af65-4dee-9193-009f003ebfec.mp4\r\n\r\n\n\n### Actual Behavior\n\nCannot click the input field.\n\n### Environment\n\n- Angular: 13.2.5\r\n- CDK/Material: 13.2.5\r\n- Browser(s): Edge, Firefox\r\n\r\n","Url":"https://github.com/angular/components/issues/26557","RelatedDescription":"Open issue \"bug(material/tooltip): fix for tooltip created a new problem\" (#26557)"},{"Id":"1568402437","IsPullRequest":false,"CreatedAt":"2023-02-02T16:55:11","Actor":"alkgreer","Number":"26556","RawContent":null,"Title":"feat(Listbox): Allow Listbox to be found in content projection","State":"open","Body":"### Feature Description\n\nThe Listbox cdk directive could be used as a select component's options. This would be nice because it has built in accessibilty features and keyboard interactions. The problem is if those select component options are content projected they cannot find their parent listbox directive. \n\n### Use Case\n\nSo if I wanted my custom select component implementation to look like this:\r\n\r\n![image](https://user-images.githubusercontent.com/26122765/216383475-edeaf89e-5798-49e3-b8fa-8b269a46cc19.png)\r\n\r\nThe custom select options are being content projected and the custom select logic would look something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/26122765/216383926-10a91b6e-005c-4e4d-8f55-edc2ac19f073.png)\r\n\r\n\r\nThe select option that is not content projected is working as expected but the content projected ones are not finding their parent listbox and therefore not behaving correctly.\r\n\r\nStackblitz for reference : https://stackblitz.com/edit/angular-ivy-tcfqrs?embed=1&file=src/app/select/select.component.ts\r\n","Url":"https://github.com/angular/components/issues/26556","RelatedDescription":"Open issue \"feat(Listbox): Allow Listbox to be found in content projection\" (#26556)"},{"Id":"1568190661","IsPullRequest":false,"CreatedAt":"2023-02-02T14:46:54","Actor":"Ruslancic","Number":"26555","RawContent":null,"Title":"bug(Sidenav): Setting height: 100vh to mat-sidenav-container, scroll event not working!","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen setting 100vh to mat-sidenav-container, scroll event stop working! On mobile, there is impossibile to scroll down the page!\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  ng new app\r\n2. ng add @angular/material\r\n3. add example from oficial page\r\n4. set style=\"height:100vh\" to mat-sidenav-container\r\n5. Add simple @HostListener('window:scroll', []) event or fromEvent(document, 'scroll'). All this event not emit nothing, if i have height to 100vh! \r\n\r\n\r\n### Expected Behavior\r\n\r\nAll event must emit events\r\n\r\n### Actual Behavior\r\n\r\nScroll event not working\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material: 15.1.1\r\n- Browser(s): Chrome, Mozilla, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/26555","RelatedDescription":"Open issue \"bug(Sidenav): Setting height: 100vh to mat-sidenav-container, scroll event not working!\" (#26555)"},{"Id":"1567992777","IsPullRequest":false,"CreatedAt":"2023-02-02T12:43:35","Actor":"tklingert","Number":"26554","RawContent":null,"Title":"bug(datepicker): input parse validation broken on custom DateAdapter<numeric>","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFalsy check of value within [datepicker-input-base._isValidValue](https://github.com/angular/components/blob/a1d5614f18066c0c2dc2580c7b5099e8f68a8e74/src/material/datepicker/datepicker-input-base.ts#L382) leads to invalid numeric date values from custom DateAdapter<numeric> to be treated as valid instead:\r\n```javascript\r\n! 0 \r\n// -> true\r\n! NaN\r\n// -> true\r\n```\r\n-> [parseValidator](https://github.com/angular/components/blob/a1d5614f18066c0c2dc2580c7b5099e8f68a8e74/src/material/datepicker/datepicker-input-base.ts#L150) will never return a 'matDatepickerParse' error.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Use Custom DateAdapter<numeric> which returns NaN on invalid()\r\n2. Enter invalid characters on the datepicker's input.\r\n3. Leave datepicker\r\n\n\n### Expected Behavior\n\nvalidation error ('format error') shown/raised.\n\n### Actual Behavior\n\nNo error validation error ('format error') will be shown/raised.\r\n\r\n([datepicker-input-base._isValidValue](https://github.com/angular/components/blob/a1d5614f18066c0c2dc2580c7b5099e8f68a8e74/src/material/datepicker/datepicker-input-base.ts#L382) should check for 'null' | 'undefined' instead of falsy)\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26554","RelatedDescription":"Open issue \"bug(datepicker): input parse validation broken on custom DateAdapter<numeric>\" (#26554)"},{"Id":"1567888492","IsPullRequest":false,"CreatedAt":"2023-02-02T11:43:37","Actor":"jcuenca95","Number":"26553","RawContent":null,"Title":"feat(Table): Add registerFilter function to MatDataSource","State":"open","Body":"### Feature Description\r\n\r\nAdd a register function to change the behavior of the filter as we do with `filterPredicate` but with all the dataset\r\n\r\n### Use Case\r\n\r\nI need to group the data based on condition and I can't implement this with filterPredicate because I need reference to the data array and to reduce this array. ","Url":"https://github.com/angular/components/issues/26553","RelatedDescription":"Open issue \"feat(Table): Add registerFilter function to MatDataSource\" (#26553)"},{"Id":"1567844571","IsPullRequest":false,"CreatedAt":"2023-02-02T11:15:46","Actor":"infacto","Number":"26552","RawContent":null,"Title":"Material modules increases app size per each module. Reuse components.","State":"open","Body":"Currently you indirectly forces developer to only use a single huge Angular module. Instead of using multiple modules. Why?\r\nBecause every time you import a Material module, it increases the app size. And even more if you use a shared module for this.\r\n\r\nExample: \r\n\r\nYou import `MatButtonModule` in two modules. Use case: A page and a dialog with its own module. Build you app and you see duplicated code. The MatButton code is not reused. It appears two times in built code as exact copy.\r\n\r\nThere is also an article what descibes the use of shared modules: \r\nhttps://indepth.dev/posts/1191/stop-using-shared-material-module\r\nThis will reduce the app size. But does not fix the core issue. \r\n\r\nIn this issue we want to find a solution. Find a way to import this Framework/Components only once and use it in every module in you app without increasing the app size for each module by Material modules. Maybe tree-shaking? Would forRoot/forChild work? I'm sure you have better ideas. \r\n\r\nWhy not just initialize the framework once in e.g. main or main module? Like the most other UIs work. E.g. Ionic.\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/26552","RelatedDescription":"Open issue \"Material modules increases app size per each module. Reuse components.\" (#26552)"},{"Id":"1567714698","IsPullRequest":false,"CreatedAt":"2023-02-02T09:59:58","Actor":"ewanstinson","Number":"26551","RawContent":null,"Title":"bug(MatDialog): Modal dialog Custom Panel Class no longer applying styles","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.2\r\n\r\n### Description\r\n\r\nI recently upgraded Angular to version 15 and noticed the default padding of the dialog modal has been removed, which I believe was set to 24px previously.\r\n\r\nThen I tried setting it manually through passing in a class declared on the main styles to the panelClass property, as described in the docs below, but every permutation of this doesn't seem to be working anymore.\r\n\r\nhttps://github.com/angular/components/blob/main/guides/customizing-component-styles.md#styling-overlay-components\r\n\r\nThe only solution seems to be manually setting it in the component class being used for the dialog itself.\r\n\r\n### Reproduction\r\n\r\nAs described in the docs:\r\n\r\nhttps://github.com/angular/components/blob/main/guides/customizing-component-styles.md#styling-overlay-components\r\n\r\n\r\n### Expected Behavior\r\n\r\nBefore the upgrade all our MatDialog modals had the 24px padding by default and custom styling wasn't an issue.\r\n\r\n### Actual Behavior\r\n\r\nNow there is no padding applied and can no longer apply custom styles as described in the docs.\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15.1.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26551","RelatedDescription":"Open issue \"bug(MatDialog): Modal dialog Custom Panel Class no longer applying styles\" (#26551)"},{"Id":"1567588363","IsPullRequest":false,"CreatedAt":"2023-02-02T08:46:55","Actor":"Wisdomb33r","Number":"26549","RawContent":null,"Title":"help(mat-form-field): how to override the floating label scaling","State":"open","Body":"### What are you trying to do?\n\nI'd like to change the floating label scaling of the `mat-form-field` (my application is using the outline appearance).\r\nMore precisely, I'd like to know how I can overwrite the specific `--mat-mdc-form-field-floating-label-scale` SASS variable. The default value seems to be 75% : \r\n```\r\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\r\n    --mat-mdc-form-field-label-transform: translateY(-32.75px)\r\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\r\n    transform: var(--mat-mdc-form-field-label-transform);\r\n}\r\n```\n\n### What troubleshooting steps have you tried?\n\nMore details about my tries are available on [this stackoverflow question](https://stackoverflow.com/questions/75221851/angular-material-15-form-field-floating-label-scale) (for which I could not get any answer unfortunately).\n\n### Reproduction\n\nAny mat-form-field using appearance outline has a 75% scale on the floating label.\n\n### Environment\n\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.2\r\n- Browser(s): Chrome/Edge Chromium\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26549","RelatedDescription":"Open issue \"help(mat-form-field): how to override the floating label scaling\" (#26549)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-07T03:30:03.3420235Z","RunDurationInMilliseconds":2233}