{"Data":{"Angular-Issues":{"Issues":[{"Id":"1503914274","IsPullRequest":true,"CreatedAt":"2022-12-20T03:04:49","Actor":"Piyush132000","Number":"48546","RawContent":null,"Title":"docs: updated docs removed unnecessary imports and empty methods","State":"open","Body":"Removed empty methods and unnecessary imports in files\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48546","RelatedDescription":"Open PR \"docs: updated docs removed unnecessary imports and empty methods\" (#48546)"},{"Id":"1503850255","IsPullRequest":false,"CreatedAt":"2022-12-20T01:25:50","Actor":"dgp1130","Number":"48545","RawContent":null,"Title":"Remove `$localize` export","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nlocalize\n\n### Description\n\nIn https://github.com/angular/angular-cli/issues/24145#issuecomment-1358687296, we discovered that the compiler expects `$localize` to be used as global, not imported from `@angular/localize/init`. This is confusing and leads to users misusing the function.\n\n### Proposed solution\n\nWe should remove the exported `$localize` from this package and instead let users depend on it via the global declaration.\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/48545","RelatedDescription":"Open issue \"Remove `$localize` export\" (#48545)"},{"Id":"1503844582","IsPullRequest":false,"CreatedAt":"2022-12-20T01:14:38","Actor":"dgp1130","Number":"48544","RawContent":null,"Title":"Shadowing built-ins confuses compiler","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf you attempt to extract messages from a component with the following import:\r\n\r\n```typescript\r\nimport { $localize } from '@angular/localize/init';\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/fischeversenker/ng-decorator-tree-shaking\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nMessages from the component are not extracted.\r\n\r\nThis appears to be because the `$localize` import will be included in the generated JavaScript and so any user-authored or generated references to `$localize` actually refer to this _imported_ `$localize`, not the _global_ `$localize`. This appears to confuse the compiler and prevents it from extracting the messages.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\nSpin off from https://github.com/angular/angular-cli/issues/24145#issuecomment-1358687296.\r\n\r\nFortunately this can be worked around by just `import '@angular/localize';` and using the global `$localize`. However I think this is indicative of a bigger problem in the compiler that it allows you to shadow built-in symbols. `$localize` is the most obvious one, but I think the same thing can happen to `i0`? The following snippet compiles without error:\r\n\r\n```typescript\r\nimport { Component } from '@angular/core';\r\nimport { $localize } from '@angular/localize/init';\r\n\r\n(() => {\r\n  const i0 = null;\r\n\r\n  @Component({\r\n    selector: 'lib-library-with-localize',\r\n    template: `<div i18n>unused library template with localize</div>`,\r\n    standalone: true,\r\n  })\r\n  class LibraryWithLocalizeComponent {\r\n    name = $localize`my name`;\r\n  }\r\n})();\r\n```\r\n\r\nI'm pretty sure that will fail at runtime given that the generated `i0.*` instructions will resolve to the `null` constant. `i0` is harder to misuse given that the compiler actually generates `import * as i0 from '...';`, so you get a name conflict if you define a top-level constant for it (which is also unintuitive, but better than compiling successfully and failing later). Also given that the symbol is only ever used in the code generated by `@Component()` (I think?) there aren't many situations outside of my contrived example where someone could reasonably shadow `i0` in a breaking manner.\r\n\r\nWe should consider banning any compiler built-in from being shadowed in user-code. Users just shouldn't be able to declare variables named `$localize` because they will have different semantics from the built-in symbol. For `i0`, I think the ideal fix would just be for the compiler to pick a different name (`i1`) if `i0` is already taken. Not sure how hard that is given that we'd probably want to verify _all_ symbols in the file, not just top-level declarations. Are there other \"built-in symbols\" we'd want to ban from user code?\r\n\r\nJust to be a pedant, I'll point that out that _technically_ `with` becomes a problem here, since users could write something like:\r\n\r\n```typescript\r\nimport '@angular/localize';\r\n\r\nconst imARealJerk = {\r\n  $localize: () => { /* ... */ },\r\n};\r\n\r\nwith (imARealJerk) {\r\n  console.log($localize`Oh so you think you're such a wiz at CS205-Compilers?`);\r\n}\r\n```\r\n\r\nTechnically we could inspect the type of the object to look for `$localize` key, but that's probably not worth the effort and we could just ignore `with` cases. Just wanted to call that out.","Url":"https://github.com/angular/angular/issues/48544","RelatedDescription":"Open issue \"Shadowing built-ins confuses compiler\" (#48544)"},{"Id":"1503722090","IsPullRequest":false,"CreatedAt":"2022-12-20T00:49:31","Actor":"rgrbrny","Number":"48543","RawContent":null,"Title":"Deactivate guard pops router state, fails when canceling navigation","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nSource code at the provided link; but stackblitz seems to reload the app when using the arrow navigation and so it does not reproduce in the stackblitz environment.\r\n\r\nGiven a simple routing app with links home -> list -> edit and a deactivation guard on the edit component:\r\nwhen using the browser back arrow to navigate from edit -> list and then canceling the navigation, the history gets popped leading to incorrect future navigation. \r\n\r\nFrom the browser log, running locally:\r\n```\r\nReloading enabled, Progress disabled, Overlay enabled.\r\ncore.mjs:24834 Angular is running in development mode. Call enableProdMode() to enable production mode.\r\nedit.guard.ts:14 current route ActivatedRouteSnapshot {url: Array(2), params: {…}, queryParams: {…}, fragment: null, data: {…}, …}\r\nedit.guard.ts:15 currentState RouterStateSnapshot {_root: TreeNode, url: '/list/edit'}\r\nedit.guard.ts:16 next state RouterStateSnapshot {_root: TreeNode, url: '/list'}\r\nedit.guard.ts:14 current route ActivatedRouteSnapshot {url: Array(2), params: {…}, queryParams: {…}, fragment: null, data: {…}, …}\r\n```\r\nCancel the confirmation dialog and attempt the navigation again:\r\n```\r\nedit.guard.ts:15 currentState RouterStateSnapshot {_root: TreeNode, url: '/list/edit'}\r\nedit.guard.ts:16 next state RouterStateSnapshot {_root: TreeNode, url: '/'}\r\n\r\n```\r\nThe intermediate /list entry is no longer present, even though the navigation was canceled.\r\n\r\nCancel the confirmation dialog and attempt the navigation again; the back arrow takes us out of the application without any confirmation resulting in a loss of data.\r\n\r\nNote that if I use a programmatic navigation instead of the browser arrows, things work as expected.\r\n\r\nng version output:\r\nAngular CLI: 15.0.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@schematics/angular             15.0.4\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-kzxmpp\n\n### Please provide the exception or error you saw\n\n```true\nCanceling the navigation leaves the browser on the correct page, but subsequent navigation takes us to an incorrect resource. When there is no history associated with the application, the navigation leaves the application entirely without a confirmation, leading to loss of data.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48543","RelatedDescription":"Closed issue \"Deactivate guard pops router state, fails when canceling navigation\" (#48543)"},{"Id":"1503329709","IsPullRequest":false,"CreatedAt":"2022-12-19T22:50:01","Actor":"4javier","Number":"48539","RawContent":null,"Title":"Is NestedAnimationTriggerMetadata type really needed?","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations\n\n### Is this a regression?\n\nNo\n\n### Description\n\nLooking at the code of AnimationRendererFactory I stumbled upon this type definition\r\nhttps://github.com/angular/angular/blob/e59406f5e7d1c1cf9bdd7a2f882d05fbf0abcf99/packages/platform-browser/animations/src/animation_renderer.ts#L18-L19\r\ncorrectly unwrapped recursively during triggers registration for AnimationRenderer creation\r\nhttps://github.com/angular/angular/blob/e59406f5e7d1c1cf9bdd7a2f882d05fbf0abcf99/packages/platform-browser/animations/src/animation_renderer.ts#L70-L78\r\n\r\nI know how it works, but I cannot understand why it exists in the first place.\r\nA comment on top of it says\r\n\r\n> // Define a recursive type to allow for nested arrays of `AnimationTriggerMetadata`.\r\n\r\nBut I can't imagine a usecase for such a data structure.\r\nPassing a `trigger()` call as one of `definitions` array's value of an outer `trigger()` would pass compiler typecheck, being `AnimationTriggerMetadata` an extension of the expected `AnimationMetadata`, but would fail at runtime with\r\n\r\n>  - NG03007: only state() and transition() definitions can sit inside of a trigger()\r\n\r\nThe only situation I can think of in which code execution would reach that branch, it's if someone would explicitly pass a nested array as `@Component`'s `animations` metadata.\r\nBut I can't see the point in doing that.\r\nWhat am I missing?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.5\r\nNode: 14.20.0\r\nPackage Manager: npm 6.14.17 \r\nOS: linux x64\r\n\r\nAngular: 14.2.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nBut I can't see any changes about this inside v15 source.\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48539","RelatedDescription":"Closed issue \"Is NestedAnimationTriggerMetadata type really needed?\" (#48539)"},{"Id":"1503681453","IsPullRequest":false,"CreatedAt":"2022-12-19T22:10:22","Actor":"chladog","Number":"48542","RawContent":null,"Title":"anchorScrolling: 'enabled' does not work on nested ViewEncapsulation.ShadowDom","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAnchor scrolling does not work when anchor element is deeper than 1 ShadowDom-level.\r\nNavigating via a fragment link does not cause the target element to be scrolled into view, nor is focus placed on the target element.\r\n\r\nCurrently Router can find target element inside dom root and **interestlingly inside the first level** of shadow DOM. But won't find target element from any deeper level.\r\n\r\n### Expected behavior\r\nShould walk the whole tree to find the target element.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-on3gqs?file=src/app/app.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nNo err thrown\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 15.0.4\n```\n\n\n### Anything else?\n\nI'm not sure if this is regression of #41470 or extended issue caused by the bigger depth.","Url":"https://github.com/angular/angular/issues/48542","RelatedDescription":"Open issue \"anchorScrolling: 'enabled' does not work on nested ViewEncapsulation.ShadowDom\" (#48542)"},{"Id":"1503652809","IsPullRequest":false,"CreatedAt":"2022-12-19T21:45:07","Actor":"josepm9","Number":"48541","RawContent":null,"Title":"Assignment of a outer scope variable in a closure failing when optimization enabled","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nAssignment of a outer scope variable in a closure, that works perfectly in development mode, it's failing when optimization are enabled.\r\n\r\nThis error can be reproduced following the next steps:\r\n1) Define a string variable with a default value.\r\n2) Update it in a closure.\r\n3) Just after the closure, use `+=`to concatenate something the variable.\r\n\r\nThe variable, at the end, contains the initial value followed by the concatenated one. The value set in the closure is lost.\r\n\r\nI've been able to reproduce this issue with latest versions of angular 13 and 14 when optimization is enabled (`\"optimization\": true`) but not with angular 15.\r\n\r\nExample of failing code:\r\n```typescript\r\n  problem(): string {\r\n    let url = 'If you see this, there is a problem.';\r\n    let query = (() => {\r\n      url = 'If you see this, all is right.';\r\n      console.log('Updating URL (1): ' + url);\r\n      return '';\r\n    })();\r\n    url += query;\r\n    console.log('Updating URL (2): ' + url);\r\n    return url;\r\n  }\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/josepm9/ng-optimization-enabled-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nPlease use the example (master or release/angular14 branch) to reproduce the error.\r\n\r\n1) Start the example (`npm run start`)\r\n2) Browse the main page (http://localhost:4200/)\r\n\r\nExpected page content:\r\n\r\nAngular 15.0.4\r\nProblem: If you see this, all is right.\r\nNo problem: If you see this, all is right.\r\n\r\nActual page content:\r\n\r\nAngular 13.3.12\r\nProblem: If you see this, there is a problem.\r\nNo problem: If you see this, all is right.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.3.10\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: linux x64\r\n\r\nAngular: 13.3.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.10\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.3.10\r\n@angular-devkit/schematics      13.3.10\r\n@angular/cli                    13.3.10\r\n@schematics/angular             13.3.10\r\nrxjs                            7.8.0\r\ntypescript                      4.6.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI've been able to reproduce this issue with latest versions of angular 13 and 14 when optimization is enabled (`\"optimization\": true`) but not with angular 15.\r\n\r\n\r\nAngular 14 environment:\r\n\r\n```console\r\nAngular CLI: 14.2.10\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0 \r\nOS: linux x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cli                    14.2.10\r\n@schematics/angular             14.2.10\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\n```","Url":"https://github.com/angular/angular/issues/48541","RelatedDescription":"Open issue \"Assignment of a outer scope variable in a closure failing when optimization enabled\" (#48541)"},{"Id":"1503235740","IsPullRequest":true,"CreatedAt":"2022-12-19T20:12:42","Actor":"devversion","Number":"48538","RawContent":null,"Title":"[15.0.x] Merge ESM feature branch","State":"closed","Body":"Patch port of https://github.com/angular/angular/pull/48521","Url":"https://github.com/angular/angular/pull/48538","RelatedDescription":"Closed or merged PR \"[15.0.x] Merge ESM feature branch\" (#48538)"},{"Id":"1503518865","IsPullRequest":true,"CreatedAt":"2022-12-19T20:06:17","Actor":"atscott","Number":"48540","RawContent":null,"Title":"fix(router): page refresh should not destroy history state","State":"open","Body":"The router's `initialNavigation` causes an imperative navigation using the `navigateByUrl` method. This, however, results in the history state being removed on a page refresh. This change calls `scheduleNavigation` directly from `initialNavigation` to ensure the history state is correctly retained.\r\n","Url":"https://github.com/angular/angular/pull/48540","RelatedDescription":"Open PR \"fix(router): page refresh should not destroy history state\" (#48540)"},{"Id":"1500933818","IsPullRequest":true,"CreatedAt":"2022-12-19T19:50:51","Actor":"devversion","Number":"48521","RawContent":null,"Title":"Final ESM changes","State":"closed","Body":"**Overall goal**:\r\n\r\n* Currently our Bazel setup still produces CommonJS output. This output is mostly used by tests. Even though we ship ESM to our users through NPM, we test CommonJS here in the repository.\r\n* Given that we test CommonJS, but ship ESM- our code needs to be able to work with both module systems. e.g. using `require` in a safe way, but also not being able to use `import.meta.url` (since it's unknown syntax for CJS).\r\n   * Removing CommonJS here- allows us to simplify our code significantly\r\n   * An easier mental model of \"ESM only\"\r\n   * We test more closely what we actually ship more \r\n* No longer relying on the `ts_library`/ng_module` devmode/prodmode constructs allows us to migrate to e.g. `rules_js` in the future (a better & maintained variant of `rules_nodejs`).\r\n   * Rules NodeJS originated out of g3 and shows its ESM incompatibilities.\r\n   * That's the reason we need to patch/trick the current rules into actually supporting ESM at all..\r\n\r\nSee individual commits","Url":"https://github.com/angular/angular/pull/48521","RelatedDescription":"Closed or merged PR \"Final ESM changes\" (#48521)"},{"Id":"1503156563","IsPullRequest":false,"CreatedAt":"2022-12-19T15:33:59","Actor":"maxime1992","Number":"48537","RawContent":null,"Title":"ERROR: Expected identifier but found \"=\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nBuilding an app in prod mode, I get the following error:\r\n\r\n```\r\nError: Optimization error [main.b856787215841021.js]: Error: Transform failed with 1 error:\r\nmain.b856787215841021.js:22080:5: ERROR: Expected identifier but found \"=\"\r\n```\r\n\r\nIf I build the app without prod mode, it compiles just fine.\r\n\r\nIf I take a look into the generated source code from the non prod command at the line where the build prod command fails (as the build prod one doesn't give any file in dist because of the failure), I end up on this code:\r\n\r\n```\r\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  padding: 24px 0;\\n  margin: 24px 0;\\n}\\n\\n.filename-icon[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n}\\n\\n.filename-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-left: 32px;\\n}\\n\\n.selected-file[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  font-weight: 700;\\n}\\n\\npdf-viewer[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n\\n.pdf-viewer-container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvY3VtZW50LXZpZXdlci5jb21wb25lbnQuc2NzcyIsIi4uLy4uLy4uLy4uLy4uLy4uL2FwcHMvYW10LWFwcC9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0FBSEY7O0FBTUE7RUFDRSxpQkNxQmE7QUR4QmY7O0FBTUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLGlCQ2dCZ0I7QURuQmxCOztBQU1BO0VBQ0UsaUJDUWE7RURQYixnQkFBQTtBQUhGOztBQU1BO0VBQ0UsY0FBQTtBQUhGOztBQU1BO0VBQ0UsZUFBQTtBQUhGOztBQU1BO0VBQ0Usa0JBQUE7QUFIRiIsImZpbGUiOiJkb2N1bWVudC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlICdAYW5ndWxhci9tYXRlcmlhbCcgYXMgbWF0O1xuQHVzZSAnc2FzczptYXAnO1xuQGltcG9ydCAnYXBwcy9hbXQtYXBwL3NyYy9zdHlsZXMvdmFyaWFibGVzJztcblxuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogJGdyaWQtc3BhY2luZy0zeCAwO1xuICBtYXJnaW46ICRncmlkLXNwYWNpbmctM3ggMDtcbn1cblxuLmZpbGVuYW1lLWljb24ge1xuICBtYXJnaW4tcmlnaHQ6ICRncmlkLXNwYWNpbmc7XG59XG5cbi5maWxlbmFtZS10aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAkZ3JpZC1zcGFjaW5nLTR4O1xufVxuXG4uc2VsZWN0ZWQtZmlsZSB7XG4gIG1hcmdpbi1yaWdodDogJGdyaWQtc3BhY2luZztcbiAgZm9udC13ZWlnaHQ6IG1hdC5mb250LXdlaWdodCgkY2xvdWRuYy10eXBvZ3JhcGh5LCBkaXNwbGF5LTMpO1xufVxuXG5wZGYtdmlld2VyIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLnBkZi12aWV3ZXItY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyAvLyBwb3NpdGlvbiBlbGVtZW50IHNvIHRoZSBsb2FkZXIgY2FuIGRlZmluZSBiZSBjZW50ZXJlZFxufVxuIiwiQHVzZSAnQGFuZ3VsYXIvbWF0ZXJpYWwnIGFzIG1hdDtcbkB1c2UgJ3Nhc3M6bWFwJztcbkBpbXBvcnQgJ0Bhbmd1bGFyL21hdGVyaWFsL3RoZW1pbmcnO1xuXG4vLyBXaGVyZTpcbi8vICRnbG9iYWwtbmF2LXRvb2xiYXIgaXMgdGhlIGFyZWEgY29udGFpbmluZzogTG9nbywgQ29tcG9uZW50cywgRXF1aXBtZW50IExpYnJhcnlcbi8vICRwYXJ0LW5hdi10b29sYmFyIGlzIHRoZSBhcmVhIGNvbnRhaW5pbmc6IEluaXRpYWwgQ29uZmlndXJhdGlvbiwgT3BlcmF0aW9uXG4kZ2xvYmFsLW5hdi10b29sYmFyOiA3NXB4O1xuJHBhcnQtbmF2LXRvb2xiYXI6IDUwcHg7XG5cbiRiYWNrZ3JvdW5kOiAjMWIxYzIzO1xuJGJhY2tncm91bmQtbGlnaHQ6ICNmZmY7XG5cbiRzaGFkZS1hZGp1c3Q6IDEwJTtcbiRzaGFkZS1hZGp1c3QtcXVhcnRlcjogJHNoYWRlLWFkanVzdCAqIDAuMjU7XG4kc2hhZGUtYWRqdXN0LWhhbGY6ICRzaGFkZS1hZGp1c3QgKiAwLjU7XG4kc2hhZGUtYWRqdXN0LTJ4OiAkc2hhZGUtYWRqdXN0ICogMjtcbiRzaGFkZS1hZGp1c3QtM3g6ICRzaGFkZS1hZGp1c3QgKiAzO1xuJHNoYWRlLWFkanVzdC00eDogJHNoYWRlLWFkanVzdCAqIDQ7XG4kc2hhZGUtYWRqdXN0LTV4OiAkc2hhZGUtYWRqdXN0ICogNTtcbiRzaGFkZS1hZGp1c3QtNng6ICRzaGFkZS1hZGp1c3QgKiA2O1xuJHNoYWRlLWFkanVzdC03eDogJHNoYWRlLWFkanVzdCAqIDc7XG4kc2hhZGUtYWRqdXN0LTh4OiAkc2hhZGUtYWRqdXN0ICogODtcbiRzaGFkZS1hZGp1c3QtOXg6ICRzaGFkZS1hZGp1c3QgKiA5O1xuJHNoYWRlLWFkanVzdC05eC1oYWxmOiAkc2hhZGUtYWRqdXN0ICogOS41O1xuXG4kYmx1ZTogcmdiKDIzLCAxNTUsIDE3Nik7XG4kZ3JlZW46IHJnYigyMywgMTc2LCAxMzcpO1xuJHJlZDogcmdiKDIyOCwgMTE2LCAxMDMpO1xuJHllbGxvdzogcmdiKDI0NSwgMTk0LCAxMDIpO1xuJHB1cnBsZTogcmdiKDE3NywgMTM0LCAxOTUpO1xuXG4kZ3JpZC1zcGFjaW5nOiA4cHg7XG4kZ3JpZC1zcGFjaW5nLWhhbGY6ICRncmlkLXNwYWNpbmcgKiAwLjU7IC8vIDRweFxuJGdyaWQtc3BhY2luZy0yeDogJGdyaWQtc3BhY2luZyAqIDI7IC8vIDE2cHhcbiRncmlkLXNwYWNpbmctM3g6ICRncmlkLXNwYWNpbmcgKiAzOyAvLyAyNHB4XG4kZ3JpZC1zcGFjaW5nLTR4OiAkZ3JpZC1zcGFjaW5nICogNDsgLy8gMzJweFxuJGdyaWQtc3BhY2luZy01eDogJGdyaWQtc3BhY2luZyAqIDU7IC8vIDQwcHhcbiRncmlkLXNwYWNpbmctNng6ICRncmlkLXNwYWNpbmcgKiA2OyAvLyA0OHB4XG4kZ3JpZC1zcGFjaW5nLTd4OiAkZ3JpZC1zcGFjaW5nICogNzsgLy8gNTZweFxuJGdyaWQtc3BhY2luZy04eDogJGdyaWQtc3BhY2luZyAqIDg7IC8vIDY0cHhcbiRncmlkLXNwYWNpbmctOXg6ICRncmlkLXNwYWNpbmcgKiA5OyAvLyA3MnB4XG4kZ3JpZC1zcGFjaW5nLTEweDogJGdyaWQtc3BhY2luZyAqIDEwOyAvLyA4MHB4XG5cbiRibG9jay1zcGFjaW5nLXRhYmxldDogJGdyaWQtc3BhY2luZy0xMHggKyAkZ3JpZC1zcGFjaW5nLTJ4OyAvLyBFcXVhdGVzIHRvIDk2cHhcbiRibG9jay1zcGFjaW5nLWRlc2t0b3A6ICRncmlkLXNwYWNpbmctMTB4ICsgJGdyaWQtc3BhY2luZy01eDsgLy8gRXF1YXRlcyB0byAxMjBweFxuXG4vLyBCcmFuZCBwYWxldHRlIGRlZmluZWQgaW4gU2tldGNoIGFuZCBvdXRwdXQgdG8gWmVwbGluIGhlcmU6XG4vLyBodHRwczovL2FwcC56ZXBsaW4uaW8vcHJvamVjdC81YTdiN2UwYzhmNDdjZDA3MjMwODA0YzgvZGFzaGJvYXJkXG4vLyBGb3IgcGFsZXR0ZSBjb2xvdXJzLCBwbGVhc2Ugc2VlIHRoZSBEZXNpZ24gU3lzdGVtLnNrZXRjaCBmaWxlLlxuJGJyYW5kLXdoaXRlOiAjZmZmO1xuJGJyYW5kLWJsYWNrOiAjMDAwO1xuJGJyYW5kLWRhcmtncmV5OiAjMTMxMzE2O1xuXG4vLyBQYWxldHRlIGRlc2lnbiBnZW5lcmF0b3I6IGh0dHA6Ly9tY2cubWJpdHNvbi5jb20vXG4kcHJpbWFyeTogKFxuICA1MDogI2ZmZixcbiAgMTAwOiAjZmZmLFxuICAyMDA6ICNmZmYsXG4gIDMwMDogI2ZmZixcbiAgNDAwOiAjZmZmLFxuICA1MDA6ICNmZmYsXG4gIDYwMDogI2ZmZixcbiAgNzAwOiAjZmZmLFxuICA4MDA6ICNmZmYsXG4gIDkwMDogI2ZmZixcbiAgQTEwMDogI2ZmZixcbiAgQTIwMDogI2ZmZixcbiAgQTQwMDogI2ZmZixcbiAgQTcwMDogI2ZmZixcbiAgY29udHJhc3Q6IChcbiAgICA1MDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDMwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICApLFxuKTtcblxuJHByaW1hcnktbGlnaHQ6IChcbiAgNTA6ICNlMGUwZTAsXG4gIDEwMDogI2IzYjNiMyxcbiAgMjAwOiAjODA4MDgwLFxuICAzMDA6ICM0ZDRkNGQsXG4gIDQwMDogIzI2MjYyNixcbiAgNTAwOiAjMDAwLFxuICA2MDA6ICMwMDAsXG4gIDcwMDogIzAwMCxcbiAgODAwOiAjMDAwLFxuICA5MDA6ICMwMDAsXG4gIEExMDA6ICNhNmE2YTYsXG4gIEEyMDA6ICM4YzhjOGMsXG4gIEE0MDA6ICM3MzczNzMsXG4gIEE3MDA6ICM2NjYsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICMwMDAsXG4gICAgMTAwOiAjMDAwLFxuICAgIDIwMDogIzAwMCxcbiAgICAzMDA6ICNmZmYsXG4gICAgNDAwOiAjZmZmLFxuICAgIDUwMDogI2ZmZixcbiAgICA2MDA6ICNmZmYsXG4gICAgNzAwOiAjZmZmLFxuICAgIDgwMDogI2ZmZixcbiAgICA5MDA6ICNmZmYsXG4gICAgQTEwMDogIzAwMCxcbiAgICBBMjAwOiAjMDAwLFxuICAgIEE0MDA6ICNmZmYsXG4gICAgQTcwMDogI2ZmZixcbiAgKSxcbik7XG5cbiRhY2NlbnQ6IChcbiAgNTA6ICNlOGY3ZmMsXG4gIDEwMDogI2M1ZWFmOCxcbiAgMjAwOiAjOWVkY2YzLFxuICAzMDA6ICM3N2NlZWUsXG4gIDQwMDogIzVhYzRlYixcbiAgNTAwOiAjM2RiOWU3LFxuICA2MDA6ICMzN2IyZTQsXG4gIDcwMDogIzJmYWFlMCxcbiAgODAwOiAjMjdhMmRkLFxuICA5MDA6ICMxYTkzZDcsXG4gIEExMDA6ICNmZmYsXG4gIEEyMDA6ICNkN2YwZmYsXG4gIEE0MDA6ICNhNGRjZmYsXG4gIEE3MDA6ICM4YmQyZmYsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICMwMDAsXG4gICAgMTAwOiAjMDAwLFxuICAgIDIwMDogIzAwMCxcbiAgICAzMDA6ICMwMDAsXG4gICAgNDAwOiAjMDAwLFxuICAgIDUwMDogIzAwMCxcbiAgICA2MDA6ICMwMDAsXG4gICAgNzAwOiAjMDAwLFxuICAgIDgwMDogIzAwMCxcbiAgICA5MDA6ICNmZmYsXG4gICAgQTEwMDogIzAwMCxcbiAgICBBMjAwOiAjMDAwLFxuICAgIEE0MDA6ICMwMDAsXG4gICAgQTcwMDogIzAwMCxcbiAgKSxcbik7XG5cbi8vIERlZmluZSB0aGUgcGFsZXR0ZXMgZm9yIHlvdXIgdGhlbWUgdXNpbmcgdGhlIE1hdGVyaWFsIERlc2lnbiBwYWxldHRlcyBhdmFpbGFibGUgaW4gcGFsZXR0ZS5zY3NzXG4vLyAoaW1wb3J0ZWQgYWJvdmUpLiBGb3IgZWFjaCBwYWxldHRlLCB5b3UgY2FuIG9wdGlvbmFsbHkgc3BlY2lmeSBhIGRlZmF1bHQsIGxpZ2h0ZXIsIGFuZCBkYXJrZXJcbi8vIGh1ZS5cbiRjbG91ZG5jLXByaW1hcnk6IG1hdC5kZWZpbmUtcGFsZXR0ZSgkcHJpbWFyeSk7XG4kY2xvdWRuYy1wcmltYXJ5LWxpZ2h0OiBtYXQuZGVmaW5lLXBhbGV0dGUoJHByaW1hcnktbGlnaHQpO1xuJGNsb3VkbmMtYWNjZW50OiBtYXQuZGVmaW5lLXBhbGV0dGUoJGFjY2VudCk7XG5cbi8vIHVzYWdlOiBtYXQuZ2V0LWNvbG9yLWZyb20tcGFsZXR0ZSgkY2xvdWRuYy1hY2NlbnQpIG9yIG1hdC5nZXQtY29sb3ItZnJvbS1wYWxldHRlKCRjbG91ZG5jLWFjY2VudCwgNjAwKVxuXG4vLyBUaGUgd2FybiBwYWxldHRlIGlzIG9wdGlvbmFsIChkZWZhdWx0cyB0byByZWQpLlxuJGNsb3VkbmMtZXJyb3I6IG1hdC5kZWZpbmUtcGFsZXR0ZShtYXQuJHJlZC1wYWxldHRlKTtcbiRjbG91ZG5jLXdhcm5pbmc6IG1hdC5kZWZpbmUtcGFsZXR0ZShtYXQuJGFtYmVyLXBhbGV0dGUpO1xuXG4kYnJhbmQtZm9udC1wcmltYXJ5LXJlZ3VsYXI6ICdUaXRpbGxpdW1XZWItUmVndWxhcicsIHNhbnMtc2VyaWY7XG4kYnJhbmQtZm9udC1wcmltYXJ5LXNlbWlib2xkOiAnVGl0aWxsaXVtV2ViLVNlbWlCb2xkJywgc2Fucy1zZXJpZjtcbiRicmFuZC1mb250LXByaW1hcnktYm9sZDogJ1RpdGlsbGl1bVdlYi1Cb2xkJywgc2Fucy1zZXJpZjtcbiRicmFuZC1mb250LXNlY29uZGFyeS1yZWd1bGFyOiAnUm9ib3RvLVJlZ3VsYXInLCBzYW5zLXNlcmlmO1xuJGJyYW5kLWZvbnQtc2Vjb25kYXJ5LWJvbGQ6ICdSb2JvdG8tQm9sZCcsIHNhbnMtc2VyaWY7XG4kYnJhbmQtZm9udC10ZXJ0aWFyeS1yZWd1bGFyOiAnVGltZXMgTmV3IFJvbWFuJywgc2Fucy1zZXJpZjtcbiRicmFuZC1mb250LW1vbm86IE1vbmFjbywgbW9ub3NwYWNlO1xuXG4kY2xvdWRuYy10eXBvZ3JhcGh5LXNlY29uZGFyeS1tYXA6IChcbiAgYm9keS1yZWd1bGFyOiBtYXQuZGVmaW5lLXR5cG9ncmFwaHktbGV2ZWwoMTZweCwgMjJweCwgNTAwLCAkYnJhbmQtZm9udC1zZWNvbmRhcnktcmVndWxhciksXG4gIGJvZHktc3Ryb25nOiBtYXQuZGVmaW5lLXR5cG9ncmFwaHktbGV2ZWwoMTZweCwgMjRweCwgNzAwLCAkYnJhbmQtZm9udC1zZWNvbmRhcnktYm9sZCksXG4pO1xuXG4vLyBEZWZpbmUgYSBjdXN0b20gdHlwb2dyYXBoeSBjb25maWcgdGhhdCBvdmVycmlkZXMgdGhlIGZvbnQtZmFtaWx5IGRlY2xhcmF0aW9uc1xuLy8gc3BlY2lmaWVkIGJ5IE1hdGVyaWFsIFRoZW1pbmcuXG4vLyBGb250IHNpemUgKGZpcnN0IGFyZ3VtZW50KSBhbmQgbGluZSBoZWlnaHQgKHNlY29uZCBhcmd1bWVudCkgZm9yIGVhY2ggdmFyaWFibGVcbi8vIGFyZSBkZXJpdmVkIGZyb20gdGhlIGRlc2lnbnMgc2V0IG91dCBieSBvdXIgRGVzaWduZXIuXG4kY2xvdWRuYy10eXBvZ3JhcGh5OiBtYXAtbWVyZ2UoXG4gIG1hdC5kZWZpbmUtbGVnYWN5LXR5cG9ncmFwaHktY29uZmlnKFxuICAgICRmb250LWZhbWlseTogJGJyYW5kLWZvbnQtcHJpbWFyeS1yZWd1bGFyLFxuICAgICRkaXNwbGF5LTE6IG1hdC5kZWZpbmUtdHlwb2dyYXBoeS1sZXZlbCg0MHB4LCA0OHB4LCA3MDAsICRicmFuZC1mb250LXByaW1hcnktYm9sZCksXG4gICAgJGRpc3BsYXktMjogbWF0LmRlZmluZS10eXBvZ3JhcGh5LWxldmVsKDMycHgsIDQwcHgsIDcwMCwgJGJyYW5kLWZvbnQtcHJpbWFyeS1ib2xkKSxcbiAgICAkZGlzcGxheS0zOiBtYXQuZGVmaW5lLXR5cG9ncmFwaHktbGV2ZWwoMjRweCwgMzJweCwgNzAwLCAkYnJhbmQtZm9udC1wcmltYXJ5LWJvbGQpLFxuICAgICRoZWFkbGluZTogbWF0LmRlZmluZS10eXBvZ3JhcGh5LWxldmVsKDIwcHgsIDI0cHgsIDcwMCwgJGJyYW5kLWZvbnQtcHJpbWFyeS1ib2xkKSxcbiAgICAkdGl0bGU6IG1hdC5kZWZpbmUtdHlwb2dyYXBoeS1sZXZlbCgxNnB4LCAyMXB4LCA3MDAsICRicmFuZC1mb250LXByaW1hcnktYm9sZCksXG4gICAgJGJ1dHRvbjogbWF0LmRlZmluZS10eXBvZ3JhcGh5LWxldmVsKDE2cHgsIDI0cHgsIDUwMCwgJGJyYW5kLWZvbnQtcHJpbWFyeS1yZWd1bGFyKSxcbiAgICAkYm9keS0xOiBtYXQuZGVmaW5lLXR5cG9ncmFwaHktbGV2ZWwoMTZweCwgMjRweCwgNTAwLCAkYnJhbmQtZm9udC1wcmltYXJ5LXJlZ3VsYXIpLFxuICAgICRib2R5LTI6IG1hdC5kZWZpbmUtdHlwb2dyYXBoeS1sZXZlbCgxNHB4LCAyMXB4LCA1MDAsICRicmFuZC1mb250LXByaW1hcnktcmVndWxhciksXG4gICksXG4gICRjbG91ZG5jLXR5cG9ncmFwaHktc2Vjb25kYXJ5LW1hcFxuKTtcblxuLy8gQ3JlYXRlIHRoZSB0aGVtZSBvYmplY3QgKGEgU2FzcyBtYXAgY29udGFpbmluZyBhbGwgb2YgdGhlIHBhbGV0dGVzKS5cbiRjbG91ZG5jLWJhc2UtdGhlbWU6IG1hdC5kZWZpbmUtZGFyay10aGVtZShcbiAgKFxuICAgIGNvbG9yOiAoXG4gICAgICBwcmltYXJ5OiAkY2xvdWRuYy1wcmltYXJ5LFxuICAgICAgYWNjZW50OiAkY2xvdWRuYy1hY2NlbnQsXG4gICAgICB3YXJuOiAkY2xvdWRuYy1lcnJvcixcbiAgICApLFxuICAgIHR5cG9ncmFwaHk6ICRjbG91ZG5jLXR5cG9ncmFwaHksXG4gIClcbik7XG4kY2xvdWRuYy1iYXNlLWxpZ2h0LXRoZW1lOiBtYXQuZGVmaW5lLWxpZ2h0LXRoZW1lKFxuICAoXG4gICAgY29sb3I6IChcbiAgICAgIHByaW1hcnk6ICRjbG91ZG5jLXByaW1hcnktbGlnaHQsXG4gICAgICBhY2NlbnQ6ICRjbG91ZG5jLWFjY2VudCxcbiAgICAgIHdhcm46ICRjbG91ZG5jLWVycm9yLFxuICAgICksXG4gICAgdHlwb2dyYXBoeTogJGNsb3VkbmMtdHlwb2dyYXBoeSxcbiAgKVxuKTtcblxuJGNsb3VkbmMtY3VzdG9tLWJnLWZnOiAoXG4gIGJhY2tncm91bmQ6XG4gICAgbWFwLW1lcmdlKFxuICAgICAgbWF0LiRkYXJrLXRoZW1lLWJhY2tncm91bmQtcGFsZXR0ZSxcbiAgICAgIChcbiAgICAgICAgYmFja2dyb3VuZDogJGJhY2tncm91bmQsXG4gICAgICAgIGNhcmQ6ICRiYWNrZ3JvdW5kLFxuICAgICAgICBkaWFsb2c6ICRiYWNrZ3JvdW5kLFxuICAgICAgICBhcHAtYmFyOiBkYXJrZW4oJGJhY2tncm91bmQsIDMlKSxcbiAgICAgIClcbiAgICApLFxuICBmb3JlZ3JvdW5kOlxuICAgIG1hcC1tZXJnZShcbiAgICAgIG1hdC4kZGFyay10aGVtZS1mb3JlZ3JvdW5kLXBhbGV0dGUsXG4gICAgICAoXG4gICAgICAgIG11dGVkLXRleHQ6IGxpZ2h0ZW4oJGJyYW5kLWRhcmtncmV5LCA1MCUpLFxuICAgICAgKVxuICAgICksXG4pO1xuXG4kY2xvdWRuYy1iYXNlLXRoZW1lLWN1c3RvbS0xc3QtbGV2ZWw6IG1hcC1tZXJnZSgkY2xvdWRuYy1iYXNlLXRoZW1lLCAkY2xvdWRuYy1jdXN0b20tYmctZmcpO1xuXG4kY2xvdWRuYy10aGVtZTogbWFwLW1lcmdlKFxuICAkY2xvdWRuYy1iYXNlLXRoZW1lLWN1c3RvbS0xc3QtbGV2ZWwsXG4gIChcbiAgICBjb2xvcjogbWFwLW1lcmdlKG1hcC5nZXQoJGNsb3VkbmMtYmFzZS10aGVtZS1jdXN0b20tMXN0LWxldmVsLCBjb2xvciksICRjbG91ZG5jLWN1c3RvbS1iZy1mZyksXG4gIClcbik7XG5cbiRjbG91ZG5jLWxpZ2h0LXRoZW1lOiBtYXAtbWVyZ2UoXG4gICRjbG91ZG5jLWJhc2UtbGlnaHQtdGhlbWUsXG4gIChcbiAgICBiYWNrZ3JvdW5kOlxuICAgICAgbWFwLW1lcmdlKFxuICAgICAgICBtYXQuJGxpZ2h0LXRoZW1lLWJhY2tncm91bmQtcGFsZXR0ZSxcbiAgICAgICAgKFxuICAgICAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kLWxpZ2h0LFxuICAgICAgICApXG4gICAgICApLFxuICApXG4pO1xuXG4kY2xvdWRuYy1mb3JlZ3JvdW5kOiBtYXAtZ2V0KCRjbG91ZG5jLXRoZW1lLCBmb3JlZ3JvdW5kKTtcbiRjbG91ZG5jLWJhY2tncm91bmQ6IG1hcC1nZXQoJGNsb3VkbmMtdGhlbWUsIGJhY2tncm91bmQpO1xuJGNsb3VkbmMtY3VzdG9tOiAoXG4gIGhpZ2hsaWdodDogbWF0LmdldC1jb2xvci1mcm9tLXBhbGV0dGUoJGFjY2VudCwgNDAwKSxcbiAgcHJvZ3Jlc3MtcG9zaXRpb24tcXVvdGluZzogI2YzMyxcbiAgcHJvZ3Jlc3MtcG9zaXRpb24tY2FtLXByb2dyYW1taW5nOiAjZmY3YzMzLFxuICBwcm9ncmVzcy1wb3NpdGlvbi1tYW51ZmFjdHVyaW5nOiAjMDhiNTU2LFxuICBwcm9ncmVzcy1wb3NpdGlvbi1iYXNlOiAjOTk5LFxuKTtcblxuJGJhY2tncm91bmQtbG9ja2VkOiBmYWRlX291dChcbiAgbWF0LmdldC1jb2xvci1mcm9tLXBhbGV0dGUoJGNsb3VkbmMtYmFja2dyb3VuZCwgYXBwLWJhciksXG4gIDAuMzVcbik7IC8vIEB0b2RvOiByZWZhY3RvciB0byB1c2UgYHNjYWxlLWNvbG9yKClgIGlmIHN0aWxsIHVzZWQ/XG4kYmFja2dyb3VuZC1sb2NrZWQtb3ZlcmxheTogJGJhY2tncm91bmQ7XG5cbi8vIERlZmluZSBicmVha3BvaW50cyBmb3IgbWVkaWEgcXVlcmllcywgYmFzZWQgb24gYSAnbWluLXdpZHRoJyBhcHByb2FjaFxuLy8gaS5lLiBkZXNpZ25lZCB0byBzY2FsZSB1cHdhcmRzIGZyb20gbW9iaWxlIHRocm91Z2ggdGFibGV0IGFuZCBkZXNrdG9wLlxuXG4vLyB1c2FnZTogQG1lZGlhICN7YnAtdGFibGV0fSB7IC4uLiB9XG4kYnAtdGFibGV0OiAnKG1pbi13aWR0aDogNzY4cHgpJztcbiRicC1kZXNrdG9wLXNtOiAnKG1pbi13aWR0aDogMTAyNHB4KSc7XG4kYnAtZGVza3RvcC1sZzogJyhtaW4td2lkdGg6IDEyMDBweCknO1xuXG4kbWF4LWJwLXRhYmxldDogJyhtYXgtd2lkdGg6IDc2N3B4KSc7XG4kbWF4LWJwLWRlc2t0b3Atc206ICcobWF4LXdpZHRoOiAxMDIzcHgpJztcblxuLy8gRGVmaW5lIGd1dHRlciBzaXplcyBzZXQgZm9yIG1vYmlsZSwgdGFibGV0IGFuZCBkZXNrdG9wLlxuJGd1dHRlci1tb2JpbGU6ICRncmlkLXNwYWNpbmctM3g7XG4kZ3V0dGVyLXRhYmxldDogJGdyaWQtc3BhY2luZy01eDtcblxuLy8gRGVmaW5lIGEgbWF4aW11bSB3aWR0aCBvZiB0aGUgd2lkZXN0IGNvbnRhaW5lciwgd2hpY2ggY29udGFpbnMgc2VjdGlvbiBjb250ZW50LlxuJGNvbnRhaW5lci1tYXgtd2lkdGg6IDEyMDBweDtcblxuLy8gRGVmaW5lIGEgdHlwb2dyYXBoeSBzdHlsZSBmb3IgdGhlIHB1YmxpYyBzaXRlIGluIGlzb2xhdGlvbiBzb1xuLy8gIHRoYXQgd2UgaGF2ZSBpbXByb3ZlZCBpbmRpdmlkdWFsIGNvbnRyb2xzIGZvciB3aGF0J3MgZGVjbGFyZWQgaGVyZVxuJGNsb3VkbmMtcHVibGljLXR5cG9ncmFwaHktb3ZlcnJpZGVzOiAoXG4gIGJvZHktcmVndWxhcjogbWF0LmRlZmluZS10eXBvZ3JhcGh5LWxldmVsKDE4cHgsIDI0cHgsIDUwMCwgJGJyYW5kLWZvbnQtc2Vjb25kYXJ5LXJlZ3VsYXIpLFxuKTtcblxuLy8gRGVmaW5lIGEgdmFyaWFibGUgZm9yIHRoaXMgdXNhZ2VcbiRjbG91ZG5jLXB1YmxpYy10eXBvZ3JhcGh5OiBtYXAtbWVyZ2UoJGNsb3VkbmMtdHlwb2dyYXBoeSwgJGNsb3VkbmMtcHVibGljLXR5cG9ncmFwaHktb3ZlcnJpZGVzKTtcblxuLy8gRGVmaW5lIGNvbG91cnMgZm9yIGNvb3JkaW5hdGUgdmFsdWVzIHVzZWQgdGhyb3VnaG91dCB0aGUgYXBwLlxuLy8gQ29sb3IgKHJnYikgdmFsdWVzIHRha2VuIGZyb20gcHJvamVjdHMvdmlzdWFsaXNlci9zcmMvbGliL3Zpc3VhbGlzZXIvc2ltdWxhdG9yL2Nvb3JkaW5hdGUtYnVpbGRlci50c1xuJGF4aXMteDogcmdiKDIyMSwgNjIsIDY2KTtcbiRheGlzLXk6IHJnYig2OSwgMjIxLCA2Mik7XG4kYXhpcy16OiByZ2IoNDAsIDg2LCAyMjEpO1xuXG4vLyBEZWZpbmUgd2lkdGhzIGZvciB0aGUgYmxvZyBwb3N0IGNvbnRhaW5lciBoZXJlLCBhcyB0aGVzZSB2YXJpYWJsZXMgYXJlIHVzZWQgY3Jvc3MtY29tcG9uZW50LlxuJGNvbnRhaW5lci1tYXgtd2lkdGgtdGFibGV0OiA3NjBweDtcbiRjb250YWluZXItbWF4LXdpZHRoLWRlc2t0b3A6IDgwMHB4O1xuXG4vLyBUaGUgZm9sbG93aW5nIGZvcm11bGEgY2Fubm90IGJlIHVzZWQsIGFzIHdlIGZvdW5kIENocm9tZSB0byBiZSBpbmFjY3VyYXRlIGluIGNvbXB1dGluZyB0aGUgb3V0cHV0IGFjY3VyYXRlbHlcbi8vIGkuZS4gc2xpZ2h0bHkgb2ZmIHdoYXQgd2UgZXhwZWN0ZWQuIFRoaXMgaXMgZHVlIHRvIGhvdyB0aGUgYnJvd3NlciBpcyBiZWluZyBpbnN0cnVjdGVkIHRvIGNhbGN1bGF0ZSB0aGUgaW5kaXZpZHVhbFxuLy8gY29sb3IgdmFsdWVzLiBXZSBkZWNpZGVkIHRvIGtlZXAgdGhpcyBmb3JtdWxhIGluIHRoZSBjb2RlYmFzZSBnaXZlbiB0aGF0IGl0IG1heSBwcm92ZSB0byBiZSB1c2VmdWwgaW4gdGhlIGZ1dHVyZS5cblxuLy8gSXNzdWUgcmVwb3J0ZWQgYXQ6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTk3MjY3MiZjYW49MiZxPWFscGhhJTIwY29tcG9zaXRpbmdcbi8vIGJ1dCB0aGUgZmVlZGJhY2sgaXMgV29udEZpeC5cblxuLy8gVGhlIGZvcm11bGEgZm9yIGNvbWJpbmluZyBDMSA9IChSMSxHMSxCMSkgYW5kIEMyID0gKFIyLEcyLEIyKSBpbnRvIGEgbmV3IGNvbG9yIEMzLFxuLy8gd2hlcmUgQzIgaXMgb3ZlcmxheWVkIG9uIHRvcCBvZiBDMSB3aXRoIG9wYWNpdHkgcCBpcyB1c3VhbGx5XG5cbi8vICggKDEtcClSMSArIHAqUjIsICgxLXApKkcxICsgcCpHMiwgKDEtcCkqQjEgKyBwKkIyICkuXG5cbi8vIEBmdW5jdGlvbiBjb21wdXRlT3BhY2l0eSgkZm9yZWdyb3VuZCwgJGJhY2tncm91bmQsICRvcGFjaXR5KSB7XG4vLyAgICRyMTogcmVkKCRiYWNrZ3JvdW5kKTtcbi8vICAgJGcxOiBncmVlbigkYmFja2dyb3VuZCk7XG4vLyAgICRiMTogYmx1ZSgkYmFja2dyb3VuZCk7XG5cbi8vICAgJHIyOiByZWQoJGZvcmVncm91bmQpO1xuLy8gICAkZzI6IGdyZWVuKCRmb3JlZ3JvdW5kKTtcbi8vICAgJGIyOiBibHVlKCRmb3JlZ3JvdW5kKTtcblxuLy8gICAvLyBAcmV0dXJuIHJnYihcbi8vICAgLy8gICAoMS0kb3BhY2l0eSkgKiAkcjEgKyAkb3BhY2l0eSAqICRyMixcbi8vICAgLy8gICAoMS0kb3BhY2l0eSkgKiAkZzEgKyAkb3BhY2l0eSAqICRnMixcbi8vICAgLy8gICAoMS0kb3BhY2l0eSkgKiAkYjEgKyAkb3BhY2l0eSAqICRiMlxuLy8gICAvLyApO1xuXG4vLyAgIEByZXR1cm4gdW5xdW90ZShcbi8vICAgICAncmdiKCN7KDEtJG9wYWNpdHkpICogJHIxICsgJG9wYWNpdHkgKiAkcjJ9LCN7KDEtJG9wYWNpdHkpICogJGcxICsgJG9wYWNpdHkgKiAkZzJ9LCN7KDEtJG9wYWNpdHkpICogJGIxICsgJG9wYWNpdHkgKiAkYjJ9KSdcbi8vICAgKTtcbi8vIH1cbi8vXG4vLyAudGVzdCB7XG4vLyAgIGNvbG9yOiBjb21wdXRlT3BhY2l0eSh3aGl0ZSwgJGJhY2tncm91bmQsIDAuMTUpO1xuLy8gfVxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\r\n```\r\n\r\nand for more context around that line:\r\n\r\n```\r\nclass DocumentViewerComponent {\r\n  static {\r\n    this.ɵfac = function DocumentViewerComponent_Factory(t) {\r\n      return new (t || DocumentViewerComponent)();\r\n    };\r\n  }\r\n  static {\r\n    this.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵdefineComponent\"]({\r\n      type: DocumentViewerComponent,\r\n      selectors: [[\"cnc-document-viewer\"]],\r\n      inputs: {\r\n        selectedDocument: \"selectedDocument\"\r\n      },\r\n      decls: 3,\r\n      vars: 2,\r\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultView\", \"\"], [1, \"filename-title\"], [\"svgIcon\", \"cnc:file\", 1, \"filename-icon\"], [\"mat-stroked-button\", \"\", \"color\", \"accent\", 3, \"cncDownload\", \"filename\"], [\"svgIcon\", \"cnc:download-cloud\"], [4, \"cncNgLet\"], [\"class\", \"pdf-viewer-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"pdf-viewer-container\"], [\"theme\", \"dark\", \"useBrowserLocale\", \"true\", \"height\", \"80vh\", 3, \"src\", \"textLayer\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [\"theme\", \"dark\", \"useBrowserLocale\", \"true\", \"height\", \"80vh\", 3, \"src\", \"textLayer\"], [\"status\", \"Loading PDF...\"], [3, \"src\", 4, \"ngIf\"], [3, \"src\"], [\"type\", \"info\"]],\r\n      template: function DocumentViewerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplate\"](0, DocumentViewerComponent_ng_container_0_Template, 11, 16, \"ng-container\", 0);\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplate\"](1, DocumentViewerComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplateRefExtractor\"]);\r\n        }\r\n        if (rf & 2) {\r\n          const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵreference\"](2);\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵproperty\"](\"ngIf\", ctx.selectedDocument)(\"ngIfElse\", _r1);\r\n        }\r\n      },\r\n      dependencies: [_angular_material_icon__WEBPACK_IMPORTED_MODULE_8__.MatIcon, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _angular_material_legacy_button__WEBPACK_IMPORTED_MODULE_10__.MatLegacyButton, _ui_loader_loader_component__WEBPACK_IMPORTED_MODULE_0__.CuiLoaderComponent, _ui_message_message_component__WEBPACK_IMPORTED_MODULE_1__.CuiMessageComponent, _core_browser_files_file_download_directive__WEBPACK_IMPORTED_MODULE_2__.FileDownloadDirective, ngx_extended_pdf_viewer__WEBPACK_IMPORTED_MODULE_11__.NgxExtendedPdfViewerComponent, _core_browser_directives_ng_let_directive__WEBPACK_IMPORTED_MODULE_3__.NgLetDirective, _default_view_default_view_component__WEBPACK_IMPORTED_MODULE_4__.DefaultViewComponent, _ngrx_component__WEBPACK_IMPORTED_MODULE_12__.PushPipe, _core_browser_pipes_is_file_type_pipe__WEBPACK_IMPORTED_MODULE_5__.IsFileTypePipe, _get_document_link_pipe__WEBPACK_IMPORTED_MODULE_6__.GetDocumentLinkPipe],\r\n      styles: [...], // same as already pasted above, I'm saving some space to avoid cluttering\r\n      changeDetection: 0\r\n    });\r\n  }\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nNone I'm afraid\n\n### Please provide the exception or error you saw\n\n```true\nError: Optimization error [main.b856787215841021.js]: Error: Transform failed with 1 error:\r\nmain.b856787215841021.js:22080:5: ERROR: Expected identifier but found \"=\"\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.4\r\nNode: 16.14.2\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/material               15.0.3\r\n@schematics/angular             15.0.4\r\nng-packagr                      15.0.3\r\nrxjs                            7.6.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\nIt used to work just fine but seem to be broken after ng 15 upgrade","Url":"https://github.com/angular/angular/issues/48537","RelatedDescription":"Open issue \"ERROR: Expected identifier but found \"=\"\" (#48537)"},{"Id":"1503036635","IsPullRequest":false,"CreatedAt":"2022-12-19T14:14:56","Actor":"tanb33r","Number":"48536","RawContent":null,"Title":"Changes of files are not clear","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nangular.io/start/\r\n\r\n### Description\r\n\r\nIn each step, changes in files are not precise, and one might miss some changes,\r\nAlso, other lines are hidden, so it's unclear whether I should remove other lines.\r\n\r\n### Proposed solution\r\n\r\nHighlight the line changes in each file\r\n\r\n### Alternatives considered\r\n\r\nGitHub Repos of all stages","Url":"https://github.com/angular/angular/issues/48536","RelatedDescription":"Open issue \"Changes of files are not clear\" (#48536)"},{"Id":"1502956738","IsPullRequest":true,"CreatedAt":"2022-12-19T13:28:04","Actor":"crisbeto","Number":"48535","RawContent":null,"Title":"feat(compiler): allow self-closing tags","State":"open","Body":"Adds support for self-closing tags in the compiler. E.g. now developers can write `<foo [someInput]=\"bar\"/>` instead of `<foo [someInput]=\"bar\"></foo>`.\r\n\r\nFixes #39525.","Url":"https://github.com/angular/angular/pull/48535","RelatedDescription":"Open PR \"feat(compiler): allow self-closing tags\" (#48535)"},{"Id":"1501816421","IsPullRequest":false,"CreatedAt":"2022-12-19T08:46:53","Actor":"jchapelle","Number":"48528","RawContent":null,"Title":"Template rendering error handling","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon, core\r\n\r\n### Description\r\n\r\nIt would be very useful to be able to catch html/view rendering issue via hook lifecycle method.\r\nThis would allow to react on unexpected issue without breaking the component or the whole app.\r\nThis request is for an equivalent to React 'componentDidCatch' or 'getDerivedStateFromError' hooks.\r\n\r\n### Proposed solution\r\n\r\nAdd a 'ngOnViewError' hook lifecycle method to catch rendering issue.\r\n\r\n\r\n### Alternatives considered\r\n\r\nNot applicable","Url":"https://github.com/angular/angular/issues/48528","RelatedDescription":"Closed issue \"Template rendering error handling\" (#48528)"},{"Id":"1502475760","IsPullRequest":true,"CreatedAt":"2022-12-19T07:59:35","Actor":"AleksanderBodurri","Number":"48533","RawContent":null,"Title":"feat(devtools): create demo application that uses standalone APIs/components/directives/pipes","State":"open","Body":"The existing DevTools demo app that is used for developing on DevTools is exclusively an NgModule application. This commit creates a copy of the old demo app but with no NgModules and only standalone APIs/Components/Directives/Pipes.\r\n\r\nIn the future this will lets us run tests against applications that both use and do not use NgModules. In the present it serves as a convenient playground for developing new debug APIs in an NgModule-less application.\r\n\r\n","Url":"https://github.com/angular/angular/pull/48533","RelatedDescription":"Open PR \"feat(devtools): create demo application that uses standalone APIs/components/directives/pipes\" (#48533)"},{"Id":"1502164854","IsPullRequest":false,"CreatedAt":"2022-12-19T01:56:41","Actor":"damingerdai","Number":"48532","RawContent":null,"Title":"detective-postcss need update to 5.1.3","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nwhen i try to run `yarn` in my local to build the source code, i find the issue\r\n```\r\nerror detective-postcss@5.1.1: The engine \"node\" is incompatible with this module. Expected version \"12.x || 14.x || 16.x\". Got \"18.12.0\"\r\nerror Found incompatible module.\r\n```\r\n\r\nnow i use ` yarn config set ignore-engines true` to fix the issue, but i think we need upgrade `detective-postcss` lastest version to support node18\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48532","RelatedDescription":"Open issue \"detective-postcss need update to 5.1.3\" (#48532)"},{"Id":"1502011919","IsPullRequest":true,"CreatedAt":"2022-12-18T19:50:55","Actor":"JeanMeche","Number":"48531","RawContent":null,"Title":"fix(forms): remove deprecated support for ngModel on reactive form directives","State":"open","Body":"fix(forms): remove deprecated support for ngModel on reactive form directives\r\n\r\nBREAKING CHANGE:\r\n\r\nIn v6, we deprecated support for the ngModel and ngModelChange inputs on\r\nreactive form directives. We are now removing these deprecated APIs for\r\nv16. See the original change here for more info on why:\r\n#22633.\r\n\r\nThis PR is mostly a cherry-pick of @AndrewKushnir 's #38849. This has been tried for v11, and for v8 before (#28996). \r\n\r\nHave things moved on since the release of v11 ?  \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes","Url":"https://github.com/angular/angular/pull/48531","RelatedDescription":"Open PR \"fix(forms): remove deprecated support for ngModel on reactive form directives\" (#48531)"},{"Id":"1501935133","IsPullRequest":true,"CreatedAt":"2022-12-18T15:03:16","Actor":"angular-robot","Number":"48530","RawContent":null,"Title":"build: update dependency @rollup/plugin-commonjs to v24","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | peerDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.7/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | dependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.0/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | devDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.0/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | devDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.7/24.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/plugins</summary>\n\n### [`v24.0.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/commonjs/CHANGELOG.md#v2400)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/62d68273ac2a28e09117c78deef925d424e6fef7...c4c26a55f07a434d6d9c276709526d18bf736c72)\n\n*2022-12-18*\n\n##### Breaking Changes\n\n-   fix: check if defaultIsModuleExports is auto for getDefaultExportFromCjs [#&#8203;1358](https://togithub.com/rollup/plugins/pull/1358)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48530","RelatedDescription":"Open PR \"build: update dependency @rollup/plugin-commonjs to v24\" (#48530)"},{"Id":"1501933854","IsPullRequest":true,"CreatedAt":"2022-12-18T15:00:30","Actor":"Berbe","Number":"48529","RawContent":null,"Title":"fix(http): Set Accept based on responseType","State":"open","Body":"Fix how the Accept HTTP header is handled.\r\nSet the Accept header based on the response\r\nType field to ensure HTTP response consistency per RFC\r\nJSON -> `application/json`\r\nText -> `text/plain`\r\nOther -> `*/*`\r\n\r\nFixes #48505\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #48505\r\n\r\n\r\n## What is the new behavior?\r\nSet `Accept` HTTP header based on `responseType`\r\n\r\n## Does this PR introduce a breaking change?\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48529","RelatedDescription":"Open PR \"fix(http): Set Accept based on responseType\" (#48529)"},{"Id":"1501348221","IsPullRequest":false,"CreatedAt":"2022-12-18T13:02:51","Actor":"Gnyblast","Number":"48523","RawContent":null,"Title":"Setting variable value from UntypedFormControl Element value creates a pointer (two way binding) for Arrays.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm having the class variable declaration for an array object as below:\r\n```\r\npublic clients: number[] = []\r\n```\r\n\r\nthen in the `contructor` of the component I'm passing an `UntypedFormGroup` then in the `ngOnInit` setting this `clients` variable value from the form as below:\r\n```\r\nngOnInit(): void {\r\n    this.clients = this.form.controls.clients.value\r\n```\r\n\r\n`clients` variable is also bound to a `select` element with `ngModel` two way binding\r\n```\r\n<mat-select multiple [(ngModel)]=\"clients\">\r\n    <mat-option *ngFor=\"let client of clients\" [value]=\"client\">\r\n        {{client}}\r\n    </mat-option>\r\n</mat-select>\r\n```\r\nI use this `select` element to remove items from `clients` array and another input element push new item to this `clients` array\r\n```\r\npublic setNewClient(client: MatAutocompleteSelectedEvent): void {\r\n    this.clients.push(client.option.value)\r\n    this.clientSeachInput = \"\"\r\n    this.setClientAutoCompleteEmpty()\r\n}\r\n```\r\n\r\nProblem starts here: Whenever I change the value of `clients` variable it directly gets reflected to 'this.form.controls.clients.value` without calling any set command for it.\r\n\r\nBut if I use the below code on `ngOnInit`\r\n```\r\nngOnInit(): void {\r\n    this.clients = new Array().concat(this.form.controls.clients.value)\r\n```\r\n\r\nEverything works well and breaks the two way binding of this `clients` variable to the `this.form.controls.clients.value` which is actually makes no-sense to have there a pointer binding.\n\n### Please provide a link to a minimal reproduction of the bug\n\nIt's my local development environment.\n\n### Please provide the exception or error you saw\n\n```true\nThere is not exception it's a functional bug.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.0.7\r\nNode: 16.18.1\r\nPackage Manager: npm 8.19.2 \r\nOS: linux x64\r\n\r\nAngular: 14.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.3\r\n@angular-devkit/build-angular   14.2.3\r\n@angular-devkit/core            14.2.3\r\n@angular-devkit/schematics      14.0.7\r\n@angular/cli                    14.0.7\r\n@angular/fire                   7.4.1\r\n@angular/flex-layout            14.0.0-beta.40\r\n@angular/material               14.2.2\r\n@schematics/angular             14.0.7\r\nrxjs                            7.5.6\r\ntypescript                      4.7.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48523","RelatedDescription":"Closed issue \"Setting variable value from UntypedFormControl Element value creates a pointer (two way binding) for Arrays.\" (#48523)"},{"Id":"1501620351","IsPullRequest":true,"CreatedAt":"2022-12-17T22:20:47","Actor":"JeanMeche","Number":"48527","RawContent":null,"Title":"refactor(common): remove unnecessary parseFloat from ng_optimized_ima…","State":"open","Body":"refactor(common): remove unnecessary parseFloat from ng_optimized_image directive.\r\n\r\nThere is no need to parse clientWidth/clientHeight/naturalWidth/naturalHeight on HTMLImageElement as there is no sign of other types being returned on everygreen browers.\r\n\r\nThis was already suggested on PR #48036. \r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48527","RelatedDescription":"Open PR \"refactor(common): remove unnecessary parseFloat from ng_optimized_ima…\" (#48527)"},{"Id":"1501441216","IsPullRequest":true,"CreatedAt":"2022-12-17T15:20:29","Actor":"JeanMeche","Number":"48526","RawContent":null,"Title":"fix(forms): Form provider FormsModule.withConfig return a FormsModule","State":"open","Body":"Because of a transitive dependency, FormsModule.withConfig wasn't providing FormModule.\r\n\r\nfixes: #48519\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/48526","RelatedDescription":"Open PR \"fix(forms): Form provider FormsModule.withConfig return a FormsModule\" (#48526)"},{"Id":"1501394669","IsPullRequest":true,"CreatedAt":"2022-12-17T13:33:33","Actor":"SmashedFrenzy16","Number":"48525","RawContent":null,"Title":"Reformat And Make README.md better","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThis is a commit that makes some grammatical and formatting changes.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nREADME.md more clear.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nGrammatical and format change.","Url":"https://github.com/angular/angular/pull/48525","RelatedDescription":"Open PR \"Reformat And Make README.md better\" (#48525)"},{"Id":"1501376040","IsPullRequest":false,"CreatedAt":"2022-12-17T12:53:24","Actor":"rothsandro","Number":"48524","RawContent":null,"Title":"CSS Selector with umlaut broken in production mode with emulated view encapsulation ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nEncapsulated styles using CSS class selectors with umlauts don't work properly in production mode. The compiler inserts the ngcontent placeholder after the umlaut and breaks the selector.\r\n\r\nIt works in development mode.\r\nIt works when using no encapsulation or Shadow DOM.\r\n\r\nThe bug does not occur for all words, some examples:\r\n\r\n- ❌ `.über {}` => `.\\fc[_ngcontent-fji-c1]   ber[_ngcontent-fji-c1] {}` \r\n- ❌ `.prüfung {}` => `.pr\\fc[_ngcontent-fji-c1]   fung[_ngcontent-fji-c1] {}` \r\n- ✅ `.zufällig {}` => `.zuf\\e4llig[_ngcontent-fji-c1] {}`\r\n\r\n<img width=\"1068\" alt=\"css-umlauts\" src=\"https://user-images.githubusercontent.com/16229645/208242873-12a7a05c-dadc-4365-a1bd-e1bf757f692c.png\">\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nRepo: https://github.com/rothsandro/repro.ng-css-umlauts  \r\nDeployed: https://leafy-starburst-2edda1.netlify.app/\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@schematics/angular             15.0.4\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48524","RelatedDescription":"Open issue \"CSS Selector with umlaut broken in production mode with emulated view encapsulation \" (#48524)"},{"Id":"1501281597","IsPullRequest":false,"CreatedAt":"2022-12-17T08:57:43","Actor":"kannanwisen","Number":"48522","RawContent":null,"Title":"Styling precedence ","State":"open","Body":"### Describe the problem that you experienced\n\nI think, the explanation under Styling precedence Heading is inappropriate. \n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/class-binding#styling-precedence\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/48522","RelatedDescription":"Open issue \"Styling precedence \" (#48522)"},{"Id":"1500923919","IsPullRequest":true,"CreatedAt":"2022-12-16T21:56:45","Actor":"arturovt","Number":"48520","RawContent":null,"Title":"docs: add Artur Androsovych to GDE resources","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/48520","RelatedDescription":"Open PR \"docs: add Artur Androsovych to GDE resources\" (#48520)"},{"Id":"1500516042","IsPullRequest":false,"CreatedAt":"2022-12-16T16:28:19","Actor":"LoganDupont","Number":"48519","RawContent":null,"Title":"Can't bind to 'ngModel' since it isn't a known property of 'input' when configuring the forms module","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen configuring the forms module by using `withConfig()` we receive an error on the 'ngModel' `Can't bind to 'ngModel' since it isn't a known property of 'input'`. If we remove `withConfig()` in the module file everything is fine.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-u7xib1?file=src/app/app.module.ts\n\n### Please provide the exception or error you saw\n\n```true\nCan't bind to 'ngModel' since it isn't a known property of 'input'.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48519","RelatedDescription":"Open issue \"Can't bind to 'ngModel' since it isn't a known property of 'input' when configuring the forms module\" (#48519)"},{"Id":"1500372933","IsPullRequest":true,"CreatedAt":"2022-12-16T14:59:36","Actor":"eneajaho","Number":"48518","RawContent":null,"Title":"docs: change Style 05-04 lines number from 3 to 30","State":"open","Body":"Having to extract templates and styles into a separate file when there are more than 3 lines is not right I'd say. Today IDE-s are powerful enough and have support for multi lines in single file components.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48518","RelatedDescription":"Open PR \"docs: change Style 05-04 lines number from 3 to 30\" (#48518)"},{"Id":"1500335961","IsPullRequest":false,"CreatedAt":"2022-12-16T14:37:07","Actor":"AlexElin","Number":"48517","RawContent":null,"Title":"docs: Provide an example of non-CLI environment","State":"open","Body":"### Describe the problem that you experienced\n\nThe [docs](https://angular.io/guide/testing-components-scenarios#calling-compilecomponents) contain the sentence:\r\n> If you run tests in a non-CLI environment, the tests might fail with a message like this one:\r\n\r\nI think it would be helpful to provide 1-2 examples of non-cli environemnts. So the sentence will look like this:\r\n\"If you run tests in a non-CLI environment (e,g, {example_of_the_such_environment}), the tests might fail with a message like this one:\"\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/testing-components-scenarios#calling-compilecomponents\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/48517","RelatedDescription":"Open issue \"docs: Provide an example of non-CLI environment\" (#48517)"},{"Id":"1500165471","IsPullRequest":false,"CreatedAt":"2022-12-16T12:57:26","Actor":"robvaneck","Number":"48516","RawContent":null,"Title":"Add type casting in the template for a Reactive Form","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n14\r\n\r\n### Description\r\n\r\nI'm always struggling with angular reactive forms in the HTML, because the compiler gives me \r\n```Property 'controls' does not exist on type 'AbstractControl```\r\n\r\n```\r\n        <form [formGroup]=\"form\" novalidate>\r\n            <div formArrayName=\"arr\">\r\n<!-- i already cast formArray, to solve the first issue of AbstractControl```\r\n                <ng-container *ngFor=\"let formGroup of formArray.controls; let i = index\">\r\n                    <div [formGroupName]=\"i\" class=\"section\">\r\n                        <h3>{{ apps[i].name }}</h3>\r\n                        <ng-container *ngFor=\"let field of fields[i]; let j = index\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"w-40\">\r\n                                    <label>\r\n                                        {{ 'setup.number_of' | translate }}\r\n                                        {{ fields[i][j].label }}\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"w-60\">\r\n<!-- but inside my formGroup loop... i have to use $any.... else i will get the AbstractControl issue -->\r\n                                    <opt-number-input [control]=\"$any(formGroup).controls[fields[i][j].name]\"></opt-number-input>\r\n                                    <opt-form-errors [control]=\"$any(formGroup).controls[fields[i][j].name]\"></opt-form-errors>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </form>\r\n\r\n```\r\n\r\nI dont want to use ```formControlName```, because then I have to implement ControlValueAccessor to each wrapper component that just holds and ```input``` ... so thats why I use ```[control]```\r\n\r\nI cant use a ```get``` inside the formGroup loop, because you cant pass variables to a getter.\r\n\r\nI also cant use ```['controls']``` as work around, because this will give me strict template check errors\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\n\r\nA solution would be if we could cast variables from AbstractControl to FormGroup, FormArray in the template, eg.\r\n\r\n```<ng-container *ngFor=\"let formGroup of $formArray(form.controls.arr).controls; let i = index\">```\r\n\r\n```<opt-form-errors [control]=\"$formGroup(formGroup).controls[fields[i][j].name]\"></opt-form-errors>```\r\n\r\n\r\n### Alternatives considered\r\n\r\nReactive Forms type checking in the template, should use FormArray, FormGroup, FormContorl. And not use AbstractControl.","Url":"https://github.com/angular/angular/issues/48516","RelatedDescription":"Open issue \"Add type casting in the template for a Reactive Form\" (#48516)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1502886259","IsPullRequest":true,"CreatedAt":"2022-12-19T12:42:08","Actor":"alan-agius4","Number":"24455","RawContent":null,"Title":"docs: remove default project from schematic description","State":"open","Body":"The default project is deprecated.\r\n","Url":"https://github.com/angular/angular-cli/pull/24455","RelatedDescription":"Open PR \"docs: remove default project from schematic description\" (#24455)"},{"Id":"1502539038","IsPullRequest":false,"CreatedAt":"2022-12-19T08:42:32","Actor":"erqk","Number":"24454","RawContent":null,"Title":"Styles import order in angular.json","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI would like to make styles import in angular.json follow the order they are listed. My styles.scss is loaded before any other third party styles, although it was last item in the array .This is important for me because I need to override the styles of third party package. \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/64851043/208383172-0c2a0ab4-f692-4d4c-810d-6ccf8aada131.png)\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.0.4        \r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/flex-layout            14.0.0-beta.41\r\n@schematics/angular             15.0.4\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24454","RelatedDescription":"Open issue \"Styles import order in angular.json\" (#24454)"},{"Id":"1502486713","IsPullRequest":true,"CreatedAt":"2022-12-19T08:06:29","Actor":"angular-robot","Number":"24453","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24453","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24453)"},{"Id":"1501519988","IsPullRequest":false,"CreatedAt":"2022-12-18T08:06:15","Actor":"gitHubUser151","Number":"24452","RawContent":null,"Title":"Angular CLI is not installing","State":"closed","Body":"### Command\r\n\r\nversion\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nCLI is not installing. Gives following output.\r\nCould you please take a look?\r\n\r\nC:\\WINDOWS\\system32>npm install -g @angular/cli\r\nnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fs\r\nnpm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead\r\n\r\nchanged 232 packages, and audited 233 packages in 23s\r\n\r\n26 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 0 vulnerabilities\r\n\r\nC:\\WINDOWS\\system32>ng help\r\n'ng' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\nC:\\WINDOWS\\system32>node -v\r\nv18.12.1\r\n\r\n### Minimal Reproduction\r\n\r\nnpm install -g @angular/cli\r\n\r\n### Exception or Error\r\n\r\nnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fs\r\nnpm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead\r\n\r\n### Your Environment\r\n\r\n```text\r\nMicrosoft Windows [Version 10.0.19045.2364]\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24452","RelatedDescription":"Closed issue \"Angular CLI is not installing\" (#24452)"},{"Id":"1501375743","IsPullRequest":false,"CreatedAt":"2022-12-17T16:12:08","Actor":"JemiloII","Number":"24451","RawContent":null,"Title":"Angular CLI Not working with Typescript 4.9.4","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCan we stop omitting minor versions? These are supposed to be bug fixes.\r\n\r\nTypescript 4.9.4 is out, but cli doesn't want to work unless I downgrade to 4.9.0\r\n\r\nFix this to include all minor versions.\n\n### Minimal Reproduction\n\nJust install typescript 4.9.4\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nIssues will happen on any OS\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24451","RelatedDescription":"Closed issue \"Angular CLI Not working with Typescript 4.9.4\" (#24451)"},{"Id":"1501278469","IsPullRequest":true,"CreatedAt":"2022-12-17T08:44:12","Actor":"crisbeto","Number":"24450","RawContent":null,"Title":"refactor(@ngtools/webpack): remove TypeScript 4.7 compatibility code","State":"open","Body":"Support for TypeScript 4.7 was dropped in Angular version 15. These changes remove some code that was used for backwards compatibility.","Url":"https://github.com/angular/angular-cli/pull/24450","RelatedDescription":"Open PR \"refactor(@ngtools/webpack): remove TypeScript 4.7 compatibility code\" (#24450)"},{"Id":"1500393158","IsPullRequest":true,"CreatedAt":"2022-12-17T06:45:34","Actor":"aanchal88","Number":"24447","RawContent":null,"Title":"test: removed empty methods","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24447","RelatedDescription":"Closed or merged PR \"test: removed empty methods\" (#24447)"},{"Id":"1501221375","IsPullRequest":true,"CreatedAt":"2022-12-17T06:44:50","Actor":"aanchal88","Number":"24449","RawContent":null,"Title":"test: removed empty methods","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24449","RelatedDescription":"Open PR \"test: removed empty methods\" (#24449)"},{"Id":"1500594133","IsPullRequest":false,"CreatedAt":"2022-12-16T19:08:24","Actor":"pain0486","Number":"24448","RawContent":null,"Title":"Branch coverage is broken after upgrading to angular 14","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n^13.3.11\n\n### Description\n\nAfter upgrading to angular 14 all tests pass, however the branch coverage reporting is reporting weird coverage issues around constructors similar to issues I have found when users were upgrading to angular 4 found [here](https://github.com/angular/angular-cli/issues/5526#issuecomment-324429322)\r\n\r\nhere are some examples\r\n![MicrosoftTeams-image (1)](https://user-images.githubusercontent.com/11378706/208153697-c152b913-70ce-4ab7-b043-c355ba7934ef.png)\r\n![MicrosoftTeams-image (2)](https://user-images.githubusercontent.com/11378706/208153702-871fc7ca-16ab-4c95-ac65-c6cb6afc912d.png)\r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/11378706/208153706-74a1d679-a116-4f5d-96f2-2f7334c1c229.png)\r\n\n\n### Minimal Reproduction\n\nng test --browsers=ChromeHeadless --no-watch --progress=false\r\nresults in 87.47% coverage where it was 100% before doing the upgrade\r\n=============================== Coverage summary ===============================\r\nStatements   : 100% ( 831/831 )\r\nBranches     : 87.47% ( 433/495 )\r\nFunctions    : 100% ( 228/228 )\r\nLines        : 100% ( 812/812 )\n\n### Exception or Error\n\n```text\nNo errors\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 14.2.10\r\nNode: 18.12.1 (Unsupported)\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    14.2.7\r\n@angular/cli                    14.2.10\r\n@angular/flex-layout            14.0.0-beta.41\r\n@angular/material               14.2.7\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24448","RelatedDescription":"Closed issue \"Branch coverage is broken after upgrading to angular 14\" (#24448)"},{"Id":"1500290664","IsPullRequest":true,"CreatedAt":"2022-12-16T16:25:45","Actor":"aanchal88","Number":"24446","RawContent":null,"Title":"Update: removed unused code","State":"closed","Body":"## PR Checklist\n\nPlease check to confirm your PR fulfills the following requirements:\n\n<!-- Please check all that apply using \"x\". -->\n\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n## PR Type\n\nWhat kind of change does this PR introduce?\n\n<!-- Please check the one that applies to this PR using \"x\". -->\n\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, local variables)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] CI related changes\n- [ ] Documentation content changes\n- [ ] Other... Please describe:\n\n## What is the current behavior?\n\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\n\nIssue Number: N/A\n\n## What is the new behavior?\n\n<!-- Please describe the new behavior that. -->\n\n## Does this PR introduce a breaking change?\n\n- [ ] Yes\n- [ ] No\n\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\n\n## Other information\n","Url":"https://github.com/angular/angular-cli/pull/24446","RelatedDescription":"Closed or merged PR \"Update: removed unused code\" (#24446)"},{"Id":"1499654115","IsPullRequest":true,"CreatedAt":"2022-12-16T06:05:33","Actor":"angular-robot","Number":"24445","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.46.1/5.47.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.46.1/5.47.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild/0.16.7/0.16.10) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild/0.16.7/0.16.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.7/0.16.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.7/0.16.10) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.29.0` -> `8.30.0`](https://renovatebot.com/diffs/npm/eslint/8.29.0/8.30.0) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.6.0` -> `~7.8.0`](https://renovatebot.com/diffs/npm/rxjs/7.6.0/7.8.0) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.56.2` -> `1.57.1`](https://renovatebot.com/diffs/npm/sass/1.56.2/1.57.1) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.56.2` -> `1.57.1`](https://renovatebot.com/diffs/npm/sass/1.56.2/1.57.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[no-floating-promises] add suggestion fixer to add an 'await' ([#&#8203;5943](https://togithub.com/typescript-eslint/typescript-eslint/issues/5943)) ([9e35ef9](https://togithub.com/typescript-eslint/typescript-eslint/commit/9e35ef9af3ec51ab2dd49336699f3a94528bb4b1))\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.10`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01610)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.9...v0.16.10)\n\n-   Change the default \"legal comment\" behavior again ([#&#8203;2745](https://togithub.com/evanw/esbuild/issues/2745))\n\n    The legal comments feature automatically gathers comments containing `@license` or `@preserve` and puts the comments somewhere (either in the generated code or in a separate file). This behavior used to be on by default but was disabled by default in version 0.16.0 because automatically inserting comments is potentially confusing and misleading. These comments can appear to be assigning the copyright of your code to another entity. And this behavior can be especially problematic if it happens automatically by default since you may not even be aware of it happening. For example, if you bundle the TypeScript compiler the preserving legal comments means your source code would contain this comment, which appears to be assigning the copyright of all of your code to Microsoft:\n\n    ```js\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */\n    ```\n\n    However, people have asked for this feature to be re-enabled by default. To resolve the confusion about what these comments are applying to, esbuild's default behavior will now be to attempt to describe which package the comments are coming from. So while this feature has been re-enabled by default, the output will now look something like this instead:\n\n    ```js\n    /*! Bundled license information:\n\n    typescript/lib/typescript.js:\n      (*! *****************************************************************************\n      Copyright (c) Microsoft Corporation. All rights reserved.\n      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n      this file except in compliance with the License. You may obtain a copy of the\n      License at http://www.apache.org/licenses/LICENSE-2.0\n\n      THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n      KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n      WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n      MERCHANTABLITY OR NON-INFRINGEMENT.\n\n      See the Apache Version 2.0 License for specific language governing permissions\n      and limitations under the License.\n      ***************************************************************************** *)\n    */\n    ```\n\n    Note that you can still customize this behavior with the `--legal-comments=` flag. For example, you can use `--legal-comments=none` to turn this off, or you can use `--legal-comments=linked` to put these comments in a separate `.LEGAL.txt` file instead.\n\n-   Enable `external` legal comments with the transform API ([#&#8203;2390](https://togithub.com/evanw/esbuild/issues/2390))\n\n    Previously esbuild's transform API only supported `none`, `inline`, or `eof` legal comments. With this release, `external` legal comments are now also supported with the transform API. This only applies to the JS and Go APIs, not to the CLI, and looks like this:\n\n    -   JS:\n\n        ```js\n        const { code, legalComments } = await esbuild.transform(input, {\n          legalComments: 'external',\n        })\n        ```\n\n    -   Go:\n\n        ```go\n        result := api.Transform(input, api.TransformOptions{\n          LegalComments: api.LegalCommentsEndOfFile,\n        })\n        code := result.Code\n        legalComments := result.LegalComments\n        ```\n\n-   Fix duplicate function declaration edge cases ([#&#8203;2757](https://togithub.com/evanw/esbuild/issues/2757))\n\n    The change in the previous release to forbid duplicate function declarations in certain cases accidentally forbid some edge cases that should have been allowed. Specifically duplicate function declarations are forbidden in nested blocks in strict mode and at the top level of modules, but are allowed when they are declared at the top level of function bodies. This release fixes the regression by re-allowing the last case.\n\n-   Allow package subpaths with `alias` ([#&#8203;2715](https://togithub.com/evanw/esbuild/issues/2715))\n\n    Previously the names passed to the `alias` feature had to be the name of a package (with or without a package scope). With this release, you can now also use the `alias` feature with package subpaths. So for example you can now create an alias that substitutes `@org/pkg/lib` with something else.\n\n### [`v0.16.9`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0169)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.8...v0.16.9)\n\n-   Update to Unicode 15.0.0\n\n    The character tables that determine which characters form valid JavaScript identifiers have been updated from Unicode version 14.0.0 to the newly-released Unicode version 15.0.0. I'm not putting an example in the release notes because all of the new characters will likely just show up as little squares since fonts haven't been updated yet. But you can read https://www.unicode.org/versions/Unicode15.0.0/#Summary for more information about the changes.\n\n-   Disallow duplicate lexically-declared names in nested blocks and in strict mode\n\n    In strict mode or in a nested block, it's supposed to be a syntax error to declare two symbols with the same name unless all duplicate entries are either `function` declarations or all `var` declarations. However, esbuild was overly permissive and allowed this when duplicate entries were either `function` declarations or `var` declarations (even if they were mixed). This check has now been made more restrictive to match the JavaScript specification:\n\n    ```js\n    // JavaScript allows this\n    var a\n    function a() {}\n    {\n      var b\n      var b\n      function c() {}\n      function c() {}\n    }\n\n    // JavaScript doesn't allow this\n    {\n      var d\n      function d() {}\n    }\n    ```\n\n-   Add a type declaration for the new `empty` loader ([#&#8203;2755](https://togithub.com/evanw/esbuild/pull/2755))\n\n    I forgot to add this in the previous release. It has now been added.\n\n    This fix was contributed by [@&#8203;fz6m](https://togithub.com/fz6m).\n\n-   Add support for the `v` flag in regular expression literals\n\n    People are currently working on adding a `v` flag to JavaScript regular expresions. You can read more about this flag here: https://v8.dev/features/regexp-v-flag. This release adds support for parsing this flag, so esbuild will now no longer consider regular expression literals with this flag to be a syntax error. If the target is set to something other than `esnext`, esbuild will transform regular expression literals containing this flag into a `new RegExp()` constructor call so the resulting code doesn't have a syntax error. This enables you to provide a polyfill for `RegExp` that implements the `v` flag to get your code to work at run-time. While esbuild doesn't typically adopt proposals until they're already shipping in a real JavaScript run-time, I'm adding it now because a) esbuild's implementation doesn't need to change as the proposal evolves, b) this isn't really new syntax since regular expression literals already have flags, and c) esbuild's implementation is a trivial pass-through anyway.\n\n-   Avoid keeping the name of classes with static `name` properties\n\n    The `--keep-names` property attempts to preserve the original value of the `name` property for functions and classes even when identifiers are renamed by the minifier or to avoid a name collision. This is currently done by generating code to assign a string to the `name` property on the function or class object. However, this should not be done for classes with a static `name` property since in that case the explicitly-defined `name` property overwrites the automatically-generated class name. With this release, esbuild will now no longer attempt to preserve the `name` property for classes with a static `name` property.\n\n### [`v0.16.8`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0168)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.7...v0.16.8)\n\n-   Allow plugins to resolve injected files ([#&#8203;2754](https://togithub.com/evanw/esbuild/issues/2754))\n\n    Previously paths passed to the `inject` feature were always interpreted as file system paths. This meant that `onResolve` plugins would not be run for them and esbuild's default path resolver would always be used. This meant that the `inject` feature couldn't be used in the browser since the browser doesn't have access to a file system. This release runs paths passed to `inject` through esbuild's full path resolution pipeline so plugins now have a chance to handle them using `onResolve` callbacks. This makes it possible to write a plugin that makes esbuild's `inject` work in the browser.\n\n-   Add the `empty` loader ([#&#8203;1541](https://togithub.com/evanw/esbuild/issues/1541), [#&#8203;2753](https://togithub.com/evanw/esbuild/issues/2753))\n\n    The new `empty` loader tells esbuild to pretend that a file is empty. So for example `--loader:.css=empty` effectively skips all imports of `.css` files in JavaScript so that they aren't included in the bundle, since `import \"./some-empty-file\"` in JavaScript doesn't bundle anything. You can also use the `empty` loader to remove asset references in CSS files. For example `--loader:.png=empty` causes esbuild to replace asset references such as `url(image.png)` with `url()` so that they are no longer included in the resulting style sheet.\n\n-   Fix `</script>` and `</style>` escaping for non-default targets ([#&#8203;2748](https://togithub.com/evanw/esbuild/issues/2748))\n\n    The change in version 0.16.0 to give control over `</script>` escaping via `--supported:inline-script=false` or `--supported:inline-script=true` accidentally broke automatic escaping of `</script>` when an explicit `target` setting is specified. This release restores the correct automatic escaping of `</script>` (which should not depend on what `target` is set to).\n\n-   Enable the `exports` field with `NODE_PATHS` ([#&#8203;2752](https://togithub.com/evanw/esbuild/issues/2752))\n\n    Node has a rarely-used feature where you can extend the set of directories that node searches for packages using the `NODE_PATHS` environment variable. While esbuild supports this too, previously it only supported the old `main` field path resolution but did not support the new `exports` field package resolution. This release makes the path resolution rules the same again for both `node_modules` directories and `NODE_PATHS` directories.\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.30.0`](https://togithub.com/eslint/eslint/releases/tag/v8.30.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.29.0...v8.30.0)\n\n#### Features\n\n-   [`075ef2c`](https://togithub.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50) feat: add suggestion for no-return-await ([#&#8203;16637](https://togithub.com/eslint/eslint/issues/16637)) (Daniel Bartholomae)\n-   [`7190d98`](https://togithub.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b) feat: update globals ([#&#8203;16654](https://togithub.com/eslint/eslint/issues/16654)) (Sébastien Règne)\n\n#### Bug Fixes\n\n-   [`1a327aa`](https://togithub.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c) fix: Ensure flat config unignores work consistently like eslintrc ([#&#8203;16579](https://togithub.com/eslint/eslint/issues/16579)) (Nicholas C. Zakas)\n-   [`9b8bb72`](https://togithub.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975) fix: autofix recursive functions in no-var ([#&#8203;16611](https://togithub.com/eslint/eslint/issues/16611)) (Milos Djermanovic)\n\n#### Documentation\n\n-   [`6a8cd94`](https://togithub.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405) docs: Clarify Discord info in issue template config ([#&#8203;16663](https://togithub.com/eslint/eslint/issues/16663)) (Nicholas C. Zakas)\n-   [`ad44344`](https://togithub.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e) docs: CLI documentation standardization ([#&#8203;16563](https://togithub.com/eslint/eslint/issues/16563)) (Ben Perlmutter)\n-   [`293573e`](https://togithub.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022) docs: fix broken line numbers ([#&#8203;16606](https://togithub.com/eslint/eslint/issues/16606)) (Sam Chen)\n-   [`fa2c64b`](https://togithub.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a) docs: use relative links for internal links ([#&#8203;16631](https://togithub.com/eslint/eslint/issues/16631)) (Percy Ma)\n-   [`75276c9`](https://togithub.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b) docs: reorder options in no-unused-vars ([#&#8203;16625](https://togithub.com/eslint/eslint/issues/16625)) (Milos Djermanovic)\n-   [`7276fe5`](https://togithub.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42) docs: Fix anchor in URL ([#&#8203;16628](https://togithub.com/eslint/eslint/issues/16628)) (Karl Horky)\n-   [`6bef135`](https://togithub.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f) docs: don't apply layouts to html formatter example ([#&#8203;16591](https://togithub.com/eslint/eslint/issues/16591)) (Tanuj Kanti)\n-   [`dfc7ec1`](https://togithub.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59) docs: Formatters page updates ([#&#8203;16566](https://togithub.com/eslint/eslint/issues/16566)) (Ben Perlmutter)\n-   [`8ba124c`](https://togithub.com/eslint/eslint/commit/8ba124cfd8aaf01d14ccbcb1654798624948fb0a) docs: update the `prefer-const` example ([#&#8203;16607](https://togithub.com/eslint/eslint/issues/16607)) (Pavel)\n-   [`e6cb05a`](https://togithub.com/eslint/eslint/commit/e6cb05aa35bafb9e88f161ad1fa6b01942a7c13c) docs: fix css leaking ([#&#8203;16603](https://togithub.com/eslint/eslint/issues/16603)) (Sam Chen)\n\n#### Chores\n\n-   [`f2c4737`](https://togithub.com/eslint/eslint/commit/f2c47372420f050ad8f2300271345de1c1232635) chore: upgrade [@&#8203;eslint/eslintrc](https://togithub.com/eslint/eslintrc)[@&#8203;1](https://togithub.com/1).4.0 ([#&#8203;16675](https://togithub.com/eslint/eslint/issues/16675)) (Milos Djermanovic)\n-   [`ba74253`](https://togithub.com/eslint/eslint/commit/ba74253e8bd63e9e163bbee0540031be77e39253) chore: standardize npm script names per [#&#8203;14827](https://togithub.com/eslint/eslint/issues/14827) ([#&#8203;16315](https://togithub.com/eslint/eslint/issues/16315)) (Patrick McElhaney)\n-   [`0d9af4c`](https://togithub.com/eslint/eslint/commit/0d9af4c5674809be993439c766dcd9d7f65fcec9) ci: fix npm v9 problem with `file:` ([#&#8203;16664](https://togithub.com/eslint/eslint/issues/16664)) (Milos Djermanovic)\n-   [`90c9219`](https://togithub.com/eslint/eslint/commit/90c9219181e0aadcae7224602d2988186d457113) refactor: migrate off deprecated function-style rules in all tests ([#&#8203;16618](https://togithub.com/eslint/eslint/issues/16618)) (Bryan Mishkin)\n\n</details>\n\n<details>\n<summary>reactivex/rxjs</summary>\n\n### [`v7.8.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;780-httpsgithubcomreactivexrxjscompare770780-2022-12-15)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.7.0...7.8.0)\n\n##### Features\n\n-   **buffer:** `closingNotifier` now supports any `ObservableInput` ([#&#8203;7073](https://togithub.com/reactivex/rxjs/issues/7073)) ([61b877a](https://togithub.com/reactivex/rxjs/commit/61b877a50c2557196a45e12622305c5a84fc3f0a))\n-   **delayWhen:** `delayWhen`'s `delayDurationSelector` now supports any `ObservableInput` ([#&#8203;7049](https://togithub.com/reactivex/rxjs/issues/7049)) ([dfd95db](https://togithub.com/reactivex/rxjs/commit/dfd95db952a6772d35d11bdd1974f2c4b4d68b25))\n-   **sequenceEqual:** `compareTo` now supports any `ObservableInput` ([#&#8203;7102](https://togithub.com/reactivex/rxjs/issues/7102)) ([d501961](https://togithub.com/reactivex/rxjs/commit/d50196187710c7a0cad50703b2071fc3f2cabd3c))\n-   **share:** `ShareConfig` factory properties now supports any `ObservableInput` ([#&#8203;7093](https://togithub.com/reactivex/rxjs/issues/7093)) ([cc3995a](https://togithub.com/reactivex/rxjs/commit/cc3995a6f6baf9456ec11f749fe89bf61b9e2d62))\n-   **skipUntil:** `notifier` now supports any `ObservableInput` ([#&#8203;7091](https://togithub.com/reactivex/rxjs/issues/7091)) ([60d6c40](https://togithub.com/reactivex/rxjs/commit/60d6c40fb484903286feca2bbfa9fcb2cde720e2))\n-   **window:** `windowBoundaries` now supports any `ObservableInput` ([#&#8203;7088](https://togithub.com/reactivex/rxjs/issues/7088)) ([8c4347c](https://togithub.com/reactivex/rxjs/commit/8c4347c48f2432d7399c911d329fa74e0d6c6e8d))\n\n### [`v7.7.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;770-httpsgithubcomreactivexrxjscompare760770-2022-12-15)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.6.0...7.7.0)\n\n##### Features\n\n-   **distinct:** `flush` argument now supports any `ObservableInput` ([#&#8203;7081](https://togithub.com/reactivex/rxjs/issues/7081)) ([74c9ebd](https://togithub.com/reactivex/rxjs/commit/74c9ebd818113f9f25f1fb2b9fee4a0eac121ae0))\n-   **repeatWhen:** `notifier` supports `ObservableInput` ([#&#8203;7103](https://togithub.com/reactivex/rxjs/issues/7103)) ([8f1b976](https://togithub.com/reactivex/rxjs/commit/8f1b976125c55a5e884317c2b463fd019662e6af))\n-   **retryWhen:** `notifier` now supports any `ObservableInput` ([#&#8203;7105](https://togithub.com/reactivex/rxjs/issues/7105)) ([794f806](https://togithub.com/reactivex/rxjs/commit/794f8064cf8fe754e9dfebeee0ffef0ac1562252))\n-   **sample:** `notifier` now supports any `ObservableInput` ([#&#8203;7104](https://togithub.com/reactivex/rxjs/issues/7104)) ([b18c2eb](https://togithub.com/reactivex/rxjs/commit/b18c2eb2bc8dc1a717c927f998028316eec83937))\n\n</details>\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.57.1`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1571)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.57.0...1.57.1)\n\n-   No user-visible changes.\n\n### [`v1.57.0`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1570)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.56.2...1.57.0)\n\n-   Add a `split($string, $separator, $limit: null)` function to `sass:string`\n    that splits a string into separate substrings based on a separator string.\n\n##### JavaScript API\n\n-   **Potentially breaking bug fix**: Custom functions in both the modern and\n    legacy API now properly reject signatures with whitespace between the function\n    name and parentheses.\n\n-   Custom functions in the legacy API now allow signatures with whitespace before\n    the function name, to match a bug in Node Sass.\n\n##### Dart API\n\n-   **Potentially breaking bug fix**: `Callable.fromSignature()` and\n    `AsyncCallable.fromSignature()` now reject signatures with whitespace between\n    the function name and parentheses.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24445","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24445)"},{"Id":"1499654050","IsPullRequest":true,"CreatedAt":"2022-12-16T06:05:30","Actor":"angular-robot","Number":"24444","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `35fe1b5` -> `113b90a` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `98ed19a` -> `2a3df55` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `dd23bf3` -> `e5ae0c3` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b8aaaf1` -> `6259d08` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `94d45cf` -> `e0703e4` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `93b2b5d` -> `6b06980` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `bffeded` -> `40c3f35` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `06c33a1` -> `861b921` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a9ba5a1` -> `a2688ec` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `42a3b99` -> `59d8937` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `1091550` -> `aba46be` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `cdc144b` -> `eca225e` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `129bcb4` -> `7191b8c` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `5dd1ec0` -> `c36c3ad` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `0c4a26b` -> `06de847` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `d2c586a` -> `11ee53a` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `64d3fc8` -> `1a0c59c` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `bd6a3d2` -> `04c956e` |\n| angular/dev-infra | action | digest | `4d9ea67` -> `d280147` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24444","RelatedDescription":"Open PR \"build: update angular\" (#24444)"},{"Id":"1499125668","IsPullRequest":true,"CreatedAt":"2022-12-15T21:48:09","Actor":"clydin","Number":"24443","RawContent":null,"Title":"refactor(@angular-devkit/architect): use promise-based result property where possible","State":"closed","Body":"This change adds a promise-based result property to the Job object which functions in a similar way to the BuilderRun object's result property. This allows for many of the Observable toPromise calls related to architect usage to be removed. As a result, many of the architect usage locations can now be more promise-based.","Url":"https://github.com/angular/angular-cli/pull/24443","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/architect): use promise-based result property where possible\" (#24443)"},{"Id":"1497844267","IsPullRequest":true,"CreatedAt":"2022-12-15T20:49:10","Actor":"angular-robot","Number":"24440","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.36` -> `v2.1.37` |\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | minor | `v2.0.6` -> `v2.1.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.37`](https://togithub.com/github/codeql-action/compare/v2.1.36...v2.1.37)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.36...v2.1.37)\n\n</details>\n\n<details>\n<summary>ossf/scorecard-action</summary>\n\n### [`v2.1.0`](https://togithub.com/ossf/scorecard-action/releases/tag/v2.1.0)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.0.6...v2.1.0)\n\n#### What's Changed\n\n##### Scorecard version\n\nThis release uses [scorecard v4.10.0](https://togithub.com/ossf/scorecard/releases/tag/v4.10.0).\n\n##### Improvements\n\n-   Docker build workflow by [@&#8203;naveensrinivasan](https://togithub.com/naveensrinivasan) in [https://github.com/ossf/scorecard-action/pull/981](https://togithub.com/ossf/scorecard-action/pull/981)\n-   Use root user in distroless to support GitHub Actions by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/994](https://togithub.com/ossf/scorecard-action/pull/994)\n-   Disable pull_request_target by [@&#8203;laurentsimon](https://togithub.com/laurentsimon) in [https://github.com/ossf/scorecard-action/pull/1031](https://togithub.com/ossf/scorecard-action/pull/1031)\n\n##### Documentation\n\n-   Add PAT section explaining risks by [@&#8203;olivekl](https://togithub.com/olivekl) in [https://github.com/ossf/scorecard-action/pull/1024](https://togithub.com/ossf/scorecard-action/pull/1024)\n-   Make the badge text easier to copy by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1026](https://togithub.com/ossf/scorecard-action/pull/1026)\n\n#### New Contributors\n\n-   [@&#8203;joycebrum](https://togithub.com/joycebrum) made their first contribution in [https://github.com/ossf/scorecard-action/pull/984](https://togithub.com/ossf/scorecard-action/pull/984)\n-   [@&#8203;rajbos](https://togithub.com/rajbos) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1026](https://togithub.com/ossf/scorecard-action/pull/1026)\n\n**Full Changelog**: https://github.com/ossf/scorecard-action/compare/v2.0.6...v2.1.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24440","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#24440)"},{"Id":"1497844384","IsPullRequest":true,"CreatedAt":"2022-12-15T20:48:47","Actor":"angular-robot","Number":"24441","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | minor | `5.7.3` -> `5.8.0` |\n| [cacache](https://togithub.com/npm/cacache) | dependencies | patch | [`17.0.3` -> `17.0.4`](https://renovatebot.com/diffs/npm/cacache/17.0.3/17.0.4) |\n| [cacache](https://togithub.com/npm/cacache) | devDependencies | patch | [`17.0.3` -> `17.0.4`](https://renovatebot.com/diffs/npm/cacache/17.0.3/17.0.4) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild/0.16.6/0.16.7) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild/0.16.6/0.16.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.6/0.16.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.6/0.16.7) |\n| [pacote](https://togithub.com/npm/pacote) | dependencies | patch | [`15.0.7` -> `15.0.8`](https://renovatebot.com/diffs/npm/pacote/15.0.7/15.0.8) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | patch | [`15.0.7` -> `15.0.8`](https://renovatebot.com/diffs/npm/pacote/15.0.7/15.0.8) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v5.8.0`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/5.8.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.7.3...5.8.0)\n\nThis release contains Bazel modules only, there are no accompanying npm packages because they weren't affected.\n\nUpgrade with:\n\n```starlark\nhttp_archive(\n    name = \"build_bazel_rules_nodejs\",\n    sha256 = \"dcc55f810142b6cf46a44d0180a5a7fb923c04a5061e2e8d8eb05ccccc60864b\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.0/rules_nodejs-5.8.0.tar.gz\"],\n)\n\n### or for core module\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"08337d4fffc78f7fe648a93be12ea2fc4e8eb9795a4e6aa48595b66b34555626\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.0/rules_nodejs-core-5.8.0.tar.gz\"],\n)\n```\n\n#### What's Changed\n\n-   feat: provide [@&#8203;nodejs](https://togithub.com/nodejs) repository by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3610](https://togithub.com/bazelbuild/rules_nodejs/pull/3610)\n-   chore: turn off automation for esbuild versions by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3608](https://togithub.com/bazelbuild/rules_nodejs/pull/3608)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3612](https://togithub.com/bazelbuild/rules_nodejs/pull/3612)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/5.7.3...5.8.0\n\n</details>\n\n<details>\n<summary>npm/cacache</summary>\n\n### [`v17.0.4`](https://togithub.com/npm/cacache/blob/HEAD/CHANGELOG.md#&#8203;1704-httpsgithubcomnpmcacachecomparev1703v1704-2022-12-14)\n\n[Compare Source](https://togithub.com/npm/cacache/compare/v17.0.3...v17.0.4)\n\n##### Dependencies\n\n-   [`fe71fab`](https://togithub.com/npm/cacache/commit/fe71fabaacadc8a06b8142141a1d0e63fbed537c) [#&#8203;159](https://togithub.com/npm/cacache/pull/159) bump fs-minipass from 2.1.0 to 3.0.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.7`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0167)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.6...v0.16.7)\n\n-   Include `file` loader strings in metafile imports ([#&#8203;2731](https://togithub.com/evanw/esbuild/issues/2731))\n\n    Bundling a file with the `file` loader copies that file to the output directory and imports a module with the path to the copied file in the `default` export. Previously when bundling with the `file` loader, there was no reference in the metafile from the JavaScript file containing the path string to the copied file. With this release, there will now be a reference in the metafile in the `imports` array with the kind `file-loader`:\n\n    ```diff\n     {\n       ...\n       \"outputs\": {\n         \"out/image-55CCFTCE.svg\": {\n           ...\n         },\n         \"out/entry.js\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"out/image-55CCFTCE.svg\",\n    +          \"kind\": \"file-loader\"\n    +        }\n           ],\n           ...\n         }\n       }\n     }\n    ```\n\n-   Fix byte counts in metafile regarding references to other output files ([#&#8203;2071](https://togithub.com/evanw/esbuild/issues/2071))\n\n    Previously files that contained references to other output files had slightly incorrect metadata for the byte counts of input files which contributed to that output file. So for example if `app.js` imports `image.png` using the file loader and esbuild generates `out.js` and `image-LSAMBFUD.png`, the metadata for how many bytes of `out.js` are from `app.js` was slightly off (the metadata for the byte count of `out.js` was still correct). The reason is because esbuild substitutes the final paths for references between output files toward the end of the build to handle cyclic references, and the byte counts needed to be adjusted as well during the path substitution. This release fixes these byte counts (specifically the `bytesInOutput` values).\n\n-   The alias feature now strips a trailing slash ([#&#8203;2730](https://togithub.com/evanw/esbuild/issues/2730))\n\n    People sometimes add a trailing slash to the name of one of node's built-in modules to force node to import from the file system instead of importing the built-in module. For example, importing `util` imports node's built-in module called `util` but importing `util/` tries to find a package called `util` on the file system. Previously attempting to use esbuild's package alias feature to replace imports to `util` with a specific file would fail because the file path would also gain a trailing slash (e.g. mapping `util` to `./file.js` turned `util/` into `./file.js/`). With this release, esbuild will now omit the path suffix if it's a single trailing slash, which should now allow you to successfully apply aliases to these import paths.\n\n</details>\n\n<details>\n<summary>npm/pacote</summary>\n\n### [`v15.0.8`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#&#8203;1508-httpsgithubcomnpmpacotecomparev1507v1508-2022-12-14)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v15.0.7...v15.0.8)\n\n##### Dependencies\n\n-   [`40aa6fe`](https://togithub.com/npm/pacote/commit/40aa6fe9055f3fe673fda7032c7da8958d3f574d) [#&#8203;253](https://togithub.com/npm/pacote/pull/253) bump fs-minipass from 2.1.0 to 3.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24441","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24441)"},{"Id":"1499081608","IsPullRequest":false,"CreatedAt":"2022-12-15T18:58:43","Actor":"nawlbergs","Number":"24442","RawContent":null,"Title":"[BUG] - Node 18 - ng serve - something has changed in Node v18","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nNot sure if this is an issue with Angular or webpack-dev-server... but here goes:\r\n\r\nI use a docker apache proxy locally so my dev env is more like production: `www.myapp.local` instead of `localhost:4200`\r\nBut when I try to bump node up to v18...  the angular proxy falls apart and does not work. The node api proxy works fine, its just the angular connection that breaks.\r\n\r\nI start node like this\r\n```bash\r\n$ npx ng serve --hmr --disable-host-check --port 4200 --public-host=www.myapp.local --project=myapp\r\n```\r\nhost file (pretty typical)\r\n```\r\n127.0.0.1 www.myapp.local // <-- my app\r\n...  \r\n# Added by Docker Desktop\r\n10.0.0.225 host.docker.internal\r\n10.0.0.225 gateway.docker.internal\r\n# To allow the same kube context to work on the host and the container:\r\n127.0.0.1 kubernetes.docker.internal\r\n# End of section\r\n```\r\n\r\nmy docker apache (nothing crazy here): `FROM php:5.6-apache`\r\n```\r\nDefine local_node \"http://host.docker.internal:3333\"\r\nDefine local_app \"http://host.docker.internal:4200\"\r\n\r\n<VirtualHost *:80>\r\n  DocumentRoot \"/var/www/html\"\r\n  DirectoryIndex index.php index.html\r\n\r\n  <Location /api>\r\n      Order allow,deny\r\n      Allow from all\r\n      ProxyPass ${local_node}\r\n      ProxyPassReverse ${local_node}\r\n  </Location>\r\n\r\n  <Location /app>\r\n      Order allow,deny\r\n      Allow from all\r\n      ProxyPass ${local_app}/app\r\n      ProxyPassReverse ${local_app}/app\r\n  </Location>\r\n</VirtualHost>\r\n```\r\nIf on v18 the proxy does not work... apache error:\r\n```\r\nphp-apache   | [Thu Dec 15 18:53:58.110169 2022] [proxy:error] [pid 17] (111)Connection refused: AH00957: HTTP: attempt to connect to 192.168.65.2:4200 (host.docker.internal) failed\r\n\r\nphp-apache   | [Thu Dec 15 18:53:58.110198 2022] [proxy_http:error] [pid 17] [client 172.18.0.1:41480] AH01114: HTTP: failed to make connection to backend: host.docker.internal, referer: http://www.myapp.local/\r\n```\r\nAgain... the node/api proxy still works fine.\r\n\r\nI was able to get it to \"kinda\" work in v18 by setting `--host=0.0.0.0` as well... but the `hrm` websockets were throwing errors in the client... so... after several hours of trying... I could not get this setup to work in v18.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nphp-apache   | [Thu Dec 15 18:53:58.110169 2022] [proxy:error] [pid 17] (111)Connection refused: AH00957: HTTP: attempt to connect to 192.168.65.2:4200 (host.docker.internal) failed\r\n\r\nphp-apache   | [Thu Dec 15 18:53:58.110198 2022] [proxy_http:error] [pid 17] [client 172.18.0.1:41480] AH01114: HTTP: failed to make connection to backend: host.docker.internal, referer: http://www.myapp.local/\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nwindows 10\r\nnode 18.12.1\r\nnpm 8.10.0\r\nphp:5.6-apache\r\n\"@angular/animations\": \"15.0.0\",\r\n\"@angular/cdk\": \"15.0.0\",\r\n\"@angular/common\": \"15.0.0\",\r\n\"@angular/compiler\": \"15.0.0\",\r\n\"@angular/core\": \"15.0.0\",\r\n\"@angular/forms\": \"15.0.0\",\r\n\"@angular/material\": \"15.0.0\",\r\n\"@angular/platform-browser\": \"15.0.0\",\r\n\"@angular/platform-browser-dynamic\": \"15.0.0\",\r\n\"@angular/router\": \"15.0.0\",\n```\n\n\n### Anything else?\n\nMight be webpack-dev-server issue and unrelated to angular in general?","Url":"https://github.com/angular/angular-cli/issues/24442","RelatedDescription":"Open issue \"[BUG] - Node 18 - ng serve - something has changed in Node v18\" (#24442)"},{"Id":"1497631652","IsPullRequest":true,"CreatedAt":"2022-12-15T01:37:43","Actor":"clydin","Number":"24439","RawContent":null,"Title":"Bump version to \"v15.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24439","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0-next.3\" with changelog.\" (#24439)"},{"Id":"1497428360","IsPullRequest":true,"CreatedAt":"2022-12-15T00:32:43","Actor":"clydin","Number":"24438","RawContent":null,"Title":"docs: release notes for the v15.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24438","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.4 release\" (#24438)"},{"Id":"1497377919","IsPullRequest":true,"CreatedAt":"2022-12-14T21:27:10","Actor":"clydin","Number":"24437","RawContent":null,"Title":"Bump version to \"v15.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24437","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.4\" with changelog.\" (#24437)"},{"Id":"1496953938","IsPullRequest":true,"CreatedAt":"2022-12-14T17:03:54","Actor":"alan-agius4","Number":"24436","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update `css-loader` to `6.7.3`","State":"closed","Body":"Closes #24414\r\n","Url":"https://github.com/angular/angular-cli/pull/24436","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update `css-loader` to `6.7.3`\" (#24436)"},{"Id":"1495785206","IsPullRequest":true,"CreatedAt":"2022-12-14T16:25:55","Actor":"angular-robot","Number":"24431","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [css-loader](https://togithub.com/webpack-contrib/css-loader) | dependencies | patch | [`6.7.2` -> `6.7.3`](https://renovatebot.com/diffs/npm/css-loader/6.7.2/6.7.3) |\n| [css-loader](https://togithub.com/webpack-contrib/css-loader) | devDependencies | patch | [`6.7.2` -> `6.7.3`](https://renovatebot.com/diffs/npm/css-loader/6.7.2/6.7.3) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild/0.16.4/0.16.6) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild/0.16.4/0.16.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.4/0.16.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.4/0.16.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/css-loader</summary>\n\n### [`v6.7.3`](https://togithub.com/webpack-contrib/css-loader/blob/HEAD/CHANGELOG.md#&#8203;673-httpsgithubcomwebpack-contribcss-loadercomparev672v673-2022-12-14)\n\n[Compare Source](https://togithub.com/webpack-contrib/css-loader/compare/v6.7.2...v6.7.3)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.6`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0166)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.5...v0.16.6)\n\n-   Do not mark subpath imports as external with `--packages=external` ([#&#8203;2741](https://togithub.com/evanw/esbuild/issues/2741))\n\n    Node has a feature called [subpath imports](https://nodejs.org/api/packages.html#subpath-imports) where special import paths that start with `#` are resolved using the `imports` field in the `package.json` file of the enclosing package. The intent of the newly-added `--packages=external` setting is to exclude a package's dependencies from the bundle. Since a package's subpath imports are only accessible within that package, it's wrong for them to be affected by `--packages=external`. This release changes esbuild so that `--packages=external` no longer affects subpath imports.\n\n-   Forbid invalid numbers in JSON files\n\n    Previously esbuild parsed numbers in JSON files using the same syntax as JavaScript. But starting from this release, esbuild will now parse them with JSON syntax instead. This means the following numbers are no longer allowed by esbuild in JSON files:\n\n    -   Legacy octal literals (non-zero integers starting with `0`)\n    -   The `0b`, `0o`, and `0x` numeric prefixes\n    -   Numbers containing `_` such as `1_000`\n    -   Leading and trailing `.` such as `0.` and `.0`\n    -   Numbers with a space after the `-` such as `- 1`\n\n-   Add external imports to metafile ([#&#8203;905](https://togithub.com/evanw/esbuild/issues/905), [#&#8203;1768](https://togithub.com/evanw/esbuild/issues/1768), [#&#8203;1933](https://togithub.com/evanw/esbuild/issues/1933), [#&#8203;1939](https://togithub.com/evanw/esbuild/issues/1939))\n\n    External imports now appear in `imports` arrays in the metafile (which is present when bundling with `metafile: true`) next to normal imports, but additionally have `external: true` to set them apart. This applies both to files in the `inputs` section and the `outputs` section. Here's an example:\n\n    ```diff\n     {\n       \"inputs\": {\n         \"style.css\": {\n           \"bytes\": 83,\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\",\n    +          \"kind\": \"import-rule\",\n    +          \"external\": true\n    +        }\n           ]\n         },\n         \"app.js\": {\n           \"bytes\": 100,\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\",\n    +          \"kind\": \"import-statement\",\n    +          \"external\": true\n    +        },\n             {\n               \"path\": \"style.css\",\n               \"kind\": \"import-statement\"\n             }\n           ]\n         }\n       },\n       \"outputs\": {\n         \"out/app.js\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\",\n    +          \"kind\": \"require-call\",\n    +          \"external\": true\n    +        }\n           ],\n           \"exports\": [],\n           \"entryPoint\": \"app.js\",\n           \"cssBundle\": \"out/app.css\",\n           \"inputs\": {\n             \"app.js\": {\n               \"bytesInOutput\": 113\n             },\n             \"style.css\": {\n               \"bytesInOutput\": 0\n             }\n           },\n           \"bytes\": 528\n         },\n         \"out/app.css\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\",\n    +          \"kind\": \"import-rule\",\n    +          \"external\": true\n    +        }\n           ],\n           \"inputs\": {\n             \"style.css\": {\n               \"bytesInOutput\": 0\n             }\n           },\n           \"bytes\": 100\n         }\n       }\n     }\n    ```\n\n    One additional useful consequence of this is that the `imports` array is now populated when bundling is disabled. So you can now use esbuild with bundling disabled to inspect a file's imports.\n\n### [`v0.16.5`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0165)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.4...v0.16.5)\n\n-   Make it easy to exclude all packages from a bundle ([#&#8203;1958](https://togithub.com/evanw/esbuild/issues/1958), [#&#8203;1975](https://togithub.com/evanw/esbuild/issues/1975), [#&#8203;2164](https://togithub.com/evanw/esbuild/issues/2164), [#&#8203;2246](https://togithub.com/evanw/esbuild/issues/2246), [#&#8203;2542](https://togithub.com/evanw/esbuild/issues/2542))\n\n    When bundling for node, it's often necessary to exclude npm packages from the bundle since they weren't designed with esbuild bundling in mind and don't work correctly after being bundled. For example, they may use `__dirname` and run-time file system calls to load files, which doesn't work after bundling with esbuild. Or they may compile a native `.node` extension that has similar expectations about the layout of the file system that are no longer true after bundling (even if the `.node` extension is copied next to the bundle).\n\n    The way to get this to work with esbuild is to use the `--external:` flag. For example, the [`fsevents`](https://www.npmjs.com/package/fsevents) package contains a native `.node` extension and shouldn't be bundled. To bundle code that uses it, you can pass `--external:fsevents` to esbuild to exclude it from your bundle. You will then need to ensure that the `fsevents` package is still present when you run your bundle (e.g. by publishing your bundle to npm as a package with a dependency on `fsevents`).\n\n    It was possible to automatically do this for all of your dependencies, but it was inconvenient. You had to write some code that read your `package.json` file and passed the keys of the `dependencies`, `devDependencies`, `peerDependencies`, and/or `optionalDependencies` maps to esbuild as external packages (either that or write a plugin to mark all package paths as external). Previously esbuild's recommendation for making this easier was to do `--external:./node_modules/*` (added in version 0.14.13). However, this was a bad idea because it caused compatibility problems with many node packages as it caused esbuild to mark the post-resolve path as external instead of the pre-resolve path. Doing that could break packages that are published as both CommonJS and ESM if esbuild's bundler is also used to do a module format conversion.\n\n    With this release, you can now do the following to automatically exclude all packages from your bundle:\n\n    -   CLI:\n\n            esbuild --bundle --packages=external\n\n    -   JS:\n\n        ```js\n        esbuild.build({\n          bundle: true,\n          packages: 'external',\n        })\n        ```\n\n    -   Go:\n\n        ```go\n        api.Build(api.BuildOptions{\n          Bundle:   true,\n          Packages: api.PackagesExternal,\n        })\n        ```\n\n    Doing `--external:./node_modules/*` is still possible and still has the same behavior, but is no longer recommended. I recommend that you use the new `packages` feature instead.\n\n-   Fix some subtle bugs with tagged template literals\n\n    This release fixes a bug where minification could incorrectly change the value of `this` within tagged template literal function calls:\n\n    ```js\n    // Original code\n    function f(x) {\n      let z = y.z\n      return z``\n    }\n\n    // Old output (with --minify)\n    function f(n){return y.z``}\n\n    // New output (with --minify)\n    function f(n){return(0,y.z)``}\n    ```\n\n    This release also fixes a bug where using optional chaining with `--target=es2019` or earlier could incorrectly change the value of `this` within tagged template literal function calls:\n\n    ```js\n    // Original code\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj?.foo)``;\n\n    // Old output (with --target=es6)\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj == null ? void 0 : obj.foo)``;\n\n    // New output (with --target=es6)\n    var __freeze = Object.freeze;\n    var __defProp = Object.defineProperty;\n    var __template = (cooked, raw) => __freeze(__defProp(cooked, \"raw\", { value: __freeze(raw || cooked.slice()) }));\n    var _a;\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj == null ? void 0 : obj.foo).call(obj, _a || (_a = __template([\"\"])));\n    ```\n\n-   Some slight minification improvements\n\n    The following minification improvements were implemented:\n\n    -   `if (~a !== 0) throw x;` => `if (~a) throw x;`\n    -   `if ((a | b) !== 0) throw x;` => `if (a | b) throw x;`\n    -   `if ((a & b) !== 0) throw x;` => `if (a & b) throw x;`\n    -   `if ((a ^ b) !== 0) throw x;` => `if (a ^ b) throw x;`\n    -   `if ((a << b) !== 0) throw x;` => `if (a << b) throw x;`\n    -   `if ((a >> b) !== 0) throw x;` => `if (a >> b) throw x;`\n    -   `if ((a >>> b) !== 0) throw x;` => `if (a >>> b) throw x;`\n    -   `if (!!a || !!b) throw x;` => `if (a || b) throw x;`\n    -   `if (!!a && !!b) throw x;` => `if (a && b) throw x;`\n    -   `if (a ? !!b : !!c) throw x;` => `if (a ? b : c) throw x;`\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24431","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24431)"},{"Id":"1494714556","IsPullRequest":true,"CreatedAt":"2022-12-14T15:02:25","Actor":"clydin","Number":"24427","RawContent":null,"Title":"fix(@angular-devkit/build-angular): transform async generator class methods for Zone.js support","State":"closed","Body":"When using the experimental esbuild-based browser application builder, async generator class methods will now be transformed to a downlevel form based on promise objects. This transformation is performed by babel and was previously (and still is) performed on async generator functions. This transformation is necessary to ensure Zone.js can hook async code via the Promise objects. Only async generator transformation is currently performed via babel as esbuild can handle all other native async syntax that requires transformation for Zone.js support.","Url":"https://github.com/angular/angular-cli/pull/24427","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): transform async generator class methods for Zone.js support\" (#24427)"},{"Id":"1496596119","IsPullRequest":false,"CreatedAt":"2022-12-14T13:59:48","Actor":"wesselvdv","Number":"24435","RawContent":null,"Title":"browser-esbuild target set to ES2022 and useDefineForClassFields false not working","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nnon esbuild builder\r\n\r\n### Description\r\n\r\nI get the warning `[WARNING] [plugin angular-compiler] TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI.` when building using browser-esbuild.  But when looking at the output, it seems as if the useDefineForClassFields is set to true.\r\n\r\nThis setting causes the following example to be compiled/transpiled incorrectly, causing undefined errors:\r\n\r\n```typescript\r\nclass XYZ extends W {\r\nprivate readonly whatever = this.query.watch(\r\n    {},\r\n    {\r\n      fetchPolicy: 'network-only',\r\n    },\r\n  );\r\n\r\n  constructor(\r\n    private readonly query: GetSomething\r\n  ) {\r\n    super();\r\n  }\r\n}\r\n```\r\n\r\n\r\n```javascript\r\nvar _XYZ = class extends W {\r\n  constructor(query) {\r\n    super();\r\n    __publicField(this, \"query\");\r\n    __publicField(this, \"whatever\", this.query.watch({}, {\r\n      fetchPolicy: \"network-only\"\r\n    }));\r\n    this.query = query;\r\n}\r\n```\r\n\r\nAs can be seen in the above example the constructor assignment is done last. I initially thought it was due to esbuild, so I had already opened an issue there which pointed me to the typescript config. (https://github.com/evanw/esbuild/issues/2738#event-8030504054)\r\n\r\nI am not sure if this is correct behaviour from typescript (the wrong order of assignment), or if this just isn't supported anymore?\r\n\r\n### Minimal Reproduction\r\n\r\nHere's a typescript example with target: ES2021:\r\n\r\nhttps://www.typescriptlang.org/play?useDefineForClassFields=true&target=8#code/MYGwhgzhAEAaCaAtaBTAHgFxQOwCYwHVoBvAKAAcAnASwDcwtpKUxcB7bEAT2gHcALBilopK0ALzQM-ahAB0ARwCuornN4Ng-ABSlo+kgF8ANHoNkDBgGYoMWgApsQ1YFwBc0AOTZbvNpQBrAFoObk9TSxMzAEoAblIzYA4IDEolYAx-XUsqOiEmFnZOHmVVDwBxWwBlNgBbWxlsAHMYkjN9CCVyUW04s0NSAYwubuhKjBr66WpmiWgwbC5SXBRQMGZoejECDwWloA\r\n\r\nAnd here's one with ES2022 as target\r\n\r\nhttps://www.typescriptlang.org/play?useDefineForClassFields=true&target=99#code/MYGwhgzhAEAaCaAtaBTAHgFxQOwCYwHVoBvAKAAcAnASwDcwtpKUxcB7bEAT2gHcALBilopK0ALzQM-ahAB0ARwCuornN4Ng-ABSlo+kgF8ANHoNkDBgGYoMWgApsQ1YFwBc0AOTZbvNpQBrAFoObk9TSxMzAEoAblIzYA4IDEolYAx-XUsqOiEmFnZOHmVVDwBxWwBlNgBbWxlsAHMYkjN9CCVyUW04s0NSAYwubuhKjBr66WpmiWgwbC5SXBRQMGZoejECDwWloA\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 15.0.3\r\nNode: 19.1.0 (Unsupported)\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3 (cli-only)\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@angular/cdk                    15.0.2\r\n@schematics/angular             15.0.3 (cli-only)\r\nrxjs                            7.6.0\r\ntypescript                      4.9.4\r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24435","RelatedDescription":"Closed issue \"browser-esbuild target set to ES2022 and useDefineForClassFields false not working\" (#24435)"},{"Id":"1496412536","IsPullRequest":false,"CreatedAt":"2022-12-14T13:23:52","Actor":"Marius-Romanus","Number":"24433","RawContent":null,"Title":"Option to generate environments when creating a new Angular in versions 15 and higher","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nHello,\r\n\r\nI haven't been able to figure out the real reason for removing the environments in version 15 of the CLI, other than to simplify the configuration (which I'm fine with).\r\n\r\nBut I think it would at least be interesting to have an option (https://angular.io/cli/new#options) when creating a new Angular project to automatically generate the files as before, since in many cases the environments are still used.\r\n\r\nIf I'm not mistaken, the autogenerated files are:\r\n\r\n```\r\nsrc/environments/environment.ts\r\nsrc/environments/environment.prod.ts\r\n```\r\n\r\nChanges when generating angular.json:\r\n\r\n```\r\n\"fileReplacements\": [\r\n         {\r\n          \"replace\": \"src/environments/environment.ts\",\r\n          \"with\": \"src/environments/environment.prod.ts\"\r\n         }\r\n ],\r\n```\r\n\r\nregards!\n\n### Describe the solution you'd like\n\nBy default it would be the same as now, but by adding the \"--environments\" flag, it would remain the same as before version 15.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24433","RelatedDescription":"Closed issue \"Option to generate environments when creating a new Angular in versions 15 and higher\" (#24433)"},{"Id":"1496489890","IsPullRequest":false,"CreatedAt":"2022-12-14T12:06:47","Actor":"LeonEck","Number":"24434","RawContent":null,"Title":"browser-esbuild can't resolve secondary entry point from library","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI wanted to try the new esbuild based browser builder in a project that contains a library. That library is split into secondary entry points (similar to the [ng-packagr secondary sample](https://github.com/ng-packagr/ng-packagr/tree/main/integration/samples/secondary)). When I try to run `ng build` it produces an error saying it can not resolve the secondary entry points.\r\n\r\n### Minimal Reproduction\r\n\r\nI created a reproduction here: https://github.com/LeonEck/esbuild-library-secondary\r\nThe project contains a newly generated angular project. Afterwards (second commit) I generated a new library. In the third commit I added a secondary entry point to the library. Finally I switched the builder to \"browser-esbuild\".\r\n\r\n### Exception or Error\r\n\r\nWhen you run `ng build` it produces the following error:\r\n\r\n```text\r\n\r\n✘ [ERROR] Could not resolve \"my-lib/secondary\"\r\n\r\n    src/main.ts:3:29:\r\n      3 │ import { logSomething } from \"my-lib/secondary\";\r\n        ╵                              ~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"my-lib/secondary\" as external to exclude it from the bundle, which will remove this error.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.3\r\nNode: 18.12.1\r\nPackage Manager: npm 9.1.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@schematics/angular             15.0.3\r\nng-packagr                      15.0.3\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24434","RelatedDescription":"Open issue \"browser-esbuild can't resolve secondary entry point from library\" (#24434)"},{"Id":"1496001738","IsPullRequest":true,"CreatedAt":"2022-12-14T08:02:10","Actor":"cexbrayat","Number":"24432","RawContent":null,"Title":"feat(@schematics/angular): remove deprecated CanLoad option for guards","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nAngular v15.1 deprecated the `CanLoad` guard in favor of `CanMatch`. This commit removes the support for `CanLoad` when generating a guard with the CLI, to encourage developers to use `CanMatch` instead.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24432","RelatedDescription":"Open PR \"feat(@schematics/angular): remove deprecated CanLoad option for guards\" (#24432)"},{"Id":"1494790104","IsPullRequest":false,"CreatedAt":"2022-12-14T07:27:25","Actor":"bravier","Number":"24428","RawContent":null,"Title":"Unable to compile with Angular 15 and a .browserslistrc targeting browsers supporting ES2015","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.10\r\n\r\n### Description\r\n\r\nWe are not able to compile our app anymore when upgrading to Angular 15 despite targeting browsers supporting ES2015.\r\n\r\nThe documentation says [we can create a `.browserslistrc` file](https://angular.io/guide/build#configuring-browser-compatibility) to specify which browsers versions we want to target.\r\n\r\nWe created ours with this content:\r\n```\r\nsupports es6-module\r\nnot dead\r\nnot IE <= 11\r\n```\r\n\r\n<details>\r\n  <summary>npx browserslist output</summary>\r\n  \r\n  ```\r\n  and_chr 108\r\n  and_ff 107\r\n  and_qq 13.1\r\n  and_uc 13.4\r\n  android 108\r\n  chrome 111\r\n  chrome 110\r\n  chrome 109\r\n  chrome 108\r\n  chrome 107\r\n  chrome 106\r\n  chrome 105\r\n  chrome 104\r\n  chrome 103\r\n  chrome 102\r\n  chrome 101\r\n  chrome 100\r\n  chrome 99\r\n  chrome 98\r\n  chrome 97\r\n  chrome 96\r\n  chrome 95\r\n  chrome 94\r\n  chrome 93\r\n  chrome 92\r\n  chrome 91\r\n  chrome 90\r\n  chrome 89\r\n  chrome 88\r\n  chrome 87\r\n  chrome 86\r\n  chrome 85\r\n  chrome 84\r\n  chrome 83\r\n  chrome 81\r\n  chrome 80\r\n  chrome 79\r\n  chrome 78\r\n  chrome 77\r\n  chrome 76\r\n  chrome 75\r\n  chrome 74\r\n  chrome 73\r\n  chrome 72\r\n  chrome 71\r\n  chrome 70\r\n  chrome 69\r\n  chrome 68\r\n  chrome 67\r\n  chrome 66\r\n  chrome 65\r\n  chrome 64\r\n  chrome 63\r\n  chrome 62\r\n  chrome 61\r\n  edge 108\r\n  edge 107\r\n  edge 106\r\n  edge 105\r\n  edge 104\r\n  edge 103\r\n  edge 102\r\n  edge 101\r\n  edge 100\r\n  edge 99\r\n  edge 98\r\n  edge 97\r\n  edge 96\r\n  edge 95\r\n  edge 94\r\n  edge 93\r\n  edge 92\r\n  edge 91\r\n  edge 90\r\n  edge 89\r\n  edge 88\r\n  edge 87\r\n  edge 86\r\n  edge 85\r\n  edge 84\r\n  edge 83\r\n  edge 81\r\n  edge 80\r\n  edge 79\r\n  edge 18\r\n  edge 17\r\n  edge 16\r\n  firefox 109\r\n  firefox 108\r\n  firefox 107\r\n  firefox 106\r\n  firefox 105\r\n  firefox 104\r\n  firefox 103\r\n  firefox 102\r\n  firefox 101\r\n  firefox 100\r\n  firefox 99\r\n  firefox 98\r\n  firefox 97\r\n  firefox 96\r\n  firefox 95\r\n  firefox 94\r\n  firefox 93\r\n  firefox 92\r\n  firefox 91\r\n  firefox 90\r\n  firefox 89\r\n  firefox 88\r\n  firefox 87\r\n  firefox 86\r\n  firefox 85\r\n  firefox 84\r\n  firefox 83\r\n  firefox 82\r\n  firefox 81\r\n  firefox 80\r\n  firefox 79\r\n  firefox 78\r\n  firefox 77\r\n  firefox 76\r\n  firefox 75\r\n  firefox 74\r\n  firefox 73\r\n  firefox 72\r\n  firefox 71\r\n  firefox 70\r\n  firefox 69\r\n  firefox 68\r\n  firefox 67\r\n  firefox 66\r\n  firefox 65\r\n  firefox 64\r\n  firefox 63\r\n  firefox 62\r\n  firefox 61\r\n  firefox 60\r\n  ios_saf 16.1\r\n  ios_saf 16.0\r\n  ios_saf 15.6\r\n  ios_saf 15.5\r\n  ios_saf 15.4\r\n  ios_saf 15.2-15.3\r\n  ios_saf 15.0-15.1\r\n  ios_saf 14.5-14.8\r\n  ios_saf 14.0-14.4\r\n  ios_saf 13.4-13.7\r\n  ios_saf 13.3\r\n  ios_saf 13.2\r\n  ios_saf 13.0-13.1\r\n  ios_saf 12.2-12.5\r\n  ios_saf 12.0-12.1\r\n  ios_saf 11.3-11.4\r\n  ios_saf 11.0-11.2\r\n  ios_saf 10.3\r\n  op_mob 72\r\n  opera 92\r\n  opera 91\r\n  opera 90\r\n  opera 89\r\n  opera 88\r\n  opera 87\r\n  opera 86\r\n  opera 85\r\n  opera 84\r\n  opera 83\r\n  opera 82\r\n  opera 81\r\n  opera 80\r\n  opera 79\r\n  opera 78\r\n  opera 77\r\n  opera 76\r\n  opera 75\r\n  opera 74\r\n  opera 73\r\n  opera 72\r\n  opera 71\r\n  opera 70\r\n  opera 69\r\n  opera 68\r\n  opera 67\r\n  opera 66\r\n  opera 65\r\n  opera 64\r\n  opera 63\r\n  opera 62\r\n  opera 60\r\n  opera 58\r\n  opera 57\r\n  opera 56\r\n  opera 55\r\n  opera 54\r\n  opera 53\r\n  opera 52\r\n  opera 51\r\n  opera 50\r\n  opera 49\r\n  opera 48\r\n  safari 16.2\r\n  safari 16.1\r\n  safari 16.0\r\n  safari 15.6\r\n  safari 15.5\r\n  safari 15.4\r\n  safari 15.2-15.3\r\n  safari 15.1\r\n  safari 15\r\n  safari 14.1\r\n  safari 14\r\n  safari 13.1\r\n  safari 13\r\n  safari 12.1\r\n  safari 12\r\n  safari 11.1\r\n  safari 11\r\n  safari 10.1\r\n  samsung 19.0\r\n  samsung 18.0\r\n  samsung 17.0\r\n  samsung 16.0\r\n  samsung 15.0\r\n  samsung 14.0\r\n  samsung 13.0\r\n  samsung 12.0\r\n  samsung 11.1-11.2\r\n  samsung 10.1\r\n  samsung 9.2\r\n  samsung 8.2\r\n  ```\r\n</details>\r\n\r\n### Minimal Reproduction\r\n\r\nHere are the steps:\r\n- `git clone repo: https://github.com/bravier/browserslist-angular-15-repro`\r\n- `cd browserslist-angular-15-repro`\r\n- `npm install`\r\n- `npm run build`\r\n\r\nThis repo only contains a bare `ng new` app and simply [an additional commit](https://github.com/bravier/browserslist-angular-15-repro/commit/80f47dc221978426a2a4fb876b542418d51d6f40) that adds the `.browserslistrc` file.\r\n\r\nTo compare easily, this other repo is exactly the same but with Angular 14.2.10 and doing the exact same steps show no errors:\r\nhttps://github.com/bravier/browserslist-angular-14-repro\r\n\r\n### Exception or Error\r\n\r\n```text\r\nError: Optimization error [runtime.8db59a089587c970.js]: Error: Transform failed with 2 errors:\r\nruntime.8db59a089587c970.js:45:17: ERROR: Transforming destructuring to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\nruntime.8db59a089587c970.js:95:16: ERROR: Transforming destructuring to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\n\r\nError: Optimization error [polyfills.e26bffdfc96b5c1f.js]: Error: Transform failed with 419 errors:\r\npolyfills.e26bffdfc96b5c1f.js:22:2: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\npolyfills.e26bffdfc96b5c1f.js:33:2: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\npolyfills.e26bffdfc96b5c1f.js:37:2: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\npolyfills.e26bffdfc96b5c1f.js:54:2: ERROR: Transforming let to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\npolyfills.e26bffdfc96b5c1f.js:68:8: ERROR: Transforming let to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\n...\r\n\r\nError: Optimization error [main.ebb2a462d8f83ff8.js]: Error: Transform failed with 3749 errors:\r\nmain.ebb2a462d8f83ff8.js:52:2: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\nmain.ebb2a462d8f83ff8.js:56:2: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\nmain.ebb2a462d8f83ff8.js:64:0: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\nmain.ebb2a462d8f83ff8.js:75:4: ERROR: Transforming const to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\nmain.ebb2a462d8f83ff8.js:92:4: ERROR: Transforming let to the configured target environment (\"chrome61.0\", \"edge16.0\", \"firefox60.0\", \"ios10.3\", \"opera48.0\", \"safari10.1\") is not supported yet\r\n...\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.3\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@schematics/angular             15.0.3\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24428","RelatedDescription":"Closed issue \"Unable to compile with Angular 15 and a .browserslistrc targeting browsers supporting ES2015\" (#24428)"},{"Id":"1495503576","IsPullRequest":false,"CreatedAt":"2022-12-14T02:30:57","Actor":"markscsmith","Number":"24430","RawContent":null,"Title":"zsh completion installation results in \"command not found: compdef\"","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDuring the angular install, I said yes to the completion features.  Shortly thereafter, I launched a new terminal window and received the error \r\n```\r\n/dev/fd/12:18: command not found: compdef\r\n```\r\n\r\nSearching uncovered a pair of stackoverflows that led to a fix of sorts.\r\nhttps://unix.stackexchange.com/questions/339954/zsh-command-not-found-compinstall-compinit-compdef\r\nhttps://unix.stackexchange.com/questions/383365/zsh-compinit-insecure-directories-run-compaudit-for-list\r\n\r\nAdding the two rows in the accepted answer to the .zshrc got further:\r\n```\r\nautoload -Uz compinit\r\ncompinit\r\n```\r\nOn a fresh install of Ventura + Homebrew + Npm from homebrew + angular from npm, this solves the problem.\r\n\r\nHowever, you may run into further errors if you've installed other brew packages:\r\n \r\n```\r\nLast login: Tue Dec 13 20:18:09 on ttys008\r\nzsh compinit: insecure directories, run compaudit for list.\r\nIgnore insecure directories and continue [y] or abort compinit [n]? ncompinit: initialization aborted\r\n/dev/fd/12:18: command not found: compdef\r\nmscs@max ~ % compaudit\r\nThere are insecure directories:\r\n/usr/local/share/zsh/site-functions\r\n/usr/local/share/zsh\r\nmscs@max ~ %          \r\n```\r\n\r\nThis lead to workaround #2 in the second stack overflow link:\r\n```\r\ncompaudit | xargs chmod g-w\r\n```\r\n\r\nRemoving write permission from the listed folders appears to have resolved the issue.\n\n### Minimal Reproduction\n\n1. Install macOS Ventura (latest), in my case 13.0.1.  This may work for other versions of macOS\r\n2. Install homebrew from brew.sh\r\n3. Install npm via ```brew install npm```\r\n4. install angular via ```npm install -g @angular/cli```\r\n5. run ```ng new```\r\n6. When prompted with:\r\n```\r\n? Would you like to enable autocompletion? This will set up your terminal so \r\npressing TAB while typing Angular CLI commands will show possible options and \r\nautocomplete arguments. (Enabling autocompletion will modify configuration files\r\n in your home directory.)\r\n ```\r\n  choose \"yes\"\r\n\r\nOnce the command echos back ```source <(ng completion script)``` any new terminals with throw the error.\n\n### Exception or Error\n\n```text\n/dev/fd/12:18: command not found: compdef```\n```\n\n\n### Your Environment\n\n```text\nmscs@max ~ % ng version\r\nNode.js version v19.2.0 detected.\r\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/releases/.\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.0.3\r\nNode: 19.2.0 (Unsupported)\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1500.3 (cli-only)\r\n@angular-devkit/core         15.0.3 (cli-only)\r\n@angular-devkit/schematics   15.0.3 (cli-only)\r\n@schematics/angular          15.0.3 (cli-only)\r\n    \r\nWarning: The current version of Node (19.2.0) is not supported by Angular.\n```\n\n\n### Anything else relevant?\n\nmy .zshrc after the fix now reads: \r\n```\r\nautoload -Uz compinit\r\ncompinit\r\n\r\n# Load Angular CLI autocompletion.\r\nsource <(ng completion script)\r\n```","Url":"https://github.com/angular/angular-cli/issues/24430","RelatedDescription":"Open issue \"zsh completion installation results in \"command not found: compdef\"\" (#24430)"},{"Id":"1494959814","IsPullRequest":false,"CreatedAt":"2022-12-13T19:38:55","Actor":"prabh-62","Number":"24429","RawContent":null,"Title":"Error: Class private methods are not enabled when using pdfjs-dist library ","State":"closed","Body":"### Command\n\nbuild, serve, test\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular v15 CLI is not able to build and serve app if pdfjs-dist library is imported\r\n\n\n### Minimal Reproduction\n\n\r\n- `npx @angular/cli@15 new admin-console`\r\n- `cd admin-console`\r\n- `npm install pdfjs-dist`\r\n- `npm ls pdfjs-dist` -> 3.1.81\r\n- Edit `src/app/app.component.ts` and update the file with this code\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'admin-console';\r\n\r\n  private initialize() {\r\n    console.log(pdfjsLib.version);\r\n  }\r\n}\r\n```\r\n- `npm run build`\r\n<img width=\"1357\" alt=\"class_private_methods_angular_v15_cli\" src=\"https://user-images.githubusercontent.com/13006107/207419964-f07cb84f-12ce-4f1e-940e-ebc8ac4cc2bd.png\">\n\n### Exception or Error\n\n```text\n./node_modules/pdfjs-dist/build/pdf.js - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js):\r\nSyntaxError: /Users/prabh/dev/tmp/admin-console/node_modules/pdfjs-dist/build/pdf.js: Class private methods are not enabled. Please add `@babel/plugin-proposal-private-methods` to your configuration.\r\n  2591 | class PDFObjects {\r\n  2592 |   #objs = Object.create(null);\r\n> 2593 |   #ensureObj(objId) {\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.3\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@schematics/angular             15.0.3\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24429","RelatedDescription":"Closed issue \"Error: Class private methods are not enabled when using pdfjs-dist library \" (#24429)"},{"Id":"1493872585","IsPullRequest":false,"CreatedAt":"2022-12-13T10:01:24","Actor":"flevi29","Number":"24426","RawContent":null,"Title":"Runtime (#) private fields for methods throw compilation error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen building an angular app with a class containing runtime JavaScript [private methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields) on Angular 15.0.3, Babel starts complaining about these private methods needing a plugin. 15.0.2 did not have this problem.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/flevi29/angular_private_method\n\n### Please provide the exception or error you saw\n\n```true\n./src/app/app.component.ts - Error: Module build failed (from ./node_modules/.pnpm/@angular-devkit+build-angular@15.0.3_rkbkeouzdriyhxsgalx5dhmej4/node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js):\r\nSyntaxError: C:\\-\\angular_private_method\\src\\app\\app.component.ts: Class private methods are not enabled. Please add `@babel/plugin-proposal-private-methods` to your configuration.\r\n   5 |     }\r\n   6 |     #title;\r\n>  7 |     #somePrivateMethod() {\r\n     |     ^\r\n   8 |         console.log('`title` has been called');\r\n   9 |     }\r\n  10 |     get title() {\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 15.0.3\r\nNode: 18.12.1\r\nPackage Manager: pnpm 7.18.1\r\nOS: win32 x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@schematics/angular             15.0.3\r\nrxjs                            7.6.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\nIs using runtime private methods wherever we can and it makes sense to do so a good practice? Every browser except the one that should be thrown into a pit of flames supports runtime private methods at this point.","Url":"https://github.com/angular/angular-cli/issues/24426","RelatedDescription":"Closed issue \"Runtime (#) private fields for methods throw compilation error\" (#24426)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1503615052","IsPullRequest":false,"CreatedAt":"2022-12-19T21:17:34","Actor":"romainmoreau","Number":"26295","RawContent":null,"Title":"bug(dialog): afterOpened not always emitted","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\n`afterOpened` is not emitted when the dialog is closed too fast.\n\n### Reproduction\n\nI noticed this issue running some e2e tests but it also can be manually reproduced: basically just go to https://stackblitz.com/edit/afteropened-not-always-emitted-15 and double click on the button.\n\n### Expected Behavior\n\n`afterOpened` should always emit a value before closing the dialog like in v14.\r\n\r\nhttps://stackblitz.com/edit/afteropened-not-always-emitted-14\n\n### Actual Behavior\n\n`afterOpened` is not emitted when the dialog is closed too fast.\r\n\r\nhttps://stackblitz.com/edit/afteropened-not-always-emitted-15\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26295","RelatedDescription":"Open issue \"bug(dialog): afterOpened not always emitted\" (#26295)"},{"Id":"1502882177","IsPullRequest":false,"CreatedAt":"2022-12-19T12:38:37","Actor":"PierreDugue","Number":"26294","RawContent":null,"Title":"help(mat-tab-nav-bar): Can't make auto-scrool to work along with mat tabs when dragging an item","State":"open","Body":"### What are you trying to do?\n\nI'm using material tabs. Is there a way to use the auto scroll when dragging a tab with CDK drag drop?\r\n See :\r\nhttps://stackblitz.com/edit/angular-wpv2er-djgsig?file=src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.ts,src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.html\n\n### What troubleshooting steps have you tried?\n\nTrying to add cdkScrollable is not working.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a mat-tab-nav-bar with a list of mat-tab-link inside (enough to trigger tabs pagination)\r\n2. Add cdk Dragdrop\r\n3. Try to drag a tab on the right or left to trigger pagination -> nothing is happening\r\n\n\n### Environment\n\n- Angular: latest version\r\n- CDK/Material: latest version\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n","Url":"https://github.com/angular/components/issues/26294","RelatedDescription":"Open issue \"help(mat-tab-nav-bar): Can't make auto-scrool to work along with mat tabs when dragging an item\" (#26294)"},{"Id":"1502386215","IsPullRequest":false,"CreatedAt":"2022-12-19T08:27:02","Actor":"iKrishnaSahu","Number":"26293","RawContent":null,"Title":"bug(mat-checkbox): Multiple cdk-keyboard-focused class instances if using cdkMonitorElementFocus inside legacy checkbox","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMultiple `cdk-keyboard-focused` class instances if using `cdkMonitorElementFocus` inside legacy checkbox\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open [this stackblitz](https://stackblitz.com/edit/angular-1qw5ga-bfdibz?file=src/app/checkbox-configurable-example.html)\r\n2. Inspect checkbox as well as anchor tag\r\n3. Now navigate to the anchor tag via keyobard\r\n4. `cdk-keyboard-focused` class is applied to both checkbox and link\r\n\n\n### Expected Behavior\n\n`cdk-keyboard-focused` class should not get applied to both the elements\n\n### Actual Behavior\n\n`cdk-keyboard-focused` class is gettting applied to both the elements\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26293","RelatedDescription":"Closed issue \"bug(mat-checkbox): Multiple cdk-keyboard-focused class instances if using cdkMonitorElementFocus inside legacy checkbox\" (#26293)"},{"Id":"1502378970","IsPullRequest":false,"CreatedAt":"2022-12-19T06:15:43","Actor":"iKrishnaSahu","Number":"26292","RawContent":null,"Title":"bug(mat-checkbox): cdk-keyboard-focused is missing in mdc checkbox","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\n`cdk-keyboard-focused` is missing in mdc checkbox\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Visit https://material.angular.io/components/checkbox/overview\r\n2. Inspect `mat-checkbox`\r\n3. Now navigate to checkbox using keyboard\r\n4. Check `cdk-keyboard-focused` class is missing\r\n\n\n### Expected Behavior\n\n`cdk-keyboard-focused` should be added if we are navigating via keyboard\n\n### Actual Behavior\n\n`cdk-keyboard-focused` is not getting added if we are navigating via keyboard\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26292","RelatedDescription":"Open issue \"bug(mat-checkbox): cdk-keyboard-focused is missing in mdc checkbox\" (#26292)"},{"Id":"1502039965","IsPullRequest":false,"CreatedAt":"2022-12-18T21:27:06","Actor":"juliusstoerrle","Number":"26291","RawContent":null,"Title":"bug(cdkMenu): navigation is not triggered on SPACE and ENTER for cdkMenuItem on a-elements","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.0.0\r\n\r\n### Description\r\n\r\nUsing cdkMenuItem on an a element is not working anymore in regards to keyboard interaction.\r\nThis is the same bug as #25584 was:\r\n\r\n> Navigation does not occur on pressing Enter or Space when <a> element has cdkMenuItem.\r\n> `<a routerLink=\"/\" fragment=\"menu-1\" cdkMenuItem>item 1</a>`\r\n\r\nThis had been fixed for 15.0.0, but a later issue (#26033) with was resolved in 15.0.1 with PR #26051 effectively broke the fix for this issue from PR #25591. I guess both issues compete against each other here.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/components-issue-rree4e?file=src%2Fapp%2Fexample-component.html\r\n2. Use keyboard to focus a link at the top and press Enter to navigate. Nothing happens.\r\n3. Use keyboard to focus a link at the bottom and press Enter to navigate. Navigation occurs.\r\n\r\n### Expected Behavior\r\nI would expect `a` elements to work with this directive as this is considered best-practice by my understanding. Here a reference to the Angular Material documentation:\r\n> Native `<button>` and `<a>` elements are always used in order to provide the most straightforward and accessible experience for users. A `<button>` element should be used whenever some action is performed. **An `<a>` element should be used whenever the user will navigate to another view.** - https://material.angular.io/components/button/overview\r\n\r\n\r\n### Actual Behavior\r\n\r\nNo navigation is triggered.\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Firefox","Url":"https://github.com/angular/components/issues/26291","RelatedDescription":"Open issue \"bug(cdkMenu): navigation is not triggered on SPACE and ENTER for cdkMenuItem on a-elements\" (#26291)"},{"Id":"1501975218","IsPullRequest":false,"CreatedAt":"2022-12-18T17:17:34","Actor":"romainmoreau","Number":"26290","RawContent":null,"Title":"bug(snack-bar): MDC media query not correctly working","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nSince v15, MDC snack bar is used and it provides a breakpoint at 480px which overrides `mdc-snackbar__surface`'s `min-width` to `100%` but it doesn't work correctly for Material Angular snack bars where it seems to take min content width instead of full viewport width.\r\n\r\nAlso, just a thought: is `handsetCssClass` still relevant now there is already this MDC breakpoint? (it's seems redundant)\n\n### Reproduction\n\nAll the behaviors described below are achieved using Chrome's device toolbar with responsive dimensions of 480x400.\n\n### Expected Behavior\n\nWhen looking at the example from [MDC Web](https://material-components.github.io/material-components-web-catalog/#/component/snackbar), the `min-width` is working as expected (by taking the full width of the viewport):\r\n![material-components github io_material-components-web-catalog_ (3)](https://user-images.githubusercontent.com/1763676/208309213-ae7319a2-200b-4060-ada5-9a02a5d6e8fb.png)\r\n\r\nJust for reference, here's how it was working in v14 (correctly because no MDC breakpoint):\r\n![wrong-snackbar-action-color-with-mat-app-background-14 stackblitz io_ (2)](https://user-images.githubusercontent.com/1763676/208309407-6901b7a3-9b8e-4aa1-adc1-b2babeb4d877.png)\r\n(https://stackblitz.com/edit/wrong-snackbar-action-color-with-mat-app-background-14?file=src%2Fapp%2Fapp.component.ts)\n\n### Actual Behavior\n\nInstead of taking the full width of the viewport like in the MDC Web example, in v15, the Angular Material snack bar seems to take min content width:\r\n![wrong-snackbar-action-color-with-mat-app-backgrou-39aglb stackblitz io_](https://user-images.githubusercontent.com/1763676/208309431-f12311d6-0dde-4a1b-8502-191301fbab3d.png)\r\n(https://stackblitz.com/edit/wrong-snackbar-action-color-with-mat-app-background-15?file=src%2Fapp%2Fapp.component.ts)\n\n### Environment\n\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26290","RelatedDescription":"Open issue \"bug(snack-bar): MDC media query not correctly working\" (#26290)"},{"Id":"1501819194","IsPullRequest":true,"CreatedAt":"2022-12-18T08:50:11","Actor":"crisbeto","Number":"26289","RawContent":null,"Title":"fix(material/slider): dragEnd not being emitted","State":"open","Body":"The `dragStart` and `dragEnd` events were being emitted in the `_fixValue` method, however the call to `_fixValue` was removed from the ending sequence in #26215. This meant that the `dragEnd` event was no longer being emitted.\r\n\r\nThese changes move the `dragStart` and `dragEnd` events into the pointer down/up handlers instead since emitting them has nothing to do with fixing the value.\r\n\r\nFixes #26285.","Url":"https://github.com/angular/components/pull/26289","RelatedDescription":"Open PR \"fix(material/slider): dragEnd not being emitted\" (#26289)"},{"Id":"1499401463","IsPullRequest":false,"CreatedAt":"2022-12-18T07:03:40","Actor":"OlenaPeretiatko","Number":"26277","RawContent":null,"Title":"bug(mat-tab-link): Selector ::before is not working in `mat-tab-link` class","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13.1.1\n\n### Description\n\nI used to have selectors .mat-tab-label-active::before, .mat-tab-label-active::after, which worked great in version 13, but after updating to version 14 only ::after works good, and selector with ::before not showing at all.\n\n### Reproduction\n\n-\n\n### Expected Behavior\n\nall selectors works good\n\n### Actual Behavior\n\nselector ::before is not working\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26277","RelatedDescription":"Closed issue \"bug(mat-tab-link): Selector ::before is not working in `mat-tab-link` class\" (#26277)"},{"Id":"1500190002","IsPullRequest":false,"CreatedAt":"2022-12-18T06:58:24","Actor":"EMokro","Number":"26282","RawContent":null,"Title":"bug(MatCheckbox): disableRipple not working","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nCurrently the disableRipple directive does nothing.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. use Angular Material 15\r\n2. use `disableRipple` on `mat-checkbox`\r\n\r\nHere is an Stackblitz example\r\nhttps://stackblitz.com/edit/angular-xvd8ju?file=src/app/checkbox-configurable-example.html\r\nor repo\r\nhttps://github.com/EMokro/angular-material-15-checkbox-no-ripple\n\n### Expected Behavior\n\nIt should disable the mat ripple effect.\n\n### Actual Behavior\n\nIt does nothing\n\n### Environment\n\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Brave v1.46.144 / Chromium 108.0.5359.128\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26282","RelatedDescription":"Closed issue \"bug(MatCheckbox): disableRipple not working\" (#26282)"},{"Id":"1501318223","IsPullRequest":false,"CreatedAt":"2022-12-17T10:37:39","Actor":"sterlp","Number":"26288","RawContent":null,"Title":"bug(MatButtonModule): mat-icon-button changes the base line","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n7\r\n\r\n### Description\r\n\r\nThe horizontal line alignment gets broken as soon as a 'mat-icon-button' is added. This issue seems to be new, I even found an existing example with version 7 in which it's not present:\r\n\r\nhttps://stackblitz.com/edit/angular-fvhjtf\r\n\r\nI think version 12 wasn't affected too.\r\n\r\n### Related issues found\r\nhttps://github.com/angular/components/issues/26126\r\nhttps://github.com/google/material-design-icons/issues/206\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. create a new angular project\r\n2. add material design\r\n3. replace all html with the given\r\n4. Add imports MatButtonModule, MatIconModule\r\n5. `ng server -open`\r\n\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-qrzw77?file=src/app/app.component.html\r\n\r\n```html\r\n<div>\r\n  <button mat-icon-button>\r\n    <mat-icon>arrow_upward</mat-icon>\r\n  </button>\r\n  <button mat-raised-button>Click me!</button>\r\n</div>\r\n```\r\n\r\n### Expected Behavior\r\n\r\n<img width=\"188\" alt=\"Bildschirm­foto 2022-12-17 um 11 30 47\" src=\"https://user-images.githubusercontent.com/774984/208237689-ebe859cb-4128-4600-bf54-9aeea453671f.png\">\r\n\r\nhttps://stackblitz.com/edit/angular-fvhjtf\r\n\r\n### Actual Behavior\r\n\r\n<img width=\"303\" alt=\"Bildschirm­foto 2022-12-17 um 11 29 31\" src=\"https://user-images.githubusercontent.com/774984/208237697-06fb829d-ffc1-453b-a549-4df2b105b414.png\">\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-qrzw77?file=src/app/app.component.html\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome, Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26288","RelatedDescription":"Open issue \"bug(MatButtonModule): mat-icon-button changes the base line\" (#26288)"},{"Id":"1501133971","IsPullRequest":false,"CreatedAt":"2022-12-17T03:11:43","Actor":"davidshen84","Number":"26287","RawContent":null,"Title":"bug(mat-slider): value label is invisible inside a mat-list-item","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\n```\r\n  <mat-list role=\"list>\r\n      <mat-list-item role=\"listitem\" >\r\n        Length:\r\n        <mat-slider max=\"99\" min=\"1\" step=\"1\" showTickMarks discrete>\r\n          <input matSliderThumb [formControl]=\"SliderControl\">\r\n        </mat-slider>\r\n      </mat-list-item>\r\n  </mat-list>\r\n```\r\n\r\nIn the above example, I am trying to display a value label when a user moves the slider thumb. The label is displayed correctly if the `mat-slider` is not inside a `mat-list-item`. But if it is inside a `mat-list-item`, I can only see the bottom of the label. \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a new project with Angular 15\r\n2. Put a `mat-slider` with `discrete` attribute inside a `mat-list-item`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe label should be visible.\r\n\r\n### Actual Behavior\r\n\r\nThe label is not fully visible.\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.3\r\n- Browser(s): 108.0.5359.100\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26287","RelatedDescription":"Open issue \"bug(mat-slider): value label is invisible inside a mat-list-item\" (#26287)"},{"Id":"1498958686","IsPullRequest":true,"CreatedAt":"2022-12-16T23:08:39","Actor":"kseamon","Number":"26275","RawContent":null,"Title":"fix(material-experimental/popover-edit): Make cell focus indicator vi…","State":"closed","Body":"…sible in high contrast (forced colors) mode\r\n\r\n![image](https://user-images.githubusercontent.com/923677/207948097-e24af0bc-1cf2-4180-89de-7c34a85b6ed7.png)\r\n","Url":"https://github.com/angular/components/pull/26275","RelatedDescription":"Closed or merged PR \"fix(material-experimental/popover-edit): Make cell focus indicator vi…\" (#26275)"},{"Id":"1500802511","IsPullRequest":false,"CreatedAt":"2022-12-16T20:14:20","Actor":"mlc-mlapis","Number":"26286","RawContent":null,"Title":"@angular/material/core/theming/_theming.scss (v15.0.3) problems","State":"open","Body":"### Description\r\n\r\nAfter installing the `\"@angular/material\": \"15.0.3\"` package, strange errors related to `@use '../density/private/compatibility';` appears in the `@angular/material/core/theming/_theming.scss` file. It seems that variables from the `_compatibility.scss` file are not accessible in `_theming.scss`.\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208179635-22eb9d1b-8934-49d8-8015-e22d17557a4b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208180165-84b97ddb-2983-496e-ba3f-1cbf5d006b60.png)\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. `npm i @angular/material`\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo such problems inside an official package.\r\n\r\n### Actual Behavior\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208180165-84b97ddb-2983-496e-ba3f-1cbf5d006b60.png)\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome 108.0.5359.125 \r\n- Operating System: Windows 10\r\n","Url":"https://github.com/angular/components/issues/26286","RelatedDescription":"Open issue \"@angular/material/core/theming/_theming.scss (v15.0.3) problems\" (#26286)"},{"Id":"1500775761","IsPullRequest":false,"CreatedAt":"2022-12-16T19:48:22","Actor":"ChristopherSnay","Number":"26285","RawContent":null,"Title":"bug(mat-slider): dragEnd event no longer triggers for matSliderStartThumb and matSliderEndThumb","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.1\n\n### Description\n\nThe events no longer fire without any code change since 15.0.1. \r\n\r\n```\r\n<mat-slider>\r\n    <input matSliderStartThumb (dragEnd)=\"dragEnded($event)\">\r\n    <input matSliderEndThumb (dragEnd)=\"dragEnded($event)\">\r\n</mat-slider>\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add a new mat-slider with start and stop thumbs. \r\n2. Add a dragEnd event to each input\r\n3. Event is not triggered. \r\n\n\n### Expected Behavior\n\nThe event should fire on dragEnd\n\n### Actual Behavior\n\nThe event does not fire on dragEnd\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26285","RelatedDescription":"Open issue \"bug(mat-slider): dragEnd event no longer triggers for matSliderStartThumb and matSliderEndThumb\" (#26285)"},{"Id":"1500569637","IsPullRequest":true,"CreatedAt":"2022-12-16T17:09:24","Actor":"aanchal88","Number":"26284","RawContent":null,"Title":"test: removed empty methods from components","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26284","RelatedDescription":"Open PR \"test: removed empty methods from components\" (#26284)"},{"Id":"1500531674","IsPullRequest":true,"CreatedAt":"2022-12-16T16:40:12","Actor":"zarend","Number":"26283","RawContent":null,"Title":"fix(material/list): add opt-out for radio indicators","State":"open","Body":"Add an opt-out for radio indicators for single-selection. Adds both an Input and DI token to specify if radio indicators are hidden. By default, display radio indicators. If both DI token and Input are specified, the Input wins.\r\n\r\nPR #25933 added radio toggles for single-selection. Add an opt-out to provide a way to have same appearance as before #25933.\r\n\r\nAPI changes\r\n - add `@Input hideSingleSelectionIndicator` to specify if radio indicators are displayed\r\n - add MAT_LIST_CONFIG token to specify default value for `hideSingleSelectionIndicator`","Url":"https://github.com/angular/components/pull/26283","RelatedDescription":"Open PR \"fix(material/list): add opt-out for radio indicators\" (#26283)"},{"Id":"1500014497","IsPullRequest":false,"CreatedAt":"2022-12-16T15:07:34","Actor":"Selindek","Number":"26280","RawContent":null,"Title":"bug(Material): css variables don't work in color palettes","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nif I define a palette this way: \r\n\r\n$dynamic-primary: (\r\n...\r\n  500: var(--theme-primary-500),\r\n...\r\n  contrast: (\r\n...\r\n    500: var(--theme-primary-contrast-500),\r\n...\r\n  ),\r\n);\r\n\r\n... and pass it to a theme, then I got a warning/error during compilation.\r\n\r\nIf I use all-legacy-component-themes() I get only a warning, but all-component-themes() throws an error.\r\n\r\nThe variable --theme-promary-500 can be defined in css and/or from ts. (or even overridden when the user selects a new color.) It worked nicely in the previous version.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. pass a color as a css variable into a palette: var(--theme-primary-500)\r\n2. try to build.\r\n\n\n### Expected Behavior\n\nno warning, no error\n\n### Actual Behavior\n\nwarning / error:\r\nvar(--theme-primary-500) is not a color. Falling back to \"dark\" tone.\n\n### Environment\n\n- Angular:  15.0.2\r\n- CDK/Material: 15.0.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26280","RelatedDescription":"Closed issue \"bug(Material): css variables don't work in color palettes\" (#26280)"},{"Id":"1498092276","IsPullRequest":true,"CreatedAt":"2022-12-16T14:16:40","Actor":"crisbeto","Number":"26268","RawContent":null,"Title":"fix(material/snack-bar): set explicit color on action in dark themes","State":"closed","Body":"We were setting the snack bar action color to `currentColor` on dark themes which might not work as expected if there is a `color` on the `body`. These changes set it to an explicit color.\r\n\r\nFixes #26247.","Url":"https://github.com/angular/components/pull/26268","RelatedDescription":"Closed or merged PR \"fix(material/snack-bar): set explicit color on action in dark themes\" (#26268)"},{"Id":"1500163472","IsPullRequest":false,"CreatedAt":"2022-12-16T12:55:33","Actor":"OlivierNourry","Number":"26281","RawContent":null,"Title":"bug(mat-menu) trigger is setting aria-expanded to null instead of false ","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is kind of a re-opening of #16859 that was closed for inactivity. \r\n\r\nThe possible values for `aria-expanded`  are `true`, `false`, or `undefined` (see https://www.w3.org/TR/wai-aria-1.1/#aria-expanded for reference). The default value is `undefined`, implying that either there are no children for the element, or these children are all visible in the UI. Which, in effect, is exactly the same as when the value is `true`. Thus, when the value of `aria-expanded` is anything other than `false`, it is actually equivalent to  `true`.\r\nIn this case, having `null` instead of  `false` results in having  `true` instead of  `false` -- meaning that users get the opposite of the intended information.\r\n\r\nThe consequence is that blind users of screen readers are led to believe that the menu is displayed, whereas it's collapsed. This doesn't come from the screen reader actually, but from the browser that populates the accessibility API with the info it is fed with through the HTML code -- which is incorrect here.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add a button with [matTriggerFor] for a mat menu\r\n<button mat-icon-button\r\n        #menuButton\r\n        [matMenuTriggerFor]=\"exampleMenu\">\r\n</button>\r\n\r\n<mat-menu #exampleMenu=\"matMenu\">\r\n2. Inspect the accessibility information of the element in the browser, with the menu collapsed (\"States\" section in Firefox in the Accessibility view. In Chrome, check the Accessibility tab in the Inspector)\r\n\n\n### Expected Behavior\n\nIn the \"States\" section in Firefox, one item is \"Collapsed\" (no Expanded). In Chrome, the property Expanded is set to false\n\n### Actual Behavior\n\nIn the \"States\" section in Firefox, one item is \"Expanded\". In Chrome, the property Expanded is set to true\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Firefox, Chrome (not checked but other browsers that follow the spec will show the same behavior)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): not relevant\r\n","Url":"https://github.com/angular/components/issues/26281","RelatedDescription":"Open issue \"bug(mat-menu) trigger is setting aria-expanded to null instead of false \" (#26281)"},{"Id":"1499864756","IsPullRequest":true,"CreatedAt":"2022-12-16T09:22:08","Actor":"crisbeto","Number":"26279","RawContent":null,"Title":"fix(material/menu): aria-expanded not updating in an OnPush component","State":"open","Body":"Fixes that the value for `aria-expanded` wasn't being updated when the menu is closed inside an OnPush parent.\r\n\r\nFixes #26262.","Url":"https://github.com/angular/components/pull/26279","RelatedDescription":"Open PR \"fix(material/menu): aria-expanded not updating in an OnPush component\" (#26279)"},{"Id":"1499826331","IsPullRequest":false,"CreatedAt":"2022-12-16T08:53:42","Actor":"tchandelle","Number":"26278","RawContent":null,"Title":"bug(typography): migration to v15 error with `mat.define-legacy-typography-config` conversion","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen upgrading from v14 to v15, conversion of `mat.define-typography-config()` to `mat.define-legacy-typography-config()` is broken.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n\r\n1. Checkout [tchandelle/angular-components@08589da](https://github.com/tchandelle/angular-components-26278/tree/08589da9ce454acdb0ed3e5021e3a17964f6364a)\r\n2.  Upgrade to v15 with `npx ng update -C @angular/material@15`\r\n3. See the issue here: https://github.com/tchandelle/angular-components-26278/blob/4d52c4d6673827731ce52eea5e88b44fedd99fd7/src/app/app.component.scss#L3\r\n\r\n---\r\n\r\n1. Have a component scss in v14 like:\r\n````scss\r\n@use '@angular/material' as mat;\r\n.foo {\r\n  $typo: mat.define-typography-config();\r\n  > h3 {\r\n    @include mat.typography-level($typo, subheading-2);\r\n  }\r\n}\r\n````\r\nThe component is declared as:\r\n````ts\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'foo',\r\n  templateUrl: './foo.component.html',\r\n  styleUrls: ['./foo.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n}\r\n```` \r\n\r\n2. Upgrade to v15 with `npx ng update -C @angular/material@15`\r\n\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould be converted to `$typo: mat.define-legacy-typography-config();`\r\n\r\n### Actual Behavior\r\n\r\nConverted instead to `$typo: mat.define-legacy-typography-configmat.define-legacy-typography-config();`\r\n\r\nSome are even converted to `$typo: mat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-config();`.\r\n\r\nIt seems the number of repetition correlate with the number of level in the scss:\r\n````scss\r\n.foo {\r\n  // 1st level > repeated 2 times\r\n  $typo: mat.define-legacy-typography-configmat.define-legacy-typography-config();\r\n  .bar {\r\n    // 2nd levels > repeated 3 times\r\n    $typo: mat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-config();\r\n  }\r\n}\r\n````\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4 (migrated from 14.2.10)\r\n- CDK/Material: 15.0.3 (migrated from (14.2.7)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): darwin x64\r\n- Node: 18.12.1\r\n- Package Manager: yarn 3.1.1\r\n","Url":"https://github.com/angular/components/issues/26278","RelatedDescription":"Open issue \"bug(typography): migration to v15 error with `mat.define-legacy-typography-config` conversion\" (#26278)"},{"Id":"1499147464","IsPullRequest":true,"CreatedAt":"2022-12-15T21:44:14","Actor":"wagnermaciel","Number":"26276","RawContent":null,"Title":"fix(material/slider): match ios safari slider behavior","State":"open","Body":"* On ios, dragging only starts if the slider thumb is pressed. This means pressing the track and dragging does nothing.\r\n* On ios, values are updated on pointer up.\r\n* For some reason, the full width of the slider is off by 2 on ios safari.","Url":"https://github.com/angular/components/pull/26276","RelatedDescription":"Open PR \"fix(material/slider): match ios safari slider behavior\" (#26276)"},{"Id":"1498895188","IsPullRequest":true,"CreatedAt":"2022-12-15T18:38:09","Actor":"devversion","Number":"26274","RawContent":null,"Title":"build: update renovate to not apply `merge safe` label","State":"closed","Body":"The `merge safe` label is no longer used in the components repo. Declaring the label in the renovate config results in the label being created all the time.","Url":"https://github.com/angular/components/pull/26274","RelatedDescription":"Closed or merged PR \"build: update renovate to not apply `merge safe` label\" (#26274)"},{"Id":"1498677455","IsPullRequest":false,"CreatedAt":"2022-12-15T15:53:47","Actor":"calebegg","Number":"26273","RawContent":null,"Title":"bug(all): Strong focus indicators should only show when the user uses the keyboard to navigate","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nhttps://v12.material.angular.io/guide/theming#strong-focus-indicators\n\n### Reproduction\n\nreproduces in the trivial case\n\n### Expected Behavior\n\nAccording to guidance we've received from the Material Design team, focus indicators are only expected to be visible when the user has used the keyboard to focus the item\n\n### Actual Behavior\n\nFocus indicators are showing on click\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26273","RelatedDescription":"Open issue \"bug(all): Strong focus indicators should only show when the user uses the keyboard to navigate\" (#26273)"},{"Id":"1498650181","IsPullRequest":false,"CreatedAt":"2022-12-15T15:35:21","Actor":"anschm","Number":"26272","RawContent":null,"Title":"bug(DIALOG): Background not set from background palette","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThe --mdc-dialog-container-color css variable does not get the correct color value from the background palette. I am defining a background palette like:\r\n\r\n`\r\n$dark-theme-background-palette: (\r\n  status-bar: #000000,\r\n  app-bar: map-get($beeze-grey-palette, 500),\r\n  background: map-get($beeze-grey-palette, 500),\r\n  hover: rgba(white, 0.04),\r\n  card: map-get($beeze-grey-palette, 400),\r\n  dialog: map-get($beeze-grey-palette, 500),\r\n  disabled-button: rgba(white, 0.12),\r\n  raised-button: map-get($beeze-grey-palette, 500),\r\n  focused-button: $beeze-light-focused,\r\n  selected-button: map-get($beeze-blue-palette, 500),\r\n  selected-disabled-button: map-get($beeze-blue-palette, 700),\r\n  disabled-button-toggle: black,\r\n  unselected-chip: map-get($beeze-grey-palette, 400),\r\n  disabled-list-option: black,\r\n  tooltip: map-get($beeze-grey-palette, 400),\r\n  // Not from angular material\r\n  swiper-item-border: rgba(249, 249, 249, 0.8),\r\n  highlight: map-get($beeze-blue-palette, 700),\r\n  profile-expansion-background: rgba(22, 28, 38, 0.5)\r\n);\r\n`\r\nWith the following function I am creating the theme and merge the background into the color palette.\r\n\r\n`\r\n@function define-dark-theme($config, $foreground, $background) {\r\n  $theme: mat.define-dark-theme($config);\r\n  $color: mat.get-color-config($theme);\r\n  $color: map.merge($color, (foreground: $foreground, background: $background));\r\n  @return map.merge($theme, (color: $color));\r\n}\r\n\r\n$dark-theme: define-dark-theme(\r\n    (\r\n      color: (\r\n        primary: palette.$primary-palette,\r\n        accent: palette.$accent-palette,\r\n        warn: palette.$warn-palette,\r\n      ),\r\n      typography: mat.define-typography-config()\r\n    ),\r\n    palette.$dark-theme-foreground-palette,\r\n    palette.$dark-theme-background-palette\r\n);\r\n\r\n@include mat.all-component-themes($dark-theme);\r\n@include mat.typography-hierarchy($dark-theme);\r\n`\r\nThe mdc-dialog-container-color css variable has not the value map-get($beeze-grey-palette, 500). The variable has the value map-get($beeze-grey-palette, 400), which is a little bit lighter.\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create background palette\r\n2. Merge into color theme palette\r\n3. Open dialog an check background color\r\n\n\n### Expected Behavior\n\nDialog should have the defined color from the background palette.\n\n### Actual Behavior\n\nBackground color of dialog is lighter.\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac\r\n","Url":"https://github.com/angular/components/issues/26272","RelatedDescription":"Open issue \"bug(DIALOG): Background not set from background palette\" (#26272)"},{"Id":"1498533035","IsPullRequest":false,"CreatedAt":"2022-12-15T14:24:28","Actor":"mcarriere","Number":"26271","RawContent":null,"Title":"bug(mat-form-field): mat-form-field appearance outline with mat-icon as matPrefix inside a mat-tab","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13\r\n\r\n### Description\r\n\r\nIf we have a `<mat-form-field appearance=\"outline\">` containing a `<mat-icon matPrefix>` inside a `<mat-tab>` that is not displayed initially, the label isn't positioned correctly.\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-svduwe?file=src%2Fapp%2Fapp.component.html,angular.json,src%2Fstyles.scss,src%2Fapp%2Fapp.module.ts,src%2Findex.html\r\n\r\n```\r\n<mat-tab-group>\r\n  <mat-tab label=\"First\">\r\n    <p>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-icon matPrefix>search</mat-icon>\r\n        <mat-label>Outline form field</mat-label>\r\n        <input matInput placeholder=\"Placeholder\" />\r\n      </mat-form-field>\r\n    </p>\r\n  </mat-tab>\r\n  <mat-tab label=\"Second\">\r\n    <p>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-icon matPrefix>search</mat-icon>\r\n        <mat-label>Outline form field</mat-label>\r\n        <input matInput placeholder=\"Placeholder\" />\r\n      </mat-form-field>\r\n    </p>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe text should be aligned correctly after the icon\r\n\r\n### Actual Behavior\r\n\r\n![image](https://user-images.githubusercontent.com/25467653/207881998-8d73d9a7-147c-46b6-95cc-99fd76acd432.png)\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome/Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows. MacOS\r\n","Url":"https://github.com/angular/components/issues/26271","RelatedDescription":"Open issue \"bug(mat-form-field): mat-form-field appearance outline with mat-icon as matPrefix inside a mat-tab\" (#26271)"},{"Id":"1498268068","IsPullRequest":false,"CreatedAt":"2022-12-15T11:33:30","Actor":"yutamago","Number":"26270","RawContent":null,"Title":"docs-bug(mat-tab-nav-panel): Documentation implies that [tabPanel] is optional, but must be specified.","State":"open","Body":"### Documentation Feedback\n\nThe documentation implies that [tabPanel] can be left unprovided by saying \"If not provided, then the nav bar follows the ARIA link / navigation landmark pattern\".\r\n\r\nHowever, if left unprovided, it will throw an error stating: \"A mat-tab-nav-panel must be specified via [tabPanel]\".\n\n### Affected documentation page\n\nhttps://material.angular.io/components/tabs/api#MatTabNav","Url":"https://github.com/angular/components/issues/26270","RelatedDescription":"Open issue \"docs-bug(mat-tab-nav-panel): Documentation implies that [tabPanel] is optional, but must be specified.\" (#26270)"},{"Id":"1498246301","IsPullRequest":false,"CreatedAt":"2022-12-15T11:16:25","Actor":"znjs","Number":"26269","RawContent":null,"Title":"bug(COMPONENT): Angular mat-table UI not updating on datasource update - (signalr-azure service live update)","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWe are using server-stream updates from the signalr-azure service to get live updates from the backend, and the WebSocket is blocked on the client-side(browser). \r\nWe can observe that the data is being updated in debugging, but the mat-table UI is not updated without any mouse events.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a signalr-service for live updates\r\n2. Create a connection with signalr service and render the incoming data in a mat-table\r\n3. Block the web-socket on client-side(browser), use event stream updates to receive data from signalr\r\n4. Create a button to reload the data, onClick of the button expected to update the mat-table with recent data.\r\n\n\n### Expected Behavior\n\nmat-table should load the data onClick of the button\n\n### Actual Behavior\n\nmat-table `datasource` being updated but not reflected in the UI until any mouse event is performed (cursor movement)\n\n### Environment\n\n- Angular: 13.0.x\r\n- CDK/Material: v 13.0.2\r\n- Browser(s): Chrome Version 108.0.5359.98 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26269","RelatedDescription":"Open issue \"bug(COMPONENT): Angular mat-table UI not updating on datasource update - (signalr-azure service live update)\" (#26269)"},{"Id":"1497850817","IsPullRequest":false,"CreatedAt":"2022-12-15T07:04:08","Actor":"jpike88","Number":"26267","RawContent":null,"Title":"mat-menu causing black overlay flicker when dismissed","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.7\r\n\r\n### Description\r\n\r\nSee video. I've recorded the behaviour and included DOM\r\n\r\nUp in the window is a mat-menu, and opening it works fine. When I dismiss it however, a black flicker occurs on the whole window (which you can screen in the upper area of the video).\r\n\r\nhttps://user-images.githubusercontent.com/9585787/207785076-211eb9d7-11a8-4ed5-bb75-eef4fc67003c.mov\r\n\r\nI think the issue has something to do with the visibility and transition styles here\r\n\r\n<img width=\"301\" alt=\"Screenshot 2022-12-15 at 1 06 36 pm\" src=\"https://user-images.githubusercontent.com/9585787/207785267-6017fcdb-2893-43bb-9982-22964f3d2c53.png\">\r\n\r\n\r\n### Reproduction\r\n\r\nSee video\r\n\r\n### Expected Behavior\r\n\r\nNo flicker\r\n\r\n### Actual Behavior\r\n\r\nThere's a flicker\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material:15.0.3\r\n- Browser(s): Safari 16.2\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26267","RelatedDescription":"Closed issue \"mat-menu causing black overlay flicker when dismissed\" (#26267)"},{"Id":"1497434578","IsPullRequest":true,"CreatedAt":"2022-12-14T21:41:03","Actor":"amysorto","Number":"26266","RawContent":null,"Title":"Bump version to \"v15.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26266","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0-next.2\" with changelog.\" (#26266)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-20T03:30:03.4319149Z","RunDurationInMilliseconds":2328}