{"Data":{"Angular-Issues":{"Issues":[{"Id":"2019950412","IsPullRequest":true,"CreatedAt":"2023-12-01T02:51:31","Actor":"AndrewKushnir","Number":"53305","RawContent":null,"Title":"fix(compiler): generate proper code for nullish coalescing in styling host bindings","State":"open","Body":"This commit fixes an issue where having an expression with nullish coalescing in styling host bindings leads to JS errors due to the fact that a declaration for a temporary variable was not included into the generated code.\r\n\r\nResolves #53295.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53305","RelatedDescription":"Open PR \"fix(compiler): generate proper code for nullish coalescing in styling host bindings\" (#53305)"},{"Id":"2019745335","IsPullRequest":true,"CreatedAt":"2023-12-01T00:10:32","Actor":"AndrewKushnir","Number":"53304","RawContent":null,"Title":"fix(core): support hydration for cases when content is re-projected using ng-template","State":"open","Body":"This commit fixes an issue with hydration, which happens when a content is projected in a certain way, leaving host elements non-projected, but the child content projected.\r\n\r\nThe fix is to detect such situations and add extra annotations to help runtime logic locate those elements at the right locations.\r\n\r\nResolves #53276.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53304","RelatedDescription":"Open PR \"fix(core): support hydration for cases when content is re-projected using ng-template\" (#53304)"},{"Id":"2019713462","IsPullRequest":true,"CreatedAt":"2023-11-30T23:50:43","Actor":"atscott","Number":"53303","RawContent":null,"Title":"feat(router): Add info property to `NavigationExtras`","State":"open","Body":"This commit adds a property to the navigation options to allow developers to provide transient navigation info that is available for the duration of the navigation. This information can be retrieved at any time with `Router.getCurrentNavigation()!.extras.info`. Previously, developers were forced to either create a service to hold information like this or put it on the `state` object, which gets persisted to the session history.\r\n\r\nThis feature was partially motivated by the [Navigation API](https://github.com/WICG/navigation-api#example-using-info) and would be something we would want/need to have feature parity if/when the Router supports managing navigations with that instead of `History`.\r\n","Url":"https://github.com/angular/angular/pull/53303","RelatedDescription":"Open PR \"feat(router): Add info property to `NavigationExtras`\" (#53303)"},{"Id":"2019698763","IsPullRequest":false,"CreatedAt":"2023-11-30T23:41:27","Actor":"Wilson-Barbosa","Number":"53302","RawContent":null,"Title":"Making HTTP request documentation page not found","State":"open","Body":"### Describe the problem that you experienced\n\nI was reading throughout the Angular Documentation and the page that should display information on how to make HTTP requests in the http guide was deemed not found. Maybe it's because of the new version and the documentations that are being updated, but i wished to post it here, since it's quite the important topic. This is my first issue like this, sorry if I did a poor job explaining it!\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/http/making-requets\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/133286305/5d90a8a2-9878-4670-8db6-c3b1f83669ba)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53302","RelatedDescription":"Open issue \"Making HTTP request documentation page not found\" (#53302)"},{"Id":"2019672779","IsPullRequest":false,"CreatedAt":"2023-11-30T23:24:14","Actor":"ducin","Number":"53301","RawContent":null,"Title":"missing setup for devtools cypress tests (potentially dead code)","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\nThere's a [whole directory for cypress tests](https://github.com/angular/angular/tree/main/devtools/cypress) along with [config files](https://github.com/angular/angular/blob/main/devtools/cypress.json) which might be dead code. My guess is that might become dead after moving from package.json to bazel, since - according to git blame - the [appropriate cypress commands used to be there in the repo](https://github.com/rangle/angular-devtools/pull/45/files#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519R10-R11). And now in https://github.com/angular/angular/blob/main/devtools/BUILD.bazel#L8 only cypress.json is exported, but no commands seem to be run.\r\n\r\nI was thinking of providing end-to-end (or at least wide scope integration tests) for devtools anyway.\r\n\r\nPS This is an issue (not a PR) since I don't know which direction should we move forward.\r\n\r\n\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nEither we make cypress executable or we remove the tests entirely.\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/53301","RelatedDescription":"Open issue \"missing setup for devtools cypress tests (potentially dead code)\" (#53301)"},{"Id":"2019632715","IsPullRequest":true,"CreatedAt":"2023-11-30T22:44:28","Actor":"mmalerba","Number":"53300","RawContent":null,"Title":"Finish implementing ICUs in the template pipeline","State":"open","Body":"Contains a series of fixes for the last few remaining issues related to ICUs. See individual commits for more details","Url":"https://github.com/angular/angular/pull/53300","RelatedDescription":"Open PR \"Finish implementing ICUs in the template pipeline\" (#53300)"},{"Id":"2019584363","IsPullRequest":true,"CreatedAt":"2023-11-30T22:03:55","Actor":"jessicajaniuk","Number":"53299","RawContent":null,"Title":"fix(migrations): CF Migration - Fix case of aliases on i18n ng-templates preventing removal","State":"open","Body":"i18n template removal expected no other attributes to be present, but if a bound ngIf is present with aliases and i18n, that is more than what was expected. Now it should safely remove them appropriately.\r\n\r\nfixes: #53289\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53299","RelatedDescription":"Open PR \"fix(migrations): CF Migration - Fix case of aliases on i18n ng-templates preventing removal\" (#53299)"},{"Id":"2019562452","IsPullRequest":true,"CreatedAt":"2023-11-30T21:47:36","Actor":"jessicajaniuk","Number":"53298","RawContent":null,"Title":"fix(migrations): CF migration - ensure NgIfElse attributes are properly removed","State":"open","Body":"the attribute in question was assumed to be at the start of the replaced content, but it could be later, too.\r\n\r\nfixes: #53288\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53298","RelatedDescription":"Open PR \"fix(migrations): CF migration - ensure NgIfElse attributes are properly removed\" (#53298)"},{"Id":"2019543258","IsPullRequest":true,"CreatedAt":"2023-11-30T21:32:55","Actor":"jessicajaniuk","Number":"53297","RawContent":null,"Title":"fix(migrations): CF Migration add support for ngIf with just a then","State":"open","Body":"Prior to this fix, the expectation that anytime then was used, else would always be present. That is not a valid assumption.\r\n\r\nfixes: #53287\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53297","RelatedDescription":"Open PR \"fix(migrations): CF Migration add support for ngIf with just a then\" (#53297)"},{"Id":"2019520382","IsPullRequest":true,"CreatedAt":"2023-11-30T21:15:09","Actor":"jessicajaniuk","Number":"53296","RawContent":null,"Title":"fix(migrations): CF Migration fix missing alias for bound ngifs","State":"open","Body":"Empty aliases are considered the item in an ngFor, and ngIf was skipping that value.\r\n\r\nfixes: #53291\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53296","RelatedDescription":"Open PR \"fix(migrations): CF Migration fix missing alias for bound ngifs\" (#53296)"},{"Id":"2019499392","IsPullRequest":false,"CreatedAt":"2023-11-30T20:58:21","Actor":"ssougnez","Number":"53295","RawContent":null,"Title":"Using null coalescing operator with style host binding leads to an error","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using the host property of the \"Component\" decorator along with the null coalescing operator, the error \"tmp_b_0 is not defined\" is thrown.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-rh3swb?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nERROR\r\nError: tmp_b_0 is not defined\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.3\r\nNode: 20.9.0\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.3\r\n@angular-devkit/build-angular   17.0.3\r\n@angular-devkit/core            17.0.3\r\n@angular-devkit/schematics      17.0.3\r\n@angular/cli                    17.0.3\r\n@schematics/angular             17.0.3\r\nng-packagr                      17.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\nIt seems that replacing \"??\" by \"||\" works.","Url":"https://github.com/angular/angular/issues/53295","RelatedDescription":"Open issue \"Using null coalescing operator with style host binding leads to an error\" (#53295)"},{"Id":"2019423984","IsPullRequest":false,"CreatedAt":"2023-11-30T20:09:16","Actor":"e-oz","Number":"53294","RawContent":null,"Title":"API tab is not tall enough","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nOnly part of the API is rendered, and this area is non-scrollable:\r\n<img width=\"1133\" alt=\"Screenshot 2023-11-30 at 20 55 31\" src=\"https://github.com/angular/angular/assets/526352/7d0e7885-8b98-4026-baf6-fdb9471796e8\">\r\n\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/api/forms/FormGroup?tab=api\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nTry to find `statusChanges()` description in the API tab.\r\n","Url":"https://github.com/angular/angular/issues/53294","RelatedDescription":"Open issue \"API tab is not tall enough\" (#53294)"},{"Id":"2019417719","IsPullRequest":false,"CreatedAt":"2023-11-30T20:06:15","Actor":"hamfastgamgee","Number":"53293","RawContent":null,"Title":"Control flow schematic: @for (document of <collection>; track document) results in template not compiling","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe had a component processed by the migration that resulted in our iteration variable and our track variable both being named \"document\", but the template parser choked on this and said that all the HTML inside the @for did not have a \"createElement\" method.  It seems clear that the parser got confused with the global \"document\" object.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53293","RelatedDescription":"Open issue \"Control flow schematic: @for (document of <collection>; track document) results in template not compiling\" (#53293)"},{"Id":"2019397196","IsPullRequest":true,"CreatedAt":"2023-11-30T19:53:49","Actor":"clydin","Number":"53292","RawContent":null,"Title":"fix(compiler): allow TS jsDocParsingMode host option to be programmatically set again","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nAttempting to set the `jsDocParsingMode` option on a TS `CompilerHost` instance will currently result in the following error:\r\n`TypeError: this.delegate[name].bind is not a function`\r\n\r\nThis prevents the Angular CLI from adjusting this value.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nWhen the AOT compiler creates a delegated host for a provided TypeScript CompilerHost, it delegates functionality back to the original via a series of internal method delegations. However, unlike other members of the CompilerHost, `jsDocParsingMode` is not a method and cannot be delegated in this way. Attempting to call bind on the property will result in a runtime error. Instead, `jsDocParsingMode` is now delegated via get/set accessors. Additionally, the override of `getSourceFile` now has an updated type signature to reflect the additional of the `jsDocParsingMode` option for the method.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nThis is a followup to #53126 which updates the other DelegatingCompilerHost.\r\n","Url":"https://github.com/angular/angular/pull/53292","RelatedDescription":"Open PR \"fix(compiler): allow TS jsDocParsingMode host option to be programmatically set again\" (#53292)"},{"Id":"2019386326","IsPullRequest":false,"CreatedAt":"2023-11-30T19:45:44","Actor":"mattlewis92","Number":"53291","RawContent":null,"Title":"Control flow schematic: ng-template + [ngIf] + let- not migrated correctly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nInput:\r\n```\r\n<ng-template [ngIf]=\"viewModel$ | async\" let-vm>\r\n  {{vm | json}}\r\n</ng-template>\r\n```\r\n\r\nOutput:\r\n```\r\n@if (viewModel$ | async) {\r\n  {{vm | json}}\r\n}\r\n```\r\n\r\nExpected:\r\n```\r\n@if (viewModel$ | async; as vm) {\r\n  {{vm | json}}\r\n}\r\n\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.17.1\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0-next.2+sha-1940280\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nI am using `\"@angular/core\": \"angular/core-builds#17.1.0-next.2+1940280\",` which is built from the HEAD of the main branch and contains all the latest control flow migration fixes.","Url":"https://github.com/angular/angular/issues/53291","RelatedDescription":"Open issue \"Control flow schematic: ng-template + [ngIf] + let- not migrated correctly\" (#53291)"},{"Id":"2019384004","IsPullRequest":true,"CreatedAt":"2023-11-30T19:44:31","Actor":"josephperrott","Number":"53290","RawContent":null,"Title":"Build all the content!!!!","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/53290","RelatedDescription":"Open PR \"Build all the content!!!!\" (#53290)"},{"Id":"2019327040","IsPullRequest":false,"CreatedAt":"2023-11-30T19:03:48","Actor":"mattlewis92","Number":"53289","RawContent":null,"Title":"Control flow schematic: [ngIf] + i18n is not migrated correctly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nInput:\r\n```\r\n<ng-template\r\n  [ngIf]=\"data$ | async\"\r\n  let-data=\"ngIf\"\r\n  i18n=\"@@i18n-label\">\r\n  {{ data }}\r\n</ng-template>\r\n```\r\n\r\nOutput:\r\n```\r\n@if (data$ | async; as data) {\r\n  <ng-template\r\n    let-data=\"ngIf\"\r\n    i18n=\"@@i18n-label\">\r\n    {{ data }}\r\n  </ng-template>\r\n}\r\n```\r\n\r\nExpected output:\r\n```\r\n@if (data$ | async; as data) {\r\n  {{ data }}\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.17.1\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0-next.2+sha-1940280\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nI am using `\"@angular/core\": \"angular/core-builds#17.1.0-next.2+1940280\",` which is built from the HEAD of the main branch and contains all the latest control flow migration fixes.","Url":"https://github.com/angular/angular/issues/53289","RelatedDescription":"Open issue \"Control flow schematic: [ngIf] + i18n is not migrated correctly\" (#53289)"},{"Id":"2019321790","IsPullRequest":false,"CreatedAt":"2023-11-30T19:00:04","Actor":"mattlewis92","Number":"53288","RawContent":null,"Title":"Control flow schematic: [ngIf] + [ngIfElse] + [ngTemplateOutlet] is not migrated properly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nInput:\r\n```\r\n<ng-template\r\n  [ngIf]=\"fooTemplate\"\r\n  [ngIfElse]=\"barTemplate\"\r\n  [ngTemplateOutlet]=\"fooTemplate\"\r\n></ng-template>\r\n\r\n<ng-template #fooTemplate>Foo</ng-template>\r\n<ng-template #barTemplate>Bar</ng-template>\r\n\r\n```\r\n\r\nOutput:\r\n```\r\n@if (fooTemplate) {\r\n  <ng-template\r\n    [ngIfElse]=\"barTemplate\"\r\n    [ngTemplateOutlet]=\"fooTemplate\"\r\n  ></ng-template>\r\n} @else {\r\n  Bar\r\n}\r\n<ng-template #fooTemplate>Foo</ng-template>\r\n<ng-template #barTemplate>Bar</ng-template>\r\n```\r\n\r\nExpected output (`[ngIfElse]=\"barTemplate\"` should be removed):\r\n\r\n```\r\n@if (fooTemplate) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"fooTemplate\"\r\n  ></ng-template>\r\n} @else {\r\n  Bar\r\n}\r\n<ng-template #fooTemplate>Foo</ng-template>\r\n<ng-template #barTemplate>Bar</ng-template>\r\n\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.17.1\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0-next.2+sha-1940280\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nI am using `\"@angular/core\": \"angular/core-builds#17.1.0-next.2+1940280\",` which is built from the HEAD of the main branch and contains all the latest control flow migration fixes.","Url":"https://github.com/angular/angular/issues/53288","RelatedDescription":"Open issue \"Control flow schematic: [ngIf] + [ngIfElse] + [ngTemplateOutlet] is not migrated properly\" (#53288)"},{"Id":"2019307571","IsPullRequest":false,"CreatedAt":"2023-11-30T18:50:52","Actor":"mattlewis92","Number":"53287","RawContent":null,"Title":"Control flow schematic: empty ng-container is not migrated","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nApologies, I thought I had reported every issue we could find, but looks like some of these weren't covered by yesterdays reports. We now only have 10 / 3100 components that can't be migrated by the schematic, so we are really close! 😄 \r\n\r\nInput:\r\n```\r\n<ng-container\r\n  *ngIf=\"true; then template\"\r\n></ng-container>\r\n<ng-template #template>\r\n  Hello!\r\n</ng-template>\r\n```\r\n\r\nError thrown (output remains the same):\r\n> *ngIf: TypeError: Cannot read properties of null (reading '0')\r\n\r\nExpected output:\r\n```\r\n@if (true) {\r\n  Hello!\r\n} \r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.17.1\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0-next.2+sha-1940280\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nI am using `\"@angular/core\": \"angular/core-builds#17.1.0-next.2+1940280\",` which is built from the HEAD of the main branch and contains all the latest control flow migration fixes.","Url":"https://github.com/angular/angular/issues/53287","RelatedDescription":"Open issue \"Control flow schematic: empty ng-container is not migrated\" (#53287)"},{"Id":"2019304057","IsPullRequest":true,"CreatedAt":"2023-11-30T18:48:22","Actor":"srinathsree66","Number":"53286","RawContent":null,"Title":"docs: fixed wrong template string placeholder","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n```typescript\r\nfunction appendPx(value: number) {\r\n  return `$(value)px`;\r\n}\r\n```\r\n\r\nCloses: #53280 \r\n\r\n\r\n## What is the new behavior?\r\n```typescript\r\nfunction appendPx(value: number) {\r\n  return `${value}px`;\r\n}\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53286","RelatedDescription":"Open PR \"docs: fixed wrong template string placeholder\" (#53286)"},{"Id":"2019300938","IsPullRequest":false,"CreatedAt":"2023-11-30T18:46:04","Actor":"calebegg","Number":"53285","RawContent":null,"Title":"Ability to set default ViewEncapsulation/ChangeDetection for whole app","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nIt would be nice if every component didn't have to individually specify `ChangeDetection.OnPush` or `ViewEncapsulation.Native`\r\n\r\nSorry if this has been raised before, I did a search and couldn't find anything\n\n### Proposed solution\n\nSomething in the bootstrap function or root app module would be ideal\n\n### Alternatives considered\n\nI guess we could keep things as they are, but it's hard to enforce app wide that people are following best practices.\r\n\r\nPractically, this came up because I want to use `ViewEncapsulation.Native` but don't want to update 50+ components","Url":"https://github.com/angular/angular/issues/53285","RelatedDescription":"Open issue \"Ability to set default ViewEncapsulation/ChangeDetection for whole app\" (#53285)"},{"Id":"2019218625","IsPullRequest":true,"CreatedAt":"2023-11-30T18:46:02","Actor":"srinathsree66","Number":"53284","RawContent":null,"Title":"docs: fixed wrong template string placeholder delimiter","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n\r\n```typescript\r\nfunction appendPx(value: number) {\r\n  return `$(value)px`;\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n## What is the new behavior?\r\n```typescript\r\nfunction appendPx(value: number) {\r\n  return `${value}px`;\r\n}\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53284","RelatedDescription":"Closed or merged PR \"docs: fixed wrong template string placeholder delimiter\" (#53284)"},{"Id":"2018744820","IsPullRequest":false,"CreatedAt":"2023-11-30T16:11:52","Actor":"KemalMuharemovic","Number":"53281","RawContent":null,"Title":"Validation.max does not work for some reason","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nformBuilder.group(\r\n                          {\r\n                              lower: [\r\n                                  {\r\n                                      value: port?.inputRange?.lower || 0,\r\n                                      disabled: port?.mode === 'DISABLED',\r\n                                  },\r\n                                  [\r\n                                      Validators.required,\r\n                                      Validators.min(0),\r\n                                      Validators.max(65535),\r\n                                  ],\r\n                              ],\r\n                              upper: [\r\n                                  {\r\n                                      value: port?.inputRange?.upper,\r\n                                      disabled: port?.mode === 'DISABLED',\r\n                                  },\r\n                                  [\r\n                                      Validators.required,\r\n                                      Validators.min(0),\r\n                                      Validators.max(65535),\r\n                                  ],\r\n                              ],\r\n                          },\r\n                          { validators: rangeValidator(false) }\r\n                      )\r\n                   \r\nThis is how I configured a form but for some reason my validation.max does not work \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53281","RelatedDescription":"Closed issue \"Validation.max does not work for some reason\" (#53281)"},{"Id":"2018991180","IsPullRequest":false,"CreatedAt":"2023-11-30T16:07:29","Actor":"jeremy-ekers","Number":"53283","RawContent":null,"Title":"first-app-lesson-01 does not install","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI started to look at angular, trying the first tutorial.\r\n\r\nInstalled node-v20.10.0-x64.msi on windows. Run in cygwin bash. \"npm -v\" returns \"10.2.4\".\r\n\r\nStep 1 , running \"npm install\" fails.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n> npm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR!\r\nnpm ERR! While resolving: angular.io-example@0.0.0\r\nnpm ERR! Found: @angular/common@17.0.0\r\nnpm ERR! node_modules/@angular/common\r\nnpm ERR!   @angular/common@\"17.0.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @angular/common@\"^16.0.0\" from angular-in-memory-web-api@0.16.0\r\nnpm ERR! node_modules/angular-in-memory-web-api\r\nnpm ERR!   angular-in-memory-web-api@\"~0.16.0\" from the root project\r\nnpm ERR!\r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR!\r\nnpm ERR!\r\nnpm ERR! For a full report see:\r\nnpm ERR! C:\\Users\\jeremy\\AppData\\Local\\npm-cache\\_logs\\2023-11-30T15_58_47_296Z-eresolve-report.txt\r\nnpm ERR! A complete log of this run can be found in: C:\\Users\\jeremy\\AppData\\Local\\npm-cache\\_logs\\2023-11-30T15_58_47_296Z-debug-0.log\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53283","RelatedDescription":"Open issue \"first-app-lesson-01 does not install\" (#53283)"},{"Id":"2018862482","IsPullRequest":false,"CreatedAt":"2023-11-30T15:28:07","Actor":"ahelmel","Number":"53282","RawContent":null,"Title":"NG0912: Component ID generation collision detected error thrown for 2 components without a selector","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI have two components which do not have a selector. These components are Dialogs and are displayed by a DialogService on the fly (dynamically). So there is no need to create selectors for them as they are never used inside any templates. After some investigation I found out, that two components should not have the same selector, and it is fine, but these components does not have any selectors at all and do not need them.\r\n\r\nIn the Angular documentation the selector is optional: https://angular.io/api/core/Component#inherited-from-directive-decorator, so multiple components without a selector should be fine.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-9vzcj1?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNG0912: Component ID generation collision detected. Components 'AdminComponent' and 'UserComponent' with selector 'ng-component' generated the same component ID. To fix this, you can change the selector of one of those components or add an extra host attribute to force a different ID. Find more at https://angular.io/errors/NG0912\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n\"@angular/animations\": \"^17.0.5\",\r\n\"@angular/common\": \"^17.0.5\",\r\n\"@angular/compiler\": \"^17.0.5\",\r\n\"@angular/core\": \"^17.0.5\",\r\n\"@angular/forms\": \"^17.0.5\",\r\n\"@angular/platform-browser\": \"^17.0.5\",\r\n\"@angular/router\": \"^17.0.5\",\r\n```\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53282","RelatedDescription":"Closed issue \"NG0912: Component ID generation collision detected error thrown for 2 components without a selector\" (#53282)"},{"Id":"2018537572","IsPullRequest":false,"CreatedAt":"2023-11-30T12:17:57","Actor":"kabrunko-dev","Number":"53280","RawContent":null,"Title":"docs: Wrong template string placeholder delimiter","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nI've been studying the new Angular.dev documentation and I spotted a syntax error at a template string in the \"**Component**\" section. Currently the delimiter is parenthesis and not curly braces.\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/components/inputs#type-checking\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n![syntax-error](https://github.com/angular/angular/assets/142346548/ae3bf6a5-8524-4095-8980-6593c216eddb)","Url":"https://github.com/angular/angular/issues/53280","RelatedDescription":"Open issue \"docs: Wrong template string placeholder delimiter\" (#53280)"},{"Id":"2018246068","IsPullRequest":false,"CreatedAt":"2023-11-30T09:38:57","Actor":"veera20k","Number":"53279","RawContent":null,"Title":"Expand button not doing anything in attribute-directives page","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nOn the attribute-directive page in unsupported directive format, there is an expand button, but that is not doing anything if we click that. If that will not do anything, then we don't need an expand button.\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/directives/attribute-directives#example-1\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\n_No response_\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\n_No response_\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n<img width=\"1408\" alt=\"Screenshot 2023-11-30 at 3 07 29 PM\" src=\"https://github.com/angular/angular/assets/84136744/4ca7c050-d53f-4361-a152-f2c2328b3c14\">\r\n<img width=\"1391\" alt=\"Screenshot 2023-11-30 at 3 06 49 PM\" src=\"https://github.com/angular/angular/assets/84136744/af29cc2f-eb5b-4b67-b013-b4bd1dc0475c\">\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53279","RelatedDescription":"Open issue \"Expand button not doing anything in attribute-directives page\" (#53279)"},{"Id":"2018218220","IsPullRequest":false,"CreatedAt":"2023-11-30T09:22:51","Actor":"bjornharvold","Number":"53278","RawContent":null,"Title":"fix: 🐛 NgOptimizedImage shows error in console when priority image also is displayed in a smaller version on the same page","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen a component includes the largest image twice but in different sizes, it complains that the attribute \"priority\" did not get set on the LCP image when the smaller image does not contain priority attribute.\r\n\r\n```\r\n<div style=\"position: relative; width: auto; height: 600px;\">\r\n    <img priority [ngSrc]=\"'https://placehold.co/2048x1152'\" alt=\"BIIIIIG IMAGE\" fill sizes=\"100vw\"/>\r\n</div>\r\n\r\n<div style=\"position: relative; width: auto; height: 200px;\">\r\n    <img [ngSrc]=\"'https://placehold.co/2048x1152'\" alt=\"BIIIIIG IMAGE\" fill sizes=\"100vw\"/>\r\n</div>\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/~/github.com/bjornharvold/ng-optimized-image-priority-issue\n\n### Please provide the exception or error you saw\n\n```true\nchunk-5OYRIKV6.js?v=4a9bf76f:4021 NG02955: The NgOptimizedImage directive (activated on an <img> element with the `ngSrc=\"https://placehold.co/2048x1152\"`) has detected that this image is the Largest Contentful Paint (LCP) element but was not marked \"priority\". This image should be marked \"priority\" in order to prioritize its loading. To fix this, add the \"priority\" attribute.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.10.0\r\nPackage Manager: yarn 1.22.21\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53278","RelatedDescription":"Open issue \"fix: 🐛 NgOptimizedImage shows error in console when priority image also is displayed in a smaller version on the same page\" (#53278)"},{"Id":"2018155310","IsPullRequest":false,"CreatedAt":"2023-11-30T08:46:49","Actor":"bjornharvold","Number":"53277","RawContent":null,"Title":"docs: 📝 More information about the provided image loaders for NgOptimizedImage","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nWe just migrated 90% away from our own Cloudinary pipes to Angular's ngSrc. Very easy. Love the console output with errors and warnings when we are not doing it right. 🍺🦸‍♂️\r\n\r\nCurrently, the docs point to each image loader here:\r\n\r\n<img width=\"978\" alt=\"Screenshot 2023-11-30 at 15 39 42\" src=\"https://github.com/angular/angular/assets/641791/7c08a986-2c80-4ca9-8e25-32deba518a9b\">\r\n\r\nWe use Cloudinary for years with great success already and it was nice to see Cloudinary be available out-of-the-box. Cloudinary is incredible versatile when it comes to handling images. Angular refers us, the user, to Cloudinary's documentation site here: [Cloudinary](https://cloudinary.com/documentation/resizing_and_cropping).\r\n\r\nCloudinary can do a whole lot more than just `fill` and we'd be eager to find out how we can leverage the other features we have come to use with Cloudinary over the years such as crop, scale, fit, limit etc.. There is no indication in the Angular docs or on Cloudinary's website how to do this.\r\n\r\n### Proposed solution\r\n\r\nAdd specific feature sets for each image provider that Angular supports out-of-the-box.\r\n\r\n### Alternatives considered\r\n\r\nNone","Url":"https://github.com/angular/angular/issues/53277","RelatedDescription":"Open issue \"docs: 📝 More information about the provided image loaders for NgOptimizedImage\" (#53277)"},{"Id":"2018152668","IsPullRequest":false,"CreatedAt":"2023-11-30T08:45:02","Actor":"crisbeto","Number":"53276","RawContent":null,"Title":"Hydration error when component's content is re-projected using ng-template","State":"open","Body":"Angular Material has several cases where there's a parent component and a child component meant to be used together. The child has a template like `<ng-template #content><ng-content/></ng-template>` while the parent iterates over the children and projects their content using `ngTemplateOutlet`. This is a bit of a convoluted way of rendering, but it has allowed us to implement some complex layouts while keeping a friendly public API. Moving away from this pattern will be difficult without breaking changes so ideally this should be handled at the framework level. The issue can be reproduced by adding the following test to `packages/platform-server/test/hydration_spec.ts`:\r\n\r\n```typescript\r\nit('should allow re-projection of child content', async () => {\r\n  @Component({\r\n    standalone: true,\r\n    selector: 'mat-step',\r\n    template: `\r\n      <ng-template #content><ng-content/></ng-template>\r\n    `,\r\n  })\r\n  class MatStep {\r\n    @ViewChild('content', {read: TemplateRef}) content!: TemplateRef<any>;\r\n  }\r\n\r\n  @Component({\r\n    standalone: true,\r\n    selector: 'mat-stepper',\r\n    imports: [NgTemplateOutlet],\r\n    template: `\r\n      @for (step of steps; track step) {\r\n        <ng-container [ngTemplateOutlet]=\"step.content\"/>\r\n      }\r\n    `,\r\n  })\r\n  class MatStepper {\r\n    @ContentChildren(MatStep) steps!: QueryList<MatStep>;\r\n  }\r\n\r\n  @Component({\r\n    standalone: true,\r\n    imports: [MatStepper, MatStep],\r\n    selector: 'app',\r\n    template: `\r\n      <mat-stepper>\r\n        <mat-step>One</mat-step>\r\n        <mat-step>Two</mat-step>\r\n        <mat-step>Three</mat-step>\r\n      </mat-stepper>\r\n    `,\r\n  })\r\n  class App {\r\n  }\r\n\r\n  const html = await ssr(App);\r\n  const ssrContents = getAppContents(html);\r\n\r\n  expect(ssrContents).toContain('<app ngh');\r\n\r\n  resetTViewsFor(App, MatStepper);\r\n\r\n  const appRef = await hydrate(html, App);\r\n  const compRef = getComponentRef<App>(appRef);\r\n  appRef.tick();\r\n\r\n  const clientRootNode = compRef.location.nativeElement;\r\n  verifyAllNodesClaimedForHydration(clientRootNode);\r\n  verifyClientAndSSRContentsMatch(ssrContents, clientRootNode);\r\n});\r\n```","Url":"https://github.com/angular/angular/issues/53276","RelatedDescription":"Open issue \"Hydration error when component's content is re-projected using ng-template\" (#53276)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2019833788","IsPullRequest":true,"CreatedAt":"2023-12-01T01:04:59","Actor":"clydin","Number":"26540","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly align error/warning messages when spinner is active","State":"open","Body":"When using the `application` builder with progress enabled (the default), the spinner text will now automatically contain a trailing newline. This ensures that any diagnostic messages are not awkwardly printed on the same line as the spinner.","Url":"https://github.com/angular/angular-cli/pull/26540","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): correctly align error/warning messages when spinner is active\" (#26540)"},{"Id":"2016145369","IsPullRequest":true,"CreatedAt":"2023-11-30T18:17:03","Actor":"angular-robot","Number":"26520","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `4865268` -> `8eb98bc` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `18fe69c` -> `2570dc3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `39de01a` -> `3b41bc9` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `6c9bd12` -> `12bfa09` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `16e8e72` -> `c71cc2d` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `9404998` -> `eaa5433` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `141eff8` -> `f8b40e4` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `c6526c7` -> `718ab06` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `e22ea82` -> `dbd1f5d` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `1e84d0c` -> `7b62a5d` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `69487b8` -> `c7687ab` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.4` -> `17.0.5`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.4/17.0.5) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `96cad6e` -> `9017a64` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `566d599` -> `a0a9704` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `581fbc0` -> `9bce3bc` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `6f49ec0` -> `7b359ac` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `9fc9e8d` -> `57f4609` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `cff18fa` -> `73514eb` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `33c466e` -> `cd381a5` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.1.0-next.1/17.1.0-next.2) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `5caf2e6` -> `e3026fa` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.1` -> `17.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.1.0-next.1/17.1.0-next.2) |\n| angular/dev-infra | action | digest | `f00131a` -> `3b93d92` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.1.0-next.2`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1710-next2-2023-11-29)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.1.0-next.1...17.1.0-next.2)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [79ff91a813](https://togithub.com/angular/angular/commit/79ff91a813e544929cb5eb5f9aab762a9f3d0435) | fix | allow TS jsDocParsingMode host option to be programmatically set ([#&#8203;53126](https://togithub.com/angular/angular/pull/53126)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4c1d69e288](https://togithub.com/angular/angular/commit/4c1d69e2880f22745c820eee630d10071e4fa86b) | fix | add diagnostic for control flow that prevents content projection ([#&#8203;53190](https://togithub.com/angular/angular/pull/53190)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [58cf389d80](https://togithub.com/angular/angular/commit/58cf389d8095dd522a998b6b9a7d7b8da1656644) | fix | avoid stale provider info when TestBed.overrideProvider is used ([#&#8203;52918](https://togithub.com/angular/angular/pull/52918)) |\n| [c7c7ea9813](https://togithub.com/angular/angular/commit/c7c7ea9813f6dcf91c096bb37d36bfe0c715a04f) | fix | inherit host directives ([#&#8203;52992](https://togithub.com/angular/angular/pull/52992)) |\n| [b35c6731e5](https://togithub.com/angular/angular/commit/b35c6731e51de9c33707010fc780cbaa559be6c3) | fix | Reattached views that are dirty from a signal update should refresh ([#&#8203;53001](https://togithub.com/angular/angular/pull/53001)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dbca1c9d61](https://togithub.com/angular/angular/commit/dbca1c9d618be4d195d779ef80606c6d22f7c977) | fix | Add ngForTemplate support to control flow migration ([#&#8203;53076](https://togithub.com/angular/angular/pull/53076)) |\n| [53912fdf74](https://togithub.com/angular/angular/commit/53912fdf74e1224f95edc3dd550c51451e613c44) | fix | allows colons in ngIf else cases to migrate ([#&#8203;53076](https://togithub.com/angular/angular/pull/53076)) |\n| [fadfee4324](https://togithub.com/angular/angular/commit/fadfee43247acec7e450d5cc929a0a6780a54bd1) | fix | cf migration fix migrating empty switch default ([#&#8203;53237](https://togithub.com/angular/angular/pull/53237)) |\n| [b2aeaf5d97](https://togithub.com/angular/angular/commit/b2aeaf5d97327842a5bb657e9f02bb4f1358304b) | fix | CF migration log warning when collection aliasing detected in [@&#8203;for](https://togithub.com/for) ([#&#8203;53238](https://togithub.com/angular/angular/pull/53238)) |\n| [c6326289f8](https://togithub.com/angular/angular/commit/c6326289f87089b3415ba0f3e371206b8a396b66) | fix | cf migration removes unnecessary bound ngifelse attribute ([#&#8203;53236](https://togithub.com/angular/angular/pull/53236)) |\n| [e6f10e81d2](https://togithub.com/angular/angular/commit/e6f10e81d2486b5cc1f468777b7e1057d3f09dc5) | fix | control flow migration formatting fixes ([#&#8203;53076](https://togithub.com/angular/angular/pull/53076)) |\n| [6291c8db09](https://togithub.com/angular/angular/commit/6291c8db092c0ab67f6789cc03c19dfa0bdc251d) | fix | fix off by one issue with template removal in CF migration ([#&#8203;53255](https://togithub.com/angular/angular/pull/53255)) |\n| [f1b7d40057](https://togithub.com/angular/angular/commit/f1b7d400575a6a02a2fc2b642c2b8c15cca9b3c4) | fix | fixes CF migration i18n ng-template offsets ([#&#8203;53212](https://togithub.com/angular/angular/pull/53212)) |\n| [a738b48717](https://togithub.com/angular/angular/commit/a738b48717e16613b34c3e50480cd49f2a31858f) | fix | fixes control flow migration common module removal ([#&#8203;53076](https://togithub.com/angular/angular/pull/53076)) |\n| [a3599515bb](https://togithub.com/angular/angular/commit/a3599515bb2513fbcb2899284c7f6b4bc021ddaf) | fix | properly handle ngIfThen cases in CF migration ([#&#8203;53256](https://togithub.com/angular/angular/pull/53256)) |\n| [8a52674faa](https://togithub.com/angular/angular/commit/8a52674faacefd4042726383fdf0aed59a04fb7e) | fix | Update CF migration to skip templates with duplicate ng-template names ([#&#8203;53204](https://togithub.com/angular/angular/pull/53204)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [29e0834c4d](https://togithub.com/angular/angular/commit/29e0834c4deecfa8bf384b5e4359796c8123afcd) | fix | Resolvers in different parts of the route tree should be able to execute together ([#&#8203;52934](https://togithub.com/angular/angular/pull/52934)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC4xIiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26520","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26520)"},{"Id":"2018956173","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:34","Actor":"willi84","Number":"26539","RawContent":null,"Title":"create a way to customize start screen","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nfor workshops it would be helpful to have a customized start screen with custom html to make it easier for people to start the workshop and have less friction with updated start view with newer versions  as e.g. with v17 happened\n\n### Describe the solution you'd like\n\na configuration which provides a reference to a custom template of a start screen, e.g.\r\n\r\nng new todo-list --start=@ng-girls/starter\r\n\r\nand for this there need to be a special scheme to configure the start template or other options\n\n### Describe alternatives you've considered\n\nstackblitz, but I would also have it with the CLI","Url":"https://github.com/angular/angular-cli/issues/26539","RelatedDescription":"Open issue \"create a way to customize start screen\" (#26539)"},{"Id":"2018763095","IsPullRequest":false,"CreatedAt":"2023-11-30T14:21:34","Actor":"alexciesielski","Number":"26538","RawContent":null,"Title":"browser-esbuild: \"The 'webWorkerTsConfig' option is not yet supported by this builder.\" ","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI just updated to Angular 17 with the hopes of benefiting of the speed improvements of esbuild but unfortunately I am getting the following warning:\r\n\r\n`The 'webWorkerTsConfig' option is not yet supported by this builder.`\r\n\r\nI searched Google for any hints and the only thing I found is [this issue](https://github.com/angular/angular-cli/issues/25101) mentioning the option and saying that it should have landed in 17.0.0-next.6.\r\n\r\nSo my question is, has it landed and should it work? And if yes, what may I be doing wrong?\r\n\r\nIf it matters I am using nx (also v17).\r\n\n\n### Minimal Reproduction\n\n\r\n```json\r\n{\r\n  \"name\": \"app\",\r\n  \"$schema\": \"../../node_modules/nx/schemas/project-schema.json\",\r\n  \"projectType\": \"application\",\r\n  \"sourceRoot\": \"apps/app/src\",\r\n  \"prefix\": \"app\",\r\n  \"targets\": {\r\n    \"build\": {\r\n      \"executor\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n       // ...\r\n     }\r\n  }\r\n}\r\n```\n\n### Exception or Error\n\n```text\nThe 'webWorkerTsConfig' option is not yet supported by this builder.\n```\n\n\n### Your Environment\n\n```text\nnx --version\r\n\r\nNx Version:\r\n- Local: v17.1.3\r\n- Global: v17.0.1\r\n\r\n---\r\n\r\n    \"@angular/animations\": \"17.0.5\",\r\n    \"@angular/cdk\": \"17.0.1\",\r\n    \"@angular/common\": \"17.0.5\",\r\n    \"@angular/compiler\": \"17.0.5\",\r\n    \"@angular/core\": \"17.0.5\",\r\n    \"@angular/forms\": \"17.0.5\",\r\n    \"@angular/material\": \"17.0.1\",\r\n    \"@angular/platform-browser\": \"17.0.5\",\r\n    \"@angular/platform-browser-dynamic\": \"17.0.5\",\r\n    \"@angular/router\": \"17.0.5\",\r\n    \"@angular/service-worker\": \"17.0.5\",\r\n    \"@angular-devkit/build-angular\": \"17.0.5\",\r\n    \"@angular-devkit/core\": \"17.0.5\",\r\n    \"@angular-devkit/schematics\": \"17.0.5\",\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26538","RelatedDescription":"Closed issue \"browser-esbuild: \"The 'webWorkerTsConfig' option is not yet supported by this builder.\" \" (#26538)"},{"Id":"2018302349","IsPullRequest":false,"CreatedAt":"2023-11-30T14:20:14","Actor":"PrinceGupta1999","Number":"26536","RawContent":null,"Title":"Add postcss-preset-env to Angular build process / allow for configuring custom PostCSS plugins","State":"closed","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Description\r\n\r\nThe Angular docs mention [The Angular CLI uses Browserslist to ensure compatibility with different browser versions](https://angular.dev/tools/cli/build#configuring-browser-compatibility:~:text=check-,Configuring%20browser%20compatibility,configuration%20which%20matches%20the%20browsers%20that%20are%20supported%20by%20Angular.,-last%202%20Chrome). And while this story works great in the Javascript side, the CSS story is not as good.\r\n\r\nCurrently for processing CSS PostCSS is used during the build process, and the only plugin used for increasing browser compatibility is the use of the [autoprefixer](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/tools/webpack/configs/styles.ts#L104) plugin.\r\n\r\nThat would be fine if the build process allowed configuration of the postcss plugins being used but not allowing that severely limits the extent of browser support which could have been otherwise extended using plugins like `postcss-preset-env`. For example, in our use case we are required to support Chrome version 80 but since more and more UI libraries like PrimeNg are moving towards use of `@layer` which is not supported by earlier browsers it is proving impossible for us to upgrade to use newer versions of these UI libraries.\r\n\r\n### Describe the solution you'd like\r\n\r\nSimilar to the configuration being done for [Tailwind](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/tools/webpack/configs/styles.ts#L82-L102) it could be possible to add support for loading postCss configuration from the standard `postcss.config.js` file. \r\n\r\nThere may also be need to either merge / override the default configuration in case the postcss config is provided. \r\n\r\n### Describe alternatives you've considered\r\n\r\nThe only alternate that seemed to work for us at the moment was to switch to [angular-builders/custom-webpack](https://www.npmjs.com/package/@angular-builders/custom-webpack) for building / serving the application and loading the postcss.config.js file using the postcss-loader in webpack.\r\n\r\nHowever the drawback of that was that we could no longer take advantage of the faster Vite / ESBuild speeds that the Angular v17 provides by default.","Url":"https://github.com/angular/angular-cli/issues/26536","RelatedDescription":"Closed issue \"Add postcss-preset-env to Angular build process / allow for configuring custom PostCSS plugins\" (#26536)"},{"Id":"2018685166","IsPullRequest":false,"CreatedAt":"2023-11-30T13:34:45","Actor":"Nvveen","Number":"26537","RawContent":null,"Title":"Allow Angular to pass no browsers to Karma","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nKarma has a CLI option `--no-browsers` to allow Karma to open without any connected browsers. This can be achieved in Angular by passing an empty `[]` array in `karma,conf.js`. This is useful when running the dev server in a devcontainer, where no display server and instances of browsers are installed. Manually opening a browser with the ports forwarded then runs the tests like normal.\r\nThe issue starts when using the built-in Karma config, but passing either `\"browsers\": \"\"`, or the CLI flag `\"--browsers=\\\"\"` to `ng test`. The line at https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L103 checks if the browsers option exists, but since the string is empty, the expression is false and the default Karma option of `['Chrome']` is instead used.\n\n### Describe the solution you'd like\n\nChanging [this line](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L103) to `if (options.browsers != null)` and filtering the [split array](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L104C15-L104C15) by non-empty strings should solve this particular issue.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26537","RelatedDescription":"Open issue \"Allow Angular to pass no browsers to Karma\" (#26537)"},{"Id":"2018154564","IsPullRequest":true,"CreatedAt":"2023-11-30T08:46:18","Actor":"alan-agius4","Number":"26535","RawContent":null,"Title":"File watching improvements ","State":"open","Body":"See each commit.","Url":"https://github.com/angular/angular-cli/pull/26535","RelatedDescription":"Open PR \"File watching improvements \" (#26535)"},{"Id":"2017614548","IsPullRequest":true,"CreatedAt":"2023-11-29T23:40:50","Actor":"dgp1130","Number":"26534","RawContent":null,"Title":"docs: release notes for the v17.0.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26534","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.5 release\" (#26534)"},{"Id":"2017611649","IsPullRequest":true,"CreatedAt":"2023-11-29T23:36:30","Actor":"dgp1130","Number":"26533","RawContent":null,"Title":"Bump version to \"v17.0.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26533","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.5\" with changelog.\" (#26533)"},{"Id":"2017600044","IsPullRequest":true,"CreatedAt":"2023-11-29T23:29:57","Actor":"dgp1130","Number":"26532","RawContent":null,"Title":"Revert \"fix(@angular-devkit/build-angular): improve file watching on Windows when using certain IDEs\"","State":"closed","Body":"This reverts commit bbbe13d6782ba9d1b80473a98ea95bc301c48597.\r\n\r\nSwitching to `raw` event changes the event names such that some events are getting dropped and breaking watch mode rebuilds on Mac.","Url":"https://github.com/angular/angular-cli/pull/26532","RelatedDescription":"Closed or merged PR \"Revert \"fix(@angular-devkit/build-angular): improve file watching on Windows when using certain IDEs\"\" (#26532)"},{"Id":"2017489794","IsPullRequest":true,"CreatedAt":"2023-11-29T22:36:57","Actor":"dgp1130","Number":"26531","RawContent":null,"Title":"Bump version to \"v17.1.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26531","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.0\" with changelog.\" (#26531)"},{"Id":"2017318194","IsPullRequest":true,"CreatedAt":"2023-11-29T21:52:02","Actor":"dgp1130","Number":"26530","RawContent":null,"Title":"refactor: bump `@angular/pwa` peer dep for `17.0.0-next`","State":"closed","Body":"Missed this peer dependency and it's blocking next releases.","Url":"https://github.com/angular/angular-cli/pull/26530","RelatedDescription":"Closed or merged PR \"refactor: bump `@angular/pwa` peer dep for `17.0.0-next`\" (#26530)"},{"Id":"2016362045","IsPullRequest":true,"CreatedAt":"2023-11-29T19:09:04","Actor":"angular-robot","Number":"26522","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.3` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.3/7.23.5) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.3` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.3/7.23.5) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.4` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.23.4/7.23.5) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.4` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.23.4/7.23.5) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.3` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.3/7.23.5) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.3` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.3/7.23.5) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.23.4` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.4/7.23.5) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.23.4` -> `7.23.5`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.4/7.23.5) |\n| [vite](https://togithub.com/vitejs/vite/tree/main/#readme) ([source](https://togithub.com/vitejs/vite)) | dependencies | patch | [`5.0.3` -> `5.0.4`](https://renovatebot.com/diffs/npm/vite/5.0.3/5.0.4) |\n| [vite](https://togithub.com/vitejs/vite/tree/main/#readme) ([source](https://togithub.com/vitejs/vite)) | devDependencies | patch | [`5.0.3` -> `5.0.4`](https://renovatebot.com/diffs/npm/vite/5.0.3/5.0.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.23.5`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7235-2023-11-29)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.23.3...v7.23.5)\n\n##### :eyeglasses: Spec Compliance\n\n-   `babel-plugin-proposal-decorators`\n    -   [#&#8203;16138](https://togithub.com/babel/babel/pull/16138) Class binding is in TDZ during decorators initialization ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-helpers`, `babel-plugin-proposal-decorators`\n    -   [#&#8203;16132](https://togithub.com/babel/babel/pull/16132) Allow addInitializer in field decorator context ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :bug: Bug Fix\n\n-   `babel-traverse`, `babel-types`\n    -   [#&#8203;16131](https://togithub.com/babel/babel/pull/16131) Do not remove bindings when removing assignment expression path ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-plugin-transform-classes`\n    -   [#&#8203;16135](https://togithub.com/babel/babel/pull/16135) Require class properties transform when compiling class with private fields ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-generator`\n    -   [#&#8203;16122](https://togithub.com/babel/babel/pull/16122) fix: Missing parentheses after line break ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helpers`\n    -   [#&#8203;16130](https://togithub.com/babel/babel/pull/16130) Fix helpers internal fns names conflict resolution  ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-typescript`\n    -   [#&#8203;16123](https://togithub.com/babel/babel/pull/16123) Simplify class fields injetion after `super()` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-generator`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-parameters`, `babel-plugin-transform-typescript`, `babel-traverse`\n    -   [#&#8203;16110](https://togithub.com/babel/babel/pull/16110) fix: Unexpected duplication of comments ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-eslint-plugin`\n    -   [#&#8203;16023](https://togithub.com/babel/babel/pull/16023) Add `@babel/eslint-plugin/no-undef` to fix `no-undef` with accessor props ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :microscope: Output optimization\n\n-   `babel-helpers`\n    -   [#&#8203;16129](https://togithub.com/babel/babel/pull/16129) Optimize `decorator` helper size ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.4`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small504-2023-11-29-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.3...v5.0.4)\n\n-   fix: bindCLIShortcuts to proper server ([#&#8203;15162](https://togithub.com/vitejs/vite/issues/15162)) ([67ac572](https://togithub.com/vitejs/vite/commit/67ac572)), closes [#&#8203;15162](https://togithub.com/vitejs/vite/issues/15162)\n-   fix: revert \"fix: js fallback sourcemap content should be using original content ([#&#8203;15135](https://togithub.com/vitejs/vite/issues/15135))\" ([#&#8203;15178](https://togithub.com/vitejs/vite/issues/15178)) ([d2a2493](https://togithub.com/vitejs/vite/commit/d2a2493)), closes [#&#8203;15135](https://togithub.com/vitejs/vite/issues/15135) [#&#8203;15178](https://togithub.com/vitejs/vite/issues/15178)\n-   fix(define): allow define process.env ([#&#8203;15173](https://togithub.com/vitejs/vite/issues/15173)) ([ec401da](https://togithub.com/vitejs/vite/commit/ec401da)), closes [#&#8203;15173](https://togithub.com/vitejs/vite/issues/15173)\n-   fix(resolve): respect order of browser in mainFields when resolving ([#&#8203;15137](https://togithub.com/vitejs/vite/issues/15137)) ([4a111aa](https://togithub.com/vitejs/vite/commit/4a111aa)), closes [#&#8203;15137](https://togithub.com/vitejs/vite/issues/15137)\n-   feat: preserve vite.middlewares connect instance after restarts ([#&#8203;15166](https://togithub.com/vitejs/vite/issues/15166)) ([9474c4b](https://togithub.com/vitejs/vite/commit/9474c4b)), closes [#&#8203;15166](https://togithub.com/vitejs/vite/issues/15166)\n-   refactor: align with Promise.withResolvers() ([#&#8203;15171](https://togithub.com/vitejs/vite/issues/15171)) ([642f9bc](https://togithub.com/vitejs/vite/commit/642f9bc)), closes [#&#8203;15171](https://togithub.com/vitejs/vite/issues/15171)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [x] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC4xIiwidXBkYXRlZEluVmVyIjoiMzcuNzQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26522","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26522)"},{"Id":"2016976682","IsPullRequest":true,"CreatedAt":"2023-11-29T18:55:33","Actor":"clydin","Number":"26526","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support keyboard command shortcuts in application dev server","State":"closed","Body":"When using the `application` or `browser-esbuild` builders with the `dev-server`, interactive key shortcuts are now available to use while the server is active. Once the build has successfully completed and the development server has initialized, typing a single letter key followed by enter will execute the associated action. These actions include forcing a browser full reload, clearing the console, or quitting. More actions may be added in the future.\r\n\r\nThe following actions are currently available:\r\n```\r\n  press r + enter to force reload browser\r\n  press u + enter to show server url\r\n  press o + enter to open in browser\r\n  press c + enter to clear console\r\n  press q + enter to quit\r\n```\r\n\r\nThe `h` action is also available which will display the above list at runtime.","Url":"https://github.com/angular/angular-cli/pull/26526","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support keyboard command shortcuts in application dev server\" (#26526)"},{"Id":"2017197980","IsPullRequest":true,"CreatedAt":"2023-11-29T18:54:11","Actor":"dgp1130","Number":"26529","RawContent":null,"Title":"docs: release notes for the v17.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26529","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.4 release\" (#26529)"},{"Id":"2017124499","IsPullRequest":true,"CreatedAt":"2023-11-29T18:37:49","Actor":"dgp1130","Number":"26527","RawContent":null,"Title":"Bump version to \"v17.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26527","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.4\" with changelog.\" (#26527)"},{"Id":"2017137997","IsPullRequest":true,"CreatedAt":"2023-11-29T18:28:49","Actor":"alan-agius4","Number":"26528","RawContent":null,"Title":"refactor: remove `removeSpecialComments` from webpack based builder app-shell builder","State":"closed","Body":"This option is not available in webpack based builders.","Url":"https://github.com/angular/angular-cli/pull/26528","RelatedDescription":"Closed or merged PR \"refactor: remove `removeSpecialComments` from webpack based builder app-shell builder\" (#26528)"},{"Id":"2016943303","IsPullRequest":false,"CreatedAt":"2023-11-29T16:39:04","Actor":"caboodal","Number":"26525","RawContent":null,"Title":"Angular 17 build process raises warnings for link to CSS file within index.html","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.0.3\r\n\r\n### Description\r\n\r\nWhen including a a link within the <head> tag of the index.html the build process raises a warning.\r\n\r\n### Minimal Reproduction\r\n\r\nTo replicate the problem follow these steps: -\r\n\r\nCreate a new Angular app with the following options: -\r\n\r\n1. SSR: No\r\n2. SASS styles\r\n\r\nCreate a css file within the assets folder.\r\n\r\nAdd the following <link> tag into the <head> tag of the index.html file: -\r\n\r\n````\r\n<link rel=\"stylesheet\" type=\"css\" href=\"assets/test.css\" />\r\n````\r\n\r\nFrom a command prompt run `ng build`\r\n\r\n\r\n### Exception or Error\r\n\r\n```text\r\nBuilding...▲ [WARNING] Unable to locate stylesheet: C:\\assets\\test.css\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.3\r\nNode: 20.9.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.3\r\n@angular-devkit/build-angular   17.0.3\r\n@angular-devkit/core            17.0.3\r\n@angular-devkit/schematics      17.0.3\r\n@angular/cli                    17.0.3\r\n@schematics/angular             17.0.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26525","RelatedDescription":"Closed issue \"Angular 17 build process raises warnings for link to CSS file within index.html\" (#26525)"},{"Id":"2016668007","IsPullRequest":false,"CreatedAt":"2023-11-29T14:04:01","Actor":"csisy","Number":"26524","RawContent":null,"Title":"Extract license should scan paths outside of node_modules","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nCurrently with the `extractLicenses` set to `true`, the license files of the referenced packages are collected and extracted into the `3rdpartylicenses.txt` file. This is correct so far, however consider the following use-case:\r\n\r\nTo avoid using 3rd party hosts, fonts and icons (e.g. Roboto and Material Symbols) can be self-hosted. Instead of using a separate http server to serve these files, one can include them in an Angular application. We put the font files, their corresponding licenses and `@font-face` descriptor scss files in a directory under the application's root, something like this:\r\n\r\n```\r\nsrc/\r\n  app/\r\n  assets/\r\n  external/\r\n    roboto/*.woff\r\n    roboto/LICENSE.txt\r\n    roboto.scss\r\n```\r\n\r\nUnfortunately, these license files are not accumulated into the extracted license file. I don't really know well the builder source code but this check seems to be the one that filters the result:\r\nhttps://github.com/angular/angular-cli/blob/adba8beda52a30858d8666e5c154c912a9f57ebf/packages/angular_devkit/build_angular/src/tools/esbuild/license-extractor.ts#L83\r\n\r\n### Describe the solution you'd like\r\n\r\nIt would be nice if all possible license files would be combined into the single `3rdpartylicenses.txt` output file despite the location and the package-relevancy.\r\n\r\n### Describe alternatives you've considered\r\n\r\nWe could move these files into a separate npm package so the builder can pick up the license from there.","Url":"https://github.com/angular/angular-cli/issues/26524","RelatedDescription":"Open issue \"Extract license should scan paths outside of node_modules\" (#26524)"},{"Id":"2016588281","IsPullRequest":false,"CreatedAt":"2023-11-29T13:24:40","Actor":"HammamBM","Number":"26523","RawContent":null,"Title":"SASS not working correctly with new builder","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.3\n\n### Description\n\nThis works in the same version 17.0.3 but with the previous builder. There are 2 main issues and happen with both \"application\" not the \"browser-esbuild\".\r\n- @use doesn't work with absolute path with neither  builder\r\n- With @use component budgets go out of control with several warning and errors.\n\n### Minimal Reproduction\n\n-@use with absolute paths on SCSS files and inline\r\n-@use in component styles\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.3\r\nNode: 18.16.1\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1700.3\r\n@angular-devkit/build-angular        17.0.3\r\n@angular-devkit/core                 17.0.3\r\n@angular-devkit/schematics           17.0.3\r\n@angular/cdk                         17.0.1\r\n@angular/cli                         17.0.3\r\n@angular/material                    17.0.1\r\n@angular/material-date-fns-adapter   17.0.1\r\n@schematics/angular                  17.0.3\r\nrxjs                                 7.8.1\r\ntypescript                           5.2.2\r\nzone.js                              0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26523","RelatedDescription":"Open issue \"SASS not working correctly with new builder\" (#26523)"},{"Id":"2016345355","IsPullRequest":true,"CreatedAt":"2023-11-29T11:08:00","Actor":"alan-agius4","Number":"26521","RawContent":null,"Title":"test: update base project for E2E tests to version 15","State":"open","Body":"Update the base update E2E test project to the minimum supported Angular version.\r\n","Url":"https://github.com/angular/angular-cli/pull/26521","RelatedDescription":"Open PR \"test: update base project for E2E tests to version 15\" (#26521)"},{"Id":"2015418879","IsPullRequest":true,"CreatedAt":"2023-11-29T10:53:13","Actor":"g-cheishvili","Number":"26518","RawContent":null,"Title":"feat(@schematics/angular): getMainFilePath now supports interactive s…","State":"closed","Body":"…election of targets\r\n\r\nadd ability to select the project build target from the list of the project's available targets when default \"build\" target is not found\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [n/a] Tests for the changes have been added (for bug fixes / features)\r\n- [n/a] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\nIssue Number: #26517\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular-cli/pull/26518","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): getMainFilePath now supports interactive s…\" (#26518)"},{"Id":"2015551552","IsPullRequest":false,"CreatedAt":"2023-11-29T00:14:18","Actor":"itslenny","Number":"26519","RawContent":null,"Title":"build fails on windows if drive letter is lowercase","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.2.9\r\n\r\n### Description\r\n\r\nAfter upgrading to Angular 17 `ng build` fails if a command window is opened with a lower case drive letter (`c:\\`), but succeeds if the drive letter is capital (`C:\\`).\r\n\r\nThe difference was noticed because we had a shortcut to cmd.exe that had a \"start in\" path specified that started with a lower case drive letter (`c:\\some\\path\\here`) and when `ng build` is run in the cmd window launched from that shortcut it fails to build. If cmd is launched from the run window (WIN+R, \"cmd\") it builds fine. After some head scratching I realized that if I capitalize the drive letter in the \"start in\" property of the shortcut it builds fine (`C:\\some\\path\\here`).\r\n\r\nThis project was upgraded from 15.2.9 to 16 and then to 17 the following day. The issue wasn't discovered until it was upgraded to v17, but I'm not positive it didn't exist in 16 as I didn't try running the build from the offending shortcut.\r\n\r\n### Minimal Reproduction\r\n\r\nI originally found this error on a large app that has been upgraded through several versions of Angular, but I was able to reproduce this with a freshly created app using the latest CLI (17.0.4)\r\n\r\n- Open a fresh command window directly (WIN+R, \"cmd\", enter) which should give you an upper case drive letter in the prompt\r\n\r\n```\r\ncd \\junk\r\nng new repro-app\r\ncd repro-app\r\nnpm run build\r\n# builds successfully\r\n```\r\n\r\n- Create a shortcut to cmd  ( `C:\\Windows\\System32\\cmd.exe` )\r\n- Right click > Properties\r\n- Set \"Start in\" to a path starting with a lower case drive letter (`c:\\junk\\repro-app`)\r\n\r\n```\r\nnpm run build\r\n# fails with below error about main.ts and polyfills.ts not being part of the project\r\n```\r\n\r\n### Exception or Error\r\n\r\n```text\r\nFile 'src\\main.ts' is missing from the TypeScript compilation. [plugin angular-compiler]\r\n\r\nERROR File 'src\\polyfills.ts' is missing from the TypeScript compilation. [plugin angular-compiler]\r\n\r\nEnsure the file is part of the TypeScript program via 'files' or 'include' property\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.3\r\n Node: 18.18.2\r\n Package Manager: npm 9.8.1\r\n OS: win32 x64\r\n \r\n Angular: 17.0.4\r\n ... animations, common, compiler, compiler-cli, core, forms\r\n ... platform-browser, platform-browser-dynamic, router\r\n \r\n Package                         Version\r\n ---------------------------------------------------------\r\n @angular-devkit/architect       0.1700.3\r\n @angular-devkit/build-angular   17.0.3\r\n @angular-devkit/core            17.0.3\r\n @angular-devkit/schematics      17.0.3\r\n @angular/cli                    17.0.3\r\n @schematics/angular             17.0.3\r\n rxjs                            7.8.1\r\n typescript                      5.2.2\r\n zone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI found a similar issue in Typescript from 2019 which was resolved. That old issue was only happening when `forceConsistentCasingInFileNames` was set to true in tsconfig. I tried setting it to false in the angular project, but it doesn't change anything.\r\n\r\nhttps://github.com/microsoft/TypeScript/issues/31327\r\n\r\nAlso, I tried to repro this with a minimal Typescript project using just tsc and I could not reproduce it outside of angular.","Url":"https://github.com/angular/angular-cli/issues/26519","RelatedDescription":"Open issue \"build fails on windows if drive letter is lowercase\" (#26519)"},{"Id":"2015414010","IsPullRequest":false,"CreatedAt":"2023-11-28T22:14:01","Actor":"g-cheishvili","Number":"26517","RawContent":null,"Title":"getMainFilePath util function fails because of hardcoded target name","State":"open","Body":"### Command\n\nadd\n\n### Description\n\nI've seen a lot of cases when people are using different name for their build targets, for various reasons. So if the `build` is not found, the `getMainFilePath` fails, which is not right in my opinion\n\n### Describe the solution you'd like\n\nIt should ask interactively which target should be used if `build` is not found, when interactivity is enabled in the execution context\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26517","RelatedDescription":"Open issue \"getMainFilePath util function fails because of hardcoded target name\" (#26517)"},{"Id":"2013892416","IsPullRequest":true,"CreatedAt":"2023-11-28T15:56:06","Actor":"alan-agius4","Number":"26511","RawContent":null,"Title":"fix(@angular-devkit/build-angular): serve assets from the provided `serve-path`","State":"closed","Body":"\r\n\r\nWhen the `serve-path` option is used assets are now correctly servered from this location.\r\n\r\nCloses #26509\r\n","Url":"https://github.com/angular/angular-cli/pull/26511","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): serve assets from the provided `serve-path`\" (#26511)"},{"Id":"2014592276","IsPullRequest":true,"CreatedAt":"2023-11-28T14:36:39","Actor":"NateRadebaugh","Number":"26516","RawContent":null,"Title":"fix(@angular/cli): Suppress logBuildStats when budget errors present","State":"open","Body":"Fixes #26514\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, even when there are budget errors found with the esbuild builders, the stats table is still shown, which can be misleading and make debugging issues difficult.\r\n\r\nIssue Number: #26514 \r\n\r\n## What is the new behavior?\r\n\r\nWhen a bundle size budget error occurs, the CLI will not show the stats table.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26516","RelatedDescription":"Open PR \"fix(@angular/cli): Suppress logBuildStats when budget errors present\" (#26516)"},{"Id":"2014577502","IsPullRequest":true,"CreatedAt":"2023-11-28T14:31:22","Actor":"alan-agius4","Number":"26515","RawContent":null,"Title":"feat(@schematics/angular): add optional migration to use application builder","State":"open","Body":"This commits adds an optional migration to migration existing projects to use the vite and esbuild based application builder.\r\n    \r\nThe migration can be opted-in when running `ng update @angular/cli --name=use-application-builder`\r\n","Url":"https://github.com/angular/angular-cli/pull/26515","RelatedDescription":"Open PR \"feat(@schematics/angular): add optional migration to use application builder\" (#26515)"},{"Id":"2014574972","IsPullRequest":false,"CreatedAt":"2023-11-28T14:30:11","Actor":"NateRadebaugh","Number":"26514","RawContent":null,"Title":"browser-esbuild/application builds should not show summary stats when the build fails from budget errors","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nWhen running \"build\" command with budget errors, eg `anyComponentStyle`, we expect to be informed in a clear way.\r\n\r\nWe do see the output of \"Application bundle generation failed\" in a normal console log color, but the stats table still shows.\n\n### Minimal Reproduction\n\n1. Have any budget that is not met, for instance setting to 1kb with a large style.\r\n2. Run \"ng build\"\r\n3. Are quietly notified about the build failure, but have to scroll up past all the site chunks in order to see what went wrong.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.3\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router     \r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.3\r\n@angular-devkit/build-angular   17.0.3\r\n@angular-devkit/core            17.0.3\r\n@angular-devkit/schematics      17.0.3\r\n@angular/cdk                    17.0.1\r\n@angular/cli                    17.0.3\r\n@schematics/angular             17.0.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26514","RelatedDescription":"Open issue \"browser-esbuild/application builds should not show summary stats when the build fails from budget errors\" (#26514)"},{"Id":"2014186270","IsPullRequest":false,"CreatedAt":"2023-11-28T10:57:56","Actor":"thomaspeugeot","Number":"26513","RawContent":null,"Title":"esbuild import path resolution issue with angular v17 for modules outsides the workspace","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nA workspace has been created with angular version 17 and the project does not compile.\r\n\r\n## The issue arises when ng tries to compiles modules outsides the workspace.\r\n\r\nAs seen in [ng/src/app/app.module.ts](https://github.com/thomaspeugeot/ngimportissue/blob/8a11d9dbe0a8a2b233f0e2073cc67723e63fb9a0/ng/src/app/app.module.ts), the application imports some modules that are outside the workspace. One of them is `GongModule`. \r\n\r\n```ts\r\n...\r\nimport { GongModule } from 'gong'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    ...\r\n    GongModule,\r\n```\r\n\r\nAs seen in [vendor/github.com/fullstack-lang/gong/ng/projects/gong/src/lib/gong.module.ts](https://github.com/thomaspeugeot/ngimportissue/blob/8a11d9dbe0a8a2b233f0e2073cc67723e63fb9a0/vendor/github.com/fullstack-lang/gong/ng/projects/gong/src/lib/gong.module.ts), `GongModule` itself imports angular  modules\r\n\r\n\r\n```ts\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\r\n        ...\r\n...\r\n```\r\n\r\nAngular cannot build the application\r\n\r\n```\r\n % ng build\r\n⠋ Building...✘ [ERROR] Could not resolve \"@angular/common/http\"\r\n\r\n    ../vendor/github.com/fullstack-lang/gong/ng/projects/gong/src/lib/commitnbfromback.service.ts:2:27:\r\n      2 │ import { HttpParams } from '@angular/common/http';\r\n        ╵                            ~~~~~~~~~~~~~~~~~~~~~~\r\n...\r\n```\r\n\r\n## Preliminary analysis\r\n\r\n### This is new with ng 17\r\n\r\nThis problem did not occur with ng v16\r\n\r\n### This is an issue related to the import path\r\n\r\ngoing verbose and having a trace in [ng/build_trace.txt](https://github.com/thomaspeugeot/ngimportissue/blob/8a11d9dbe0a8a2b233f0e2073cc67723e63fb9a0/ng/build_trace.txt), one better understands what's wrong\r\n\r\n> % ng build --verbose > build_trace.txt 2>&1 \r\n\r\nng/build_trace.txt\r\n\r\n```\r\nSearching for \"@angular/common/http\" in \"node_modules\" directories starting from \"/private/tmp/ngimportissue/vendor/github.com/fullstack-lang/gongdoc/ng/projects/gongdoc/src/lib\"\r\n    Matching \"@angular/common/http\" against \"paths\" in \"/private/tmp/ngimportissue/ng/tsconfig.app.json\"\r\n      Using \"/private/tmp/ngimportissue/ng\" as \"baseURL\"\r\n      Found a fuzzy match for \"*\" in \"paths\"\r\n      Attempting to load \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http\" as a file\r\n        Checking for file \"http\"\r\n        Checking for file \"http.mjs\"\r\n        Checking for file \"http.js\"\r\n        Checking for file \"http.ts\"\r\n        Checking for file \"http.tsx\"\r\n        Failed to find file \"http\"\r\n      Attempting to load \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http\" as a directory\r\n        Read 2 entries for directory \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http\"\r\n        No \"browser\" map found in directory \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http\"\r\n        Failed to find file \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http/index.mjs\"\r\n        Failed to find file \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http/index.js\"\r\n        Failed to find file \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http/index.ts\"\r\n        Failed to find file \"/private/tmp/ngimportissue/ng/node_modules/@angular/common/http/index.tsx\"\r\n    Parsed package name \"@angular/common\" and package subpath \"./http\"\r\n\r\n✘ [ERROR] Could not resolve \"@angular/common/http\"\r\n```\r\n\r\nIt seems the builder is mislead by the the import path. It does not search the `esm2022` or `fesm2022` where the index file is present. Indeed `ng/node_modules/@angular/common/esm2022/http/http.mjs` is present (for information, this file is present but not in the git repo also, you need to perfom `npm i` to have it present).\r\n\r\nThe import path in [ng/tsconfig.json](https://github.com/thomaspeugeot/ngimportissue/blob/8a11d9dbe0a8a2b233f0e2073cc67723e63fb9a0/ng/tsconfig.json) that worked with ng v16 is configured to work with import path outside the workspace.\r\n\r\n```json\r\n    \"paths\": {\r\n      \"*\": [\r\n        \"./node_modules/*\"\r\n      ],\r\n```\r\n## This is related to esbuild\r\n\r\nAs stated in https://angular.io/guide/esbuild#using-the-application-builder, ng uses esbuild when it is `application`. Therefore I suspects the is an issue with esbuild import path resolution.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/thomaspeugeot/ngimportissue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nsee above\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```bash\r\n% ng version\r\n...\r\nAngular CLI: 17.0.3\r\n```\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26513","RelatedDescription":"Open issue \"esbuild import path resolution issue with angular v17 for modules outsides the workspace\" (#26513)"},{"Id":"2013956692","IsPullRequest":false,"CreatedAt":"2023-11-28T08:58:17","Actor":"mpsdenis","Number":"26512","RawContent":null,"Title":"[Yarn3] Installing temporary version of @angular/cli fails","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nV16\n\n### Description\n\nThis has happened before (https://github.com/angular/angular-cli/issues/19209) and now happens again when trying to upgrade to angular v17.\r\n\r\n![image](https://github.com/angular/angular-cli/assets/146710097/9b4a1d41-4e22-495c-98aa-efc1a63f59a3)\r\n\r\n\r\nTried to install the update with npm to check if yarn is the cause and npm goes through successfully.\r\n![image](https://github.com/angular/angular-cli/assets/146710097/0a7031bf-e612-44bb-86b0-ac6960e6bd49)\r\n\n\n### Minimal Reproduction\n\nTry to upgrade angular 16 to 17 using yarn v3 (current specific version we're using is `v3.6.4`, but I tried to upgrade yarn to `v4.0.2` and it's the same behavior).\r\n\r\nGlobal angular/cli is v17, local is v16 (obviously).\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.6\r\nNode: 18.14.0\r\nPackage Manager: yarn 4.0.2\r\nOS: win32 x64\r\n\r\nAngular: 16.1.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.6\r\n@angular-devkit/build-angular   16.1.6\r\n@angular-devkit/core            16.1.6\r\n@angular-devkit/schematics      16.1.6\r\n@angular/cdk                    16.1.6\r\n@angular/cli                    16.1.6\r\n@angular/material               16.1.6\r\n@schematics/angular             16.1.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26512","RelatedDescription":"Open issue \"[Yarn3] Installing temporary version of @angular/cli fails\" (#26512)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2018372384","IsPullRequest":false,"CreatedAt":"2023-11-30T19:01:41","Actor":"felhag","Number":"28210","RawContent":null,"Title":"bug(mat-chip-listbox): Harness getChips() does not return mat-chip","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\n\r\nWhen using `MatChipListboxHarness.getChips()` it only returns `mat-chip-option` elements, but not `mat-chip`. Because of this a mat-chip-listbox like [this example](https://material.angular.io/components/chips/examples#chips-avatar) cannot be tested using the listbox harness. Not sure what is the correct solution for this because it can be solved using `mat-chip-set` instead of listbox.\r\n\r\nPossible solutions imho: \r\n1. Change example to use `mat-chip-set` instead of `mat-chip-listbox`.\r\n2. Change `getChips()` signature to return `MatChipHarness[]` which would be a breaking change.\r\n3. Add an additional method like `getStaticChips()`.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/qykqid\n\n### Expected Behavior\n\n`MatChipListboxHarness.getChips()` should include `mat-chip` as well.\n\n### Actual Behavior\n\n`MatChipListboxHarness.getChips()` only returns `mat-chip-option`.\n\n### Environment\n\n- Angular: 17.0.1\r\n- CDK/Material: 17.0.1\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28210","RelatedDescription":"Closed issue \"bug(mat-chip-listbox): Harness getChips() does not return mat-chip\" (#28210)"},{"Id":"2018956425","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:42","Actor":"walberglez","Number":"28214","RawContent":null,"Title":"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe screen reader JAWS version 2023 does not announce a checked option as selected in a multiple selection mat-select. It does announce unchecked options as selected.\r\n\r\nI tried other Windows screen readers, NVDA does not announce it either but Narrator does. So it could be a screen reader implementation issue.\r\n\r\nAlso, this issue has been discussed before: https://github.com/angular/components/issues/21949 and it was considered to be working as expected. But I want to bring this up again because I consider that the mat-option component is not following the WAI ARIA Listbox pattern completely, please see Note 1 in this section https://www.w3.org/WAI/ARIA/apg/patterns/listbox/#roles_states_properties.\r\n\r\n> 1. Some factors to consider when choosing whether to indicate selection with aria-selected or aria-checked are:\r\nSome design systems use aria-selected for single-select widgets and aria-checked for multi-select widgets. In the absence of factors that would make an alternative convention more appropriate, this is a recommended convention.\r\n\r\nMat Option uses aria-select for both single and multiple selection. Based on this recommendation, it should use aria-selected for single selection and aria-checked for multiple selection.\r\n\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Start JAWS in a Windows machine.\r\n2. Go to https://material.angular.io/components/select/overview#select-multiple\r\n3. Select the multiple selection dropdown.\r\n4. Navigate through the options using the arrow keys.\r\n5. Select a few options.\r\n6. Navigate through selected and unselected options and check how the screen reader announces them.\r\n\n\n### Expected Behavior\n\nI expect screen readers to announce if an option is selected or unselected.\n\n### Actual Behavior\n\nJAWS only announces the status of an unselected option.\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Chrome 119.0.6045.199\r\n- Operating System: Windows 10 Enterprise\r\n","Url":"https://github.com/angular/components/issues/28214","RelatedDescription":"Open issue \"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select\" (#28214)"},{"Id":"2018889690","IsPullRequest":false,"CreatedAt":"2023-11-30T15:15:48","Actor":"sonallux","Number":"28213","RawContent":null,"Title":"bug(list): matListItemIcon color is wrong for disabled list items","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe color of `matListItemIcon` is wrong for disabled list items. It is different to the [list component from material-web](https://material-web.dev/components/list)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ir6zfh?file=src%2Fexample%2Flist-overview-example.html\r\nSteps to reproduce:\r\n1. Hover over \"Item 2 (disabled)\"\r\n2. See the `matListItemIcon` changing its color\r\n\n\n### Expected Behavior\n\nThe color of the `matListItemIcon` stays constant if the list item is disabled.\n\n### Actual Behavior\n\nThe color of the `matListItemIcon` is changing.\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router, ssr\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.1\r\n@angular/material                  17.0.1\r\n@angular/material-moment-adapter   17.0.1\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0","Url":"https://github.com/angular/components/issues/28213","RelatedDescription":"Open issue \"bug(list): matListItemIcon color is wrong for disabled list items\" (#28213)"},{"Id":"2018861939","IsPullRequest":false,"CreatedAt":"2023-11-30T15:02:11","Actor":"bmayen","Number":"28212","RawContent":null,"Title":"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nNot sure if this is a regression or not\r\n\r\n### Description\r\n\r\nThe floating label transform is normally applied via the label `.mdc-floating-label--float-above` class. However, when matTextPrefix is used on the mat-form-field, the transform is instead applied to the `label` element itself via inline style attribute. This makes attaching custom styles to the floated label inconsistent since the inline style has higher specificity than `.mdc-floating-label--float-above` class. \r\n\r\n### Reproduction\r\n\r\nApply matTextPrefix to an outline mat-form-field with a mat-label. Observe how transform styling is applied inline to the label.\r\n\r\nhttps://components-issue-da4zuo.stackblitz.io/\r\n\r\n### Expected Behavior\r\n\r\nI would expect transform styling to be applied consistently via `.mdc-floating-label--float-above` class.\r\n\r\n### Actual Behavior\r\n\r\nTransform styling is applied via `.mdc-floating-label--float-above` class when matTextPrefix is not present, but applied via inline styling on the label element when matTextPrefix is present.\r\n\r\n### Environment\r\n\r\n- Angular: 16.x\r\n- CDK/Material: 16.x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28212","RelatedDescription":"Open issue \"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class\" (#28212)"},{"Id":"2018700189","IsPullRequest":false,"CreatedAt":"2023-11-30T13:43:19","Actor":"alex-waverley","Number":"28211","RawContent":null,"Title":"bug(Slider): Tooltip is not showed on thumb hover","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSlider component doesn't work properly in Safari after changing slider's value.\r\n\r\nhttps://github.com/angular/components/assets/84070515/186bb5cc-36bb-47d2-a7c1-8e86f9c5adc3\r\n\r\nReason: mat-slider-visual-thumb element is not getting `mdc-slider__thumb--with-indicator` css class on thumb hover \n\n### Reproduction\n\nSteps to reproduce:\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-2ytten?file=src%2Fapp%2Fexample-component.html\r\n1. hover thumb - tooltop is showed\r\n2. click on slider to change its value\r\n3. hover thumb - now tooltip is not showed\r\n\n\n### Expected Behavior\n\nTooltip must be always showed on thumb hover.\n\n### Actual Behavior\n\nTooltip is not showed on thumb hover after changing slider's value.\r\n\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser: Safari 16.6 (18615.3.12.11.2)\r\n- Operating System: macOS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/28211","RelatedDescription":"Open issue \"bug(Slider): Tooltip is not showed on thumb hover\" (#28211)"},{"Id":"2018108355","IsPullRequest":true,"CreatedAt":"2023-11-30T12:37:28","Actor":"crisbeto","Number":"28207","RawContent":null,"Title":"feat(youtube-player): improve initial load performance using a placeholder image","State":"closed","Body":"Currently the `youtube-player` component loads the YouTube API and sets up the video on initialization. This can slow the page down a lot, because it loads and executes ~150kb of JavaScript, even though the video isn't playing.\r\n\r\nThese changes rework the `youtube-player` component to show the thumbnail of the video and a fake button instead. When the button is clicked, the API will be loaded and the video will be autoplayed, thus moving the YouTube API out of the critical path.\r\n\r\nThere are a few cases where the placeholder won't be shown:\r\n* A video that plays automatically.\r\n* When the `youtube-player` is showing a playlist, rather than a single video.","Url":"https://github.com/angular/components/pull/28207","RelatedDescription":"Closed or merged PR \"feat(youtube-player): improve initial load performance using a placeholder image\" (#28207)"},{"Id":"2018213200","IsPullRequest":false,"CreatedAt":"2023-11-30T09:19:48","Actor":"khobabc","Number":"28209","RawContent":null,"Title":"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI recently upgraded to Angular ~16.2.10, and noticed that cdk-virtual-scroll-viewport is not working in RTL mode for horizontal scroll. Initial data is rendered but then on scroll subsequent records are not rendered.\r\n\r\nOn investigations I came to know that getRtlScrollAxisType is returning 2 (Inverted) instead of 1 (Negated). If I make it return 1 during debug, things start to work fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-yehn5j?file=src%2Fapp%2Fcdk-platform-overview-example.html\r\nSteps to reproduce:\r\nNotice that at the bottom of information, getRtlScrollAxisType is 2\r\n![image](https://github.com/angular/components/assets/17024937/4e9b569d-82a9-4d99-b437-d94b9d2faeac)\n\n### Expected Behavior\n\ngetRtlScrollAxisType() should return 1 for chrome.\n\n### Actual Behavior\n\ngetRtlScrollAxisType() returns 2 for chrome\n\n### Environment\n\n- Angular: ~16.2.10\r\n- CDK/Material: ~16.2.10\r\n- Browser(s): Chrome 119.0.6045.160, Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 Pro\r\n","Url":"https://github.com/angular/components/issues/28209","RelatedDescription":"Open issue \"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome\" (#28209)"},{"Id":"2018156008","IsPullRequest":false,"CreatedAt":"2023-11-30T08:47:18","Actor":"Wilt","Number":"28208","RawContent":null,"Title":"Needs improvement: MatTextColumn is calling dataAccessor method inside the template.","State":"open","Body":"### Description\r\n\r\nCall of `dataAccessor` method is against Angular best practices and will be bad for performance in tables with large data sets.\r\n\r\n    <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n    </td>\r\n\r\nSee [line 30 inside `MatTextColumn` for reference](https://github.com/angular/components/blob/main/src/material/table/text-column.ts#L30C11-L30C35).\r\n\r\n### Reproduction\r\n\r\nSee [the Stackblitz and the example for `mat-text-column` inside the documentation here for a working example](https://material.angular.io/components/table/examples#table-text-column).\r\n\r\n### Expected Behavior\r\n\r\nSet the data in a variable inside the component on initialization and bind that to the template instead.\r\n\r\n### Actual Behavior\r\n\r\nIt gets the data inside the template by calling the `dataAccessor` method.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n","Url":"https://github.com/angular/components/issues/28208","RelatedDescription":"Open issue \"Needs improvement: MatTextColumn is calling dataAccessor method inside the template.\" (#28208)"},{"Id":"2017114428","IsPullRequest":false,"CreatedAt":"2023-11-29T17:47:22","Actor":"sdiachenko","Number":"28206","RawContent":null,"Title":"bug(MatSlider): MatSliderRangeThumb input width is not changed if the input value is changed dynamically","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe MatSlider does not changes the width of the input[matSliderStartThumb] and the input[matSliderEndThumb] when a user changes the inputs value dynamically.\r\n\r\n<img width=\"1522\" alt=\"image\" src=\"https://github.com/angular/components/assets/40065298/c7822536-cb06-4eb1-8694-eaea71d69de0\">\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-pkhpjl?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Refresh the page\r\n2. Click on \"next step\" button\r\n3. Drag the slider's right thumb to right. Drop it.\r\n\n\n### Expected Behavior\n\nThe \"end\" thumb has the respective value\n\n### Actual Behavior\n\nThe \"start\" and \"end\" thumb are wrong placed\n\n### Environment\n\n- Angular: 15.2.6 - 16.2.1\r\n- CDK/Material: 15.2.6 - 16.2.1\r\n- Browser: Safari, Chrome\r\n- Operating System: macOS, Windows\r\n","Url":"https://github.com/angular/components/issues/28206","RelatedDescription":"Open issue \"bug(MatSlider): MatSliderRangeThumb input width is not changed if the input value is changed dynamically\" (#28206)"},{"Id":"2016941753","IsPullRequest":true,"CreatedAt":"2023-11-29T16:13:42","Actor":"angular-robot","Number":"28205","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `39de01a` -> `069ea40` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `581fbc0` -> `f00eb4c` |\n| angular/dev-infra | action | digest | `f00131a` -> `1d3d98f` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28205","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#28205)"},{"Id":"2016925174","IsPullRequest":false,"CreatedAt":"2023-11-29T16:05:15","Actor":"benelliott","Number":"28204","RawContent":null,"Title":"bug(theming/migration): `@angular/material/theming` SCSS entrypoint removed in v17","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.2.x\r\n\r\n### Description\r\n\r\nThe `@angular/material/theming` entrypoint is broken in v17.x.\r\n\r\nIt looks like the `src/material/_theming.scss` file was deliberately removed as part of https://github.com/angular/components/commit/86e9e524c3234f44eece21632048cd4290e5f3f4#diff-bfa19b8f86d56d399fc0cb86ac55e1b95d161f081beb123cd2bcf31196eae030\r\n\r\nHowever, I can't seem to find any mention of this breaking change in the release notes, nor is the problem automatically fixed by the migration schematic.\r\n\r\nAdditionally, the entrypoint still appears in the package.json:\r\nhttps://github.com/angular/components/blob/main/src/material/package-base.json#L20\r\n\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nEither the entrypoint should still work, or there should be some documentation as to how to migrate away from it.\r\n\r\nI was previously using it to import public values such as `$light-primary-text` for use in my own palettes.\r\n\r\n### Actual Behavior\r\n\r\nThe entrypoint no longer works, but still appears in the package.json.\r\n\r\n### Environment\r\n\r\n- Angular: 17.x\r\n- CDK/Material: 17.x\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28204","RelatedDescription":"Open issue \"bug(theming/migration): `@angular/material/theming` SCSS entrypoint removed in v17\" (#28204)"},{"Id":"2016050525","IsPullRequest":true,"CreatedAt":"2023-11-29T15:49:48","Actor":"crisbeto","Number":"28202","RawContent":null,"Title":"refactor(multiple): switch remaining directives to standalone.","State":"closed","Body":"Switches all remaining directives to standalone and updates the linter to enforce that all directives and components are standalone.","Url":"https://github.com/angular/components/pull/28202","RelatedDescription":"Closed or merged PR \"refactor(multiple): switch remaining directives to standalone.\" (#28202)"},{"Id":"2016499542","IsPullRequest":false,"CreatedAt":"2023-11-29T13:38:11","Actor":"inorganik","Number":"28203","RawContent":null,"Title":"bug(mat-select): Does not reflect null value","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf a form control is set with a null value, mat-select cannot reflect that by displaying the correct mat-option with value set to null, but it works with a native select.\r\n\r\nThis behavior is important, because for example if you are building form controls for filtering some data displayed in a UI, you must be able to have a state where all controls are empty, and thus nothing is filtered. The null option can display \"All\" or something similar - indicating to the user that nothing is filtered. e.g.:\r\n\r\n```html\r\n<mat-option [value]=\"null\">All</mat-option>\r\n```\r\n\r\nThis issue has existed at least as far back as v 14.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/4mzrpg?file=src%2Fexample%2Fselect-overview-example.html\r\nSteps to reproduce:\r\n1. Witness how the mat-select does not display the null option, but the native select does.\r\n\r\n\n\n### Expected Behavior\n\nMat-select should correctly reflect a null value like a native select\n\n### Actual Behavior\n\nMat-select shows no option selected\n\n### Environment\n\n- Angular: 17.0.0\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28203","RelatedDescription":"Closed issue \"bug(mat-select): Does not reflect null value\" (#28203)"},{"Id":"2015325582","IsPullRequest":true,"CreatedAt":"2023-11-29T13:33:42","Actor":"nikos-moysiadis","Number":"28200","RawContent":null,"Title":"refactor: replace left-over module imports with standalone equivalents","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28200","RelatedDescription":"Closed or merged PR \"refactor: replace left-over module imports with standalone equivalents\" (#28200)"},{"Id":"2014920839","IsPullRequest":true,"CreatedAt":"2023-11-29T12:55:57","Actor":"angular-robot","Number":"28197","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `d6ab8a4` -> `39de01a` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `299c333` -> `581fbc0` |\n| angular/dev-infra | action | digest | `3909682` -> `f00131a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC4xIiwidXBkYXRlZEluVmVyIjoiMzcuNzQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28197","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28197)"},{"Id":"2015999018","IsPullRequest":true,"CreatedAt":"2023-11-29T08:14:54","Actor":"crisbeto","Number":"28201","RawContent":null,"Title":"build: update to the latest patch version","State":"closed","Body":"There was a change in the generated code for the new control flow in 17.0.4. These changes update us to it.","Url":"https://github.com/angular/components/pull/28201","RelatedDescription":"Closed or merged PR \"build: update to the latest patch version\" (#28201)"},{"Id":"2015279692","IsPullRequest":false,"CreatedAt":"2023-11-28T20:47:59","Actor":"simeyla","Number":"28199","RawContent":null,"Title":"bug(MatPaginator): Control flow changes in @angular/core 17.0.4 broke @angular/components 17.0.1","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.1 (of @angular/core)\n\n### Description\n\nThe commit for PR https://github.com/angular/angular/pull/52935 changed the function signature for `ɵɵrepeater` which is used to implement `@for` control flow. It was part of @angular/core 17.0.4.\r\n\r\nThe signature removed a parameter, such that any control flow code present in Material 17.0.1 (such as used by MatPaginator) will break at runtime.\r\n\r\nAll that is needed to fix is a version bump to sync with @angular/core 17.0.4\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Install @angular/core 17.0.4\r\n2. Install @angular/material 17.0.1\r\n3. Add MatPaginator\n\n### Expected Behavior\n\nNo error\n\n### Actual Behavior\n\n```\r\nmain.js:50620 TypeError: newCollection[Symbol.iterator] is not a function\r\nat reconcile (main.js:123167:65)\r\n```\n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.1\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28199","RelatedDescription":"Open issue \"bug(MatPaginator): Control flow changes in @angular/core 17.0.4 broke @angular/components 17.0.1\" (#28199)"},{"Id":"2015151360","IsPullRequest":false,"CreatedAt":"2023-11-28T19:27:48","Actor":"NachmanBerkowitz","Number":"28198","RawContent":null,"Title":"Using @defer with an inner mat-select causes No provider for InjectionToken mat-select-scroll-strategy! error","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16\r\n\r\n### Description\r\n\r\nUsing `@defer` where the inner component has a mat select causes No provider for InjectionToken mat-select-scroll-strategy! Error. This happens when the component that has the defer block does not import MatSelectModule in its imports array. This happen even if the nested component that has the mat-select does import the MatSelectModule .\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/npjg8f?file=src%2Fexample%2Fselect-overview-example.html\r\nSteps to reproduce:\r\n1. Use `@defer(with condition)` where a nested component has a mat-select.\r\n    Like  `@defer(with condition){<app-a> <app-b/> </app-a>}`  and `<app-b>` has a `mat-select` inside of it.\r\n2. The component that has the `@defer` does not import MatSelectModule in its imports array, `<app-b>` does.\r\n3. When the defer conditon is fuffilled, the error will occur.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo error and everything should work.\r\n\r\n### Actual Behavior\r\n\r\n```\r\nvendor.js:43656  ERROR NullInjectorError: R3InjectorError(Environment Injector)[InjectionToken mat-select-scroll-strategy -> InjectionToken mat-select-scroll-strategy]: \r\n  NullInjectorError: No provider for InjectionToken mat-select-scroll-strategy!\r\n    at NullInjector.get (vendor.js:37713:21)\r\n    at R3Injector.get (vendor.js:38164:27)\r\n    at R3Injector.get (vendor.js:38164:27)\r\n    at ChainedInjector.get (vendor.js:47251:32)\r\n    at lookupTokenUsingModuleInjector (vendor.js:36272:31)\r\n    at getOrCreateInjectable (vendor.js:36318:10)\r\n    at Module.ɵɵdirectiveInject (vendor.js:43878:17)\r\n    at NodeInjectorFactory.MatSelect_Factory [as factory] (src_example_my_ts.js:19241:1454)\r\n    at getNodeInjectable (vendor.js:36512:38)\r\n    at instantiateAllDirectives (vendor.js:44650:23)\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28198","RelatedDescription":"Open issue \"Using @defer with an inner mat-select causes No provider for InjectionToken mat-select-scroll-strategy! error\" (#28198)"},{"Id":"2013971705","IsPullRequest":true,"CreatedAt":"2023-11-28T11:00:34","Actor":"crisbeto","Number":"28196","RawContent":null,"Title":"Switch experimental packages to standalone","State":"closed","Body":"Reworks all of the experimental packages to use standalone.","Url":"https://github.com/angular/components/pull/28196","RelatedDescription":"Closed or merged PR \"Switch experimental packages to standalone\" (#28196)"},{"Id":"2012734775","IsPullRequest":true,"CreatedAt":"2023-11-28T07:57:06","Actor":"angular-robot","Number":"28192","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1cd003b` -> `d6ab8a4` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `24dd667` -> `299c333` |\n| angular/dev-infra | action | digest | `8d620dd` -> `3909682` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy41MC4xIiwidXBkYXRlZEluVmVyIjoiMzcuNzEuMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28192","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28192)"},{"Id":"2013577409","IsPullRequest":false,"CreatedAt":"2023-11-28T04:07:51","Actor":"mattiLeBlanc","Number":"28195","RawContent":null,"Title":"feat(Mat-Table): Allow for adding multiple TBODY within Mat-Table","State":"open","Body":"### Feature Description\n\nIn the current cdk Table implementation we can only have on `<TR>` with  a `matRowDef`. This will generate a TBODY element with the TR's inside.\r\nThat works fine for most use case.\r\n\r\nI would like to be able to add a second TBODY with a selection of the rows of the datasource (based on a filter) so that I have 2 groups of rows within the same table.\r\n\r\nI tried using the When option in matRowDef but that doesn't result in 2 TBODY's, but it comes close into what I am looking for.\n\n### Use Case\n\nI am having a list of Categories of which the top 3 can have primary flag. Those are display at the top, then row 4 until X is the non primary Categories.\r\nI enabled drag and drop and I only want to be able to order the Primary rows within their TBODY and the non-primary rows in their TBODY. So you can't accidentally drop a Non primary row into a primary block.\r\n\r\nYou can control if a category is primary or not by editing the Category itself.\r\n\r\nSo to sum up feature request:\r\n\r\n- Allow for multiple TBODYs which can have a filtered collection of the datasource\r\n- Allow Drag and drop within that tbody only\r\n<img width=\"943\" alt=\"image\" src=\"https://github.com/angular/components/assets/5285035/e877f0cd-e523-41b6-8ba5-0714d2a56db2\">\r\n","Url":"https://github.com/angular/components/issues/28195","RelatedDescription":"Open issue \"feat(Mat-Table): Allow for adding multiple TBODY within Mat-Table\" (#28195)"},{"Id":"2012980372","IsPullRequest":true,"CreatedAt":"2023-11-27T20:18:23","Actor":"crisbeto","Number":"28194","RawContent":null,"Title":"refactor(material/core): work around closure issue","State":"closed","Body":"Fixes a runtime error with some configurations of Closure compiler, because the `_ErrorStateTracker.errorState` property name was clashing with the same property in other classes.","Url":"https://github.com/angular/components/pull/28194","RelatedDescription":"Closed or merged PR \"refactor(material/core): work around closure issue\" (#28194)"},{"Id":"2012755951","IsPullRequest":true,"CreatedAt":"2023-11-27T17:26:15","Actor":"wagnermaciel","Number":"28193","RawContent":null,"Title":"fix(material/slider): fix tick mark precision","State":"open","Body":"* Fixes https://github.com/angular/components/issues/26459\r\n* Fixes a bug where the number of tick marks can be miscalculated when the step is a decimal (e.g. 1.5)","Url":"https://github.com/angular/components/pull/28193","RelatedDescription":"Open PR \"fix(material/slider): fix tick mark precision\" (#28193)"},{"Id":"2012642324","IsPullRequest":false,"CreatedAt":"2023-11-27T16:22:31","Actor":"ulrichson","Number":"28191","RawContent":null,"Title":"bug(mat-button): Basic button doesn't apply density config","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nBasic button with a `density < 0` defined in the theme doesn't have the same height as other button types:\r\n\r\n![Screenshot 2023-11-27 at 17 17 08](https://github.com/angular/components/assets/449600/c971d4db-1a59-4fec-858d-317276b9b019)\r\n\r\nThis is the theme config:\r\n\r\n```\r\n$theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $theme-primary,\r\n      accent: $theme-accent,\r\n      warn: $theme-warn,\r\n    ),\r\n    density: -3,\r\n    typography: mat.define-typography-config(),\r\n  )\r\n);\r\n```\r\n\r\nIn v16 it had the same height as other buttons.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ujsqvj?file=src%2Ftheme.scss\n\n### Expected Behavior\n\nBasic button has same height as other button types when a `density < 0` is applied.\n\n### Actual Behavior\n\nBasic button has the default height regardless of `density` value\n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/28191","RelatedDescription":"Open issue \"bug(mat-button): Basic button doesn't apply density config\" (#28191)"},{"Id":"2012581389","IsPullRequest":false,"CreatedAt":"2023-11-27T15:52:17","Actor":"stefanoquaranta","Number":"28190","RawContent":null,"Title":"bug(mat-stepper): flickering animation on steps navigation (iOS 17)","State":"open","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\nThe previous version in which this bug was not present was\r\n\r\n15 \r\n\r\nI can confirm that Angular 15 on iOS 17.1.1 doesn't have the mat-stepper animation issue \r\n\r\n### Description\r\n\r\nWhen using the mat-stepper component on a iOS 17.1.1 device with Safari browser, the animation happening between steps navigation will flicker instead of being smooth.\r\n\r\nOther components animations seems to be ok, only mat-stepper seems to be affected.\r\n\r\n### Reproduction\r\n\r\nTo reproduce the behavior: with a iOS 17.1.1 device (the only version I've tested), simply go on current Angular Material documentation under \"stepper\" page and navigate between steps.\r\n\r\nThe animation will flicker.\r\n\r\nhttps://material.angular.io/components/stepper/overview\r\n\r\n### Expected Behavior\r\n\r\nSmooth animation when selecting a step\r\n\r\n### Actual Behavior\r\n\r\nAnimation flickers when selecting a step\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.12 (but also in 17)\r\n- CDK/Material: 16.2.12 (but also in 17)\r\n- Browser(s): Safari\r\n- Operating System: iOS 17.1.1","Url":"https://github.com/angular/components/issues/28190","RelatedDescription":"Open issue \"bug(mat-stepper): flickering animation on steps navigation (iOS 17)\" (#28190)"},{"Id":"2010530472","IsPullRequest":true,"CreatedAt":"2023-11-27T13:16:34","Actor":"crisbeto","Number":"28187","RawContent":null,"Title":"build: custom lint rules not working locally","State":"closed","Body":"We have some custom lint rules that only apply to specific files. Currently the filtering is implemented by opting in specific files through a glob pattern. We do so by converting the absolute `SourceFile.fileName` to a relative one and checking it against the pattern.\r\n\r\nThe problem is that in some recent version either the OS or TypeScript started returning lower-cased paths in `SourceFile.fileName` while `process.cwd()` which we resolve the path against is case-sensitive. This ends up producing an invalid path which doesn't get covered by the lint rules.\r\n\r\nThese changes fix the issue by having custom rules apply to all files and using the glob pattern to _exclude_ some of them.","Url":"https://github.com/angular/components/pull/28187","RelatedDescription":"Closed or merged PR \"build: custom lint rules not working locally\" (#28187)"},{"Id":"2010951682","IsPullRequest":true,"CreatedAt":"2023-11-27T13:15:51","Actor":"crisbeto","Number":"28188","RawContent":null,"Title":"build: change icons in dev app based on state","State":"closed","Body":"Minor UX improvement to the dev app that makes it so the icons in the toolbar change depending on the state. This makes it easier to tell when the value has changed.","Url":"https://github.com/angular/components/pull/28188","RelatedDescription":"Closed or merged PR \"build: change icons in dev app based on state\" (#28188)"},{"Id":"2011063434","IsPullRequest":false,"CreatedAt":"2023-11-26T14:29:39","Actor":"elgerm","Number":"28189","RawContent":null,"Title":"Angular material and angular SSR == slow performance / high CLS","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] No, but since angular ssr is a first class citizen now, it does matter more\r\n\r\n### Description\r\n\r\nUsing angular material with angular SSR will lead to degraded performance. Because it will render from server AND re-render in the browser. Leading to large layout shifts and generally slower performance than no ssr at all.\r\n\r\nFrom what I see in the source code the following components are skipped from hydration:\r\n- drawer\r\n- sidenav\r\n- menu\r\n- tab-group\r\n- table\r\n- autocomplete\r\n- select\r\n- stepper\r\n- table\r\n- chip-listbox\r\n\r\nEncapsulating components like sidenav, drawer and tab-group should not be skipping hydration.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nGifthub example repo: [here](https://github.com/elgerm/sidenav)\r\nSteps to reproduce:\r\n1. Add SSR\r\n2. Add Material\r\n\r\n\r\n### Expected Behavior\r\n\r\nno re-rendering \r\n\r\n### Actual Behavior\r\n\r\ncomponents don't get hydrated\r\n\r\n### Environment\r\n\r\n- Angular:  17\r\n- CDK/Material: 17\r\n- Browser(s): all of them\r\n","Url":"https://github.com/angular/components/issues/28189","RelatedDescription":"Open issue \"Angular material and angular SSR == slow performance / high CLS\" (#28189)"},{"Id":"2010431920","IsPullRequest":false,"CreatedAt":"2023-11-25T01:54:15","Actor":"MichalZonis","Number":"28186","RawContent":null,"Title":"bug(angular material datepicker): datepicker throws an    NullInjectorError: No provider for DateAdapter! that is not documented in any example","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13.0.0\n\n### Description\n\nI want to use angular material datepicker for date range selection in my application. This worked just in previous versions I used to work with.\r\nI follow the documentation and yet the following error rises: \r\ncreate-trip.component.html:10 ERROR NullInjectorError: R3InjectorError(Standalone[_HomeComponent])[DateAdapter -> DateAdapter -> DateAdapter -> DateAdapter]: \r\n  NullInjectorError: No provider for DateAdapter! \r\n\r\nThe datepicker is located inside an angular material dialog component, which is opened from the HomeComponent that is mentioned in the error. I tried to provide 'NativeDateAdapter' in both the dialog component and the home component but it didn't help.\r\n\r\nJust to clarify, the calendar doesn't open and I can't choose dates.\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. create a dialog component\r\n2. place a datepicker inside it\r\n3.  try to choose a date\r\n\n\n### Expected Behavior\n\nWhen the calendar icon is clicked, a calendar opens.\n\n### Actual Behavior\n\nthe calendar doesn't open and the mentioned error is shown in the console.\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router   \r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0\r\n@angular-devkit/build-angular   17.0.0\r\n@angular-devkit/core            17.0.0\r\n@angular-devkit/schematics      17.0.0\r\n@angular/cdk                    17.0.0\r\n@angular/cli                    17.0.0\r\n@angular/google-maps            17.0.0\r\n@angular/material               17.0.0\r\n@schematics/angular             17.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n","Url":"https://github.com/angular/components/issues/28186","RelatedDescription":"Open issue \"bug(angular material datepicker): datepicker throws an    NullInjectorError: No provider for DateAdapter! that is not documented in any example\" (#28186)"},{"Id":"2009276471","IsPullRequest":true,"CreatedAt":"2023-11-24T12:16:13","Actor":"crisbeto","Number":"28185","RawContent":null,"Title":"fix(material/form-field): work around closure compiler issue","State":"closed","Body":"The changes from #28149 appear to have triggered an error when `mat-chip-grid` is used inside of a `mat-form-field` and optimized with Closure compiler in a configuration that uses type information to do property renaming. These changes work around the issue within `mat-form-field`.","Url":"https://github.com/angular/components/pull/28185","RelatedDescription":"Closed or merged PR \"fix(material/form-field): work around closure compiler issue\" (#28185)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-01T03:30:02.7072404Z","RunDurationInMilliseconds":1600}