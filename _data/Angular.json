{"Data":{"Angular-Issues":{"Issues":[{"Id":"1505523043","IsPullRequest":false,"CreatedAt":"2022-12-21T00:32:02","Actor":"tbondwilkinson","Number":"48557","RawContent":null,"Title":"Locally debugging unit tests on linux prevents node inspection","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nbazel\n\n### Is this a regression?\n\nNo\n\n### Description\n\nRunning tests in debug mode:\r\n\r\n```\r\nyarn bazel test //packages/common/test:test --config=debug\r\n```\r\n\r\nOn linux results in a node environment that is improperly sandboxed by bazel.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\nFor config=debug, --spawn_strategy=local must be used instead.","Url":"https://github.com/angular/angular/issues/48557","RelatedDescription":"Open issue \"Locally debugging unit tests on linux prevents node inspection\" (#48557)"},{"Id":"1505505993","IsPullRequest":true,"CreatedAt":"2022-12-21T00:20:55","Actor":"tbondwilkinson","Number":"48556","RawContent":null,"Title":"refactor(router): split out URL-related logic into UrlService","State":"open","Body":"Mark existing Location methods that are now moved to UrlServiec as @deprecated. Move tests from location_spec to url_service_spec for behavior now in UrlService. This is the beginning of a refactor to introduce new Services that will provide access to the new Navigation API.\r\n\r\nDEPRECATED: Location methods associated with the URL.\r\n\r\nLocation methods that are marked as deprecated should use the same methods that now exist in UrlService.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nUsers use Location for URL-related behavior.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nUser use UrlService for URL-related behavior.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48556","RelatedDescription":"Open PR \"refactor(router): split out URL-related logic into UrlService\" (#48556)"},{"Id":"1505424857","IsPullRequest":true,"CreatedAt":"2022-12-20T23:04:50","Actor":"kormide","Number":"48555","RawContent":null,"Title":"bazel cache miss testing","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48555","RelatedDescription":"Open PR \"bazel cache miss testing\" (#48555)"},{"Id":"1505063030","IsPullRequest":true,"CreatedAt":"2022-12-20T18:24:20","Actor":"devversion","Number":"48554","RawContent":null,"Title":"build: only generate bazel saucelabs targets for `//packages/`","State":"open","Body":"With the recent ESM changes we also started generating Saucelabs targets for `//devtools` (as part of an effort to avoid code duplication). We should skip Saucelabs targets for this package because we don't intend to run them on Saucelabs and this whole setup needs some more work (and we shouldn't change unexpectedly).\r\n\r\nAlso remove the `bootstrap` attribute. This is empty and no longer needed because bootstrap\r\ncode is invoked via the spec entrypoint generated above.","Url":"https://github.com/angular/angular/pull/48554","RelatedDescription":"Open PR \"build: only generate bazel saucelabs targets for `//packages/`\" (#48554)"},{"Id":"1505023083","IsPullRequest":true,"CreatedAt":"2022-12-20T17:52:05","Actor":"atscott","Number":"48553","RawContent":null,"Title":"docs(router): Update component testing docs to use navigateForTest ","State":"open","Body":"This change updates the component testing guide to use `navigateForTest`\r\ninstead of `ActivatedRouteStub`. The `navigateForTest` is more robust\r\nand easier to use than figuring out how to create a valid test mock for\r\n`ActivatedRoute`.\r\n\r\nBlocked by #48552","Url":"https://github.com/angular/angular/pull/48553","RelatedDescription":"Open PR \"docs(router): Update component testing docs to use navigateForTest \" (#48553)"},{"Id":"1505017754","IsPullRequest":true,"CreatedAt":"2022-12-20T17:47:51","Actor":"atscott","Number":"48552","RawContent":null,"Title":"feat(router): Add test helper for trigger navigations in tests","State":"open","Body":"In order to test components and services which depend on router navigations, such as `ActivatedRoute` instances, tests currently need to provide a fair bit of boilerplate _or_ they can set up a stub for `ActivatedRoute` and list it in the `providers` to override it in `TestBed`. This approach of stubbing the `ActivatedRoute` creates a situation that can easily cause the test to break. The stub often only mocks out the dependencies that the component/service _currently_ needs. This dependencies might change over time and break the test in an unexpected way. In addition, it is difficult to get the structure of `ActivatedRoute` exactly correct.\r\n\r\nThis change will allow unit tests to quickly set up routes, trigger real navigations in the Router, and get instances of component's to test along with real instances of `ActivatedRoute`. This all comes without needing to know that the component depends on `ActivatedRoute` at all. This becomes more important when considering that a component may be refactored in the future to use `@Input` rather than access data on the `ActivatedRoute` instance (see #18967). Tests which mock out `ActivatedRoute` would all break, but those which use `navigateForTest` would continue to work without needing any updates.\r\n\r\nresolves #15779\r\n","Url":"https://github.com/angular/angular/pull/48552","RelatedDescription":"Open PR \"feat(router): Add test helper for trigger navigations in tests\" (#48552)"},{"Id":"1504886472","IsPullRequest":true,"CreatedAt":"2022-12-20T16:50:23","Actor":"atscott","Number":"48551","RawContent":null,"Title":"Add `withErrorHandler` feature to `provideRouter`","State":"open","Body":"Commit 1: \r\n`withErrorHandler` is a close replacement for the\r\n`RouterModule.forRoot.errorHandler` / `Router.errorHandler`.\r\nIt provides a quick, short way for users to define a function to handle\r\n`NavigationError` events.\r\n\r\nCommit 2:\r\n`errorHandler` and `malformedUriErrorHandler` were already deprecated in\r\nthe Router class public API. This change updates the deprecation to\r\nextend to `RouterModule.forRoot` configuration options.","Url":"https://github.com/angular/angular/pull/48551","RelatedDescription":"Open PR \"Add `withErrorHandler` feature to `provideRouter`\" (#48551)"},{"Id":"1503956943","IsPullRequest":true,"CreatedAt":"2022-12-20T12:56:28","Actor":"GBailey7","Number":"48547","RawContent":null,"Title":"Add .circleci/config.yml","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [x] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48547","RelatedDescription":"Closed or merged PR \"Add .circleci/config.yml\" (#48547)"},{"Id":"1504513383","IsPullRequest":false,"CreatedAt":"2022-12-20T12:52:20","Actor":"bojidaryovchev","Number":"48550","RawContent":null,"Title":"FormControl<T> where T happens to be an object with a \"value\" property messes things up","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nplease check the codesandbox, basically the problem is that when we declare a FormControl\\<T\\> and T is an object which has a property called \"value\" it messes up the typings\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://codesandbox.io/s/eager-blackburn-58gk3h?file=/src/app/app.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48550","RelatedDescription":"Open issue \"FormControl<T> where T happens to be an object with a \"value\" property messes things up\" (#48550)"},{"Id":"1504256510","IsPullRequest":true,"CreatedAt":"2022-12-20T09:34:23","Actor":"pkozlowski-opensource","Number":"48549","RawContent":null,"Title":"Debug objects cleanup","State":"open","Body":"Mostly code moves / removes. See individual commits for more details.","Url":"https://github.com/angular/angular/pull/48549","RelatedDescription":"Open PR \"Debug objects cleanup\" (#48549)"},{"Id":"1504032566","IsPullRequest":true,"CreatedAt":"2022-12-20T06:04:24","Actor":"angular-robot","Number":"48548","RawContent":null,"Title":"build: update eslint dependencies to v5.47.0","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.46.1/5.47.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.46.1/5.47.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[no-floating-promises] add suggestion fixer to add an 'await' ([#&#8203;5943](https://togithub.com/typescript-eslint/typescript-eslint/issues/5943)) ([9e35ef9](https://togithub.com/typescript-eslint/typescript-eslint/commit/9e35ef9af3ec51ab2dd49336699f3a94528bb4b1))\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48548","RelatedDescription":"Open PR \"build: update eslint dependencies to v5.47.0\" (#48548)"},{"Id":"1503914274","IsPullRequest":true,"CreatedAt":"2022-12-20T03:04:49","Actor":"Piyush132000","Number":"48546","RawContent":null,"Title":"docs: updated docs removed unnecessary imports and empty methods","State":"open","Body":"Removed empty methods and unnecessary imports in files\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48546","RelatedDescription":"Open PR \"docs: updated docs removed unnecessary imports and empty methods\" (#48546)"},{"Id":"1503850255","IsPullRequest":false,"CreatedAt":"2022-12-20T01:25:50","Actor":"dgp1130","Number":"48545","RawContent":null,"Title":"Remove `$localize` export","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nlocalize\n\n### Description\n\nIn https://github.com/angular/angular-cli/issues/24145#issuecomment-1358687296, we discovered that the compiler expects `$localize` to be used as global, not imported from `@angular/localize/init`. This is confusing and leads to users misusing the function.\n\n### Proposed solution\n\nWe should remove the exported `$localize` from this package and instead let users depend on it via the global declaration.\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/48545","RelatedDescription":"Open issue \"Remove `$localize` export\" (#48545)"},{"Id":"1503844582","IsPullRequest":false,"CreatedAt":"2022-12-20T01:14:38","Actor":"dgp1130","Number":"48544","RawContent":null,"Title":"Shadowing built-ins confuses compiler","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf you attempt to extract messages from a component with the following import:\r\n\r\n```typescript\r\nimport { $localize } from '@angular/localize/init';\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/fischeversenker/ng-decorator-tree-shaking\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nMessages from the component are not extracted.\r\n\r\nThis appears to be because the `$localize` import will be included in the generated JavaScript and so any user-authored or generated references to `$localize` actually refer to this _imported_ `$localize`, not the _global_ `$localize`. This appears to confuse the compiler and prevents it from extracting the messages.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\nSpin off from https://github.com/angular/angular-cli/issues/24145#issuecomment-1358687296.\r\n\r\nFortunately this can be worked around by just `import '@angular/localize';` and using the global `$localize`. However I think this is indicative of a bigger problem in the compiler that it allows you to shadow built-in symbols. `$localize` is the most obvious one, but I think the same thing can happen to `i0`? The following snippet compiles without error:\r\n\r\n```typescript\r\nimport { Component } from '@angular/core';\r\nimport { $localize } from '@angular/localize/init';\r\n\r\n(() => {\r\n  const i0 = null;\r\n\r\n  @Component({\r\n    selector: 'lib-library-with-localize',\r\n    template: `<div i18n>unused library template with localize</div>`,\r\n    standalone: true,\r\n  })\r\n  class LibraryWithLocalizeComponent {\r\n    name = $localize`my name`;\r\n  }\r\n})();\r\n```\r\n\r\nI'm pretty sure that will fail at runtime given that the generated `i0.*` instructions will resolve to the `null` constant. `i0` is harder to misuse given that the compiler actually generates `import * as i0 from '...';`, so you get a name conflict if you define a top-level constant for it (which is also unintuitive, but better than compiling successfully and failing later). Also given that the symbol is only ever used in the code generated by `@Component()` (I think?) there aren't many situations outside of my contrived example where someone could reasonably shadow `i0` in a breaking manner.\r\n\r\nWe should consider banning any compiler built-in from being shadowed in user-code. Users just shouldn't be able to declare variables named `$localize` because they will have different semantics from the built-in symbol. For `i0`, I think the ideal fix would just be for the compiler to pick a different name (`i1`) if `i0` is already taken. Not sure how hard that is given that we'd probably want to verify _all_ symbols in the file, not just top-level declarations. Are there other \"built-in symbols\" we'd want to ban from user code?\r\n\r\nJust to be a pedant, I'll point that out that _technically_ `with` becomes a problem here, since users could write something like:\r\n\r\n```typescript\r\nimport '@angular/localize';\r\n\r\nconst imARealJerk = {\r\n  $localize: () => { /* ... */ },\r\n};\r\n\r\nwith (imARealJerk) {\r\n  console.log($localize`Oh so you think you're such a wiz at CS205-Compilers?`);\r\n}\r\n```\r\n\r\nTechnically we could inspect the type of the object to look for `$localize` key, but that's probably not worth the effort and we could just ignore `with` cases. Just wanted to call that out.","Url":"https://github.com/angular/angular/issues/48544","RelatedDescription":"Open issue \"Shadowing built-ins confuses compiler\" (#48544)"},{"Id":"1503722090","IsPullRequest":false,"CreatedAt":"2022-12-20T00:49:31","Actor":"rgrbrny","Number":"48543","RawContent":null,"Title":"Deactivate guard pops router state, fails when canceling navigation","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nSource code at the provided link; but stackblitz seems to reload the app when using the arrow navigation and so it does not reproduce in the stackblitz environment.\r\n\r\nGiven a simple routing app with links home -> list -> edit and a deactivation guard on the edit component:\r\nwhen using the browser back arrow to navigate from edit -> list and then canceling the navigation, the history gets popped leading to incorrect future navigation. \r\n\r\nFrom the browser log, running locally:\r\n```\r\nReloading enabled, Progress disabled, Overlay enabled.\r\ncore.mjs:24834 Angular is running in development mode. Call enableProdMode() to enable production mode.\r\nedit.guard.ts:14 current route ActivatedRouteSnapshot {url: Array(2), params: {…}, queryParams: {…}, fragment: null, data: {…}, …}\r\nedit.guard.ts:15 currentState RouterStateSnapshot {_root: TreeNode, url: '/list/edit'}\r\nedit.guard.ts:16 next state RouterStateSnapshot {_root: TreeNode, url: '/list'}\r\nedit.guard.ts:14 current route ActivatedRouteSnapshot {url: Array(2), params: {…}, queryParams: {…}, fragment: null, data: {…}, …}\r\n```\r\nCancel the confirmation dialog and attempt the navigation again:\r\n```\r\nedit.guard.ts:15 currentState RouterStateSnapshot {_root: TreeNode, url: '/list/edit'}\r\nedit.guard.ts:16 next state RouterStateSnapshot {_root: TreeNode, url: '/'}\r\n\r\n```\r\nThe intermediate /list entry is no longer present, even though the navigation was canceled.\r\n\r\nCancel the confirmation dialog and attempt the navigation again; the back arrow takes us out of the application without any confirmation resulting in a loss of data.\r\n\r\nNote that if I use a programmatic navigation instead of the browser arrows, things work as expected.\r\n\r\nng version output:\r\nAngular CLI: 15.0.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@schematics/angular             15.0.4\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-kzxmpp\n\n### Please provide the exception or error you saw\n\n```true\nCanceling the navigation leaves the browser on the correct page, but subsequent navigation takes us to an incorrect resource. When there is no history associated with the application, the navigation leaves the application entirely without a confirmation, leading to loss of data.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48543","RelatedDescription":"Closed issue \"Deactivate guard pops router state, fails when canceling navigation\" (#48543)"},{"Id":"1503329709","IsPullRequest":false,"CreatedAt":"2022-12-19T22:50:01","Actor":"4javier","Number":"48539","RawContent":null,"Title":"Is NestedAnimationTriggerMetadata type really needed?","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations\n\n### Is this a regression?\n\nNo\n\n### Description\n\nLooking at the code of AnimationRendererFactory I stumbled upon this type definition\r\nhttps://github.com/angular/angular/blob/e59406f5e7d1c1cf9bdd7a2f882d05fbf0abcf99/packages/platform-browser/animations/src/animation_renderer.ts#L18-L19\r\ncorrectly unwrapped recursively during triggers registration for AnimationRenderer creation\r\nhttps://github.com/angular/angular/blob/e59406f5e7d1c1cf9bdd7a2f882d05fbf0abcf99/packages/platform-browser/animations/src/animation_renderer.ts#L70-L78\r\n\r\nI know how it works, but I cannot understand why it exists in the first place.\r\nA comment on top of it says\r\n\r\n> // Define a recursive type to allow for nested arrays of `AnimationTriggerMetadata`.\r\n\r\nBut I can't imagine a usecase for such a data structure.\r\nPassing a `trigger()` call as one of `definitions` array's value of an outer `trigger()` would pass compiler typecheck, being `AnimationTriggerMetadata` an extension of the expected `AnimationMetadata`, but would fail at runtime with\r\n\r\n>  - NG03007: only state() and transition() definitions can sit inside of a trigger()\r\n\r\nThe only situation I can think of in which code execution would reach that branch, it's if someone would explicitly pass a nested array as `@Component`'s `animations` metadata.\r\nBut I can't see the point in doing that.\r\nWhat am I missing?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.5\r\nNode: 14.20.0\r\nPackage Manager: npm 6.14.17 \r\nOS: linux x64\r\n\r\nAngular: 14.2.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nBut I can't see any changes about this inside v15 source.\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48539","RelatedDescription":"Closed issue \"Is NestedAnimationTriggerMetadata type really needed?\" (#48539)"},{"Id":"1503681453","IsPullRequest":false,"CreatedAt":"2022-12-19T22:10:22","Actor":"chladog","Number":"48542","RawContent":null,"Title":"anchorScrolling: 'enabled' does not work on nested ViewEncapsulation.ShadowDom","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAnchor scrolling does not work when anchor element is deeper than 1 ShadowDom-level.\r\nNavigating via a fragment link does not cause the target element to be scrolled into view, nor is focus placed on the target element.\r\n\r\nCurrently Router can find target element inside dom root and **interestlingly inside the first level** of shadow DOM. But won't find target element from any deeper level.\r\n\r\n### Expected behavior\r\nShould walk the whole tree to find the target element.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-on3gqs?file=src/app/app.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nNo err thrown\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 15.0.4\n```\n\n\n### Anything else?\n\nI'm not sure if this is regression of #41470 or extended issue caused by the bigger depth.","Url":"https://github.com/angular/angular/issues/48542","RelatedDescription":"Open issue \"anchorScrolling: 'enabled' does not work on nested ViewEncapsulation.ShadowDom\" (#48542)"},{"Id":"1503652809","IsPullRequest":false,"CreatedAt":"2022-12-19T21:45:07","Actor":"josepm9","Number":"48541","RawContent":null,"Title":"Assignment of a outer scope variable in a closure failing when optimization enabled","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nAssignment of a outer scope variable in a closure, that works perfectly in development mode, it's failing when optimization are enabled.\r\n\r\nThis error can be reproduced following the next steps:\r\n1) Define a string variable with a default value.\r\n2) Update it in a closure.\r\n3) Just after the closure, use `+=`to concatenate something the variable.\r\n\r\nThe variable, at the end, contains the initial value followed by the concatenated one. The value set in the closure is lost.\r\n\r\nI've been able to reproduce this issue with latest versions of angular 13 and 14 when optimization is enabled (`\"optimization\": true`) but not with angular 15.\r\n\r\nExample of failing code:\r\n```typescript\r\n  problem(): string {\r\n    let url = 'If you see this, there is a problem.';\r\n    let query = (() => {\r\n      url = 'If you see this, all is right.';\r\n      console.log('Updating URL (1): ' + url);\r\n      return '';\r\n    })();\r\n    url += query;\r\n    console.log('Updating URL (2): ' + url);\r\n    return url;\r\n  }\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/josepm9/ng-optimization-enabled-issue\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nPlease use the example (master or release/angular14 branch) to reproduce the error.\r\n\r\n1) Start the example (`npm run start`)\r\n2) Browse the main page (http://localhost:4200/)\r\n\r\nExpected page content:\r\n\r\nAngular 15.0.4\r\nProblem: If you see this, all is right.\r\nNo problem: If you see this, all is right.\r\n\r\nActual page content:\r\n\r\nAngular 13.3.12\r\nProblem: If you see this, there is a problem.\r\nNo problem: If you see this, all is right.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.3.10\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: linux x64\r\n\r\nAngular: 13.3.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.10\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.3.10\r\n@angular-devkit/schematics      13.3.10\r\n@angular/cli                    13.3.10\r\n@schematics/angular             13.3.10\r\nrxjs                            7.8.0\r\ntypescript                      4.6.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI've been able to reproduce this issue with latest versions of angular 13 and 14 when optimization is enabled (`\"optimization\": true`) but not with angular 15.\r\n\r\n\r\nAngular 14 environment:\r\n\r\n```console\r\nAngular CLI: 14.2.10\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0 \r\nOS: linux x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cli                    14.2.10\r\n@schematics/angular             14.2.10\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\n```","Url":"https://github.com/angular/angular/issues/48541","RelatedDescription":"Open issue \"Assignment of a outer scope variable in a closure failing when optimization enabled\" (#48541)"},{"Id":"1503235740","IsPullRequest":true,"CreatedAt":"2022-12-19T20:12:42","Actor":"devversion","Number":"48538","RawContent":null,"Title":"[15.0.x] Merge ESM feature branch","State":"closed","Body":"Patch port of https://github.com/angular/angular/pull/48521","Url":"https://github.com/angular/angular/pull/48538","RelatedDescription":"Closed or merged PR \"[15.0.x] Merge ESM feature branch\" (#48538)"},{"Id":"1503518865","IsPullRequest":true,"CreatedAt":"2022-12-19T20:06:17","Actor":"atscott","Number":"48540","RawContent":null,"Title":"fix(router): page refresh should not destroy history state","State":"open","Body":"The router's `initialNavigation` causes an imperative navigation using the `navigateByUrl` method. This, however, results in the history state being removed on a page refresh. This change calls `scheduleNavigation` directly from `initialNavigation` to ensure the history state is correctly retained.\r\n","Url":"https://github.com/angular/angular/pull/48540","RelatedDescription":"Open PR \"fix(router): page refresh should not destroy history state\" (#48540)"},{"Id":"1503036635","IsPullRequest":false,"CreatedAt":"2022-12-19T14:14:56","Actor":"tanb33r","Number":"48536","RawContent":null,"Title":"Changes of files are not clear","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nangular.io/start/\r\n\r\n### Description\r\n\r\nIn each step, changes in files are not precise, and one might miss some changes,\r\nAlso, other lines are hidden, so it's unclear whether I should remove other lines.\r\n\r\n### Proposed solution\r\n\r\nHighlight the line changes in each file\r\n\r\n### Alternatives considered\r\n\r\nGitHub Repos of all stages","Url":"https://github.com/angular/angular/issues/48536","RelatedDescription":"Open issue \"Changes of files are not clear\" (#48536)"},{"Id":"1502956738","IsPullRequest":true,"CreatedAt":"2022-12-19T13:28:04","Actor":"crisbeto","Number":"48535","RawContent":null,"Title":"feat(compiler): allow self-closing tags on custom elements","State":"open","Body":"Allows for self-closing tags to be used for non-native tag names, e.g. `<foo [input]=\"bar\"></foo>` can now be written as `<foo [input]=\"bar\"/>`. Native tag names still have to have closing tags.\r\n\r\nFixes #39525.","Url":"https://github.com/angular/angular/pull/48535","RelatedDescription":"Open PR \"feat(compiler): allow self-closing tags on custom elements\" (#48535)"},{"Id":"1501816421","IsPullRequest":false,"CreatedAt":"2022-12-19T08:46:53","Actor":"jchapelle","Number":"48528","RawContent":null,"Title":"Template rendering error handling","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon, core\r\n\r\n### Description\r\n\r\nIt would be very useful to be able to catch html/view rendering issue via hook lifecycle method.\r\nThis would allow to react on unexpected issue without breaking the component or the whole app.\r\nThis request is for an equivalent to React 'componentDidCatch' or 'getDerivedStateFromError' hooks.\r\n\r\n### Proposed solution\r\n\r\nAdd a 'ngOnViewError' hook lifecycle method to catch rendering issue.\r\n\r\n\r\n### Alternatives considered\r\n\r\nNot applicable","Url":"https://github.com/angular/angular/issues/48528","RelatedDescription":"Closed issue \"Template rendering error handling\" (#48528)"},{"Id":"1502475760","IsPullRequest":true,"CreatedAt":"2022-12-19T07:59:35","Actor":"AleksanderBodurri","Number":"48533","RawContent":null,"Title":"feat(devtools): create demo application that uses standalone APIs/components/directives/pipes","State":"open","Body":"The existing DevTools demo app that is used for developing on DevTools is exclusively an NgModule application. This commit creates a copy of the old demo app but with no NgModules and only standalone APIs/Components/Directives/Pipes.\r\n\r\nIn the future this will lets us run tests against applications that both use and do not use NgModules. In the present it serves as a convenient playground for developing new debug APIs in an NgModule-less application.\r\n\r\n","Url":"https://github.com/angular/angular/pull/48533","RelatedDescription":"Open PR \"feat(devtools): create demo application that uses standalone APIs/components/directives/pipes\" (#48533)"},{"Id":"1502164854","IsPullRequest":false,"CreatedAt":"2022-12-19T01:56:41","Actor":"damingerdai","Number":"48532","RawContent":null,"Title":"detective-postcss need update to 5.1.3","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nwhen i try to run `yarn` in my local to build the source code, i find the issue\r\n```\r\nerror detective-postcss@5.1.1: The engine \"node\" is incompatible with this module. Expected version \"12.x || 14.x || 16.x\". Got \"18.12.0\"\r\nerror Found incompatible module.\r\n```\r\n\r\nnow i use ` yarn config set ignore-engines true` to fix the issue, but i think we need upgrade `detective-postcss` lastest version to support node18\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48532","RelatedDescription":"Open issue \"detective-postcss need update to 5.1.3\" (#48532)"},{"Id":"1502011919","IsPullRequest":true,"CreatedAt":"2022-12-18T19:50:55","Actor":"JeanMeche","Number":"48531","RawContent":null,"Title":"fix(forms): remove deprecated support for ngModel on reactive form directives","State":"open","Body":"fix(forms): remove deprecated support for ngModel on reactive form directives\r\n\r\nBREAKING CHANGE:\r\n\r\nIn v6, we deprecated support for the ngModel and ngModelChange inputs on\r\nreactive form directives. We are now removing these deprecated APIs for\r\nv16. See the original change here for more info on why:\r\n#22633.\r\n\r\nThis PR is mostly a cherry-pick of @AndrewKushnir 's #38849. This has been tried for v11, and for v8 before (#28996). \r\n\r\nHave things moved on since the release of v11 ?  \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes","Url":"https://github.com/angular/angular/pull/48531","RelatedDescription":"Open PR \"fix(forms): remove deprecated support for ngModel on reactive form directives\" (#48531)"},{"Id":"1501935133","IsPullRequest":true,"CreatedAt":"2022-12-18T15:03:16","Actor":"angular-robot","Number":"48530","RawContent":null,"Title":"build: update dependency @rollup/plugin-commonjs to v24","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | peerDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.7/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | dependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.0/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | devDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.0/24.0.0) |\n| [@rollup/plugin-commonjs](https://togithub.com/rollup/plugins/tree/master/packages/commonjs/#readme) ([source](https://togithub.com/rollup/plugins)) | devDependencies | major | [`^23.0.0` -> `^24.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-commonjs/23.0.7/24.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/plugins</summary>\n\n### [`v24.0.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/commonjs/CHANGELOG.md#v2400)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/62d68273ac2a28e09117c78deef925d424e6fef7...c4c26a55f07a434d6d9c276709526d18bf736c72)\n\n*2022-12-18*\n\n##### Breaking Changes\n\n-   fix: check if defaultIsModuleExports is auto for getDefaultExportFromCjs [#&#8203;1358](https://togithub.com/rollup/plugins/pull/1358)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48530","RelatedDescription":"Open PR \"build: update dependency @rollup/plugin-commonjs to v24\" (#48530)"},{"Id":"1501933854","IsPullRequest":true,"CreatedAt":"2022-12-18T15:00:30","Actor":"Berbe","Number":"48529","RawContent":null,"Title":"fix(http): Set Accept based on responseType","State":"open","Body":"Fix how the Accept HTTP header is handled.\r\nSet the Accept header based on the response\r\nType field to ensure HTTP response consistency per RFC\r\nJSON -> `application/json`\r\nText -> `text/plain`\r\nOther -> `*/*`\r\n\r\nFixes #48505\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #48505\r\n\r\n\r\n## What is the new behavior?\r\nSet `Accept` HTTP header based on `responseType`\r\n\r\n## Does this PR introduce a breaking change?\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48529","RelatedDescription":"Open PR \"fix(http): Set Accept based on responseType\" (#48529)"},{"Id":"1501620351","IsPullRequest":true,"CreatedAt":"2022-12-17T22:20:47","Actor":"JeanMeche","Number":"48527","RawContent":null,"Title":"refactor(common): remove unnecessary parseFloat from ng_optimized_ima…","State":"open","Body":"refactor(common): remove unnecessary parseFloat from ng_optimized_image directive.\r\n\r\nThere is no need to parse clientWidth/clientHeight/naturalWidth/naturalHeight on HTMLImageElement as there is no sign of other types being returned on everygreen browers.\r\n\r\nThis was already suggested on PR #48036. \r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48527","RelatedDescription":"Open PR \"refactor(common): remove unnecessary parseFloat from ng_optimized_ima…\" (#48527)"},{"Id":"1501441216","IsPullRequest":true,"CreatedAt":"2022-12-17T15:20:29","Actor":"JeanMeche","Number":"48526","RawContent":null,"Title":"fix(forms): Form provider FormsModule.withConfig return a FormsModule","State":"open","Body":"Because of a transitive dependency, FormsModule.withConfig wasn't providing FormModule.\r\n\r\nfixes: #48519\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/48526","RelatedDescription":"Open PR \"fix(forms): Form provider FormsModule.withConfig return a FormsModule\" (#48526)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1505464642","IsPullRequest":true,"CreatedAt":"2022-12-20T23:38:11","Actor":"clydin","Number":"24460","RawContent":null,"Title":"feat(@angular-devkit/build-angular): implement stats-json option for esbuild builder","State":"open","Body":"When using the experimental esbuild-based browser application builder, the `--stats-json` option can now be used to create an esbuild metafile named `stats.json` in the output directory of the application. The metafile contents will contain information about the application JavaScript, global stylesheets, and the component stylesheets used by the Angular compiler. While the `--stats-json` option controls the output of the file onto the filesystem, the metafile data is internally always created to support the future integration of the bundle budget and console build stat output capabilities.\r\nThe metafile format follows the structure of the esbuild metafile format. Information regarding the file format can be found here: https://esbuild.github.io/api/#metafile","Url":"https://github.com/angular/angular-cli/pull/24460","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): implement stats-json option for esbuild builder\" (#24460)"},{"Id":"1504303509","IsPullRequest":true,"CreatedAt":"2022-12-20T10:08:59","Actor":"alan-agius4","Number":"24459","RawContent":null,"Title":"refactor(@schematics/angular): remove unused local variables","State":"open","Body":"`messages` is unused from the spec and thus can be removed.\r\n","Url":"https://github.com/angular/angular-cli/pull/24459","RelatedDescription":"Open PR \"refactor(@schematics/angular): remove unused local variables\" (#24459)"},{"Id":"1504295632","IsPullRequest":true,"CreatedAt":"2022-12-20T10:04:11","Actor":"alan-agius4","Number":"24458","RawContent":null,"Title":"feat(@schematics/angular): add configuration files generation schematic","State":"open","Body":"This commits add a schematic to generate Karma and Browserlist files which since version 15 are no longer generated by default. This schematic should be used to generate these files when further customisation is needed.\r\n\r\nUsage\r\n```\r\nng generate config --type karma\r\nng generate config --type browserlist\r\n```\r\n\r\nCloses #24294\r\n ","Url":"https://github.com/angular/angular-cli/pull/24458","RelatedDescription":"Open PR \"feat(@schematics/angular): add configuration files generation schematic\" (#24458)"},{"Id":"1504034777","IsPullRequest":true,"CreatedAt":"2022-12-20T06:06:42","Actor":"angular-robot","Number":"24456","RawContent":null,"Title":"build: update ossf/scorecard-action action to v2.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | patch | `v2.1.0` -> `v2.1.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ossf/scorecard-action</summary>\n\n### [`v2.1.1`](https://togithub.com/ossf/scorecard-action/releases/tag/v2.1.1)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.1.0...v2.1.1)\n\n#### Scorecard version\n\nThis release use [Scorecard's v4.10.1](https://togithub.com/ossf/scorecard/releases/tag/v4.10.1)\n\n**Full Changelog**: https://github.com/ossf/scorecard-action/compare/v2.1.0...v2.1.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24456","RelatedDescription":"Open PR \"build: update ossf/scorecard-action action to v2.1.1\" (#24456)"},{"Id":"1504172036","IsPullRequest":false,"CreatedAt":"2022-12-19T15:33:59","Actor":"maxime1992","Number":"24457","RawContent":null,"Title":"ERROR: Expected identifier but found \"=\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nBuilding an app in prod mode, I get the following error:\r\n\r\n```\r\nError: Optimization error [main.b856787215841021.js]: Error: Transform failed with 1 error:\r\nmain.b856787215841021.js:22080:5: ERROR: Expected identifier but found \"=\"\r\n```\r\n\r\nIf I build the app without prod mode, it compiles just fine.\r\n\r\nIf I take a look into the generated source code from the non prod command at the line where the build prod command fails (as the build prod one doesn't give any file in dist because of the failure), I end up on this code:\r\n\r\n```\r\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  padding: 24px 0;\\n  margin: 24px 0;\\n}\\n\\n.filename-icon[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n}\\n\\n.filename-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-left: 32px;\\n}\\n\\n.selected-file[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  font-weight: 700;\\n}\\n\\npdf-viewer[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n\\n.pdf-viewer-container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\r\n```\r\n\r\nand for more context around that line:\r\n\r\n```\r\nclass DocumentViewerComponent {\r\n  static {\r\n    this.ɵfac = function DocumentViewerComponent_Factory(t) {\r\n      return new (t || DocumentViewerComponent)();\r\n    };\r\n  }\r\n  static {\r\n    this.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵdefineComponent\"]({\r\n      type: DocumentViewerComponent,\r\n      selectors: [[\"cnc-document-viewer\"]],\r\n      inputs: {\r\n        selectedDocument: \"selectedDocument\"\r\n      },\r\n      decls: 3,\r\n      vars: 2,\r\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultView\", \"\"], [1, \"filename-title\"], [\"svgIcon\", \"cnc:file\", 1, \"filename-icon\"], [\"mat-stroked-button\", \"\", \"color\", \"accent\", 3, \"cncDownload\", \"filename\"], [\"svgIcon\", \"cnc:download-cloud\"], [4, \"cncNgLet\"], [\"class\", \"pdf-viewer-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"pdf-viewer-container\"], [\"theme\", \"dark\", \"useBrowserLocale\", \"true\", \"height\", \"80vh\", 3, \"src\", \"textLayer\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [\"theme\", \"dark\", \"useBrowserLocale\", \"true\", \"height\", \"80vh\", 3, \"src\", \"textLayer\"], [\"status\", \"Loading PDF...\"], [3, \"src\", 4, \"ngIf\"], [3, \"src\"], [\"type\", \"info\"]],\r\n      template: function DocumentViewerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplate\"](0, DocumentViewerComponent_ng_container_0_Template, 11, 16, \"ng-container\", 0);\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplate\"](1, DocumentViewerComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵtemplateRefExtractor\"]);\r\n        }\r\n        if (rf & 2) {\r\n          const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵreference\"](2);\r\n          _angular_core__WEBPACK_IMPORTED_MODULE_7__[\"ɵɵproperty\"](\"ngIf\", ctx.selectedDocument)(\"ngIfElse\", _r1);\r\n        }\r\n      },\r\n      dependencies: [_angular_material_icon__WEBPACK_IMPORTED_MODULE_8__.MatIcon, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _angular_material_legacy_button__WEBPACK_IMPORTED_MODULE_10__.MatLegacyButton, _ui_loader_loader_component__WEBPACK_IMPORTED_MODULE_0__.CuiLoaderComponent, _ui_message_message_component__WEBPACK_IMPORTED_MODULE_1__.CuiMessageComponent, _core_browser_files_file_download_directive__WEBPACK_IMPORTED_MODULE_2__.FileDownloadDirective, ngx_extended_pdf_viewer__WEBPACK_IMPORTED_MODULE_11__.NgxExtendedPdfViewerComponent, _core_browser_directives_ng_let_directive__WEBPACK_IMPORTED_MODULE_3__.NgLetDirective, _default_view_default_view_component__WEBPACK_IMPORTED_MODULE_4__.DefaultViewComponent, _ngrx_component__WEBPACK_IMPORTED_MODULE_12__.PushPipe, _core_browser_pipes_is_file_type_pipe__WEBPACK_IMPORTED_MODULE_5__.IsFileTypePipe, _get_document_link_pipe__WEBPACK_IMPORTED_MODULE_6__.GetDocumentLinkPipe],\r\n      styles: [...], // same as already pasted above, I'm saving some space to avoid cluttering\r\n      changeDetection: 0\r\n    });\r\n  }\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nNone I'm afraid\n\n### Please provide the exception or error you saw\n\n```true\nError: Optimization error [main.b856787215841021.js]: Error: Transform failed with 1 error:\r\nmain.b856787215841021.js:22080:5: ERROR: Expected identifier but found \"=\"\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.4\r\nNode: 16.14.2\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/material               15.0.3\r\n@schematics/angular             15.0.4\r\nng-packagr                      15.0.3\r\nrxjs                            7.6.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\nIt used to work just fine but seem to be broken after ng 15 upgrade","Url":"https://github.com/angular/angular-cli/issues/24457","RelatedDescription":"Open issue \"ERROR: Expected identifier but found \"=\"\" (#24457)"},{"Id":"1502886259","IsPullRequest":true,"CreatedAt":"2022-12-19T12:42:08","Actor":"alan-agius4","Number":"24455","RawContent":null,"Title":"docs: remove default project from schematic description","State":"open","Body":"The default project is deprecated.\r\n","Url":"https://github.com/angular/angular-cli/pull/24455","RelatedDescription":"Open PR \"docs: remove default project from schematic description\" (#24455)"},{"Id":"1502539038","IsPullRequest":false,"CreatedAt":"2022-12-19T08:42:32","Actor":"erqk","Number":"24454","RawContent":null,"Title":"Styles import order in angular.json","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI would like to make styles import in angular.json follow the order they are listed. My styles.scss is loaded before any other third party styles, although it was last item in the array .This is important for me because I need to override the styles of third party package. \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/64851043/208383172-0c2a0ab4-f692-4d4c-810d-6ccf8aada131.png)\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.0.4        \r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/flex-layout            14.0.0-beta.41\r\n@schematics/angular             15.0.4\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24454","RelatedDescription":"Open issue \"Styles import order in angular.json\" (#24454)"},{"Id":"1502486713","IsPullRequest":true,"CreatedAt":"2022-12-19T08:06:29","Actor":"angular-robot","Number":"24453","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24453","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24453)"},{"Id":"1501519988","IsPullRequest":false,"CreatedAt":"2022-12-18T08:06:15","Actor":"gitHubUser151","Number":"24452","RawContent":null,"Title":"Angular CLI is not installing","State":"closed","Body":"### Command\r\n\r\nversion\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nCLI is not installing. Gives following output.\r\nCould you please take a look?\r\n\r\nC:\\WINDOWS\\system32>npm install -g @angular/cli\r\nnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fs\r\nnpm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead\r\n\r\nchanged 232 packages, and audited 233 packages in 23s\r\n\r\n26 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 0 vulnerabilities\r\n\r\nC:\\WINDOWS\\system32>ng help\r\n'ng' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\nC:\\WINDOWS\\system32>node -v\r\nv18.12.1\r\n\r\n### Minimal Reproduction\r\n\r\nnpm install -g @angular/cli\r\n\r\n### Exception or Error\r\n\r\nnpm WARN deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fs\r\nnpm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead\r\n\r\n### Your Environment\r\n\r\n```text\r\nMicrosoft Windows [Version 10.0.19045.2364]\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24452","RelatedDescription":"Closed issue \"Angular CLI is not installing\" (#24452)"},{"Id":"1501375743","IsPullRequest":false,"CreatedAt":"2022-12-17T16:12:08","Actor":"JemiloII","Number":"24451","RawContent":null,"Title":"Angular CLI Not working with Typescript 4.9.4","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCan we stop omitting minor versions? These are supposed to be bug fixes.\r\n\r\nTypescript 4.9.4 is out, but cli doesn't want to work unless I downgrade to 4.9.0\r\n\r\nFix this to include all minor versions.\n\n### Minimal Reproduction\n\nJust install typescript 4.9.4\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nIssues will happen on any OS\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24451","RelatedDescription":"Closed issue \"Angular CLI Not working with Typescript 4.9.4\" (#24451)"},{"Id":"1501278469","IsPullRequest":true,"CreatedAt":"2022-12-17T08:44:12","Actor":"crisbeto","Number":"24450","RawContent":null,"Title":"refactor(@ngtools/webpack): remove TypeScript 4.7 compatibility code","State":"open","Body":"Support for TypeScript 4.7 was dropped in Angular version 15. These changes remove some code that was used for backwards compatibility.","Url":"https://github.com/angular/angular-cli/pull/24450","RelatedDescription":"Open PR \"refactor(@ngtools/webpack): remove TypeScript 4.7 compatibility code\" (#24450)"},{"Id":"1500393158","IsPullRequest":true,"CreatedAt":"2022-12-17T06:45:34","Actor":"aanchal88","Number":"24447","RawContent":null,"Title":"test: removed empty methods","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24447","RelatedDescription":"Closed or merged PR \"test: removed empty methods\" (#24447)"},{"Id":"1501221375","IsPullRequest":true,"CreatedAt":"2022-12-17T06:44:50","Actor":"aanchal88","Number":"24449","RawContent":null,"Title":"test: removed empty methods","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24449","RelatedDescription":"Open PR \"test: removed empty methods\" (#24449)"},{"Id":"1500594133","IsPullRequest":false,"CreatedAt":"2022-12-16T19:08:24","Actor":"pain0486","Number":"24448","RawContent":null,"Title":"Branch coverage is broken after upgrading to angular 14","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n^13.3.11\n\n### Description\n\nAfter upgrading to angular 14 all tests pass, however the branch coverage reporting is reporting weird coverage issues around constructors similar to issues I have found when users were upgrading to angular 4 found [here](https://github.com/angular/angular-cli/issues/5526#issuecomment-324429322)\r\n\r\nhere are some examples\r\n![MicrosoftTeams-image (1)](https://user-images.githubusercontent.com/11378706/208153697-c152b913-70ce-4ab7-b043-c355ba7934ef.png)\r\n![MicrosoftTeams-image (2)](https://user-images.githubusercontent.com/11378706/208153702-871fc7ca-16ab-4c95-ac65-c6cb6afc912d.png)\r\n![MicrosoftTeams-image](https://user-images.githubusercontent.com/11378706/208153706-74a1d679-a116-4f5d-96f2-2f7334c1c229.png)\r\n\n\n### Minimal Reproduction\n\nng test --browsers=ChromeHeadless --no-watch --progress=false\r\nresults in 87.47% coverage where it was 100% before doing the upgrade\r\n=============================== Coverage summary ===============================\r\nStatements   : 100% ( 831/831 )\r\nBranches     : 87.47% ( 433/495 )\r\nFunctions    : 100% ( 228/228 )\r\nLines        : 100% ( 812/812 )\n\n### Exception or Error\n\n```text\nNo errors\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 14.2.10\r\nNode: 18.12.1 (Unsupported)\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    14.2.7\r\n@angular/cli                    14.2.10\r\n@angular/flex-layout            14.0.0-beta.41\r\n@angular/material               14.2.7\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24448","RelatedDescription":"Closed issue \"Branch coverage is broken after upgrading to angular 14\" (#24448)"},{"Id":"1500290664","IsPullRequest":true,"CreatedAt":"2022-12-16T16:25:45","Actor":"aanchal88","Number":"24446","RawContent":null,"Title":"Update: removed unused code","State":"closed","Body":"## PR Checklist\n\nPlease check to confirm your PR fulfills the following requirements:\n\n<!-- Please check all that apply using \"x\". -->\n\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n## PR Type\n\nWhat kind of change does this PR introduce?\n\n<!-- Please check the one that applies to this PR using \"x\". -->\n\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, local variables)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] CI related changes\n- [ ] Documentation content changes\n- [ ] Other... Please describe:\n\n## What is the current behavior?\n\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\n\nIssue Number: N/A\n\n## What is the new behavior?\n\n<!-- Please describe the new behavior that. -->\n\n## Does this PR introduce a breaking change?\n\n- [ ] Yes\n- [ ] No\n\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\n\n## Other information\n","Url":"https://github.com/angular/angular-cli/pull/24446","RelatedDescription":"Closed or merged PR \"Update: removed unused code\" (#24446)"},{"Id":"1499654115","IsPullRequest":true,"CreatedAt":"2022-12-16T06:05:33","Actor":"angular-robot","Number":"24445","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.46.1/5.47.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.46.1` -> `5.47.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.46.1/5.47.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild/0.16.7/0.16.10) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild/0.16.7/0.16.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.7/0.16.10) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.7` -> `0.16.10`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.7/0.16.10) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.29.0` -> `8.30.0`](https://renovatebot.com/diffs/npm/eslint/8.29.0/8.30.0) |\n| [minimatch](https://togithub.com/isaacs/minimatch) | devDependencies | patch | [`5.1.1` -> `5.1.2`](https://renovatebot.com/diffs/npm/minimatch/5.1.1/5.1.2) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.6.0` -> `~7.8.0`](https://renovatebot.com/diffs/npm/rxjs/7.6.0/7.8.0) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.56.2` -> `1.57.1`](https://renovatebot.com/diffs/npm/sass/1.56.2/1.57.1) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.56.2` -> `1.57.1`](https://renovatebot.com/diffs/npm/sass/1.56.2/1.57.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[no-floating-promises] add suggestion fixer to add an 'await' ([#&#8203;5943](https://togithub.com/typescript-eslint/typescript-eslint/issues/5943)) ([9e35ef9](https://togithub.com/typescript-eslint/typescript-eslint/commit/9e35ef9af3ec51ab2dd49336699f3a94528bb4b1))\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.47.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5470-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5461v5470-2022-12-19)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.1...v5.47.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n#### [5.46.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.46.0...v5.46.1) (2022-12-12)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.10`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01610)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.9...v0.16.10)\n\n-   Change the default \"legal comment\" behavior again ([#&#8203;2745](https://togithub.com/evanw/esbuild/issues/2745))\n\n    The legal comments feature automatically gathers comments containing `@license` or `@preserve` and puts the comments somewhere (either in the generated code or in a separate file). This behavior used to be on by default but was disabled by default in version 0.16.0 because automatically inserting comments is potentially confusing and misleading. These comments can appear to be assigning the copyright of your code to another entity. And this behavior can be especially problematic if it happens automatically by default since you may not even be aware of it happening. For example, if you bundle the TypeScript compiler the preserving legal comments means your source code would contain this comment, which appears to be assigning the copyright of all of your code to Microsoft:\n\n    ```js\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */\n    ```\n\n    However, people have asked for this feature to be re-enabled by default. To resolve the confusion about what these comments are applying to, esbuild's default behavior will now be to attempt to describe which package the comments are coming from. So while this feature has been re-enabled by default, the output will now look something like this instead:\n\n    ```js\n    /*! Bundled license information:\n\n    typescript/lib/typescript.js:\n      (*! *****************************************************************************\n      Copyright (c) Microsoft Corporation. All rights reserved.\n      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n      this file except in compliance with the License. You may obtain a copy of the\n      License at http://www.apache.org/licenses/LICENSE-2.0\n\n      THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n      KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n      WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n      MERCHANTABLITY OR NON-INFRINGEMENT.\n\n      See the Apache Version 2.0 License for specific language governing permissions\n      and limitations under the License.\n      ***************************************************************************** *)\n    */\n    ```\n\n    Note that you can still customize this behavior with the `--legal-comments=` flag. For example, you can use `--legal-comments=none` to turn this off, or you can use `--legal-comments=linked` to put these comments in a separate `.LEGAL.txt` file instead.\n\n-   Enable `external` legal comments with the transform API ([#&#8203;2390](https://togithub.com/evanw/esbuild/issues/2390))\n\n    Previously esbuild's transform API only supported `none`, `inline`, or `eof` legal comments. With this release, `external` legal comments are now also supported with the transform API. This only applies to the JS and Go APIs, not to the CLI, and looks like this:\n\n    -   JS:\n\n        ```js\n        const { code, legalComments } = await esbuild.transform(input, {\n          legalComments: 'external',\n        })\n        ```\n\n    -   Go:\n\n        ```go\n        result := api.Transform(input, api.TransformOptions{\n          LegalComments: api.LegalCommentsEndOfFile,\n        })\n        code := result.Code\n        legalComments := result.LegalComments\n        ```\n\n-   Fix duplicate function declaration edge cases ([#&#8203;2757](https://togithub.com/evanw/esbuild/issues/2757))\n\n    The change in the previous release to forbid duplicate function declarations in certain cases accidentally forbid some edge cases that should have been allowed. Specifically duplicate function declarations are forbidden in nested blocks in strict mode and at the top level of modules, but are allowed when they are declared at the top level of function bodies. This release fixes the regression by re-allowing the last case.\n\n-   Allow package subpaths with `alias` ([#&#8203;2715](https://togithub.com/evanw/esbuild/issues/2715))\n\n    Previously the names passed to the `alias` feature had to be the name of a package (with or without a package scope). With this release, you can now also use the `alias` feature with package subpaths. So for example you can now create an alias that substitutes `@org/pkg/lib` with something else.\n\n### [`v0.16.9`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0169)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.8...v0.16.9)\n\n-   Update to Unicode 15.0.0\n\n    The character tables that determine which characters form valid JavaScript identifiers have been updated from Unicode version 14.0.0 to the newly-released Unicode version 15.0.0. I'm not putting an example in the release notes because all of the new characters will likely just show up as little squares since fonts haven't been updated yet. But you can read https://www.unicode.org/versions/Unicode15.0.0/#Summary for more information about the changes.\n\n-   Disallow duplicate lexically-declared names in nested blocks and in strict mode\n\n    In strict mode or in a nested block, it's supposed to be a syntax error to declare two symbols with the same name unless all duplicate entries are either `function` declarations or all `var` declarations. However, esbuild was overly permissive and allowed this when duplicate entries were either `function` declarations or `var` declarations (even if they were mixed). This check has now been made more restrictive to match the JavaScript specification:\n\n    ```js\n    // JavaScript allows this\n    var a\n    function a() {}\n    {\n      var b\n      var b\n      function c() {}\n      function c() {}\n    }\n\n    // JavaScript doesn't allow this\n    {\n      var d\n      function d() {}\n    }\n    ```\n\n-   Add a type declaration for the new `empty` loader ([#&#8203;2755](https://togithub.com/evanw/esbuild/pull/2755))\n\n    I forgot to add this in the previous release. It has now been added.\n\n    This fix was contributed by [@&#8203;fz6m](https://togithub.com/fz6m).\n\n-   Add support for the `v` flag in regular expression literals\n\n    People are currently working on adding a `v` flag to JavaScript regular expresions. You can read more about this flag here: https://v8.dev/features/regexp-v-flag. This release adds support for parsing this flag, so esbuild will now no longer consider regular expression literals with this flag to be a syntax error. If the target is set to something other than `esnext`, esbuild will transform regular expression literals containing this flag into a `new RegExp()` constructor call so the resulting code doesn't have a syntax error. This enables you to provide a polyfill for `RegExp` that implements the `v` flag to get your code to work at run-time. While esbuild doesn't typically adopt proposals until they're already shipping in a real JavaScript run-time, I'm adding it now because a) esbuild's implementation doesn't need to change as the proposal evolves, b) this isn't really new syntax since regular expression literals already have flags, and c) esbuild's implementation is a trivial pass-through anyway.\n\n-   Avoid keeping the name of classes with static `name` properties\n\n    The `--keep-names` property attempts to preserve the original value of the `name` property for functions and classes even when identifiers are renamed by the minifier or to avoid a name collision. This is currently done by generating code to assign a string to the `name` property on the function or class object. However, this should not be done for classes with a static `name` property since in that case the explicitly-defined `name` property overwrites the automatically-generated class name. With this release, esbuild will now no longer attempt to preserve the `name` property for classes with a static `name` property.\n\n### [`v0.16.8`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0168)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.7...v0.16.8)\n\n-   Allow plugins to resolve injected files ([#&#8203;2754](https://togithub.com/evanw/esbuild/issues/2754))\n\n    Previously paths passed to the `inject` feature were always interpreted as file system paths. This meant that `onResolve` plugins would not be run for them and esbuild's default path resolver would always be used. This meant that the `inject` feature couldn't be used in the browser since the browser doesn't have access to a file system. This release runs paths passed to `inject` through esbuild's full path resolution pipeline so plugins now have a chance to handle them using `onResolve` callbacks. This makes it possible to write a plugin that makes esbuild's `inject` work in the browser.\n\n-   Add the `empty` loader ([#&#8203;1541](https://togithub.com/evanw/esbuild/issues/1541), [#&#8203;2753](https://togithub.com/evanw/esbuild/issues/2753))\n\n    The new `empty` loader tells esbuild to pretend that a file is empty. So for example `--loader:.css=empty` effectively skips all imports of `.css` files in JavaScript so that they aren't included in the bundle, since `import \"./some-empty-file\"` in JavaScript doesn't bundle anything. You can also use the `empty` loader to remove asset references in CSS files. For example `--loader:.png=empty` causes esbuild to replace asset references such as `url(image.png)` with `url()` so that they are no longer included in the resulting style sheet.\n\n-   Fix `</script>` and `</style>` escaping for non-default targets ([#&#8203;2748](https://togithub.com/evanw/esbuild/issues/2748))\n\n    The change in version 0.16.0 to give control over `</script>` escaping via `--supported:inline-script=false` or `--supported:inline-script=true` accidentally broke automatic escaping of `</script>` when an explicit `target` setting is specified. This release restores the correct automatic escaping of `</script>` (which should not depend on what `target` is set to).\n\n-   Enable the `exports` field with `NODE_PATHS` ([#&#8203;2752](https://togithub.com/evanw/esbuild/issues/2752))\n\n    Node has a rarely-used feature where you can extend the set of directories that node searches for packages using the `NODE_PATHS` environment variable. While esbuild supports this too, previously it only supported the old `main` field path resolution but did not support the new `exports` field package resolution. This release makes the path resolution rules the same again for both `node_modules` directories and `NODE_PATHS` directories.\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.30.0`](https://togithub.com/eslint/eslint/releases/tag/v8.30.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.29.0...v8.30.0)\n\n#### Features\n\n-   [`075ef2c`](https://togithub.com/eslint/eslint/commit/075ef2cf315e75b51b671c40ce9a97c66b2e4b50) feat: add suggestion for no-return-await ([#&#8203;16637](https://togithub.com/eslint/eslint/issues/16637)) (Daniel Bartholomae)\n-   [`7190d98`](https://togithub.com/eslint/eslint/commit/7190d98ff40023f24b0c6a98319ae8a82c99ff5b) feat: update globals ([#&#8203;16654](https://togithub.com/eslint/eslint/issues/16654)) (Sébastien Règne)\n\n#### Bug Fixes\n\n-   [`1a327aa`](https://togithub.com/eslint/eslint/commit/1a327aae57f1b68c96b27cc1bd57f8198d5a3a7c) fix: Ensure flat config unignores work consistently like eslintrc ([#&#8203;16579](https://togithub.com/eslint/eslint/issues/16579)) (Nicholas C. Zakas)\n-   [`9b8bb72`](https://togithub.com/eslint/eslint/commit/9b8bb72c49a453086954b06a5d7dd390731b1975) fix: autofix recursive functions in no-var ([#&#8203;16611](https://togithub.com/eslint/eslint/issues/16611)) (Milos Djermanovic)\n\n#### Documentation\n\n-   [`6a8cd94`](https://togithub.com/eslint/eslint/commit/6a8cd94ed08983c70ca7d72dc6e360770a743405) docs: Clarify Discord info in issue template config ([#&#8203;16663](https://togithub.com/eslint/eslint/issues/16663)) (Nicholas C. Zakas)\n-   [`ad44344`](https://togithub.com/eslint/eslint/commit/ad44344ef6fdeac7217eb83bc54a230382c0da5e) docs: CLI documentation standardization ([#&#8203;16563](https://togithub.com/eslint/eslint/issues/16563)) (Ben Perlmutter)\n-   [`293573e`](https://togithub.com/eslint/eslint/commit/293573eb530d161d2a5b01efd9d3de49dadea022) docs: fix broken line numbers ([#&#8203;16606](https://togithub.com/eslint/eslint/issues/16606)) (Sam Chen)\n-   [`fa2c64b`](https://togithub.com/eslint/eslint/commit/fa2c64be10d5854fb586c20957737d7d2da1975a) docs: use relative links for internal links ([#&#8203;16631](https://togithub.com/eslint/eslint/issues/16631)) (Percy Ma)\n-   [`75276c9`](https://togithub.com/eslint/eslint/commit/75276c9bc7c4bc013fc6bdf277353c979934d73b) docs: reorder options in no-unused-vars ([#&#8203;16625](https://togithub.com/eslint/eslint/issues/16625)) (Milos Djermanovic)\n-   [`7276fe5`](https://togithub.com/eslint/eslint/commit/7276fe5776f03fb90e575ed63a9b1a6766993e42) docs: Fix anchor in URL ([#&#8203;16628](https://togithub.com/eslint/eslint/issues/16628)) (Karl Horky)\n-   [`6bef135`](https://togithub.com/eslint/eslint/commit/6bef1350e692c818c55c6d2074c12506e98cdf4f) docs: don't apply layouts to html formatter example ([#&#8203;16591](https://togithub.com/eslint/eslint/issues/16591)) (Tanuj Kanti)\n-   [`dfc7ec1`](https://togithub.com/eslint/eslint/commit/dfc7ec11b11b56daaa10e8e6d08c5cddfc8c2c59) docs: Formatters page updates ([#&#8203;16566](https://togithub.com/eslint/eslint/issues/16566)) (Ben Perlmutter)\n-   [`8ba124c`](https://togithub.com/eslint/eslint/commit/8ba124cfd8aaf01d14ccbcb1654798624948fb0a) docs: update the `prefer-const` example ([#&#8203;16607](https://togithub.com/eslint/eslint/issues/16607)) (Pavel)\n-   [`e6cb05a`](https://togithub.com/eslint/eslint/commit/e6cb05aa35bafb9e88f161ad1fa6b01942a7c13c) docs: fix css leaking ([#&#8203;16603](https://togithub.com/eslint/eslint/issues/16603)) (Sam Chen)\n\n#### Chores\n\n-   [`f2c4737`](https://togithub.com/eslint/eslint/commit/f2c47372420f050ad8f2300271345de1c1232635) chore: upgrade [@&#8203;eslint/eslintrc](https://togithub.com/eslint/eslintrc)[@&#8203;1](https://togithub.com/1).4.0 ([#&#8203;16675](https://togithub.com/eslint/eslint/issues/16675)) (Milos Djermanovic)\n-   [`ba74253`](https://togithub.com/eslint/eslint/commit/ba74253e8bd63e9e163bbee0540031be77e39253) chore: standardize npm script names per [#&#8203;14827](https://togithub.com/eslint/eslint/issues/14827) ([#&#8203;16315](https://togithub.com/eslint/eslint/issues/16315)) (Patrick McElhaney)\n-   [`0d9af4c`](https://togithub.com/eslint/eslint/commit/0d9af4c5674809be993439c766dcd9d7f65fcec9) ci: fix npm v9 problem with `file:` ([#&#8203;16664](https://togithub.com/eslint/eslint/issues/16664)) (Milos Djermanovic)\n-   [`90c9219`](https://togithub.com/eslint/eslint/commit/90c9219181e0aadcae7224602d2988186d457113) refactor: migrate off deprecated function-style rules in all tests ([#&#8203;16618](https://togithub.com/eslint/eslint/issues/16618)) (Bryan Mishkin)\n\n</details>\n\n<details>\n<summary>isaacs/minimatch</summary>\n\n### [`v5.1.2`](https://togithub.com/isaacs/minimatch/compare/v5.1.1...v5.1.2)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v5.1.1...v5.1.2)\n\n</details>\n\n<details>\n<summary>reactivex/rxjs</summary>\n\n### [`v7.8.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;780-httpsgithubcomreactivexrxjscompare770780-2022-12-15)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.7.0...7.8.0)\n\n##### Features\n\n-   **buffer:** `closingNotifier` now supports any `ObservableInput` ([#&#8203;7073](https://togithub.com/reactivex/rxjs/issues/7073)) ([61b877a](https://togithub.com/reactivex/rxjs/commit/61b877a50c2557196a45e12622305c5a84fc3f0a))\n-   **delayWhen:** `delayWhen`'s `delayDurationSelector` now supports any `ObservableInput` ([#&#8203;7049](https://togithub.com/reactivex/rxjs/issues/7049)) ([dfd95db](https://togithub.com/reactivex/rxjs/commit/dfd95db952a6772d35d11bdd1974f2c4b4d68b25))\n-   **sequenceEqual:** `compareTo` now supports any `ObservableInput` ([#&#8203;7102](https://togithub.com/reactivex/rxjs/issues/7102)) ([d501961](https://togithub.com/reactivex/rxjs/commit/d50196187710c7a0cad50703b2071fc3f2cabd3c))\n-   **share:** `ShareConfig` factory properties now supports any `ObservableInput` ([#&#8203;7093](https://togithub.com/reactivex/rxjs/issues/7093)) ([cc3995a](https://togithub.com/reactivex/rxjs/commit/cc3995a6f6baf9456ec11f749fe89bf61b9e2d62))\n-   **skipUntil:** `notifier` now supports any `ObservableInput` ([#&#8203;7091](https://togithub.com/reactivex/rxjs/issues/7091)) ([60d6c40](https://togithub.com/reactivex/rxjs/commit/60d6c40fb484903286feca2bbfa9fcb2cde720e2))\n-   **window:** `windowBoundaries` now supports any `ObservableInput` ([#&#8203;7088](https://togithub.com/reactivex/rxjs/issues/7088)) ([8c4347c](https://togithub.com/reactivex/rxjs/commit/8c4347c48f2432d7399c911d329fa74e0d6c6e8d))\n\n### [`v7.7.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;770-httpsgithubcomreactivexrxjscompare760770-2022-12-15)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.6.0...7.7.0)\n\n##### Features\n\n-   **distinct:** `flush` argument now supports any `ObservableInput` ([#&#8203;7081](https://togithub.com/reactivex/rxjs/issues/7081)) ([74c9ebd](https://togithub.com/reactivex/rxjs/commit/74c9ebd818113f9f25f1fb2b9fee4a0eac121ae0))\n-   **repeatWhen:** `notifier` supports `ObservableInput` ([#&#8203;7103](https://togithub.com/reactivex/rxjs/issues/7103)) ([8f1b976](https://togithub.com/reactivex/rxjs/commit/8f1b976125c55a5e884317c2b463fd019662e6af))\n-   **retryWhen:** `notifier` now supports any `ObservableInput` ([#&#8203;7105](https://togithub.com/reactivex/rxjs/issues/7105)) ([794f806](https://togithub.com/reactivex/rxjs/commit/794f8064cf8fe754e9dfebeee0ffef0ac1562252))\n-   **sample:** `notifier` now supports any `ObservableInput` ([#&#8203;7104](https://togithub.com/reactivex/rxjs/issues/7104)) ([b18c2eb](https://togithub.com/reactivex/rxjs/commit/b18c2eb2bc8dc1a717c927f998028316eec83937))\n\n</details>\n\n<details>\n<summary>sass/dart-sass</summary>\n\n### [`v1.57.1`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1571)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.57.0...1.57.1)\n\n-   No user-visible changes.\n\n### [`v1.57.0`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#&#8203;1570)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.56.2...1.57.0)\n\n-   Add a `split($string, $separator, $limit: null)` function to `sass:string`\n    that splits a string into separate substrings based on a separator string.\n\n##### JavaScript API\n\n-   **Potentially breaking bug fix**: Custom functions in both the modern and\n    legacy API now properly reject signatures with whitespace between the function\n    name and parentheses.\n\n-   Custom functions in the legacy API now allow signatures with whitespace before\n    the function name, to match a bug in Node Sass.\n\n##### Dart API\n\n-   **Potentially breaking bug fix**: `Callable.fromSignature()` and\n    `AsyncCallable.fromSignature()` now reject signatures with whitespace between\n    the function name and parentheses.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24445","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24445)"},{"Id":"1499654050","IsPullRequest":true,"CreatedAt":"2022-12-16T06:05:30","Actor":"angular-robot","Number":"24444","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `35fe1b5` -> `113b90a` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `98ed19a` -> `2a3df55` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `dd23bf3` -> `9e2d10f` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b8aaaf1` -> `6259d08` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `94d45cf` -> `e0703e4` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `93b2b5d` -> `6b06980` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `bffeded` -> `40c3f35` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `06c33a1` -> `861b921` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a9ba5a1` -> `a2688ec` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `42a3b99` -> `59d8937` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `1091550` -> `409bace` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `cdc144b` -> `9268a1c` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `129bcb4` -> `7191b8c` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `5dd1ec0` -> `c36c3ad` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `0c4a26b` -> `06de847` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `d2c586a` -> `11ee53a` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `64d3fc8` -> `1a0c59c` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `bd6a3d2` -> `04c956e` |\n| angular/dev-infra | action | digest | `4d9ea67` -> `d280147` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24444","RelatedDescription":"Open PR \"build: update angular\" (#24444)"},{"Id":"1499125668","IsPullRequest":true,"CreatedAt":"2022-12-15T21:48:09","Actor":"clydin","Number":"24443","RawContent":null,"Title":"refactor(@angular-devkit/architect): use promise-based result property where possible","State":"closed","Body":"This change adds a promise-based result property to the Job object which functions in a similar way to the BuilderRun object's result property. This allows for many of the Observable toPromise calls related to architect usage to be removed. As a result, many of the architect usage locations can now be more promise-based.","Url":"https://github.com/angular/angular-cli/pull/24443","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/architect): use promise-based result property where possible\" (#24443)"},{"Id":"1497844267","IsPullRequest":true,"CreatedAt":"2022-12-15T20:49:10","Actor":"angular-robot","Number":"24440","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.36` -> `v2.1.37` |\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | minor | `v2.0.6` -> `v2.1.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.37`](https://togithub.com/github/codeql-action/compare/v2.1.36...v2.1.37)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.36...v2.1.37)\n\n</details>\n\n<details>\n<summary>ossf/scorecard-action</summary>\n\n### [`v2.1.0`](https://togithub.com/ossf/scorecard-action/releases/tag/v2.1.0)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.0.6...v2.1.0)\n\n#### What's Changed\n\n##### Scorecard version\n\nThis release uses [scorecard v4.10.0](https://togithub.com/ossf/scorecard/releases/tag/v4.10.0).\n\n##### Improvements\n\n-   Docker build workflow by [@&#8203;naveensrinivasan](https://togithub.com/naveensrinivasan) in [https://github.com/ossf/scorecard-action/pull/981](https://togithub.com/ossf/scorecard-action/pull/981)\n-   Use root user in distroless to support GitHub Actions by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/994](https://togithub.com/ossf/scorecard-action/pull/994)\n-   Disable pull_request_target by [@&#8203;laurentsimon](https://togithub.com/laurentsimon) in [https://github.com/ossf/scorecard-action/pull/1031](https://togithub.com/ossf/scorecard-action/pull/1031)\n\n##### Documentation\n\n-   Add PAT section explaining risks by [@&#8203;olivekl](https://togithub.com/olivekl) in [https://github.com/ossf/scorecard-action/pull/1024](https://togithub.com/ossf/scorecard-action/pull/1024)\n-   Make the badge text easier to copy by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1026](https://togithub.com/ossf/scorecard-action/pull/1026)\n\n#### New Contributors\n\n-   [@&#8203;joycebrum](https://togithub.com/joycebrum) made their first contribution in [https://github.com/ossf/scorecard-action/pull/984](https://togithub.com/ossf/scorecard-action/pull/984)\n-   [@&#8203;rajbos](https://togithub.com/rajbos) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1026](https://togithub.com/ossf/scorecard-action/pull/1026)\n\n**Full Changelog**: https://github.com/ossf/scorecard-action/compare/v2.0.6...v2.1.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24440","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#24440)"},{"Id":"1497844384","IsPullRequest":true,"CreatedAt":"2022-12-15T20:48:47","Actor":"angular-robot","Number":"24441","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | minor | `5.7.3` -> `5.8.0` |\n| [cacache](https://togithub.com/npm/cacache) | dependencies | patch | [`17.0.3` -> `17.0.4`](https://renovatebot.com/diffs/npm/cacache/17.0.3/17.0.4) |\n| [cacache](https://togithub.com/npm/cacache) | devDependencies | patch | [`17.0.3` -> `17.0.4`](https://renovatebot.com/diffs/npm/cacache/17.0.3/17.0.4) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild/0.16.6/0.16.7) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild/0.16.6/0.16.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.6/0.16.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.6` -> `0.16.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.6/0.16.7) |\n| [pacote](https://togithub.com/npm/pacote) | dependencies | patch | [`15.0.7` -> `15.0.8`](https://renovatebot.com/diffs/npm/pacote/15.0.7/15.0.8) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | patch | [`15.0.7` -> `15.0.8`](https://renovatebot.com/diffs/npm/pacote/15.0.7/15.0.8) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v5.8.0`](https://togithub.com/bazelbuild/rules_nodejs/releases/tag/5.8.0)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.7.3...5.8.0)\n\nThis release contains Bazel modules only, there are no accompanying npm packages because they weren't affected.\n\nUpgrade with:\n\n```starlark\nhttp_archive(\n    name = \"build_bazel_rules_nodejs\",\n    sha256 = \"dcc55f810142b6cf46a44d0180a5a7fb923c04a5061e2e8d8eb05ccccc60864b\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.0/rules_nodejs-5.8.0.tar.gz\"],\n)\n\n### or for core module\nhttp_archive(\n    name = \"rules_nodejs\",\n    sha256 = \"08337d4fffc78f7fe648a93be12ea2fc4e8eb9795a4e6aa48595b66b34555626\",\n    urls = [\"https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.0/rules_nodejs-core-5.8.0.tar.gz\"],\n)\n```\n\n#### What's Changed\n\n-   feat: provide [@&#8203;nodejs](https://togithub.com/nodejs) repository by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3610](https://togithub.com/bazelbuild/rules_nodejs/pull/3610)\n-   chore: turn off automation for esbuild versions by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/bazelbuild/rules_nodejs/pull/3608](https://togithub.com/bazelbuild/rules_nodejs/pull/3608)\n-   Update NodeJS Versions by [@&#8203;mattem](https://togithub.com/mattem) in [https://github.com/bazelbuild/rules_nodejs/pull/3612](https://togithub.com/bazelbuild/rules_nodejs/pull/3612)\n\n**Full Changelog**: https://github.com/bazelbuild/rules_nodejs/compare/5.7.3...5.8.0\n\n</details>\n\n<details>\n<summary>npm/cacache</summary>\n\n### [`v17.0.4`](https://togithub.com/npm/cacache/blob/HEAD/CHANGELOG.md#&#8203;1704-httpsgithubcomnpmcacachecomparev1703v1704-2022-12-14)\n\n[Compare Source](https://togithub.com/npm/cacache/compare/v17.0.3...v17.0.4)\n\n##### Dependencies\n\n-   [`fe71fab`](https://togithub.com/npm/cacache/commit/fe71fabaacadc8a06b8142141a1d0e63fbed537c) [#&#8203;159](https://togithub.com/npm/cacache/pull/159) bump fs-minipass from 2.1.0 to 3.0.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.7`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0167)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.6...v0.16.7)\n\n-   Include `file` loader strings in metafile imports ([#&#8203;2731](https://togithub.com/evanw/esbuild/issues/2731))\n\n    Bundling a file with the `file` loader copies that file to the output directory and imports a module with the path to the copied file in the `default` export. Previously when bundling with the `file` loader, there was no reference in the metafile from the JavaScript file containing the path string to the copied file. With this release, there will now be a reference in the metafile in the `imports` array with the kind `file-loader`:\n\n    ```diff\n     {\n       ...\n       \"outputs\": {\n         \"out/image-55CCFTCE.svg\": {\n           ...\n         },\n         \"out/entry.js\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"out/image-55CCFTCE.svg\",\n    +          \"kind\": \"file-loader\"\n    +        }\n           ],\n           ...\n         }\n       }\n     }\n    ```\n\n-   Fix byte counts in metafile regarding references to other output files ([#&#8203;2071](https://togithub.com/evanw/esbuild/issues/2071))\n\n    Previously files that contained references to other output files had slightly incorrect metadata for the byte counts of input files which contributed to that output file. So for example if `app.js` imports `image.png` using the file loader and esbuild generates `out.js` and `image-LSAMBFUD.png`, the metadata for how many bytes of `out.js` are from `app.js` was slightly off (the metadata for the byte count of `out.js` was still correct). The reason is because esbuild substitutes the final paths for references between output files toward the end of the build to handle cyclic references, and the byte counts needed to be adjusted as well during the path substitution. This release fixes these byte counts (specifically the `bytesInOutput` values).\n\n-   The alias feature now strips a trailing slash ([#&#8203;2730](https://togithub.com/evanw/esbuild/issues/2730))\n\n    People sometimes add a trailing slash to the name of one of node's built-in modules to force node to import from the file system instead of importing the built-in module. For example, importing `util` imports node's built-in module called `util` but importing `util/` tries to find a package called `util` on the file system. Previously attempting to use esbuild's package alias feature to replace imports to `util` with a specific file would fail because the file path would also gain a trailing slash (e.g. mapping `util` to `./file.js` turned `util/` into `./file.js/`). With this release, esbuild will now omit the path suffix if it's a single trailing slash, which should now allow you to successfully apply aliases to these import paths.\n\n</details>\n\n<details>\n<summary>npm/pacote</summary>\n\n### [`v15.0.8`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#&#8203;1508-httpsgithubcomnpmpacotecomparev1507v1508-2022-12-14)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v15.0.7...v15.0.8)\n\n##### Dependencies\n\n-   [`40aa6fe`](https://togithub.com/npm/pacote/commit/40aa6fe9055f3fe673fda7032c7da8958d3f574d) [#&#8203;253](https://togithub.com/npm/pacote/pull/253) bump fs-minipass from 2.1.0 to 3.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24441","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24441)"},{"Id":"1499081608","IsPullRequest":false,"CreatedAt":"2022-12-15T18:58:43","Actor":"nawlbergs","Number":"24442","RawContent":null,"Title":"[BUG] - Node 18 - ng serve - something has changed in Node v18","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nNot sure if this is an issue with Angular or webpack-dev-server... but here goes:\r\n\r\nI use a docker apache proxy locally so my dev env is more like production: `www.myapp.local` instead of `localhost:4200`\r\nBut when I try to bump node up to v18...  the angular proxy falls apart and does not work. The node api proxy works fine, its just the angular connection that breaks.\r\n\r\nI start node like this\r\n```bash\r\n$ npx ng serve --hmr --disable-host-check --port 4200 --public-host=www.myapp.local --project=myapp\r\n```\r\nhost file (pretty typical)\r\n```\r\n127.0.0.1 www.myapp.local // <-- my app\r\n...  \r\n# Added by Docker Desktop\r\n10.0.0.225 host.docker.internal\r\n10.0.0.225 gateway.docker.internal\r\n# To allow the same kube context to work on the host and the container:\r\n127.0.0.1 kubernetes.docker.internal\r\n# End of section\r\n```\r\n\r\nmy docker apache (nothing crazy here): `FROM php:5.6-apache`\r\n```\r\nDefine local_node \"http://host.docker.internal:3333\"\r\nDefine local_app \"http://host.docker.internal:4200\"\r\n\r\n<VirtualHost *:80>\r\n  DocumentRoot \"/var/www/html\"\r\n  DirectoryIndex index.php index.html\r\n\r\n  <Location /api>\r\n      Order allow,deny\r\n      Allow from all\r\n      ProxyPass ${local_node}\r\n      ProxyPassReverse ${local_node}\r\n  </Location>\r\n\r\n  <Location /app>\r\n      Order allow,deny\r\n      Allow from all\r\n      ProxyPass ${local_app}/app\r\n      ProxyPassReverse ${local_app}/app\r\n  </Location>\r\n</VirtualHost>\r\n```\r\nIf on v18 the proxy does not work... apache error:\r\n```\r\nphp-apache   | [Thu Dec 15 18:53:58.110169 2022] [proxy:error] [pid 17] (111)Connection refused: AH00957: HTTP: attempt to connect to 192.168.65.2:4200 (host.docker.internal) failed\r\n\r\nphp-apache   | [Thu Dec 15 18:53:58.110198 2022] [proxy_http:error] [pid 17] [client 172.18.0.1:41480] AH01114: HTTP: failed to make connection to backend: host.docker.internal, referer: http://www.myapp.local/\r\n```\r\nAgain... the node/api proxy still works fine.\r\n\r\nI was able to get it to \"kinda\" work in v18 by setting `--host=0.0.0.0` as well... but the `hrm` websockets were throwing errors in the client... so... after several hours of trying... I could not get this setup to work in v18.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nphp-apache   | [Thu Dec 15 18:53:58.110169 2022] [proxy:error] [pid 17] (111)Connection refused: AH00957: HTTP: attempt to connect to 192.168.65.2:4200 (host.docker.internal) failed\r\n\r\nphp-apache   | [Thu Dec 15 18:53:58.110198 2022] [proxy_http:error] [pid 17] [client 172.18.0.1:41480] AH01114: HTTP: failed to make connection to backend: host.docker.internal, referer: http://www.myapp.local/\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nwindows 10\r\nnode 18.12.1\r\nnpm 8.10.0\r\nphp:5.6-apache\r\n\"@angular/animations\": \"15.0.0\",\r\n\"@angular/cdk\": \"15.0.0\",\r\n\"@angular/common\": \"15.0.0\",\r\n\"@angular/compiler\": \"15.0.0\",\r\n\"@angular/core\": \"15.0.0\",\r\n\"@angular/forms\": \"15.0.0\",\r\n\"@angular/material\": \"15.0.0\",\r\n\"@angular/platform-browser\": \"15.0.0\",\r\n\"@angular/platform-browser-dynamic\": \"15.0.0\",\r\n\"@angular/router\": \"15.0.0\",\n```\n\n\n### Anything else?\n\nMight be webpack-dev-server issue and unrelated to angular in general?","Url":"https://github.com/angular/angular-cli/issues/24442","RelatedDescription":"Open issue \"[BUG] - Node 18 - ng serve - something has changed in Node v18\" (#24442)"},{"Id":"1497631652","IsPullRequest":true,"CreatedAt":"2022-12-15T01:37:43","Actor":"clydin","Number":"24439","RawContent":null,"Title":"Bump version to \"v15.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24439","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.0-next.3\" with changelog.\" (#24439)"},{"Id":"1497428360","IsPullRequest":true,"CreatedAt":"2022-12-15T00:32:43","Actor":"clydin","Number":"24438","RawContent":null,"Title":"docs: release notes for the v15.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24438","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.4 release\" (#24438)"},{"Id":"1497377919","IsPullRequest":true,"CreatedAt":"2022-12-14T21:27:10","Actor":"clydin","Number":"24437","RawContent":null,"Title":"Bump version to \"v15.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24437","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.4\" with changelog.\" (#24437)"},{"Id":"1496953938","IsPullRequest":true,"CreatedAt":"2022-12-14T17:03:54","Actor":"alan-agius4","Number":"24436","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update `css-loader` to `6.7.3`","State":"closed","Body":"Closes #24414\r\n","Url":"https://github.com/angular/angular-cli/pull/24436","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update `css-loader` to `6.7.3`\" (#24436)"},{"Id":"1495785206","IsPullRequest":true,"CreatedAt":"2022-12-14T16:25:55","Actor":"angular-robot","Number":"24431","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [css-loader](https://togithub.com/webpack-contrib/css-loader) | dependencies | patch | [`6.7.2` -> `6.7.3`](https://renovatebot.com/diffs/npm/css-loader/6.7.2/6.7.3) |\n| [css-loader](https://togithub.com/webpack-contrib/css-loader) | devDependencies | patch | [`6.7.2` -> `6.7.3`](https://renovatebot.com/diffs/npm/css-loader/6.7.2/6.7.3) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild/0.16.4/0.16.6) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild/0.16.4/0.16.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.4/0.16.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.16.4` -> `0.16.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.16.4/0.16.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/css-loader</summary>\n\n### [`v6.7.3`](https://togithub.com/webpack-contrib/css-loader/blob/HEAD/CHANGELOG.md#&#8203;673-httpsgithubcomwebpack-contribcss-loadercomparev672v673-2022-12-14)\n\n[Compare Source](https://togithub.com/webpack-contrib/css-loader/compare/v6.7.2...v6.7.3)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.16.6`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0166)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.5...v0.16.6)\n\n-   Do not mark subpath imports as external with `--packages=external` ([#&#8203;2741](https://togithub.com/evanw/esbuild/issues/2741))\n\n    Node has a feature called [subpath imports](https://nodejs.org/api/packages.html#subpath-imports) where special import paths that start with `#` are resolved using the `imports` field in the `package.json` file of the enclosing package. The intent of the newly-added `--packages=external` setting is to exclude a package's dependencies from the bundle. Since a package's subpath imports are only accessible within that package, it's wrong for them to be affected by `--packages=external`. This release changes esbuild so that `--packages=external` no longer affects subpath imports.\n\n-   Forbid invalid numbers in JSON files\n\n    Previously esbuild parsed numbers in JSON files using the same syntax as JavaScript. But starting from this release, esbuild will now parse them with JSON syntax instead. This means the following numbers are no longer allowed by esbuild in JSON files:\n\n    -   Legacy octal literals (non-zero integers starting with `0`)\n    -   The `0b`, `0o`, and `0x` numeric prefixes\n    -   Numbers containing `_` such as `1_000`\n    -   Leading and trailing `.` such as `0.` and `.0`\n    -   Numbers with a space after the `-` such as `- 1`\n\n-   Add external imports to metafile ([#&#8203;905](https://togithub.com/evanw/esbuild/issues/905), [#&#8203;1768](https://togithub.com/evanw/esbuild/issues/1768), [#&#8203;1933](https://togithub.com/evanw/esbuild/issues/1933), [#&#8203;1939](https://togithub.com/evanw/esbuild/issues/1939))\n\n    External imports now appear in `imports` arrays in the metafile (which is present when bundling with `metafile: true`) next to normal imports, but additionally have `external: true` to set them apart. This applies both to files in the `inputs` section and the `outputs` section. Here's an example:\n\n    ```diff\n     {\n       \"inputs\": {\n         \"style.css\": {\n           \"bytes\": 83,\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\",\n    +          \"kind\": \"import-rule\",\n    +          \"external\": true\n    +        }\n           ]\n         },\n         \"app.js\": {\n           \"bytes\": 100,\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\",\n    +          \"kind\": \"import-statement\",\n    +          \"external\": true\n    +        },\n             {\n               \"path\": \"style.css\",\n               \"kind\": \"import-statement\"\n             }\n           ]\n         }\n       },\n       \"outputs\": {\n         \"out/app.js\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js\",\n    +          \"kind\": \"require-call\",\n    +          \"external\": true\n    +        }\n           ],\n           \"exports\": [],\n           \"entryPoint\": \"app.js\",\n           \"cssBundle\": \"out/app.css\",\n           \"inputs\": {\n             \"app.js\": {\n               \"bytesInOutput\": 113\n             },\n             \"style.css\": {\n               \"bytesInOutput\": 0\n             }\n           },\n           \"bytes\": 528\n         },\n         \"out/app.css\": {\n           \"imports\": [\n    +        {\n    +          \"path\": \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\",\n    +          \"kind\": \"import-rule\",\n    +          \"external\": true\n    +        }\n           ],\n           \"inputs\": {\n             \"style.css\": {\n               \"bytesInOutput\": 0\n             }\n           },\n           \"bytes\": 100\n         }\n       }\n     }\n    ```\n\n    One additional useful consequence of this is that the `imports` array is now populated when bundling is disabled. So you can now use esbuild with bundling disabled to inspect a file's imports.\n\n### [`v0.16.5`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0165)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.16.4...v0.16.5)\n\n-   Make it easy to exclude all packages from a bundle ([#&#8203;1958](https://togithub.com/evanw/esbuild/issues/1958), [#&#8203;1975](https://togithub.com/evanw/esbuild/issues/1975), [#&#8203;2164](https://togithub.com/evanw/esbuild/issues/2164), [#&#8203;2246](https://togithub.com/evanw/esbuild/issues/2246), [#&#8203;2542](https://togithub.com/evanw/esbuild/issues/2542))\n\n    When bundling for node, it's often necessary to exclude npm packages from the bundle since they weren't designed with esbuild bundling in mind and don't work correctly after being bundled. For example, they may use `__dirname` and run-time file system calls to load files, which doesn't work after bundling with esbuild. Or they may compile a native `.node` extension that has similar expectations about the layout of the file system that are no longer true after bundling (even if the `.node` extension is copied next to the bundle).\n\n    The way to get this to work with esbuild is to use the `--external:` flag. For example, the [`fsevents`](https://www.npmjs.com/package/fsevents) package contains a native `.node` extension and shouldn't be bundled. To bundle code that uses it, you can pass `--external:fsevents` to esbuild to exclude it from your bundle. You will then need to ensure that the `fsevents` package is still present when you run your bundle (e.g. by publishing your bundle to npm as a package with a dependency on `fsevents`).\n\n    It was possible to automatically do this for all of your dependencies, but it was inconvenient. You had to write some code that read your `package.json` file and passed the keys of the `dependencies`, `devDependencies`, `peerDependencies`, and/or `optionalDependencies` maps to esbuild as external packages (either that or write a plugin to mark all package paths as external). Previously esbuild's recommendation for making this easier was to do `--external:./node_modules/*` (added in version 0.14.13). However, this was a bad idea because it caused compatibility problems with many node packages as it caused esbuild to mark the post-resolve path as external instead of the pre-resolve path. Doing that could break packages that are published as both CommonJS and ESM if esbuild's bundler is also used to do a module format conversion.\n\n    With this release, you can now do the following to automatically exclude all packages from your bundle:\n\n    -   CLI:\n\n            esbuild --bundle --packages=external\n\n    -   JS:\n\n        ```js\n        esbuild.build({\n          bundle: true,\n          packages: 'external',\n        })\n        ```\n\n    -   Go:\n\n        ```go\n        api.Build(api.BuildOptions{\n          Bundle:   true,\n          Packages: api.PackagesExternal,\n        })\n        ```\n\n    Doing `--external:./node_modules/*` is still possible and still has the same behavior, but is no longer recommended. I recommend that you use the new `packages` feature instead.\n\n-   Fix some subtle bugs with tagged template literals\n\n    This release fixes a bug where minification could incorrectly change the value of `this` within tagged template literal function calls:\n\n    ```js\n    // Original code\n    function f(x) {\n      let z = y.z\n      return z``\n    }\n\n    // Old output (with --minify)\n    function f(n){return y.z``}\n\n    // New output (with --minify)\n    function f(n){return(0,y.z)``}\n    ```\n\n    This release also fixes a bug where using optional chaining with `--target=es2019` or earlier could incorrectly change the value of `this` within tagged template literal function calls:\n\n    ```js\n    // Original code\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj?.foo)``;\n\n    // Old output (with --target=es6)\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj == null ? void 0 : obj.foo)``;\n\n    // New output (with --target=es6)\n    var __freeze = Object.freeze;\n    var __defProp = Object.defineProperty;\n    var __template = (cooked, raw) => __freeze(__defProp(cooked, \"raw\", { value: __freeze(raw || cooked.slice()) }));\n    var _a;\n    var obj = {\n      foo: function() {\n        console.log(this === obj);\n      }\n    };\n    (obj == null ? void 0 : obj.foo).call(obj, _a || (_a = __template([\"\"])));\n    ```\n\n-   Some slight minification improvements\n\n    The following minification improvements were implemented:\n\n    -   `if (~a !== 0) throw x;` => `if (~a) throw x;`\n    -   `if ((a | b) !== 0) throw x;` => `if (a | b) throw x;`\n    -   `if ((a & b) !== 0) throw x;` => `if (a & b) throw x;`\n    -   `if ((a ^ b) !== 0) throw x;` => `if (a ^ b) throw x;`\n    -   `if ((a << b) !== 0) throw x;` => `if (a << b) throw x;`\n    -   `if ((a >> b) !== 0) throw x;` => `if (a >> b) throw x;`\n    -   `if ((a >>> b) !== 0) throw x;` => `if (a >>> b) throw x;`\n    -   `if (!!a || !!b) throw x;` => `if (a || b) throw x;`\n    -   `if (!!a && !!b) throw x;` => `if (a && b) throw x;`\n    -   `if (a ? !!b : !!c) throw x;` => `if (a ? b : c) throw x;`\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24431","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24431)"},{"Id":"1496596119","IsPullRequest":false,"CreatedAt":"2022-12-14T13:59:48","Actor":"wesselvdv","Number":"24435","RawContent":null,"Title":"browser-esbuild target set to ES2022 and useDefineForClassFields false not working","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nnon esbuild builder\r\n\r\n### Description\r\n\r\nI get the warning `[WARNING] [plugin angular-compiler] TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI.` when building using browser-esbuild.  But when looking at the output, it seems as if the useDefineForClassFields is set to true.\r\n\r\nThis setting causes the following example to be compiled/transpiled incorrectly, causing undefined errors:\r\n\r\n```typescript\r\nclass XYZ extends W {\r\nprivate readonly whatever = this.query.watch(\r\n    {},\r\n    {\r\n      fetchPolicy: 'network-only',\r\n    },\r\n  );\r\n\r\n  constructor(\r\n    private readonly query: GetSomething\r\n  ) {\r\n    super();\r\n  }\r\n}\r\n```\r\n\r\n\r\n```javascript\r\nvar _XYZ = class extends W {\r\n  constructor(query) {\r\n    super();\r\n    __publicField(this, \"query\");\r\n    __publicField(this, \"whatever\", this.query.watch({}, {\r\n      fetchPolicy: \"network-only\"\r\n    }));\r\n    this.query = query;\r\n}\r\n```\r\n\r\nAs can be seen in the above example the constructor assignment is done last. I initially thought it was due to esbuild, so I had already opened an issue there which pointed me to the typescript config. (https://github.com/evanw/esbuild/issues/2738#event-8030504054)\r\n\r\nI am not sure if this is correct behaviour from typescript (the wrong order of assignment), or if this just isn't supported anymore?\r\n\r\n### Minimal Reproduction\r\n\r\nHere's a typescript example with target: ES2021:\r\n\r\nhttps://www.typescriptlang.org/play?useDefineForClassFields=true&target=8#code/MYGwhgzhAEAaCaAtaBTAHgFxQOwCYwHVoBvAKAAcAnASwDcwtpKUxcB7bEAT2gHcALBilopK0ALzQM-ahAB0ARwCuornN4Ng-ABSlo+kgF8ANHoNkDBgGYoMWgApsQ1YFwBc0AOTZbvNpQBrAFoObk9TSxMzAEoAblIzYA4IDEolYAx-XUsqOiEmFnZOHmVVDwBxWwBlNgBbWxlsAHMYkjN9CCVyUW04s0NSAYwubuhKjBr66WpmiWgwbC5SXBRQMGZoejECDwWloA\r\n\r\nAnd here's one with ES2022 as target\r\n\r\nhttps://www.typescriptlang.org/play?useDefineForClassFields=true&target=99#code/MYGwhgzhAEAaCaAtaBTAHgFxQOwCYwHVoBvAKAAcAnASwDcwtpKUxcB7bEAT2gHcALBilopK0ALzQM-ahAB0ARwCuornN4Ng-ABSlo+kgF8ANHoNkDBgGYoMWgApsQ1YFwBc0AOTZbvNpQBrAFoObk9TSxMzAEoAblIzYA4IDEolYAx-XUsqOiEmFnZOHmVVDwBxWwBlNgBbWxlsAHMYkjN9CCVyUW04s0NSAYwubuhKjBr66WpmiWgwbC5SXBRQMGZoejECDwWloA\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 15.0.3\r\nNode: 19.1.0 (Unsupported)\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3 (cli-only)\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@angular/cdk                    15.0.2\r\n@schematics/angular             15.0.3 (cli-only)\r\nrxjs                            7.6.0\r\ntypescript                      4.9.4\r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24435","RelatedDescription":"Closed issue \"browser-esbuild target set to ES2022 and useDefineForClassFields false not working\" (#24435)"},{"Id":"1496412536","IsPullRequest":false,"CreatedAt":"2022-12-14T13:23:52","Actor":"Marius-Romanus","Number":"24433","RawContent":null,"Title":"Option to generate environments when creating a new Angular in versions 15 and higher","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nHello,\r\n\r\nI haven't been able to figure out the real reason for removing the environments in version 15 of the CLI, other than to simplify the configuration (which I'm fine with).\r\n\r\nBut I think it would at least be interesting to have an option (https://angular.io/cli/new#options) when creating a new Angular project to automatically generate the files as before, since in many cases the environments are still used.\r\n\r\nIf I'm not mistaken, the autogenerated files are:\r\n\r\n```\r\nsrc/environments/environment.ts\r\nsrc/environments/environment.prod.ts\r\n```\r\n\r\nChanges when generating angular.json:\r\n\r\n```\r\n\"fileReplacements\": [\r\n         {\r\n          \"replace\": \"src/environments/environment.ts\",\r\n          \"with\": \"src/environments/environment.prod.ts\"\r\n         }\r\n ],\r\n```\r\n\r\nregards!\n\n### Describe the solution you'd like\n\nBy default it would be the same as now, but by adding the \"--environments\" flag, it would remain the same as before version 15.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24433","RelatedDescription":"Closed issue \"Option to generate environments when creating a new Angular in versions 15 and higher\" (#24433)"},{"Id":"1496489890","IsPullRequest":false,"CreatedAt":"2022-12-14T12:06:47","Actor":"LeonEck","Number":"24434","RawContent":null,"Title":"browser-esbuild can't resolve secondary entry point from library","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI wanted to try the new esbuild based browser builder in a project that contains a library. That library is split into secondary entry points (similar to the [ng-packagr secondary sample](https://github.com/ng-packagr/ng-packagr/tree/main/integration/samples/secondary)). When I try to run `ng build` it produces an error saying it can not resolve the secondary entry points.\r\n\r\n### Minimal Reproduction\r\n\r\nI created a reproduction here: https://github.com/LeonEck/esbuild-library-secondary\r\nThe project contains a newly generated angular project. Afterwards (second commit) I generated a new library. In the third commit I added a secondary entry point to the library. Finally I switched the builder to \"browser-esbuild\".\r\n\r\n### Exception or Error\r\n\r\nWhen you run `ng build` it produces the following error:\r\n\r\n```text\r\n\r\n✘ [ERROR] Could not resolve \"my-lib/secondary\"\r\n\r\n    src/main.ts:3:29:\r\n      3 │ import { logSomething } from \"my-lib/secondary\";\r\n        ╵                              ~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"my-lib/secondary\" as external to exclude it from the bundle, which will remove this error.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.3\r\nNode: 18.12.1\r\nPackage Manager: npm 9.1.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.3\r\n@angular-devkit/build-angular   15.0.3\r\n@angular-devkit/core            15.0.3\r\n@angular-devkit/schematics      15.0.3\r\n@schematics/angular             15.0.3\r\nng-packagr                      15.0.3\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24434","RelatedDescription":"Open issue \"browser-esbuild can't resolve secondary entry point from library\" (#24434)"},{"Id":"1496001738","IsPullRequest":true,"CreatedAt":"2022-12-14T08:02:10","Actor":"cexbrayat","Number":"24432","RawContent":null,"Title":"feat(@schematics/angular): remove deprecated CanLoad option for guards","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nAngular v15.1 deprecated the `CanLoad` guard in favor of `CanMatch`. This commit removes the support for `CanLoad` when generating a guard with the CLI, to encourage developers to use `CanMatch` instead.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24432","RelatedDescription":"Open PR \"feat(@schematics/angular): remove deprecated CanLoad option for guards\" (#24432)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1505387808","IsPullRequest":false,"CreatedAt":"2022-12-20T22:21:37","Actor":"zakhenry","Number":"26302","RawContent":null,"Title":"bug(Form Controls): FormControl disabled state now overrides the template state","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nThis is a regression, before the [disabled] attribute of a form element (radio, toggle etc) would take precedence, but now this attribute appears to be ignored entirely if the component is bound to a form control\r\n\r\n\r\nBefore:\r\nhttps://stackblitz.com/edit/angular-pw8j5w?file=src/app/radio-ng-model-example.html\r\n<img width=\"219\" alt=\"Screenshot 2022-12-21 at 11 22 43\" src=\"https://user-images.githubusercontent.com/721513/208778273-d27a4fb7-e3e7-4cfd-a1d8-ff6c83cf5e42.png\">\r\n\r\nAfter:\r\nhttps://stackblitz.com/edit/angular-tomdov?file=src/app/radio-ng-model-example.html\r\n<img width=\"245\" alt=\"Screenshot 2022-12-21 at 11 22 49\" src=\"https://user-images.githubusercontent.com/721513/208778310-f2e9be17-66d7-41ff-a286-fa7cb01f992e.png\">\r\n\r\nNote the content of these demos are identical other than the different bootstrapped version, one is showing the control as disabled (v14) and the other as enabled (v15)\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Set up a form component with a [disabled]=\"true\" attribute\r\n2. Attach a formControl via [formControl] with no disabled state set (the default)\r\n3. Inspect the ui\r\n\r\n\r\n### Expected Behavior\r\n\r\nForm component should be disabled\r\n\r\n### Actual Behavior\r\n\r\nForm component is not disabled\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26302","RelatedDescription":"Open issue \"bug(Form Controls): FormControl disabled state now overrides the template state\" (#26302)"},{"Id":"1500531674","IsPullRequest":true,"CreatedAt":"2022-12-20T22:06:40","Actor":"zarend","Number":"26283","RawContent":null,"Title":"fix(material/list): add opt-out for radio indicators","State":"closed","Body":"Add an opt-out for radio indicators for single-selection. Adds both an Input and DI token to specify if radio indicators are hidden. By default, display radio indicators. If both DI token and Input are specified, the Input wins.\r\n\r\nPR #25933 added radio toggles for single-selection. Add an opt-out to provide a way to have same appearance as before #25933.\r\n\r\nAPI changes\r\n - add `@Input hideSingleSelectionIndicator` to specify if radio indicators are displayed\r\n - add MAT_LIST_CONFIG token to specify default value for `hideSingleSelectionIndicator`","Url":"https://github.com/angular/components/pull/26283","RelatedDescription":"Closed or merged PR \"fix(material/list): add opt-out for radio indicators\" (#26283)"},{"Id":"1505087690","IsPullRequest":false,"CreatedAt":"2022-12-20T18:41:48","Actor":"DmitryEfimenko","Number":"26301","RawContent":null,"Title":"docs-bug(MatFormFieldControl): The guide is missing detailed description of autofilled property","State":"open","Body":"### Documentation Feedback\n\nThe guide [\"Creating a custom form field control\"](https://v10.material.angular.io/guide/creating-a-custom-form-field-control) is missing detailed description of `autofilled` property\n\n### Affected documentation page\n\nhttps://v10.material.angular.io/guide/creating-a-custom-form-field-control","Url":"https://github.com/angular/components/issues/26301","RelatedDescription":"Open issue \"docs-bug(MatFormFieldControl): The guide is missing detailed description of autofilled property\" (#26301)"},{"Id":"1504267232","IsPullRequest":false,"CreatedAt":"2022-12-20T16:46:01","Actor":"AlexElin","Number":"26297","RawContent":null,"Title":"docs-bug(Button): Alignemt of buttons is broken in the \"Basic buttons\" of buttons docs","State":"closed","Body":"### Documentation Feedback\r\n\r\nAlignemt of buttons is broken in the \"Basic buttons\" section of the [docs](https://v15.material.angular.io/components/button/overview) page.\r\nSee the below screenshots for more details (Disabled Icon button is under Accent Flat button and many other cases).\r\n\r\nV15 (broken):\r\n![image](https://user-images.githubusercontent.com/13061803/208634581-335f132c-5bef-4f4c-80af-01c40e6bea1b.png)\r\n\r\nV14 (Ok):\r\n![image](https://user-images.githubusercontent.com/13061803/208634766-1d586d95-79d7-47cc-b749-0ed1f98fe3f4.png)\r\n\r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://v15.material.angular.io/components/button/overview\r\n\r\n### Browser\r\nGoogle Chrome 108.0.5359.125","Url":"https://github.com/angular/components/issues/26297","RelatedDescription":"Closed issue \"docs-bug(Button): Alignemt of buttons is broken in the \"Basic buttons\" of buttons docs\" (#26297)"},{"Id":"1504722067","IsPullRequest":false,"CreatedAt":"2022-12-20T15:08:46","Actor":"Robw94","Number":"26300","RawContent":null,"Title":"bug (Angular Material): mat.define-typography-config $input and $title arguments have been removed","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14\n\n### Description\n\nUpgrading from angular 14 to 15 one of the templates we used had the mixin function  \r\n\r\n`        mat.define-typography-config(\r\n            $font-family: $treo-font-sans,\r\n            $title: mat.define-typography-level(1.25rem, 2rem, 600),\r\n            $body-2: mat.define-typography-level(0.875rem, 1.5rem, 600),\r\n            $button: mat.define-typography-level(0.875rem, 0.875rem, 500),\r\n            $input: mat.define-typography-level(0.875rem, 1.2857142857, 400) // line-height: 20px\r\n        )`\r\n      \r\nSince angular material 15 the $input and $title arguements have been removed. \r\nSassError: No argument named $input.\r\n\r\nIs there a replacement for this? as the buttons and form fields on the website complete change when I remove these arguments\r\n \r\n        \r\n        \n\n### Reproduction\n\nSteps to reproduce:\r\n1. Upgrade to Angular 15 from 14 having $title and $input defined in typography\r\n2.\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/46281347/208699102-e2fcf1b8-699e-4f3c-a9f7-e96a19ed3d34.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/46281347/208699162-11f25b4f-00b7-407d-9bc5-c61ff370fe7b.png)\r\n\n\n### Environment\n\n@angular-devkit/architect          0.1500.4\r\n@angular-devkit/build-angular      15.0.4\r\n@angular-devkit/core               15.0.4\r\n@angular-devkit/schematics         15.0.4\r\n@angular/cdk                       15.0.3\r\n@angular/material                  15.0.3\r\n@angular/material-moment-adapter   15.0.3\r\n@schematics/angular                15.0.4\r\nrxjs                               7.8.0\r\ntypescript                         4.8.2\r\n","Url":"https://github.com/angular/components/issues/26300","RelatedDescription":"Open issue \"bug (Angular Material): mat.define-typography-config $input and $title arguments have been removed\" (#26300)"},{"Id":"1504337775","IsPullRequest":true,"CreatedAt":"2022-12-20T13:56:26","Actor":"json-derulo","Number":"26298","RawContent":null,"Title":"docs: fix invalid SCSS in migration guide","State":"closed","Body":"Fixes an invalid usage of the legacy SCSS module system in the migration guide.","Url":"https://github.com/angular/components/pull/26298","RelatedDescription":"Closed or merged PR \"docs: fix invalid SCSS in migration guide\" (#26298)"},{"Id":"1504360154","IsPullRequest":false,"CreatedAt":"2022-12-20T10:51:54","Actor":"pkelleter","Number":"26299","RawContent":null,"Title":"MatFormFieldAppearance \"standard\" is missing","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWith v15 the Type MatFormFieldAppearance was refactored to lose the properties _legacy_ and _standard_. \r\nHereby _standard_ was replaced by _undefined_, so the absence of an appearance should represent _standard_ now.\r\n\r\nThere is a problem when are using provide _MAT_FORM_FIELD_DEFAULT_OPTIONS_ though. When we set the default to something else we will not be able to opt-in for _standard_ anywhere else anymore since  we can not set the appearance explicity to standard _anymore_\r\n\r\nEven if I \"trick\" TypeScript into taking the string _standard_ by casting it to any, Angular Material will throw since it seems to check the value at runtime and tell me that this is not a valid value.\r\n\r\nThis used to be possible in v14 and blocks me from migrating to v15.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'outline'}} in your AppComponent\r\n2. try to set the appearance to _standard_ for any Angular Material Component in your codebase\r\n\n\n### Expected Behavior\n\n_MatFormFieldAppearance_ should accept _standard_ as a value again\n\n### Actual Behavior\n\n_MatFormFieldAppearance_ is typed in a way that _standard_ is absent as a value - and it throws at runtime if you somehow manage to still pass it otherwise.\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n","Url":"https://github.com/angular/components/issues/26299","RelatedDescription":"Open issue \"MatFormFieldAppearance \"standard\" is missing\" (#26299)"},{"Id":"1500569637","IsPullRequest":true,"CreatedAt":"2022-12-20T10:09:42","Actor":"aanchal88","Number":"26284","RawContent":null,"Title":"test: removed empty methods from components","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26284","RelatedDescription":"Closed or merged PR \"test: removed empty methods from components\" (#26284)"},{"Id":"1504194663","IsPullRequest":true,"CreatedAt":"2022-12-20T08:49:15","Actor":"crisbeto","Number":"26296","RawContent":null,"Title":"fix(cdk/menu): don't prevent default selection key actions","State":"open","Body":"In #26051 a couple of `preventDefault` calls were added, because we were moving focus within an enter key `keydown` event which was causing the menu to close immediately after it opens. The problem is that the calls also prevent links from navigating.\r\n\r\nThese changes remove the `preventDefault` calls and resolve the initial issue by ignoring clicks initiated by the keyboard.\r\n\r\nFixes #26291.","Url":"https://github.com/angular/components/pull/26296","RelatedDescription":"Open PR \"fix(cdk/menu): don't prevent default selection key actions\" (#26296)"},{"Id":"1503615052","IsPullRequest":false,"CreatedAt":"2022-12-19T21:17:34","Actor":"romainmoreau","Number":"26295","RawContent":null,"Title":"bug(dialog): afterOpened not always emitted","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\n`afterOpened` is not emitted when the dialog is closed too fast.\n\n### Reproduction\n\nI noticed this issue running some e2e tests but it also can be manually reproduced: basically just go to https://stackblitz.com/edit/afteropened-not-always-emitted-15 and double click on the button.\n\n### Expected Behavior\n\n`afterOpened` should always emit a value before closing the dialog like in v14.\r\n\r\nhttps://stackblitz.com/edit/afteropened-not-always-emitted-14\n\n### Actual Behavior\n\n`afterOpened` is not emitted when the dialog is closed too fast.\r\n\r\nhttps://stackblitz.com/edit/afteropened-not-always-emitted-15\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26295","RelatedDescription":"Open issue \"bug(dialog): afterOpened not always emitted\" (#26295)"},{"Id":"1502882177","IsPullRequest":false,"CreatedAt":"2022-12-19T12:38:37","Actor":"PierreDugue","Number":"26294","RawContent":null,"Title":"help(mat-tab-nav-bar): Can't make auto-scrool to work along with mat tabs when dragging an item","State":"open","Body":"### What are you trying to do?\n\nI'm using material tabs. Is there a way to use the auto scroll when dragging a tab with CDK drag drop?\r\n See :\r\nhttps://stackblitz.com/edit/angular-wpv2er-djgsig?file=src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.ts,src%2Fapp%2Fcdk-drag-drop-horizontal-sorting-example.html\n\n### What troubleshooting steps have you tried?\n\nTrying to add cdkScrollable is not working.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a mat-tab-nav-bar with a list of mat-tab-link inside (enough to trigger tabs pagination)\r\n2. Add cdk Dragdrop\r\n3. Try to drag a tab on the right or left to trigger pagination -> nothing is happening\r\n\n\n### Environment\n\n- Angular: latest version\r\n- CDK/Material: latest version\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n","Url":"https://github.com/angular/components/issues/26294","RelatedDescription":"Open issue \"help(mat-tab-nav-bar): Can't make auto-scrool to work along with mat tabs when dragging an item\" (#26294)"},{"Id":"1502386215","IsPullRequest":false,"CreatedAt":"2022-12-19T08:27:02","Actor":"iKrishnaSahu","Number":"26293","RawContent":null,"Title":"bug(mat-checkbox): Multiple cdk-keyboard-focused class instances if using cdkMonitorElementFocus inside legacy checkbox","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMultiple `cdk-keyboard-focused` class instances if using `cdkMonitorElementFocus` inside legacy checkbox\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open [this stackblitz](https://stackblitz.com/edit/angular-1qw5ga-bfdibz?file=src/app/checkbox-configurable-example.html)\r\n2. Inspect checkbox as well as anchor tag\r\n3. Now navigate to the anchor tag via keyobard\r\n4. `cdk-keyboard-focused` class is applied to both checkbox and link\r\n\n\n### Expected Behavior\n\n`cdk-keyboard-focused` class should not get applied to both the elements\n\n### Actual Behavior\n\n`cdk-keyboard-focused` class is gettting applied to both the elements\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26293","RelatedDescription":"Closed issue \"bug(mat-checkbox): Multiple cdk-keyboard-focused class instances if using cdkMonitorElementFocus inside legacy checkbox\" (#26293)"},{"Id":"1502378970","IsPullRequest":false,"CreatedAt":"2022-12-19T06:15:43","Actor":"iKrishnaSahu","Number":"26292","RawContent":null,"Title":"bug(mat-checkbox): cdk-keyboard-focused is missing in mdc checkbox","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\n`cdk-keyboard-focused` is missing in mdc checkbox\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Visit https://material.angular.io/components/checkbox/overview\r\n2. Inspect `mat-checkbox`\r\n3. Now navigate to checkbox using keyboard\r\n4. Check `cdk-keyboard-focused` class is missing\r\n\n\n### Expected Behavior\n\n`cdk-keyboard-focused` should be added if we are navigating via keyboard\n\n### Actual Behavior\n\n`cdk-keyboard-focused` is not getting added if we are navigating via keyboard\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26292","RelatedDescription":"Open issue \"bug(mat-checkbox): cdk-keyboard-focused is missing in mdc checkbox\" (#26292)"},{"Id":"1502039965","IsPullRequest":false,"CreatedAt":"2022-12-18T21:27:06","Actor":"juliusstoerrle","Number":"26291","RawContent":null,"Title":"bug(cdkMenu): navigation is not triggered on SPACE and ENTER for cdkMenuItem on a-elements","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.0.0\r\n\r\n### Description\r\n\r\nUsing cdkMenuItem on an a element is not working anymore in regards to keyboard interaction.\r\nThis is the same bug as #25584 was:\r\n\r\n> Navigation does not occur on pressing Enter or Space when <a> element has cdkMenuItem.\r\n> `<a routerLink=\"/\" fragment=\"menu-1\" cdkMenuItem>item 1</a>`\r\n\r\nThis had been fixed for 15.0.0, but a later issue (#26033) with was resolved in 15.0.1 with PR #26051 effectively broke the fix for this issue from PR #25591. I guess both issues compete against each other here.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/components-issue-rree4e?file=src%2Fapp%2Fexample-component.html\r\n2. Use keyboard to focus a link at the top and press Enter to navigate. Nothing happens.\r\n3. Use keyboard to focus a link at the bottom and press Enter to navigate. Navigation occurs.\r\n\r\n### Expected Behavior\r\nI would expect `a` elements to work with this directive as this is considered best-practice by my understanding. Here a reference to the Angular Material documentation:\r\n> Native `<button>` and `<a>` elements are always used in order to provide the most straightforward and accessible experience for users. A `<button>` element should be used whenever some action is performed. **An `<a>` element should be used whenever the user will navigate to another view.** - https://material.angular.io/components/button/overview\r\n\r\n\r\n### Actual Behavior\r\n\r\nNo navigation is triggered.\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Firefox","Url":"https://github.com/angular/components/issues/26291","RelatedDescription":"Open issue \"bug(cdkMenu): navigation is not triggered on SPACE and ENTER for cdkMenuItem on a-elements\" (#26291)"},{"Id":"1501975218","IsPullRequest":false,"CreatedAt":"2022-12-18T17:17:34","Actor":"romainmoreau","Number":"26290","RawContent":null,"Title":"bug(snack-bar): MDC media query not correctly working","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nSince v15, MDC snack bar is used and it provides a breakpoint at 480px which overrides `mdc-snackbar__surface`'s `min-width` to `100%` but it doesn't work correctly for Material Angular snack bars where it seems to take min content width instead of full viewport width.\r\n\r\nAlso, just a thought: is `handsetCssClass` still relevant now there is already this MDC breakpoint? (it's seems redundant)\n\n### Reproduction\n\nAll the behaviors described below are achieved using Chrome's device toolbar with responsive dimensions of 480x400.\n\n### Expected Behavior\n\nWhen looking at the example from [MDC Web](https://material-components.github.io/material-components-web-catalog/#/component/snackbar), the `min-width` is working as expected (by taking the full width of the viewport):\r\n![material-components github io_material-components-web-catalog_ (3)](https://user-images.githubusercontent.com/1763676/208309213-ae7319a2-200b-4060-ada5-9a02a5d6e8fb.png)\r\n\r\nJust for reference, here's how it was working in v14 (correctly because no MDC breakpoint):\r\n![wrong-snackbar-action-color-with-mat-app-background-14 stackblitz io_ (2)](https://user-images.githubusercontent.com/1763676/208309407-6901b7a3-9b8e-4aa1-adc1-b2babeb4d877.png)\r\n(https://stackblitz.com/edit/wrong-snackbar-action-color-with-mat-app-background-14?file=src%2Fapp%2Fapp.component.ts)\n\n### Actual Behavior\n\nInstead of taking the full width of the viewport like in the MDC Web example, in v15, the Angular Material snack bar seems to take min content width:\r\n![wrong-snackbar-action-color-with-mat-app-backgrou-39aglb stackblitz io_](https://user-images.githubusercontent.com/1763676/208309431-f12311d6-0dde-4a1b-8502-191301fbab3d.png)\r\n(https://stackblitz.com/edit/wrong-snackbar-action-color-with-mat-app-background-15?file=src%2Fapp%2Fapp.component.ts)\n\n### Environment\n\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26290","RelatedDescription":"Open issue \"bug(snack-bar): MDC media query not correctly working\" (#26290)"},{"Id":"1501819194","IsPullRequest":true,"CreatedAt":"2022-12-18T08:50:11","Actor":"crisbeto","Number":"26289","RawContent":null,"Title":"fix(material/slider): dragEnd not being emitted","State":"open","Body":"The `dragStart` and `dragEnd` events were being emitted in the `_fixValue` method, however the call to `_fixValue` was removed from the ending sequence in #26215. This meant that the `dragEnd` event was no longer being emitted.\r\n\r\nThese changes move the `dragStart` and `dragEnd` events into the pointer down/up handlers instead since emitting them has nothing to do with fixing the value.\r\n\r\nFixes #26285.","Url":"https://github.com/angular/components/pull/26289","RelatedDescription":"Open PR \"fix(material/slider): dragEnd not being emitted\" (#26289)"},{"Id":"1499401463","IsPullRequest":false,"CreatedAt":"2022-12-18T07:03:40","Actor":"OlenaPeretiatko","Number":"26277","RawContent":null,"Title":"bug(mat-tab-link): Selector ::before is not working in `mat-tab-link` class","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13.1.1\n\n### Description\n\nI used to have selectors .mat-tab-label-active::before, .mat-tab-label-active::after, which worked great in version 13, but after updating to version 14 only ::after works good, and selector with ::before not showing at all.\n\n### Reproduction\n\n-\n\n### Expected Behavior\n\nall selectors works good\n\n### Actual Behavior\n\nselector ::before is not working\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26277","RelatedDescription":"Closed issue \"bug(mat-tab-link): Selector ::before is not working in `mat-tab-link` class\" (#26277)"},{"Id":"1500190002","IsPullRequest":false,"CreatedAt":"2022-12-18T06:58:24","Actor":"EMokro","Number":"26282","RawContent":null,"Title":"bug(MatCheckbox): disableRipple not working","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nCurrently the disableRipple directive does nothing.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. use Angular Material 15\r\n2. use `disableRipple` on `mat-checkbox`\r\n\r\nHere is an Stackblitz example\r\nhttps://stackblitz.com/edit/angular-xvd8ju?file=src/app/checkbox-configurable-example.html\r\nor repo\r\nhttps://github.com/EMokro/angular-material-15-checkbox-no-ripple\n\n### Expected Behavior\n\nIt should disable the mat ripple effect.\n\n### Actual Behavior\n\nIt does nothing\n\n### Environment\n\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Brave v1.46.144 / Chromium 108.0.5359.128\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26282","RelatedDescription":"Closed issue \"bug(MatCheckbox): disableRipple not working\" (#26282)"},{"Id":"1501318223","IsPullRequest":false,"CreatedAt":"2022-12-17T10:37:39","Actor":"sterlp","Number":"26288","RawContent":null,"Title":"bug(MatButtonModule): mat-icon-button changes the base line","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n7\r\n\r\n### Description\r\n\r\nThe horizontal line alignment gets broken as soon as a 'mat-icon-button' is added. This issue seems to be new, I even found an existing example with version 7 in which it's not present:\r\n\r\nhttps://stackblitz.com/edit/angular-fvhjtf\r\n\r\nI think version 12 wasn't affected too.\r\n\r\n### Related issues found\r\nhttps://github.com/angular/components/issues/26126\r\nhttps://github.com/google/material-design-icons/issues/206\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. create a new angular project\r\n2. add material design\r\n3. replace all html with the given\r\n4. Add imports MatButtonModule, MatIconModule\r\n5. `ng server -open`\r\n\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-qrzw77?file=src/app/app.component.html\r\n\r\n```html\r\n<div>\r\n  <button mat-icon-button>\r\n    <mat-icon>arrow_upward</mat-icon>\r\n  </button>\r\n  <button mat-raised-button>Click me!</button>\r\n</div>\r\n```\r\n\r\n### Expected Behavior\r\n\r\n<img width=\"188\" alt=\"Bildschirm­foto 2022-12-17 um 11 30 47\" src=\"https://user-images.githubusercontent.com/774984/208237689-ebe859cb-4128-4600-bf54-9aeea453671f.png\">\r\n\r\nhttps://stackblitz.com/edit/angular-fvhjtf\r\n\r\n### Actual Behavior\r\n\r\n<img width=\"303\" alt=\"Bildschirm­foto 2022-12-17 um 11 29 31\" src=\"https://user-images.githubusercontent.com/774984/208237697-06fb829d-ffc1-453b-a549-4df2b105b414.png\">\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-qrzw77?file=src/app/app.component.html\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome, Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26288","RelatedDescription":"Open issue \"bug(MatButtonModule): mat-icon-button changes the base line\" (#26288)"},{"Id":"1501133971","IsPullRequest":false,"CreatedAt":"2022-12-17T03:11:43","Actor":"davidshen84","Number":"26287","RawContent":null,"Title":"bug(mat-slider): value label is invisible inside a mat-list-item","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\n```\r\n  <mat-list role=\"list>\r\n      <mat-list-item role=\"listitem\" >\r\n        Length:\r\n        <mat-slider max=\"99\" min=\"1\" step=\"1\" showTickMarks discrete>\r\n          <input matSliderThumb [formControl]=\"SliderControl\">\r\n        </mat-slider>\r\n      </mat-list-item>\r\n  </mat-list>\r\n```\r\n\r\nIn the above example, I am trying to display a value label when a user moves the slider thumb. The label is displayed correctly if the `mat-slider` is not inside a `mat-list-item`. But if it is inside a `mat-list-item`, I can only see the bottom of the label. \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a new project with Angular 15\r\n2. Put a `mat-slider` with `discrete` attribute inside a `mat-list-item`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe label should be visible.\r\n\r\n### Actual Behavior\r\n\r\nThe label is not fully visible.\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.3\r\n- CDK/Material: 15.0.3\r\n- Browser(s): 108.0.5359.100\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26287","RelatedDescription":"Open issue \"bug(mat-slider): value label is invisible inside a mat-list-item\" (#26287)"},{"Id":"1498958686","IsPullRequest":true,"CreatedAt":"2022-12-16T23:08:39","Actor":"kseamon","Number":"26275","RawContent":null,"Title":"fix(material-experimental/popover-edit): Make cell focus indicator vi…","State":"closed","Body":"…sible in high contrast (forced colors) mode\r\n\r\n![image](https://user-images.githubusercontent.com/923677/207948097-e24af0bc-1cf2-4180-89de-7c34a85b6ed7.png)\r\n","Url":"https://github.com/angular/components/pull/26275","RelatedDescription":"Closed or merged PR \"fix(material-experimental/popover-edit): Make cell focus indicator vi…\" (#26275)"},{"Id":"1500802511","IsPullRequest":false,"CreatedAt":"2022-12-16T20:14:20","Actor":"mlc-mlapis","Number":"26286","RawContent":null,"Title":"@angular/material/core/theming/_theming.scss (v15.0.3) problems","State":"open","Body":"### Description\r\n\r\nAfter installing the `\"@angular/material\": \"15.0.3\"` package, strange errors related to `@use '../density/private/compatibility';` appears in the `@angular/material/core/theming/_theming.scss` file. It seems that variables from the `_compatibility.scss` file are not accessible in `_theming.scss`.\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208179635-22eb9d1b-8934-49d8-8015-e22d17557a4b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208180165-84b97ddb-2983-496e-ba3f-1cbf5d006b60.png)\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. `npm i @angular/material`\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo such problems inside an official package.\r\n\r\n### Actual Behavior\r\n\r\n![image](https://user-images.githubusercontent.com/5693835/208180165-84b97ddb-2983-496e-ba3f-1cbf5d006b60.png)\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Chrome 108.0.5359.125 \r\n- Operating System: Windows 10\r\n","Url":"https://github.com/angular/components/issues/26286","RelatedDescription":"Open issue \"@angular/material/core/theming/_theming.scss (v15.0.3) problems\" (#26286)"},{"Id":"1500775761","IsPullRequest":false,"CreatedAt":"2022-12-16T19:48:22","Actor":"ChristopherSnay","Number":"26285","RawContent":null,"Title":"bug(mat-slider): dragEnd event no longer triggers for matSliderStartThumb and matSliderEndThumb","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.1\n\n### Description\n\nThe events no longer fire without any code change since 15.0.1. \r\n\r\n```\r\n<mat-slider>\r\n    <input matSliderStartThumb (dragEnd)=\"dragEnded($event)\">\r\n    <input matSliderEndThumb (dragEnd)=\"dragEnded($event)\">\r\n</mat-slider>\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add a new mat-slider with start and stop thumbs. \r\n2. Add a dragEnd event to each input\r\n3. Event is not triggered. \r\n\n\n### Expected Behavior\n\nThe event should fire on dragEnd\n\n### Actual Behavior\n\nThe event does not fire on dragEnd\n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.0.3\r\n- Browser(s): Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26285","RelatedDescription":"Open issue \"bug(mat-slider): dragEnd event no longer triggers for matSliderStartThumb and matSliderEndThumb\" (#26285)"},{"Id":"1500014497","IsPullRequest":false,"CreatedAt":"2022-12-16T15:07:34","Actor":"Selindek","Number":"26280","RawContent":null,"Title":"bug(Material): css variables don't work in color palettes","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nif I define a palette this way: \r\n\r\n$dynamic-primary: (\r\n...\r\n  500: var(--theme-primary-500),\r\n...\r\n  contrast: (\r\n...\r\n    500: var(--theme-primary-contrast-500),\r\n...\r\n  ),\r\n);\r\n\r\n... and pass it to a theme, then I got a warning/error during compilation.\r\n\r\nIf I use all-legacy-component-themes() I get only a warning, but all-component-themes() throws an error.\r\n\r\nThe variable --theme-promary-500 can be defined in css and/or from ts. (or even overridden when the user selects a new color.) It worked nicely in the previous version.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. pass a color as a css variable into a palette: var(--theme-primary-500)\r\n2. try to build.\r\n\n\n### Expected Behavior\n\nno warning, no error\n\n### Actual Behavior\n\nwarning / error:\r\nvar(--theme-primary-500) is not a color. Falling back to \"dark\" tone.\n\n### Environment\n\n- Angular:  15.0.2\r\n- CDK/Material: 15.0.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26280","RelatedDescription":"Closed issue \"bug(Material): css variables don't work in color palettes\" (#26280)"},{"Id":"1500163472","IsPullRequest":false,"CreatedAt":"2022-12-16T12:55:33","Actor":"OlivierNourry","Number":"26281","RawContent":null,"Title":"bug(mat-menu) trigger is setting aria-expanded to null instead of false ","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is kind of a re-opening of #16859 that was closed for inactivity. \r\n\r\nThe possible values for `aria-expanded`  are `true`, `false`, or `undefined` (see https://www.w3.org/TR/wai-aria-1.1/#aria-expanded for reference). The default value is `undefined`, implying that either there are no children for the element, or these children are all visible in the UI. Which, in effect, is exactly the same as when the value is `true`. Thus, when the value of `aria-expanded` is anything other than `false`, it is actually equivalent to  `true`.\r\nIn this case, having `null` instead of  `false` results in having  `true` instead of  `false` -- meaning that users get the opposite of the intended information.\r\n\r\nThe consequence is that blind users of screen readers are led to believe that the menu is displayed, whereas it's collapsed. This doesn't come from the screen reader actually, but from the browser that populates the accessibility API with the info it is fed with through the HTML code -- which is incorrect here.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add a button with [matTriggerFor] for a mat menu\r\n<button mat-icon-button\r\n        #menuButton\r\n        [matMenuTriggerFor]=\"exampleMenu\">\r\n</button>\r\n\r\n<mat-menu #exampleMenu=\"matMenu\">\r\n2. Inspect the accessibility information of the element in the browser, with the menu collapsed (\"States\" section in Firefox in the Accessibility view. In Chrome, check the Accessibility tab in the Inspector)\r\n\n\n### Expected Behavior\n\nIn the \"States\" section in Firefox, one item is \"Collapsed\" (no Expanded). In Chrome, the property Expanded is set to false\n\n### Actual Behavior\n\nIn the \"States\" section in Firefox, one item is \"Expanded\". In Chrome, the property Expanded is set to true\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Firefox, Chrome (not checked but other browsers that follow the spec will show the same behavior)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): not relevant\r\n","Url":"https://github.com/angular/components/issues/26281","RelatedDescription":"Open issue \"bug(mat-menu) trigger is setting aria-expanded to null instead of false \" (#26281)"},{"Id":"1499864756","IsPullRequest":true,"CreatedAt":"2022-12-16T09:22:08","Actor":"crisbeto","Number":"26279","RawContent":null,"Title":"fix(material/menu): aria-expanded not updating in an OnPush component","State":"open","Body":"Fixes that the value for `aria-expanded` wasn't being updated when the menu is closed inside an OnPush parent.\r\n\r\nFixes #26262.","Url":"https://github.com/angular/components/pull/26279","RelatedDescription":"Open PR \"fix(material/menu): aria-expanded not updating in an OnPush component\" (#26279)"},{"Id":"1499826331","IsPullRequest":false,"CreatedAt":"2022-12-16T08:53:42","Actor":"tchandelle","Number":"26278","RawContent":null,"Title":"bug(typography): migration to v15 error with `mat.define-legacy-typography-config` conversion","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen upgrading from v14 to v15, conversion of `mat.define-typography-config()` to `mat.define-legacy-typography-config()` is broken.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n\r\n1. Checkout [tchandelle/angular-components@08589da](https://github.com/tchandelle/angular-components-26278/tree/08589da9ce454acdb0ed3e5021e3a17964f6364a)\r\n2.  Upgrade to v15 with `npx ng update -C @angular/material@15`\r\n3. See the issue here: https://github.com/tchandelle/angular-components-26278/blob/4d52c4d6673827731ce52eea5e88b44fedd99fd7/src/app/app.component.scss#L3\r\n\r\n---\r\n\r\n1. Have a component scss in v14 like:\r\n````scss\r\n@use '@angular/material' as mat;\r\n.foo {\r\n  $typo: mat.define-typography-config();\r\n  > h3 {\r\n    @include mat.typography-level($typo, subheading-2);\r\n  }\r\n}\r\n````\r\nThe component is declared as:\r\n````ts\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'foo',\r\n  templateUrl: './foo.component.html',\r\n  styleUrls: ['./foo.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n}\r\n```` \r\n\r\n2. Upgrade to v15 with `npx ng update -C @angular/material@15`\r\n\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould be converted to `$typo: mat.define-legacy-typography-config();`\r\n\r\n### Actual Behavior\r\n\r\nConverted instead to `$typo: mat.define-legacy-typography-configmat.define-legacy-typography-config();`\r\n\r\nSome are even converted to `$typo: mat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-config();`.\r\n\r\nIt seems the number of repetition correlate with the number of level in the scss:\r\n````scss\r\n.foo {\r\n  // 1st level > repeated 2 times\r\n  $typo: mat.define-legacy-typography-configmat.define-legacy-typography-config();\r\n  .bar {\r\n    // 2nd levels > repeated 3 times\r\n    $typo: mat.define-legacy-typography-configmat.define-legacy-typography-configmat.define-legacy-typography-config();\r\n  }\r\n}\r\n````\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.4 (migrated from 14.2.10)\r\n- CDK/Material: 15.0.3 (migrated from (14.2.7)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): darwin x64\r\n- Node: 18.12.1\r\n- Package Manager: yarn 3.1.1\r\n","Url":"https://github.com/angular/components/issues/26278","RelatedDescription":"Open issue \"bug(typography): migration to v15 error with `mat.define-legacy-typography-config` conversion\" (#26278)"},{"Id":"1499147464","IsPullRequest":true,"CreatedAt":"2022-12-15T21:44:14","Actor":"wagnermaciel","Number":"26276","RawContent":null,"Title":"fix(material/slider): match ios safari slider behavior","State":"open","Body":"* On ios, dragging only starts if the slider thumb is pressed. This means pressing the track and dragging does nothing.\r\n* On ios, values are updated on pointer up.\r\n* For some reason, the full width of the slider is off by 2 on ios safari.","Url":"https://github.com/angular/components/pull/26276","RelatedDescription":"Open PR \"fix(material/slider): match ios safari slider behavior\" (#26276)"},{"Id":"1498895188","IsPullRequest":true,"CreatedAt":"2022-12-15T18:38:09","Actor":"devversion","Number":"26274","RawContent":null,"Title":"build: update renovate to not apply `merge safe` label","State":"closed","Body":"The `merge safe` label is no longer used in the components repo. Declaring the label in the renovate config results in the label being created all the time.","Url":"https://github.com/angular/components/pull/26274","RelatedDescription":"Closed or merged PR \"build: update renovate to not apply `merge safe` label\" (#26274)"},{"Id":"1498677455","IsPullRequest":false,"CreatedAt":"2022-12-15T15:53:47","Actor":"calebegg","Number":"26273","RawContent":null,"Title":"bug(all): Strong focus indicators should only show when the user uses the keyboard to navigate","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nhttps://v12.material.angular.io/guide/theming#strong-focus-indicators\n\n### Reproduction\n\nreproduces in the trivial case\n\n### Expected Behavior\n\nAccording to guidance we've received from the Material Design team, focus indicators are only expected to be visible when the user has used the keyboard to focus the item\n\n### Actual Behavior\n\nFocus indicators are showing on click\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26273","RelatedDescription":"Open issue \"bug(all): Strong focus indicators should only show when the user uses the keyboard to navigate\" (#26273)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-21T03:30:03.0299435Z","RunDurationInMilliseconds":2130}