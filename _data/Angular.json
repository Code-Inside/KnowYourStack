{"Data":{"Angular-Issues":{"Issues":[{"Id":"2773809109","IsPullRequest":true,"CreatedAt":"2025-01-08T23:06:35","Actor":"arturovt","Number":"59417","RawContent":null,"Title":"refactor(router): change `NavigationResult` to `const enum`","State":"closed","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nNavigationResult = (function (NavigationResult2) {\r\n  return (\r\n    (NavigationResult2[(NavigationResult2.COMPLETE = 0)] = \"COMPLETE\"),\r\n    (NavigationResult2[(NavigationResult2.FAILED = 1)] = \"FAILED\"),\r\n    (NavigationResult2[(NavigationResult2.REDIRECTING = 2)] = \"REDIRECTING\"),\r\n    NavigationResult2\r\n  );\r\n})(NavigationResult || {});\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inline values.\r\n\r\nNote: this enum is not a part of the public API.","Url":"https://github.com/angular/angular/pull/59417","RelatedDescription":"Closed or merged PR \"refactor(router): change `NavigationResult` to `const enum`\" (#59417)"},{"Id":"2776479614","IsPullRequest":true,"CreatedAt":"2025-01-08T22:39:14","Actor":"arturovt","Number":"59440","RawContent":null,"Title":"refactor(common): drop `NullViewportScroller` for client bundles","State":"open","Body":"In this commit, we replace the `isPlatformBrowser` runtime call with the `ngServerMode` in order to drop the `NullViewportScroller` for client bundles.","Url":"https://github.com/angular/angular/pull/59440","RelatedDescription":"Open PR \"refactor(common): drop `NullViewportScroller` for client bundles\" (#59440)"},{"Id":"2776473283","IsPullRequest":true,"CreatedAt":"2025-01-08T22:34:02","Actor":"arturovt","Number":"59439","RawContent":null,"Title":"refactor(common): tree-shake transfer cache interceptor stuff","State":"open","Body":"In this commit, we replace `isPlatformServer` runtime call with the `ngServerMode` in the `transferCacheInterceptorFn` in order to make the functionality tree-shakable between client and server bundles.","Url":"https://github.com/angular/angular/pull/59439","RelatedDescription":"Open PR \"refactor(common): tree-shake transfer cache interceptor stuff\" (#59439)"},{"Id":"2776436838","IsPullRequest":true,"CreatedAt":"2025-01-08T22:05:17","Actor":"arturovt","Number":"59438","RawContent":null,"Title":"refactor(platform-browser): drop Hammer token names in production","State":"open","Body":"In this commit, we drop `HAMMER_GESTURE_CONFIG` and `HAMMER_LOADER` injection token names in production.","Url":"https://github.com/angular/angular/pull/59438","RelatedDescription":"Open PR \"refactor(platform-browser): drop Hammer token names in production\" (#59438)"},{"Id":"2776087722","IsPullRequest":false,"CreatedAt":"2025-01-08T20:22:05","Actor":"Gouvernathor","Number":"59436","RawContent":null,"Title":"Decide when equality checks and refreshs are executed on signals, and allow disabling equality checks altogether","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI was using a signal on a Map, while trying very hard to avoid mutability issues - since when I mutate the object, the signal has to pick up the information that it's \"dirty\" so that computed signals based on it can know they need to recompute (lazily).\nMy solution was to keep the writable signal private, while publishing a readonly version (typed as a ReadonlyMap instead of a Map) on one part, and a set/delete pair of functions on another part (the set function is for `Map.set`, not `WriteableSignal.set`).\nI was initially under the impression that writeable signals marked themselves as \"dirty\" **_if and when_** their set or update method got called. So my set and delete functions used `signal.set(mutatedSignalValue)`, aka setting the signal to its own value, to trigger an artificial dirtiness flag.\nIt turns out an equality check occurs before the dirty flag is set (so it is not always set _**when**_ the set or update method is called), and since the map object was the same before and after, the change was not registered.\nI got away with it by implementing an equals function for maps, and passing it to the `signal` constructor, as documented. But my Maps are large, and that computation is costly, and since I take care of only `set`ting my signal when I really changed them, it would be more optimized if the dirtiness could be set strictly **_if and when_** I call the set or update methods.\n\n### Proposed solution\n\nSo what if I could just pass `() => false` to the `equals` of the signal constructor ? That way, the lengthy map equality computation would just never happen, and the computed signals would directly know they have to recompute whenever I choose to use the set or update method.\n(That could be offered a syntactic sugar as passing just false to `equals` instead of the arrow function above. It would disable equality checks altogether.)\nBut in order for any of these two to work, we need to know that the equality check (and more broadly the dirtiness flag being set) **_only_** happens **_if_** the set or update methods are called.\nI suppose it's the case, because otherwise if equality checks happen randomly I don't really see the point of having signals at all. But it would need to be set in stone, and documented.\n\n### Alternatives considered\n\n/","Url":"https://github.com/angular/angular/issues/59436","RelatedDescription":"Closed issue \"Decide when equality checks and refreshs are executed on signals, and allow disabling equality checks altogether\" (#59436)"},{"Id":"2776121682","IsPullRequest":true,"CreatedAt":"2025-01-08T19:08:23","Actor":"ENAML","Number":"59437","RawContent":null,"Title":"ci: Add self (Ethan Cline) as primitives-shared reviewer.","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [x] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nN/A\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nN/A\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59437","RelatedDescription":"Open PR \"ci: Add self (Ethan Cline) as primitives-shared reviewer.\" (#59437)"},{"Id":"2776043763","IsPullRequest":true,"CreatedAt":"2025-01-08T18:26:08","Actor":"thePunderWoman","Number":"59435","RawContent":null,"Title":"Update next branch to reflect new release-train \"v19.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v19.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular/pull/59435","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v19.2.0-next.0\".\" (#59435)"},{"Id":"2776040101","IsPullRequest":true,"CreatedAt":"2025-01-08T18:24:19","Actor":"thePunderWoman","Number":"59434","RawContent":null,"Title":"Bump version to \"v19.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59434","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-rc.0\" with changelog.\" (#59434)"},{"Id":"2776008865","IsPullRequest":true,"CreatedAt":"2025-01-08T18:07:43","Actor":"thePunderWoman","Number":"59433","RawContent":null,"Title":"docs: release notes for the v19.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59433","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.6 release\" (#59433)"},{"Id":"2776003483","IsPullRequest":true,"CreatedAt":"2025-01-08T18:04:46","Actor":"thePunderWoman","Number":"59432","RawContent":null,"Title":"Bump version to \"v19.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59432","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.6\" with changelog.\" (#59432)"},{"Id":"2775992624","IsPullRequest":true,"CreatedAt":"2025-01-08T17:57:04","Actor":"arturovt","Number":"59431","RawContent":null,"Title":"refactor(common): tree-shake `PreloadLinkCreator` for client bundles","State":"open","Body":"In this commit, we tree-shake the `PreloadLinkCreator` for client bundles because it's targeting only server code.","Url":"https://github.com/angular/angular/pull/59431","RelatedDescription":"Open PR \"refactor(common): tree-shake `PreloadLinkCreator` for client bundles\" (#59431)"},{"Id":"2775972281","IsPullRequest":true,"CreatedAt":"2025-01-08T17:46:35","Actor":"arturovt","Number":"59430","RawContent":null,"Title":"refactor(forms): drop `CALL_SET_DISABLED_STATE` name in production","State":"open","Body":"In this commit, we drop the `CALL_SET_DISABLED_STATE` injection token name in production.","Url":"https://github.com/angular/angular/pull/59430","RelatedDescription":"Open PR \"refactor(forms): drop `CALL_SET_DISABLED_STATE` name in production\" (#59430)"},{"Id":"2773934825","IsPullRequest":false,"CreatedAt":"2025-01-08T16:44:18","Actor":"hrmcdonald","Number":"59419","RawContent":null,"Title":"`routerLink` challenges with web components","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nToday the `RouterLink` directive will only reference an elements `href` attribute value (and `preventDefault()` on click events) if its [elementRef's `tagName` is explicitly `a` or `area`. ](https://github.com/angular/angular/blob/d9707e1127f5b48ce593906c7b448ed9fef5d0cc/packages/router/src/directives/router_link.ts#L214)\n\nThis presents a unique challenge for us. We have built our design system with web components (Lit). A few of our components expose `<a>` attributes that get forwarded to internal `<a>` elements inside of the web component's shadowDOM. This works fine for a lot of things. \n\nIn Angular projects, however, it means our users can't really use `routerLink` properly since the directive will always assume it is not placed on a link and therefore will neither set it's `href` value nor prevent the default click event behavior like it would with an anchor element.\n\nWe have implemented a workaround on our end to supplement this short coming, but it leads to other challenges and issues.\n\n### Proposed solution\n\nCould [the logic that checks](https://github.com/angular/angular/blob/d9707e1127f5b48ce593906c7b448ed9fef5d0cc/packages/router/src/directives/router_link.ts#L214) for the directive's `isAnchorElement` check include some kind of additional condition to check for a specific attribute on custom web components? Something like `data-is-anchor`, `data-anchor`, or `data-ng-router-link=\"a\"`, but it could be whatever the team thinks is best.\n\nThis could be an interface we're required to implement to comply with Angular's `routerLink` directive. So in our elements we could add logic to our \"link-like\" elements to always set this attribute so that `routerLink` knows to treat it as an `<a>` equivalent.\n\nSo for example in the DOM, we'd make sure our custom element for `<mte-link>` would render to:\n```html\n<mte-link data-is-anchor>...</mte-link>\n```\n\nIn the `routerLink` source then the check could look like this:\n```typescript\nconst tagName = el.nativeElement.tagName?.toLowerCase();\nconst isAnchorLike = el.nativeElement.hasAttribute('data-is-attribute');\nthis.isAnchorElement = tagName === 'a' || tagName === 'area' || isAnchorLike;\n```\n\n### Alternatives considered\n\n### Custom `iref` solution\n\nToday we work around this by providing an `iref` attribute (short for \"Inert reference\") specifically for our Angular users. It sets the `href` internally so the link hover and right click behavior works as intended, but `preventDefault()` is called on click events since the `routerLink` will not handle that correctly today as explained above.\n\nThis mostly works, but requires our users to set both `href` and `routerLink`. It also means they have to pass string only values to `routerLink` to be safe since the `href` will not be set by whatever the router parses the link to be.\n\n### Injection Token\n\nPerhaps the `routerLink` could check an optional injection token that provides a list of valid \"link-like\" `tagNames` router links should also treat like anchor elements? We could provide those tagNames with this token in our wrapper modules or via a newer provider function for our teams to use. This seems more invasive to the directive than the first solution I proposed above though.","Url":"https://github.com/angular/angular/issues/59419","RelatedDescription":"Closed issue \"`routerLink` challenges with web components\" (#59419)"},{"Id":"2773285457","IsPullRequest":false,"CreatedAt":"2025-01-08T16:40:48","Actor":"rainerhahnekamp","Number":"59410","RawContent":null,"Title":"`EffectRef.destroy` has no impact","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a test that needs to ensure an effect is destroyed before it gets executed. \nHowever, for some reason, calling `destroy` has no effect, and the test still passes.\n\nInterestingly, if I call `TestBed.flushEffects()` before `effectRef.destroy()`, \nthe `effectCounter` remains at `1`, as expected.\n\n@JeanMeche suggested that once a run is scheduled, it cannot be stopped.  \nI get that, but in that case, the subsequent runs shouldn't happen.\n\n```ts\nit('should destroy an effect', () => {\n  let effectCounter = 0;\n  const counter = signal(1);\n  const effectRef = TestBed.runInInjectionContext(() =>\n    effect(\n      () => {\n        counter();\n        effectCounter++;\n      },\n      { injector: TestBed.inject(EnvironmentInjector) }\n    )\n  );\n  expect(effectCounter).toBe(0);\n  effectRef.destroy();\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(1);\n\n  counter.set(2);\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(2);\n\n  counter.set(3);\n  TestBed.flushEffects();\n  expect(effectCounter).toBe(3);\n});\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/github-6riblwis-lvalm53b?file=src%2Fapp%2Feffect.spec.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.5.1\nPackage Manager: pnpm 9.14.4\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59410","RelatedDescription":"Closed issue \"`EffectRef.destroy` has no impact\" (#59410)"},{"Id":"2773705590","IsPullRequest":true,"CreatedAt":"2025-01-08T16:40:47","Actor":"JeanMeche","Number":"59415","RawContent":null,"Title":"fix(core): Ensure that a destroyed `effect` never runs","State":"closed","Body":"Prior to this change, a scheduled root effect, even if destroyed instantly, would still run at least once.\r\n\r\nThis commit fixes this.\r\n\r\nfixes #59410\r\n","Url":"https://github.com/angular/angular/pull/59415","RelatedDescription":"Closed or merged PR \"fix(core): Ensure that a destroyed `effect` never runs\" (#59415)"},{"Id":"2775807905","IsPullRequest":false,"CreatedAt":"2025-01-08T16:24:14","Actor":"zygarios","Number":"59428","RawContent":null,"Title":"Proposal: Unify computed and linkedSignal APIs in Angular with a readonly Option","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nIn Angular's current reactive system, both computed and linkedSignal functions are used to create signals that derive their values from other signals. The computed function generates a read-only signal, while linkedSignal produces a writable signal that can also reset based on changes in its source signals. When linkedSignal is used without specifying the `source `property, it appears to behave similarly to computed. This separation creates redundancy, as linkedSignal encompasses the capabilities of computed while offering additional features.\n\nAdopting a unified approach could provide Angular with a more streamlined and intuitive API for reactive state management, ultimately improving developer productivity and code maintainability.\n\nIf there are specific benefits that computed provides which linkedSignal cannot replicate, or other compelling reasons to maintain two separate APIs, I would greatly appreciate an explanation and your opinion. As it stands, having two such similar constructs feels like unnecessary complexity.\n\n### Proposed solution\n\nTo streamline the API and reduce redundancy, I propose merging computed and linkedSignal into a single function, tentatively named linkedSignal. This unified function would accept an optional configuration parameter to specify its readonly mode. By default, it would create a writable signal, but developers could designate it as read-only through a .readonly() method, analogous to the existing input.required() API.\n\n`// Writable linked signal (default behavior)`\n`linkedSignal(() => {});`\n\n`// Read-only linked signal`\n`linkedSignal.readonly(() => {});`\n\nIn this example, linkedSignal creates a writable signal by default. When invoked with .readonly(), it produces a read-only signal, similar to the current computed function.\n\n### Alternatives considered\n\nInstead of:\n\n`linkedSignal.readonly(() => {}));`\n\nWe could use:\n`linkedSignal(() => {}, { readonly: true });`","Url":"https://github.com/angular/angular/issues/59428","RelatedDescription":"Open issue \"Proposal: Unify computed and linkedSignal APIs in Angular with a readonly Option\" (#59428)"},{"Id":"2775509784","IsPullRequest":true,"CreatedAt":"2025-01-08T16:12:05","Actor":"arturovt","Number":"59425","RawContent":null,"Title":"refactor(common): drop `PRELOADED_IMAGES` name in production","State":"closed","Body":"In this commit, we drop the `PRELOADED_IMAGES` injection token name in production.","Url":"https://github.com/angular/angular/pull/59425","RelatedDescription":"Closed or merged PR \"refactor(common): drop `PRELOADED_IMAGES` name in production\" (#59425)"},{"Id":"2773321900","IsPullRequest":false,"CreatedAt":"2025-01-08T15:57:21","Actor":"RafaelJCamara","Number":"59411","RawContent":null,"Title":"Link in docs in rendering regions does not exist","State":"closed","Body":"### Describe the problem that you experienced\n\nWhen you click in the [link](https://github.com/angular/angular/tree/main/aio/tools/transforms/examples-package/services) mentioned here:\nadev/shared-docs/pipeline/api-gen/rendering/regions/README.md\n\nYou get:\n<img width=\"1431\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ab357d14-9985-4445-ada8-c344a49042cf\" />","Url":"https://github.com/angular/angular/issues/59411","RelatedDescription":"Closed issue \"Link in docs in rendering regions does not exist\" (#59411)"},{"Id":"2775694184","IsPullRequest":true,"CreatedAt":"2025-01-08T15:33:12","Actor":"JeanMeche","Number":"59427","RawContent":null,"Title":"docs(docs-infra): remove sorting from API manager","State":"open","Body":"fixes #59423\r\n","Url":"https://github.com/angular/angular/pull/59427","RelatedDescription":"Open PR \"docs(docs-infra): remove sorting from API manager\" (#59427)"},{"Id":"2774474512","IsPullRequest":true,"CreatedAt":"2025-01-08T15:22:10","Actor":"RafaelJCamara","Number":"59421","RawContent":null,"Title":"docs: update README to reflect correct Angular repository branch in rendering regions","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nIssue Number: #59411","Url":"https://github.com/angular/angular/pull/59421","RelatedDescription":"Closed or merged PR \"docs: update README to reflect correct Angular repository branch in rendering regions\" (#59421)"},{"Id":"2775516499","IsPullRequest":false,"CreatedAt":"2025-01-08T14:18:11","Actor":"JanStureNielsen","Number":"59426","RawContent":null,"Title":"viewChild native scrollable CSS window layout quirks","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nEmbedded in a Angular 19 application, I have a component with a vertically scroll-able window where the content outside the window is hidden, i.e., the window content extends beyond the top and bottom of the fixed window and the content can be centered with a button press. There is no horizontal scrolling.\n\nInitial centering of the content is done with an effect in the constructor:\n\n```\nelement = viewChild.required<ElementRef>('my-scrollable-container');\n\n#scrollTo = computed(() => {\n  const nativeElement = this.element().nativeElement;\n  const scrollHeight: number = nativeElement.scrollHeight;\n  const offsetHeight: number = nativeElement.offsetHeight;\n\n  return 4 + (scrollHeight - offsetHeight) / 2;\n});\n\nconstructor() {\n  effect(() => \n    this.element().nativeElement.scrollTo(0, this.#scrollTo())\n  );\n}\n```\n\nMost of the time `scrollHeight` is 700px and `offsetHeight` is 300px and things work properly; however, about one in ten or fifteen refreshes (in Chrome) the `scrollHeight` and `offsetHeight` are the same, in this case 38px which cause the centering to fail.\n\nAs you might guess, hard-coding the scroll-to value does not fix the problem (and it would not be a viable solution, either).\n\nI'm guessing this is race-condition between the Chrome's layout calculation and the `scrollTo` signal calculation? Any ideas how to fix this calculation and/or behavior, without introducing a delay in the component constructor?\n\nA timeout will work-around the problem, e.g., with the following I didn't see a failed centering in fifty+ refreshes:\n\n```\nconstructor() {\n  effect(() => \n    setTimeout(() =>\n      this.element().nativeElement.scrollTo(0, this.#scrollTo()),\n      100\n    )\n  );\n}\n```\n\nA `afterRenderEffect` behaves better than a plain `effect` without `setTimeout` but still fails often; it is less reliable than a plain `effect` with a `setTimeout`:\n \n```\nconstructor() {\n  afterRenderEffect(() => \n    this.element().nativeElement.scrollTo(0, this.#scrollTo())\n  );\n}\n```\n\nhttps://stackoverflow.com/questions/79337161/angular-viewchild-native-scrollable-css-window-layout-quirks\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nWhen `scrollTo` fails, I notice that the `div`s which make up the scroll-able component are not positioned correctly vertically -- there are wacky gaps between them, as if the final position has not yet been calculated by the browser.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    16.2.14\n@angular/cli                    19.0.6\n@angular/flex-layout            15.0.0-beta.42\n@angular/material               16.2.14\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n\n  Operating System: openSUSE Leap 15.6              \n       CPE OS Name: cpe:/o:opensuse:leap:15.6\n            Kernel: Linux 6.4.0-150600.23.30-default\n      Architecture: x86-64\n   Hardware Vendor: Dell Inc.\n    Hardware Model: XPS 14 9440\n  Firmware Version: 1.5.0\n     Firmware Date: Thu 2024-06-06\n      Firmware Age: 7month 3d\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59426","RelatedDescription":"Open issue \"viewChild native scrollable CSS window layout quirks\" (#59426)"},{"Id":"2775842644","IsPullRequest":false,"CreatedAt":"2025-01-08T13:00:50","Actor":"prashantb23","Number":"59429","RawContent":null,"Title":"feat(API):  Make ɵSharedStylesHost a Public API in Angular for customisable style overrides","State":"open","Body":"### Feature Description\n\nThis proposal suggests making the internal API `ɵSharedStylesHost` a public API, allowing developers to leverage the advantage of extending ɵSharedStylesHost. By exposing the extended version of ɵSharedStylesHost through Angular’s dependency injection system, developers can easily access it to modify or override styles dynamically for use cases such as Web Components or cross-framework environments.\n\n### Use Case\n\n### Proposal: Make `ɵSharedStylesHost` a public API in Angular for Customisable Style Overrides \nfor Web Component-based Environments\n#### **Context**\nAs web development progresses towards using **Web Components**, developers often need greater flexibility to **dynamically modify styles** of components, especially when they are used across multiple frameworks or environments. In Angular, the `ɵSharedStylesHost` class plays a central role in managing styles across components, particularly those using **ViewEncapsulation.Emulated**. However, `ɵSharedStylesHost` is an internal class, and developers currently have no public API to interact with it for dynamic style modification.\n\nGiven the increasing adoption of **Web Component** architecture, especially in projects that need to integrate Angular components as **custom elements**, there is a need for a solution that allows overriding styles at runtime. This is particularly useful for use cases like dynamic theming or external style injection, such as when Angular Material components are used in a Web Component-based environment.\n\nThis proposal suggests **extending `ɵSharedStylesHost`** to allow developers to interact with it via **Angular’s dependency injection system**. By exposing the extended version of `ɵSharedStylesHost` through a provider, developers can easily access it to modify or override styles dynamically for use cases like **Web Components** or **cross-framework environments**.\n\n#### **Problem Statement**\n- **Web Component Environments**: Angular components, especially those encapsulated using **Shadow DOM** or **ViewEncapsulation.Emulated**, often need to have their styles dynamically overridden in web component-based environments. \n- **Material CSS**: When using **Angular Material** components or third-party libraries inside Angular custom elements, there may be a need to override specific styles like themes, colors, or layout properties dynamically.\n- **No Public API for Dynamic Style Overrides**: Currently, Angular does not provide an easy, public API to interact with or override styles after the component is initialized, especially for components that use **ViewEncapsulation.Emulated** or **Shadow DOM**.\n\n#### **Objective**\nThis proposal aims to extend the functionality of the internal `ɵSharedStylesHost` class and expose it via Angular’s **dependency injection system**. By doing so, we provide a public mechanism for dynamically modifying or overriding styles in Angular components, particularly those used as **Web Components** or **custom elements**.\n\n#### **Proposed Solution**\n1. **Extend `ɵSharedStylesHost` and Expose It Through a Provider**:\n   - Extend the `ɵSharedStylesHost` class to allow dynamic interaction with the styles it manages.\n   - Provide this extended class as a service through Angular's dependency injection system so that developers can use it in their components, directives, or other services.\n\n   Example Extended `SharedStylesHost`:\n\n    ```typescript\n    import { Injectable } from '@angular/core';\n    import { ɵSharedStylesHost } from '@angular/core';\n\n    @Injectable({\n        providedIn: 'root', // This allows the service to be injected globally\n    })\n    export class ExtendedSharedStylesHost extends ɵSharedStylesHost {\n    \n        constructor() {\n            super();\n        }\n\n        /**\n         * Dynamically overrides a style in the component's view.\n        * @param selector CSS selector of the target element.\n        * @param property CSS property to override.\n        * @param value New value for the property.\n        */\n        overrideStyle(selector: string, property: string, value: string): void {\n            const element = document.querySelector(selector);\n            if (element) {\n            element.style[property] = value;\n            } else {\n            console.error(`Element with selector \"${selector}\" not found.`);\n            }\n        }\n\n        /**\n         * Injects a new stylesheet into the component's view.\n        * @param styleUrl URL of the stylesheet.\n        */\n        injectStylesheet(styleUrl: string): void {\n            // Check if the stylesheet already exists to avoid duplication\n            const existingLink = document.querySelector(`link[href=\"${styleUrl}\"]`);\n            if (!existingLink) {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = styleUrl;\n            document.head.appendChild(link);\n            } else {\n            console.log(`Stylesheet with URL \"${styleUrl}\" already injected.`);\n            }\n        }\n\n        /**\n         * Removes an injected stylesheet.\n        * @param styleUrl URL of the stylesheet to remove.\n        */\n        removeStylesheet(styleUrl: string): void {\n            const link = document.querySelector(`link[href=\"${styleUrl}\"]`);\n            if (link) {\n            link.remove();\n            } else {\n            console.error(`Stylesheet with URL \"${styleUrl}\" not found.`);\n            }\n        }\n\n        /**\n         * Override and manipulate styles before injecting them.\n        * @param styles Array of CSS styles as strings.\n        */\n        override addStyles(styles: string[]): void {\n            // Manipulate styles before calling the super method\n            const modifiedStyles = styles.map(style => {\n            // Example: Wrap all styles with a custom class to scope them\n            return `.custom-class ${style}`;\n            });\n\n            // Call the original addStyles method with modified styles\n            super.addStyles(modifiedStyles);\n        }\n    }\n    ```\n\n\n2. **Register the Extended Service in Angular’s Providers**:\n   - Angular’s **dependency injection** system can be used to inject this extended service into any component or service that needs to override styles dynamically.\n   - By registering `ExtendedSharedStylesHost` as a provider in the application, we ensure that it is available throughout the application, especially for components using **ViewEncapsulation.Emulated** or **Shadow DOM**.\n\n   Example of providing the service globally:\n   ```typescript\n   @NgModule({\n     providers: [\n       ExtendedSharedStylesHost // Register the extended service\n     ]\n   })\n   export class AppModule {}\n   ```\n\n3. **Using the Extended `SharedStylesHost` in Components**:\n   - In any component or service, developers can now inject the `ExtendedSharedStylesHost` and use its methods to interact with and override styles of components dynamically.\n\n   Example usage in a component:\n   ```typescript\n   @Component({\n     selector: 'app-dynamic-style',\n     templateUrl: './dynamic-style.component.html',\n     styleUrls: ['./dynamic-style.component.css']\n   })\n   export class DynamicStyleComponent {\n     constructor(private stylesHost: ExtendedSharedStylesHost) {}\n\n     changeTheme() {\n       // Example: Dynamically change background color using overrideStyle method\n       this.stylesHost.overrideStyle('.theme-background', 'background-color', 'lightblue');\n     }\n\n     addCustomStyles() {\n       // Dynamically add a new stylesheet\n       this.stylesHost.injectStylesheet('assets/custom-styles.css');\n     }\n   }\n   ```\n\n4. **Cross-framework Compatibility and Web Component Customization**:\n   - Since the `ExtendedSharedStylesHost` service can be injected globally, it allows Angular components embedded as Web Components to interact with their styles dynamically.\n   - Developers can use this service to ensure that styles (such as CSS variables) are injected or overridden according to external needs, such as theming across multiple frameworks.\n\n5. **Dynamic Theming Support**:\n   - This solution would support the ability to **dynamically inject CSS** variables or stylesheets at runtime, enabling applications to easily swap between different themes or branding options.\n   - This is particularly useful in environments where Angular Material is used as a Web Component and developers need to dynamically switch themes.\n\n#### **Benefits**\n1. **Improved Flexibility**: By exposing `ɵSharedStylesHost` as a public API, developers can programmatically manage styles for Angular components, particularly those used in Web Component-based environments.\n2. **Dynamic Theming**: The ability to dynamically change themes, override default styles, and apply custom CSS would enhance user experience and make Angular components more adaptable.\n3. **Cross-framework Integration**: Developers can now modify Angular component styles when using them as custom elements or web components within other frameworks (like React or Vue).\n4. **Web Component Customization**: This solution enables deep customization of Angular components used as web components, offering a powerful mechanism for styling and theming.\n\n#### **Considerations**\n1. **Performance**: Dynamically injecting styles or modifying component styles could have a performance impact if done too frequently. Care should be taken to optimize for large applications.\n2. **Backward Compatibility**: This solution should ensure that existing applications using Angular’s current style encapsulation mechanisms are not broken.\n3. **Security**: The extension of `ɵSharedStylesHost` should ensure that it does not expose sensitive internal implementation details or break Angular's encapsulation model.\n\n#### **Conclusion**\nBy extending the `ɵSharedStylesHost` class and exposing it as a public service through Angular's **dependency injection** system, we can provide developers with the tools to dynamically manage and override styles in Angular components. This would be particularly beneficial for **Web Component-based environments**, **cross-framework styling**, and **dynamic theming**, helping Angular remain flexible and adaptable for modern, large-scale applications.","Url":"https://github.com/angular/angular/issues/59429","RelatedDescription":"Open issue \"feat(API):  Make ɵSharedStylesHost a Public API in Angular for customisable style overrides\" (#59429)"},{"Id":"2775261326","IsPullRequest":false,"CreatedAt":"2025-01-08T12:21:43","Actor":"pkozlowski-opensource","Number":"59423","RawContent":null,"Title":"adev: mapManifestToApiGroups is slow","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nProfiling https://angular.dev/api reveals that majority of time spend on creating the routed component is taken by the `mapManifestToApiGroups` in the `ApiReferenceManager`. Probably due to the sort / localeCompare. \n\n![Image](https://github.com/user-attachments/assets/7747297e-0ef0-4340-b47d-b109ca1ee102)\n\nI wonder if we could push this logic to the build time and avoid runtime processing altogether. \n\n### Please provide a link to a minimal reproduction of the bug\n\nProfile https://angular.dev/api\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59423","RelatedDescription":"Open issue \"adev: mapManifestToApiGroups is slow\" (#59423)"},{"Id":"2775024457","IsPullRequest":false,"CreatedAt":"2025-01-08T11:53:32","Actor":"DaSchTour","Number":"59422","RawContent":null,"Title":"sourceLocale not used for LOCALE_ID in angular 19","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nDocumentation describes setting the `LOCALE_ID` with `sourceLocale` in angular.json. This doesn't work with angular19 and/or new application executor.\n\nLOCALE_ID is always `en-US`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nNX   Report complete - copy this into the issue template\n\nNode           : 22.11.0\nOS             : darwin-arm64\nNative Target  : aarch64-macos\nnpm            : 10.9.0\n\nnx                     : 20.3.0\n@nx/js                 : 20.3.0\n@nx/jest               : 20.3.0\n@nx/eslint             : 20.3.0\n@nx/workspace          : 20.3.0\n@nx/angular            : 20.3.0\n@nx/cypress            : 20.3.0\n@nx/devkit             : 20.3.0\n@nx/eslint-plugin      : 20.3.0\n@nx/module-federation  : 20.3.0\n@nx/plugin             : 20.3.0\n@nx/storybook          : 20.3.0\n@nx/web                : 20.3.0\n@nx/webpack            : 20.3.0\ntypescript             : 5.6.3\n---------------------------------------\nRegistered Plugins:\n@nx/eslint/plugin\n---------------------------------------\nCommunity plugins:\n@ngneat/hot-toast     : 6.1.0\n@ngneat/spectator     : 19.3.0\n@ngrx/component       : 19.0.0\n@ngrx/component-store : 19.0.0\n@ngrx/effects         : 19.0.0\n@ngrx/entity          : 19.0.0\n@ngrx/eslint-plugin   : 19.0.0\n@ngrx/operators       : 19.0.0\n@ngrx/router-store    : 19.0.0\n@ngrx/schematics      : 19.0.0\n@ngrx/store           : 19.0.0\n@ngrx/store-devtools  : 19.0.0\n@storybook/angular    : 8.4.7\nangular-eslint        : 19.0.2\napollo-angular        : 8.0.0\nng-mocks              : 14.13.1\n```\n\n### Anything else?\n\nThe documentation about sourceLocale could be extended a bit more, as it may not be clear where to set sourceLocale.","Url":"https://github.com/angular/angular/issues/59422","RelatedDescription":"Closed issue \"sourceLocale not used for LOCALE_ID in angular 19\" (#59422)"},{"Id":"2774441320","IsPullRequest":true,"CreatedAt":"2025-01-08T06:44:40","Actor":"arturovt","Number":"59420","RawContent":null,"Title":"refactor(common): prevent duplicating `X-Request-URL`","State":"open","Body":"The `X-Request-URL` string is duplicated in multiple places. It is worth moving it to a shared constant that would be minified to something like `var a=\"X-Request-URL\"` and referenced in all the used places.","Url":"https://github.com/angular/angular/pull/59420","RelatedDescription":"Open PR \"refactor(common): prevent duplicating `X-Request-URL`\" (#59420)"},{"Id":"2773895142","IsPullRequest":true,"CreatedAt":"2025-01-07T22:52:07","Actor":"arturovt","Number":"59418","RawContent":null,"Title":"refactor(common): tree-shake fetch backend","State":"open","Body":"This commit updates the code of the HTTP code to make the `FetchBackend` class tree-shakable. The class is only needed when `withFetch()` is called and it should not be included into bundles that do not use that feature.","Url":"https://github.com/angular/angular/pull/59418","RelatedDescription":"Open PR \"refactor(common): tree-shake fetch backend\" (#59418)"},{"Id":"2773793285","IsPullRequest":true,"CreatedAt":"2025-01-07T21:40:28","Actor":"arturovt","Number":"59416","RawContent":null,"Title":"refactor(core): change `LContainerFlags` to `const enum`","State":"open","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nNo = (function (e) {\r\n  return (\r\n    (e[(e.None = 0)] = \"None\"),\r\n    (e[(e.HasTransplantedViews = 2)] = \"HasTransplantedViews\"),\r\n    e\r\n  );\r\n})(No || {});\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inline values.","Url":"https://github.com/angular/angular/pull/59416","RelatedDescription":"Open PR \"refactor(core): change `LContainerFlags` to `const enum`\" (#59416)"},{"Id":"2773532640","IsPullRequest":false,"CreatedAt":"2025-01-07T20:04:02","Actor":"DhimantB","Number":"59414","RawContent":null,"Title":"Angular Forms Touched property of Form Control Private","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAngular 17 Version\n\n![Image](https://github.com/user-attachments/assets/71b3a6c4-0cc1-4089-87e6-16835c209eed)\n\nAngular 19 Version\n![Image](https://github.com/user-attachments/assets/cddcbb07-591d-4342-b265-438b923a9f27)\n\nWhy was this changed to private?\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59414","RelatedDescription":"Closed issue \"Angular Forms Touched property of Form Control Private\" (#59414)"},{"Id":"2773415546","IsPullRequest":true,"CreatedAt":"2025-01-07T17:47:58","Actor":"arturovt","Number":"59413","RawContent":null,"Title":"refactor(core): change `Restriction` to `const enum`","State":"open","Body":"Prior to this commit, the compiler produced:\r\n\r\n```js\r\nvar Restriction;\r\n(function (Restriction) {\r\n    Restriction[Restriction[\"I_AM_THE_JSACTION_FRAMEWORK\"] = 0] = \"I_AM_THE_JSACTION_FRAMEWORK\";\r\n})(Restriction || (Restriction = {}));\r\n```\r\n\r\nChanging to `const enum` allows it to be entirely dropped and inlines the `0` value.","Url":"https://github.com/angular/angular/pull/59413","RelatedDescription":"Open PR \"refactor(core): change `Restriction` to `const enum`\" (#59413)"},{"Id":"2773369509","IsPullRequest":true,"CreatedAt":"2025-01-07T17:21:02","Actor":"arturovt","Number":"59412","RawContent":null,"Title":"refactor(platform-browser): drop `BROWSER_MODULE_PROVIDERS_MARKER` in production","State":"open","Body":"In this commit, we switch from decorators (which also produce redundant metadata, such as in the `declareFactory` instruction) to the `inject` function to drop the `BROWSER_MODULE_PROVIDERS_MARKER` token in production. This token is actually provided only in development mode but is still referenced in the constructor due to the `@Inject(BROWSER_MODULE_PROVIDERS_MARKER)` decorator.","Url":"https://github.com/angular/angular/pull/59412","RelatedDescription":"Open PR \"refactor(platform-browser): drop `BROWSER_MODULE_PROVIDERS_MARKER` in production\" (#59412)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2776635891","IsPullRequest":false,"CreatedAt":"2025-01-09T00:59:38","Actor":"mattiLeBlanc","Number":"29300","RawContent":null,"Title":"Running Angular on a limited browser like Tizen OS 5.0, throwing unexpected token {","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\n<img width=\"1427\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/64130045-dd58-4e9d-9487-fb3260e15662\" />\n\nThis TV from 2019  (QA55Q60RAWXXY is part of the Q60R series, which was released in 2019) is not running my Angular app or even my test angular app (almost empty starter project).\nThe error is that I can catch in an `index.html` error handler is:\n<img width=\"487\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/db3f151c-e8f2-43fb-85e3-31a9ec96b633\" />\n`Unexpected token {`.\n\nAfter doing some research I found that this browser is having mostly es5 support and limited or no support of es6 functions.\nWhy Samsung did this, only some very wise man will know.\nBut anyhow,\nis there a way to support/polyfill whatever is missing?\nI remember older angular versions would be have core-js polyfills and those are now included in the CLI build.\nI am using browser agent to build for Safari 13 and greater but that is not solving the problem. The CLI doesn't let me go back to support Es5 only.\n\nDoes anyone have a solution for this or are we just unable to run a web app on this TVs browser?\nSecondary question: If I create a Tizen Web app using my angular dist files; will I run into the same issues of non support for es5?\n\n\n### Proposed solution\n\nHopefully getting some pointers on how to combat this issues which is been unresolved for weeks on our side and it is causing problems in our rollout of the TV App.\n\n### Alternatives considered\n\nusing Chromecasts or external sticks to ship a modern browser to people having this problematic TV's","Url":"https://github.com/angular/angular-cli/issues/29300","RelatedDescription":"Closed issue \"Running Angular on a limited browser like Tizen OS 5.0, throwing unexpected token {\" (#29300)"},{"Id":"2776429484","IsPullRequest":true,"CreatedAt":"2025-01-08T22:36:58","Actor":"angular-robot","Number":"29297","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `67627d2` -> `35cd777` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.1.0-next.3/19.1.0-rc.0) |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.1.0-next.3/19.1.0-rc.0) |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ff93dd9` -> `8214e31` |\n| angular/dev-infra | action | digest | `33ed067` -> `0b6f7cb` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.1.0-rc.0`](https://redirect.github.com/angular/components/releases/tag/19.1.0-rc.0)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.3...19.1.0-rc.0)\n\n##### 19.1.0-rc.0 \"paper-plane\" (2025-01-08)\n\n##### cdk-experimental\n\n| Commit | Description |\n| -- | -- |\n| [![perf - 9f73fed470](https://img.shields.io/badge/9f73fed470-perf-orange)](https://redirect.github.com/angular/components/commit/9f73fed4702f79a6461fd2cf86ecb311c9530a78) | **column-resize:** Use ResizeObserver to avoid layout thrashing ([#&#8203;30215](https://redirect.github.com/angular/components/issues/30215)) |\n\n##### material\n\n| Commit | Description |\n| -- | -- |\n| [![fix - 4e04540792](https://img.shields.io/badge/4e04540792-fix-green)](https://redirect.github.com/angular/components/commit/4e04540792b7742e6ef63dc7b16b6a3a8b909c54) | **datepicker:** simplify DI setup ([#&#8203;30247](https://redirect.github.com/angular/components/issues/30247)) |\n| [![fix - 66741b8132](https://img.shields.io/badge/66741b8132-fix-green)](https://redirect.github.com/angular/components/commit/66741b81321e6a70a16af2622fa6daf13732af80) | **sidenav:** remove deprecated API usage ([#&#8203;30268](https://redirect.github.com/angular/components/issues/30268)) |\n| [![fix - 31896c8a35](https://img.shields.io/badge/31896c8a35-fix-green)](https://redirect.github.com/angular/components/commit/31896c8a357ab06708f3224b4ce537f996cd3000) | **sidenav:** switch away from animations module ([#&#8203;30235](https://redirect.github.com/angular/components/issues/30235)) |\n| [![fix - 0c099ff024](https://img.shields.io/badge/0c099ff024-fix-green)](https://redirect.github.com/angular/components/commit/0c099ff02436b9c3d6fd2440df4cc1c4e70278ca) | **sort:** avoid center align for sort header |\n| [![fix - 1c1ebfd87b](https://img.shields.io/badge/1c1ebfd87b-fix-green)](https://redirect.github.com/angular/components/commit/1c1ebfd87be2cbbc56970b782c5d2b528002be02) | **sort:** show arrow on focus ([#&#8203;30217](https://redirect.github.com/angular/components/issues/30217)) |\n| [![fix - 2219b1198f](https://img.shields.io/badge/2219b1198f-fix-green)](https://redirect.github.com/angular/components/commit/2219b1198fa763ffd4ff7cb0656356745369d4f2) | **timepicker:** don't mark as touched when blurred while dropdown is open ([#&#8203;30228](https://redirect.github.com/angular/components/issues/30228)) |\n| [![perf - af29a92c01](https://img.shields.io/badge/af29a92c01-perf-orange)](https://redirect.github.com/angular/components/commit/af29a92c01fd425537a8f28fc71b24aeb027b0ab) | **tooltip:** Tiny but measurable optimization to MatTooltip construction. Defer hooking up to directionality changes until overlay is created. ([#&#8203;30214](https://redirect.github.com/angular/components/issues/30214)) |\n| [![perf - 980f9ba7bb](https://img.shields.io/badge/980f9ba7bb-perf-orange)](https://redirect.github.com/angular/components/commit/980f9ba7bb4fab8dfe4f3a4f30bb224ec635a626) | **tooltip:** Use afterNextRender to invoke aria describer to align layout updates with other components using afterNextRender. ([#&#8203;30265](https://redirect.github.com/angular/components/issues/30265)) |\n\n##### cdk\n\n| Commit | Description |\n| -- | -- |\n| [![fix - 52758beab0](https://img.shields.io/badge/52758beab0-fix-green)](https://redirect.github.com/angular/components/commit/52758beab0997341afd651b339e2f4825e99409d) | **menu:** avoid re-opening the menu on enter ([#&#8203;30263](https://redirect.github.com/angular/components/issues/30263)) |\n| [![fix - 2be0afcfb5](https://img.shields.io/badge/2be0afcfb5-fix-green)](https://redirect.github.com/angular/components/commit/2be0afcfb54b16dd426e5ad65f6aa52301dc2d45) | **menu:** avoid resetting the scroll position when using the mouse ([#&#8203;30249](https://redirect.github.com/angular/components/issues/30249)) |\n| [![fix - e421765d8d](https://img.shields.io/badge/e421765d8d-fix-green)](https://redirect.github.com/angular/components/commit/e421765d8d05806be46ff53ce92ed43e4a82dbf9) | **menu:** not responding to position changes ([#&#8203;30234](https://redirect.github.com/angular/components/issues/30234)) |\n| [![fix - 5c75bbecb2](https://img.shields.io/badge/5c75bbecb2-fix-green)](https://redirect.github.com/angular/components/commit/5c75bbecb24f49779baf86203a7e626d34e39f8c) | **scrolling:** avoid SSR error in CdkVirtualScrollableWindow ([#&#8203;30259](https://redirect.github.com/angular/components/issues/30259)) |\n| [![fix - 0f053ff685](https://img.shields.io/badge/0f053ff685-fix-green)](https://redirect.github.com/angular/components/commit/0f053ff6858b57aa4d1816cfa927f7e7284813af) | **tree:** expandAll not expanding all nodes ([#&#8203;30226](https://redirect.github.com/angular/components/issues/30226)) |\n| [![perf - d721f0c2bc](https://img.shields.io/badge/d721f0c2bc-perf-orange)](https://redirect.github.com/angular/components/commit/d721f0c2bcfb4bdfe4cc0655d61ca0537a6e4bf5) | **table:** Use afterNextRender for sticky styling. Fixes a performance regression dating back to [#&#8203;28393](https://redirect.github.com/angular/components/issues/28393) and removes need for coalesced sticky styler. ([#&#8203;30242](https://redirect.github.com/angular/components/issues/30242)) |\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45Ni4wIiwidXBkYXRlZEluVmVyIjoiMzkuOTYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29297","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29297)"},{"Id":"2776433976","IsPullRequest":true,"CreatedAt":"2025-01-08T22:02:59","Actor":"angular-robot","Number":"29299","RawContent":null,"Title":"build: update dependency aspect_rules_ts to v3.4.0","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_rules_ts](https://redirect.github.com/aspect-build/rules_ts) | http_archive | minor | `v3.3.2` -> `v3.4.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/rules_ts (aspect_rules_ts)</summary>\n\n### [`v3.4.0`](https://redirect.github.com/aspect-build/rules_ts/releases/tag/v3.4.0)\n\n[Compare Source](https://redirect.github.com/aspect-build/rules_ts/compare/v3.3.2...v3.4.0)\n\n#### Using [Bzlmod]:\n\nAdd to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_rules_ts\", version = \"3.4.0\")\n\nrules_ts_ext = use_extension(\"@&#8203;aspect_rules_ts//ts:extensions.bzl\", \"ext\", dev_dependency = True)\n\nrules_ts_ext.deps(\n    ts_version_from = \"//:package.json\",\n)\n\nuse_repo(rules_ts_ext, \"npm_typescript\")\n```\n\n[Bzlmod]: https://bazel.build/build/bzlmod\n\n#### Using legacy WORKSPACE\n\nPaste this snippet into your `WORKSPACE` file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"aspect_rules_ts\",\n    sha256 = \"013a10b2b457add73b081780e604778eb50a141709f9194298f97761acdcc169\",\n    strip_prefix = \"rules_ts-3.4.0\",\n    url = \"https://github.com/aspect-build/rules_ts/releases/download/v3.4.0/rules_ts-v3.4.0.tar.gz\",\n)\n\n##################\n\n### rules_ts setup #\n##################\n\n### Fetches the rules_ts dependencies.\n### If you want to have a different version of some dependency,\n\n### you should fetch it *before* calling this.\n### Alternatively, you can skip calling this function, so long as you've\n\n### already fetched all the dependencies.\nload(\"@&#8203;aspect_rules_ts//ts:repositories.bzl\", \"rules_ts_dependencies\")\n\nrules_ts_dependencies(\n\n### This keeps the TypeScript version in-sync with the editor, which is typically best.\n    ts_version_from = \"//:package.json\",\n\n### Alternatively, you could pick a specific version, or use\n### load(\"@&#8203;aspect_rules_ts//ts:repositories.bzl\", \"LATEST_TYPESCRIPT_VERSION\")\n\n### ts_version = LATEST_TYPESCRIPT_VERSION\n)\n\nload(\"@&#8203;aspect_rules_js//js:repositories.bzl\", \"rules_js_dependencies\")\n\nrules_js_dependencies()\n\nload(\"@&#8203;aspect_rules_js//js:toolchains.bzl\", \"DEFAULT_NODE_VERSION\", \"rules_js_register_toolchains\")\n\nrules_js_register_toolchains(node_version = DEFAULT_NODE_VERSION)\n\n### Register aspect_bazel_lib toolchains;\n### If you use npm_translate_lock or npm_import from aspect_rules_js you can omit this block.\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_copy_directory_toolchains\", \"register_copy_to_directory_toolchains\")\n\nregister_copy_directory_toolchains()\n\nregister_copy_to_directory_toolchains()\n```\n\nTo use rules_ts with bazel-lib 2.x, you must additionally register the coreutils toolchain.\n\n```starlark\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_coreutils_toolchains\")\n\nregister_coreutils_toolchains()\n```\n\n#### What's Changed\n\n-   Changes by create-pull-request action by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/aspect-build/rules_ts/pull/738](https://redirect.github.com/aspect-build/rules_ts/pull/738)\n-   fix: `source_map = True, allow_js = True` outputs source maps for JS inputs by [@&#8203;jfirebaugh](https://redirect.github.com/jfirebaugh) in [https://github.com/aspect-build/rules_ts/pull/749](https://redirect.github.com/aspect-build/rules_ts/pull/749)\n-   feat: add transitive typecheck output group by [@&#8203;MichaelMitchell-at](https://redirect.github.com/MichaelMitchell-at) in [https://github.com/aspect-build/rules_ts/pull/714](https://redirect.github.com/aspect-build/rules_ts/pull/714)\n-   refactor: cleanup ts_project(isolated_typecheck) logic by [@&#8203;jbedard](https://redirect.github.com/jbedard) in [https://github.com/aspect-build/rules_ts/pull/751](https://redirect.github.com/aspect-build/rules_ts/pull/751)\n-   chore: switch to Aspect Workflows on Buildkite by [@&#8203;gregmagolan](https://redirect.github.com/gregmagolan) in [https://github.com/aspect-build/rules_ts/pull/753](https://redirect.github.com/aspect-build/rules_ts/pull/753)\n-   feat: validate tsconfig outDir vs ts_project(out_dir) by [@&#8203;Mivr](https://redirect.github.com/Mivr) in [https://github.com/aspect-build/rules_ts/pull/730](https://redirect.github.com/aspect-build/rules_ts/pull/730)\n\n#### New Contributors\n\n-   [@&#8203;Mivr](https://redirect.github.com/Mivr) made their first contribution in [https://github.com/aspect-build/rules_ts/pull/730](https://redirect.github.com/aspect-build/rules_ts/pull/730)\n\n**Full Changelog**: https://github.com/aspect-build/rules_ts/compare/v3.3.2...v3.4.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45Ni4wIiwidXBkYXRlZEluVmVyIjoiMzkuOTYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29299","RelatedDescription":"Open PR \"build: update dependency aspect_rules_ts to v3.4.0\" (#29299)"},{"Id":"2776433049","IsPullRequest":true,"CreatedAt":"2025-01-08T22:02:15","Actor":"angular-robot","Number":"29298","RawContent":null,"Title":"build: update dependency typescript to v5.7.3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | devDependencies | patch | [`5.7.2` -> `5.7.3`](https://renovatebot.com/diffs/npm/typescript/5.7.2/5.7.3) |\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | resolutions | patch | [`5.7.2` -> `5.7.3`](https://renovatebot.com/diffs/npm/typescript/5.7.2/5.7.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>microsoft/TypeScript (typescript)</summary>\n\n### [`v5.7.3`](https://redirect.github.com/microsoft/TypeScript/releases/tag/v5.7.3): TypeScript 5.7.3\n\n[Compare Source](https://redirect.github.com/microsoft/TypeScript/compare/v5.7.2...v5.7.3)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-7/).\n\n-   [fixed issues query for Typescript 5.7.0 (Beta)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.7.0%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.7.1 (RC)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.7.1%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.7.2 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.7.2%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.7.3 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.7.2%22+is%3Aclosed+).\n\nDownloads are available on [npm](https://www.npmjs.com/package/typescript)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45Ni4wIiwidXBkYXRlZEluVmVyIjoiMzkuOTYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29298","RelatedDescription":"Open PR \"build: update dependency typescript to v5.7.3\" (#29298)"},{"Id":"2776420748","IsPullRequest":false,"CreatedAt":"2025-01-08T21:56:08","Actor":"felipeabs01","Number":"29296","RawContent":null,"Title":"Angular 17 stuck on \"Generating browser application bundles (phase: building)","State":"closed","Body":"### Command\n\nserve, build\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nwhen try start my  angular 17 project in my desktop pc, I got stock on \"/ Generating browser application bundles (phase: building)...\", but it is fine in my laptop\n![Image](https://github.com/user-attachments/assets/81f3c4fd-dec5-4b9c-8a08-f4c34c64ad15)\n\n\nwhen i running ng serve --verbose show\n\nGenerating browser application bundles (phase: building)...    [webpack.cache.PackFileCacheStrategy] No pack exists at C:\\Trabajos\\migracion17\\ayni\\.cache\\17.3.11\\angular-webpack\\087d54a6f639b45df4023d7b9110c2ef9f1a79f9.pack: Error: ENOENT: no such file or directory, stat 'C:\\Trabajos\\migracion17\\ayni\\.cache\\17.3.11\\angular-webpack\\087d54a6f639b45df4023d7b9110c2ef9f1a79f9\\index.pack'\n\n### Minimal Reproduction\n\npackage.json\n\n{\n  \"name\": \"ayni\",\n  \"version\": \"0.0.3\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"start:dev\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng serve -c=dev --port=4202\",\n    \"start:qa\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng serve -c=qa --port=4201\",\n    \"ng-hm\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"publicar-desa\": \"ng build -c=dev --output-path dist/desa\",\n    \"publicar-qa\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng build -c=qa\",\n    \"publicar-erp\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng build -c=erp --output-path dist/erp\",\n    \"publicar-cap\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng build -c=cap --output-path dist/cap\",\n    \"serve-desa\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng serve -c=dev\",\n    \"serve-cap\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng serve -c=cap\",\n    \"serve-erp\": \"node --max_old_space_size=8196 ./node_modules/@angular/cli/bin/ng serve -c=erp\",\n    \"publicar-desaycap\": \"npm run publicar-desa && rm -rf dist/cap && cp -av dist/desa dist/cap && sed -i 's/vainangularapp/cap/g' dist/cap/main*\",\n    \"publicar-todo\": \"npm run publicar-erp && rm -rf dist/cap && rm -rf dist/desa && cp -av dist/erp dist/cap && cp -av dist/erp dist/desa && sed -i 's/erpangular/cap/g' dist/cap/main* && sed -i 's/erpangular/vainangularapp/g' dist/desa/main*\",\n    \"reinstall-core\": \"cd node_modules && rmdir vain-core /Q/S && cd ../ && npm install\",\n    \"reinstall-shared\": \"cd node_modules && rmdir vain-shared /Q/S && cd ../ && npm install\",\n    \"mapear-desa\": \"npm i typescript@4.7.4 && node scripts/mapear-desa.js && npm i typescript@4.8.4\",\n    \"mapear-cap\": \"node scripts/mapear-cap.js\",\n    \"mapear-prod\": \"node scripts/mapear-erp.js\",\n    \"mapear-local\": \"node scripts/mapear-local.js\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^17.3.5\",\n    \"@angular/cdk\": \"^16.2.1\",\n    \"@angular/common\": \"^17.3.5\",\n    \"@angular/compiler\": \"^17.3.5\",\n    \"@angular/core\": \"^17.3.5\",\n    \"@angular/flex-layout\": \"^14.0.0-beta.40\",\n    \"@angular/forms\": \"^17.3.5\",\n    \"@angular/localize\": \"^17.3.5\",\n    \"@angular/material\": \"^14.0.4\",\n    \"@angular/platform-browser\": \"^17.3.5\",\n    \"@angular/platform-browser-dynamic\": \"^17.3.5\",\n    \"@angular/router\": \"^17.3.5\",\n    \"@auth0/angular-jwt\": \"^5.0.2\",\n    \"@fullcalendar/angular\": \"^6.0.0\",\n    \"@fullcalendar/core\": \"^6.0.0\",\n    \"@fullcalendar/daygrid\": \"^6.0.0\",\n    \"@fullcalendar/interaction\": \"^6.0.0\",\n    \"@fullcalendar/list\": \"^6.0.0\",\n    \"@fullcalendar/timegrid\": \"^6.0.0\",\n    \"@iplab/ngx-file-upload\": \"^3.3.3\",\n    \"@kolkov/angular-editor\": \"^3.0.0-beta.0\",\n    \"@microsoft/signalr\": \"^6.0.0\",\n    \"@ng-idle/core\": \"^13.0.0\",\n    \"@ng-idle/keepalive\": \"^13.0.0\",\n    \"@ng-select/ng-select\": \"^10.0.3\",\n    \"@ngrx/store\": \"^16.2.0\",\n    \"@ngrx/store-devtools\": \"^11.0.1\",\n    \"@swimlane/ngx-charts\": \"^21.1.2\",\n    \"@swimlane/ngx-datatable\": \"^20.1.0\",\n    \"@types/google.visualization\": \"0.0.60\",\n    \"@videogular/ngx-videogular\": \"^8.0.0\",\n    \"angular-google-charts\": \"^2.1.0\",\n    \"bootstrap\": \"^5.0.1\",\n    \"chart.js\": \"^3.6.2\",\n    \"core-js\": \"3.9.1\",\n    \"file-saver\": \"^2.0.5\",\n    \"flag-icon-css\": \"^4.1.6\",\n    \"moment\": \"^2.29.1\",\n    \"ng2-charts\": \"^3.0.1\",\n    \"ng2-pdf-viewer\": \"^10.4.0\",\n    \"ng2-pdfjs-viewer\": \"^6.0.1\",\n    \"ngx-auto-unsubscribe\": \"^3.0.1\",\n    \"ngx-capture\": \"^0.12.2\",\n    \"ngx-color-picker\": \"^15.0.0\",\n    \"ngx-easy-table\": \"^15.4.1\",\n    \"ngx-extended-pdf-viewer\": \"^15.2.2\",\n    \"ngx-json-viewer\": \"^3.0.2\",\n    \"ngx-mask\": \"^14.0.0\",\n    \"ngx-spinner\": \"^13.0.0\",\n    \"ngx-toastr\": \"^16.0.2\",\n    \"node\": \"^18.13.0\",\n    \"npm\": \"^9.5.1\",\n    \"npm-install-peers\": \"^1.2.1\",\n    \"primeflex\": \"^3.1.0\",\n    \"primeicons\": \"^4.1.0\",\n    \"primeng\": \"^14.2.3\",\n    \"quill\": \"^2.0.3\",\n    \"rxjs\": \"~6.6.6\",\n    \"ts-md5\": \"^1.2.9\",\n    \"tslib\": \"^2.1.0\",\n    \"webpack-dev-server\": \"^4.15.1\",\n    \"zone.js\": \"^0.14\"\n  },\n  \"devDependencies\": {\n    \"@angular-builders/custom-webpack\": \"^19.0.0\",\n    \"@angular-devkit/build-angular\": \"^17.3.11\",\n    \"@angular/cli\": \"^17.3.5\",\n    \"@angular/language-service\": \"^17.3.5\",\n    \"@types/jasmine\": \"~3.6.6\",\n    \"@types/jasminewd2\": \"~2.0.8\",\n    \"@types/node\": \"^14.14.34\",\n    \"codelyzer\": \"^6.0.1\",\n    \"jasmine-core\": \"~3.6.0\",\n    \"jasmine-spec-reporter\": \"~6.0.0\",\n    \"karma\": \"~6.3.4\",\n    \"karma-chrome-launcher\": \"~3.1.0\",\n    \"karma-coverage-istanbul-reporter\": \"~3.0.3\",\n    \"karma-jasmine\": \"~4.0.1\",\n    \"karma-jasmine-html-reporter\": \"^1.5.4\",\n    \"ng-packagr\": \"^17.3.0\",\n    \"protractor\": \"^3.3.0\",\n    \"shelljs\": \"^0.8.4\",\n    \"swagger-typescript-api\": \"^9.2.0\",\n    \"ts-node\": \"~9.1.1\",\n    \"tslint\": \"~6.1.0\",\n    \"typescript\": \"^5.2\",\n    \"webpack\": \"^5.97.1\"\n  }\n}\n\n\n\n\n\n\nangular.json\n\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"cli\": {\n    \"cache\": {\n      \"enabled\": true,\n      \"path\": \".cache\",\n      \"environment\": \"all\"\n  },\n    \"analytics\": false\n  },\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"projects\": {\n    \"ayni\": {\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"projectType\": \"application\",\n      \"prefix\": \"app\",\n      \"schematics\": {\n        \"@schematics/angular:component\": {\n          \"style\": \"scss\"\n        }\n      },\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"allowedCommonJsDependencies\": [\n              \"moment/min/locales\",\n              \"moment/locale/es\"\n            ],\n            \"preserveSymlinks\": true,\n            \"outputPath\": \"dist/ayni\",\n            \"resourcesOutputPath\": \"images\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"aot\": true,\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"src/tsconfig.app.json\",\n            \"assets\": [\n              \"src/erp.ico\",\n              \"src/assets\",\n              \"src/web.config\",\n              {\n                \"glob\": \"**/*\",\n                \"input\": \"node_modules/ngx-extended-pdf-viewer/assets/\",\n                \"output\": \"/assets/\"\n              },\n              {\n                \"glob\": \"**/*\",\n                \"input\": \"./node_modules/@kolkov/angular-editor/assets/\",\n                \"output\": \"./assets/fonts/\"\n              }\n            ],\n            \"stylePreprocessorOptions\": {\n               \"includePaths\": [\"node_modules\"]\n            }, \n            \"styles\": [\n              \"src/styles.scss\",\n              \"src/theme.scss\",\n              \"node_modules/primeicons/primeicons.css\",\n              \"node_modules/primeflex/primeflex.css\",\n              \"node_modules/primeng/resources/primeng.min.css\",\n              \"node_modules/quill/dist/quill.core.css\",\n              \"node_modules/quill/dist/quill.snow.css\"\n            ],\n            \"scripts\": [\n            ],\n            \"vendorChunk\": true,\n            \"extractLicenses\": false,\n            \"buildOptimizer\": true,\n            \"sourceMap\": true,\n            \"optimization\": false,\n            \"namedChunks\": true\n          },\n          \"configurations\": {\n            \n            \"production\": {\n            \"buildOptimizer\": false,\n            \"optimization\": false,\n            \"vendorChunk\": true,\n            \"extractLicenses\": false,\n            \"sourceMap\": true,\n            \"namedChunks\": true\n          },\n            \"development\": {\n            \"buildOptimizer\": false,\n            \"optimization\": false,\n            \"vendorChunk\": true,\n            \"extractLicenses\": false,\n            \"sourceMap\": true,\n            \"namedChunks\": true\n          },\n            \"erp\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.ts\"\n                }\n              ],\n              \"optimization\": true,\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"vendorChunk\": false,\n              \"buildOptimizer\": true,\n              \"budgets\": [\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"6kb\"\n                }\n              ]\n            },\n            \"qa\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.qa.ts\"\n                }\n              ],\n              \"optimization\": true,\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"vendorChunk\": false,\n              \"buildOptimizer\": true,\n              \"budgets\": [\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"6kb\"\n                }\n              ]\n            },\n            \"cap\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.cap.ts\"\n                }\n              ],\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"vendorChunk\": false,\n              \"budgets\": [\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"6kb\"\n                }\n              ]\n            },\n            \"dev\": {\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"vendorChunk\": true,\n              \"budgets\": [\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"6kb\"\n                }\n              ]\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"defaultConfiguration\": \"development\",\n          \"options\": {\n            \"buildTarget\": \"ayni:build\"\n          },\n          \"configurations\": {\n            \"development\": {\n              \"browserTarget\": \"ayni:build:development\"\n             },\n            \"production\": {\n              \"buildTarget\": \"ayni:build:production\"\n            },\n            \"dev\": {\n              \"buildTarget\": \"ayni:build:dev\"\n            },\n            \"qa\": {\n              \"buildTarget\": \"ayni:build:qa\"\n            },\n            \"cap\": {\n              \"buildTarget\": \"ayni:build:cap\"\n            },\n            \"erp\": {\n              \"buildTarget\": \"ayni:build:erp\"\n            }\n\n          }\n        },\n        \"extract-i18n\": {\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n          \"options\": {\n            \"buildTarget\": \"ayni:build\"\n          }\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"main\": \"src/test.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"src/tsconfig.spec.json\",\n            \"karmaConfig\": \"src/karma.conf.js\",\n            \"styles\": [\n              \"./node_modules/@angular/material/prebuilt-themes/indigo-pink.css\",\n              \"src/styles.scss\",\n              \"node_modules/flag-icon-css/css/flag-icon.min.css\"\n            ],\n            \"scripts\": [],\n            \"assets\": [\n              \"src/erp.ico\",\n              \"src/assets\"\n            ]\n          }\n        }\n      }\n    },\n    \"ayni-e2e\": {\n      \"root\": \"e2e/\",\n      \"projectType\": \"application\",\n      \"prefix\": \"\",\n      \"architect\": {\n        \"e2e\": {\n          \"builder\": \"@angular-devkit/build-angular:protractor\",\n          \"options\": {\n            \"protractorConfig\": \"e2e/protractor.conf.js\",\n            \"devServerTarget\": \"ayni:serve\"\n          },\n          \"configurations\": {\n            \"production\": {\n              \"devServerTarget\": \"ayni:serve:production\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n\\ Generating browser application bundles (phase: building)...    [webpack.cache.PackFileCacheStrategy] No pack exists at C:\\Trabajos\\migracion17\\ayni\\.cache\\17.3.11\\angular-webpack\\087d54a6f639b45df4023d7b9110c2ef9f1a79f9.pack: Error: ENOENT: no such file or directory, stat 'C:\\Trabajos\\migracion17\\ayni\\.cache\\17.3.11\\angular-webpack\\087d54a6f639b45df4023d7b9110c2ef9f1a79f9\\index.pack'\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29296","RelatedDescription":"Closed issue \"Angular 17 stuck on \"Generating browser application bundles (phase: building)\" (#29296)"},{"Id":"2776209987","IsPullRequest":true,"CreatedAt":"2025-01-08T20:13:08","Actor":"jkrems","Number":"29295","RawContent":null,"Title":"Update next branch to reflect new release-train \"v19.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v19.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/29295","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v19.2.0-next.0\".\" (#29295)"},{"Id":"2776184753","IsPullRequest":true,"CreatedAt":"2025-01-08T19:54:57","Actor":"jkrems","Number":"29294","RawContent":null,"Title":"Bump version to \"v19.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29294","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-rc.0\" with changelog.\" (#29294)"},{"Id":"2774380090","IsPullRequest":true,"CreatedAt":"2025-01-08T19:34:47","Actor":"angular-robot","Number":"29271","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `02b9062` -> `4c103ca` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `cfd7a06` -> `169e71f` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `e025d18` -> `67627d2` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `cc02bb3` -> `5ba6ad0` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `76efb05` -> `3b597d6` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `ed3a836` -> `1a3c02c` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `8099a88` -> `dce1169` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `7876e9e` -> `f343af0` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `8990907` -> `6c50dd9` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `3dae05c` -> `f6bf914` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `052a2f2` -> `a5031b5` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `9d6e61a` -> `9580418` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `3bf0933` -> `a86bb7b` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `34c97ca` -> `ff93dd9` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `b48e676` -> `d887b36` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e1c6e91` -> `b760ddf` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `737586f` -> `49db5ed` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `bd057fc` -> `eb1b938` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.1.0-next.4/19.1.0-rc.0) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `140d9c8` -> `14960de` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.1.0-next.4` -> `19.1.0-rc.0`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.1.0-next.4/19.1.0-rc.0) |\n| angular/dev-infra | action | digest | `359350b` -> `33ed067` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.1.0-rc.0`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1910-rc0-2025-01-08)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.0-next.4...19.1.0-rc.0)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ceadd28ea1](https://redirect.github.com/angular/angular/commit/ceadd28ea12140e8e78cdb706aff0487f5a87a3c) | fix | allow $any in two-way bindings ([#&#8203;59362](https://redirect.github.com/angular/angular/pull/59362)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ce3b6641fb](https://redirect.github.com/angular/angular/commit/ce3b6641fbbbc968ee2ddf037dbc5ea70b8f1b07) | fix | account for more expression types when determining HMR dependencies ([#&#8203;59323](https://redirect.github.com/angular/angular/pull/59323)) |\n| [ee99879fdc](https://redirect.github.com/angular/angular/commit/ee99879fdc66f98dca80524c702304066c9882d5) | fix | preserve defer block dependencies during HMR when class metadata is disabled ([#&#8203;59313](https://redirect.github.com/angular/angular/pull/59313)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9870b643bf](https://redirect.github.com/angular/angular/commit/9870b643bff46f089a3f0a30514fb7e062a66d56) | fix | Defer afterRender until after first CD ([#&#8203;58250](https://redirect.github.com/angular/angular/pull/58250)) |\n| [a5fc962094](https://redirect.github.com/angular/angular/commit/a5fc9620948c59da2146d46d27de388839b93254) | fix | Don't run effects in check no changes pass ([#&#8203;58250](https://redirect.github.com/angular/angular/pull/58250)) |\n| [5c0d68804e](https://redirect.github.com/angular/angular/commit/5c0d68804e03bcd425e5398e08d9cbe1846b21ca) | fix | Ensure that a destroyed `effect` never run. ([#&#8203;59415](https://redirect.github.com/angular/angular/pull/59415)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d298d25426](https://redirect.github.com/angular/angular/commit/d298d254269ff759111fbdef7736bc8b713638bc) | feat | add schematic to clean up unused imports ([#&#8203;59353](https://redirect.github.com/angular/angular/pull/59353)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8c5db3cfb7](https://redirect.github.com/angular/angular/commit/8c5db3cfb75700dd64f4c8c073554c7086835950) | fix | avoid circular DI error in async renderer ([#&#8203;59256](https://redirect.github.com/angular/angular/pull/59256)) |\n| [0e23f20c41](https://redirect.github.com/angular/angular/commit/0e23f20c4117ffd5c871549a8012b8e22b03b5f4) | fix | styles not replaced during HMR when using animations renderer ([#&#8203;59393](https://redirect.github.com/angular/angular/pull/59393)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5ac6f065ab](https://redirect.github.com/angular/angular/commit/5ac6f065ab370ae99657c7a230bfd7ebf1d2f587) | fix | avoid component ID collisions with user code ([#&#8203;59300](https://redirect.github.com/angular/angular/pull/59300)) |\n| [52a6710f54](https://redirect.github.com/angular/angular/commit/52a6710f54bcec81f4cde23a78b9f78d038156c5) | fix | complete router `events` on dispose ([#&#8203;59327](https://redirect.github.com/angular/angular/pull/59327)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45MS4yIiwidXBkYXRlZEluVmVyIjoiMzkuOTYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29271","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29271)"},{"Id":"2776059471","IsPullRequest":true,"CreatedAt":"2025-01-08T18:34:47","Actor":"jkrems","Number":"29293","RawContent":null,"Title":"docs: release notes for the v19.0.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29293","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.7 release\" (#29293)"},{"Id":"2776015457","IsPullRequest":true,"CreatedAt":"2025-01-08T18:32:55","Actor":"jkrems","Number":"29291","RawContent":null,"Title":"Bump version to \"v19.0.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29291","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.7\" with changelog.\" (#29291)"},{"Id":"2776030293","IsPullRequest":true,"CreatedAt":"2025-01-08T18:25:49","Actor":"josephperrott","Number":"29292","RawContent":null,"Title":"build: enable rulesJsInteropMode for releases","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29292","RelatedDescription":"Closed or merged PR \"build: enable rulesJsInteropMode for releases\" (#29292)"},{"Id":"2775739291","IsPullRequest":true,"CreatedAt":"2025-01-08T16:28:02","Actor":"alan-agius4","Number":"29289","RawContent":null,"Title":"fix(@angular/build): warn when `@angular/localize/init` is imported directly","State":"closed","Body":"\r\nImporting `@angular/localize/init` directly can cause unpredictable behavior, as highlighted in multiple reports:\r\n- https://github.com/angular/angular/issues/59422\r\n- https://github.com/angular/angular/issues/48545\r\n- https://github.com/angular/angular/issues/59405\r\n","Url":"https://github.com/angular/angular-cli/pull/29289","RelatedDescription":"Closed or merged PR \"fix(@angular/build): warn when `@angular/localize/init` is imported directly\" (#29289)"},{"Id":"2775774846","IsPullRequest":true,"CreatedAt":"2025-01-08T16:08:34","Actor":"devversion","Number":"29290","RawContent":null,"Title":"build: never use interop targets for ts compilations","State":"open","Body":"* Removes `interop_deps` from the `ts_project` interop macro.\r\n* Keeps `_rjs` suffix for now as we still need the interop targets for e.g. `jasmine_node_test` and the `rules_nodejs` linker.\r\n\r\nIn follow-ups we can remove the suffix, and interop layer.","Url":"https://github.com/angular/angular-cli/pull/29290","RelatedDescription":"Open PR \"build: never use interop targets for ts compilations\" (#29290)"},{"Id":"2775627227","IsPullRequest":true,"CreatedAt":"2025-01-08T16:02:06","Actor":"devversion","Number":"29287","RawContent":null,"Title":"[19.0.x] build: migrate `@angular/ssr` to `ts_project`","State":"closed","Body":"Migrates `@angular/ssr` to `ts_project`. Possible after various upstream fixes for `ng_package` and interop changes.\r\n\r\nPatch of #29272 \r\n","Url":"https://github.com/angular/angular-cli/pull/29287","RelatedDescription":"Closed or merged PR \"[19.0.x] build: migrate `@angular/ssr` to `ts_project`\" (#29287)"},{"Id":"2775704602","IsPullRequest":true,"CreatedAt":"2025-01-08T15:58:55","Actor":"josephperrott","Number":"29288","RawContent":null,"Title":"ci: prevent `NpmPackageExtract` results from being placed remote cache","State":"closed","Body":"Placing all of the node_modules files into remote cache is too much\r\n","Url":"https://github.com/angular/angular-cli/pull/29288","RelatedDescription":"Closed or merged PR \"ci: prevent `NpmPackageExtract` results from being placed remote cache\" (#29288)"},{"Id":"2774696884","IsPullRequest":true,"CreatedAt":"2025-01-08T15:42:20","Actor":"devversion","Number":"29272","RawContent":null,"Title":"build: migrate `@angular/ssr` to `ts_project`","State":"closed","Body":"Migrates `@angular/ssr` to `ts_project`. Possible after various upstream fixes for `ng_package` and interop changes.","Url":"https://github.com/angular/angular-cli/pull/29272","RelatedDescription":"Closed or merged PR \"build: migrate `@angular/ssr` to `ts_project`\" (#29272)"},{"Id":"2775573823","IsPullRequest":true,"CreatedAt":"2025-01-08T14:53:35","Actor":"alan-agius4","Number":"29286","RawContent":null,"Title":"fix(@angular/ssr): throw error when using route matchers","State":"closed","Body":"Route matchers are not currently supported in Angular SSR. This commit ensures an error is issued when a route matcher is detected.\r\n","Url":"https://github.com/angular/angular-cli/pull/29286","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): throw error when using route matchers\" (#29286)"},{"Id":"2775175828","IsPullRequest":false,"CreatedAt":"2025-01-08T14:48:19","Actor":"HazzMan2409","Number":"29278","RawContent":null,"Title":"Define build option does not define values for prebundling","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe define build option is not passed on for prebundling https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/tools/vite/utils.ts#L101 and so library code that relies on a global variable being set cannot be prebundled.\n\n### Minimal Reproduction\n\nPre-bundle a library that relies on a global.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.12.1\nPackage Manager: npm 10.5.0\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29278","RelatedDescription":"Closed issue \"Define build option does not define values for prebundling\" (#29278)"},{"Id":"2775219717","IsPullRequest":true,"CreatedAt":"2025-01-08T14:48:18","Actor":"alan-agius4","Number":"29279","RawContent":null,"Title":"fix(@angular/build): pass `define` option defined in application builder to Vite prebundling","State":"closed","Body":"This update ensures that the `define` option is correctly passed to Vite during the prebundling phase of the application builder, improving compatibility and optimization of the build process.\r\n\r\nCloses #29278\r\n","Url":"https://github.com/angular/angular-cli/pull/29279","RelatedDescription":"Closed or merged PR \"fix(@angular/build): pass `define` option defined in application builder to Vite prebundling\" (#29279)"},{"Id":"2774989384","IsPullRequest":true,"CreatedAt":"2025-01-08T14:47:52","Actor":"alan-agius4","Number":"29276","RawContent":null,"Title":"fix(@angular/build): skip vite SSR warmup file configuration when SSR is disabled","State":"closed","Body":"\r\nThis change addresses recent updates in Vite that trigger pre-transform errors when SSR files (`/server.mjs`, `/main.server.mjs`) are missing. Skipping the configuration prevents unnecessary errors during the build process.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29276","RelatedDescription":"Closed or merged PR \"fix(@angular/build): skip vite SSR warmup file configuration when SSR is disabled\" (#29276)"},{"Id":"2775569537","IsPullRequest":false,"CreatedAt":"2025-01-08T14:45:45","Actor":"cesco69","Number":"29285","RawContent":null,"Title":"Optimize bundle size by minify private field","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAfter building an Angular project, private fields in classes (e.g., components, services, pipes) retain their original names instead of being minified. This can potentially increase bundle size.\n\nConsider the following TypeScript class before build:\n```ts\nclass MyService  {\n    constructor(\n        private translationService: TranslationService, \n        private authService: AuthService) {\n    }\n\n    getActiveLang() {\n        return this.translationService.getActiveLang()\n    }\n\n    getUserMail() {\n        const user = this.authService.currentUser();\n        return user  ? user .email : null\n    }          \n}\n```\nAfter building, the JavaScript output looks like this:\n```js\nclass u {\n    constructor(_, t) {\n        this.translationService = _,\n        this.authService = t\n    }\n    getActiveLang() {\n        return this.translationService.getActiveLang()\n    }\n    getUserMail() {\n        const _ = this.authService.currentUser();\n        return _ ? _.email : null\n    }          \n}\n```\nThe private fields (`translationService` and `authService`) should be aggressively minified to improve bundle size. The expected output could be:\n```js\nclass u {\n    constructor(_, t) {\n        this._ = _,\n        this.t = t\n    }\n    getActiveLang() {\n        return this.t.getActiveLang()\n    }\n    getUserMail() {\n        const _ = this._.currentUser();\n        return _ ? _.email : null\n    }          \n}\n```\n\n### Describe the solution you'd like\n\nIntroduce a new configuration option in angularCompilerOptions to enable aggressive minification of private fields across Angular classes, such as:\n```json\n{\n  \"angularCompilerOptions\": {\n    \"strictPrivate\": true,\n  }\n}\n```\nThis feature could be opt-in to ensure backward compatibility with existing projects, allowing developers to enable or disable aggressive minification as needed.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29285","RelatedDescription":"Closed issue \"Optimize bundle size by minify private field\" (#29285)"},{"Id":"2775304659","IsPullRequest":true,"CreatedAt":"2025-01-08T14:14:35","Actor":"alan-agius4","Number":"29281","RawContent":null,"Title":"refactor(@angular/build): remove redundant ESLint disabling comments","State":"closed","Body":"Remove comments\r\n","Url":"https://github.com/angular/angular-cli/pull/29281","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): remove redundant ESLint disabling comments\" (#29281)"},{"Id":"2775392124","IsPullRequest":true,"CreatedAt":"2025-01-08T13:38:31","Actor":"alan-agius4","Number":"29283","RawContent":null,"Title":"build: update `@angular/ng-dev` to support `rulesJsInteropMode`","State":"closed","Body":"The current version does not support `rulesJsInteropMode` which causes the build to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/29283","RelatedDescription":"Closed or merged PR \"build: update `@angular/ng-dev` to support `rulesJsInteropMode`\" (#29283)"},{"Id":"2775311801","IsPullRequest":true,"CreatedAt":"2025-01-08T13:12:02","Actor":"devversion","Number":"29282","RawContent":null,"Title":"build: do not include tsconfig files in npm archives","State":"closed","Body":"`rules_js` includes `tsconfig.json` files in the `DeclarationInfo` provider. This ends up causing these files to be part of the npm archives.","Url":"https://github.com/angular/angular-cli/pull/29282","RelatedDescription":"Closed or merged PR \"build: do not include tsconfig files in npm archives\" (#29282)"},{"Id":"2775426817","IsPullRequest":false,"CreatedAt":"2025-01-08T12:48:21","Actor":"dklmuc","Number":"29284","RawContent":null,"Title":"ssr does not render routes with custom matcher","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe new SSR implementation does not seem to work with custom route matcher.\n\nThe simple reproduction in linked repo is set to render all routes server side and contains two routes (one by path, one by custom matcher). When serving the app it shows the problem.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/dklmuc/angular-ssr\n\n### Please provide the exception or error you saw\n\n\nThe defined route by path (/path) is rendered as expected but the one defined with a custom matcher (/matcher) is not rendered at all and results in a 404 Cannot GET /matcher.\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nSame problem after building the app and starting the bundle.","Url":"https://github.com/angular/angular-cli/issues/29284","RelatedDescription":"Open issue \"ssr does not render routes with custom matcher\" (#29284)"},{"Id":"2775242239","IsPullRequest":true,"CreatedAt":"2025-01-08T12:47:05","Actor":"alan-agius4","Number":"29280","RawContent":null,"Title":"build: resolve issue with uncompiled `@angular/build/private` being included","State":"closed","Body":"\r\n\r\nReference: https://github.com/angular/angular-build-builds/commit/3735297d21181b5885cf9a3625cb554c46efb8b3\r\n","Url":"https://github.com/angular/angular-cli/pull/29280","RelatedDescription":"Closed or merged PR \"build: resolve issue with uncompiled `@angular/build/private` being included\" (#29280)"},{"Id":"2774705681","IsPullRequest":true,"CreatedAt":"2025-01-08T12:39:46","Actor":"devversion","Number":"29273","RawContent":null,"Title":"ci: enable `rules_js` interop mode for ng-dev release tool","State":"closed","Body":"This ensures that the Bazel lock files are automatically updated.\r\n\r\nSee: https://github.com/angular/dev-infra/commit/289aa644e65a557bcb21adcf75ad60605a9c9859","Url":"https://github.com/angular/angular-cli/pull/29273","RelatedDescription":"Closed or merged PR \"ci: enable `rules_js` interop mode for ng-dev release tool\" (#29273)"},{"Id":"2775104501","IsPullRequest":true,"CreatedAt":"2025-01-08T12:16:40","Actor":"alan-agius4","Number":"29277","RawContent":null,"Title":"docs: update license year to include current year","State":"closed","Body":"Include 2025.\r\n","Url":"https://github.com/angular/angular-cli/pull/29277","RelatedDescription":"Closed or merged PR \"docs: update license year to include current year\" (#29277)"},{"Id":"2774965315","IsPullRequest":false,"CreatedAt":"2025-01-08T10:32:04","Actor":"Wendelstein7","Number":"29275","RawContent":null,"Title":"(ng generate) Space in path creates folder ending with a dot - path corruption issue","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi! Today while developing, I accidentally left a space in a command: `ng generate interface interfaces /PostcodeArea`. I should have written `ng generate interface interfaces/PostcodeArea`.\n\nI meant to create an interface in `app/src/interfaces/` (an already existing folder), however running this created an interface in a new folder: `app/src/interfaces./`. Folders ending with a dot cause a lot of issues that are out-of-scope for the Angular CLI, which I will post at their respective software. For example, when trying to delete the folder `interfaces.` in Visual Studio Code, it actually deletes the non-dotfolder (`app/src/interfaces/` **without warning**!.) Furthermore, Windows explorer is **unable** to delete the folder from within the GUI, leaving users in trouble.\n\nLike I mentioned, these issues are within Microsoft Windows and Visual Studio Code, however given that dotfolders can cause data loss and other issues, I think it would be nice and appropriate if the Angular CLI would have a catch for this and refuse to execute the command, for example.\n\n_For anyone looking for how to delete their `folder.` after reproduction: [this answer](https://superuser.com/questions/494959/how-to-delete-a-file-ending-in-a-dot-in-windows-7) on stackoverflow tells you how; by running `del \"\\\\?\\<absolute path to folder>\"`._\n\nI hope this helps!\n\n### Minimal Reproduction\n\n1. Open or create an Angular project with the newest Angular CLI.\n2. Create one interface (or other type of entity) with a space in the path, such as: `ng generate interface interfaces/MyInterfaceOne`.\n3. Create a second interface (or other type of entity) with a space in the path, such as: `ng generate interface interfaces /MyInterfaceTwo`.\n4. You should now see a folder `interfaces.` in your project, which can cause trouble on some operating systems, such as Windows.\n\nI expected the command to either fail because multiple or invalid arguments were given, to fail because the path cannot contain a space or to actually create a path containing a trailing space, but not a trailing dot.\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/google-maps            19.0.4\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nIssue happened on a Windows 10 Enterprise version 22H2. (Sorry, I normally use Linux ;) )","Url":"https://github.com/angular/angular-cli/issues/29275","RelatedDescription":"Closed issue \"(ng generate) Space in path creates folder ending with a dot - path corruption issue\" (#29275)"},{"Id":"2774923914","IsPullRequest":true,"CreatedAt":"2025-01-08T10:03:18","Actor":"alan-agius4","Number":"29274","RawContent":null,"Title":"Multiple asset fixes for Vite and the application builder in watch mode","State":"open","Body":"\r\n**fix(@angular/build): trigger browser reload on asset changes with Vite dev server**\r\n\r\nEnsures the Vite-based development server automatically reloads the browser when asset files are modified.\r\n\r\nCloses #26141\r\n\r\n\r\n**fix(@angular/build): remove deleted assets from output during watch mode**\r\n\r\nThis commit ensures that assets deleted from the source are also removed from the output directory while in watch mode. Previously, deleted assets could persist in the output folder, potentially causing inconsistencies or outdated files to be served. This fix improves the accuracy of the build output by maintaining synchronization between the source and the output directory during development.","Url":"https://github.com/angular/angular-cli/pull/29274","RelatedDescription":"Open PR \"Multiple asset fixes for Vite and the application builder in watch mode\" (#29274)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2776384121","IsPullRequest":true,"CreatedAt":"2025-01-08T22:36:12","Actor":"amysorto","Number":"30294","RawContent":null,"Title":"Update next branch to reflect new release-train \"v19.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v19.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/30294","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v19.2.0-next.0\".\" (#30294)"},{"Id":"2776422965","IsPullRequest":false,"CreatedAt":"2025-01-08T21:56:24","Actor":"Nmohyieddine","Number":"30295","RawContent":null,"Title":"feat(Datepicker): add multiselection date feature in the datepicker","State":"open","Body":"### Feature Description\n\nThe feature allows the date picker to support selecting multiple individual dates. Since I couldn’t find a similar component in angular material documentation, I developed one internally for our project. I believe it would be a valuable addition to Angular Material.\n\n![Image](https://github.com/user-attachments/assets/d4912022-bf15-4832-8f77-b0416b0ce6b8)\n\n\n### Use Case\n\nFor our use case, we needed a list of dates selected by the user using a component similar to a date picker.","Url":"https://github.com/angular/components/issues/30295","RelatedDescription":"Open issue \"feat(Datepicker): add multiselection date feature in the datepicker\" (#30295)"},{"Id":"2776379578","IsPullRequest":true,"CreatedAt":"2025-01-08T21:28:12","Actor":"amysorto","Number":"30293","RawContent":null,"Title":"Bump version to \"v19.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30293","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-rc.0\" with changelog.\" (#30293)"},{"Id":"2776325083","IsPullRequest":false,"CreatedAt":"2025-01-08T20:51:00","Actor":"gmurph52","Number":"30292","RawContent":null,"Title":"Mat Stepper needs a beforeSelectionChange event","State":"open","Body":"### Feature Description\n\nThere should be an event that is triggered when you attempt to navigate to a different step via the mat stepper header.\n\nCurrently, there is only a `selectionChange` event that doesn't get triggered until _after_ the next navigation takes place. \n\n### Use Case\n\nIn my scenario, when a user attempts to navigate to the next step, I need to first call an endpoint to validate the data they entered. Once I have validated that the data is correct, I can proceed to the next step with `stepper.next()`. This works as expected if the user clicks on my next button with a custom `(click)` event, but if they click on the header to navigate, there is no way to call the endpoint before navigation.  \n\nUsing  `selectionChange` does not work, because there is no way to prevent navigation after the `StepperSelectionEvent` has happened. \n\nAlternatively,  instead of a `beforeSelectionChange` event, if there were a way to prevent the next navigation when subscribing to the `selectionChange` event, that would also work. Or if there was a way to prevent navigation from the header, but still capture clicks, so that `stepper.next` could manually be called.\n","Url":"https://github.com/angular/components/issues/30292","RelatedDescription":"Open issue \"Mat Stepper needs a beforeSelectionChange event\" (#30292)"},{"Id":"2776074207","IsPullRequest":true,"CreatedAt":"2025-01-08T18:54:02","Actor":"amysorto","Number":"30291","RawContent":null,"Title":"docs: release notes for the v19.0.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30291","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.5 release\" (#30291)"},{"Id":"2776072220","IsPullRequest":true,"CreatedAt":"2025-01-08T18:42:19","Actor":"amysorto","Number":"30290","RawContent":null,"Title":"Bump version to \"v19.0.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30290","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.5\" with changelog.\" (#30290)"},{"Id":"2773422775","IsPullRequest":true,"CreatedAt":"2025-01-08T18:28:52","Actor":"amysorto","Number":"30282","RawContent":null,"Title":"docs: Update references to M2 theming guide color variants section and add link to styling tab for color input descriptions","State":"closed","Body":"Fixes #30246","Url":"https://github.com/angular/components/pull/30282","RelatedDescription":"Closed or merged PR \"docs: Update references to M2 theming guide color variants section and add link to styling tab for color input descriptions\" (#30282)"},{"Id":"2776005907","IsPullRequest":true,"CreatedAt":"2025-01-08T18:04:34","Actor":"angular-robot","Number":"30289","RawContent":null,"Title":"build: update angular shared dev-infra code to 0b6f7cb","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| angular/dev-infra | action | digest | `359350b` -> `0b6f7cb` |\n| dev-infra | http_archive | digest | `359350b` -> `0b6f7cb` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS45MS4yIiwidXBkYXRlZEluVmVyIjoiMzkuOTYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/components/pull/30289","RelatedDescription":"Open PR \"build: update angular shared dev-infra code to 0b6f7cb\" (#30289)"},{"Id":"2775700172","IsPullRequest":true,"CreatedAt":"2025-01-08T15:35:52","Actor":"alexeagle","Number":"30288","RawContent":null,"Title":"refactor: move material.aio GHA to the root","State":"open","Body":"This makes them functional again. To keep this change simple, we just update the working directory but run the same things","Url":"https://github.com/angular/components/pull/30288","RelatedDescription":"Open PR \"refactor: move material.aio GHA to the root\" (#30288)"},{"Id":"2775149927","IsPullRequest":false,"CreatedAt":"2025-01-08T11:26:54","Actor":"SerkanSipahi","Number":"30286","RawContent":null,"Title":"bug(cdk-overlay-container): After update to v19.0.5, tests fail with css parse error \"Could not parse CSS stylesheet\"","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18.2.2\n\n### Description\n\nAfter updating to version **v19.0.5**, many of our unit tests failed with the error: **\"Could not parse CSS stylesheet.\"**\n\nThe tests use **Jest**, **jest-preset-angular**, **angular-component-harnesses** and **angular-material-components** which internally rely on the **CDK overlay**. In my case, the error specifically occurred with **mat-select**, **material-dialog**, ..., . I believe the issue arose with the introduction of the `@layer` tag in the following commit:  [Commit Link](https://github.com/angular/components/commit/560878a231373dca51ecac07f913503ee3e860aa#diff-913e8d4f726c74c55dae385e350629b6fa063ecad7b08b5deb9df5465bd34a5eR18) (v19.0.0-next)\n\n### Releated Issue:\nSimilar issues fixed by the angular team, see [GitHub Issue #29053](https://github.com/angular/components/issues/29053)\n\nActually this error should be fixed by jsdom but I think there is no movement in this direction, see https://github.com/jsdom/jsdom/issues/3785\n\n### Expected Behavior\n\nTests should still pass after patch update.\n\n### Actual Behavior\n\n```bash\nconsole.error\n            Error: Could not parse CSS stylesheet\n                at exports.createStylesheet (/Users/Foo/node_modules/jsdom/lib/jsdom/living/helpers/stylesheets.js:34:21)\n              ...\n              ...\n              ...\n              detail: '.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overla\ny{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrappe\nr{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:10\n00}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0}@layer cdk-overlay{.cdk-overlay-backdro\np{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}\n}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacit\ny:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-an\nimation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-co\nnnected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}',\n              type: 'css parsing'\n            }\n      \n            469 |     this.#dialog\n          > 470 |       .open(SomeComponent, {\n                |        ^\n            471 |         data: { some: 'data' },\n            472 |       })\n            473 |       .afterClosed()\n...\n...\n...\nSyntaxError: unknown pseudo-class selector ':flex-stack [cols]'\n      \n            at emit (../../../../node_modules/nwsapi/src/nwsapi.js:651:17)\n            at compileSelector (../../../../node_modules/nwsapi/src/nwsapi.js:1418:17)\n            at compile (../../../../node_modules/nwsapi/src/nwsapi.js:838:16)\n            at collect (../../../../node_modules/nwsapi/src/nwsapi.js:1693:22)\n            at _querySelectorAll (../../../../node_modules/nwsapi/src/nwsapi.js:1651:36)\n            at Object._querySelector [as first] (../../../../node_modules/nwsapi/src/nwsapi.js:1555:14)\n            at HTMLDivElementImpl.querySelector (../../../../node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js:69:44)\n            at HTMLDivElement.querySelector (../../../../node_modules/jsdom/lib/jsdom/living/generated/Element.js:1094:58)\n            at Array.Resolver (eval at compile (../../../../node_modules/nwsapi/src/nwsapi.js:853:17), <anonymous>:3:67)\n            at match_assert (../../../../node_modules/nwsapi/src/nwsapi.js:1482:13)\n            at Object._matches [as match] (../../../../node_modules/nwsapi/src/nwsapi.js:1500:16)\n            at exports.matchesDontThrow (../../../../node_modules/jsdom/lib/jsdom/living/helpers/selectors.js:29:36)\n            at matches (../../../../node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js:50:10)\n            at ../../../../node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js:35:18\n```\n\n### Reproduction\n\n❌❌❌\n\n### Environment\n\n```\n\"@angular/cdk\": \"~19.0.4\",\n\"@angular/common\": \"~19.0.5\",\n\"@angular/compiler\": \"~19.0.5\",\n\"@angular/core\": \"~19.0.5\",\n\"@angular/forms\": \"~19.0.5\",\n\"@angular/material\": \"~19.0.4\",\n```","Url":"https://github.com/angular/components/issues/30286","RelatedDescription":"Open issue \"bug(cdk-overlay-container): After update to v19.0.5, tests fail with css parse error \"Could not parse CSS stylesheet\"\" (#30286)"},{"Id":"2774748142","IsPullRequest":true,"CreatedAt":"2025-01-08T09:03:10","Actor":"crisbeto","Number":"30285","RawContent":null,"Title":"fix(material-luxon-adapter): infer first day of week from locale","State":"open","Body":"Fixes that the Luxon date adapter was hardcoding the first day of the week to Sunday, unless it's provided through DI.\r\n\r\nFixes #30278.","Url":"https://github.com/angular/components/pull/30285","RelatedDescription":"Open PR \"fix(material-luxon-adapter): infer first day of week from locale\" (#30285)"},{"Id":"2773900192","IsPullRequest":true,"CreatedAt":"2025-01-07T22:56:13","Actor":"essjay05","Number":"30284","RawContent":null,"Title":"fix(material/timepicker): adds default aria-label to timepicker toggle","State":"open","Body":"Updates Angular Component Timepicker so the timepicker toggle has a default aria-label value if no aria-label is applied for the timepicker toggle button to make it more accessible.\r\n\r\n[Before screencast](https://screencast.googleplex.com/cast/NjQxMDM4NjI4OTk4MzQ4OHxmYTQyYzVjNC02Zg)\r\n[After screencast](https://screencast.googleplex.com/cast/NTI5MTA0NTgzODM4OTI0OHw3NmY4MjQ3Ny02Zg)\r\n\r\nFixes b/380308482","Url":"https://github.com/angular/components/pull/30284","RelatedDescription":"Open PR \"fix(material/timepicker): adds default aria-label to timepicker toggle\" (#30284)"},{"Id":"2773711693","IsPullRequest":false,"CreatedAt":"2025-01-07T20:50:36","Actor":"tp1906","Number":"30283","RawContent":null,"Title":"Radio Button Sizing Options","State":"open","Body":"### Feature Description\n\nIs it possible to provide a way to decrease the size of the radio button.  I've been able to decrease it's size but the ripple placement is off.\n\n### Use Case\n\nIt would allow for a more robust application when dealing with smaller screen sizes.","Url":"https://github.com/angular/components/issues/30283","RelatedDescription":"Open issue \"Radio Button Sizing Options\" (#30283)"},{"Id":"2768827763","IsPullRequest":false,"CreatedAt":"2025-01-07T17:17:21","Actor":"tayambamwanza","Number":"30267","RawContent":null,"Title":"docs-bug(THEMING): simple M3 Button colour variants example","State":"closed","Body":"### Documentation Feedback\n\nIt took me a while but I figured out how to acheive similar behaviour to the color input that m2 had without using `  @include mat.color-variants-backwards-compatibility($theme);`\n\nI chose to use \"tertiary\" as my \"accent\"\n\nFirst I ran \n\n`npm run ng generate @angular/material:theme-color -- --primary-color '#7AA802' --secondary-color '' --tertiary-color '#276667' --neutral-color '' --include-high-contrast --directory=src/app/styles/`\n\nAfter that in the styles.scss I added these 2 classes\n\n```scss\n// Custom Theming for Angular Material\n// For more information: https://material.angular.io/guide/theming\n@use '@angular/material' as mat;\n@use 'app/styles/theme-colors' as theme;\n\n:root {\n  .tertiary {\n    @include mat.theme((\n      color: theme.$tertiary-palette,\n    ));\n  }\n\n  .error {\n    @include mat.theme((\n      color: mat.$red-palette,\n    ));\n  }\n}\n```\n\nI then removed the color input from my buttons and then added the appropriate class e.g. (no need to add a primary class as \"primary\" is the default)\n\n```html\n  <button mat-flat-button> View </button>\n  <button mat-flat-button class=\"tertiary\"> Close </button>\n  <button mat-flat-button class=\"error\"> Delete </button>\n```\n\nThis restored behaviour similar to the old color input\n\n\nI believe an example of similar steps would be helpful to those moving over from m2 to m3 as this was the single biggest issue I faced, the key paragraph was here, so maybe such an example could be provided there:\n\nhttps://material.angular.io/guide/theming#context-specific-themes\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#context-specific-themes","Url":"https://github.com/angular/components/issues/30267","RelatedDescription":"Closed issue \"docs-bug(THEMING): simple M3 Button colour variants example\" (#30267)"},{"Id":"2773340889","IsPullRequest":true,"CreatedAt":"2025-01-07T17:06:01","Actor":"crisbeto","Number":"30281","RawContent":null,"Title":"fix(material/tabs): switch away from animations module","State":"open","Body":"Reworks the tabs so they don't depend on the animations module anymore. This is both simpler and avoids some of the pitfalls of the animations module.","Url":"https://github.com/angular/components/pull/30281","RelatedDescription":"Open PR \"fix(material/tabs): switch away from animations module\" (#30281)"},{"Id":"2773336594","IsPullRequest":true,"CreatedAt":"2025-01-07T17:03:42","Actor":"amysorto","Number":"30280","RawContent":null,"Title":"fix(material/toolbar): Update icon button color to match label text color token","State":"open","Body":"Fixes #30279\r\n\r\nNote: this only affects icon buttons that have the `mat-unthemed` class. \r\n\r\n![image](https://github.com/user-attachments/assets/19e56c19-0423-425e-8c54-b5d24eecee15)\r\n","Url":"https://github.com/angular/components/pull/30280","RelatedDescription":"Open PR \"fix(material/toolbar): Update icon button color to match label text color token\" (#30280)"},{"Id":"2769188315","IsPullRequest":true,"CreatedAt":"2025-01-07T16:51:11","Actor":"crisbeto","Number":"30268","RawContent":null,"Title":"fix(material/sidenav): remove deprecated API usage","State":"closed","Body":"The sidenav was using `AfterRenderPhase` which is deprecated. These changes switch it to the supported API.","Url":"https://github.com/angular/components/pull/30268","RelatedDescription":"Closed or merged PR \"fix(material/sidenav): remove deprecated API usage\" (#30268)"},{"Id":"2772655542","IsPullRequest":false,"CreatedAt":"2025-01-07T11:52:48","Actor":"richardsengers","Number":"30279","RawContent":null,"Title":"bug(Toolbar): toolbar-overrides container-text-color does not set  var(--mat-sys-on-primary) to icons","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nM2 version\n\n### Description\n\nSince we now need to override the toolbar to make use of colors, the mat-icons are always dark, even if we set\n:root {\n  @include mat.toolbar-overrides((\n    container-background-color: var(--mat-sys-primary),\n    container-text-color: var(--mat-sys-on-primary)\n  ));\n}\n\nor maybe an extra override value to set?\nmdc-icon-button-icon-color: var(--mat-sys-on-primary)\n\n\n### Reproduction\n\nStackblits not working at the moment, but It think it is very easy to repsoduce\nhttps://stackblitz.com/edit/bfyxhb6f-qxwgfzjr?file=src%2Fstyles.scss\n\n### Expected Behavior\n\nI would expect all icons to have a var(--mat-sys-on-primary) when set to the toolbar container\n\n### Actual Behavior\n\n<img width=\"181\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/118d6cdc-cb89-4790-974f-1a4fc94076f2\" />\n\nShould be:\n\n<img width=\"187\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/32fc59dc-6030-4b6c-b00d-a6e244c43f6f\" />\n\n\n### Environment\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30279","RelatedDescription":"Open issue \"bug(Toolbar): toolbar-overrides container-text-color does not set  var(--mat-sys-on-primary) to icons\" (#30279)"},{"Id":"2772493645","IsPullRequest":false,"CreatedAt":"2025-01-07T10:38:05","Actor":"MikaStark","Number":"30278","RawContent":null,"Title":"bug(datepicker): Luxon date adapter consider by default Sunday as the first day of week for any locale","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the Luxon date adapter, the first day of the week is always set to Sunday, regardless of the selected locale. However, in certain locales (e.g., French), the first day of the week should be Monday. This behavior can cause inconsistencies in applications relying on localized date formats.\n\nTo address this issue, we can provide custom options for the Luxon date adapter by using a factory function. This factory dynamically calculates the correct firstDayOfWeek based on the current locale, leveraging Luxon’s Info.getStartOfWeek method.\n\nHere's how to configure it:\n\n```ts\nimport { MAT_LUXON_DATE_ADAPTER_OPTIONS } from '@angular/material-luxon-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Info } from 'luxon';\nimport { inject } from '@angular/core';\n\n{\n  provide: MAT_LUXON_DATE_ADAPTER_OPTIONS,\n  useFactory: () => {\n    const locale = inject<string>(MAT_DATE_LOCALE); // Retrieve the current locale\n    const firstDayOfWeek = Info.getStartOfWeek({ locale }); // Get the first day of the week for the locale\n    return { firstDayOfWeek };\n  },\n},\n```\n\nLuxon relies on the Intl.Locale.prototype.getWeekInfo API to determine the first day of the week. Unfortunately, this API is not supported in Firefox (as of now). However, Luxon includes a fallback mechanism that assumes Monday as the first day of the week, which aligns with the ISO standard.\n\nFor more details on getWeekInfo, refer to the [MDN documentation](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gao3m1fm?file=src%2Fexample%2Fdatepicker-overview-example.ts,src%2Fmain.ts\nSteps to reproduce:\n1. Open date picker and see that \"D\" (\"Dimanche\" aka. Sunday) is the first day of the week which is invalid as LOCAL_ID is \"fr\"\n2. Uncomment the last provider in `bootstrapApplication`\n3. Open date picker and see that \"L\" (\"Lundi\" aka. Monday) is the correct first day\n\n\n### Expected Behavior\n\nFirst day of week should depends on selected locale.\n\n### Actual Behavior\n\nThe first day of the week is always set to Sunday, regardless of the selected locale.\n\n### Environment\n\n- Angular: 19.0.5\n- CDK/Material: 19.0.4\n- Browser(s): Chrome 131.0.6778.205 (64 bits)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30278","RelatedDescription":"Open issue \"bug(datepicker): Luxon date adapter consider by default Sunday as the first day of week for any locale\" (#30278)"},{"Id":"2771287064","IsPullRequest":false,"CreatedAt":"2025-01-07T08:04:06","Actor":"martinboue","Number":"30276","RawContent":null,"Title":"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`mat-icon-button` ripple color is incorrect when the button is a child of a selected `mat-radio-button` .\n\n### Reproduction\n\ncomponent.html:\n\n```\n<mat-radio-group>\n\t<mat-radio-button>\n\t\t<span>Option 1</span>\n\t\t<button mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</mat-radio-button>\n</mat-radio-group>\n```\n\n### Expected Behavior\n\nclose icon button ripple color is light grey/transparent:\n![Image](https://github.com/user-attachments/assets/1ed8a6c2-d6f3-46d6-96a8-7dc72de78ba2)\n\n\n### Actual Behavior\n\nclose icon button ripple color is the primary opaque color:\n![Image](https://github.com/user-attachments/assets/4e1a9d9f-2b7f-4aa6-a55a-6076a0ec1258)\n \n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30276","RelatedDescription":"Closed issue \"bug(icon-button): Ripple color is incorrect inside a selected mat-radio-button\" (#30276)"},{"Id":"2772069473","IsPullRequest":false,"CreatedAt":"2025-01-07T07:59:38","Actor":"linlexing","Number":"30277","RawContent":null,"Title":"Oh, my God. Only the two latest versions of major browsers","State":"closed","Body":"> Chrome 78 isn't supported. We support the two latest versions of major browsers. Chrome 78 was released more than 4 years ago. \n\n _Originally posted by @crisbeto in [#30270](https://github.com/angular/components/issues/30270#issuecomment-2572517828)_","Url":"https://github.com/angular/components/issues/30277","RelatedDescription":"Closed issue \"Oh, my God. Only the two latest versions of major browsers\" (#30277)"},{"Id":"2766578370","IsPullRequest":true,"CreatedAt":"2025-01-06T21:02:25","Actor":"kseamon","Number":"30265","RawContent":null,"Title":"perf(material/tooltip): Use afterNextRender to invoke aria describer …","State":"closed","Body":"…to align layout updates with other components using afterNextRender.\r\n\r\nIn tandem with #30242 reduces layout thrashing for tables with sticky columns and tooltips.","Url":"https://github.com/angular/components/pull/30265","RelatedDescription":"Closed or merged PR \"perf(material/tooltip): Use afterNextRender to invoke aria describer …\" (#30265)"},{"Id":"2771249791","IsPullRequest":false,"CreatedAt":"2025-01-06T18:54:49","Actor":"martinboue","Number":"30275","RawContent":null,"Title":"bug(form-field): Default options not applied in dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`MAT_FORM_FIELD_DEFAULT_OPTIONS` do not apply to form-field inside material dialog component.\n\n\n### Reproduction\n\nin root app.component.ts:\n```\n@Component({\n\t...\n\tproviders: [\n\t\t{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } }\n\t]\n})\nexport class AppComponent { ... }\n```\nin dialog.component.html:\n\n```\n<h2 mat-dialog-title i18n>My title</h2>\n<mat-dialog-content>\n\t<mat-form-field>\n\t\t<mat-label>Some field</mat-label>\n\t\t<input matInput type=\"text\">\n\t</mat-form-field>\n</mat-dialog-content>\n```\n\ndialog.component is opened using `this.dialog.open(DialogComponent)`\n\n### Expected Behavior\n\nOutline appearance\n![Image](https://github.com/user-attachments/assets/1276bb87-2d2c-4cc8-8335-1fe8c9cf9321)\n\n### Actual Behavior\n\nFill appearance\n![Image](https://github.com/user-attachments/assets/3035ef89-77fd-4b95-8e14-51dfce379042)\n\n### Environment\n\n- Angular: v19\n- CDK/Material: v19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30275","RelatedDescription":"Open issue \"bug(form-field): Default options not applied in dialog\" (#30275)"},{"Id":"2771196552","IsPullRequest":true,"CreatedAt":"2025-01-06T18:36:14","Actor":"josephperrott","Number":"30274","RawContent":null,"Title":"[Patch version] build: update angular shared dev-infra code to 359350b","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30274","RelatedDescription":"Closed or merged PR \"[Patch version] build: update angular shared dev-infra code to 359350b\" (#30274)"},{"Id":"2771184742","IsPullRequest":true,"CreatedAt":"2025-01-06T18:25:45","Actor":"josephperrott","Number":"30273","RawContent":null,"Title":"build: update angular shared dev-infra code to 359350b","State":"closed","Body":"Closes #30219 as a pr takeover","Url":"https://github.com/angular/components/pull/30273","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code to 359350b\" (#30273)"},{"Id":"2770794396","IsPullRequest":false,"CreatedAt":"2025-01-06T14:35:31","Actor":"tp1906","Number":"30272","RawContent":null,"Title":"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nI'm unable to use mat-divider inside the mat-dialog when setting the vertical property to true.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Create mat-dialog\n2. Add mat-dialog-actions\n3. Add mat-divider with vertical option as true\n\n\n### Expected Behavior\n\nI expect to see a vertical divider between buttons.\n\n### Actual Behavior\n\nNothing is shown.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30272","RelatedDescription":"Open issue \"bug(COMPONENT): mat-divider not showing vertically inside mat-dialog\" (#30272)"},{"Id":"2769289836","IsPullRequest":false,"CreatedAt":"2025-01-06T08:32:23","Actor":"NkhilKajrekar","Number":"30269","RawContent":null,"Title":"Button style is not getting applied","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\nWe migrated from angular Material 14 to angular Material 18 we observed that after migration buttons are not getting rounded corner.  \nif we add below variable then only buttons are getting rounded corner \n  --mdc-button-border-radius: 28px;\n  --mdc-raised-button-border-radius: 28px;\n  --mdc-protected-button-container-shape: 28px;\nIf we create new project with angular Material 18 then this issue is not appearing.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Migrate angular project to Material 18 from 14\n2. check the button appearance \n\n\n### Expected Behavior\n\nButton should have rounded corner\n\n### Actual Behavior\n\nbuttons are not appearing with rounded corner\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30269","RelatedDescription":"Closed issue \"Button style is not getting applied\" (#30269)"},{"Id":"2770094103","IsPullRequest":true,"CreatedAt":"2025-01-06T08:13:15","Actor":"crisbeto","Number":"30271","RawContent":null,"Title":"refactor(multiple): use renderer for manually-bound events with options","State":"open","Body":"This is a second attempt at landing the changes from #30195. I've removed some of the riskier changes.\r\n\r\nSwitches all manually-bound event handlers that were passing options to go through the renderer.","Url":"https://github.com/angular/components/pull/30271","RelatedDescription":"Open PR \"refactor(multiple): use renderer for manually-bound events with options\" (#30271)"},{"Id":"2769887343","IsPullRequest":false,"CreatedAt":"2025-01-06T08:08:14","Actor":"linlexing","Number":"30270","RawContent":null,"Title":"bug( overlay): @layer not work at chrome 78","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nold browser not support cascade layers css command,such as @layer.all overlay div not visible, the z-index not set.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\noverlay can work\n\n### Actual Behavior\n\noverlay not work,css error\n\n### Environment\n\n- Angular:\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n- CDK/Material:\n@angular/cdk                    19.0.4\n@angular/material               19.0.4\n- Browser(s):\nchrome 78.0.3904.70 \n- Operating System (e.g. Windows, macOS, Ubuntu):\nwindows","Url":"https://github.com/angular/components/issues/30270","RelatedDescription":"Closed issue \"bug( overlay): @layer not work at chrome 78\" (#30270)"},{"Id":"2767421842","IsPullRequest":false,"CreatedAt":"2025-01-03T11:32:22","Actor":"benelliott","Number":"30266","RawContent":null,"Title":"docs-bug(theming): Update M2 theme guide with new `theme` mixin","State":"open","Body":"### Documentation Feedback\n\nI am trying to migrate an M2 app to M3 using the documentation on this page [A]: \n\nhttps://material.angular.io/guide/material-2-theming#how-to-migrate-an-app-from-material-2-to-material-3\n\nHowever there are some incongruities when comparing to the guide to theming an M3 app from scratch here [B]:\n\nhttps://material.angular.io/guide/theming#getting-started\n\nNamely, page A implies that you must use the `mat.define-theme` mixin to create a new M3 theme, with no reference of `mat.theme`:\n\n> Create a new M3 theme object using define-theme and pass it everywhere you were previously passing your M2 theme. All Angular Material mixins that take an M2 theme are compatible with M3 themes as well.\n\nWhile page B only mentions `mat.define-theme` in the context of legacy M2 themes:\n\n> If your application depends on a version before v19, or if your application's theme is applied using a theme config created with mat.define-theme, mat.define-light-theme, or mat.define-dark-theme, then you can refer to the theming guides at [v18.material.angular.io/guides](https://v18.material.angular.io/guides).\n\nAnd then onwards only refers to `mat.theme` for defining an M3 theme. \n\nThe docs don't really explain how to use `define-theme` to generate an M3 theme, and it's unclear that the output of `define-theme` is not comparable to the config that can be passed to `mat.theme`. Similarly, it's not clear that a \"valid\" M3 theme config (as can be passed to `mat.theme`) is not sufficient to be passed to a mixin such as `mat.color-variants-backwards-compatibility`.\n\nSome documentation that clarifies the difference between `define-theme` and `theme` would really help here I think. It might also be worth linking to https://v18.material.angular.io/guide/theming from the M2-M3 migration page (https://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles) as there is otherwise no way to see how `define-theme` should be called (despite it being mandatory for the migration).\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/material-2-theming#pass-a-new-m3-theme-in-your-global-theme-styles","Url":"https://github.com/angular/components/issues/30266","RelatedDescription":"Open issue \"docs-bug(theming): Update M2 theme guide with new `theme` mixin\" (#30266)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-09T03:30:02.6509716Z","RunDurationInMilliseconds":1847}