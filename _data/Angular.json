{"Data":{"Angular-Issues":{"Issues":[{"Id":"1121437152","IsPullRequest":true,"CreatedAt":"2022-02-02T02:23:08","Actor":"markostanimirovic","Number":"44939","RawContent":null,"Title":"feat(router): set stricter type for Route.title","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe type of `Route.title` is `string | unknown`.\r\n\r\nIssue Number: #44936\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe type of `Route.title` is `string | Type<Resolve<string>>`.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nAFAIK, the route title feature is not released yet. So there will be no breaking changes.\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n","Url":"https://github.com/angular/angular/pull/44939","RelatedDescription":"Open PR \"feat(router): set stricter type for Route.title\" (#44939)"},{"Id":"1121219644","IsPullRequest":true,"CreatedAt":"2022-02-02T01:58:22","Actor":"dylhunn","Number":"44933","RawContent":null,"Title":"fix(forms): Update the typed forms migration to use `FormArray<T>` instead of `FormArray<T[]>`.","State":"closed","Body":"Previously, `FormArray` accepted an array generic. With the most up-to-date prototype, it accepts the element type, so the migration must be updated accordingly.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n","Url":"https://github.com/angular/angular/pull/44933","RelatedDescription":"Closed or merged PR \"fix(forms): Update the typed forms migration to use `FormArray<T>` instead of `FormArray<T[]>`.\" (#44933)"},{"Id":"1121405570","IsPullRequest":true,"CreatedAt":"2022-02-02T01:56:44","Actor":"mgechev","Number":"44938","RawContent":null,"Title":"docs: update the survey expiration date","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44938","RelatedDescription":"Closed or merged PR \"docs: update the survey expiration date\" (#44938)"},{"Id":"1121388656","IsPullRequest":false,"CreatedAt":"2022-02-02T01:07:15","Actor":"AndrewKushnir","Number":"44937","RawContent":null,"Title":"Forms: improve `email` validator directive docs","State":"open","Body":"### Description\r\n\r\nCurrently, [the `Validators.email` page](https://angular.io/api/forms/Validators#email) explains the email validator logic and talks about the standard that we rely on. However [the `EmailValidator` page](https://angular.io/api/forms/EmailValidator), which describes the email validator for template-driven forms doesn't have that info. The proposal is to add a sentence that would mention the email validation format and refer to the `Validators.email` page (something like: `The email validation is based on the WHATWG HTML specification with some enhancements to incorporate more RFC rules. More information can be found on the [Validators.email page](api/forms/Validators#email).`).","Url":"https://github.com/angular/angular/issues/44937","RelatedDescription":"Open issue \"Forms: improve `email` validator directive docs\" (#44937)"},{"Id":"1121226111","IsPullRequest":true,"CreatedAt":"2022-02-02T00:03:38","Actor":"markostanimirovic","Number":"44934","RawContent":null,"Title":"docs(router): use Resolve interface for custom title resolver","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nCustom title resolver doesn't implement `Resolve` interface.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nCustom title resolver implements `Resolve` interface.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n","Url":"https://github.com/angular/angular/pull/44934","RelatedDescription":"Closed or merged PR \"docs(router): use Resolve interface for custom title resolver\" (#44934)"},{"Id":"1121257851","IsPullRequest":true,"CreatedAt":"2022-02-01T23:40:30","Actor":"atscott","Number":"44935","RawContent":null,"Title":"build: fix test for useUnknownInCatch","State":"closed","Body":"CI ran before the change to the tsconfig file\r\n","Url":"https://github.com/angular/angular/pull/44935","RelatedDescription":"Closed or merged PR \"build: fix test for useUnknownInCatch\" (#44935)"},{"Id":"1121258392","IsPullRequest":false,"CreatedAt":"2022-02-01T22:18:26","Actor":"markostanimirovic","Number":"44936","RawContent":null,"Title":"@angular/router: strict typing for `title` property","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nThe `title` type in [`Route`](https://github.com/angular/angular/pull/43307/files#diff-8720c33fa3535768ea516ea7c7ac148d769f82eb0f69cff63352071edba8569dR377) interface is `string | unknown`. \r\n\r\n### Proposed solution\r\n\r\nThe `title` type should be `string | Type<Resolve<string>>`.\r\n\r\n- [`Type`](https://github.com/angular/angular/blob/master/packages/core/src/interface/type.ts#L37) interface from `@angular/core`\r\n- [`Resolve`](https://github.com/angular/angular/blob/master/packages/router/src/interfaces.ts#L387) interface from `@angular/router`\r\n\r\nMoreover, we can create a new type for title resolve:\r\n\r\n```ts\r\ntype TitleResolve = Resolve<string>;\r\n\r\ninterface Route {\r\n  title?: string | Type<TitleResolve>;\r\n}\r\n\r\n// usage\r\nclass CustomTitleResolver implements TitleResolve {\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): string | Promise<string> | Observable<string> {\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\n**I will submit the PR for this feature if the feature request is accepted.** 🙂 \r\n\r\n### Alternatives considered\r\n\r\n👀 ","Url":"https://github.com/angular/angular/issues/44936","RelatedDescription":"Open issue \"@angular/router: strict typing for `title` property\" (#44936)"},{"Id":"1121210466","IsPullRequest":true,"CreatedAt":"2022-02-01T22:06:39","Actor":"markostanimirovic","Number":"44932","RawContent":null,"Title":"docs(router): provide better typing for resolver example","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe return type of `resolve` method in the Resolver example is `any | Promise<any> | Observable<any>`.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe return type of `resolve` method in the Resolver example is `Hero | Promise<Hero> | Observable<Hero>`.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/44932","RelatedDescription":"Closed or merged PR \"docs(router): provide better typing for resolver example\" (#44932)"},{"Id":"1119903648","IsPullRequest":true,"CreatedAt":"2022-02-01T21:41:52","Actor":"JoostK","Number":"44917","RawContent":null,"Title":"fix(common): include query parameters for open HTTP requests in `verify`","State":"closed","Body":"When `HttpTestingController.verify` is used to verify that there are not open,\r\nunexpected requests it would throw an error with the method and URL of all pending\r\nrequests, excluding the query parameters. This is confusing, as e.g. `expectOne`\r\nmatches a URL including its query parameters and `expectOne` does include the\r\nquery parameters when it reports when no request could be matched.\r\n\r\nThis commit changes the error that is reported by `verify` to include the query\r\nparameters.\r\n\r\nCloses #19974","Url":"https://github.com/angular/angular/pull/44917","RelatedDescription":"Closed or merged PR \"fix(common): include query parameters for open HTTP requests in `verify`\" (#44917)"},{"Id":"1121164107","IsPullRequest":true,"CreatedAt":"2022-02-01T21:30:12","Actor":"devversion","Number":"44930","RawContent":null,"Title":"[13.2.x] build: update all non-major dependencies, patch port","State":"closed","Body":"Patch port of https://github.com/angular/angular/pull/44855","Url":"https://github.com/angular/angular/pull/44930","RelatedDescription":"Closed or merged PR \"[13.2.x] build: update all non-major dependencies, patch port\" (#44930)"},{"Id":"1121207264","IsPullRequest":true,"CreatedAt":"2022-02-01T21:14:54","Actor":"JoostK","Number":"44931","RawContent":null,"Title":"refactor(localize): update version of Babel","State":"open","Body":"The `@angular/localize` package depends on a version of Babel that is two years\r\nold, so this commit updates to the latest version.\r\n\r\nSome changes were made to the linker and compliance tests to account for slight\r\nchanges in source maps, along with a few code updates because of changes to\r\nthe typings of Babel.","Url":"https://github.com/angular/angular/pull/44931","RelatedDescription":"Open PR \"refactor(localize): update version of Babel\" (#44931)"},{"Id":"1121081677","IsPullRequest":true,"CreatedAt":"2022-02-01T19:15:08","Actor":"atscott","Number":"44929","RawContent":null,"Title":"build: Update 13.2.x for useUnknownInCatch","State":"closed","Body":"36b16e667a99a69bbee8979e4f0517ed26f8d69c enabled `useUnknownInCatchVariables`\r\nbut broke the build becaue the migration does not exist on the main\r\nbranch.\r\n","Url":"https://github.com/angular/angular/pull/44929","RelatedDescription":"Closed or merged PR \"build: Update 13.2.x for useUnknownInCatch\" (#44929)"},{"Id":"1120090402","IsPullRequest":true,"CreatedAt":"2022-02-01T18:24:18","Actor":"dgp1130","Number":"44920","RawContent":null,"Title":"refactor(compiler-cli): remove leftover `_extendedTemplateDiagnostics` flag","State":"closed","Body":"This flag is currently a no-op because extended diagnostics are enabled in production.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [X] Refactoring (no functional changes, no api changes)\r\n\r\n## What is the current behavior?\r\n\r\nThe `_extendedTemplateDiagnostics` flag still litters the codebase, yet is effectively a no-op.\r\n\r\n## What is the new behavior?\r\n\r\nThe `_extendedTemplateDiagnostics` flag is removed entirely.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [X] No\r\n\r\n## Other information\r\n\r\nThis was a private, internal-only flag, never exposed publicly, so it should be safe to remove.","Url":"https://github.com/angular/angular/pull/44920","RelatedDescription":"Closed or merged PR \"refactor(compiler-cli): remove leftover `_extendedTemplateDiagnostics` flag\" (#44920)"},{"Id":"1121043311","IsPullRequest":false,"CreatedAt":"2022-02-01T18:12:56","Actor":"twerske","Number":"44928","RawContent":null,"Title":"feat(router): Add `Route.metatags` and `Route.pageDescription` to Route definitions","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\n@angular/router \r\n\r\n### Description\r\n\r\nAs a follow up to #7630 it would be nice to also add both `metatags` and `pageDescription` to the router's definition API in order to streamline how developers define routes.\r\n\r\nWe can also explore what other data is commonly defined and managed with custom strategies in the `Route.data` property to see how else we could simplify Route definitions especially for new developers.\r\n\r\n### Proposed solution\r\n\r\n```\r\nconst routes : Routes = {\r\n  path: '', \r\n  title: 'Angular Home Page', \r\n  metatags: ['home', 'angular'],\r\n  pageDescription: 'Home page for Angular documentation',\r\n  children: [\r\n    {path: 'about', title: 'About Angular', metatags: ['info', 'about'], pageDescription: 'About page for Angular documentation',},\r\n    {path: 'docs/:param', title: TitleResolver, metatags: MetatagResolver, pageDescription: PageDescriptionResolver}\r\n  ]\r\n};\r\n```\r\n\r\n### Alternatives considered\r\n\r\nCurrently this is individually managed and already possible with the `Route.data` additional attributes, which works but is more work for the developer and does not enforce best practices.","Url":"https://github.com/angular/angular/issues/44928","RelatedDescription":"Open issue \"feat(router): Add `Route.metatags` and `Route.pageDescription` to Route definitions\" (#44928)"},{"Id":"1120881873","IsPullRequest":false,"CreatedAt":"2022-02-01T16:07:25","Actor":"tmeghe","Number":"44927","RawContent":null,"Title":"TypeError: Cannot set properties of undefined (setting 'pointer-events')","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations, platform-browser\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have in a component the portion of code below :\r\n\r\n```\r\nconst groupElement = this.renderer.createElement('g', 'http://www.w3.org/2000/svg') as ElementRef;\r\nthis.renderer.setStyle(groupElement, 'pointer-events', 'none');\r\n```\r\n\r\ngroupElement exists.\r\n\r\nThe Renderer2 setStyle method give the error mentioned in this issue. Before the 13.2.1 upgrade the code was working.\r\n\r\nCheers,\r\nThomas\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\ncore.mjs:6468 ERROR TypeError: Cannot set properties of undefined (setting 'pointer-events')\r\n    at EmulatedEncapsulationDomRenderer2.setStyle (platform-browser.mjs:624:13)\r\n    at BaseAnimationRenderer.setStyle (animations.mjs:285:23)\r\n    at SvgGroupComponent.loadContourComponent (svg-group.component.ts:1094:19)\r\n    at Object.next (svg-group.component.ts:287:20)\r\n    at source.subscribe._OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.OperatorSubscriber.isUnsub (tap.js:17:1)\r\n    at OperatorSubscriber._next (OperatorSubscriber.js:9:1)\r\n    at OperatorSubscriber.next (Subscriber.js:31:1)\r\n    at combineLatest.js:42:1\r\n    at OperatorSubscriber._next (OperatorSubscriber.js:9:1)\r\n    at OperatorSubscriber.next (Subscriber.js:31:1)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.2.1\r\nNode: 16.13.1\r\nPackage Manager: npm 8.1.2\r\nOS: darwin x64\r\n\r\nAngular: 13.2.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.1\r\n@angular-devkit/build-angular   13.2.1\r\n@angular-devkit/core            13.2.1\r\n@angular-devkit/schematics      13.2.1\r\n@angular/cli                    13.2.1\r\n@angular/flex-layout            13.0.0-beta.37\r\n@schematics/angular             13.2.1\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44927","RelatedDescription":"Closed issue \"TypeError: Cannot set properties of undefined (setting 'pointer-events')\" (#44927)"},{"Id":"1120542402","IsPullRequest":true,"CreatedAt":"2022-02-01T14:00:16","Actor":"crisbeto","Number":"44924","RawContent":null,"Title":"build: fix rules_sass error","State":"closed","Body":"Similar to https://github.com/angular/components/pull/24331. Updates to the latest version of `rules_sass` in order to fix an error that is currently breaking the build.","Url":"https://github.com/angular/angular/pull/44924","RelatedDescription":"Closed or merged PR \"build: fix rules_sass error\" (#44924)"},{"Id":"1120659453","IsPullRequest":false,"CreatedAt":"2022-02-01T13:14:04","Actor":"ofirrifo","Number":"44926","RawContent":null,"Title":"Alternative way for depreciation of ComponentFactory in order to get componentFactory inputs","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nSince Angular 13 the ComponentFactory is deprecated.\r\n\r\nSince it depreciated I need an alternative way to get the `inputs` property that I used to get from the instance of  ComponentFactory `this.componentFactory.inputs`\r\n\r\n**Here is example of code where I'm using the inputs**\r\n```\r\n@Directive({\r\n  selector: '[dynamicComponentDirective]',\r\n})\r\nexport class SingDynamicComponentDirective implements OnInit {\r\n  @Input() dynamicComponentClass!: Type<any>;\r\n  @Input() inputs: any;\r\n\r\n  componentFactory: ComponentFactory<any> | undefined = undefined;\r\n  component!: ComponentRef<any> | null;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.container.clear();\r\n    this.componentFactory = void 0;\r\n    this.component = null;\r\n    this.componentFactory = this.resolver.resolveComponentFactory<any>(this.dynamicComponentClass);\r\n    this.component = this.container.createComponent(this.componentFactory);\r\n\r\n    this.updateComponentInputs();\r\n  }\r\n\r\n  /**\r\n   * update component inputs\r\n   */\r\n  updateComponentInputs(): void {\r\n    const validInputs = this.inputs && isObject(this.inputs) && Object.keys(this.inputs).length;\r\n    if (this.component && validInputs && this.componentFactory && this.componentFactory.inputs) {\r\n      this.componentFactory.inputs.forEach((input: any) => {\r\n        if (this.component && this.inputs.hasOwnProperty(input.propName)) {\r\n          this.component.instance[input.propName] = this.inputs[input.propName];\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNow that ComponentFactory is deprecated what is the alternative to get the `inputs` property?\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nabove there is a code with the example of my problem\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.2.0\r\nNode: 16.10.0\r\nPackage Manager: npm 7.6.0\r\nOS: darwin x64\r\n\r\nAngular: 13.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.0\r\n@angular-devkit/build-angular   13.2.0\r\n@angular-devkit/core            13.2.0\r\n@angular-devkit/schematics      13.2.0\r\n@schematics/angular             13.2.0\r\nng-packagr                      13.2.0\r\nrxjs                            7.5.2\r\ntypescript                      4.5.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44926","RelatedDescription":"Open issue \"Alternative way for depreciation of ComponentFactory in order to get componentFactory inputs\" (#44926)"},{"Id":"1120643385","IsPullRequest":false,"CreatedAt":"2022-02-01T13:01:34","Actor":"jeme","Number":"44925","RawContent":null,"Title":"ExpressionChangedAfterItHasBeenCheckedError in Dynamic component loader sample","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nUnknown\r\n\r\n### Description\r\n\r\nI was trying to implement something similar to the sample here: https://angular.io/guide/dynamic-component-loader\r\nAnd keept running into a ExpressionChangedAfterItHasBeenCheckedError and could not figure out what I did wrong.\r\n\r\nI finally realized that the Sample it self throws this very same error.\r\n\r\nNot sure if this is classified as a Documentation defect or an Angular defect, I am guessing the former but not sure.\r\nIs there a way to get around this error?\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://angular.io/generated/live-examples/dynamic-component-loader/stackblitz.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nvendor.js:20510 ERROR Error: NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: 'undefined'. Current value: 'Bombasto'. It seems like the view has been created after its parent and its children have been dirty checked. Has it been created in a change detection hook?. Find more at https://angular.io/errors/NG0100\r\n    at throwErrorIfNoChangesMode (vendor.js:20758:11)\r\n    at bindingUpdated (vendor.js:26744:17)\r\n    at interpolation1 (vendor.js:26851:23)\r\n    at ɵɵtextInterpolate1 (vendor.js:31194:26)\r\n    at Module.ɵɵtextInterpolate (vendor.js:31170:5)\r\n    at HeroProfileComponent_Template (main.js:288:72)\r\n    at executeTemplate (vendor.js:23642:9)\r\n    at refreshView (vendor.js:23508:13)\r\n    at refreshComponent (vendor.js:24679:13)\r\n    at refreshChildComponents (vendor.js:23304:9)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.1.4\r\nNode: 14.16.0\r\nPackage Manager: npm 7.17.0\r\nOS: linux x64\r\n\r\nAngular: 13.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.4\r\n@angular-devkit/build-angular   13.1.4\r\n@angular-devkit/core            13.1.4\r\n@angular-devkit/schematics      13.1.4\r\n@angular/cli                    13.1.4\r\n@schematics/angular             13.1.4\r\nrxjs                            7.4.0\r\ntypescript                      4.5.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/44925","RelatedDescription":"Open issue \"ExpressionChangedAfterItHasBeenCheckedError in Dynamic component loader sample\" (#44925)"},{"Id":"1120434230","IsPullRequest":true,"CreatedAt":"2022-02-01T09:39:33","Actor":"crisbeto","Number":"44923","RawContent":null,"Title":"fix(zone.js): only call jasmine test done function once","State":"open","Body":"Currently zone.js may end up attempting to call the `done` function of async tests more than once. This used to be a noop, but Jasmine now logs the following warning:\r\n\r\n```\r\nDEPRECATION: An asynchronous function called its 'done' callback more than once. This is a bug in the spec, beforeAll, beforeEach, afterAll, or afterEach function in question. This will be treated as an error in a future version. See<https://jasmine.github.io/tutorials/upgrading_to_Jasmine_4.0#deprecations-due-to-calling-done-multiple-times> for more information\r\n```\r\n\r\nThese changes add a wrapper around the `done` function so it only gets called once, otherwise we risk triggering errors in future versions of Jasmine.\r\n\r\n**Note:** I couldn't figure out a good way to add a test for this since it would be checking something that's part of the testing infrastructure.","Url":"https://github.com/angular/angular/pull/44923","RelatedDescription":"Open PR \"fix(zone.js): only call jasmine test done function once\" (#44923)"},{"Id":"1120344283","IsPullRequest":true,"CreatedAt":"2022-02-01T08:00:58","Actor":"arturovt","Number":"44921","RawContent":null,"Title":"fix(platform-browser): do not run change detection when loading Hammer","State":"open","Body":"## PR Checklist\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No","Url":"https://github.com/angular/angular/pull/44921","RelatedDescription":"Open PR \"fix(platform-browser): do not run change detection when loading Hammer\" (#44921)"},{"Id":"1119828020","IsPullRequest":true,"CreatedAt":"2022-01-31T23:31:20","Actor":"JoostK","Number":"44915","RawContent":null,"Title":"refactor(compiler): remove parsing support for quote expressions","State":"closed","Body":"So-called \"Quote expressions\" were added in b6ec2387b31ad1f51b95c8fac8f2a60b2de855f6\r\nto support foreign syntax to be used in Angular templates, requiring a custom\r\ntemplate transform to convert them somehow during compilation. Support for template\r\ntransforms was originally implemented in a43ed79ee7d49ec55a0adea9b587ed67780c870c but\r\nhas since been dropped. Since the compiler is not public API the quote expressions\r\nshould not have any usages anymore. Removing support for them can improve error\r\nreporting for expressions that contain a `:`, e.g. binding to a URL without quotes:\r\n\r\n```html\r\n<a [href]=\"http://google.com\">Click me</a>\r\n```\r\n\r\nHere, `http` would be parsed as foreign \"http\" quote expression with `//google.com` as\r\nvalue, later reporting the error \"Quotes are not supported for evaluation!\" because\r\nthere was no template transform to convert that code.\r\n\r\nCloses #40398","Url":"https://github.com/angular/angular/pull/44915","RelatedDescription":"Closed or merged PR \"refactor(compiler): remove parsing support for quote expressions\" (#44915)"},{"Id":"1119980065","IsPullRequest":true,"CreatedAt":"2022-01-31T22:46:03","Actor":"AndrewKushnir","Number":"44919","RawContent":null,"Title":"[13.2.x] perf(animations): remove no longer needed CssKeyframes classes","State":"closed","Body":"Note: this is a patch-only version of PR #44903, which had merge conflicts with 13.2.x branch.\r\n\r\nThis commit removes CSS keyframes-based code that was used to support animations in old browsers. With IE11 deprecation, all supported browsers have native WebAnimations support, so the old code can be removed. This results in ~7KB decrease of the animations package bundle size, since most of the code was non-tree-shakable.\r\n\r\nCloses #44520.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Other... Please describe: performance improvement.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44919","RelatedDescription":"Closed or merged PR \"[13.2.x] perf(animations): remove no longer needed CssKeyframes classes\" (#44919)"},{"Id":"1119915934","IsPullRequest":true,"CreatedAt":"2022-01-31T21:39:58","Actor":"JoostK","Number":"44918","RawContent":null,"Title":"refactor(compiler-cli): remove unused `canonical-path` dependency","State":"closed","Body":"This package is no longer used within `compiler-cli` so is being removed as a dependency.","Url":"https://github.com/angular/angular/pull/44918","RelatedDescription":"Closed or merged PR \"refactor(compiler-cli): remove unused `canonical-path` dependency\" (#44918)"},{"Id":"1119745400","IsPullRequest":true,"CreatedAt":"2022-01-31T21:39:33","Actor":"atscott","Number":"44914","RawContent":null,"Title":"fix: Add back support for namespace URIs in createElement of dom rend…","State":"closed","Body":"…erer\r\n\r\nSupport for namespace URIs rather than short namespace names was added in\r\nhttps://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\r\nsupport how Ivy passed around the namespace URI rather than short name at the time.\r\nAs a side-effect, this meant that namespace URIs were supported by the\r\ndefault dom renderer as part of the public API (likely unintentionally).\r\n\r\nIt did not, however extend the support to other parts of the system (setAttribute, setAttribute,\r\nand the ServerRenderer). In the future we should decide what exactly the\r\nsemantics for dealing with namespaces should be and make it consistent.\r\n\r\nfixes #44028\r\n","Url":"https://github.com/angular/angular/pull/44914","RelatedDescription":"Closed or merged PR \"fix: Add back support for namespace URIs in createElement of dom rend…\" (#44914)"},{"Id":"1119900858","IsPullRequest":true,"CreatedAt":"2022-01-31T21:31:19","Actor":"dgp1130","Number":"44916","RawContent":null,"Title":"build: fix `update_all_goldens.js` to use ESM.","State":"closed","Body":"Attempting to run as is fails because we have `\"type\": \"module\"`. `shelljs` is a CommonJS module however, so we need to do a default import and destructure.\r\n\r\n```\r\n$ node packages/compiler-cli/test/compliance/update_all_goldens.js\r\nconst {exec} = require('shelljs');\r\n               ^\r\n\r\nReferenceError: require is not defined in ES module scope, you can use import instead\r\nThis file is being treated as an ES module because it has a '.js' file extension and '/home/douglasparker/Source/ng/packages/compiler-cli/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\r\n    at file:///home/douglasparker/Source/ng/packages/compiler-cli/test/compliance/update_all_goldens.js:11:16\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:183:25)\r\n    at async Loader.import (node:internal/modules/esm/loader:178:24)\r\n    at async Object.loadESM (node:internal/process/esm_loader:68:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:63:12)\r\n```\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Build related changes\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n`update_all_goldens.js` script fails to run due to using `require()` in an ES module.\r\n\r\n\r\n## What is the new behavior?\r\n\r\n`update_all_goldens.js` now imports its dependencies via ES modules.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [X] No","Url":"https://github.com/angular/angular/pull/44916","RelatedDescription":"Closed or merged PR \"build: fix `update_all_goldens.js` to use ESM.\" (#44916)"},{"Id":"1119694074","IsPullRequest":true,"CreatedAt":"2022-01-31T21:28:27","Actor":"devversion","Number":"44911","RawContent":null,"Title":"[13.2.x] update angular, patch port of #44830","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44911","RelatedDescription":"Closed or merged PR \"[13.2.x] update angular, patch port of #44830\" (#44911)"},{"Id":"1119635797","IsPullRequest":true,"CreatedAt":"2022-01-31T19:46:40","Actor":"juristr","Number":"44910","RawContent":null,"Title":"docs: update Nx headline","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/44910","RelatedDescription":"Closed or merged PR \"docs: update Nx headline\" (#44910)"},{"Id":"1119707143","IsPullRequest":true,"CreatedAt":"2022-01-31T17:35:53","Actor":"devversion","Number":"44912","RawContent":null,"Title":"build: fix formatting in zone.js BUILD file","State":"closed","Body":"Fixes formatting in one of the Zone BUILD files.\r\nThe lint check on the renovate branch did not check\r\nformatting as it seems. Needs more investigation as\r\nthe PR was green.\r\n\r\nSeeing the following output:\r\n\r\n```\r\n#!/bin/bash -eo pipefail\r\nyarn -s ng-dev format changed $CI_GIT_BASE_REVISION --check\r\nfatal: bad object 1dd6dcd6f8032330fba637921dd2591ab0ddd2a8\r\nNo files matched for formatting check.\r\nCircleCI received exit code 0\r\n```","Url":"https://github.com/angular/angular/pull/44912","RelatedDescription":"Closed or merged PR \"build: fix formatting in zone.js BUILD file\" (#44912)"},{"Id":"1119716368","IsPullRequest":false,"CreatedAt":"2022-01-31T17:21:42","Actor":"plohoj","Number":"44913","RawContent":null,"Title":"Resolve method in zone.js Promise does not work correctly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `resolve` method, which is an argument when constructing a `Promise` when called in an Angular application, does not handle re-call correctly.\r\nThe following code executes differently in the console with and without an Angular environment:\r\n```ts\r\nconst delayedPromise = new Promise((resolve) => {\r\n  setTimeout(resolve, 1, 'timeout');\r\n});\r\n\r\nnew Promise((resolve) => {\r\n  resolve(delayedPromise);\r\n  resolve('second call');\r\n}).then(console.log);\r\n```\r\nIn an Angular environment, `\"second call\"` will be printed to the console. And in an environment without Angular, `\"timeout\"` will be printed to the console.\r\n\r\n**Expected behavior:**\r\nFor the above code, `\"timeout\"` is output to the console for the Angular environment\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-suszzq?devtoolsheight=33&file=src/app/app.component.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 12.2.14\r\nNode: 16.13.1 (Unsupported)\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: 12.2.15\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.14\r\n@angular-devkit/build-angular   12.2.14\r\n@angular-devkit/core            12.2.14\r\n@angular-devkit/schematics      12.2.14\r\n@angular/cli                    12.2.14\r\n@schematics/angular             12.2.14\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44913","RelatedDescription":"Open issue \"Resolve method in zone.js Promise does not work correctly\" (#44913)"},{"Id":"1119543307","IsPullRequest":true,"CreatedAt":"2022-01-31T15:00:23","Actor":"JoostK","Number":"44909","RawContent":null,"Title":"refactor(compiler-cli): move downlevel decorators transform into ngtsc","State":"open","Body":"This commit moves the `downlevel_decorators_transform` into a dedicated\r\ncompilation unit within `ngtsc`.\r\n\r\nThe tests were refactored to move to ngtsc's testing abstractions, allowing\r\nVE's `MockAotContext` and `MockCompilerHost` to be removed.","Url":"https://github.com/angular/angular/pull/44909","RelatedDescription":"Open PR \"refactor(compiler-cli): move downlevel decorators transform into ngtsc\" (#44909)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1119522502","IsPullRequest":true,"CreatedAt":"2022-02-02T01:12:05","Actor":"alan-agius4","Number":"22612","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure to use content hash as filenames hashing mechanism","State":"closed","Body":"\r\nPreviously we used hash which resulted in a unique hash generated for every build even when the contents of the files didn't differ.\r\n\r\nMore info: https://webpack.js.org/guides/caching/#output-filenames\r\n\r\nNB: I did try to add a unit test, but it non trivial. ","Url":"https://github.com/angular/angular-cli/pull/22612","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure to use content hash as filenames hashing mechanism\" (#22612)"},{"Id":"1120621172","IsPullRequest":true,"CreatedAt":"2022-02-02T01:01:37","Actor":"alan-agius4","Number":"22623","RawContent":null,"Title":"Patch version of #22612","State":"closed","Body":"Patch version of #22612","Url":"https://github.com/angular/angular-cli/pull/22623","RelatedDescription":"Closed or merged PR \"Patch version of #22612\" (#22623)"},{"Id":"1120676304","IsPullRequest":true,"CreatedAt":"2022-02-02T01:01:24","Actor":"alan-agius4","Number":"22624","RawContent":null,"Title":"test: remove hardcoded app-shell test","State":"closed","Body":"With this change we remove the hard coded app-shell test that is currently failing in Node.Js 12.\r\n\r\nWe can remove this test, because this is a duplicate of https://github.com/angular/angular-cli/blob/master/tests/legacy-cli/e2e/tests/build/build-app-shell-with-schematic.ts which app-shell is generated using schematics.","Url":"https://github.com/angular/angular-cli/pull/22624","RelatedDescription":"Closed or merged PR \"test: remove hardcoded app-shell test\" (#22624)"},{"Id":"1120908212","IsPullRequest":true,"CreatedAt":"2022-02-02T01:01:11","Actor":"alan-agius4","Number":"22628","RawContent":null,"Title":"docs(@angular-devkit/build-angular): add missing period in `include` description","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22628","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): add missing period in `include` description\" (#22628)"},{"Id":"1120921714","IsPullRequest":true,"CreatedAt":"2022-02-02T01:00:58","Actor":"alan-agius4","Number":"22629","RawContent":null,"Title":"fix(@angular-devkit/build-angular): add `whatwg-url` to downlevel exclusion list","State":"closed","Body":"\r\n\r\nSimilar to https://github.com/angular/angular-cli/pull/21739, `whatwg-url` seems to suffer from the same issue as https://github.com/angular/angular-cli/issues/21735\r\n\r\n```ts\r\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\r\n```","Url":"https://github.com/angular/angular-cli/pull/22629","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): add `whatwg-url` to downlevel exclusion list\" (#22629)"},{"Id":"1120849642","IsPullRequest":true,"CreatedAt":"2022-02-01T15:35:15","Actor":"alan-agius4","Number":"22627","RawContent":null,"Title":"wip! test.ts without require.context","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/22627","RelatedDescription":"Open PR \"wip! test.ts without require.context\" (#22627)"},{"Id":"1120744774","IsPullRequest":true,"CreatedAt":"2022-02-01T14:23:41","Actor":"alan-agius4","Number":"22626","RawContent":null,"Title":"fix(@angular-devkit/core): correctly resolve schema references defaults","State":"open","Body":"Closes #22600","Url":"https://github.com/angular/angular-cli/pull/22626","RelatedDescription":"Open PR \"fix(@angular-devkit/core): correctly resolve schema references defaults\" (#22626)"},{"Id":"1120420918","IsPullRequest":false,"CreatedAt":"2022-02-01T13:48:27","Actor":"vistiyos","Number":"22621","RawContent":null,"Title":"Building library after upgrading to Angular 12 produces no output","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nOur current project produces a success build on Angular 11\r\n\r\n### Description\r\n\r\nOur team has developed a small component and we are on our way to upgrade to Angular 12. After following the upgrading guide on https://update.angular.io/?v=11.0-12.0 we just get the following output executing `ng build`:\r\n\r\n`Building Angular Package`\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nAs this component is a proprietary solution, I cannot provide much details about it.\r\n\r\n## 🔥 Exception or Error\r\n\r\nNo error\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 12.2.16\r\nNode: 14.17.2\r\nPackage Manager: npm 6.14.13\r\nOS: win32 x64\r\n\r\nAngular: 12.2.16\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1002.3\r\n@angular-devkit/build-angular   12.2.15\r\n@angular-devkit/core            10.2.3\r\n@angular-devkit/schematics      12.2.16\r\n@angular/cdk                    11.2.13\r\n@schematics/angular             12.2.16\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.3\r\ntypescript                      4.3.5\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nWhen trying to enable verbose mode, I get the following output:\r\n```Unknown option: '--verbose'```\r\n\r\nIt only happens when trying to build the library, for building the application that integrates this component (which is in the same workspace), works fine. The problem mentioned above is not happening either for this application\r\n","Url":"https://github.com/angular/angular-cli/issues/22621","RelatedDescription":"Closed issue \"Building library after upgrading to Angular 12 produces no output\" (#22621)"},{"Id":"1120689887","IsPullRequest":true,"CreatedAt":"2022-02-01T13:40:45","Actor":"alan-agius4","Number":"22625","RawContent":null,"Title":"docs(@angular/cli): update `@angular/cli` package readme","State":"open","Body":"Previously, the `@angular/cli` readme contained a lot of un-needed information for application users","Url":"https://github.com/angular/angular-cli/pull/22625","RelatedDescription":"Open PR \"docs(@angular/cli): update `@angular/cli` package readme\" (#22625)"},{"Id":"1120515507","IsPullRequest":false,"CreatedAt":"2022-02-01T13:21:13","Actor":"amoscatelli","Number":"22622","RawContent":null,"Title":"13.2.1 breaks constructor names with disabled mangler in production builds","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ x] build\r\n- [ x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was: 13.1.2\r\n\r\n### Description\r\n\r\n<!-- ✍️--> \r\nAfter being forced to upgrade to 13.2.1 (caused by https://github.com/angular/angular-cli/issues/22606) disabling mangler (NG_BUILD_MANGLE=\"false\") does not mantain correct constructor names, since \"numbers\" are appended to the name when compiling for production.\r\n\r\nFor example AppComponent constructor name becomes \"AppComponent1\" or \"AppComponent2\" or \"AppComponent3\" (etc etc).\r\nThis applies to every constructor, even ones from ivy libraries.\r\n\r\nReverting back to 13.1.2 makes NG_BUILD_MANGLE=\"false\" working properly again and constructor name is back to \"AppComponent\" \r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nSet NG_BUILD_MANGLE to false.\r\nput something like console.log(AppComponent.name); inside app.component.ts constructor\r\nng serve  --configuration=production\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.2.1\r\nNode: 16.13.1\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.1\r\n@angular-devkit/build-angular   13.2.1\r\n@angular-devkit/core            13.2.1\r\n@angular-devkit/schematics      13.2.1\r\n@angular/cli                    13.2.1\r\n@angular/compiler               13.2.0\r\n@angular/compiler-cli           13.2.0\r\n@angular/language-service       13.1.0\r\n@angular/service-worker         13.1.2\r\n@schematics/angular             13.2.1\r\ntypescript                      4.4.4\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22622","RelatedDescription":"Closed issue \"13.2.1 breaks constructor names with disabled mangler in production builds\" (#22622)"},{"Id":"1119893232","IsPullRequest":false,"CreatedAt":"2022-02-01T13:06:50","Actor":"Davidnh8","Number":"22618","RawContent":null,"Title":"ng build SHOULD NOT use prod environment by default. It possibly corrupts the production database","State":"closed","Body":"# 🚀 Feature request\r\n\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nRight now running `ng build` builds production by default. I am suggesting that we definitely don't do that as we risk contaminating production database. Here is a scenario:\r\n1. I have 2 servers: staging and production. Each with unique CI and firebase database configured\r\n2. I use ng build and ng build --prod on each CI respectively. Thinking that each will build development and production respectively..\r\n3. I deploy both apps, without knowing that both servers are configured to use the same PRODUCTION firebase database\r\n4. App is live. I onboard a QA.\r\n5. QA creates or DELETES random data during testing, hence contaminating the production database\r\n\r\nAs you can see it opens up the possibility of connecting production database to staging environments because the developer trusts that ng build will not blindly build production, especially since it has always been the case that you needed --prod.\r\n\r\nI get that many users forgot to use --prod, hence this solution was implemented, but it can be dangerous to production apps. I strongly recommend we revert this change and resort to printing out glaringly obvious console messages if user forgets to use --prod.\r\n\r\n### Describe the solution you'd like\r\n\r\nDon't build production by default on ng build.\r\n\r\n### Describe alternatives you've considered\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22618","RelatedDescription":"Closed issue \"ng build SHOULD NOT use prod environment by default. It possibly corrupts the production database\" (#22618)"},{"Id":"1120363291","IsPullRequest":false,"CreatedAt":"2022-02-01T09:00:15","Actor":"vglaeser","Number":"22620","RawContent":null,"Title":"Creation of WebWorker fails when url is not created in worker's constructor","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWe recently updated our angular-app from 9 to 13. The app includes creation of a WebWorker where we ascertained a strange behaviour:\r\nWhen creating the worker with:\r\n```\r\nconst worker = new Worker(new Url('...', import.meta.url))\r\n```\r\neverything is working, but with\r\n```\r\nconst url = new Url('...', import.meta.url;\r\nconst worker = new Worker(url);\r\n```\r\nthe worker cannot be created.\r\n\r\nInterestingly, the error differs between 13.1 and 13.2 (see below). Nevertheless in both versions the worker couldn't be created.\r\n\r\nYou can checkout [https://github.com/anuroopjoy/worker-basics](https://github.com/anuroopjoy/worker-basics) and replace the worker-creation in `app.component.ts` correspondingly.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/anuroopjoy/worker-basics\n\n### Please provide the exception or error you saw\n\n```true\nWith 13.1.3 (after cloning the repo) we get the following error:\r\n\r\nRefused to execute script from 'http://localhost:4200/1e5911a90368d0ef.ts' because its MIME type ('video/mp2t') is not executable.\r\n```\r\n\r\n\r\nWith 13.2.0 we get the following error:\r\n```\r\ncore.mjs:6468 ERROR DOMException: Failed to construct 'Worker': Script at 'file:///D:/<...>/src/app/app.worker' cannot be accessed from origin 'http://localhost:4200'.\r\n    at AppComponent._AppComponent_initWorker (http://localhost:4200/main.js:85:23)\r\n    at AppComponent.ngOnInit (http://localhost:4200/main.js:58:133)\r\n    at callHook (http://localhost:4200/vendor.js:15580:22)\r\n    at callHooks (http://localhost:4200/vendor.js:15549:17)\r\n    at executeInitAndCheckHooks (http://localhost:4200/vendor.js:15500:9)\r\n    at refreshView (http://localhost:4200/vendor.js:22537:21)\r\n    at renderComponentOrTemplate (http://localhost:4200/vendor.js:22636:9)\r\n    at tickRootContext (http://localhost:4200/vendor.js:23867:9)\r\n    at detectChangesInRootView (http://localhost:4200/vendor.js:23892:5)\r\n    at RootViewRef.detectChanges (http://localhost:4200/vendor.js:34487:9)\r\ndefaultErrorLogger\t@\tcore.mjs:6468\r\nhandleError\t@\tcore.mjs:6515\r\n(anonym)\t@\tcore.mjs:26443\r\ninvoke\t@\tzone.js:372\r\nrun\t@\tzone.js:134\r\nrunOutsideAngular\t@\tcore.mjs:25371\r\ntick\t@\tcore.mjs:26443\r\n_loadComponent\t@\tcore.mjs:26469\r\nbootstrap\t@\tcore.mjs:26406\r\n(anonym)\t@\tcore.mjs:26075\r\n_moduleDoBootstrap\t@\tcore.mjs:26075\r\n(anonym)\t@\tcore.mjs:26045\r\ninvoke\t@\tzone.js:372\r\nonInvoke\t@\tcore.mjs:25472\r\ninvoke\t@\tzone.js:371\r\nrun\t@\tzone.js:134\r\n(anonym)\t@\tzone.js:1276\r\ninvokeTask\t@\tzone.js:406\r\nonInvokeTask\t@\tcore.mjs:25459\r\ninvokeTask\t@\tzone.js:405\r\nrunTask\t@\tzone.js:178\r\ndrainMicroTaskQueue\t@\tzone.js:582\r\nPromise.then (async)\t\t\r\nscheduleMicroTask\t@\tzone.js:565\r\nscheduleTask\t@\tzone.js:396\r\nscheduleTask\t@\tzone.js:221\r\nscheduleMicroTask\t@\tzone.js:241\r\nscheduleResolveOrReject\t@\tzone.js:1266\r\nthen\t@\tzone.js:1410\r\nbootstrapModule\t@\tcore.mjs:26070\r\n4431\t@\tmain.ts:11\r\n__webpack_require__\t@\tbootstrap:19\r\n__webpack_exec__\t@\tmain.ts:12\r\n(anonym)\t@\tmain.ts:12\r\n__webpack_require__.O\t@\tchunk loaded:23\r\n(anonym)\t@\tmain.ts:12\r\nwebpackJsonpCallback\t@\tjsonp chunk loading:34\r\n(anonym)\t@\tmain.js:2\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nWith 13.1 (after `git clone, npm i`):\r\n\r\nAngular CLI: 13.1.3\r\nNode: 14.17.5\r\nPackage Manager: npm 7.21.0\r\nOS: win32 x64\r\n\r\nAngular: 13.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.3\r\n@angular-devkit/build-angular   13.1.3\r\n@angular-devkit/core            13.1.3\r\n@angular-devkit/schematics      13.1.3\r\n@angular/cli                    13.1.3\r\n@schematics/angular             13.1.3\r\nrxjs                            7.4.0\r\ntypescript                      4.5.4\r\n```\r\n\r\nWith 13.2:\r\n```\r\nAngular CLI: 13.2.1\r\nNode: 14.17.5\r\nPackage Manager: npm 7.21.0\r\nOS: win32 x64\r\n\r\nAngular: 13.2.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.1\r\n@angular-devkit/build-angular   13.2.1\r\n@angular-devkit/core            13.2.1\r\n@angular-devkit/schematics      13.2.1\r\n@angular/cli                    13.2.1\r\n@schematics/angular             13.2.1\r\nrxjs                            7.4.0\r\ntypescript                      4.5.5\r\n```\n```\n\n\n### Anything else?\n\nI'm not sure if this is really a bug with angular itself or with typescript. because typescript-versions also changed when updating angular.","Url":"https://github.com/angular/angular-cli/issues/22620","RelatedDescription":"Closed issue \"Creation of WebWorker fails when url is not created in worker's constructor\" (#22620)"},{"Id":"1120095254","IsPullRequest":false,"CreatedAt":"2022-02-01T00:48:01","Actor":"sumitarora","Number":"22619","RawContent":null,"Title":"Angular DevTools install suggestion pop-up","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🚀 Feature request\r\n\r\nAngular CLI should show `install devtools` suggestion pop-up when running `ng serve`\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [x] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nWhen a user executes `ng serve` on their application running in development mode, the CLI should inject a script which checks if Angular DevTools is available. If it’s not available, the script should show a pop up asking if the user wants to install the extension or never see the pop up again.\r\n\r\nClicking on “Install” should redirect the user to the Chrome Web Store page of Angular DevTools.\r\n\r\nNew configuration option `disableDevtoolsPopup` should be added to disable the functionality.\r\n\r\n### Describe the solution you'd like\r\n\r\nDocument describing the proposed solution.\r\nhttps://docs.google.com/document/d/e/2PACX-1vQiWzu6eqD_Ep4-Yt0yGjfY8o7n3jmYz0pC6lwceO6SR3Jz7EDLxjGkrSbCinav7ceWyk13qguGRA9Z/pub\r\n","Url":"https://github.com/angular/angular-cli/issues/22619","RelatedDescription":"Open issue \"Angular DevTools install suggestion pop-up\" (#22619)"},{"Id":"1119134345","IsPullRequest":true,"CreatedAt":"2022-01-31T19:37:16","Actor":"renovate[bot]","Number":"22609","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22609","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#22609)"},{"Id":"1119584484","IsPullRequest":true,"CreatedAt":"2022-01-31T19:36:18","Actor":"alan-agius4","Number":"22614","RawContent":null,"Title":"perf(@angular-devkit/build-angular): update `license-webpack-plugin` to `4.0.1`","State":"closed","Body":"\r\nChanges that improve performance:\r\n- use resolve data already present in most modules\r\n- use throwIfNoEntry option on filesystem operations to improve performance","Url":"https://github.com/angular/angular-cli/pull/22614","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): update `license-webpack-plugin` to `4.0.1`\" (#22614)"},{"Id":"1117758495","IsPullRequest":true,"CreatedAt":"2022-01-31T19:35:37","Actor":"josephperrott","Number":"22604","RawContent":null,"Title":"build: add an action for handling feature requests","State":"closed","Body":"Add feature request voting process github actions to the repo.","Url":"https://github.com/angular/angular-cli/pull/22604","RelatedDescription":"Closed or merged PR \"build: add an action for handling feature requests\" (#22604)"},{"Id":"1117367679","IsPullRequest":true,"CreatedAt":"2022-01-31T19:34:58","Actor":"alan-agius4","Number":"22599","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deprecated `showCircularDependencies` browser and server builder option","State":"closed","Body":"BREAKING CHANGE:\r\n\r\nThe deprecated `showCircularDependencies` browser and server builder option has been removed. The recommended method to detect circular dependencies in project code is to use either a lint rule or other external tools.","Url":"https://github.com/angular/angular-cli/pull/22599","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove deprecated `showCircularDependencies` browser and server builder option\" (#22599)"},{"Id":"1119549729","IsPullRequest":true,"CreatedAt":"2022-01-31T19:30:10","Actor":"alan-agius4","Number":"22613","RawContent":null,"Title":"feat(@angular-devkit/build-angular): validate file extensions for `scripts` and `styles` options","State":"closed","Body":"\r\n\r\nIn some cases unexpected files may be provided which can cause to unsupported or broken behaviour.\r\n\r\nOne such use-case is users can provide TypeScript files as `scripts` input, this would not be processed by the TypeScript compiler, see: https://github.com/angular/angular-cli/issues/17125 and would cause the build to fail with a an unhelpful error message during optimization as the JS optimizers cannot parse TypeScript input.\r\n\r\nBREAKING CHANGE:\r\n\r\nBrowser builder `script` and `styles` options input files extensions are now validated.\r\n\r\nValid extensions for `scripts` are:\r\n- `.js`\r\n- `.cjs`\r\n- `.mjs`\r\n- `.jsx`\r\n- `.cjsx`\r\n- `.mjsx`\r\n\r\nValid extensions for `styles` are:\r\n- `.css`\r\n- `.less`\r\n- `.sass`\r\n- `.scss`\r\n- `.styl`","Url":"https://github.com/angular/angular-cli/pull/22613","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): validate file extensions for `scripts` and `styles` options\" (#22613)"},{"Id":"1119800636","IsPullRequest":true,"CreatedAt":"2022-01-31T18:46:14","Actor":"josephperrott","Number":"22617","RawContent":null,"Title":"docs: release notes for the v13.2.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.2.x\" branch to the next branch (master).","Url":"https://github.com/angular/angular-cli/pull/22617","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.2.1 release\" (#22617)"},{"Id":"1119772723","IsPullRequest":true,"CreatedAt":"2022-01-31T18:43:14","Actor":"josephperrott","Number":"22616","RawContent":null,"Title":"Bump version to \"v13.2.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22616","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.2.1\" with changelog.\" (#22616)"},{"Id":"1119718687","IsPullRequest":true,"CreatedAt":"2022-01-31T18:06:55","Actor":"josephperrott","Number":"22615","RawContent":null,"Title":"Bump version to \"v12.2.16\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22615","RelatedDescription":"Closed or merged PR \"Bump version to \"v12.2.16\" with changelog.\" (#22615)"},{"Id":"1119307936","IsPullRequest":true,"CreatedAt":"2022-01-31T17:15:05","Actor":"alan-agius4","Number":"22611","RawContent":null,"Title":"fix(@angular-devkit/build-angular): invalid browsers version ranges","State":"closed","Body":"This change addresses the `Invalid version: \"15.2-15.3\"` range error. We previously only handled version ranges for `ios_safari`. Now, we handle such versions for all browsers.\r\n\r\nCloses #22606","Url":"https://github.com/angular/angular-cli/pull/22611","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): invalid browsers version ranges\" (#22611)"},{"Id":"1119305127","IsPullRequest":true,"CreatedAt":"2022-01-31T17:14:44","Actor":"alan-agius4","Number":"22610","RawContent":null,"Title":"fix(@angular-devkit/build-angular): invalid browsers version ranges","State":"closed","Body":"This change addresses the `Invalid version: \"15.2-15.3\"` range error. We previously only handled version ranges for `ios_safari`. Now, we handle such versions for all browsers.\r\n\r\nCloses #22606","Url":"https://github.com/angular/angular-cli/pull/22610","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): invalid browsers version ranges\" (#22610)"},{"Id":"1118317714","IsPullRequest":false,"CreatedAt":"2022-01-31T17:14:44","Actor":"shakeri","Number":"22606","RawContent":null,"Title":"ng build error: Invalid version: \"15.2-15.3\"","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> When i build project with Angular CLI, I get this error:\r\n\r\n`An unhandled exception occurred: Transform failed with 1 error:\r\nerror: Invalid version: \"15.2-15.3\"\r\nSee \"C:\\Users\\MOHAMM~1\\AppData\\Local\\Temp\\ng-JBqIfM\\angular-errors.log\" for further details.`\r\n\r\nAnd in `angular-errors.log` file:\r\n```\r\n[error] HookWebpackError: Transform failed with 1 error:\r\nerror: Invalid version: \"15.2-15.3\"\r\n    at makeWebpackError (E:\\workingfolder\\test-app\\node_modules\\webpack\\lib\\HookWebpackError.js:48:9)\r\n    at E:\\workingfolder\\test-app\\node_modules\\webpack\\lib\\Compilation.js:3057:12\r\n    at eval (eval at create (E:\\workingfolder\\test-app\\node_modules\\tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:98:1)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n-- inner error --\r\nError: Transform failed with 1 error:\r\nerror: Invalid version: \"15.2-15.3\"\r\n    at failureErrorWithLog (E:\\workingfolder\\test-app\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:1557:15)\r\n    at E:\\workingfolder\\test-app\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:1346:29\r\n    at E:\\workingfolder\\test-app\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:637:9\r\n    at handleIncomingPacket (E:\\workingfolder\\test-app\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:734:9)\r\n    at Socket.readFromStdout (E:\\workingfolder\\test-app\\node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\lib\\main.js:604:7)\r\n    at Socket.emit (node:events:390:28)\r\n    at addChunk (node:internal/streams/readable:315:12)\r\n    at readableAddChunk (node:internal/streams/readable:289:9)\r\n    at Socket.Readable.push (node:internal/streams/readable:228:10)\r\n    at Pipe.onStreamRead (node:internal/stream_base_commons:199:23)\r\n```\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.2.0\r\nNode: 16.13.2\r\nPackage Manager: npm 8.4.0\r\nOS: win32 x64\r\n\r\nAngular: 13.2.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.0\r\n@angular-devkit/build-angular   13.2.0\r\n@angular-devkit/core            13.2.0\r\n@angular-devkit/schematics      13.2.0\r\n@schematics/angular             13.2.0\r\nrxjs                            7.5.2\r\ntypescript                      4.5.5\r\n</code></pre>","Url":"https://github.com/angular/angular-cli/issues/22606","RelatedDescription":"Closed issue \"ng build error: Invalid version: \"15.2-15.3\"\" (#22606)"},{"Id":"1118751119","IsPullRequest":false,"CreatedAt":"2022-01-31T16:09:23","Actor":"nhhockeyplayer","Number":"22608","RawContent":null,"Title":"support 'ng update' in nx","State":"closed","Body":"currently we cannot use ng update the way nx advocates manually\r\n\r\nnx states\r\n\r\n```\r\nRunning \"ng update\" can still be useful in some dev workflows, so we aren't planning to remove it.\r\nIf you need to use it, run \"FORCE_NG_UPDATE=true ng update\".\r\n```\r\n\r\nif we choose to operate this semantic we see the following\r\n\r\n```\r\nmeanstack02@admin lmig % FORCE_NG_UPDATE=true ng update\r\nUnable to read workspace file '/Users/meanstack02/lmig/lmig/angular.json': Invalid format version detected - Expected:[ 1 ] Found: [ 2 ]\r\n```\r\n\r\nsemantics are confusing on the name of the file and build targets\r\n","Url":"https://github.com/angular/angular-cli/issues/22608","RelatedDescription":"Closed issue \"support 'ng update' in nx\" (#22608)"},{"Id":"1117776568","IsPullRequest":true,"CreatedAt":"2022-01-28T19:41:25","Actor":"dgp1130","Number":"22605","RawContent":null,"Title":"docs: add note about switching FW dependencies off of `-rc.0` and `-next.0` before the production release","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22605","RelatedDescription":"Closed or merged PR \"docs: add note about switching FW dependencies off of `-rc.0` and `-next.0` before the production release\" (#22605)"},{"Id":"1117308109","IsPullRequest":true,"CreatedAt":"2022-01-28T19:02:57","Actor":"renovate[bot]","Number":"22598","RawContent":null,"Title":"build: update dependency @ampproject/remapping to v2","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@ampproject/remapping](https://togithub.com/ampproject/remapping) | [`1.1.1` -> `2.0.0`](https://renovatebot.com/diffs/npm/@ampproject%2fremapping/1.1.1/2.0.0) | [![age](https://badges.renovateapi.com/packages/npm/@ampproject%2fremapping/2.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@ampproject%2fremapping/2.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@ampproject%2fremapping/2.0.0/compatibility-slim/1.1.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@ampproject%2fremapping/2.0.0/confidence-slim/1.1.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ampproject/remapping</summary>\n\n### [`v2.0.0`](https://togithub.com/ampproject/remapping/compare/v1.1.1...v2.0.0)\n\n[Compare Source](https://togithub.com/ampproject/remapping/compare/v1.1.1...v2.0.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22598","RelatedDescription":"Closed or merged PR \"build: update dependency @ampproject/remapping to v2\" (#22598)"},{"Id":"1117707715","IsPullRequest":false,"CreatedAt":"2022-01-28T19:02:40","Actor":"lokzzor","Number":"22603","RawContent":null,"Title":"Could not find the '@angular-devkit/build-angular:dev-server' builder's node package.","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command\r\n\r\n- [x] build\r\n- [x] serve\r\n- [x] run\r\n\r\n\r\nThe globally required package has been installed as well as\r\nnode 16.13.2\r\nangular 13.2.0\r\nnpm 8.4.0\r\n\r\n### Description\r\n\r\n<!-- ✍️--> Created a clean angular project in docker. 'npm i' was successful. when trying to 'npm start/ ng serve' gave an error.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥Angular package.json\r\n\r\n<pre><code>\r\n \"scripts\": {\r\n    \"start\": \"npm i && ng serve\",\r\n    \"startt\": \"export NODE_OPTIONS=--max_old_space_size=4096 && npm i --no-audit  --legacy-peer-deps && ng serve -c production\",\r\n    \"vm\": \"npm i  --no-audit -s --legacy-peer-deps --only=production && npm update && export NODE_OPTIONS=--max_old_space_size=4096 && ng serve -c production --host 0.0.0.0 --port 4200 --disable-host-check\",\r\n    \"test\": \"npm i -D --no-audit  --legacy-peer-deps && ng serve -c production\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^13.1.3\",\r\n    \"@angular/cdk\": \"^13.1.3\",\r\n    \"@angular/common\": \"^13.1.3\",\r\n    \"@angular/compiler\": \"^13.1.3\",\r\n    \"@angular/core\": \"^13.1.3\",\r\n    \"@angular/forms\": \"^13.1.3\",\r\n    \"@angular/material\": \"^13.1.3\",\r\n    \"@angular/platform-browser\": \"^13.1.3\",\r\n    \"@angular/platform-browser-dynamic\": \"^13.1.3\",\r\n    \"@angular/router\": \"^13.1.3\",\r\n    \"@auth0/angular-jwt\": \"^5.0.2\",\r\n    \"angular-highcharts\": \"^13.0.1\",\r\n    \"angular2-text-mask\": \"^9.0.0\",\r\n    \"highcharts\": \"^9.3.2\",\r\n    \"moment\": \"^2.29.1\",\r\n    \"rxjs\": \"~7.5.2\",\r\n    \"tslib\": \"^2.3.1\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^13.1.4\",\r\n    \"@angular/cli\": \"^13.1.4\",\r\n    \"@angular/compiler-cli\": \"^13.1.3\",\r\n    \"@types/jasmine\": \"~3.10.3\",\r\n    \"@types/node\": \"^17.0.8\",\r\n    \"jasmine-core\": \"~4.0.0\",\r\n    \"karma\": \"~6.3.10\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.1.0\",\r\n    \"karma-jasmine\": \"~4.0.1\",\r\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\r\n    \"typescript\": \"^4.5.5\"\r\n  }\r\n\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n\r\nFROM node:16\r\n\r\nRUN npm i -g npm@8.3.1\r\nRUN npm i -s -g @angular/cli\r\nRUN npm i -s -g @angular/compiler-cli @angular/language-service @angular-devkit/build-angular\r\n\r\n# Set the locale\r\nENV LANG en_US.UTF-8\r\nENV LC_ALL en_US.UTF-8\r\nENV LANGUAGE en_US.UTF-8\r\nENV NODE_ENV production\r\nWORKDIR /app\r\nCOPY package*.json .\r\nCOPY . ./\r\nCMD cd client && ng serve\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nI went into the docker container and tried to create a new project, and I noticed that with the command 'npm i' in the folder node_modules/@angular-devkit/\r\nno files at all\r\n","Url":"https://github.com/angular/angular-cli/issues/22603","RelatedDescription":"Closed issue \"Could not find the '@angular-devkit/build-angular:dev-server' builder's node package.\" (#22603)"},{"Id":"1117660525","IsPullRequest":false,"CreatedAt":"2022-01-28T17:29:30","Actor":"danielkrausz","Number":"22602","RawContent":null,"Title":"Output files' filename hashes are incorrect","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n\r\nYes, the previous version in which this bug was not present was: Angular 11\r\n\r\nWe could reproduce the issue with Angular 12 and Angular 13 as well, with different — faulty — outcomes.\r\n\r\nOn Angular 12, the issue affected both the `main.js` and `polyfill.js` output files in the distribution build. Based on our initial testing, in Angular 13 the issue only affects the `scripts.js` file in the distribution build.\r\n\r\n### Description\r\n\r\nIt seems that some output files' file name hashes are generated incorrectly, when building with output hashing (e.g. `outputHashing` = `all` in `angular.json`). This can cause issues e.g. for Angular applications served from CDNs, where only changed files are uploaded, and the files are diff’d based on their revhash in the filename.\r\n\r\nIn our concrete case (Angular 13, having `outputHashing` = `all` in `angular.json`), when changing the TypeScript target version from `es2017` to any of `es2019`, `es2020`, or `es2021` in the project’s `tsconfig.json`, then rebuilding the project, the file name hash of the generated output file containing global scripts (in our case, the file is named per the default configuration `scripts.js`) does not change, **even though the contents of the `scripts.js` generated output file itself changes.**\r\n\r\n**The expected behaviour is that the revhash generated into any output file’s filename should change if (and only if) the final contents of the output file changes.**\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n1. Clone [https://github.com/tresorit/angular-filename-hashing-bug-reproduction](https://github.com/tresorit/angular-filename-hashing-bug-reproduction).\r\n2. Run `npm ci` to install dependencies.\r\n3. Run `ng build --configuration=production` (with the default `es2017` target in `tsconfig.json`).\r\n4. Observe the contents of the output `dist/angular-filename-hashing-bug-reproduction/scripts.{revhash_1}.js` file to be `try{console.log()}catch(c){}`.\r\n5. Change the `compilerOptions.target` to `es2019` (or `es2020` or `es2021`) from `es2017` in `tsconfig.json`.\r\n6. Run `ng build --configuration=production`.\r\n7. Observe the contents of the output `dist/angular-filename-hashing-bug-reproduction/scripts.{revhash_2}.js` file to be `try{console.log()}catch{}` (different from the output from step 4).\r\n8. Observe that `revhash_1` equals `revhash_2`.\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.1.4\r\nNode: 16.13.2\r\nPackage Manager: npm 8.3.2\r\nOS: darwin arm64\r\n\r\nAngular: 13.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.4\r\n@angular-devkit/build-angular   13.1.4\r\n@angular-devkit/core            13.1.4\r\n@angular-devkit/schematics      13.1.4\r\n@angular/cli                    13.1.4\r\n@schematics/angular             13.1.4\r\nrxjs                            7.4.0\r\ntypescript                      4.5.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nIt’s a long shot and we’re not sure whether it’s even connected, but we’ve found that hashing for the scripts doesn’t use `contenthash`, which might be relevant: \r\n\r\n[https://github.com/angular/angular-cli/blob/d18469eb3f09f9d38c6c2c52027eb2f6a5c50c9b/packages/angular_devkit/build_angular/src/webpack/utils/helpers.ts#L41-L46](https://github.com/angular/angular-cli/blob/d18469eb3f09f9d38c6c2c52027eb2f6a5c50c9b/packages/angular_devkit/build_angular/src/webpack/utils/helpers.ts#L41-L46)\r\n","Url":"https://github.com/angular/angular-cli/issues/22602","RelatedDescription":"Open issue \"Output files' filename hashes are incorrect\" (#22602)"},{"Id":"1117538554","IsPullRequest":false,"CreatedAt":"2022-01-28T15:34:18","Actor":"fischeversenker","Number":"22600","RawContent":null,"Title":"Defaults are not applied when using $refs in json schema","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] `ng generate` / `schematics`\r\n\r\n### Is this a regression?\r\n\r\nI don't know, sorry.\r\n\r\n### Description\r\n\r\nI noticed that the `schematics` CLI is applying defaults in a schema differently, depending on whether a property is defined \"inline\" or defined in a reference using `$ref`. This applies to both `ng generate` and `schematics`.\r\n\r\nAssume this schema for a schematic:\r\n```json\r\n{\r\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n  \"additionalProperties\": false,\r\n  \"definitions\": {\r\n    \"Reference\": {\r\n      \"default\": false,\r\n      \"type\": \"boolean\"\r\n    }\r\n  },\r\n  \"properties\": {\r\n    \"inlineProperty\": {\r\n      \"default\": false,\r\n      \"type\": \"boolean\"\r\n    },\r\n    \"referencedProperty\": {\r\n      \"$ref\": \"#/definitions/Reference\"\r\n    }\r\n  },\r\n  \"type\": \"object\"\r\n}\r\n```\r\n\r\nWhen a schematic that uses this schema is called without any arguments, the `options` object that it receives looks like this:\r\n```ts\r\n{ inlineProperty: false }\r\n```\r\n\r\nNote, that it does not contain the `referencedProperty`, even though it uses the same exact schema - only it's referencing it. If the contents of the reference are copied into the `referencedProperty`, then the same default-logic is applied to it and the `options` object turns into this:\r\n```ts\r\n{ inlineProperty: false, referencedProperty: false }\r\n```\r\n\r\nI would expect the `schematics` schema validation to apply the same logic for defaults, regardless of whether properties are defined \"inline\" or as a reference.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nI provided a minimal setup in [this repository](https://github.com/fischeversenker/angular-schematics-defaults-bug). Follow the steps in the README.md to reproduce this issue.\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n@angular-devkit/schematics-cli   13.2.0\r\n@angular-devkit/core             13.2.0\r\n@angular-devkit/schematics       13.2.0\r\ntypescript                       4.3.5\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/22600","RelatedDescription":"Open issue \"Defaults are not applied when using $refs in json schema\" (#22600)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1117943542","IsPullRequest":true,"CreatedAt":"2022-02-01T22:57:08","Actor":"mmalerba","Number":"24308","RawContent":null,"Title":"fix(cdk-experimental/menu): keep context menus open when mouse is released","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24308","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/menu): keep context menus open when mouse is released\" (#24308)"},{"Id":"1121106050","IsPullRequest":true,"CreatedAt":"2022-02-01T21:07:03","Actor":"zarend","Number":"24335","RawContent":null,"Title":"build: update checksum for io_bazel_rules_sass","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24335","RelatedDescription":"Closed or merged PR \"build: update checksum for io_bazel_rules_sass\" (#24335)"},{"Id":"1121066086","IsPullRequest":false,"CreatedAt":"2022-02-01T18:38:17","Actor":"bbarry","Number":"24334","RawContent":null,"Title":"feat(DomPortalOutlet): Alternative constructor (ComponentFactoryResolver is deprecated)","State":"open","Body":"### Feature Description\n\n@angular/angular deprecated `ComponentFactoryResolver` in 13.2.0:\r\n\r\nhttps://github.com/angular/angular/blob/master/CHANGELOG.md#1320-2022-01-26\r\n\r\nWhen using a lint rule such as deprecation/deprecation users of `DomPortalOutlet` now get a warning due to the constructor requiring a `ComponentFactoryResolver`\r\n\r\n\n\n### Use Case\n\nhttps://github.com/angular/components/blob/aea5d136068798e8655a9fecaaabd6cb73cb8ab5/src/cdk/portal/portal.spec.ts#L423-L438\r\n\r\nI am not sure if the tslint `deprecation` rule is enabled in this repository (it is not in tslint.json here) but I presume it would warn on the above tests. \r\n\r\nIt would be nice to not require an \r\n\r\n```typescript\r\n    // eslint-disable-next-line deprecation/deprecation\r\n    private componentFactoryResolver: ComponentFactoryResolver\r\n```\r\n\r\nin my code, and presumably the Angular team is planning on removing this at some point.","Url":"https://github.com/angular/components/issues/24334","RelatedDescription":"Open issue \"feat(DomPortalOutlet): Alternative constructor (ComponentFactoryResolver is deprecated)\" (#24334)"},{"Id":"1120886915","IsPullRequest":true,"CreatedAt":"2022-02-01T16:02:37","Actor":"devversion","Number":"24333","RawContent":null,"Title":"fix(material/dialog): Use align as @Input() in MatDialogActions","State":"open","Body":"Copy of https://github.com/angular/components/pull/24328. Just to run CI since it didn't run on the author's PRs for quite some time now..","Url":"https://github.com/angular/components/pull/24333","RelatedDescription":"Open PR \"fix(material/dialog): Use align as @Input() in MatDialogActions\" (#24333)"},{"Id":"1120713956","IsPullRequest":false,"CreatedAt":"2022-02-01T14:02:00","Actor":"ArvindWip","Number":"24332","RawContent":null,"Title":"bug(material/datepicker) : Watching the views for changes on selected years and months examle provided","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the angular material datepicker example given in the below link. The issue faced are reported below. \r\nhttps://material.angular.io/components/datepicker/overview#watching-the-views-for-changes-on-selected-years-and-months.\r\n\r\nActual example how it should work: \r\n\r\nAngular material datepicker should show only year and month selector and the same to be applied in the field.\r\n\r\nIssues: \r\n1. Day selector is displayed before datepicker closing for a millisecond which looks like a glitch.\r\n2. After selecting the year from datepicker if I select the year dropdown from the picker day selector is displayed and we are able to select the day which should not happen.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. First Issue: Choose Year and then month, after selecting month day selector is displayed for split second which looks like a glitch\r\n2. Second Issue: Choose Year then select Year dropdown in the example day selector is displayed.\r\n\n\n### Expected Behavior\n\nAngular datepicker with only year and month should not show day selector.\n\n### Actual Behavior\n\n1. Day selector is shown as a glitch for a split second furing year and month selection.\r\n2. Day selector is shown when year dropdown is selected.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24332","RelatedDescription":"Open issue \"bug(material/datepicker) : Watching the views for changes on selected years and months examle provided\" (#24332)"},{"Id":"1119746831","IsPullRequest":false,"CreatedAt":"2022-02-01T13:32:52","Actor":"tylerjharden","Number":"24327","RawContent":null,"Title":"bug(CDK): cdk-describedby-message-container visible below application footer","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe div with ID `cdk-describedby-message-container`, despite being tagged with visibility: hidden, will show as an empty white block the size of the tooltip labels it contains.\r\n\r\nThe only hack that appears to fix this is a `display: none` on the element ID in the application stylesheet.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create an application with a footer and tooltips on multiple items\r\n2. See CDK DescribedBy container below the application footer.\r\n\n\n### Expected Behavior\n\nThis hidden div being invisible, not taking up visible space in the rendered DOM.\n\n### Actual Behavior\n\nThe div `cdk-describedby-message-container` shows as an invisible div, still taking up space beneath an application footer.\n\n### Environment\n\n- Angular: 11.1.2\r\n- CDK/Material: 11.2.13\r\n- Browser(s): Edge \r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24327","RelatedDescription":"Closed issue \"bug(CDK): cdk-describedby-message-container visible below application footer\" (#24327)"},{"Id":"1120511099","IsPullRequest":true,"CreatedAt":"2022-02-01T12:22:16","Actor":"crisbeto","Number":"24331","RawContent":null,"Title":"build: fix rules_sass error","State":"closed","Body":"Updates to the latest version of `rules_sass` in order to fix an error that is currently breaking the build.","Url":"https://github.com/angular/components/pull/24331","RelatedDescription":"Closed or merged PR \"build: fix rules_sass error\" (#24331)"},{"Id":"1120216583","IsPullRequest":false,"CreatedAt":"2022-02-01T04:15:49","Actor":"zarend","Number":"24330","RawContent":null,"Title":"bug(material/datepicker): Voiceover Loses Focus when pressing Page Down key","State":"open","Body":"When navigating the calendar with VoiceOver enabled, pressing Page Down causes the screenreader focus to move to the entire calendar, instead of stay on an individual date.\r\n\r\n#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. With Screenreader enabled, Open the [datepicker expands in a browser](https://material.angular.io/components/datepicker/examples) and navigate to the Basic Datepicker Demo.\r\n2. Click on the Calendar button to open the datepicker \r\n3.  navigate to January 28, 2022\r\n4. (VoiceOver reads \"January 28, 2022\". the cell for Jan 28, 2022 has blue focus outline and black voiceover outline\r\n5. Press PageDown\r\n6. (VoiceOver reads \"February, 2022\". The Cell for Feb 28, 2022 has blue focus outline. Voiceover's black outline is around the entire box. Voiceover should ready \"February 28, 2022\".\r\n\r\n \r\n#### Expected Behavior\r\nVoiceover reads \"February 28, 2022\".\r\n\r\n#### Actual Behavior\r\nvoiceover reads \"February, 2022\"\r\n\r\n#### Environment\r\nOperating System | macOS Monterey 12.1 (21C52) Browser | Chrome Version 97.0.4692.99 (Official Build) (x86_64) Screenreader | VoiceOver\r\n\r\n\r\nhttps://user-images.githubusercontent.com/7720245/152051557-abb11c7d-3b66-43b7-bd1a-41c517cab896.mov\r\n\r\n\r\n\r\n##### Additional Notes\r\nThis is copied from an [internal bug report](http://b/216644357) found during a11y testing.\r\n","Url":"https://github.com/angular/components/issues/24330","RelatedDescription":"Open issue \"bug(material/datepicker): Voiceover Loses Focus when pressing Page Down key\" (#24330)"},{"Id":"1120027205","IsPullRequest":true,"CreatedAt":"2022-02-01T02:22:09","Actor":"ghost","Number":"24329","RawContent":null,"Title":"Update form-field.md","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24329","RelatedDescription":"Closed or merged PR \"Update form-field.md\" (#24329)"},{"Id":"1119790450","IsPullRequest":true,"CreatedAt":"2022-01-31T18:33:32","Actor":"PooSham","Number":"24328","RawContent":null,"Title":"fix(material/dialog): Use `align` as `@Input()` in `MatDialogActions`","State":"open","Body":"Right now we're relying on css selectors `[align='center']` and `[align='end']` for aligning action buttons in the dialog. Relying on a non-standard attribute causes some issues, such as no self-documentation, no type checkings, more annoying data-binding syntax and errors from IDEs and text editors (notably, VS Code marks the align-attribute as red). \r\n\r\nThis is the third continuation from this PR that failed to trigger CircleCI workflows, [here](https://github.com/angular/components/pull/24178)\r\n\r\nFixes [#18479](https://github.com/angular/components/issues/18479)","Url":"https://github.com/angular/components/pull/24328","RelatedDescription":"Open PR \"fix(material/dialog): Use `align` as `@Input()` in `MatDialogActions`\" (#24328)"},{"Id":"1118591728","IsPullRequest":true,"CreatedAt":"2022-01-31T18:02:11","Actor":"zelliott","Number":"24316","RawContent":null,"Title":"docs(material/tabs): Update public documentation with new mat-tab-nav-bar/panel guidance","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24316","RelatedDescription":"Closed or merged PR \"docs(material/tabs): Update public documentation with new mat-tab-nav-bar/panel guidance\" (#24316)"},{"Id":"1117756263","IsPullRequest":true,"CreatedAt":"2022-01-31T17:56:37","Actor":"josephperrott","Number":"24306","RawContent":null,"Title":"build: add an action for handling feature requests","State":"closed","Body":"Add feature request voting process github actions to the repo.","Url":"https://github.com/angular/components/pull/24306","RelatedDescription":"Closed or merged PR \"build: add an action for handling feature requests\" (#24306)"},{"Id":"1117875979","IsPullRequest":true,"CreatedAt":"2022-01-31T17:49:53","Actor":"mmalerba","Number":"24307","RawContent":null,"Title":"docs(cdk/testing): Clean up references to the now deprecated ProtractorHarnessEnvironment","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24307","RelatedDescription":"Closed or merged PR \"docs(cdk/testing): Clean up references to the now deprecated ProtractorHarnessEnvironment\" (#24307)"},{"Id":"1119676589","IsPullRequest":true,"CreatedAt":"2022-01-31T17:49:27","Actor":"RobertAKARobin","Number":"24325","RawContent":null,"Title":"feat(material/form-field): Allow mat-hint to persist alongside errors","State":"closed","Body":"Uses CSS to hide hints when errors are displayed, rather than removing them from the DOM altogether.\r\n\r\nFixes #24319","Url":"https://github.com/angular/components/pull/24325","RelatedDescription":"Closed or merged PR \"feat(material/form-field): Allow mat-hint to persist alongside errors\" (#24325)"},{"Id":"1118259946","IsPullRequest":true,"CreatedAt":"2022-01-31T17:48:00","Actor":"devversion","Number":"24310","RawContent":null,"Title":"build: fix docs-content missing some inherited member description","State":"closed","Body":"This happened due to: https://github.com/angular/components/commit/9973f1df6457bef6720ce4faf2c24df37e638de3\r\n\r\nRecently we added logic to exclude resolved external API docs from the Dgeni\r\npipeline, preventing them from being processed by the Dgeni JSDoc processor.\r\n\r\nThis was necessary due to a bug in Dgeni which resulted in runtime errors for\r\nunknown JSDoc tags. Some tags from external API docs were unknown because\r\nthe framework repository uses different sets of annotations/tags.\r\n\r\nAt this point, it seemed reasonable to never add such external API docs to the\r\nDgeni pipeline, while also working around this runtime exception that way.\r\n\r\nNow after seeing the results, it became clear that we still want to continue\r\nprocessing external API docs as some of our public-facing API docs might end\r\nup merging external API document members.\r\n\r\nIn this docs-content built it can be observed that some inherited/merged\r\nmembers no longer have a proper resolved description:\r\n\r\nhttps://github.com/angular/material2-docs-content/commit/6b602cf28cf42d2bab9af42da5e93a9b02d6338c\r\n\r\nThis commit fixes it by adding these external JSDoc tags temporarily as known tags until\r\nthe Dgeni upstream fix is available. As part of this change we introduced a custom processor\r\nto error for unknown JSDoc tags (we want to be strict about this). This will become helpful\r\nas Dgeni only warns about unknown tags (and this is non-configurable). Also while being at it\r\nthe types for `tags` has been improved to avoid the use of `any` everywhere.","Url":"https://github.com/angular/components/pull/24310","RelatedDescription":"Closed or merged PR \"build: fix docs-content missing some inherited member description\" (#24310)"},{"Id":"1118298885","IsPullRequest":true,"CreatedAt":"2022-01-31T17:46:15","Actor":"devversion","Number":"24311","RawContent":null,"Title":"build: remove unnecessary dependency on `core-js`","State":"closed","Body":"Removes the unnecessary dependency on core-js. All browsers\r\nwe support have ES2016 features built-in. ES2016 is the target\r\nthe dev-app and e2e-app use for local development. We could even\r\nincrease this given the Angular browser guarantees, but there is\r\na plan needed for the zone.js async/await complications w/ Bazel.","Url":"https://github.com/angular/components/pull/24311","RelatedDescription":"Closed or merged PR \"build: remove unnecessary dependency on `core-js`\" (#24311)"},{"Id":"1118456093","IsPullRequest":true,"CreatedAt":"2022-01-31T17:45:29","Actor":"crisbeto","Number":"24314","RawContent":null,"Title":"build: bump to angular 13.2 final","State":"closed","Body":"Updates to the final version of Angular 13.2 instead of depending on the RC.","Url":"https://github.com/angular/components/pull/24314","RelatedDescription":"Closed or merged PR \"build: bump to angular 13.2 final\" (#24314)"},{"Id":"1119387936","IsPullRequest":true,"CreatedAt":"2022-01-31T17:42:37","Actor":"devversion","Number":"24321","RawContent":null,"Title":"build: ignore integration test sub-projects within renovate","State":"closed","Body":"Sub-projects do not necessarily have valid `package.json` files\r\nbecause they might reference local-built packages through `file:<..>`\r\n\r\nRenovate does not install dependencies on the top-level workspace\r\nfirst, neither does it perform a build. We want to ignore such nested\r\nsub-projects as these should be updated manually, ideally even kept\r\nup-to-date by pointing from the sub-workspace to the root workspace\r\n(using e.g. `file:/../../node_modules/rxjs`).\r\n\r\nRelevant issue: https://github.com/angular/components/pull/24318","Url":"https://github.com/angular/components/pull/24321","RelatedDescription":"Closed or merged PR \"build: ignore integration test sub-projects within renovate\" (#24321)"},{"Id":"1119719058","IsPullRequest":true,"CreatedAt":"2022-01-31T17:24:12","Actor":"wagnermaciel","Number":"24326","RawContent":null,"Title":"feat(material/schematics): set up a system for migrating scss","State":"open","Body":"* also implements the migrator for the button","Url":"https://github.com/angular/components/pull/24326","RelatedDescription":"Open PR \"feat(material/schematics): set up a system for migrating scss\" (#24326)"},{"Id":"1119645276","IsPullRequest":false,"CreatedAt":"2022-01-31T16:37:49","Actor":"RobertAKARobin","Number":"24324","RawContent":null,"Title":"bug(material/form-field): `yarn test form-field` fails with fatal error","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning `yarn test form-field` fails with this error:\r\n\r\n> ERROR: no such target '//src/material/form-field:unit_tests_chromium': target 'unit_tests_chromium' not declared in package 'src/material/form-field'\r\n\r\nI have ensured:\r\n- no local changes\r\n- all packages are installed via `yarn install`\r\n- `nvm` is using specified version of Node\r\n- I am in the root directory of `angular/components`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. `git checkout master` (currently `2575b0080`)\r\n2. `yarn test form-field`\n\n### Expected Behavior\n\nI expect the test to complete successfully, as `yarn test` does with other components.\n\n### Actual Behavior\n\nRunning `yarn test form-field` fails with this error:\r\n\r\n> ERROR: no such target '//src/material/form-field:unit_tests_chromium': target 'unit_tests_chromium' not declared in package 'src/material/form-field'\n\n### Environment\n\n- Angular: `13.2.0-rc.1`\r\n- CDK/Material: `material/form-field`\r\n- Browser(s): NA\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS 12.2\r\n\r\n```\r\nAngular CLI: 13.2.0-rc.1\r\nNode: 16.10.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin x64\r\n\r\nAngular: 13.2.0-rc.1\r\n... animations, bazel, cli, common, compiler, compiler-cli, core\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.0-rc.1\r\n@angular-devkit/build-angular   13.2.0-rc.1\r\n@angular-devkit/core            13.2.0-rc.1\r\n@angular-devkit/schematics      13.2.0-rc.1\r\n@angular/dev-infra-private      0.0.0-8298e121c51960857ef39abc16b743775ff6be68\r\n@bazel/bazelisk                 1.11.0\r\n@bazel/buildifier               4.2.5\r\n@bazel/concatjs                 4.4.5\r\n@bazel/esbuild                  4.4.5\r\n@bazel/ibazel                   v0.15.10\r\n@bazel/jasmine                  4.4.5\r\n@bazel/protractor               4.4.5\r\n@bazel/rollup                   4.4.5\r\n@bazel/runfiles                 4.4.5\r\n@bazel/terser                   4.4.5\r\n@bazel/typescript               4.4.5\r\n@schematics/angular             13.2.0-rc.1\r\nrxjs                            6.6.7\r\ntypescript                      4.5.5\r\n\r\n```","Url":"https://github.com/angular/components/issues/24324","RelatedDescription":"Closed issue \"bug(material/form-field): `yarn test form-field` fails with fatal error\" (#24324)"},{"Id":"1119628671","IsPullRequest":false,"CreatedAt":"2022-01-31T16:09:50","Actor":"RobertAKARobin","Number":"24323","RawContent":null,"Title":"help(COMPONENT): TITLE","State":"closed","Body":"### What are you trying to do?\n\nRun `yarn test form-field`\n\n### What troubleshooting steps have you tried?\n\nRunning `yarn test form-field` fails with this error:\r\n\r\n> ERROR: no such target '//src/material/form-field:unit_tests_chromium': target 'unit_tests_chromium' not declared in package 'src/material/form-field'\r\n\r\nI have ensured:\r\n- all packages are installed via `yarn install`\r\n- `nvm` is using specified version of Node\r\n- I am in the root directory of `angular/components`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. `git checkout master` (currently `2575b0080`)\r\n2. `yarn test form-field`\n\n### Environment\n\n- Angular: `13.2.0-rc.1`\r\n- CDK/Material: `material/form-field`\r\n- Browser(s): NA\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS 12.2\r\n\r\n```\r\nAngular CLI: 13.2.0-rc.1\r\nNode: 16.10.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin x64\r\n\r\nAngular: 13.2.0-rc.1\r\n... animations, bazel, cli, common, compiler, compiler-cli, core\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.0-rc.1\r\n@angular-devkit/build-angular   13.2.0-rc.1\r\n@angular-devkit/core            13.2.0-rc.1\r\n@angular-devkit/schematics      13.2.0-rc.1\r\n@angular/dev-infra-private      0.0.0-8298e121c51960857ef39abc16b743775ff6be68\r\n@bazel/bazelisk                 1.11.0\r\n@bazel/buildifier               4.2.5\r\n@bazel/concatjs                 4.4.5\r\n@bazel/esbuild                  4.4.5\r\n@bazel/ibazel                   v0.15.10\r\n@bazel/jasmine                  4.4.5\r\n@bazel/protractor               4.4.5\r\n@bazel/rollup                   4.4.5\r\n@bazel/runfiles                 4.4.5\r\n@bazel/terser                   4.4.5\r\n@bazel/typescript               4.4.5\r\n@schematics/angular             13.2.0-rc.1\r\nrxjs                            6.6.7\r\ntypescript                      4.5.5\r\n\r\n```\r\n","Url":"https://github.com/angular/components/issues/24323","RelatedDescription":"Closed issue \"help(COMPONENT): TITLE\" (#24323)"},{"Id":"1119112487","IsPullRequest":true,"CreatedAt":"2022-01-31T16:02:09","Actor":"fahadashiq12","Number":"24320","RawContent":null,"Title":"Create revision","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24320","RelatedDescription":"Closed or merged PR \"Create revision\" (#24320)"},{"Id":"1119593724","IsPullRequest":true,"CreatedAt":"2022-01-31T15:40:05","Actor":"crisbeto","Number":"24322","RawContent":null,"Title":"fix(material-experimental/mdc-button): extended fab touch target not covering entire button","State":"open","Body":"Fixes that the extended FAB touch target was square which meant that it didn't cover the entire button.","Url":"https://github.com/angular/components/pull/24322","RelatedDescription":"Open PR \"fix(material-experimental/mdc-button): extended fab touch target not covering entire button\" (#24322)"},{"Id":"1118517468","IsPullRequest":false,"CreatedAt":"2022-01-31T13:44:01","Actor":"Polyterative","Number":"24315","RawContent":null,"Title":"bug(MAT_DIALOG): Dialog backdrop not working as expected on Chrome 97 vs Firefox","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nOpening official dialogs in docs shows no backdrop.\r\nThis happens on my prod too. \r\nLatest Firefox works as should instead. \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Open any dialog with chrome 97 on https://material.angular.io/components/dialog/examples\r\n\r\n### Expected Behavior\r\n\r\nShould show backdrop and exit on click\r\n\r\n### Actual Behavior\r\n\r\nNo backdrop, ignores click outside dialog\r\n\r\n### Environment\r\n\r\n- Angular: 13.2,13.1\r\n- CDK/Material: 13.2,13.1\r\n- Browser(s): Chrome 97.0.4692.99 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win\r\n","Url":"https://github.com/angular/components/issues/24315","RelatedDescription":"Closed issue \"bug(MAT_DIALOG): Dialog backdrop not working as expected on Chrome 97 vs Firefox\" (#24315)"},{"Id":"1118903422","IsPullRequest":false,"CreatedAt":"2022-01-31T03:12:49","Actor":"RobertAKARobin","Number":"24319","RawContent":null,"Title":"feat(mat-form-field): Option to allow MatHint to persist alongside MatError","State":"open","Body":"### Feature Description\r\n\r\nOn every Angular Material project I've worked on, our accessibility team has flagged that the `mat-hint` disappears when `mat-error` appears. To be accessible, it is required that the `mat-hint` continues to persist somehow. Currently, the `mat-hint` element is fully removed from the DOM: https://github.com/angular/components/blob/master/src/material/form-field/form-field.html#L83\r\n\r\nThis has been brought up on SO several times:\r\n- https://stackoverflow.com/questions/60185384/keep-the-displaying-of-both-error-and-hint-if-error\r\n- https://stackoverflow.com/questions/47166694/angular-material-input-with-hint-text-and-error-text-at-the-same-time\r\n\r\nTo compensate, on each project we:\r\n\r\n1. Write a wrapper component around `MatLabel`, `MatHint`, and `MatError`, as well as `MatInput`, `MatSelect`, `MatCheckbox`, etc, duplicating all of their inputs, or\r\n2. Write a wrapper component around `MatLabel`, `MatHint`, and `MatError`, using content projection for the form controls, which breaks the synchronization between all the elements.\r\n\r\nEither way, we spend a lot of time on ugly hacks with which we are always ultimately unsatisfied.\r\n\r\nI propose we hide `mat-hint` with CSS (e.g. `display: none`) instead of fully removing it from the DOM. This will allow users to easily continue to persist `mat-hint` as they see fit, simply by overriding the CSS.\r\n\r\n(Alternatively, or in addition, we could add e.g. `@Input('persistHint')` to `mat-form-field`, but this would require more of a reworking of `mat-form-field`'s logic, and would also require making some design decisions about how `mat-hint` should look when displayed alongside errors, for which the Material guidelines don't give instruction AFAIK.)","Url":"https://github.com/angular/components/issues/24319","RelatedDescription":"Open issue \"feat(mat-form-field): Option to allow MatHint to persist alongside MatError\" (#24319)"},{"Id":"1118822726","IsPullRequest":true,"CreatedAt":"2022-01-31T01:13:13","Actor":"renovate[bot]","Number":"24318","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" (UTC).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24318","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24318)"},{"Id":"1118672765","IsPullRequest":false,"CreatedAt":"2022-01-30T18:51:57","Actor":"lujakob","Number":"24317","RawContent":null,"Title":"bug(MatDialog): js error on open in combination with ngx-translate TranslateService","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nProviding the TranslateService of ngx-translate/core in a component that is being opened with MatDialog.open causes a console javascript error. Even though the ngx-translate module and MatMaterialModule are being imported in the app.module there are two errors. \r\n\r\nFirst error:\r\nNullInjectorError: No provider for TranslateService!\r\n\r\nSecond error: \r\nERROR TypeError: Cannot read properties of undefined (reading 'focusInitialElementWhenReady')\r\n    at MatDialogContainer._trapFocus\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a new minimal application with `ng new dialog-translate-test`\r\n2. Install @angular/material @angular/cdk @ngx-translate/core\r\n3. Create a TestDialogComponent and inject the TranslateService in the constructor.\r\n4. Add a button element in the app.component.html that calls a component method to open the dialog\r\n5. `this.dialog.open(TestDialogComponent)`\r\n\n\n### Expected Behavior\n\nThe dialog is opened and no console error is thrown.\n\n### Actual Behavior\n\ncore.mjs:6461 ERROR NullInjectorError: R3InjectorError(AppModule)[TranslateService -> TranslateService -> TranslateService]: \r\n  NullInjectorError: No provider for TranslateService!\r\n    at NullInjector.get (core.mjs:11095:1)\r\n    at R3Injector.get (core.mjs:11262:1)\r\n    at R3Injector.get (core.mjs:11262:1)\r\n    at R3Injector.get (core.mjs:11262:1)\r\n    at NgModuleRef.get (core.mjs:21807:1)\r\n    at Object.get (core.mjs:21484:1)\r\n    at lookupTokenUsingModuleInjector (core.mjs:3334:1)\r\n    at getOrCreateInjectable (core.mjs:3446:1)\r\n    at Module.ɵɵdirectiveInject (core.mjs:14381:1)\r\n    at NodeInjectorFactory.TestDialogComponent_Factory [as factory] (test-dialog.component.ts:9:33)\r\ndefaultErrorLogger @ core.mjs:6461\r\nhandleError @ core.mjs:6508\r\nhandleError @ core.mjs:10932\r\nexecuteListenerWithErrorHandling @ core.mjs:14955\r\nwrapListenerIn_markDirtyAndPreventDefault @ core.mjs:14990\r\n(anonymous) @ platform-browser.mjs:465\r\ninvokeTask @ zone.js:406\r\nonInvokeTask @ core.mjs:25444\r\ninvokeTask @ zone.js:405\r\nrunTask @ zone.js:178\r\ninvokeTask @ zone.js:487\r\ninvokeTask @ zone.js:1600\r\nglobalZoneAwareCallback @ zone.js:1626\r\ncore.mjs:6461 ERROR TypeError: Cannot read properties of undefined (reading 'focusInitialElementWhenReady')\r\n    at MatDialogContainer._trapFocus (dialog.mjs:233:33)\r\n    at MatDialogContainer._onAnimationDone (dialog.mjs:332:18)\r\n    at MatDialogContainer_animation_dialogContainer_done_HostBindingHandler (dialog.mjs:358:105)\r\n    at executeListenerWithErrorHandling (core.mjs:14952:1)\r\n    at wrapListenerIn_markDirtyAndPreventDefault (core.mjs:14990:1)\r\n    at animations.mjs:189:34\r\n    at ZoneDelegate.invoke (zone.js:372:1)\r\n    at Object.onInvoke (core.mjs:25457:1)\r\n    at ZoneDelegate.invoke (zone.js:371:1)\r\n    at Zone.run (zone.js:134:1)\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24317","RelatedDescription":"Open issue \"bug(MatDialog): js error on open in combination with ngx-translate TranslateService\" (#24317)"},{"Id":"1118443084","IsPullRequest":false,"CreatedAt":"2022-01-30T07:20:40","Actor":"jayddaniels","Number":"24313","RawContent":null,"Title":"bug(COMPONENT): mat-grid-list does not show mat-grid-tile inside component","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n\"mat-grid-list\" list only shows \"mat-grid-tile\" if it is directly inisde it. It does not show it, if it is put into a child components html file.\r\nThis is inconsistent to how for example the \"mat-nav-list\" and \"mat-list-item\" works, which does show the \"mat-list-item\" even if it is put into a child component.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/components-issue-21e7dn?file=src/app/example-component.html\r\n2. see example component html and child component html\r\n\r\n### Expected Behavior\r\n\r\nDo show the \"mat-grid-tile\", even if the tile element is put inside a child component.\r\n\r\n### Actual Behavior\r\n\r\nShows the \"mat-grid-tile\" only if directly inside the \"mat-grid-list\" element\r\n\r\n### Environment\r\n\r\n- Angular:12.2.9,  13.0.0 and other versions aswell\r\n- CDK/Material:13.1.3\r\n- Browser(s): Chrome\r\n- Operating System Windows\r\n","Url":"https://github.com/angular/components/issues/24313","RelatedDescription":"Open issue \"bug(COMPONENT): mat-grid-list does not show mat-grid-tile inside component\" (#24313)"},{"Id":"1118313016","IsPullRequest":false,"CreatedAt":"2022-01-29T19:51:35","Actor":"flavianh","Number":"24312","RawContent":null,"Title":"bug(Typography): Custom typography in a theme affects components but not mat-typography in Angular 13","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am testing [Kid's theme for the documentation](https://material.angular.io/guide/typography#typography-configs-and-theming).\r\nThe documentation claims in the next section \"Using typography styles in your application\" that all text under an element with `class=\"mat-typography\"` should show up with the custom Material typography.\r\nHowever, combining both a \"typography\" declaration and `class=\"mat-typography\"` does not seem to work as advertised in the documentation.\r\n\n\n### Reproduction\n\nSteps to reproduce: Launch [the StackBlitz](https://stackblitz.com/edit/angular-r4gb4p-euukwk?devtoolsheight=33&file=src/themes.scss)\r\n\n\n### Expected Behavior\n\nAll text should show up as Comic Sans MS\n\n### Actual Behavior\n\nOnly Material components show up with a text in Comic Sans MS\n\n### Environment\n\n- Angular: 13.2.0\r\n- CDK/Material: 13.2.0\r\n- Browser(s): Chrome (untested on others)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS (untested on others)\r\n","Url":"https://github.com/angular/components/issues/24312","RelatedDescription":"Open issue \"bug(Typography): Custom typography in a theme affects components but not mat-typography in Angular 13\" (#24312)"},{"Id":"1118115633","IsPullRequest":true,"CreatedAt":"2022-01-29T08:29:30","Actor":"crisbeto","Number":"24309","RawContent":null,"Title":"perf(material-experimental/mdc-table): reduce bundle size","State":"open","Body":"Uses a mixin from MDC that excludes some styles we don't need in order to reduce the bundle size. This shaves off ~3.3kb from the bundle and base component styles.","Url":"https://github.com/angular/components/pull/24309","RelatedDescription":"Open PR \"perf(material-experimental/mdc-table): reduce bundle size\" (#24309)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-02-02T03:30:03.7165348Z","RunDurationInMilliseconds":2697}