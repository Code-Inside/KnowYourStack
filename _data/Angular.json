{"Data":{"Angular-Issues":{"Issues":[{"Id":"1098508449","IsPullRequest":true,"CreatedAt":"2022-01-11T00:00:40","Actor":"atscott","Number":"44679","RawContent":null,"Title":"build: enable useUnknownInCatchVariables for packages","State":"open","Body":"This unblocks the internal migration to turn the option on in g3.\r\n","Url":"https://github.com/angular/angular/pull/44679","RelatedDescription":"Open PR \"build: enable useUnknownInCatchVariables for packages\" (#44679)"},{"Id":"1098459884","IsPullRequest":true,"CreatedAt":"2022-01-10T22:38:02","Actor":"alxhub","Number":"44678","RawContent":null,"Title":"Fix 3 \"Illegal State\" bugs in the Angular Indexer","State":"open","Body":"This PR contains 3 commits, each of which fixes a separate crash in the Angular Indexer:\r\n\r\n* Bindings to component properties using `this` as a receiver: `{{this.foo}}`\r\n* Expressions that contain a comment: `{{foo // comment}}`\r\n* SVG and other namespaced elements: `<svg></svg>`\r\n\r\nEach of these templates would previously crash the indexer.","Url":"https://github.com/angular/angular/pull/44678","RelatedDescription":"Open PR \"Fix 3 \"Illegal State\" bugs in the Angular Indexer\" (#44678)"},{"Id":"1098442826","IsPullRequest":true,"CreatedAt":"2022-01-10T22:14:44","Actor":"AndrewKushnir","Number":"44677","RawContent":null,"Title":"ci: add golden files for runtime error codes","State":"open","Body":"Runtime error codes in the Core, Common and Forms packages were not included into the `public-api` group reviews. This commit creates the necessary golden files to keep track of further changes in the runtime codes.\r\n\r\nThis is a followup from https://github.com/angular/angular/pull/44398#issuecomment-1006910976.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44677","RelatedDescription":"Open PR \"ci: add golden files for runtime error codes\" (#44677)"},{"Id":"1098359530","IsPullRequest":true,"CreatedAt":"2022-01-10T20:51:03","Actor":"JoostK","Number":"44676","RawContent":null,"Title":"refactor(compiler): remove ViewEngine identifiers","State":"open","Body":"This commit removes the leftover `Identifiers` class that was used in the\r\nViewEngine compiler. The remaining usages of the `inlineInterpolate` and\r\n`interpolate` instructions were refactored to make use of an\r\n`InterpolationExpression` output expression to capture the argument list of an\r\ninterpolation expression. An attempt was made to refactor this further by\r\nconverting to the desired interpolation instruction immediately, but some\r\ndownstream consumers are designed in a way where the argument list itself is\r\nneeded, e.g. as other arguments need to be prepended/appended.","Url":"https://github.com/angular/angular/pull/44676","RelatedDescription":"Open PR \"refactor(compiler): remove ViewEngine identifiers\" (#44676)"},{"Id":"1098195189","IsPullRequest":false,"CreatedAt":"2022-01-10T17:49:51","Actor":"erietz","Number":"44675","RawContent":null,"Title":"ng test spits binary data to terminal","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nRunning `npx ng test` on a fresh project is broken and displays binary data to the terminal.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/erietz/angular-bug\n\n### Please provide the exception or error you saw\n\n```true\nBinary text on terminal\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.1.2\r\nNode: 16.13.1\r\nPackage Manager: npm 8.1.2\r\nOS: linux x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1301.2 (cli-only)\r\n@angular-devkit/core         13.1.2 (cli-only)\r\n@angular-devkit/schematics   13.1.2 (cli-only)\r\n@schematics/angular          13.1.2 (cli-only)\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44675","RelatedDescription":"Closed issue \"ng test spits binary data to terminal\" (#44675)"},{"Id":"1097875919","IsPullRequest":true,"CreatedAt":"2022-01-10T13:03:43","Actor":"shejialuo","Number":"44674","RawContent":null,"Title":"docs(docs-infra): change the testing guide due to deprecation","State":"open","Body":"The jasmine used in the docs is\r\n\r\n```typescript\r\nexpect(<variableName>).<matcher>(predicate, failOutput)\r\n```\r\n\r\nThe new version should be\r\n\r\n```typescript\r\nexpect(<variableName>).withContext(failOutput).<matcher>(predicate)\r\n```\r\n\r\nSo, this commit mainly focuses on changing the former to latter with\r\nformat below\r\n\r\n```typescript\r\nexpect(<variableName>)\r\n  .withContext(failOutput)\r\n  .<matcher>(predicate)\r\n```\r\n\r\nAnd for RxJs, see https://rxjs.dev/deprecations/subscribe-arguments.\r\n\r\n> For example someone could name functions poorly and confuse the next\r\nreader: `source$.subscribe(doSomething, doSomethingElse, lol)` with that\r\nsignature, you have to know unapparent details about subscribe, where\r\nusing a partial observer solves that neatly: `source$.subscribe({ next:\r\ndoSomething, error: doSomethingElse, complete: lol }`).\r\n\r\nThis commit also does this conversion.\r\n\r\nLast, remove the unused imported `async` from file\r\n`twain.component.marbles.spec.ts`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThere are no deprecation notations.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44674","RelatedDescription":"Open PR \"docs(docs-infra): change the testing guide due to deprecation\" (#44674)"},{"Id":"1097870399","IsPullRequest":true,"CreatedAt":"2022-01-10T12:59:17","Actor":"shejialuo","Number":"44672","RawContent":null,"Title":"docs(docs-infra): change the tesing guide due to deprecation","State":"closed","Body":"The jasmine used in the docs is\r\n\r\n```typescript\r\nexpect(<variableName>).<matcher>(predicate, failOutput)\r\n```\r\n\r\nThe new version should be\r\n\r\n```typescript\r\nexpect(<variableName>).withContext(failOutput).<match>(predicate)\r\n```\r\n\r\nSo, this commit mainly focuses on changing the former to latter with\r\nformat below\r\n\r\n```typescript\r\nexpect(<variableName>)\r\n  .withContext(failOutput)\r\n  .<matcher>(predicate)\r\n```\r\n\r\nAnd for RxJs, see https://rxjs.dev/deprecations/subscribe-arguments.\r\n\r\n> For example someone could name functions poorly and confuse the next\r\nreader: `source$.subscribe(doSomething, doSomethingElse, lol)` with that\r\nsignature, you have to know unapparent details about subscribe, where\r\nusing a partial observer solves that neatly: `source$.subscribe({ next:\r\ndoSomething, error: doSomethingElse, complete: lol }`).\r\n\r\nThis commit also does this conversion.\r\n\r\nLast, remove the unused imported `async` from file\r\n`twain.component.marbles.spec.ts`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe jasmine used in the docs is\r\n\r\n```typescript\r\nexpect(<variableName>).<matcher>(predicate, failOutput)\r\n```\r\n\r\nThe new version should be\r\n\r\n```typescript\r\nexpect(<variableName>).withContext(failOutput).<match>(predicate)\r\n```\r\n\r\nSo, this commit mainly focuses on changing the former to latter with\r\nformat below\r\n\r\n```typescript\r\nexpect(<variableName>)\r\n  .withContext(failOutput)\r\n  .<matcher>(predicate)\r\n```\r\n\r\nAnd for RxJs, see https://rxjs.dev/deprecations/subscribe-arguments.\r\n\r\n> For example someone could name functions poorly and confuse the next\r\nreader: `source$.subscribe(doSomething, doSomethingElse, lol)` with that\r\nsignature, you have to know unapparent details about subscribe, where\r\nusing a partial observer solves that neatly: `source$.subscribe({ next:\r\ndoSomething, error: doSomethingElse, complete: lol }`).\r\n\r\nThis commit also does this conversion.\r\n\r\nLast, remove the unused imported `async` from file\r\n`twain.component.marbles.spec.ts`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44672","RelatedDescription":"Closed or merged PR \"docs(docs-infra): change the tesing guide due to deprecation\" (#44672)"},{"Id":"1097871122","IsPullRequest":false,"CreatedAt":"2022-01-10T12:58:55","Actor":"nicolas-garcia-kintai","Number":"44673","RawContent":null,"Title":"Service Worker error on Android devices","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello Everyone,\r\n\r\n2 or 3 months ago we implemented service worker in our dashboard project. So far, it works really really great except for these 2 exceptions that I'm going to ask help.\r\n\r\nIn our project, we also implemented Rollbar to have a more detailed error tracking and in the last 2/3 weeks we received an error in ServiceWorker registration process:\r\n\r\n`Error: Rejected (Most recent call first)`\r\n\r\n`File (unknown) line 85 col 432 in ServiceWorkerContainer.<anonymous>\r\nFile (unknown) line 32 col 138 in ServiceWorkerContainer.register\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 2902094 in d._next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 315169 in d.__tryOrUnsub\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 314390 in d.next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 313561 in c._next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 313335 in c.next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 617063 in l._next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 313335 in l.next\r\nFile https://xyz.com/main-es2015.979a4121e45f0a929103.js  line 1 col 274756 in l.notifyNext`\r\n\r\nThis error happened twice already, but the catch about it is that, thanks to rollbar, we can see that it happened only in Android devices. First with Samsung Internet browser and then happened with Chrome Mobile browser.\r\n\r\nInvestigating earlier I had read that it has to do MAYBE with how user sets the privacy of the browser so thats why service worker cant get registered.\r\n\r\nBut in this or any other case, is there a way to implement a catch on SW Registration errors so we can handle it better?\r\n\r\nThanks in advance\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44673","RelatedDescription":"Open issue \"Service Worker error on Android devices\" (#44673)"},{"Id":"1097865720","IsPullRequest":true,"CreatedAt":"2022-01-10T12:52:56","Actor":"shejialuo","Number":"44671","RawContent":null,"Title":"docs(docs-infra): change the tesing guide dut to deprecation","State":"closed","Body":"The jasmine used in the docs is\r\n\r\n```typescript\r\nexpect(<variableName>).<matcher>(predicate, failOutput)\r\n```\r\n\r\nThe new version should be\r\n\r\n```typescript\r\nexpect(<variableName>).withContext(failOutput).<match>(predicate)\r\n```\r\n\r\nSo, this commit mainly focuses on changing the former to latter with\r\nformat below\r\n\r\n```typescript\r\nexpect(<variableName>)\r\n  .withContext(failOutput)\r\n  .<matcher>(predicate)\r\n```\r\n\r\nAnd for RxJs, see https://rxjs.dev/deprecations/subscribe-arguments.\r\n\r\n> For example someone could name functions poorly and confuse the next\r\nreader: `source$.subscribe(doSomething, doSomethingElse, lol)` with that\r\nsignature, you have to know unapparent details about subscribe, where\r\nusing a partial observer solves that neatly: `source$.subscribe({ next:\r\ndoSomething, error: doSomethingElse, complete: lol }`).\r\n\r\nThis commit also does this conversion.\r\n\r\nLast, remove the unused imported `async` from file\r\n`twain.component.marbles.spec.ts`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44671","RelatedDescription":"Closed or merged PR \"docs(docs-infra): change the tesing guide dut to deprecation\" (#44671)"},{"Id":"1097295859","IsPullRequest":true,"CreatedAt":"2022-01-09T20:29:01","Actor":"JoostK","Number":"44669","RawContent":null,"Title":"fix(ngcc): support element accesses for export declarations","State":"open","Body":"Bundlers like Rollup may use an element access expression for an export\r\ndeclaration, which causes ngcc to ignore those export declarations possibly\r\nresulting in incomplete processing of packages.\r\n\r\nElement access syntax may be used when the declared name is not considered\r\nas valid JS identifier, but bundlers may be conservative in determining whether\r\nan identifier can be used (to emit a property access) and opt for a string\r\nliteral in an element access instead.\r\n\r\nThe element access syntax introduces a problem for ngcc, where it wouldn't\r\nconsider such export as class declaration, causing them to be skipped. The\r\nngtsc compiler is implemented with the assumption that all class declarations\r\nuse a `ts.Identifier` as name, whereas the element access is using a string\r\nliteral for the declared name. This makes it troublesome for ngcc to support\r\nthis syntax form in UMD bundles.\r\n\r\nTo work around the problem, this function transforms these access expressions\r\ninto regular property accesses. The source text is parsed to an AST to allow\r\nfinding the element accesses in a robust way, after which the affected text\r\nranges are replaced with property accesses in the original source text.\r\n\r\nCloses #44037","Url":"https://github.com/angular/angular/pull/44669","RelatedDescription":"Open PR \"fix(ngcc): support element accesses for export declarations\" (#44669)"},{"Id":"1097257836","IsPullRequest":false,"CreatedAt":"2022-01-09T18:12:54","Actor":"markb-trustifi","Number":"44668","RawContent":null,"Title":"CSP issue when running Angular 13 in Chrome App with manifest v3","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nThe issue is in webpack?\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI want to create an Angular App for Chrome extension with manifest v3.\r\nThe manifest v2 allowed using `unsafe-eval` in CSP:\r\n`\"content_security_policy\": \"script-src 'self' 'unsafe-eval'; object-src 'self'\"`\r\n\r\nOn the other hand, the manifest v3 doesn't allow it and throws an error when running a chrome extension (I can still load an unpacked extension from a local folder).\r\nThe Chrome manifest now has:\r\n```\r\n  \"web_accessible_resources\": [\r\n    {\r\n      \"resources\": [\"*\"],\r\n      \"matches\": [\"<all_urls>\"]\r\n    }\r\n  ],\r\n  \"content_security_policy\": {\r\n    \"extension_pages\": \"script-src 'self'; object-src 'self'\"\r\n  }\r\n```\r\n\r\nThe angular.json is:\r\n```\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n    \"myapp\": {\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"projectType\": \"application\",\r\n      \"prefix\": \"app\",\r\n      \"schematics\": {},\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-builders/custom-webpack:browser\",\r\n          \"options\": {\r\n            \"outputPath\": \"build\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"tsConfig\": \"src/tsconfig.app.json\",\r\n            \"outputHashing\": \"none\",\r\n            \"optimization\": {\r\n              \"scripts\": false,\r\n              \"styles\": {\r\n                \"minify\": false,\r\n                \"inlineCritical\": false\r\n              },\r\n              \"fonts\": false\r\n            },\r\n            \"assets\": [\r\n              \"src/favicon.ico\"\r\n            ],\r\n            \"styles\": [\r\n              \"src/assets/css/styles.scss\"\r\n            ]\r\n          }\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-builders/custom-webpack:dev-server\",\r\n          \"options\": {\r\n            \"browserTarget\": \"myapp:build\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"defaultProject\": \"myapp\"\r\n}\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nmain.js:359 Uncaught EvalError: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: \"script-src 'self'\".\r\n\r\n    at Object.14431 (main.js:359)\r\n    at __webpack_require__ (runtime.js:31)\r\n    at __webpack_exec__ (main.js:5423)\r\n    at main.js:5424\r\n    at webpackJsonpCallback (runtime.js:335)\r\n    at main.js:9\r\n```\r\n\r\nThe error is relevant to this EVAL:\r\n```\r\n/***/ 14431:\r\n/*!*********************!*\\\r\n  !*** ./src/main.ts ***!\r\n  \\*********************/\r\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 22313);\\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 5000);\\n/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 36747);\\n/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 92340);\\n\\n\\n\\n\\n\\nif (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {\\n  (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();\\n}\\n\\n_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.platformBrowser().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule).catch(function (err) {\\n  return console.error(err);\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0MzEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxJQUFJRyw2RUFBSixFQUE0QjtBQUN4QkYsRUFBQUEsNkRBQWM7QUFDakI7O0FBQ0RELHNFQUFBLEdBQXNDTSxlQUF0QyxDQUFzREosc0RBQXRELEVBQWlFSyxLQUFqRSxDQUF1RSxVQUFBQyxHQUFHO0FBQUEsU0FBSUMsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQsQ0FBSjtBQUFBLENBQTFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQ2hyb21lRXh0ZW50aW9uQXBwLy4vc3JjL21haW4udHM/NWU2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfX05nQ2xpX2Jvb3RzdHJhcF8xIGZyb20gXCJAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyXCI7XG5pbXBvcnQgeyBlbmFibGVQcm9kTW9kZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSAnLi9hcHAvYXBwLm1vZHVsZSc7XG5pbXBvcnQgeyBlbnZpcm9ubWVudCB9IGZyb20gJy4vZW52aXJvbm1lbnRzL2Vudmlyb25tZW50JztcbmlmIChlbnZpcm9ubWVudC5wcm9kdWN0aW9uKSB7XG4gICAgZW5hYmxlUHJvZE1vZGUoKTtcbn1cbl9fTmdDbGlfYm9vdHN0cmFwXzEucGxhdGZvcm1Ccm93c2VyKCkuYm9vdHN0cmFwTW9kdWxlKEFwcE1vZHVsZSkuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4iXSwibmFtZXMiOlsiX19OZ0NsaV9ib290c3RyYXBfMSIsImVuYWJsZVByb2RNb2RlIiwiQXBwTW9kdWxlIiwiZW52aXJvbm1lbnQiLCJwcm9kdWN0aW9uIiwicGxhdGZvcm1Ccm93c2VyIiwiYm9vdHN0cmFwTW9kdWxlIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///14431\\n\");\r\n\r\n/***/ }),\r\n```\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\nAngular CLI: 13.1.2\r\nNode: 14.17.6\r\nPackage Manager: npm 6.14.15\r\nOS: darwin x64\r\n\r\nAngular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/build-webpack   0.1301.2\r\n@angular-devkit/core            13.1.2\r\n@angular-devkit/schematics      13.1.2\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2\r\nrxjs                            6.6.7\r\ntypescript                      4.5.4\r\nwebpack                         5.65.0\r\n\r\n```\r\n","Url":"https://github.com/angular/angular/issues/44668","RelatedDescription":"Closed issue \"CSP issue when running Angular 13 in Chrome App with manifest v3\" (#44668)"},{"Id":"1097151450","IsPullRequest":false,"CreatedAt":"2022-01-09T10:11:49","Actor":"matrium0","Number":"44667","RawContent":null,"Title":"Add a directive to enable binding async pipe without using *ngIf","State":"closed","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncore\n\n### Description\n\nSubscribing to an Observable and using the result in view context requires the use of *ngIf  and the async pipe. If you want to display content BEFORE the Observable emits a value you are left with using something like **else anotherTemplate**. This solves some cases, but is very limiting. Sometimes you actually want to display the content within. For example you could create a component LoadingIndicaterOverlayWrapper that greys out the actual content until a value arrives. This is not possible with *ngIf and the async pipe, since the ngIf is falsey until it emits.\r\n\r\n```\r\n<div *ngIf=\"filteredBooks$ | async as books\">\r\n    <app-loading-indicator-overlay-wrapper [showOverlay]=\"**???????**\">\r\n      ... content\r\n    </app-loading-indicator-overlay-wrapper>\r\n</div>\r\n```\n\n### Proposed solution\n\nSee how NGRX resolves this issue with their ngrxLet directive: https://ngrx.io/guide/component/let\r\n\r\nVanilla Angular could profit from something similar imo.\n\n### Alternatives considered\n\nAt the moment you can use the dirty trick of using an object within *ngIf, so that it always resolves to truthy, but that is a bit messy and seems like a work around.\r\nSource\r\nhttps://medium.com/@yurykatkov/how-to-avoid-multiple-async-pipes-in-angular-ff0d51a8d368","Url":"https://github.com/angular/angular/issues/44667","RelatedDescription":"Closed issue \"Add a directive to enable binding async pipe without using *ngIf\" (#44667)"},{"Id":"1097141593","IsPullRequest":true,"CreatedAt":"2022-01-09T08:56:20","Actor":"crisbeto","Number":"44666","RawContent":null,"Title":"feat(core): allow for injector to be specified when creating an embedded view","State":"open","Body":"Adds support for passing in an optional injector when creating an embedded view through `ViewContainerRef.createEmbeddedView` and `TemplateRef.createEmbeddedView`. The injector allows for the DI behavior to be customized within the specific template.\r\n\r\nFixes #14935.","Url":"https://github.com/angular/angular/pull/44666","RelatedDescription":"Open PR \"feat(core): allow for injector to be specified when creating an embedded view\" (#44666)"},{"Id":"1097074895","IsPullRequest":false,"CreatedAt":"2022-01-09T01:00:28","Actor":"SetTrend","Number":"44665","RawContent":null,"Title":"Update outdated information in the documentation","State":"open","Body":"Much of the [Routing information](https://angular.io/guide/router) suggests to use `forRoot()` or `forChild()`. However, in [Singleton services](https://angular.io/guide/singleton-services) you write:\r\n\r\n> since Angular 6.0, the best practice for providing services is with the `@Injectable()` `providedIn` property as it makes your services tree-shakable.\r\n\r\nThe contradiction also applies to other Angular features, e.g. [`entryComponents`](https://angular.io/guide/entry-components).\r\n\r\nI propose to revise the documentation to not contradict itself and to provide updated information in all pages. Or, alternatively, to specify, e.g., why the Router is an exception to the rule.","Url":"https://github.com/angular/angular/issues/44665","RelatedDescription":"Open issue \"Update outdated information in the documentation\" (#44665)"},{"Id":"1096898850","IsPullRequest":false,"CreatedAt":"2022-01-08T11:02:10","Actor":"lifeoflikhon","Number":"44664","RawContent":null,"Title":"CSS psudo selector :empty not working","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI was trying to hide an element based on another element has children or not. :empty does not work.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/44664","RelatedDescription":"Closed issue \"CSS psudo selector :empty not working\" (#44664)"},{"Id":"1096877992","IsPullRequest":true,"CreatedAt":"2022-01-08T09:23:16","Actor":"ramthir","Number":"44663","RawContent":null,"Title":"refactor(common): make the error messages tree shakable","State":"open","Body":"Make Long error messages tree-shakable in the production build with error codes.\r\n\r\nfixes #40096\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nInvalid argument errors in the pipes are not tree-shakable in the production build.\r\n\r\nIssue Number: 40096\r\n\r\n\r\n## What is the new behavior?\r\nMake the invalid argument errors in the pipes tree-shakable in the production build.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44663","RelatedDescription":"Open PR \"refactor(common): make the error messages tree shakable\" (#44663)"},{"Id":"1096739937","IsPullRequest":false,"CreatedAt":"2022-01-08T00:09:33","Actor":"K0IN","Number":"44661","RawContent":null,"Title":"FormGroup should have (optional) type checks on members","State":"closed","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\n[FormBuilder.group](https://github.com/angular/angular/blob/13d5f64f3986c5ce98196114a5709c02ad3d6fd9/packages/forms/src/form_builder.ts#L81) returns `FormGroup` with no knowledge of the child controls (since they can be dynamically added). \r\n\r\nI find this bad since we cannot find out (statically), if a control is present on the group. \r\n\r\nWe mostly (99% of the time) have forms with static amount of controls in a form.\r\n\r\nSo it would be really nice to have a generic formgroup to index the controls by name and have proper type checking.\r\n\r\nimagine following code:\r\n\r\n```\r\ninterface MySendData {\r\n  a: string, \r\n  b: string\r\n}\r\n\r\nconst form = new FormGroup({ a: \"\", b: \"\" } as MySendData); // imagine we would check the interface implementation \r\n\r\n[...]\r\n\r\nform.controls.a.reset(); // works fine\r\nform.controls.x.reset(); // ops we cant find this statically\r\n```\r\n\r\nYes, you can of cause check if the property exists, but it would be really delightful to see where you need to change the code if you change the interface (see example).\r\n\r\n\r\nWorkaround: \r\n\r\nmanually overwrite the controls property, and use keyof my interface to index the controls\r\n\r\n### Proposed solution\r\n\r\nAdd a generic type to `FormGroup` (to indexes obj.controls), so we can statically see the available control names.\r\n\r\n### Alternatives considered\r\n\r\nAdd a new `FormGroup` (like a frozen `FormGroup`) type that does not allow dynamic adding or removing of controls","Url":"https://github.com/angular/angular/issues/44661","RelatedDescription":"Closed issue \"FormGroup should have (optional) type checks on members\" (#44661)"},{"Id":"1096742548","IsPullRequest":false,"CreatedAt":"2022-01-07T22:57:02","Actor":"tianyangren","Number":"44662","RawContent":null,"Title":"Outdated docs","State":"open","Body":"### Description\n\nIn the third paragraph: \"For example, HeroListComponent has a heroes property that holds an array of heroes.\" \r\n\r\nI don't see \"HeroListComponent\" in the \"Tour of Heroes tutorial\" - mentioned in the first paragraph where doc examples are drawn from, docs might be outdated. \n\n### What is the affected URL?\n\nhttps://angular.io/guide/architecture-components\n\n### Please provide the steps to reproduce the issue\n\n_No response_\n\n### Please provide the expected behavior vs the actual behavior you encountered\n\n_No response_\n\n### Please provide a screenshot if possible\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version.\n\n_No response_","Url":"https://github.com/angular/angular/issues/44662","RelatedDescription":"Open issue \"Outdated docs\" (#44662)"},{"Id":"1096016800","IsPullRequest":true,"CreatedAt":"2022-01-07T19:16:59","Actor":"renovate[bot]","Number":"44655","RawContent":null,"Title":"build: update dependency google-closure-compiler to v20220104","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [google-closure-compiler](https://developers.google.com/closure/compiler/) ([source](https://togithub.com/google/closure-compiler-npm)) | [`^20211201.0.0` -> `^20220104.0.0`](https://renovatebot.com/diffs/npm/google-closure-compiler/20211201.0.0/20220104.0.0) | [![age](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/compatibility-slim/20211201.0.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/confidence-slim/20211201.0.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [google-closure-compiler](https://developers.google.com/closure/compiler/) ([source](https://togithub.com/google/closure-compiler-npm)) | [`20211201.0.0` -> `20220104.0.0`](https://renovatebot.com/diffs/npm/google-closure-compiler/20211201.0.0/20220104.0.0) | [![age](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/compatibility-slim/20211201.0.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/google-closure-compiler/20220104.0.0/confidence-slim/20211201.0.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>google/closure-compiler-npm</summary>\n\n### [`v20220104.0.0`](https://togithub.com/google/closure-compiler-npm/compare/v20211201.0.0...v20220104.0.0)\n\n[Compare Source](https://togithub.com/google/closure-compiler-npm/compare/v20211201.0.0...v20220104.0.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/44655","RelatedDescription":"Closed or merged PR \"build: update dependency google-closure-compiler to v20220104\" (#44655)"},{"Id":"1096141271","IsPullRequest":true,"CreatedAt":"2022-01-07T18:12:03","Actor":"crisbeto","Number":"44657","RawContent":null,"Title":"fix(compiler-cli): incorrectly interpreting $any calls with a property read","State":"closed","Body":"This was flagged during the code review of #44580. When generating a type check block, we were interpreting any call to `$any` as an `as any` cast, even if it's part of a `PropertyRead` (e.g. `foo.$any(1)`). This is handled correctly in other parts of the compiler, but it looks like it was missed in the type checker.","Url":"https://github.com/angular/angular/pull/44657","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): incorrectly interpreting $any calls with a property read\" (#44657)"},{"Id":"1095619969","IsPullRequest":true,"CreatedAt":"2022-01-07T18:10:23","Actor":"dgp1130","Number":"44649","RawContent":null,"Title":"refactor(compiler-cli): update template typechecking link to latest angular.io version","State":"closed","Body":"This page exists in the most recent angular.io version (v13 currently), so there's no need to link to an old version. The hash also refers to the title section of the page, which isn't necessary and is now dropped.\r\n\r\nThis was originally added in https://github.com/angular/angular/pull/34887, and doesn't appear to actually require the v9 version, so I don't see any reason not to update the link.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Refactoring (no functional changes, no api changes)\r\n\r\n## What is the current behavior?\r\n\r\nError message links to old v9 documentation.\r\n\r\n## What is the new behavior?\r\n\r\nError message now links to the most current documentation.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [X] No\r\n\r\n## Other information\r\n\r\nIdentified in https://github.com/angular/angular/pull/44391#discussion_r779779154, but pulled into its own PR to be more obvious about the change.","Url":"https://github.com/angular/angular/pull/44649","RelatedDescription":"Closed or merged PR \"refactor(compiler-cli): update template typechecking link to latest angular.io version\" (#44649)"},{"Id":"1096000282","IsPullRequest":true,"CreatedAt":"2022-01-07T18:01:05","Actor":"fahadashiq12","Number":"44653","RawContent":null,"Title":"Create Learning","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/44653","RelatedDescription":"Closed or merged PR \"Create Learning\" (#44653)"},{"Id":"1095858427","IsPullRequest":true,"CreatedAt":"2022-01-07T17:45:09","Actor":"AndrewKushnir","Number":"44652","RawContent":null,"Title":"[13.1.x] refactor: make RuntimeError class reusable across packages","State":"closed","Body":"This PR is a patch-only version of https://github.com/angular/angular/pull/44398 (there was a minor merge conflict).","Url":"https://github.com/angular/angular/pull/44652","RelatedDescription":"Closed or merged PR \"[13.1.x] refactor: make RuntimeError class reusable across packages\" (#44652)"},{"Id":"1096424881","IsPullRequest":false,"CreatedAt":"2022-01-07T15:35:14","Actor":"nfMalde","Number":"44660","RawContent":null,"Title":"Ivy: Render HTML from String / dynamic rendering","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler, core, platform-browser-dynamic, platform-browser\n\n### Description\n\nAs far as I know the old aproach was to inject the JITCompiler and use it to render your HTML in an anonymous component.\r\nThis worked so far. I use editable HTML in DB which uses key features as substituting variables and directives like *ngIf or  *ngSwitch.\r\n\r\nWhich does not work anymore in production mode (Angular 12.x)\r\nI browsed stackoverflow and other forums to find an workarround for this and these are not working anymore (like loading the JITCompiler into Providers, which results in  \"JIT Compiler unavailable\". \r\n \r\nAs I found not soulution for ivy/ng 12 i considered this feature as still missing. \r\n\r\nBest,\r\n\r\nMalte\r\n\n\n### Proposed solution\n\nComponent to render html strings.\r\n\r\nExample:\r\n``` Html\r\n<render-component [html]=\"...\" [render-data]=\"{ show: true}></render-component>\r\n````\r\n\r\n[html] has the following value:\r\n``` Javascript\r\n\"<p *ngIf=\\\"show\\\">Hello!</p>\"\r\n```\r\n\r\nWhich display in the case if show is true:\r\n\r\n``` Html\r\n<p>Hello!</p>\r\n```\r\n\r\n\n\n### Alternatives considered\n\nAn Service to render html on the fly.\r\n\r\n\r\nE.g.:\r\n\r\n[p3x-compile](https://github.com/patrikx3/angular-compile)\r\n[Html Compile](https://github.com/codehint-ng/ng-controls/blob/master/projects/html-compiler/src/lib/html-compiler.component.ts)\r\n\r\n","Url":"https://github.com/angular/angular/issues/44660","RelatedDescription":"Open issue \"Ivy: Render HTML from String / dynamic rendering\" (#44660)"},{"Id":"1096361052","IsPullRequest":true,"CreatedAt":"2022-01-07T14:22:52","Actor":"AnkitSharma-007","Number":"44659","RawContent":null,"Title":"docs: add Ankit to GDE resources","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/44659","RelatedDescription":"Open PR \"docs: add Ankit to GDE resources\" (#44659)"},{"Id":"1096272898","IsPullRequest":false,"CreatedAt":"2022-01-07T12:25:15","Actor":"SchnWalter","Number":"44658","RawContent":null,"Title":"Use stricter typings for the NgModule decorator options, not an any array","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nThe `NgModule` interface is used as options for the `@NgModule()` decorator and accepts `any[]` for various properties, it should use stricter typings.\r\n\r\nThis is the current interface:\r\n```\r\nexport declare interface NgModule {\r\n  /* ... */\r\n  declarations?: Array<Type<any> | any[]>;\r\n  imports?: Array<Type<any> | ModuleWithProviders<{}> | any[]>;\r\n  /* ... */\r\n  exports?: Array<Type<any> | any[]>;\r\n  entryComponents?: Array<Type<any> | any[]>;\r\n  bootstrap?: Array<Type<any> | any[]>;\r\n  schemas?: Array<SchemaMetadata | any[]>;\r\n  /* ... */\r\n}\r\n```\r\n\r\nIt would be a breaking change, but it would also help TSC provide better suggestions like this, where I've provided a function reference instead of calling the `.forRoot()` static method of a module:\r\n\r\n```\r\nError: web/src/app/app.module.ts:15:7 - error TS2322: Type '() => ModuleWithProviders<MyExampleModule>' is not assignable to type 'Type<any> | ModuleWithProviders<{}>'.\r\n  Property 'ngModule' is missing in type '() => ModuleWithProviders<MyExampleModule>' but required in type 'ModuleWithProviders<{}>'.\r\n\r\n15       MyExampleModule.forRoot,\r\n         ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  node_modules/@angular/core/core.d.ts:4749:5\r\n    4749     ngModule: Type<T>;\r\n             ~~~~~~~~\r\n    'ngModule' is declared here.\r\n  web/src/app/app.module.ts:15:7\r\n    15       MyExampleModule.forRoot,\r\n             ~~~~~~~~~~~~~~~~~~~~~~~\r\n    Did you mean to call this expression?\r\n```\r\n\r\n### Proposed solution\r\n\r\nReplace `any[]` with a stricter type, and maybe even use a helper type alias like this one:\r\n\r\n```\r\nexport type ListEntryOrList<T> = T | T[];\r\n```\r\n\r\nIf the above mentioned type alias would be used, then the inteface would look something like this:\r\n```\r\nexport declare interface NgModule {\r\n  /* ... */\r\n  declarations?: ListEntryOrList<Type<any>>[];\r\n  imports?: ListEntryOrList<Type<any> | ModuleWithProviders<{}>>[];\r\n  /* ... */\r\n  exports?: ListEntryOrList<Type<any>>[];\r\n  entryComponents?: ListEntryOrList<Type<any>>[];\r\n  bootstrap?: ListEntryOrList<Type<any>>[];\r\n  schemas?: ListEntryOrList<SchemaMetadata>[];\r\n  /* ... */\r\n}\r\n```\r\n\r\nThis sullution assumes that the `any` is not really any. If other values are accepted, like factory functions, those could be included in the updated/stricter type definition.\r\n\r\n### Alternatives considered\r\n\r\nYou can avoid arrays, but that beats the purpose of having the support for arrays in the first place.","Url":"https://github.com/angular/angular/issues/44658","RelatedDescription":"Open issue \"Use stricter typings for the NgModule decorator options, not an any array\" (#44658)"},{"Id":"1096136700","IsPullRequest":false,"CreatedAt":"2022-01-07T09:26:14","Actor":"tomii8","Number":"44656","RawContent":null,"Title":"Paths are not properly resolved for util libraries for e2e test execution","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter uprade from Angular 12 to 13 I'm facing a problems with loading utils angular library while e2e tests are executed. Even my configuration hasn't change for webdriverio.\r\nI'm using webdriverio with jasmine-framework \r\nLooks like paths are not properly resolved. This part of configuration in tsconfig is not changed.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n[0-0] Error: Cannot find module '@sensors/shared-ng/e2e'\r\n[0-0] Require stack:\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\projects\\shared\\e2e-tests\\expert-mode.e2e.ts\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\jasmine\\lib\\loader.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\jasmine\\lib\\jasmine.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\jasmine-framework\\build\\index.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\utils\\build\\utils.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\utils\\build\\initialisePlugin.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\utils\\build\\index.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\runner\\build\\index.js\r\n[0-0] - D:\\GUI-Projects\\sensors-ng\\node_modules\\@wdio\\local-runner\\build\\run.js\r\n[0-0]     at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\r\n[0-0]     at Function.Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue (D:\\GUI-Projects\\sensors-ng\\node_modules\\@cspotcode\\source-map-support\\source-map-support.js:679:30)\r\n[0-0]     at Function.Module._resolveFilename (D:\\GUI-Projects\\sensors-ng\\node_modules\\tsconfig-paths\\lib\\register.js:75:40)\r\n[0-0]     at Function.Module._load (node:internal/modules/cjs/loader:778:27)\r\n[0-0]     at Module.require (node:internal/modules/cjs/loader:1005:19)\r\n[0-0]     at require (node:internal/modules/cjs/helpers:102:18)\r\n[0-0]     at Object.<anonymous> (D:\\GUI-Projects\\sensors-ng\\projects\\shared\\e2e-tests\\expert-mode.e2e.ts:5:1)\r\n[0-0]     at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n[0-0]     at Module.m._compile (D:\\GUI-Projects\\sensors-ng\\node_modules\\ts-node\\src\\index.ts:1371:23)\r\n[0-0]     at Module.m._compile (D:\\GUI-Projects\\sensors-ng\\node_modules\\ts-node\\src\\index.ts:1371:23) {\r\n[0-0]   code: 'MODULE_NOT_FOUND',\r\n[0-0]   requireStack: [\r\n[0-0]     'D:\\\\GUI-Projects\\\\sensors-ng\\\\projects\\\\shared\\\\e2e-tests\\\\expert-mode.e2e.ts',\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.1.2\r\nNode: 16\r\nPackage Manager: yarn \r\nOS: Windows 10\r\n\r\nAngular: 13.1.1\r\nTypescript: 4.4.4\r\n\r\nPackage.json devDependencies:\r\n\"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~13.1.2\",\r\n    \"@angular-eslint/builder\": \"^13.0.1\",\r\n    \"@angular-eslint/eslint-plugin\": \"^13.0.1\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"^13.0.1\",\r\n    \"@angular-eslint/schematics\": \"~13.0.1\",\r\n    \"@angular-eslint/template-parser\": \"^13.0.1\",\r\n    \"@angular/cli\": \"~13.1.2\",\r\n    \"@angular/compiler\": \"~13.1.1\",\r\n    \"@angular/compiler-cli\": \"~13.1.1\",\r\n    \"@angular/core\": \"~13.1.1\",\r\n    \"@babel/polyfill\": \"~7.12.1\",\r\n    \"@compodoc/compodoc\": \"~1.1.15\",\r\n    \"@migalons/angular-wdio-builder\": \"~1.0.2\",\r\n    \"@types/jasmine\": \"~3.10.2\",\r\n    \"@types/node\": \"~14.14.6\",\r\n    \"@wdio/types\": \"~7.16.11\",\r\n    \"@wdio/cli\": \"~7.16.12\",\r\n    \"@wdio/jasmine-framework\": \"~7.16.11\",\r\n    \"@wdio/local-runner\": \"~7.16.12\",\r\n    \"@wdio/spec-reporter\": \"~7.16.11\",\r\n    \"@wdio/static-server-service\": \"~7.16.11\",\r\n    \"assert\": \"~2.0.0\",\r\n    \"chromedriver\": \"~86.0.0\",\r\n    \"commander\": \"~6.1.0\",\r\n    \"concurrently\": \"~5.3.0\",\r\n    \"copyfiles\": \"~2.1.1\",\r\n    \"deepmerge\": \"~4.2.1\",\r\n    \"eslint-config-prettier\": \"^8.3.0\",\r\n    \"eslint-plugin-prettier\": \"^4.0.0\",\r\n    \"jasmine-marbles\": \"~0.9.1\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.3.9\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"^2.1.0\",\r\n    \"karma-firefox-launcher\": \"~2.1.2\",\r\n    \"karma-jasmine\": \"~4.0.1\",\r\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\r\n    \"ng-packagr\": \"~13.1.2\",\r\n    \"node-gyp\": \"8.2.0\",\r\n    \"path-browserify\": \"~1.0.1\",\r\n    \"prettier\": \"2.4.1\",\r\n    \"rxjs\": \"~7.4.0\",\r\n    \"ts-node\": \"~10.4.0\",\r\n    \"tsconfig-paths\": \"~3.12.0\",\r\n    \"typescript\": \"~4.4.4\",\r\n    \"util\": \"~0.12.4\",\r\n    \"watch\": \"~1.0.2\",\r\n    \"wdio-chromedriver-service\": \"7.2.2\",\r\n    \"webdriverio\": \"~7.16.12\",\r\n    \"webpack-bundle-analyzer\": \"~4.5.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  }\n```\n\n\n### Anything else?\n\nWebdriver configuration:\r\n\r\n...\r\nrequire('ts-node').register({\r\n  transpileOnly: true,\r\n  compilerOptions: {\r\n    target: \"ES2020\",\r\n    module: \"commonjs\",\r\n    moduleResolution: \"node\",\r\n    sourceMap: true\r\n  },\r\n});\r\n...\r\n\r\nrequire('tsconfig-paths').register({\r\n  baseUrl: './',\r\n  paths: {\r\n'@sensors/shared-ng': [\r\n      'dist/shared'\r\n    ],\r\n    '@sensors/shared-ng/e2e': [\r\n      'dist/shared/e2e'\r\n    ],\r\n    '@sensors/device-elements-ng/e2e': [\r\n      'dist/device-elements/e2e'\r\n    ],\r\n  },\r\n});","Url":"https://github.com/angular/angular/issues/44656","RelatedDescription":"Open issue \"Paths are not properly resolved for util libraries for e2e test execution\" (#44656)"},{"Id":"1096015285","IsPullRequest":true,"CreatedAt":"2022-01-07T06:05:37","Actor":"renovate[bot]","Number":"44654","RawContent":null,"Title":"build: update dependency shelljs to v0.8.5","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [shelljs](https://togithub.com/shelljs/shelljs) | [`0.8.4` -> `0.8.5`](https://renovatebot.com/diffs/npm/shelljs/0.8.4/0.8.5) | [![age](https://badges.renovateapi.com/packages/npm/shelljs/0.8.5/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/shelljs/0.8.5/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/shelljs/0.8.5/compatibility-slim/0.8.4)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/shelljs/0.8.5/confidence-slim/0.8.4)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>shelljs/shelljs</summary>\n\n### [`v0.8.5`](https://togithub.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\n\n[Compare Source](https://togithub.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/44654","RelatedDescription":"Open PR \"build: update dependency shelljs to v0.8.5\" (#44654)"},{"Id":"1095841102","IsPullRequest":true,"CreatedAt":"2022-01-07T00:42:27","Actor":"AndrewKushnir","Number":"44651","RawContent":null,"Title":"build: use correct target name","State":"closed","Body":"Dev mode output was switched from ES5 -> ES2015 recently and as a part of those changes, some target names that contained `_es5` postfixes were changes to `_es2015` instead. This commit fixes the issue with one of the recently merged BUILD files that contained the old (`_es5`) postfix.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Build related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/44651","RelatedDescription":"Closed or merged PR \"build: use correct target name\" (#44651)"},{"Id":"1095646600","IsPullRequest":false,"CreatedAt":"2022-01-06T19:56:44","Actor":"dgp1130","Number":"44650","RawContent":null,"Title":"Link error messages to current version of Angular docs","State":"open","Body":"### Which @angular/* package(s) are relevant/releated to the feature request?\n\ncompiler-cli\n\n### Description\n\nError messages frequently link to angular.io for additional context. This is great for users, however the content on these pages change over time, so error message links could easily fall out of date and stop working (or continue to work but no longer give the context needed by the error).\r\n\r\nI'm marking this as a compiler issue, though the same issue applies to the runtime and we should do the same there.\r\n\r\n/cc @JoostK\n\n### Proposed solution\n\nWe already have archived versions of docs at v*.angular.io, we should link to those versions where appropriate. Ideally, an error message should always link to the same version of Angular they are currently using. So even a user on an LTS (or older) version will link to the correct version of the doc intended by the error message.\r\n\r\nThis does mean that users might not get the most up to date information, but archived docs already include a banner and link to the latest version, so I think historical accuracy is more important and maintainable than recency of information.\n\n### Alternatives considered\n\nThe current solution is to always link to the latest version of the docs (see https://github.com/angular/angular/pull/44649#pullrequestreview-845998595). If docs change, we just update the error message to match (or vice versa). This technically means that we shouldn't remove docs content from the latest AIO version until the Angular versions it's relevant to fall out of LTS (which is a two-year gap I think). It's also easy to forget that an old version linked to particular doc and hard to audit / verify. We also can't change older versions of Angular after their published, so our only remediation mechanism is to update AIO directly.","Url":"https://github.com/angular/angular/issues/44650","RelatedDescription":"Open issue \"Link error messages to current version of Angular docs\" (#44650)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1098524980","IsPullRequest":true,"CreatedAt":"2022-01-11T00:31:46","Actor":"dgp1130","Number":"22469","RawContent":null,"Title":"docs: add README to `@schematics/update`","State":"open","Body":"This just points out that the package is deprecated and should no longer be used.\r\n\r\n@alan-agius4, I believe this is considered a private package since it's experimental, so I didn't really give much context or justification in the README. Let me know if you think there's anything worth mentioning here.","Url":"https://github.com/angular/angular-cli/pull/22469","RelatedDescription":"Open PR \"docs: add README to `@schematics/update`\" (#22469)"},{"Id":"1098520394","IsPullRequest":true,"CreatedAt":"2022-01-11T00:22:44","Actor":"dgp1130","Number":"22468","RawContent":null,"Title":"docs: clarify that patch/next releases do not require framework to release in advance","State":"open","Body":"This allows CLI releases to generally be done in parallel with framework and save a lot of time. Major and minor version bumps do require waiting for FW however and that is unchanged.","Url":"https://github.com/angular/angular-cli/pull/22468","RelatedDescription":"Open PR \"docs: clarify that patch/next releases do not require framework to release in advance\" (#22468)"},{"Id":"1097806004","IsPullRequest":true,"CreatedAt":"2022-01-11T00:13:39","Actor":"alan-agius4","Number":"22456","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use `contenthash` instead of `chunkhash` for chunks","State":"closed","Body":"\r\n\r\nSee https://github.com/waysact/webpack-subresource-integrity/tree/main/webpack-subresource-integrity#caching and https://github.com/waysact/webpack-subresource-integrity/issues/162 for more information about this.\r\n\r\nCloses #22439","Url":"https://github.com/angular/angular-cli/pull/22456","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use `contenthash` instead of `chunkhash` for chunks\" (#22456)"},{"Id":"1091640834","IsPullRequest":false,"CreatedAt":"2022-01-11T00:13:39","Actor":"jcompagner","Number":"22439","RawContent":null,"Title":"subresourceIntegrity gives a warning that i should use [contenthash] with realContentHash = true.","State":"closed","Body":"when i am building with ng build --configuration production --subresourceIntegrity=true\r\n\r\nso enabling subresource integrity i get this warning:\r\n\r\nWarning: webpack-subresource-integrity: Using [hash], [fullhash], [modulehash], or [chunkhash] is dangerous with SRI. The same is true for [contenthash] when realContentHash is disabled. Use [contenthash] and ensure realContentHash is enabled. See the README for more information.\r\n\r\nSo if i want to enabled contenthash with realContentHash to true (which seems to be default if i read the the docs correctly:\r\n\r\nhttps://github.com/waysact/webpack-subresource-integrity/tree/main/webpack-subresource-integrity#readme\r\n\r\nbut as far as i know this configuration is quite hidden away ? we only have that flag?\r\nBut is angular/cli then overwriting that default?\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22439","RelatedDescription":"Closed issue \"subresourceIntegrity gives a warning that i should use [contenthash] with realContentHash = true.\" (#22439)"},{"Id":"1097811290","IsPullRequest":true,"CreatedAt":"2022-01-11T00:13:08","Actor":"alan-agius4","Number":"22457","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly resolve `core-js/proposals/reflect-metadata`","State":"closed","Body":"\r\n\r\nCloses #22443","Url":"https://github.com/angular/angular-cli/pull/22457","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly resolve `core-js/proposals/reflect-metadata`\" (#22457)"},{"Id":"1098491153","IsPullRequest":true,"CreatedAt":"2022-01-10T23:23:59","Actor":"kormide","Number":"22467","RawContent":null,"Title":"build: use placeholder version for stamping","State":"open","Body":"@josephperrott @devversion @gregmagolan \r\n\r\nThe first commit switches the unstamped versions to use the more canonical `0.0.0-PLACEHOLDER` and also affects the non-bazel build as it touches `package.json`s and the legacy build script.\r\n\r\nThe second commit tries to take the approach in the angular components repo for substituting versions and moves the engine substitution versions there.","Url":"https://github.com/angular/angular-cli/pull/22467","RelatedDescription":"Open PR \"build: use placeholder version for stamping\" (#22467)"},{"Id":"1098314260","IsPullRequest":true,"CreatedAt":"2022-01-10T20:31:20","Actor":"dgp1130","Number":"22466","RawContent":null,"Title":"fix(@angular-devkit/build-angular): enable `:where` CSS pseudo-class","State":"closed","Body":"Currently when using the :where CSS pseudo-class in Angular CLI projects,\r\na warning will be emitted, as :where could not be interpreted. Updating\r\nto the latest version of critters fixes this issue.\r\n\r\nRefs #22437\r\n\r\nThis is a manual cherry-pick of #22451 onto the `13.1.x` branch to deal with some merge conflicts.","Url":"https://github.com/angular/angular-cli/pull/22466","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): enable `:where` CSS pseudo-class\" (#22466)"},{"Id":"1098169695","IsPullRequest":false,"CreatedAt":"2022-01-10T20:19:24","Actor":"caledbenne","Number":"22464","RawContent":null,"Title":"Ng serve results in webpack dev server failure in Angular 13","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: Angular 12\r\n\r\n### Description\r\n\r\n<!-- ✍️--> After upgrading from version 9 to version 13, webpack appears to fail to start when running ng serve.\r\n\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nMinimal repro here: [https://github.com/caledbenne/angular-webpack-minimal-repro](https://github.com/caledbenne/angular-webpack-minimal-repro)\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->- Generating browser application bundles (phase: setup)...(node:2028) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'address' of undefined\r\n    at <userfolder>\\angular-webpack-minimal-repro\\node_modules\\@angular-devkit\\build-webpack\\src\\webpack-dev-server\\index.js:79:46\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:2028) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)\r\n(node:2028) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n\r\n</code></pre>\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->Angular CLI: 13.1.2\r\nNode: 14.15.4\r\nPackage Manager: yarn 1.22.17\r\nOS: win32 x64\r\n\r\nAngular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/core            13.1.2\r\n@angular-devkit/schematics      13.1.2\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2\r\nrxjs                            6.5.5\r\ntypescript                      4.5.4\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22464","RelatedDescription":"Closed issue \"Ng serve results in webpack dev server failure in Angular 13\" (#22464)"},{"Id":"1097878056","IsPullRequest":true,"CreatedAt":"2022-01-10T18:29:15","Actor":"alan-agius4","Number":"22459","RawContent":null,"Title":"docs: remove old information from debugging section","State":"closed","Body":"`universal-analytics` has been removed via https://github.com/angular/angular-cli/commit/dbce2a3f28673991db1059c902cae326c725518a which makes `DEBUG=universal-analytics` unusable.","Url":"https://github.com/angular/angular-cli/pull/22459","RelatedDescription":"Closed or merged PR \"docs: remove old information from debugging section\" (#22459)"},{"Id":"1091923539","IsPullRequest":true,"CreatedAt":"2022-01-10T18:24:59","Actor":"renovate[bot]","Number":"22442","RawContent":null,"Title":"build: update schematics dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [jasmine](http://jasmine.github.io/) ([source](https://togithub.com/jasmine/jasmine-npm)) | [`~3.10.0` -> `~4.0.0`](https://renovatebot.com/diffs/npm/jasmine/3.10.0/4.0.1) | [![age](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/compatibility-slim/3.10.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/confidence-slim/3.10.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [jasmine](http://jasmine.github.io/) ([source](https://togithub.com/jasmine/jasmine-npm)) | [`^3.5.0` -> `^4.0.0`](https://renovatebot.com/diffs/npm/jasmine/3.99.0/4.0.1) | [![age](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/compatibility-slim/3.99.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jasmine/4.0.1/confidence-slim/3.99.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | [`~3.10.0` -> `~4.0.0`](https://renovatebot.com/diffs/npm/jasmine-core/3.10.1/4.0.0) | [![age](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/compatibility-slim/3.10.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/confidence-slim/3.10.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine-npm</summary>\n\n### [`v4.0.1`](https://togithub.com/jasmine/jasmine-npm/releases/v4.0.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v4.0.0...v4.0.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.0.1.md).\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine-npm/releases/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v3.99.0...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.0.0.md).\n\n### [`v3.99.0`](https://togithub.com/jasmine/jasmine-npm/releases/v3.99.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v3.10.0...v3.99.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/3.99.0.md).\n\n</details>\n\n<details>\n<summary>jasmine/jasmine</summary>\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine/releases/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.0...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md).\n\n### [`v3.99.0`](https://togithub.com/jasmine/jasmine/releases/v3.99.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.1...v3.99.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.0.md).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22442","RelatedDescription":"Closed or merged PR \"build: update schematics dependencies\" (#22442)"},{"Id":"1092469665","IsPullRequest":true,"CreatedAt":"2022-01-10T18:24:33","Actor":"Lehoczky","Number":"22446","RawContent":null,"Title":"fix(@schematics/angular): set `skipTests` flag for resolvers when using ng new --skip-tests","State":"closed","Body":"Currently when creating a new project with `ng new xy --skip-tests`, the `ng g` command will still generate spec files for resolvers.\r\n\r\nThis PR aims to fix this issue.","Url":"https://github.com/angular/angular-cli/pull/22446","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): set `skipTests` flag for resolvers when using ng new --skip-tests\" (#22446)"},{"Id":"1092637089","IsPullRequest":true,"CreatedAt":"2022-01-10T18:23:38","Actor":"thecrypticace","Number":"22447","RawContent":null,"Title":"Don't set TAILWIND_MODE=watch","State":"closed","Body":"This env var only now exists as a workaround for older `postcss-loader` versions that don't support build dependencies. It is not necessary when using postcss-loader >= 5.3. Additionally it does not work with polling. This shows itself when running docker containers on Windows which require angular to poll for changes because filesystem events from volumes are not delivered to the container.\r\n\r\nInternally we use postcss dependencies and rely on the build tool running tailwind to track file changes for us. Using `TAILWIND_MODE=watch` sidesteps that entirely and causes tailwind to watch files for changes itself. We only use this as a workaround for when tools aren't behaving properly.\r\n\r\nThe relevant issue on tailwindcss is here: https://github.com/tailwindlabs/tailwindcss/issues/6343\r\n\r\nRelevant PostCSS discussion: https://github.com/postcss/postcss/issues/1537\r\n","Url":"https://github.com/angular/angular-cli/pull/22447","RelatedDescription":"Closed or merged PR \"Don't set TAILWIND_MODE=watch\" (#22447)"},{"Id":"1095202707","IsPullRequest":true,"CreatedAt":"2022-01-10T18:22:30","Actor":"kyubisation","Number":"22451","RawContent":null,"Title":"fix(@angular-devkit/build-angular): enable `:where` CSS pseudo-class","State":"closed","Body":"Currently when using the `:where` CSS pseudo-class in Angular CLI projects,\r\na warning will be emitted, as `:where` could not be interpreted. Updating\r\nto the latest version of `critters` fixes this issue.\r\n\r\nCloses https://github.com/angular/angular-cli/issues/22437","Url":"https://github.com/angular/angular-cli/pull/22451","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): enable `:where` CSS pseudo-class\" (#22451)"},{"Id":"1091217332","IsPullRequest":false,"CreatedAt":"2022-01-10T18:22:30","Actor":"Cephyric-gh","Number":"22437","RawContent":null,"Title":"Build outputting warning about :where pseudo-selector","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nIt has only come to light with the latest version of Tailwind, so unsure\r\n\r\n### Description\r\n\r\nWhen loading in the latest version of tailwind (3.0.8) the CLI outputs a warning about the `:where` pseudo-selector not being valid.\r\n\r\n```\r\n1 rules skipped due to selector errors:\r\n  abbr:where([title]) -> unmatched pseudo-class :where\r\n```\r\n\r\nHowever according to caniuse.com the selector is available based on the browserslistrc file that I am using -\r\n```\r\nlast 1 Chrome version\r\nlast 1 Firefox version\r\nlast 2 Edge major versions\r\nlast 2 Safari major versions\r\nlast 2 iOS major versions\r\nFirefox ESR\r\nnot IE 11 # Angular supports IE 11 only as an opt-in. To opt-in, remove the 'not' prefix on this line.\r\n```\r\n\r\nWhen looking for similar reported issues I found other reported warnings from the CLI (that are not the same as this 1) that suggested that the issue be taken up with the third part package a it was their end, however Tailwind have informed me that the selector should be available based on that browserslist (https://github.com/tailwindlabs/tailwindcss/issues/6805) which makes me assume there is something happening with the CLI that is causing it to erroneously report that the selector does not exist\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nDefault angular project with tailwind configured on it (added as a dependency, basic config file + their imports needed ib the base scss file)\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n1 rules skipped due to selector errors:\r\n  abbr:where([title]) -> unmatched pseudo-class :where\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.1.2\r\nNode: 16.13.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin x64\r\n\r\nAngular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/core            13.1.2\r\n@angular-devkit/schematics      13.1.2\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2\r\nng-packagr                      13.1.2\r\nrxjs                            7.5.1\r\ntypescript                      4.5.4\r\n\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/22437","RelatedDescription":"Closed issue \"Build outputting warning about :where pseudo-selector\" (#22437)"},{"Id":"1098207951","IsPullRequest":false,"CreatedAt":"2022-01-10T18:00:34","Actor":"dgp1130","Number":"22465","RawContent":null,"Title":"Enable `useUnknownInCatchVariables` in CLI repository","State":"open","Body":"google3 is currently moving towards enabling `useUnknownInCatchVariables`, but I believe that flag is still disabled in the CLI. There are a few places that need to be updated in `@angular/cli` and `@angular-devkit/core` which need to be updated. http://cl/420753408 has the temporary workaround in google3.","Url":"https://github.com/angular/angular-cli/issues/22465","RelatedDescription":"Open issue \"Enable `useUnknownInCatchVariables` in CLI repository\" (#22465)"},{"Id":"1098055424","IsPullRequest":false,"CreatedAt":"2022-01-10T15:47:48","Actor":"sinedied","Number":"22463","RawContent":null,"Title":"[@angular-devkit/schematics] Getting package manager info from @angular/cli","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [x] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nI'm currently developing a schematics that needs to know which package manager the user is using for its project. I found that the logic of detection the package manager already exists within the ng cli (reading from angular.json config or heuristic from workspace), but does not seem to be exposed to the schematics context or options (AFAIK).\r\n\r\n### Describe the solution you'd like\r\n\r\nI would like a way to get the package manager information when the schematics is running in an ng cli context without having to duplicate all the the logic in the schematics itself.\r\n\r\n### Describe alternatives you've considered\r\n\r\nNot sure what would be the best option here: pass on the packageManager info as a schematics option directly, or expose the package manager detection tools directly as an import'able package in your schematics, or something else.\r\n\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n","Url":"https://github.com/angular/angular-cli/issues/22463","RelatedDescription":"Open issue \"[@angular-devkit/schematics] Getting package manager info from @angular/cli\" (#22463)"},{"Id":"1097979512","IsPullRequest":false,"CreatedAt":"2022-01-10T14:40:14","Actor":"prabh-62","Number":"22462","RawContent":null,"Title":"Angular 12 - ng test fails on a newly created app - garbled text","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\nRunning `ng test` on a new angular 12 throws garbled text\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n- `npx @angular/cli@12 new admin-console --style css --routing`\r\n- `cd admin-console`\r\n- `npm run test`\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n> admin-console@0.0.0 test\r\n> ng test\r\n\r\nundefined\r\nundefined\r\nundefined\r\n                                   !             H|H|H|H|H           H__________________________________             H|┬º|┬º|┬º|H           H|* * * * * *|---------------------|             H|┬º|Γê₧|┬º|H           H| * * * * * |---------------------|             H|┬º|┬º|┬º|H           H|* * * * * *|---------------------|             H|H|H|H|H           H| * * * * * |---------------------|             H|H|H|H|H           H|---------------------------------|          ===============        H|---------------------------------|            /| _   _ |          H|---------------------------------|            (| O   O |)          H|---------------------------------|            /|   U   |          H-----------------------------------             |  =/  |           H              _..._/            H              _|I/|_            H      _______/| H |/_______    H     /           / /          H    |          | | /         |  H    |          ||o||          |  H    |    |     ||o||     |    |  H    |    |     ||o||     |    |  H   Carl Pilcher  \r\nt═æ╠å═»═¿╠ô╠ó╠¿╠╡═ÿ═í═ç╠▓╠¬╠ƒ╠⌐e═ñ═«╠Å═å═ù═æ╠Ç═¿╠é═»╠í═¥╠º═¥╠¡╠│╠½╠⌐═Ö╠¥═ì╠½═ç╠Ñ╠Ñ╠Ñ╠ñ═Ä═ç╠¡═û═à╠á╠¼╠╝╠│═ö╠¬╠¼╠₧╠╗╠Ñ═ê╠▒╠│╠£═ê╠₧╠«╠⌐═ç╠¬╠Ö═ë╠¼╠ù╠▓═ô═ç═ö═ö═ò═Ö╠ƒ╠₧╠░╠ª╠▓╠▓╠⌐═û╠á╠¼═û═Ä╠╝╠û╠ƒ╠£═û╠▓s╠┐╠┐═é═¢═«╠â═¿═«═É╠Æ═é═ù═¡═ª╠å═¡╠É═é╠ô╠ó╠╢╠╕╠┤╠¢╠╝╠│═ò═ê╠Ö═ô╠½╠⌐═ê╠╣╠▓═ë╠│╠╣t═å╠Ç═ñ═¼═¬═Æ╠┐╠ç═¥═¥╠╡═ì╠¥═ô╠£╠╣╠╣╠Ö═ô╠▓╠ù═ê═ç╠╝╠ñ╠¥═ë╠á═Ä═Ä╠ª╠║╠▒╠▒╠▒═ò═ö╠╣═ç╠▓═ç╠ª╠ù═ë╠╗╠▒╠»═à╠úi═¢═î═½╠è╠à╠ü═ª═¡╠Æ╠ê╠í═ó╠¿ ╥ë╠╖═ë╠ñ╠«═ç═ê╠ª╠«═ì╠»═Ö╠½═ô╠½╠║═ò╠Ö╠⌐═ë═ô═à═à╠║╠½═Ö═ê╠ù═ò═ë╠▒═ç╠╝╠ÿ╠Ö╠¥n╠ë═¡═è╠à╠å═Ñ═æ╠ü═\r\n</code></pre>\r\n<img width=\"551\" alt=\"ng_test_ng_12\" src=\"https://user-images.githubusercontent.com/13006107/148783783-1f7a0d39-519e-42e2-8261-a16e5c93a9d8.png\">\r\n\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 12.2.14\r\nNode: 16.13.1\r\nPackage Manager: npm 7.20.1\r\nOS: win32 x64\r\n\r\nAngular: 12.2.15\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.14\r\n@angular-devkit/build-angular   12.2.14\r\n@angular-devkit/core            12.2.14\r\n@angular-devkit/schematics      12.2.14\r\n@angular/cli                    12.2.14\r\n@schematics/angular             12.2.14\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22462","RelatedDescription":"Open issue \"Angular 12 - ng test fails on a newly created app - garbled text\" (#22462)"},{"Id":"1097976942","IsPullRequest":true,"CreatedAt":"2022-01-10T14:37:42","Actor":"alan-agius4","Number":"22461","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure `$localize` calls are replaced in watch mode","State":"open","Body":"\r\nWhen `translations` is undefined `$localize` calls are not replaced. \r\n\r\nhttps://github.com/angular/angular-cli/blob/2c9a33dddb38694b6940ec6981c49904de1ab636/packages/angular_devkit/build_angular/src/builders/dev-server/index.ts#L382\r\n\r\nCloses #22435","Url":"https://github.com/angular/angular-cli/pull/22461","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): ensure `$localize` calls are replaced in watch mode\" (#22461)"},{"Id":"1097926329","IsPullRequest":true,"CreatedAt":"2022-01-10T13:51:03","Actor":"bbarry","Number":"22460","RawContent":null,"Title":"fix(@angular-devkit/build-angular): load translations fresh start","State":"open","Body":"Currently when making a change while serving a localized application, duplicate\r\ntranslation warnings appear for every translation id. This fixes that by\r\nreplacing the whole translation object with a new one each time translations\r\nare loaded.\r\n\r\nfixes #22398","Url":"https://github.com/angular/angular-cli/pull/22460","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): load translations fresh start\" (#22460)"},{"Id":"1097854551","IsPullRequest":false,"CreatedAt":"2022-01-10T12:39:51","Actor":"PascalMainzer","Number":"22458","RawContent":null,"Title":"Angular generates css instead of scss in library","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was:  Angular Version 11\r\n\r\n### Description\r\n\r\n<!-- ✍️--> Even though the scss schematic is present in the angular.json of the environment, new components generated in a library only have a css file. Generated components in the default app are created with a scss file. A similar issue seems to have happened in 2017, but the version of Angular I am running is v13.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n`ng new repro`\r\nAngular routing: No\r\nStylesheet format: SCSS\r\n```\r\ncd repro\r\nng g library ngx-repro --prefix=repro\r\nng g module components/rcomponent --project=ngx-repro\r\nng g component components/rcomponent --project=ngx-repro\r\n```\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\nCREATE projects/ngx-repro/src/lib/components/rcomponent/rcomponent.component.spec.ts (654 bytes)\r\nCREATE projects/ngx-repro/src/lib/components/rcomponent/rcomponent.component.ts (297 bytes)\r\nCREATE projects/ngx-repro/src/lib/components/rcomponent/rcomponent.component.css (0 bytes)\r\nUPDATE projects/ngx-repro/src/lib/components/rcomponent/rcomponent.module.ts (285 bytes)\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\nAngular CLI: 13.1.2\r\nNode: 14.16.1\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: 13.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/core            13.1.2\r\n@angular-devkit/schematics      13.1.2\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2\r\nng-packagr                      13.1.2\r\nrxjs                            7.4.0\r\ntypescript                      4.5.4\r\n\r\n</code></pre>\r\n\r\n**Current workaround**\r\nusing `--style=scss` in the generate command will create a scss file in the component. Still needs to be tested for issues.","Url":"https://github.com/angular/angular-cli/issues/22458","RelatedDescription":"Open issue \"Angular generates css instead of scss in library\" (#22458)"},{"Id":"1097610480","IsPullRequest":false,"CreatedAt":"2022-01-10T12:26:30","Actor":"mengio001","Number":"22455","RawContent":null,"Title":"Adding additional colors to the tailwind.config.js","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli, compiler\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nAccording to the tailwindcss docs it's possible to extend theme with new colors for example 'custom-color':'#43d62c'. But after rebuild Angular project (ng serve), Angular doesn't recognize my new color class (class=\"bg-custom-color\"). For more information about applying custom/new colors to the tailwind.config.js see/watch https://youtu.be/ibVOMdVpYOY (play video from 4.15) and tailwindcss docs: https://tailwindcss.com/docs/customizing-colors#adding-additional-colors.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/mengio001/tmroot/blob/main/tailwind.config.js\r\nhttps://github.com/mengio001/tmroot/blob/main/src/app/presentation/page-designs/welcome-page/welcome-page.component.html\r\nhttps://www.timelessmedia.nl/mytickets/issue-44670/example-issue-custom-color.PNG\r\n\r\n### Please provide the exception or error you saw\r\n\r\nhttps://www.timelessmedia.nl/mytickets/issue-44670/bg-custom-color.PNG\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.1.2\r\nNode: 14.15.0\r\nPackage Manager: npm 6.14.8\r\nOS: win32 x64\r\n\r\nAngular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/core            13.1.2\r\n@angular-devkit/schematics      13.1.2\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2\r\nrxjs                            7.4.0\r\ntypescript                      4.5.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/22455","RelatedDescription":"Closed issue \"Adding additional colors to the tailwind.config.js\" (#22455)"},{"Id":"1093302527","IsPullRequest":false,"CreatedAt":"2022-01-10T10:54:25","Actor":"mackelito","Number":"22449","RawContent":null,"Title":"Make the generation of module and component optional","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nWhen generating a lib using the angular cli it also creates a module.ts, why is that? what is it used for?\r\nIf this is a lib that only contains a service then I have no need for the module.. right?\r\n\r\nWe use mono-repos (using nx) and one of the concepts are data-access libraries that only contains services (more or less). So we need to constantly remove generated things for new libs :)\r\n\r\n### Describe the solution you'd like\r\nWhen using `ng generate library myLib` it should require flags for the creation of module/component..\r\nThe generation of module and component should be opt-in\r\n","Url":"https://github.com/angular/angular-cli/issues/22449","RelatedDescription":"Closed issue \"Make the generation of module and component optional\" (#22449)"},{"Id":"1095988079","IsPullRequest":false,"CreatedAt":"2022-01-10T08:03:09","Actor":"benedict-chng","Number":"22453","RawContent":null,"Title":"Error Thrown Adding Lib After Upgraded to Angular 13","State":"closed","Body":"After upgrading to Angular 13, my application can be compiled and be served and hot-reload all works. Unfortunately when I try to add a new library to it, I got the following error:\r\n\r\n> ng g lib features/test-admin\r\nAn unhandled exception occurred: NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID\r\n\r\nI didn't get this error previously when I was working on Angular 10.\r\n\r\nI've attached package.json and package-lock.json for your reference.\r\n\r\n[package-json.zip](https://github.com/angular/angular-cli/files/7826591/package-json.zip)\r\n\r\nThe content of the error is:\r\n[error] Error: NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID\r\n    at Object.code (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\vocabularies\\core\\id.js:6:15)\r\n    at keywordCode (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\validate\\index.js:454:13)\r\n    at C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\validate\\index.js:222:17\r\n    at CodeGen.code (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:439:13)\r\n    at CodeGen.block (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:568:18)\r\n    at iterateKeywords (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\validate\\index.js:219:9)\r\n    at groupKeywords (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\validate\\index.js:208:13)\r\n    at C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\validate\\index.js:192:13\r\n    at CodeGen.code (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:439:13)\r\n    at CodeGen.block (C:\\Workspace\\Nova\\Avatar\\node_modules\\@angular-devkit\\core\\node_modules\\ajv\\dist\\compile\\codegen\\index.js:568:18)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22453","RelatedDescription":"Closed issue \"Error Thrown Adding Lib After Upgraded to Angular 13\" (#22453)"},{"Id":"1095321827","IsPullRequest":false,"CreatedAt":"2022-01-09T10:33:03","Actor":"pcnate","Number":"22452","RawContent":null,"Title":"ng new app fails to fully initialize an angular project","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\nI did not experience this issue the last time I created an Angular project which would have been ~10.x\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n\r\n```shell\r\npcnate@newvm:~/$ npm install --global @angular/cli\r\npcnate@newvm:~/$ ng --version\r\n\r\nAngular CLI: 13.1.2\r\nNode: 16.13.1\r\nPackage Manager: npm 8.1.2\r\nOS: linux x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1301.2\r\n@angular-devkit/core         13.1.2\r\n@angular-devkit/schematics   13.1.2\r\n@angular/cli                 13.1.2\r\n@schematics/angular          13.1.2\r\n\r\npcnate@newvm:~/$ mkdir newProject && cd newProject\r\npcnate@newvm:~/newProject$ git init\r\nInitialized empty Git repository in /home/pcnate/newProject/.git/\r\npcnate@newvm:~/newProject$ ng new my-app\r\n? Would you like to add Angular routing? Yes\r\n? Which stylesheet format would you like to use? SCSS   [ https://sass-lang.com/documentation/syntax#scss                ]\r\nCREATE my-app/README.md (1051 bytes)\r\nCREATE my-app/.editorconfig (274 bytes)\r\nCREATE my-app/.gitignore (620 bytes)\r\nCREATE my-app/angular.json (3207 bytes)\r\nCREATE my-app/package.json (1070 bytes)\r\nCREATE my-app/tsconfig.json (863 bytes)\r\nCREATE my-app/.browserslistrc (600 bytes)\r\nCREATE my-app/karma.conf.js (1423 bytes)\r\nCREATE my-app/tsconfig.app.json (287 bytes)\r\nCREATE my-app/tsconfig.spec.json (333 bytes)\r\nCREATE my-app/.vscode/extensions.json (130 bytes)\r\nCREATE my-app/.vscode/launch.json (474 bytes)\r\nCREATE my-app/.vscode/tasks.json (938 bytes)\r\nCREATE my-app/src/favicon.ico (948 bytes)\r\nCREATE my-app/src/index.html (291 bytes)\r\nCREATE my-app/src/main.ts (372 bytes)\r\nCREATE my-app/src/polyfills.ts (2338 bytes)\r\nCREATE my-app/src/styles.scss (80 bytes)\r\nCREATE my-app/src/test.ts (745 bytes)\r\nCREATE my-app/src/assets/.gitkeep (0 bytes)\r\nCREATE my-app/src/environments/environment.prod.ts (51 bytes)\r\nCREATE my-app/src/environments/environment.ts (658 bytes)\r\nCREATE my-app/src/app/app-routing.module.ts (245 bytes)\r\nCREATE my-app/src/app/app.module.ts (393 bytes)\r\nCREATE my-app/src/app/app.component.scss (0 bytes)\r\nCREATE my-app/src/app/app.component.html (23364 bytes)\r\nCREATE my-app/src/app/app.component.spec.ts (1073 bytes)\r\nCREATE my-app/src/app/app.component.ts (211 bytes)\r\n✔ Packages installed successfully.\r\n    Directory is already under version control. Skipping initialization of git.\r\npcnate@newvm:~/newProject$ ls -lah\r\ntotal 16K\r\ndrwxr-xr-x 4 pcnate pcnate   4.0K Jan  6 13:22 .\r\ndrwxrwxr-x 7 pcnate www-data 4.0K Jan  6 13:20 ..\r\ndrwxr-xr-x 7 pcnate pcnate   4.0K Jan  6 13:20 .git\r\ndrwxr-xr-x 5 pcnate pcnate   4.0K Jan  6 13:23 my-app\r\npcnate@newvm:~/newProject$ ng serve\r\nThe serve command requires to be run in an Angular project, but a project definition could not be found.\r\npcnate@newvm:~/newProject$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Debian\r\nDescription:    Debian GNU/Linux 11 (bullseye)\r\nRelease:        11\r\nCodename:       bullseye\r\n```\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n1. angular.json is not created\r\n2. package.json is not updated with dependencies\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 13.1.2\r\nNode: 16.13.1\r\nPackage Manager: npm 8.1.2\r\nOS: linux x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1301.2\r\n@angular-devkit/core         13.1.2\r\n@angular-devkit/schematics   13.1.2\r\n@angular/cli                 13.1.2\r\n@schematics/angular          13.1.2</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n<pre><code>\r\npcnate@newvm:~/newProject$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Debian\r\nDescription:    Debian GNU/Linux 11 (bullseye)\r\nRelease:        11\r\nCodename:       bullseye\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/22452","RelatedDescription":"Closed issue \"ng new app fails to fully initialize an angular project\" (#22452)"},{"Id":"1097054915","IsPullRequest":true,"CreatedAt":"2022-01-08T23:02:42","Actor":"egoettelmann","Number":"22454","RawContent":null,"Title":"fix(@angular-devkit/build-angular): websocket client only injected if required","State":"open","Body":"After the webpack-dev-server migration to v4, the websocket client was always injected, even if not required. This caused unnecessary 'ws' requests when live-reload and hmr were disabled.\r\n\r\nThis PR modifies the building of the webpack-dev-server configuration to configure the websocket client only if either live-reload is enabled or hmr.","Url":"https://github.com/angular/angular-cli/pull/22454","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): websocket client only injected if required\" (#22454)"},{"Id":"1093713013","IsPullRequest":false,"CreatedAt":"2022-01-05T06:11:26","Actor":"johncrim","Number":"22450","RawContent":null,"Title":"Yarn PnP app builds fail loading @angular/compiler-cli","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nNo - Yarn PnP support seems newish but being tracked in #16980\r\n\r\n### Description\r\n\r\nI attempted to get a minimal angular build working using ng 13.1 and Yarn PnP, but I ran into the same problem on minimal new projects as on our large projects. I reported the [ng-packagr issue #2214  that is preventing library builds](ng-packagr/ng-packagr#2214), and I'm also seeing an equivalent issue that is preventing app builds:\r\n\r\n```\r\n❯ yarn ng build myapp                      \r\nAn unhandled exception occurred: Cannot find package '@angular/compiler-cli' imported from src\\ng13-yarn-pnp\\.yarn\\unplugged\\@angular-devkit-build-angular-virtual-0b6cfeb8e3\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\load-esm.js\r\nDid you mean to import @angular-compiler-cli-virtual-759efba812/node_modules/@angular/compiler-cli/bundles/index.js?\r\n```\r\n\r\nIn both ng-packagr and [angular-devkit load-esm.ts](https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/utils/load-esm.ts) the same pattern is failing to load '@angular/compiler-cli' when run within Yarn PnP.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n```\r\ngit checkout git@github.com:johncrim/ng13-yarn-pnp.git\r\nyarn install\r\nyarn ng build myapp\r\n```\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n[error] Error [ERR_MODULE_NOT_FOUND]: Cannot find package '@angular/compiler-cli' imported from src\\ng13-yarn-pnp\\.yarn\\unplugged\\@angular-devkit-build-angular-virtual-0b6cfeb8e3\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\load-esm.js\r\nDid you mean to import @angular-compiler-cli-virtual-759efba812/node_modules/@angular/compiler-cli/bundles/index.js?\r\n    at new NodeError (node:internal/errors:371:5)\r\n    at packageResolve (node:internal/modules/esm/resolve:884:9)\r\n    at moduleResolve (node:internal/modules/esm/resolve:929:18)\r\n    at defaultResolve (node:internal/modules/esm/resolve:1044:11)\r\n    at ESMLoader.resolve (node:internal/modules/esm/loader:422:30)\r\n    at ESMLoader.getModuleJob (node:internal/modules/esm/loader:222:40)\r\n    at ESMLoader.import (node:internal/modules/esm/loader:276:22)\r\n    at importModuleDynamically (node:internal/modules/cjs/loader:1041:29)\r\n    at importModuleDynamicallyWrapper (node:internal/vm/module:437:21)\r\n    at importModuleDynamically (node:vm:381:46)\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.1.2\r\nNode: 16.12.0\r\nPackage Manager: yarn 3.1.1\r\nOS: win32 x64\r\n\r\nAngular: 13.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.2 (cli-only)\r\n@angular-devkit/build-angular   13.1.2\r\n@angular-devkit/core            13.1.2 (cli-only)\r\n@angular-devkit/schematics      13.1.2 (cli-only)\r\n@angular/cli                    13.1.2\r\n@schematics/angular             13.1.2 (cli-only)\r\nng-packagr                      13.1.2\r\nrxjs                            7.4.0\r\ntypescript                      4.5.4\r\n</code></pre>\r\n\r\nRelated issues:\r\n* #16980 \r\n* ng-packagr/ng-packagr#2214","Url":"https://github.com/angular/angular-cli/issues/22450","RelatedDescription":"Closed issue \"Yarn PnP app builds fail loading @angular/compiler-cli\" (#22450)"},{"Id":"1093150606","IsPullRequest":false,"CreatedAt":"2022-01-04T11:38:08","Actor":"sherinebeulah","Number":"22448","RawContent":null,"Title":"Angular build fails at 92% chunck asset optimization and dist folder is not getting created","State":"closed","Body":"@angular/cli : 1.3.1\r\nnode 12.18.0\r\n\r\ngetting error on angular build shows 92% chunk asset optimization and dist failed\r\nshowing additional errors like\r\n/src/app/components/helpdesk/queue/queue.component.ts expected 3-8 arguments but got 10","Url":"https://github.com/angular/angular-cli/issues/22448","RelatedDescription":"Closed issue \"Angular build fails at 92% chunck asset optimization and dist folder is not getting created\" (#22448)"},{"Id":"1091904893","IsPullRequest":true,"CreatedAt":"2022-01-01T22:21:05","Actor":"renovate[bot]","Number":"22441","RawContent":null,"Title":"build: update dependency jasmine-core to v4","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | [`~3.10.0` -> `~4.0.0`](https://renovatebot.com/diffs/npm/jasmine-core/3.10.1/4.0.0) | [![age](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/compatibility-slim/3.10.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jasmine-core/4.0.0/confidence-slim/3.10.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine</summary>\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine/releases/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.0...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md).\n\n### [`v3.99.0`](https://togithub.com/jasmine/jasmine/releases/v3.99.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.1...v3.99.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.0.md).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22441","RelatedDescription":"Open PR \"build: update dependency jasmine-core to v4\" (#22441)"},{"Id":"1091904862","IsPullRequest":true,"CreatedAt":"2022-01-01T22:20:49","Actor":"renovate[bot]","Number":"22440","RawContent":null,"Title":"build: update dependency jasmine to v4","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [jasmine](http://jasmine.github.io/) ([source](https://togithub.com/jasmine/jasmine-npm)) | [`^3.3.1` -> `^4.0.0`](https://renovatebot.com/diffs/npm/jasmine/3.99.0/4.0.2) | [![age](https://badges.renovateapi.com/packages/npm/jasmine/4.0.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/jasmine/4.0.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/jasmine/4.0.2/compatibility-slim/3.99.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/jasmine/4.0.2/confidence-slim/3.99.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine-npm</summary>\n\n### [`v4.0.2`](https://togithub.com/jasmine/jasmine-npm/releases/v4.0.2)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v4.0.1...v4.0.2)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.0.2.md).\n\n### [`v4.0.1`](https://togithub.com/jasmine/jasmine-npm/releases/v4.0.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v4.0.0...v4.0.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.0.1.md).\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine-npm/releases/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v3.99.0...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.0.0.md).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22440","RelatedDescription":"Open PR \"build: update dependency jasmine to v4\" (#22440)"},{"Id":"1091383351","IsPullRequest":false,"CreatedAt":"2021-12-31T02:24:16","Actor":"gyerts","Number":"22438","RawContent":null,"Title":"TypeError [ERR_WORKER_UNSUPPORTED_OPERATION] [ERR_WORKER_UNSUPPORTED_OPERATION]: process.chdir() is not supported in workers","State":"open","Body":"# 🐞 Bug report\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [x] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes it has been working with version `\"@angular-devkit/build-angular\": \"0.1102.2\"`, after upgrade to the `\"@angular-devkit/build-angular\": \"12.2.14\"` tests not working any more.\r\n\r\n### Description\r\n\r\nWhen running tests `bazel test //browserclient:test`, I see this error in the logs\r\n<pre><code>\r\nTypeError [ERR_WORKER_UNSUPPORTED_OPERATION] [ERR_WORKER_UNSUPPORTED_OPERATION]: process.chdir() is not supported in workers\r\n</code></pre>\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nclone test project [https://github.com/gyerts/angular_bazel_architect_fork](https://github.com/gyerts/angular_bazel_architect_fork)\r\n`cd rules_nodejs/examples/angular_bazel_architect_fork/`\r\n\r\nrun `bazel test //browserclient:test`\r\neverything should work fine\r\n\r\nopen `browserclient/package.json`\r\nchange version of `@angular-devkit/build-angular` from \"0.1102.2\" to \"12.2.14\"\r\nrun `yarn install` to update `yarn.lock` file\r\nrun `bazel test //browserclient:test` <- now it fails\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\nTypeError [ERR_WORKER_UNSUPPORTED_OPERATION] [ERR_WORKER_UNSUPPORTED_OPERATION]: process.chdir() is not supported in workers\r\n    at process.unavailableInWorker [as chdir] (internal/process/worker_thread_only.js:12:11)\r\n    at Object.<anonymous> (browserclient/__chdir.js__:1:9)\r\n    at Module._compile (internal/modules/cjs/loader.js:1072:14)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\r\n    at Module.load (internal/modules/cjs/loader.js:937:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:778:12)\r\n    at Module.require (internal/modules/cjs/loader.js:961:19)\r\n    at Module._preloadModules (internal/modules/cjs/loader.js:1231:12)\r\n    at loadPreloadModules (internal/bootstrap/pre_execution.js:468:5)\r\n    at MessagePort.<anonymous> (internal/main/worker_thread.js:151:5)\r\nTypeError [ERR_WORKER_UNSUPPORTED_OPERATION] [ERR_WORKER_UNSUPPORTED_OPERATION]: process.chdir() is not supported in workers\r\n    at process.unavailableInWorker [as chdir] (internal/process/worker_thread_only.js:12:11)\r\n    at Object.<anonymous> (browserclient/__chdir.js__:1:9)\r\n    at Module._compile (internal/modules/cjs/loader.js:1072:14)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\r\n    at Module.load (internal/modules/cjs/loader.js:937:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:778:12)\r\n    at Module.require (internal/modules/cjs/loader.js:961:19)\r\n    at Module._preloadModules (internal/modules/cjs/loader.js:1231:12)\r\n    at loadPreloadModules (internal/bootstrap/pre_execution.js:468:5)\r\n    at MessagePort.<anonymous> (internal/main/worker_thread.js:151:5)\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 12.2.14\r\nNode: 14.17.3\r\nPackage Manager: yarn 1.22.10\r\nOS: darwin x64\r\n\r\nAngular: 12.2.15\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.14\r\n@angular-devkit/architect-cli   0.1102.2\r\n@angular-devkit/build-angular   12.2.14\r\n@angular-devkit/core            12.2.14\r\n@angular-devkit/schematics      12.2.14\r\n@angular/cli                    12.2.14\r\n@bazel/bazelisk                 1.11.0\r\n@bazel/buildifier               4.2.4\r\n@bazel/ibazel                   v0.15.10\r\n@schematics/angular             12.2.14\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nThis project based on [bazel-test-angular-architect project](https://github.com/bazelbuild/rules_nodejs/tree/stable/examples/angular_bazel_architect), the only difference between [bazel-test-angular-architect project](https://github.com/bazelbuild/rules_nodejs/tree/stable/examples/angular_bazel_architect) and [my-forked-example](https://github.com/gyerts/angular_bazel_architect_fork)\r\n* frontend code was moved to the browserclient folder\r\n* into each bazel rule `architect` and `architect_test` was added `chdir = package_name()` parameter\r\n* angular was upgraded from 11 to 12","Url":"https://github.com/angular/angular-cli/issues/22438","RelatedDescription":"Open issue \"TypeError [ERR_WORKER_UNSUPPORTED_OPERATION] [ERR_WORKER_UNSUPPORTED_OPERATION]: process.chdir() is not supported in workers\" (#22438)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1098533838","IsPullRequest":false,"CreatedAt":"2022-01-11T00:48:38","Actor":"matthewjheaney","Number":"24182","RawContent":null,"Title":"bug(autocomplete): calling input.blur from autocomplete option selected does not pass option","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have some code like this:\r\n\r\n  <input\r\n    #companyInput\r\n    matInput\r\n   ...\r\n    [matAutocomplete]=\"companyAutocomplete\"\r\n    (keydown.enter)=\"companyInput.blur()\"\r\n    (blur)=\"setCompany($event)\">\r\n  <mat-autocomplete\r\n      #companyAutocomplete=\"matAutocomplete\"\r\n      (optionSelected)=\"companyInput.blur()\">\r\n      ...\r\n\r\nThe goal is that if the user types a value into the input and presses the Enter key, or selects a menu option from the autocomplete option (so clicks the mouse), then the blur handler for the input will get invoked, and the control associated with the input element will have the new value.\r\n\r\nHowever, if you select an option from the autocomplete menu, it does not pass the option to the control, and the control's value is empty.  \r\n\r\nWe can work around this by interrogating the FocusEvent:\r\n\r\n  setCompany(event: FocusEvent) {\r\n    this.adjustControlValue(event);\r\n    ...\r\n  }\r\n\r\n  private adjustControlValue(event: FocusEvent) {\r\n    const target = event.relatedTarget;  // mat-option chosen via mouse clikc\r\n    ... // find list item associated with text content of the option\r\n    // set control value manually\r\n  }\r\n\r\nNote that I work for Google (matthewjheaney@google.com).  I can point you to the actual code if that's helpful.\r\n\r\nI followed the work-around suggested here:\r\n\r\nhttps://stackoverflow.com/questions/52936740/in-angular-onselectionchange-is-not-getting-invoked-for-angular-mat-option?rq=1\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. attach a blur handler to input component\r\n2. call the blur function of the API from the mat-input from the autocomplete\r\n\n\n### Expected Behavior\n\nThat it update the control value with the menu option selected.\n\n### Actual Behavior\n\nThe control value is empty.\r\n\n\n### Environment\n\nsync from github done on 2021-10-18\r\n","Url":"https://github.com/angular/components/issues/24182","RelatedDescription":"Open issue \"bug(autocomplete): calling input.blur from autocomplete option selected does not pass option\" (#24182)"},{"Id":"1096554469","IsPullRequest":true,"CreatedAt":"2022-01-10T17:22:27","Actor":"devversion","Number":"24174","RawContent":null,"Title":"fix(material-experimental/mdc-list): ensure selection change event fires properly","State":"closed","Body":"Leverages the new selection change event that we landed upstream\r\nin MDC. The notify action adapter method was not suitable for the\r\nevent notification as it did not fire for e.g. CTRL + A selections\r\nand was generally, semantically not guaranteed to fire on actual\r\ninteractive selections (like native controls emit the change event).","Url":"https://github.com/angular/components/pull/24174","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-list): ensure selection change event fires properly\" (#24174)"},{"Id":"1098074224","IsPullRequest":false,"CreatedAt":"2022-01-10T16:05:30","Actor":"martin-havala","Number":"24181","RawContent":null,"Title":"mat-form-field: \":label-shown\" pseudoclass","State":"open","Body":"### What are you trying to do?\r\n\r\nHi all!\r\n\r\n### tl;dr;\r\n\r\nIs `:label-shown` preudo-class  used in form-field component necessary / valid?\r\n(e.g. https://github.com/angular/components/blob/master/src/material/form-field/_form-field-fill-theme.scss#L100)\r\n\r\n### Problem background\r\n\r\nI'm trying to use polyfill for paged media (https://www.pagedmedia.org/paged-js/) in combination with `\"@angular/material\": \"12.2.4\"` and it complains about :\r\n\r\n`Uncaught DOMException: Failed to execute 'querySelectorAll' on 'Document': '.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label' is not a valid selector.\r\n    at <anonymous>:1:10`\r\n\r\nBreaking it down, the only breaking part in selector is pseudo-selector \":label-shown\" about which existence I've never heard of anywhere else.\r\n\r\n    \r\n\r\n\r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\nI've tried to filter out css styles used in my application, problem emerges when `mat.core`  mixin is in place.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. check  https://stackblitz.com/edit/angular-ivy-24s2x2?file=src/app/app.component.scss\r\n2.  comment / uncomment `mat.core` in app.component.scss\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 12.1.2\r\n- CDK/Material: 12.2.4\r\n- Browser(s): Google Chrome Version 96.0.4664.110 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 Pro\r\n","Url":"https://github.com/angular/components/issues/24181","RelatedDescription":"Open issue \"mat-form-field: \":label-shown\" pseudoclass\" (#24181)"},{"Id":"1097931030","IsPullRequest":false,"CreatedAt":"2022-01-10T13:55:57","Actor":"mustafaodeh123","Number":"24180","RawContent":null,"Title":"bug(COMPONENT): mat-bottom-sheet-container adding aria-hidden element with tabindex = 0","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\n\r\ntabindex and aria-hidden that get added when we use mat-bottom-sheet which get detected by WCAG 2.1 as \"aria-hidden elements must not contain focusable elements\".\r\n\r\n}--></mat-bottom-sheet-container>\r\n<div tabindex=\"0\" class=\"cdk-visually-hidden cdk-focus-trap-anchor\" aria-hidden=\"true\"></div>\n\n### Reproduction\n\nSteps to reproduce:\r\n Add MatBottomSheetModule to ngModule and then use mat-bottom-sheet-container in your component\r\n\n\n### Expected Behavior\n\nAfter adding reference to the component I can open and close bottom sheet.\n\n### Actual Behavior\n\nIt's working as expected but there is an extra element with aria-hidden get added it to the DOM on the runtime.\r\n\r\n<div tabindex=\"0\" class=\"cdk-visually-hidden cdk-focus-trap-anchor\" aria-hidden=\"true\"></div>\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24180","RelatedDescription":"Open issue \"bug(COMPONENT): mat-bottom-sheet-container adding aria-hidden element with tabindex = 0\" (#24180)"},{"Id":"1097710905","IsPullRequest":true,"CreatedAt":"2022-01-10T10:31:34","Actor":"crisbeto","Number":"24179","RawContent":null,"Title":"fix(material-experimental/mdc-button): incorrect metadata for fab anchor","State":"open","Body":"Fixes that the FAB anchor was using the button inputs instead of the anchor ones.\r\n\r\nFixes #24145.","Url":"https://github.com/angular/components/pull/24179","RelatedDescription":"Open PR \"fix(material-experimental/mdc-button): incorrect metadata for fab anchor\" (#24179)"},{"Id":"1096865467","IsPullRequest":true,"CreatedAt":"2022-01-10T01:52:25","Actor":"crisbeto","Number":"24176","RawContent":null,"Title":"docs(material/radio): fix button width","State":"closed","Body":"Fixes that the radio button width spans the entire page in one of the live examples.\r\n\r\nFixes #24158.","Url":"https://github.com/angular/components/pull/24176","RelatedDescription":"Closed or merged PR \"docs(material/radio): fix button width\" (#24176)"},{"Id":"1092937012","IsPullRequest":false,"CreatedAt":"2022-01-10T01:52:25","Actor":"philmayfield","Number":"24158","RawContent":null,"Title":"bug(mat-radio-button): Click target is well outside of the visible label","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe label element for the `mat-radio-button` component has the style `width: 100%` applied to it.  When using the component in a stacked vertical orientation such as on the examples page of matarial.io, it creates a much larger hit area for each radio button than intended.\r\n\r\n![Screen Recording 2022-01-04 at 1 20 00 PM](https://user-images.githubusercontent.com/8093223/148126401-1b42f6c8-589f-47da-82fd-e4652bdbbbe2.gif)\r\n\r\nThis leads to potentially accidental form changes by clicking in what appears to be white space.\r\n\r\nWhen comparing to the `mat-checkbox` component the clickable target is only as large as the visible label.  These input types should have very similar interaction.\r\n\r\n![Screen Recording 2022-01-04 at 1 30 19 PM](https://user-images.githubusercontent.com/8093223/148126618-1e9a7898-8bf9-4f68-873f-4d6f766a818d.gif)\r\n\r\nI found the related issue [https://github.com/angular/components/issues/14894](https://github.com/angular/components/issues/14894) where I believe the 100% width was introduced, but I believe there was a disconnect between the \"selected\"-ness of an item and its focused state.  This appears to no longer be the case as simply removing the `width: 100%` prop seems to behave as intended.\r\n\r\n### Reproduction\r\n\r\nVisit the material.io example for radio buttons: [https://material.angular.io/components/radio/examples](https://material.angular.io/components/radio/examples)\r\n\r\nIn the second example (Pick your favorite season) where the radios are oriented vertically - observe how you can control the selected option from the right hand side of the container.\r\n\r\nVisit the material.io example for checkboxes: [https://material.angular.io/components/checkbox/examples](https://material.angular.io/components/checkbox/examples)\r\n\r\nIn the last example (Select your toppings) where the checkboxes are oriented vertically - observe how the hit area for a given option is only as large as its visible label.\r\n\r\n### Expected Behavior\r\n\r\nA radio button click area should be no wider than its visible label.\r\n\r\n### Actual Behavior\r\n\r\nThe click area for a radio button is the full width of its containing element.\r\n\r\n### Environment\r\n\r\nAngular CLI: 12.2.14\r\nNode: 14.16.0\r\nPackage Manager: yarn 1.22.10\r\nOS: darwin x64\r\n\r\nAngular: 12.2.15\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1202.14\r\n@angular-devkit/build-angular      12.2.14\r\n@angular-devkit/core               12.2.14\r\n@angular-devkit/schematics         12.2.14\r\n@angular/cdk                       12.2.13\r\n@angular/cli                       12.2.14\r\n@angular/flex-layout               12.0.0-beta.35\r\n@angular/material                  12.2.13\r\n@angular/material-moment-adapter   12.2.13\r\n@schematics/angular                12.2.14\r\nrxjs                               6.6.7\r\ntypescript                         4.3.5","Url":"https://github.com/angular/components/issues/24158","RelatedDescription":"Closed issue \"bug(mat-radio-button): Click target is well outside of the visible label\" (#24158)"},{"Id":"1096597723","IsPullRequest":true,"CreatedAt":"2022-01-10T01:51:54","Actor":"mmalerba","Number":"24175","RawContent":null,"Title":"fix(material-experimental/mdc-list): export missing harness symbols","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24175","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-list): export missing harness symbols\" (#24175)"},{"Id":"1097317819","IsPullRequest":true,"CreatedAt":"2022-01-09T22:21:59","Actor":"PooSham","Number":"24178","RawContent":null,"Title":"fix(material/dialog) Use `align` as `@Input()` in `MatDialogActions`","State":"open","Body":"Right now we're relying on css selectors `[align='center']` and `[align='end']` for aligning action buttons in the dialog. Relying on a non-standard attribute causes some issues, such as no self-documentation, no type checkings, more annoying data-binding syntax and errors from IDEs and text editors (notably, VS Code marks the align-attribute as red). \r\n\r\nThis is a continuation from this PR that failed to trigger CircleCI workflows, [here](https://github.com/angular/components/pull/21439)\r\n\r\nFixes [#18479](https://github.com/angular/components/issues/18479)","Url":"https://github.com/angular/components/pull/24178","RelatedDescription":"Open PR \"fix(material/dialog) Use `align` as `@Input()` in `MatDialogActions`\" (#24178)"},{"Id":"1097204855","IsPullRequest":false,"CreatedAt":"2022-01-09T14:03:45","Actor":"blackjackyau","Number":"24177","RawContent":null,"Title":"bug(material): Unable to click on link from side nav once mat-button is clicked","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n9.2.1\r\n\r\n### Description\r\n\r\nGiven a left-right side nav design, a bug was encountered where a mat-button from the side nav content (right) is clicked and follow up with clicking on the link from the side nav (left).\r\nOn the *first click, nothing will be happened and able to navigate on the second click.\r\n\r\nDid more testing around the behavior and found out that\r\n- the interim click ( *first click ) is regardless of location, basically I just need to \"unfocus\" the mat button for the second click to be successful\r\n- the bug is gone once I removed the mat-button directive from the button\r\n\r\nBug can be tested here\r\n- [Environment](https://blackjackyau.github.io/multi-tenant-ngrx/)\r\n- [Github](https://github.com/blackjackyau/multi-tenant-ngrx)\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Browse to https://github.com/blackjackyau/multi-tenant-ngrx\r\n2. Click on \"Add Product\" button\r\n3. Click on side nav \"Products\" under Tenant 2\r\n4. Nothing is happened on the first click\r\n5. Click again to take effect\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould be able to click on link from side nav on every time\r\n\r\n### Actual Behavior\r\n\r\nUnable to click on link on the first click ( after the mat-button is clicked )\r\n\r\n### Environment\r\n\r\n- Angular: 13.1.1\r\n- CDK/Material: 13.1.1\r\n- Browser(s): Chrome, Version 96.0.4664.110 (Official Build) (64-bit)\r\n- Operating System Windows","Url":"https://github.com/angular/components/issues/24177","RelatedDescription":"Open issue \"bug(material): Unable to click on link from side nav once mat-button is clicked\" (#24177)"},{"Id":"1095574574","IsPullRequest":false,"CreatedAt":"2022-01-07T22:22:13","Actor":"dcp3450","Number":"24170","RawContent":null,"Title":"help(version update errors): Getting errors on serve after version update","State":"closed","Body":"### What are you trying to do?\n\nI updated anuglar and material from 9 -> 10 but getting errors like this:\r\n\r\n`ERROR in src/app/system-tools/user-management/add-user/add-user.component.html(11,7): Directive MatInput, Property '_ariaDescribedby' does not exist on type 'MatInput'.`\n\n### What troubleshooting steps have you tried?\n\nCleared packages and reran `npm i`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Followed https://update.angular.io/?l=2&v=9.1-10.2 steps\r\n2. get errors on `ng serve`\r\n\n\n### Environment\n\n```\r\nAngular CLI: 10.2.4\r\nNode: 12.22.8\r\nOS: win32 x64\r\n\r\nAngular: 10.2.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: No\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1002.4\r\n@angular-devkit/build-angular   0.1002.4\r\n@angular-devkit/core            10.2.4\r\n@angular-devkit/schematics      10.2.4\r\n@angular/cdk                    10.2.7\r\n@angular/cli                    10.2.4\r\n@angular/material               10.2.4\r\n@schematics/angular             10.2.4\r\n@schematics/update              0.1002.4\r\nrxjs                            6.5.5\r\ntypescript                      3.9.10\r\n```","Url":"https://github.com/angular/components/issues/24170","RelatedDescription":"Closed issue \"help(version update errors): Getting errors on serve after version update\" (#24170)"},{"Id":"1096057104","IsPullRequest":false,"CreatedAt":"2022-01-07T13:00:35","Actor":"MeMeMax","Number":"24173","RawContent":null,"Title":"bug(MatButtonToggle): MatButtonToggle breaks when disabling/enabling it","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n10.2.0\n\n### Description\n\nWe made a major upgrade from Angular 10 to Angular 13. Now our MatToggleButtons do not work as expected. I could reproduce it in a stackblitz independent from our project.\r\n\r\nThere are two issues I see which might be also related to each other. I connected the mat-toggle-button with reactive forms to a form variable in my ts file.\r\n1. When I disable the mat-toggle-button I can still click on them and the value is actually changed which shouldn´t be possible.\r\n2. When I reenable the mat-toggle-button after clicking on the disabled buttons I can´t click them anymore in enabled state.\r\n\r\nI made a stackblitz for reproduction:\r\nhttps://stackblitz.com/edit/angular-ivy-zqthgm?file=package.json\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go the stackblitz: https://stackblitz.com/edit/angular-ivy-zqthgm?file=package.json\r\n2. Click around on the mat-toggle-button -> everything works\r\n3. Click enable/disable button to disable the mat-toggle-group\r\n4. Click around on the disabled mat-toggle-button -> still works but it shouldn´t as they are disabled\r\n5. Click enable/disable button to enable the mat-toggle-group\r\n6. Try to click on the enabled mat-toggle-button -> doesn´t work but it should as they are enabled\r\n\n\n### Expected Behavior\n\n1. Disabled mat-toggle-buttons shouldn´t be clickable\r\n2. Enabled mat-toggle-buttons should be clickable after reenabling them\n\n### Actual Behavior\n\n1. Disabled mat-toggle-buttons are clickable\r\n2. Enabled mat-toggle-buttons are not clickable after reenabling them\n\n### Environment\n\n- Angular:\r\n    \"@angular/animations\": \"13.0.0\",\r\n    \"@angular/cdk\": \"13.1.1\",\r\n    \"@angular/common\": \"13.0.0\",\r\n    \"@angular/compiler\": \"13.0.0\",\r\n    \"@angular/core\": \"13.0.0\",\r\n    \"@angular/forms\": \"13.1.1\",\r\n    \"@angular/material\": \"13.1.1\",\r\n- CDK/Material: 13.1.1\r\n- Browser(s): Chrome and Firefox tested\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24173","RelatedDescription":"Closed issue \"bug(MatButtonToggle): MatButtonToggle breaks when disabling/enabling it\" (#24173)"},{"Id":"1094833954","IsPullRequest":true,"CreatedAt":"2022-01-07T04:42:56","Actor":"zarend","Number":"24168","RawContent":null,"Title":"build: add .vimrc to gitignore","State":"closed","Body":"Adds .vimrc and .nvrc to the .gitignore file. This aligns components with how\r\nangular/angular does it\r\nhttps://github.com/angular/angular/blob/master/.gitignore.","Url":"https://github.com/angular/components/pull/24168","RelatedDescription":"Closed or merged PR \"build: add .vimrc to gitignore\" (#24168)"},{"Id":"1095210340","IsPullRequest":true,"CreatedAt":"2022-01-07T04:41:55","Actor":"crisbeto","Number":"24169","RawContent":null,"Title":"fix(cdk/schematics): remove file extensions in tilde migration","State":"closed","Body":"Expands the tilde migration to also drop the `.scss` file extensions.\r\n\r\nFixes #24162.","Url":"https://github.com/angular/components/pull/24169","RelatedDescription":"Closed or merged PR \"fix(cdk/schematics): remove file extensions in tilde migration\" (#24169)"},{"Id":"1093981242","IsPullRequest":false,"CreatedAt":"2022-01-07T04:41:55","Actor":"iKrishnaSahu","Number":"24162","RawContent":null,"Title":"bug(scss): ng update @angular/cdk did not remove .scss extension imports which breaks the application after serving.","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nng update @angular/cdk did not remove .scss extension imports which breaks the application after serving.\r\n\r\nBefore ng update @angular/cdk\r\n`@import '~@angular/material/_theming.scss';`\r\n\r\nAfter ng update @angular/cdk\r\n`@import '@angular/material/_theming.scss';`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Have a style which imports material theming like this => `@import '~@angular/material/_theming.scss';`\r\n2. Run `ng update @angular/cdk` or `ng update @angular/core @angular/cli ​@angular/material ​@angular/cdk`\r\n3. Run `npm start` or `ng serve`\r\n\r\n### Expected Behavior\r\n\r\nIt should have removed .scss extension from the `@import`.\r\n\r\n`@import '@angular/material/_theming';`\r\n\r\n### Actual Behavior\r\n\r\nError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: Can't find stylesheet to import.\r\n   ╷\r\n21 │ @import '@angular/material/_theming.scss';\r\n   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   ╵\r\n  apps\\custom\\src\\custom-theme.scss 21:9  @import\r\n\r\n### Environment\r\n\r\nAngular CLI: 13.0.4\r\nNode: 14.17.0\r\nPackage Manager: npm 6.14.13\r\nOS: win32 x64\r\n\r\nAngular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cli                    13.0.4\r\n@angular/flex-layout            13.0.0-beta.36\r\n@angular/language-service       12.2.15\r\n@schematics/angular             13.0.4\r\nrxjs                            7.5.1\r\ntypescript                      4.4.4\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24162","RelatedDescription":"Closed issue \"bug(scss): ng update @angular/cdk did not remove .scss extension imports which breaks the application after serving.\" (#24162)"},{"Id":"1095833245","IsPullRequest":true,"CreatedAt":"2022-01-07T00:15:02","Actor":"zarend","Number":"24172","RawContent":null,"Title":"fix(material/datepicker): update active date on focus","State":"open","Body":"When a a date cell on the calendar recieves focus, set the active date\r\nto that cell. This ensures that the active date matches the date with\r\nbrowser focus.\r\n\r\nPreviously, we set the active date on keydown and click, but that was\r\nproblematic for screenreaders. That's because many screenreaders trigger\r\na focus event instead of a keydown event when using screenreader\r\nspecific navigation (VoiceOver, Chromevox, NVDA).\r\n\r\nFixes #23483","Url":"https://github.com/angular/components/pull/24172","RelatedDescription":"Open PR \"fix(material/datepicker): update active date on focus\" (#24172)"},{"Id":"1095575609","IsPullRequest":true,"CreatedAt":"2022-01-06T18:26:20","Actor":"zarend","Number":"24171","RawContent":null,"Title":"Put buttons in calendar cells","State":"open","Body":"Please see commit message for description of this change.\r\n\r\nWe can ignore the first commit for the build, that's from another PR. The diff is easier to read with `?w=1` (.e.g.  https://github.com/angular/components/pull/24171/files?w=1)","Url":"https://github.com/angular/components/pull/24171","RelatedDescription":"Open PR \"Put buttons in calendar cells\" (#24171)"},{"Id":"1093101896","IsPullRequest":true,"CreatedAt":"2022-01-06T15:01:15","Actor":"crisbeto","Number":"24159","RawContent":null,"Title":"fix(cdk/text-field): handle undefined placeholder","State":"closed","Body":"Fixes that the string \"undefined\" would be used as the placeholder of an autosize `textarea` if the value is `undefined`.\r\n\r\nFixes #24154.","Url":"https://github.com/angular/components/pull/24159","RelatedDescription":"Closed or merged PR \"fix(cdk/text-field): handle undefined placeholder\" (#24159)"},{"Id":"1092399945","IsPullRequest":false,"CreatedAt":"2022-01-06T15:01:15","Actor":"quoctintran","Number":"24154","RawContent":null,"Title":"bug(cdk/text-field): material text area input placeholder shows 'undefined' when using cdkTextareaAutosize","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using cdkTextareaAutosize in the textarea as matInput, the placeholder was explicitly set as undefined and a value was patched, the placeholder shows 'undefined' after deleting the value (control still focused). All this happens as long as the control is focused. You can try it by typing another value and delete it again completely. The undefined placeholder disappears if the control loses focus (click somewhere else on the page). If you type a new value and delete it again, the placeholder is correct.\r\n\r\nAfter removing all the cdk inputs (cdkTextareaAutosize, cdkAutosizeMinRows, cdkAutosizeMaxRows), the placeholder is correct (empty).\r\n\r\n![image](https://user-images.githubusercontent.com/22502986/147921924-7eab0369-c842-4b32-a38e-cc6012b79663.png)\r\n\r\n### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-t7rq43?file=src/app/input-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. Open stackblitz example\r\n2. Delete the text in the textarea field\r\n3. Keep the focus in the control\r\n4. Optional: Type another value and delete it again\r\n5. Optional: Keep the focus in the control\r\n\r\n### Expected Behavior\r\n\r\nNo placeholder is shown even the placeholder is set as undefined\r\n\r\n### Actual Behavior\r\n\r\nPlaceholder shows text 'undefined'\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.15, 12.2.9, 12.1.0\r\n- CDK/Material: 12.2.13, 12.2.9, 12.1.0\r\n- Browser(s): Edge - Version 96.0.1054.62 (Official build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 - Version 2004 (OS Build 19041.1288)\r\n","Url":"https://github.com/angular/components/issues/24154","RelatedDescription":"Closed issue \"bug(cdk/text-field): material text area input placeholder shows 'undefined' when using cdkTextareaAutosize\" (#24154)"},{"Id":"1093435687","IsPullRequest":true,"CreatedAt":"2022-01-06T15:00:40","Actor":"jeripeierSBB","Number":"24160","RawContent":null,"Title":"fix(cdk/overlay): fix positioning when zooming in Safari","State":"closed","Body":"Currently, when zooming in Safari in macOS and iOS the overlay is positioned\r\nat the wrong place, offset by the zoom offset (left / top).\r\nThis fix corrects this by adding/subtracting the corresponding offset.\r\n\r\nScreenshot in Safari 15.1 on macOS with activated zoom:\r\n<img width=\"951\" alt=\"Bildschirmfoto 2022-01-04 um 15 47 25\" src=\"https://user-images.githubusercontent.com/29278232/148076606-dd84f537-ff1e-41b0-93f7-d2007c7b6cbb.png\">\r\n\r\n","Url":"https://github.com/angular/components/pull/24160","RelatedDescription":"Closed or merged PR \"fix(cdk/overlay): fix positioning when zooming in Safari\" (#24160)"},{"Id":"1094783432","IsPullRequest":true,"CreatedAt":"2022-01-06T01:52:20","Actor":"andrewseguin","Number":"24167","RawContent":null,"Title":"fix(material-experimental/mdc-slider): keep value indicator within bounds","State":"closed","Body":"cl/419837612","Url":"https://github.com/angular/components/pull/24167","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-slider): keep value indicator within bounds\" (#24167)"},{"Id":"1094775275","IsPullRequest":true,"CreatedAt":"2022-01-05T21:55:17","Actor":"andrewseguin","Number":"24166","RawContent":null,"Title":"Project import generated by Copybara.","State":"open","Body":"Project import generated by Copybara.\n","Url":"https://github.com/angular/components/pull/24166","RelatedDescription":"Open PR \"Project import generated by Copybara.\" (#24166)"},{"Id":"1094373449","IsPullRequest":false,"CreatedAt":"2022-01-05T19:43:57","Actor":"eosgortor","Number":"24165","RawContent":null,"Title":"feat(*): Make @HostBinding('disabled') work again","State":"closed","Body":"### Feature Description\r\n\r\nWith Material prior 12 I could write a directive with a HostBinding on disabled to support the use case.\r\n\r\n```\r\n  @Directive({\r\n    selector: '[permission]'\r\n  })\r\n  export class PermissionDirective {\r\n    @Input() permission: string = ''; // Required permission\r\n    @HostBinding('attr.disabled') get disabled() { \r\n      return this.permission != \"allowed\" || null; \r\n    }\r\n  }\r\n```\r\n\r\nSince Material 12 I don't know anymore how to do this. For a button I could add a HostBinding for the class 'mat-button-disabled'. \r\n`HostBinding('class.mat-button-disabled')`\r\nBut how to do it when I want to use the directive for all controls that can be disabled (checkbox, radio, input, ...)? \r\n\r\nThere was already an issue (#24006) filed regarding that. But with no general solution.\r\n\r\n\r\n\r\n### Use Case\r\n\r\nI want to disable controls, if the user has no permission to use them","Url":"https://github.com/angular/components/issues/24165","RelatedDescription":"Closed issue \"feat(*): Make @HostBinding('disabled') work again\" (#24165)"},{"Id":"1094084377","IsPullRequest":false,"CreatedAt":"2022-01-05T19:35:14","Actor":"iKrishnaSahu","Number":"24163","RawContent":null,"Title":"bug(migrate): nx migrate 13.2.4 fails everytime","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nnx migrate 13.2.4 fails everytime.\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create work space using npx create-nx-workspace@12.10.0 --cli=\"angular\"\r\n2. Migrate workspace using nx migrate 13.2.4\r\n\n\n### Expected Behavior\n\nMigration should complete without any error\n\n### Actual Behavior\n\nMigration is failing with error.\r\n\r\nComplete log - \r\n\r\n`\r\nPS C:\\Projects\\projects\\workspace\\test-ws1-r55> nx migrate 13.2.4\r\nFetching meta data about packages.\r\nIt may take a few minutes.\r\nFetching @nrwl/workspace@13.2.4\r\nFetching @nrwl/angular@13.2.4\r\nFetching @nrwl/cli@13.2.4\r\nFetching @nrwl/cypress@13.2.4\r\nFetching @nrwl/eslint-plugin-nx@13.2.4\r\nFetching @nrwl/jest@13.2.4\r\nFetching @nrwl/linter@13.2.4\r\nFetching @nrwl/tao@13.2.4\r\nFetching @angular/cli@~13.0.0\r\nFetching @angular-devkit/build-angular@~13.0.0\r\nFetching @angular/core@^13.0.0\r\nFetching @angular/common@^13.0.0\r\nFetching @angular/forms@^13.0.0\r\nFetching @angular/compiler@^13.0.0\r\nFetching @angular/compiler-cli@^13.0.0\r\nFetching @angular/platform-browser@^13.0.0\r\nFetching @angular/platform-browser-dynamic@^13.0.0\r\nFetching @angular/router@^13.0.0\r\nFetching @angular/language-service@^13.0.0\r\nFetching @angular/animations@^13.0.0\r\nFetching @angular/material@^13.0.0\r\nFetching @angular/cdk@^13.0.0\r\nFetching zone.js@~0.11.4\r\nFetching typescript@~4.4.3\r\nFetching @angular-eslint/eslint-plugin@~12.6.0\r\nFetching @angular-eslint/eslint-plugin-template@~12.6.0\r\nFetching @angular-eslint/template-parser@~12.6.0\r\nFetching jest-preset-angular@11.0.0\r\n\r\n ERROR  The migrate command failed.\r\n\r\nCommand failed: npm install @angular-devkit/build-angular@~13.0.0\r\nnpm WARN deprecated flatten@1.0.3: flatten is deprecated in favor of utility frameworks such as lodash.\r\nnpm WARN deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-android-arm64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-android-arm64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-android-arm64@0.13.12: wanted {\"os\":\"android\",\"arch\":\"arm64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-darwin-arm64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-darwin-arm64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-darwin-arm64@0.13.12: wanted {\"os\":\"darwin\",\"arch\":\"arm64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-64@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-32@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-32):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-32@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"ia32\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-freebsd-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-freebsd-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-freebsd-64@0.13.12: wanted {\"os\":\"freebsd\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-arm@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-arm):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-arm@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"arm\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-freebsd-arm64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-freebsd-arm64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-freebsd-arm64@0.13.12: wanted {\"os\":\"freebsd\",\"arch\":\"arm64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-arm64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-arm64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-arm64@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"arm64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-mips64le@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-mips64le):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-mips64le@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"mips64el\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-darwin-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-darwin-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-darwin-64@0.13.12: wanted {\"os\":\"darwin\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-openbsd-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-openbsd-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-openbsd-64@0.13.12: wanted {\"os\":\"openbsd\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-linux-ppc64le@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-linux-ppc64le):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-linux-ppc64le@0.13.12: wanted {\"os\":\"linux\",\"arch\":\"ppc64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-windows-32@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-windows-32):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-windows-32@0.13.12: wanted {\"os\":\"win32\",\"arch\":\"ia32\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-sunos-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-sunos-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-sunos-64@0.13.12: wanted {\"os\":\"sunos\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-netbsd-64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-netbsd-64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-netbsd-64@0.13.12: wanted {\"os\":\"netbsd\",\"arch\":\"x64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: esbuild-windows-arm64@0.13.12 (node_modules\\@angular-devkit\\build-angular\\node_modules\\esbuild\\node_modules\\esbuild-windows-arm64):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for esbuild-windows-arm64@0.13.12: wanted {\"os\":\"win32\",\"arch\":\"arm64\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: nice-napi@^1.0.2 (node_modules\\piscina\\node_modules\\nice-napi):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for nice-napi@1.0.2: wanted {\"os\":\"!win32\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules\\chokidar\\node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\nnpm WARN enoent ENOENT: no such file or directory, open 'C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-24156-q2Nn6tXkAo04\\package.json'\r\nnpm WARN @angular-devkit/build-angular@13.0.4 requires a peer of @angular/compiler-cli@^13.0.0 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN @angular-devkit/build-angular@13.0.4 requires a peer of typescript@~4.4.3 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN @ngtools/webpack@13.0.4 requires a peer of @angular/compiler-cli@^13.0.0 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN @ngtools/webpack@13.0.4 requires a peer of typescript@~4.4.3 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN ajv-keywords@3.5.2 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself.\r\nnpm WARN tmp-24156-q2Nn6tXkAo04 No description\r\nnpm WARN tmp-24156-q2Nn6tXkAo04 No repository field.\r\nnpm WARN tmp-24156-q2Nn6tXkAo04 No README data\r\nnpm WARN tmp-24156-q2Nn6tXkAo04 No license field.\r\n\r\nnpm ERR! code ENOENT\r\nnpm ERR! syscall rename\r\nnpm ERR! path C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-24156-q2Nn6tXkAo04\\node_modules\\@babel\\helper-builder-binary-assignment-operator-visitor\r\nnpm ERR! dest C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-24156-q2Nn6tXkAo04\\node_modules\\@babel\\.helper-builder-binary-assignment-operator-visitor.DELETE       \r\nnpm ERR! errno -4058\r\nnpm ERR! enoent ENOENT: no such file or directory, rename 'C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-24156-q2Nn6tXkAo04\\node_modules\\@babel\\helper-builder-binary-assignment-operator-visitor' -> 'C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-24156-q2Nn6tXkAo04\\node_modules\\@babel\\.helper-builder-binary-assignment-operator-visitor.DELETE'\r\nnpm ERR! enoent This is related to npm not being able to find a file.\r\nnpm ERR! enoent \r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Projects\\.npm-cache\\_logs\\2022-01-05T06_16_25_209Z-debug.log\r\n\r\nError: Command failed: C:\\Users\\E5648603\\AppData\\Local\\Temp\\3\\tmp-7148-ALl9Yq0ittEf\\node_modules\\.bin\\tao migrate 13.2.4\r\n    at checkExecSyncError (child_process.js:640:11)\r\n    at Object.execSync (child_process.js:676:15)\r\n    at Object.handler (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\@nrwl\\workspace\\src\\command-line\\nx-commands.js:101:25)        \r\n    at Object.runCommand (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\yargs\\build\\lib\\command.js:196:48)\r\n    at Object.parseArgs [as _parseArgs] (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\yargs\\build\\lib\\yargs.js:1043:55)\r\n    at Object.get [as argv] (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\yargs\\build\\lib\\yargs.js:986:25)\r\n    at Object.initLocal (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\@nrwl\\cli\\lib\\init-local.js:25:79)\r\n    at Object.<anonymous> (C:\\Projects\\projects\\workspace\\test-ws1-r55\\node_modules\\@nrwl\\cli\\bin\\nx.js:43:18)\r\n    at Module._compile (internal/modules/cjs/loader.js:1068:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1097:10) {\r\n  status: 1,\r\n  signal: null,\r\n  output: [ null, null, null ],\r\n  pid: 16600,\r\n  stdout: null,\r\n  stderr: null\r\n}\r\nPS C:\\Projects\\projects\\workspace\\test-ws1-r55>\r\n`\n\n### Environment\n\n- Angular CLI: 13.1.2\r\nNode: 14.17.0\r\nPackage Manager: npm 6.14.13\r\nOS: win32 x64\r\n\r\n- Angular: 13.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/24163","RelatedDescription":"Closed issue \"bug(migrate): nx migrate 13.2.4 fails everytime\" (#24163)"},{"Id":"1093775230","IsPullRequest":false,"CreatedAt":"2022-01-05T13:55:57","Actor":"gpaimla","Number":"24161","RawContent":null,"Title":"bug(mat-tabs): animationDuration=\"0ms\" no longer works","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPreviously we could set animationDuration=\"0ms\" to disable mat-tab animation\r\nhttps://github.com/angular/components/issues/13428\r\nthis no longer works.\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  go to https://material.angular.io/components/tabs/examples#tab-group-animations \r\n2.  open in stackblitz\r\n3.  changing tabs still uses animation\n\n### Expected Behavior\n\nusing animationDuration=\"0ms\" should disable the animation\n\n### Actual Behavior\n\ndefault animation duration\n\n### Environment\n\n- Angular: 13\r\n- CDK/Material: 13\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): win32 x64\r\n\r\n","Url":"https://github.com/angular/components/issues/24161","RelatedDescription":"Closed issue \"bug(mat-tabs): animationDuration=\"0ms\" no longer works\" (#24161)"},{"Id":"1094096833","IsPullRequest":true,"CreatedAt":"2022-01-05T08:23:27","Actor":"crisbeto","Number":"24164","RawContent":null,"Title":"fix(material/tabs): update tab state when active tab is swapped out","State":"open","Body":"Fixes that when the selected tab is swapped out, we weren't marking the new tab as active and emitting the `selectedTabChange` event.\r\n\r\nFixes #24147.","Url":"https://github.com/angular/components/pull/24164","RelatedDescription":"Open PR \"fix(material/tabs): update tab state when active tab is swapped out\" (#24164)"},{"Id":"1092864552","IsPullRequest":false,"CreatedAt":"2022-01-03T22:27:29","Actor":"amakhrov","Number":"24157","RawContent":null,"Title":"bug(mat-icon-button,mat-fab,mat-raised-button,mat-flat-button): Hover effect is missing","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThis is largely a duplicate of https://github.com/angular/components/issues/3946\r\nThe resolution in the original issue was \"matches the spec\".\r\n\r\nWell, there is no spec for icon button per say. But the toggle button in the current spec (v2) clearly has the hover state: https://material.io/components/buttons#toggle-button\r\n![Screen Shot 2022-01-03 at 2 26 21 PM](https://user-images.githubusercontent.com/1004015/147987123-26e5ede8-1bf5-4cdd-b98d-24171182a3f2.png)\r\n\r\nFor FAB, the spec doesn't say this explicitly, but the demo shows the change of elevation when hovered (https://material.io/components/buttons-floating-action-button#usage). The v3 spec explicitly calls out the elevation change, as well as background opacity (https://m3.material.io/components/floating-action-button/specs)\r\nRaised and flat button - similar to FAB.\r\n\r\n### Reproduction\r\n\r\nE.g. demos in https://material.angular.io/components/button/examples\r\n\r\n### Expected Behavior\r\n\r\nHover effect should exist for all button types\r\n\r\n### Actual Behavior\r\n\r\nHover effect is missing\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24157","RelatedDescription":"Open issue \"bug(mat-icon-button,mat-fab,mat-raised-button,mat-flat-button): Hover effect is missing\" (#24157)"},{"Id":"1092536806","IsPullRequest":true,"CreatedAt":"2022-01-03T14:02:09","Actor":"yousafnawaz","Number":"24156","RawContent":null,"Title":"docs(material/slider): adjust CSS of configurable slider example","State":"open","Body":"modify CSS of configurable slider example to adjust according to device\r\n![Screenshot1](https://user-images.githubusercontent.com/91653057/147939453-76f44abf-c650-4f16-b2e1-0122cf034516.jpg)\r\n![Screenshot2](https://user-images.githubusercontent.com/91653057/147939465-6d72952f-68de-4e44-baa2-5f0732c40719.jpg)\r\n\r\n","Url":"https://github.com/angular/components/pull/24156","RelatedDescription":"Open PR \"docs(material/slider): adjust CSS of configurable slider example\" (#24156)"},{"Id":"1092455341","IsPullRequest":true,"CreatedAt":"2022-01-03T13:53:30","Actor":"yousafnawaz","Number":"24155","RawContent":null,"Title":"docs(material/slider): adjust CSS of configurable slider example","State":"closed","Body":"modify CSS of configurable slider example to adjust according to device\r\n\r\n![Screenshot1](https://user-images.githubusercontent.com/91653057/147928480-cd3e145b-af43-4242-ad22-8a504da1991c.jpg)\r\n![Screenshot2](https://user-images.githubusercontent.com/91653057/147928486-1c7ea45c-148c-4757-994a-d9d6b076bcf9.jpg)","Url":"https://github.com/angular/components/pull/24155","RelatedDescription":"Closed or merged PR \"docs(material/slider): adjust CSS of configurable slider example\" (#24155)"},{"Id":"1092360829","IsPullRequest":true,"CreatedAt":"2022-01-03T09:42:36","Actor":"chabb","Number":"24153","RawContent":null,"Title":"fix(cdk/scrolling): fix scrolling in appendOnly mode","State":"open","Body":"Hi,\r\n\r\nThis fixes https://github.com/angular/components/issues/23577\r\n\r\nThe rendered content offset is incorrectly set in appendOnly; it should not change. This causes a weird behavior where the list jumps to the top\r\n\r\nCC: @MichaelJamesParsons as you added the appendOnly flag in 8f052cc,, and @mmalerba as ( I think ) your are the main author for the virtual-scrolling","Url":"https://github.com/angular/components/pull/24153","RelatedDescription":"Open PR \"fix(cdk/scrolling): fix scrolling in appendOnly mode\" (#24153)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-11T05:30:04.2475008Z","RunDurationInMilliseconds":2462}