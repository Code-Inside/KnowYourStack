{"Data":{"Angular-Issues":{"Issues":[{"Id":"1240981804","IsPullRequest":true,"CreatedAt":"2022-05-19T02:06:00","Actor":"AndrewKushnir","Number":"46053","RawContent":null,"Title":"feat(common): verify that priority images have preload/preconnect links configured","State":"open","Body":"This commit updates the `NgOptimizedImage` directive to add a logic to detect whether an image, marked with the \"priority\" attribute has corresponding `<link rel=\"preload\">` or `<link rel=\"preconnect\">` tag in the `document.head`.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/46053","RelatedDescription":"Open PR \"feat(common): verify that priority images have preload/preconnect links configured\" (#46053)"},{"Id":"1240903829","IsPullRequest":true,"CreatedAt":"2022-05-19T01:15:19","Actor":"AndrewKushnir","Number":"46052","RawContent":null,"Title":"fix(core): handle AOT-compiled standalone components in TestBed correctly","State":"open","Body":"Previously, the code in TestBed didn't take into account the fact that the `cmp.dependencies` array after the AOT compilation might contain regular (NgModule-based) Components/Directive/Pipes. As a result, some NgModule-specific code paths were invoked for non-NgModule types, thus leading to errors.\r\n\r\nThis commit updates the code to handle AOT-compiled structure of standalone components correctly.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/46052","RelatedDescription":"Open PR \"fix(core): handle AOT-compiled standalone components in TestBed correctly\" (#46052)"},{"Id":"1240727677","IsPullRequest":true,"CreatedAt":"2022-05-18T23:36:41","Actor":"dylhunn","Number":"46051","RawContent":null,"Title":"fix(forms): Various fixes to FormControl overridden constructors.","State":"open","Body":"See individual commits:\r\n\r\n1. add `nonNullable` as a better-named FormControl option\r\n2. fix a huge footgun involving mixing options and validators","Url":"https://github.com/angular/angular/pull/46051","RelatedDescription":"Open PR \"fix(forms): Various fixes to FormControl overridden constructors.\" (#46051)"},{"Id":"1240706627","IsPullRequest":true,"CreatedAt":"2022-05-18T23:23:28","Actor":"alxhub","Number":"46050","RawContent":null,"Title":"Introduce the Developer Preview concept in AIO","State":"open","Body":"* Documentation on \"Developer Preview\"\r\n* New `@preview` tag which adds an API status chip linking to the Developer Preview docs\r\n* Adds `@preview` to all standalone APIs","Url":"https://github.com/angular/angular/pull/46050","RelatedDescription":"Open PR \"Introduce the Developer Preview concept in AIO\" (#46050)"},{"Id":"1240584604","IsPullRequest":true,"CreatedAt":"2022-05-18T22:07:45","Actor":"AndrewKushnir","Number":"46049","RawContent":null,"Title":"fix(core): restore NgModule state correctly after TestBed overrides","State":"open","Body":"This commit updates the NgModule logic to account for a case when a type has more than one generated def. This is a common situation for NgModules which have at least two: ɵmod and ɵinj. Previously, the second def was not stored before applying overrides, thus leaving it modified after the test, leaking the state as a result. This fix ensures that we store all defs before applying any overrides.\r\n\r\n// cc @gkalpak \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/46049","RelatedDescription":"Open PR \"fix(core): restore NgModule state correctly after TestBed overrides\" (#46049)"},{"Id":"1240536651","IsPullRequest":false,"CreatedAt":"2022-05-18T21:12:21","Actor":"mgechev","Number":"46048","RawContent":null,"Title":"Improve error message with null header","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen a header value of an HTTP call is `null` we throw a `TypeError`: `Cannot read properties of null (reading 'length')`.\r\n\r\nThat's accurate and could be more useful if we also specify the header with `null` value.\r\n\r\nYou can find a reproduction [on StackBlitz](https://stackblitz.com/edit/angular-ivy-cjwehw?file=src%2Fapp%2Fapp.component.ts).\r\n\r\nBased on a discussion on Twitter [here](https://twitter.com/SureshNagar21/status/1527031130339221505).\r\n\r\n### Proposed solution\r\n\r\nThrow an error `Cannot read the \"length\" property of the header \"bar\" because it has value null`\r\n\r\n### Alternatives considered\r\n\r\nStricter typings of the `headers` so that we can show a type error.","Url":"https://github.com/angular/angular/issues/46048","RelatedDescription":"Open issue \"Improve error message with null header\" (#46048)"},{"Id":"1240469975","IsPullRequest":false,"CreatedAt":"2022-05-18T20:18:22","Actor":"AleksanderBodurri","Number":"46047","RawContent":null,"Title":"DevTools: Setters and Getters do not appear in the property viewer","State":"open","Body":"### Description\r\n\r\nCurrently DevTools is unable to display setters or getters in the property view. See the example images below.\r\n\r\n\r\n<img width=\"302\" alt=\"Screen Shot 2022-05-18 at 4 12 52 PM\" src=\"https://user-images.githubusercontent.com/39253660/169147671-5846e19e-ba44-4eee-aae1-f05da0637c3f.png\">\r\n\r\n<img width=\"1512\" alt=\"Screen Shot 2022-05-18 at 4 14 11 PM\" src=\"https://user-images.githubusercontent.com/39253660/169147858-9dd7a9e0-98a7-4e9d-94c1-bb98382b5908.png\">\r\n\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\nLet's use `Object.getOwnPropertyDescriptors` on the directive `__proto__` to parse out setters and getters and display them in the directive explorer as functions.\r\n\r\nRelevant files \r\nhttps://github.com/angular/angular/blob/db841d02c9758e51f9c2250c549a2acc52ba446e/devtools/projects/ng-devtools-backend/src/lib/state-serializer/serialized-descriptor-factory.ts\r\nhttps://github.com/angular/angular/blob/2a1ff17b427a2686c673a82151991c8ff56df62c/devtools/projects/ng-devtools-backend/src/lib/state-serializer/object-utils.ts\r\n\r\nWhat do you think @mgechev?\r\n","Url":"https://github.com/angular/angular/issues/46047","RelatedDescription":"Open issue \"DevTools: Setters and Getters do not appear in the property viewer\" (#46047)"},{"Id":"1240457102","IsPullRequest":true,"CreatedAt":"2022-05-18T20:06:26","Actor":"aljavier","Number":"46046","RawContent":null,"Title":"docs: fix angularfire2 hyperlink","State":"open","Body":"Hyperlink to **angularFire2** was incorrect, it was missing a _')'_ at the end to close the link per Markdown syntax.","Url":"https://github.com/angular/angular/pull/46046","RelatedDescription":"Open PR \"docs: fix angularfire2 hyperlink\" (#46046)"},{"Id":"1240354038","IsPullRequest":false,"CreatedAt":"2022-05-18T19:19:35","Actor":"qheolet","Number":"46041","RawContent":null,"Title":"Children Routing problem ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\n```javascript\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'dashboard',\r\n    canActivate: [AuthuserGuard],\r\n    children: [\r\n      { path: '', component: DashboardComponent },\r\n      { path: 'customers', component: Placeholder },\r\n      { path: 'input', component: Placeholder },\r\n      { path: 'management', component: Placeholder },\r\n      { path: 'user', component: Placeholder },\r\n    ],\r\n  },\r\n  { path: '', component: LandingComponent },\r\n  { path: '**', component: PageNotFoundComponent },\r\n];\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n./src/app/app-routing.module.ts:1:0-66 - Error: Module not found: Error: Package path ./src/i18n/i18n_ast is not exported from package .../node_modules/@angular/compiler (see exports field in .../node_modules/@angular/compiler/package.json)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n/ \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.3.5\r\nNode: 14.15.0\r\nPackage Manager: npm 6.14.8\r\nOS: darwin x64\r\n\r\nAngular: 13.3.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cli                    13.3.5\r\n@schematics/angular             13.3.5\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/46041","RelatedDescription":"Closed issue \"Children Routing problem \" (#46041)"},{"Id":"1240390015","IsPullRequest":true,"CreatedAt":"2022-05-18T19:11:42","Actor":"jessicajaniuk","Number":"46045","RawContent":null,"Title":"docs: release notes for the v14.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/46045","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.0.0-rc.1 release\" (#46045)"},{"Id":"1240383954","IsPullRequest":true,"CreatedAt":"2022-05-18T19:06:27","Actor":"jessicajaniuk","Number":"46044","RawContent":null,"Title":"Bump version to \"v14.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/46044","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-rc.1\" with changelog.\" (#46044)"},{"Id":"1240369853","IsPullRequest":true,"CreatedAt":"2022-05-18T19:00:07","Actor":"jessicajaniuk","Number":"46043","RawContent":null,"Title":"docs: release notes for the v13.3.9 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/46043","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.3.9 release\" (#46043)"},{"Id":"1240364279","IsPullRequest":true,"CreatedAt":"2022-05-18T18:42:29","Actor":"jessicajaniuk","Number":"46042","RawContent":null,"Title":"Bump version to \"v13.3.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/46042","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.3.9\" with changelog.\" (#46042)"},{"Id":"1240327754","IsPullRequest":true,"CreatedAt":"2022-05-18T18:23:33","Actor":"jessicajaniuk","Number":"46039","RawContent":null,"Title":"Revert \"fix(core): set correct context for inject() for component ctors\"","State":"closed","Body":"This reverts commit 425c75593376dc38b0cc664e35f0392460b6588b.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/46039","RelatedDescription":"Closed or merged PR \"Revert \"fix(core): set correct context for inject() for component ctors\"\" (#46039)"},{"Id":"1240345733","IsPullRequest":true,"CreatedAt":"2022-05-18T18:20:56","Actor":"gkalpak","Number":"46040","RawContent":null,"Title":"docs: fix inline JSDoc tags (@see --> @link)","State":"open","Body":"In some places, the [@see][1] JSDoc tag was incorrectly used instead of the [@link][2] inline tag, leading to warnings during doc generation and the `@see` tags being ignored (and thus shown in the docs as is).\r\nReplace the `@see` tags with the intended `@link` tags.\r\n\r\n[1]: https://jsdoc.app/tags-see.html\r\n[2]: https://jsdoc.app/tags-inline-link.html\r\n","Url":"https://github.com/angular/angular/pull/46040","RelatedDescription":"Open PR \"docs: fix inline JSDoc tags (@see --> @link)\" (#46040)"},{"Id":"1240198817","IsPullRequest":false,"CreatedAt":"2022-05-18T16:18:35","Actor":"DwieDima","Number":"46038","RawContent":null,"Title":"bug(pipe): currency pipe missing whitespace on negative amount","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen you use currencies, where the symbol is on the left side, there is no whitespace between the symbol and amount, when amount is negative.\r\n\r\nExample negative:\r\n<img width=\"95\" alt=\"image\" src=\"https://user-images.githubusercontent.com/26873275/169091622-d4c1fb34-62f8-40a5-bb50-fb747e209ef1.png\">\r\n\r\nExample positive:\r\n<img width=\"95\" alt=\"image\" src=\"https://user-images.githubusercontent.com/26873275/169092158-3ee6e82f-4105-406b-80a5-46f2d96bf9de.png\">\r\n\r\n\r\nExpected when negative:\r\n<img width=\"95\" alt=\"image\" src=\"https://user-images.githubusercontent.com/26873275/169092082-41cbae38-275c-4a6f-8f5b-e65029588c2f.png\">\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.2.3\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: darwin arm64\r\n\r\nAngular: 13.2.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/46038","RelatedDescription":"Open issue \"bug(pipe): currency pipe missing whitespace on negative amount\" (#46038)"},{"Id":"1239229008","IsPullRequest":true,"CreatedAt":"2022-05-18T15:55:49","Actor":"alxhub","Number":"46029","RawContent":null,"Title":"Fix issues with cycle detection","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/46029","RelatedDescription":"Closed or merged PR \"Fix issues with cycle detection\" (#46029)"},{"Id":"1240156645","IsPullRequest":true,"CreatedAt":"2022-05-18T15:43:05","Actor":"MariusTilvanDev","Number":"46037","RawContent":null,"Title":"feat(devtools): Create browser specific styles for chrome and firefox","State":"open","Body":" Create browser specific styles for chrome and firefox\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThere is no specific style based on browser Chrome/Firefox\r\n\r\nIssue Number: #45889\r\n\r\n\r\n## What is the new behavior?\r\nThere are browser specific styles for chrome and firefox.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/46037","RelatedDescription":"Open PR \"feat(devtools): Create browser specific styles for chrome and firefox\" (#46037)"},{"Id":"1239992874","IsPullRequest":false,"CreatedAt":"2022-05-18T15:08:03","Actor":"suriyaJaay","Number":"46036","RawContent":null,"Title":"Angular 13 - ERROR RangeError: Maximum call stack size exceeded","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI Just created brand new project with below Angular Version. When i hit ng serve, compilation is success but in browser am getting \r\n\r\nI'm not able to find the exact reason behind this, because i've created 2 new projects couple of days before for learning purpose which is still working fine and i could able compile and see the application running in the browser.\r\n\r\nbut today **18-05-2022** the new project i created is not working. Kindly help me to understand this. \r\n\r\nThanks\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\ncore.mjs:6461 ERROR RangeError: Maximum call stack size exceeded\r\n    at renderView (core.mjs:9435:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\ndefaultErrorLogger @ core.mjs:6461\r\nhandleError @ core.mjs:6508\r\n(anonymous) @ core.mjs:26133\r\ninvoke @ zone.js:372\r\nrun @ zone.js:134\r\nrunOutsideAngular @ core.mjs:25356\r\n(anonymous) @ core.mjs:26133\r\ninvoke @ zone.js:372\r\nonInvoke @ core.mjs:25457\r\ninvoke @ zone.js:371\r\nrun @ zone.js:134\r\n(anonymous) @ zone.js:1275\r\ninvokeTask @ zone.js:406\r\nonInvokeTask @ core.mjs:25444\r\ninvokeTask @ zone.js:405\r\nrunTask @ zone.js:178\r\ndrainMicroTaskQueue @ zone.js:585\r\nPromise.then (async)\r\nnativeScheduleMicroTask @ zone.js:561\r\nscheduleMicroTask @ zone.js:572\r\nscheduleTask @ zone.js:396\r\nscheduleTask @ zone.js:221\r\nscheduleMicroTask @ zone.js:241\r\nscheduleResolveOrReject @ zone.js:1265\r\nthen @ zone.js:1450\r\nbootstrapModule @ core.mjs:26055\r\n4431 @ main.ts:11\r\n__webpack_require__ @ bootstrap:19\r\n__webpack_exec__ @ main.ts:12\r\n(anonymous) @ main.ts:12\r\n__webpack_require__.O @ chunk loaded:23\r\n(anonymous) @ main.ts:12\r\nwebpackJsonpCallback @ jsonp chunk loading:34\r\n(anonymous) @ main.js:2\r\nmain.ts:12 RangeError: Maximum call stack size exceeded\r\n    at renderView (core.mjs:9435:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\n    at renderComponent$1 (core.mjs:10677:1)\r\n    at renderChildComponents (core.mjs:9261:1)\r\n    at renderView (core.mjs:9421:1)\r\n(anonymous) @ main.ts:12\r\ninvoke @ zone.js:372\r\nrun @ zone.js:134\r\n(anonymous) @ zone.js:1275\r\ninvokeTask @ zone.js:406\r\nrunTask @ zone.js:178\r\ndrainMicroTaskQueue @ zone.js:585\r\nPromise.then (async)\r\nnativeScheduleMicroTask @ zone.js:561\r\nscheduleMicroTask @ zone.js:572\r\nscheduleTask @ zone.js:396\r\nscheduleTask @ zone.js:221\r\nscheduleMicroTask @ zone.js:241\r\nscheduleResolveOrReject @ zone.js:1265\r\nthen @ zone.js:1450\r\nbootstrapModule @ core.mjs:26055\r\n4431 @ main.ts:11\r\n__webpack_require__ @ bootstrap:19\r\n__webpack_exec__ @ main.ts:12\r\n(anonymous) @ main.ts:12\r\n__webpack_require__.O @ chunk loaded:23\r\n(anonymous) @ main.ts:12\r\nwebpackJsonpCallback @ jsonp chunk loading:34\r\n(anonymous) @ main.js:2\r\nindex.js:548 [webpack-dev-server] Live Reloading enabled.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n{\r\n  \"name\": \"form-and-test-framework\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~13.1.0\",\r\n    \"@angular/common\": \"~13.1.0\",\r\n    \"@angular/compiler\": \"~13.1.0\",\r\n    \"@angular/core\": \"~13.1.0\",\r\n    \"@angular/forms\": \"~13.1.0\",\r\n    \"@angular/platform-browser\": \"~13.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"~13.1.0\",\r\n    \"@angular/router\": \"~13.1.0\",\r\n    \"rxjs\": \"~7.4.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~13.1.1\",\r\n    \"@angular/cli\": \"~13.1.1\",\r\n    \"@angular/compiler-cli\": \"~13.1.0\",\r\n    \"@types/jasmine\": \"~3.10.0\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"jasmine-core\": \"~3.10.0\",\r\n    \"karma\": \"~6.3.0\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.1.0\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\r\n    \"typescript\": \"~4.5.2\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n### Anything else?\r\n3.reactiveForm validation and jest framework\\form-and-test-framework>ng serve\r\n√ Browser application bundle generation complete.\r\n\r\nInitial Chunk Files   | Names         |  Raw Size\r\nvendor.js             | vendor        |   2.00 MB |\r\npolyfills.js          | polyfills     | 334.15 kB |\r\nstyles.css, styles.js | styles        | 213.00 kB |\r\nmain.js               | main          |   7.58 kB |\r\nruntime.js            | runtime       |   6.88 kB |\r\n\r\n                      | Initial Total |   2.55 MB\r\n\r\nBuild at: 2022-05-18T13:31:13.411Z - Hash: 63e6f3550b7922c5 - Time: 10655ms\r\n\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **\r\n_No response_","Url":"https://github.com/angular/angular/issues/46036","RelatedDescription":"Closed issue \"Angular 13 - ERROR RangeError: Maximum call stack size exceeded\" (#46036)"},{"Id":"1239717634","IsPullRequest":false,"CreatedAt":"2022-05-18T11:11:00","Actor":"ShantanuParode","Number":"46033","RawContent":null,"Title":"Get Element Reference of a DOM Element created dynamically from a library.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI want to add a class to a DOM Element by taking it's reference. But the element is created by a library and I cannot access it directly, means I can't use ViewChild or HostBinding on that DOM Element. \r\n\r\nI can access it directly using document.querySelector(<.classname>) and then add another class to it. But it is Javascript, right?\r\nIs there any way to do it in Angular? How to do DOM Manipulation for a dynamically created DOM Element not having an id or #reference?\r\n \r\nI want to add a class \"hidden\" to image layer element of Openlayers. I am using the above method but how to do it in angular?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/46033","RelatedDescription":"Closed issue \"Get Element Reference of a DOM Element created dynamically from a library.\" (#46033)"},{"Id":"1239795796","IsPullRequest":false,"CreatedAt":"2022-05-18T11:08:23","Actor":"YoeriPostma","Number":"46035","RawContent":null,"Title":"Memory leak? Component stays in memory after touching an input field that has ngModel","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI have setup a simple basic Angular application with routing on my side to reproduce the issue.\r\nBasic summary, when touching an input(mouse, keyboard) with ngmodel on it, the component does not gets destroyed. If you don't touch the input the component gets destoyed when navigating to another component. I believe it has something to do with \"valueAccessor\" that keeps a reference to the component. ( i see this behaviour in Angular 11, 12 and 13).\r\nPlease see screenshots below:\r\n\r\nstep 1: opening up the application no navigation done and created a heap snapshot.\r\n![1_start_without_navigation](https://user-images.githubusercontent.com/52561363/169027207-b4bdf1b2-9f7e-4643-bce6-a13bbd8b8941.png)\r\n\r\n\r\nstep 2: for reference navigate through some components and back to the root, start garbage collector, no sign of any component in the second heap snapshot.\r\n![2_navigate_between_components_collect_garbage_afterwards](https://user-images.githubusercontent.com/52561363/169027225-b5510c60-4fed-4200-9722-959469514d5d.png)\r\n\r\n\r\nstep 3: again navigating through some components but now touching the input on \"navigateTo\" component, back to root, start garbage collector, now the component is still visible in the snapshot.\r\n![3_touching_input](https://user-images.githubusercontent.com/52561363/169027272-0322e279-53fb-42dc-885b-1cd058e11bfc.png)\r\n\r\n![4_back_to_root_collect_garbage_component_not_destroyed](https://user-images.githubusercontent.com/52561363/169027298-8a9b8157-e093-4db7-a54b-ce469abe68ff.png)\r\n\r\n\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.3.5\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: win32 x64\r\n\r\nAngular: 13.3.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router     \r\n\r\nPackage                         Version\r\n---------------------------------------------------------  \r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cli                    13.3.5\r\n@schematics/angular             13.3.5\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/46035","RelatedDescription":"Open issue \"Memory leak? Component stays in memory after touching an input field that has ngModel\" (#46035)"},{"Id":"1239754209","IsPullRequest":true,"CreatedAt":"2022-05-18T10:29:21","Actor":"josephperrott","Number":"46034","RawContent":null,"Title":"build: update to yarn v1.22.19","State":"open","Body":"Update to the latest version of yarn, 1.22.19.","Url":"https://github.com/angular/angular/pull/46034","RelatedDescription":"Open PR \"build: update to yarn v1.22.19\" (#46034)"},{"Id":"1239612453","IsPullRequest":true,"CreatedAt":"2022-05-18T08:29:31","Actor":"gkalpak","Number":"46031","RawContent":null,"Title":"refactor(docs-infra): use standalone components for Custom Elements","State":"open","Body":"WIP\r\n\r\nSits on top of #45997.","Url":"https://github.com/angular/angular/pull/46031","RelatedDescription":"Open PR \"refactor(docs-infra): use standalone components for Custom Elements\" (#46031)"},{"Id":"1239023271","IsPullRequest":false,"CreatedAt":"2022-05-18T00:05:22","Actor":"jmcooper","Number":"46024","RawContent":null,"Title":"Add FormControl constructor for FormControlOptions and Validators","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\nThe strongly typed forms in [v14.0.0-rc.0](https://github.com/angular/angular/releases/tag/14.0.0-rc.0) allow for a FormControlOptions object to be passed in to the FormControl constructor in order to enable initialValueIsDefault. There are three constructor overloads, but, unless I'm missing something, none of them allow for providing FormControlOptions AND Validators, which seems like a common need. I also don't see a way to add FormControlOptions after construction (although I could add validators after construction). \r\n\r\n### Proposed solution\r\n\r\nAdd a constructor for FormControl(value, Validators, FormControlOptions).\r\n\r\n### Alternatives considered\r\n\r\nI don't see a way to add FormControlOptions after construction. I could add validators after construction, but this seems much more verbose than being able to add them via the constructor.","Url":"https://github.com/angular/angular/issues/46024","RelatedDescription":"Closed issue \"Add FormControl constructor for FormControlOptions and Validators\" (#46024)"},{"Id":"1239249436","IsPullRequest":true,"CreatedAt":"2022-05-17T23:08:40","Actor":"jessicajaniuk","Number":"46030","RawContent":null,"Title":"refactor(platform-browser): Updates keyboard event library to support code field","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nRight now we only ever rely on the keyboardEvent `key` field, which is\r\nlimiting to users as far as matching keyboard events across OS and \r\ndifferent keyboard layouts. The alt / option key behavior with MacOS\r\nis a specific issue.\r\n\r\nIssue Number: 45992\r\n\r\n\r\n## What is the new behavior?\r\n\r\nOn MacOS, pressing the alt key and another key turns into symbols, and\r\ndoesn't match the intended behavior. For example, `keydown.alt.s`\r\nreports instead as `keydown.alt.ß`. We rely on the `key` field and not\r\nthe `code` field, which properly reports the code for S in this case.\r\n\r\nThis change adds support to allow users to specify they want to look at\r\nthe `code` field instead of the `key` field within their event string.\r\nExample: `keydown.code.alt.leftshift` would only match the LeftShift and\r\nnot the right shift based on code values. It would also allow the user\r\nto specify `keydown.code.alt.keys` to match S instead of ß when alt /\r\noption is pressed on MacOS and would also work on Windows.\r\n\r\nFixes #45992\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/46030","RelatedDescription":"Open PR \"refactor(platform-browser): Updates keyboard event library to support code field\" (#46030)"},{"Id":"1238995196","IsPullRequest":true,"CreatedAt":"2022-05-17T22:48:13","Actor":"dylhunn","Number":"46023","RawContent":null,"Title":"fix(forms): Make some fixes to typed forms API and docs.","State":"closed","Body":"* `FormRecord` JSDoc should now appear on a.io\r\n* The `{@see foo#bar}` syntax previously did not work, and has been replace with backticks\r\n* Value and RawValue have been removed from the public API (rolling back #45978); this needs more discussion (see #fw-forms)\r\n","Url":"https://github.com/angular/angular/pull/46023","RelatedDescription":"Closed or merged PR \"fix(forms): Make some fixes to typed forms API and docs.\" (#46023)"},{"Id":"1239134584","IsPullRequest":true,"CreatedAt":"2022-05-17T22:04:22","Actor":"ChrisHamilton91","Number":"46027","RawContent":null,"Title":"Reimplement DefaultIterableDiffer to fix multiple bugs in current implementation","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nNgForOf on an iterable with duplicate values produces strange behaviour (see issue #45647).\r\n\r\nThis is due to the current implementation of `DefaultIterableDiffer`, particularly the functions `check()`, and `forEachOperation()`. In the case of replacing an item in an array of duplicate values (such as an array of empty strings, an array of zeroes, or an array of the same object at multiple indices), `forEachOperation()` will not recognize that an item has been replaced. Instead it will insert an item there, then remove an item from the end of the array, rather than the replaced index. In the linked issue example, this causes two duplicate HTML input elements to appear.\r\n\r\n`check()` does not always produce a minimal set of changes when duplicate items are involved. For example, take an iterable that starts as [0,0,0,1,1] and changes to [1,0,0,1,1]. `check()` should see that a minimal set of changes is one addition and one removal.  The current implementation instead finds one addition, one removal, and four moves. This reveals another issue, that `check()` is finding moves when there are no moves necessary.\r\n\r\n`forEachOperation()` is capable of producing more operations than a minimal set of changes, even without duplicates. For example, switching the first and last elements of an array should trigger only two moves. The current implementation triggers n moves, where n is the length of the array. This reveals another issue, that `forEachOperation()` is performing moves when they are not necessary.\r\n\r\nIssue Number: #45647\r\n\r\n\r\n## What is the new behavior?\r\nWhen an item is replaced in an iterable of duplicates, `DefaultIterableDiffer` adds a new item, then removes the correct index. This causes the initial example in #45647 to replace the input element that is being typed into. That causes the element to lose focus, but that is expected behaviour since the `trackById` has changed.\r\n\r\n`check()` always produces a minimal set of changes. This is done in O(n) time.\r\n\r\n`forEachOperation()` produces no more operations than the minimal set of changes. It is possible to produce less operations if items coincidentally land in the correct index while transforming the iterable. This is done in O(n*m) time where n is the length of the iterable, and m is the distance of moves, ie. worst case is a move at every index and the moves travel the maximum distance. This is because each move requires calculating index offsets that have happened or will happen in between the previous and current index. \r\n\r\nThrough basic performance tests of randomly shuffling items around an array and measuring how long it takes NgForOf to finish updating the DOM, I've clocked the new implementation at about 20% faster on both firefox and chrome, regardless of if duplicate values exist or not. That's taking the average of 20 tests that ran at around 300 - 500 ms each. This was repeated 5 times with approximately the same result. By no means a professional measure, but a good indication.\r\n\r\nFixing the initial problem required a complete rewrite, so the other issues were fixed as a side effect.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n\r\n###Testing\r\nNew tests were added to validate that the issues mentioned no longer exist, and that it stays that way.\r\n\r\nAll relevant tests pass, but I get 12 failures in my environment even on the main branch, so it's clear it is not from these changes. If these 12 tests need to pass for the PR to be accepted I will provide the error info and try to debug. If it's a common issue for these tests to fail, any info would be appreciated.\r\n![testsPass](https://user-images.githubusercontent.com/60244464/168896759-1734d481-a415-4b06-86b0-4eec2e485376.jpg)\r\n\r\n\r\n### New algorithms summary\r\nTo produce a minimal set of changes:\r\nDo one pass through both old and new iterables simultaneously and find changed nodes, storing the new and old records. It then iterates through the changed nodes and looks for an old value that matches the node's new `trackById`. If a match is found, then that old record is considered to be moved to that node. If no old records are found, then that node is considered to have an added item. Afterwards, all leftover old records are considered to be removed.\r\n\r\nNote: this is a minimal set of changes, not an optimal set of changes. Moves are matched by simply popping nodes and records off queues in order of index, the distance of moves is not minimized. For example [1, 0, 0, 0, 1] -> [0, 0, 0, 1, 0] will move 1 from index 0, rather than the more optimal index 5. This is so changes can be found in O(n) time.\r\n\r\nTo produce a set of operations <= the minimal set of changes:\r\nWhile producing the set of changes, record the changes at each index: add, remove, moved to another index and / or moved from another index. Keep track of an index offset that represents how far items shift while transforming the iterable. Iterate through the old and new iterables simultaneously and check the set of operations at each index. If there is an add, add the current item and increase offset, if there is a remove, remove the previous item and decrease offset.\r\n\r\nMoves must be consumed such that records moved to / are moved from indices greater than the current index. This is so nothing to the left of the current index gets offset. Moving an item to a further index requires calculating what offsets will happen in the future between the current index and the final index. For example, if an item will be added in between, we reduce index by one. After the addition, the index will be correct. Moving an item from a further index to this one requires calculating the offsets that have already happened between current index and the item's previous index, plus the accumulated offset so far. The result is where the item actually is in the transforming iterable.\r\n\r\nSee some changed / added tests for concrete examples.\r\n\r\n### Performance Testing\r\nSimple random test to gauge the new performance. I would tweak the tests to be around 500 ms and take the average of 20 runs. Was consistently getting around 80% execution time of the current implementation, 20% faster.\r\nThe tests involved just clicking a button and waiting for completion before starting the next one.\r\nThe `MutationObserver` was just for visual confirmation that the div was actually finished updating before the test ended.\r\n\r\n```typescript\r\nimport {ChangeDetectorRef, Component, ElementRef, ViewChild} from '@angular/core';\r\n\r\nconst p = performance;\r\nconst arraySize = 5e3;\r\nconst numChanges = 5e3;\r\nconst numDigits = 2;\r\n\r\n@Component({\r\n  selector: 'app-perf-test',\r\n  templateUrl: './perf-test.component.html',\r\n  styleUrls: ['./perf-test.component.css']\r\n})\r\nexport class PerfTestComponent {\r\n  @ViewChild('arrayDiv') arrayDiv?: ElementRef<HTMLDivElement>;\r\n  array: number[] = new Array(arraySize).fill(0);\r\n  results: number[] = [];\r\n  testNumber = 0;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {};\r\n\r\n  divObserver = new MutationObserver(() => console.log('Div Updated!'));\r\n  ngAfterViewInit() {\r\n    this.divObserver.observe(\r\n        this.arrayDiv!.nativeElement, {subtree: true, childList: true});\r\n  }\r\n\r\n  test() {\r\n    for (let i = 0; i < numChanges; i++) {\r\n      const index = Math.floor(Math.random() * (arraySize - 1));\r\n      const value = Math.floor(Math.random() * Math.pow(10, numDigits));\r\n      this.array[index] = value;\r\n    }\r\n    const start = p.now();\r\n    this.cd.detectChanges();\r\n    setTimeout(() => {\r\n      const time = p.now() - start;\r\n      this.results.push(time);\r\n      console.log('Time', this.testNumber, ':', time, 'ms')\r\n    });\r\n    this.testNumber++;\r\n  }\r\n\r\n  average() {\r\n    console.log(\r\n        'Average:',\r\n        this.results.reduce((acc, next) => acc += next) / this.testNumber,\r\n        'ms');\r\n  }\r\n}\r\n```\r\n\r\n```html\r\n<button (click)=\"test()\">TEST</button>\r\n<button (click)=\"average()\">AVERAGE</button>\r\n\r\n<div #arrayDiv>\r\n  <div *ngFor=\"let value of array\">\r\n    <div>{{ value }}</div>\r\n  </div>\r\n</div>\r\n```","Url":"https://github.com/angular/angular/pull/46027","RelatedDescription":"Closed or merged PR \"Reimplement DefaultIterableDiffer to fix multiple bugs in current implementation\" (#46027)"},{"Id":"1239201876","IsPullRequest":true,"CreatedAt":"2022-05-17T22:02:35","Actor":"ChrisHamilton91","Number":"46028","RawContent":null,"Title":"fix(core): Reimplement DefaultIterableDiffer to fix multiple bugs","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nNgForOf on an iterable with duplicate values produces strange behaviour (see issue #45647).\r\n\r\nThis is due to the current implementation of `DefaultIterableDiffer`, particularly the functions `check()`, and `forEachOperation()`. In the case of replacing an item in an array of duplicate values (such as an array of empty strings, an array of zeroes, or an array of the same object at multiple indices), `forEachOperation()` will not recognize that an item has been replaced. Instead it will insert an item there, then remove an item from the end of the array, rather than the replaced index. In the linked issue example, this causes two duplicate HTML input elements to appear. This also causes an issue with NgClass: #17852.\r\n\r\n`check()` does not always produce a minimal set of changes when duplicate items are involved. For example, take an iterable that starts as [0,0,0,1,1] and changes to [1,0,0,1,1]. `check()` should see that a minimal set of changes is one addition and one removal.  The current implementation instead finds one addition, one removal, and four moves. This reveals another issue, that `check()` is finding moves when there are no moves necessary.\r\n\r\n`forEachOperation()` is capable of producing more operations than a minimal set of changes, even without duplicates. For example, switching the first and last elements of an array should trigger only two moves. The current implementation triggers n moves, where n is the length of the array. This reveals another issue, that `forEachOperation()` is performing moves when they are not necessary.\r\n\r\nIssue Number: #45647\r\n\r\n\r\n## What is the new behavior?\r\nWhen an item is replaced in an iterable of duplicates, `DefaultIterableDiffer` adds a new item, then removes the correct index. This causes the initial example in #45647 to replace the input element that is being typed into. That causes the element to lose focus, but that is expected behaviour since the `trackById` has changed.\r\n\r\n`check()` always produces a minimal set of changes. This is done in O(n) time.\r\n\r\n`forEachOperation()` produces no more operations than the minimal set of changes. It is possible to produce less operations if items coincidentally land in the correct index while transforming the iterable. This is done in O(n*m) time where n is the length of the iterable, and m is the distance of moves, ie. worst case is a move at every index and the moves travel the maximum distance. This is because each move requires calculating index offsets that have happened or will happen in between the previous and current index. \r\n\r\nThrough basic performance tests of randomly shuffling items around an array and measuring how long it takes NgForOf to finish updating the DOM, I've clocked the new implementation at about 20% faster on both firefox and chrome, regardless of if duplicate values exist or not. That's taking the average of 20 tests that ran at around 300 - 500 ms each. This was repeated 5 times with approximately the same result. By no means a professional measure, but a good indication.\r\n\r\nFixing the initial problem required a complete rewrite, so the other issues were fixed as a side effect.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n\r\n###Testing\r\nNew tests were added to validate that the issues mentioned no longer exist, and that it stays that way.\r\n\r\nAll relevant tests pass, but I get 12 failures in my environment even on the main branch, so it's clear it is not from these changes. If these 12 tests need to pass for the PR to be accepted I will provide the error info and try to debug. If it's a common issue for these tests to fail, any info would be appreciated.\r\n![testsPass](https://user-images.githubusercontent.com/60244464/168896759-1734d481-a415-4b06-86b0-4eec2e485376.jpg)\r\n\r\n\r\n### New algorithms summary\r\nTo produce a minimal set of changes:\r\nDo one pass through both old and new iterables simultaneously and find changed nodes, storing the new and old records. It then iterates through the changed nodes and looks for an old value that matches the node's new `trackById`. If a match is found, then that old record is considered to be moved to that node. If no old records are found, then that node is considered to have an added item. Afterwards, all leftover old records are considered to be removed.\r\n\r\nNote: this is a minimal set of changes, not an optimal set of changes. Moves are matched by simply popping nodes and records off queues in order of index, the distance of moves is not minimized. For example [1, 0, 0, 0, 1] -> [0, 0, 0, 1, 0] will move 1 from index 0, rather than the more optimal index 5. This is so changes can be found in O(n) time.\r\n\r\nTo produce a set of operations <= the minimal set of changes:\r\nWhile producing the set of changes, record the changes at each index: add, remove, moved to another index and / or moved from another index. Keep track of an index offset that represents how far items shift while transforming the iterable. Iterate through the old and new iterables simultaneously and check the set of operations at each index. If there is an add, add the current item and increase offset, if there is a remove, remove the previous item and decrease offset.\r\n\r\nMoves must be consumed such that records moved to / are moved from indices greater than the current index. This is so nothing to the left of the current index gets offset. Moving an item to a further index requires calculating what offsets will happen in the future between the current index and the final index. For example, if an item will be added in between, we reduce index by one. After the addition, the index will be correct. Moving an item from a further index to this one requires calculating the offsets that have already happened between current index and the item's previous index, plus the accumulated offset so far. The result is where the item actually is in the transforming iterable.\r\n\r\nSee some changed / added tests for concrete examples.\r\n\r\n### Performance Testing\r\nSimple random test to gauge the new performance. I would tweak the tests to be around 500 ms and take the average of 20 runs. Was consistently getting around 80% execution time of the current implementation, 20% faster.\r\nThe tests involved just clicking a button and waiting for completion before starting the next one.\r\nThe `MutationObserver` was just for visual confirmation that the div was actually finished updating before the test ended.\r\n\r\n```typescript\r\nimport {ChangeDetectorRef, Component, ElementRef, ViewChild} from '@angular/core';\r\n\r\nconst p = performance;\r\nconst arraySize = 5e3;\r\nconst numChanges = 5e3;\r\nconst numDigits = 2;\r\n\r\n@Component({\r\n  selector: 'app-perf-test',\r\n  templateUrl: './perf-test.component.html',\r\n  styleUrls: ['./perf-test.component.css']\r\n})\r\nexport class PerfTestComponent {\r\n  @ViewChild('arrayDiv') arrayDiv?: ElementRef<HTMLDivElement>;\r\n  array: number[] = new Array(arraySize).fill(0);\r\n  results: number[] = [];\r\n  testNumber = 0;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {};\r\n\r\n  divObserver = new MutationObserver(() => console.log('Div Updated!'));\r\n  ngAfterViewInit() {\r\n    this.divObserver.observe(\r\n        this.arrayDiv!.nativeElement, {subtree: true, childList: true});\r\n  }\r\n\r\n  test() {\r\n    for (let i = 0; i < numChanges; i++) {\r\n      const index = Math.floor(Math.random() * (arraySize - 1));\r\n      const value = Math.floor(Math.random() * Math.pow(10, numDigits));\r\n      this.array[index] = value;\r\n    }\r\n    const start = p.now();\r\n    this.cd.detectChanges();\r\n    setTimeout(() => {\r\n      const time = p.now() - start;\r\n      this.results.push(time);\r\n      console.log('Time', this.testNumber, ':', time, 'ms')\r\n    });\r\n    this.testNumber++;\r\n  }\r\n\r\n  average() {\r\n    console.log(\r\n        'Average:',\r\n        this.results.reduce((acc, next) => acc += next) / this.testNumber,\r\n        'ms');\r\n  }\r\n}\r\n```\r\n\r\n```html\r\n<button (click)=\"test()\">TEST</button>\r\n<button (click)=\"average()\">AVERAGE</button>\r\n\r\n<div #arrayDiv>\r\n  <div *ngFor=\"let value of array\">\r\n    <div>{{ value }}</div>\r\n  </div>\r\n</div>\r\n```","Url":"https://github.com/angular/angular/pull/46028","RelatedDescription":"Open PR \"fix(core): Reimplement DefaultIterableDiffer to fix multiple bugs\" (#46028)"},{"Id":"1239133458","IsPullRequest":true,"CreatedAt":"2022-05-17T20:38:00","Actor":"atscott","Number":"46026","RawContent":null,"Title":"fix(router): Ensure APP_INITIALIZER of enabledBlocking option completes","State":"open","Body":"Previously, if `initialNavigation` were set to `enabledBlocking`, the\r\nRouter's `APP_INITIALIZER` would never resolve if that initial\r\nnavigation failed. This results in the application load hanging and\r\nnever completing.\r\n\r\nfixes https://github.com/angular/angular/issues/44355","Url":"https://github.com/angular/angular/pull/46026","RelatedDescription":"Open PR \"fix(router): Ensure APP_INITIALIZER of enabledBlocking option completes\" (#46026)"},{"Id":"1239037593","IsPullRequest":false,"CreatedAt":"2022-05-17T20:36:30","Actor":"paulheising","Number":"46025","RawContent":null,"Title":"Angular Universal: HTTP requests in lazy-loaded modules only run if there are HTTP requests in AppModule","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nScenario as follows:\r\n\r\n- Angular app with lazy-loaded module\r\n- Angular Universal set up\r\n- Lazy-loaded module loads data via `HttpClient` and attempts to show this data in its HTML template\r\n- `AppModule` (the bootstrapped root module) doesn't\r\n\r\nWhen I inspect the HTML delivered by the server (for the lazy-loaded route), I realize:\r\n\r\n- It contains the basic HTML from the lazy loaded module, but the async data, loaded via HTTP is missing in the template\r\n- When I add some logging to the lazy component, I can see it executes the ngOnInit, where the HTTP call is invoked, and it also executes ngOnDestroy server side, *before* it gets a response from the external API\r\n- The full app's HTML is delivered to the client before the external HTTP call is resolved\r\n- However, if we also add an HTTP call to the AppComponent, it would also await the HTTP call in the lazy component and show the data in the HTML\r\n\r\n## Expected behaviour\r\n\r\n- It should always contain the HTML generated from the HTTP call in a lazily loaded module, even if there is not HTTP call in the app modules\r\n\r\n## Example output from the sample app I provided\r\n\r\nThe order of outputs is not quite what I expect:\r\n\r\n```\r\nGET /bar\r\n\r\nBarComponent init, triggering HTTP call now\r\n\r\nBarComponent destroyed\r\n\r\nres.render callback - response will be sent to client now!\r\n\r\nBarComponent received the result from the HTTP call\r\n```\r\n\r\nBut if I add an HTTP request to the `AppComponent`, like described above:\r\n\r\n```\r\nGET /bar\r\n\r\nBarComponent init, triggering HTTP call now\r\n\r\nBarComponent received the result from the HTTP call\r\n\r\nBarComponent destroyed\r\n\r\nres.render callback - response will be sent to client now!\r\n```\r\n\r\nThis is basically what I always expect, no matter if AppComponent makes API calls or not.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/paulheising/ng-universal-lazy-loading-bug\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.3.5\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: linux x64\r\n\r\nAngular: 13.3.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cli                    13.3.5\r\n@nguniversal/builders           13.1.1\r\n@nguniversal/express-engine     13.1.1\r\n@schematics/angular             13.3.5\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/46025","RelatedDescription":"Closed issue \"Angular Universal: HTTP requests in lazy-loaded modules only run if there are HTTP requests in AppModule\" (#46025)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1240913277","IsPullRequest":true,"CreatedAt":"2022-05-19T01:21:34","Actor":"jbedard","Number":"23179","RawContent":null,"Title":"build: do not depend on test build order","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/23179","RelatedDescription":"Open PR \"build: do not depend on test build order\" (#23179)"},{"Id":"1240517624","IsPullRequest":true,"CreatedAt":"2022-05-18T21:57:33","Actor":"dgp1130","Number":"23178","RawContent":null,"Title":"docs: release notes for the v14.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/23178","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.0.0-rc.1 release\" (#23178)"},{"Id":"1240440243","IsPullRequest":true,"CreatedAt":"2022-05-18T20:55:06","Actor":"dgp1130","Number":"23177","RawContent":null,"Title":"Bump version to \"v14.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23177","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-rc.1\" with changelog.\" (#23177)"},{"Id":"1240439539","IsPullRequest":true,"CreatedAt":"2022-05-18T19:45:47","Actor":"clydin","Number":"23176","RawContent":null,"Title":"test: update E2E tests to support using npm 7+","State":"open","Body":"Several tests that perform package actions during the test have been updated to\r\nfunction correctly when used with npm. npm 7+ performs additional resolution\r\non peer dependencies which can result in failures during testing.\r\nThe following tests have been updated:\r\n* `build/material` - This test contained an actual error in that it was installing the `latest`\r\nversion of `@angular/material-moment-adapter` when testing prereleases even though\r\nit should have been installing the `next` tag instead.\r\n* `build/styles/tailwind-v[23]` - This test had to be reordered due to npm 7+ keeping the\r\ninstalled `tailwindcss` peer dependency in a non-hoisted location even after the project\r\nlevel package was uninstalled. The ordering also uncovered a Webpack cache key creation defect\r\nwherein the cache key does not account for the presence of `tailwindcss`. Until this\r\nis corrected, the test temporarily disables caching.\r\n* `commands/add/version-specifier` - This test intentionally attempts to install package\r\nversions that do not meet peer dependency requirements to ensure that the `ng add` command\r\ncorrectly notifies the user. To allow for this to occur, the npm `force` option is used\r\nto prevent the package install aspects of the command from failing.","Url":"https://github.com/angular/angular-cli/pull/23176","RelatedDescription":"Open PR \"test: update E2E tests to support using npm 7+\" (#23176)"},{"Id":"1240385942","IsPullRequest":true,"CreatedAt":"2022-05-18T19:44:18","Actor":"dgp1130","Number":"23175","RawContent":null,"Title":"docs: release notes for the v13.3.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/23175","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.3.6 release\" (#23175)"},{"Id":"1240352076","IsPullRequest":true,"CreatedAt":"2022-05-18T19:04:11","Actor":"dgp1130","Number":"23174","RawContent":null,"Title":"Bump version to \"v13.3.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23174","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.3.6\" with changelog.\" (#23174)"},{"Id":"1240269656","IsPullRequest":false,"CreatedAt":"2022-05-18T18:03:22","Actor":"anshulsinha1101","Number":"23173","RawContent":null,"Title":"Build fails after upgrading to Angular 12","State":"closed","Body":"I have recently upgraded my Angular 7 application to Angular 12 12.2.17, here the build fails whenever try to build my application with below error \r\nError: Optimization error [src_app_modules_test_module_ts.a61aac0d1ddf3c99877b.js]: Error: The service was stopped\r\n\r\nError: Optimization error [default-src_app_modules_project_module_ts.b99413cbfdc9abde0360.js]: Error: The service is no longer running\r\n\r\nI am using below command to build my application\r\n\r\n\"build:prod\": \"node --max_old_space_size=5500 ./node_modules/@angular/cli/bin/ng build --configuration production\",","Url":"https://github.com/angular/angular-cli/issues/23173","RelatedDescription":"Closed issue \"Build fails after upgrading to Angular 12\" (#23173)"},{"Id":"1239291337","IsPullRequest":true,"CreatedAt":"2022-05-18T16:58:11","Actor":"eltonc-dev","Number":"23159","RawContent":null,"Title":"fix(@schematics/angular): alphabetically order imports during component generation","State":"closed","Body":"change the order of imports during component generation using `changeDetectionStrategy` set to `OnPush`\r\n\r\ncloses angular#23156","Url":"https://github.com/angular/angular-cli/pull/23159","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): alphabetically order imports during component generation\" (#23159)"},{"Id":"1239014925","IsPullRequest":false,"CreatedAt":"2022-05-18T16:58:10","Actor":"eltonc-dev","Number":"23156","RawContent":null,"Title":"imports are not being alphabetically ordered during components generation using ChangeDetectionStrategy set to onPush","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> No\r\n\r\n### Description\r\n\r\n<!-- ✍️--> Using `ng g component --changeDetection=OnPush` the imports are not being alphabetically imported \r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n* run `ng g component --changeDetection=OnPush`\r\n* The generated component (ts file) is generated like this:\r\n![Captura de Tela 2022-05-17 às 15 21 47](https://user-images.githubusercontent.com/10489418/168884226-d36bde79-6166-401a-835a-72cd1141d28d.png)\r\n* But it should be like this, to be alphabetically ordered:\r\n![Captura de Tela 2022-05-17 às 15 22 15](https://user-images.githubusercontent.com/10489418/168884377-c8ab46ee-9b64-490e-97c0-3bf78fe29f3f.png)\r\n\r\n\r\n\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n![Captura de Tela 2022-05-17 às 15 29 53](https://user-images.githubusercontent.com/10489418/168884953-312cbbd6-805b-4ba7-8de2-eca884afc357.png)\r\n\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/23156","RelatedDescription":"Closed issue \"imports are not being alphabetically ordered during components generation using ChangeDetectionStrategy set to onPush\" (#23156)"},{"Id":"1239831684","IsPullRequest":true,"CreatedAt":"2022-05-18T16:46:06","Actor":"alan-agius4","Number":"23166","RawContent":null,"Title":"fix(@angular/cli): `ng doc` doesn't open browser in Windows","State":"closed","Body":"In Windows, `process.exit` was being called prior of opening the browser which caused the browser never to open.\r\n\r\nCloses #23105","Url":"https://github.com/angular/angular-cli/pull/23166","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): `ng doc` doesn't open browser in Windows\" (#23166)"},{"Id":"1240124893","IsPullRequest":true,"CreatedAt":"2022-05-18T16:42:50","Actor":"clydin","Number":"23170","RawContent":null,"Title":"fix(@angular/cli): ensure all available package migrations are executed","State":"closed","Body":"For v14, the update command migration execution logic was incorrectly exiting after\r\nthe success of the first package's migrations. This prevented any other updated\r\npackages from executing migrations automatically. The success check is now a failure\r\ncheck and will allow the migration execution process to continue to execute migrations\r\nuntil complete or a failure occurs.","Url":"https://github.com/angular/angular-cli/pull/23170","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): ensure all available package migrations are executed\" (#23170)"},{"Id":"1240134903","IsPullRequest":false,"CreatedAt":"2022-05-18T16:40:23","Actor":"man88100ni","Number":"23171","RawContent":null,"Title":"Getting This Error: You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file","State":"closed","Body":"ERROR in ./node_modules/pdfjs-dist/build/pdf.js 2418:53\r\nModule parse failed: Unexpected token (2418:53)\r\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\r\n                intent: renderingIntent,\r\n                renderInteractiveForms: renderInteractiveForms === true,\r\n                 annotationStorage: annotationStorage?.getAll() || null\r\n              });\r\n            }\r\nERROR in ./node_modules/pdfjs-dist/web/pdf_viewer.js 895:20\r\nModule parse failed: Unexpected token (895:20)\r\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\r\n     this._on(eventName, listener, {\r\n       external: true,\r\n       once: options?.once\r\n     });\r\n   }\r\n\r\n\r\nnode version => v12.16.1\r\n\r\n\r\nAngular CLI: 9.1.15\r\nNode: 12.16.1\r\nOS: win32 x64\r\n\r\nAngular: 9.1.13\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.15\r\n@angular-devkit/build-angular     0.901.15\r\n@angular-devkit/build-optimizer   0.901.15\r\n@angular-devkit/build-webpack     0.901.15\r\n@angular-devkit/core              9.1.15\r\n@angular-devkit/schematics        9.1.15\r\n@angular/cli                      9.1.15\r\n@ngtools/webpack                  9.1.15\r\n@schematics/angular               9.1.15\r\n@schematics/update                0.901.15\r\nrxjs                              6.5.5\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0","Url":"https://github.com/angular/angular-cli/issues/23171","RelatedDescription":"Closed issue \"Getting This Error: You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file\" (#23171)"},{"Id":"1239787763","IsPullRequest":true,"CreatedAt":"2022-05-18T16:03:10","Actor":"gkalpak","Number":"23164","RawContent":null,"Title":"fix(@angular/cli): correctly handle `--search` option in `ng doc`","State":"closed","Body":"When the `--search` option is passed to `ng doc`, it should open a URL that does a search across the whole website (instead of the default behavior of limiting the search to API docs).\r\nFix the `ng doc` command to implement the iteded behavior (previously, it did the opposite).\r\n","Url":"https://github.com/angular/angular-cli/pull/23164","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): correctly handle `--search` option in `ng doc`\" (#23164)"},{"Id":"1240146007","IsPullRequest":true,"CreatedAt":"2022-05-18T15:34:29","Actor":"josephperrott","Number":"23172","RawContent":null,"Title":"build: add caretaker configuration to ng-dev config","State":"open","Body":"Add the caretaker configuration to set up being able to run both the carataker\r\ncheck and the handoff commands.\r\n\r\nThe caretaker handoff command will operate using the angular-cli-caretaker group\r\nwhich has already been seeded with the current information.\r\n\r\n\r\nCaretakers can update the current caretakers in the angular-cli-caretaker group, granting them the necessary access for caretaking using the `ng-dev caretaker handoff` command.  Additionally, the caretaker can check the status of the repository and merge queues using `ng-dev caretaker check`.","Url":"https://github.com/angular/angular-cli/pull/23172","RelatedDescription":"Open PR \"build: add caretaker configuration to ng-dev config\" (#23172)"},{"Id":"1240003080","IsPullRequest":true,"CreatedAt":"2022-05-18T14:38:16","Actor":"clydin","Number":"23168","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update `babel-loader` to 8.2.5","State":"closed","Body":"The newer version of `babel-loader` contains a fix for its hash function usage\r\nthat will cause it to not use MD4 on Node.js versions that no longer support that\r\nhashing algorithm.\r\n\r\nFixes #23134","Url":"https://github.com/angular/angular-cli/pull/23168","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update `babel-loader` to 8.2.5\" (#23168)"},{"Id":"1240033062","IsPullRequest":false,"CreatedAt":"2022-05-18T14:12:45","Actor":"vector67","Number":"23169","RawContent":null,"Title":"Add support for \"<%_\", \"_%>\" and \"-%>\" delimiters in templating in @angular-devkit/core","State":"open","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] generate\r\n\r\n### Description\r\n\r\nThe templating for the @angular/devkit library uses EJS, sort of but doesn't support whitespace slurping the way that the documentation of EJS has declared it. Having this would enable schematic templates to be much more flexible with their whitespace and therefor easier to read while still creating nicely formatted files.\r\n\r\n### Describe the solution you'd like\r\n\r\nThe three delimiters: `\"<%_\"`, `\"_%>\"` and `\"-%>\"` should just be added and work the same way that they do in EJS.\r\n\r\nI already have an idea of the code that I'd like to add, and a pull request almost ready. It's very simple and only affects one file.\r\n\r\n### Examples\r\n\r\nWithin [@schematics/angular](https://npmjs.com/package/@schematics/angular) this would allow an example like the following\r\n```\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n<%_ if (routing) { %>\r\nimport { AppRoutingModule } from './app-routing.module';\r\n<%_ } -%>\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    <%_ if (routing) { -%>\r\n    AppRoutingModule,\r\n    <%_ } -%>\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\nWhich would generate with the correct whitespace.","Url":"https://github.com/angular/angular-cli/issues/23169","RelatedDescription":"Open issue \"Add support for \"<%_\", \"_%>\" and \"-%>\" delimiters in templating in @angular-devkit/core\" (#23169)"},{"Id":"1239458272","IsPullRequest":true,"CreatedAt":"2022-05-18T13:33:56","Actor":"renovate[bot]","Number":"23160","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.11","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.10` -> `v2.1.11` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.11`](https://togithub.com/github/codeql-action/compare/v2.1.10...v2.1.11)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.10...v2.1.11)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23160","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.11\" (#23160)"},{"Id":"1239839613","IsPullRequest":true,"CreatedAt":"2022-05-18T13:32:13","Actor":"alan-agius4","Number":"23167","RawContent":null,"Title":"[patch] fix(@angular/cli): resolve relative schematic from `angular.json` instead of current working directory","State":"closed","Body":"\r\n\r\nRelative schematics referenced in `angular.json` `schematicCollections` and `defaultCollection` were always resolved from the current working directory, which is not correct and caused the collection not to be resolved when the this is different from the location of the workspace config.\r\n\r\nCloses #23136\r\n\r\nPatch version of https://github.com/angular/angular-cli/pull/23138","Url":"https://github.com/angular/angular-cli/pull/23167","RelatedDescription":"Closed or merged PR \"[patch] fix(@angular/cli): resolve relative schematic from `angular.json` instead of current working directory\" (#23167)"},{"Id":"1239831462","IsPullRequest":true,"CreatedAt":"2022-05-18T11:42:18","Actor":"alan-agius4","Number":"23165","RawContent":null,"Title":"fix(@angular/cli): open AIO search only when using `--search` flag","State":"closed","Body":"Previously, the ternary was wrong which causes the search to be opened even when the `--search` is not specified.","Url":"https://github.com/angular/angular-cli/pull/23165","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): open AIO search only when using `--search` flag\" (#23165)"},{"Id":"1239690545","IsPullRequest":false,"CreatedAt":"2022-05-18T09:51:04","Actor":"grosch","Number":"23163","RawContent":null,"Title":"Migration to 14.0.0-rc.0 via 'ng update' fails","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nTrying to upgrade from 13.0.3 to 14.0.0-rc.0 failed when running `ng update @angular/core@next @angular/cli@next`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n% ng update @angular/core@next @angular/cli@next\r\nUsing package manager: 'yarn'\r\nCollecting installed dependencies...\r\nFound 42 dependencies.\r\nFetching dependency metadata from registry...\r\n    Updating package.json with dependency @angular-devkit/build-angular @ \"14.0.0-rc.0\" (was \"13.0.4\")...\r\n    Updating package.json with dependency @angular/cli @ \"14.0.0-rc.0\" (was \"13.0.4\")...\r\n    Updating package.json with dependency @angular/compiler-cli @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency typescript @ \"4.6.4\" (was \"4.4.4\")...\r\n    Updating package.json with dependency @angular/animations @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/common @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/compiler @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/core @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/forms @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/platform-browser @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/platform-browser-dynamic @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n    Updating package.json with dependency @angular/router @ \"14.0.0-rc.0\" (was \"13.0.3\")...\r\n  UPDATE package.json (2037 bytes)\r\n✔ Packages successfully installed.\r\n** Executing migrations of package '@angular/cli' **\r\n\r\n❯ Remove 'defaultProject' option from workspace configuration.\r\n  The project to use will be determined from the current working directory.\r\n✖ Migration failed: this.tree.readText is not a function\r\n  See \"/private/var/folders/_v/s032dm1d5lxf9b7jk32m998c0000gn/T/ng-fIWUYL/angular-errors.log\" for further details.\r\n\r\n% cat /private/var/folders/_v/s032dm1d5lxf9b7jk32m998c0000gn/T/ng-fIWUYL/angular-errors.log\r\n[error] TypeError: this.tree.readText is not a function\r\n    at TreeWorkspaceHost.readFile (/Users/scott/DTS/web/node_modules/@schematics/angular/utility/workspace.js:29:26)\r\n    at readJsonWorkspace (/Users/scott/DTS/web/node_modules/@angular-devkit/core/src/workspace/json/reader.js:16:28)\r\n    at Object.readWorkspace (/Users/scott/DTS/web/node_modules/@angular-devkit/core/src/workspace/core.js:90:62)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async /Users/scott/DTS/web/node_modules/@schematics/angular/utility/workspace.js:60:31\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.0.0-rc.0\r\nNode: 18.0.0 (Unsupported)\r\nPackage Manager: yarn 1.22.18 \r\nOS: darwin arm64\r\n\r\nAngular: 14.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1400.0-rc.0\r\n@angular-devkit/build-angular   14.0.0-rc.0\r\n@angular-devkit/core            14.0.0-rc.0\r\n@angular-devkit/schematics      14.0.0-rc.0\r\n@angular/cdk                    13.0.3\r\n@schematics/angular             14.0.0-rc.0\r\nrxjs                            7.4.0\r\ntypescript                      4.6.4\r\n    \r\nWarning: The current version of Node (18.0.0) is not supported by Angular.\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/23163","RelatedDescription":"Closed issue \"Migration to 14.0.0-rc.0 via 'ng update' fails\" (#23163)"},{"Id":"1239555555","IsPullRequest":false,"CreatedAt":"2022-05-18T08:48:04","Actor":"vishalshrm539","Number":"23162","RawContent":null,"Title":"Getting Module parse failed: Unexpected character '#'","State":"closed","Body":"Hi,\r\n\r\nI am getting this error when I try to use private fields in an Angular Project.\r\n\r\nError: ./src/app/_helpers/sample.js 6:11\r\nModule parse failed: Unexpected character '#' (6:11)\r\nFile was processed with these loaders:\r\n * ./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js\r\n * ./node_modules/@ngtools/webpack/src/ivy/index.js\r\n * ./node_modules/source-map-loader/dist/cjs.js\r\nYou may need an additional loader to handle the result of these loaders.\r\n\r\nsample.js:\r\nclass Sample {\r\n\r\n  constructor() {\r\n      this.#reloadConfig();   // 6th line\r\n  }\r\n\r\n  #reloadConfig() {\r\n}\r\n...\r\n","Url":"https://github.com/angular/angular-cli/issues/23162","RelatedDescription":"Closed issue \"Getting Module parse failed: Unexpected character '#'\" (#23162)"},{"Id":"1239093391","IsPullRequest":false,"CreatedAt":"2022-05-18T06:37:31","Actor":"arekgotfryd","Number":"23157","RawContent":null,"Title":"An unhandled exception occurred: Cannot find module './getBigInt'","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 11 and 12\r\n\r\n### Description\r\n\r\n<!-- ✍️--> When I run ng serve for an app newly created with angular cli I get an error. \r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n1. ng new geofaker-app\r\n2. cd geofaker-app\r\n3. ng serve\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nGenerating browser application bundles (phase: setup)...An unhandled exception occurred: Cannot find module './getBigInt'\r\nRequire stack:\r\n- /Users/arek/Development/geofaker-app/node_modules/memfs/lib/Stats.js\r\n- /Users/arek/Development/geofaker-app/node_modules/memfs/lib/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/webpack-dev-middleware/dist/utils/setupOutputFileSystem.js\r\n- /Users/arek/Development/geofaker-app/node_modules/webpack-dev-middleware/dist/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/webpack-dev-server/lib/Server.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/build-webpack/src/webpack-dev-server/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/build-webpack/src/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/build-angular/src/builders/dev-server/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/architect/node/node-modules-architect-host.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/architect/node/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular/cli/models/architect-command.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular/cli/commands/serve-impl.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/schematics/tools/export-ref.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular-devkit/schematics/tools/index.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular/cli/utilities/json-schema.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular/cli/models/command-runner.js\r\n- /Users/arek/Development/geofaker-app/node_modules/@angular/cli/lib/cli/index.js\r\n- /usr/local/lib/node_modules/@angular/cli/lib/init.js\r\nSee \"/private/var/folders/gx/n8r6j2c94yqddxsfsjxfwz2h0000gp/T/ng-YnggzR/angular-errors.log\" for further details.\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.3.5\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: darwin x64\r\n\r\nAngular: 13.3.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cli                    13.3.5\r\n@schematics/angular             13.3.5\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/23157","RelatedDescription":"Closed issue \"An unhandled exception occurred: Cannot find module './getBigInt'\" (#23157)"},{"Id":"1239458493","IsPullRequest":true,"CreatedAt":"2022-05-18T05:45:07","Actor":"renovate[bot]","Number":"23161","RawContent":null,"Title":"build: update dependency copy-webpack-plugin to v11","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [copy-webpack-plugin](https://togithub.com/webpack-contrib/copy-webpack-plugin) | [`10.2.4` -> `11.0.0`](https://renovatebot.com/diffs/npm/copy-webpack-plugin/10.2.4/11.0.0) | [![age](https://badges.renovateapi.com/packages/npm/copy-webpack-plugin/11.0.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/copy-webpack-plugin/11.0.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/copy-webpack-plugin/11.0.0/compatibility-slim/10.2.4)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/copy-webpack-plugin/11.0.0/confidence-slim/10.2.4)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/copy-webpack-plugin</summary>\n\n### [`v11.0.0`](https://togithub.com/webpack-contrib/copy-webpack-plugin/blob/HEAD/CHANGELOG.md#&#8203;1100-httpsgithubcomwebpack-contribcopy-webpack-plugincomparev1024v1100-2022-05-17)\n\n[Compare Source](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v10.2.4...v11.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   minimum supported `Node.js` version is `14.15.0`\n\n##### build\n\n-   drop node v12 ([#&#8203;691](https://togithub.com/webpack-contrib/copy-webpack-plugin/issues/691)) ([675c676](https://togithub.com/webpack-contrib/copy-webpack-plugin/commit/675c676d96ed24975f75e5344d47c351a9d5e53a))\n\n##### [10.2.4](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v10.2.3...v10.2.4) (2022-01-31)\n\n##### Bug Fixes\n\n-   types ([#&#8203;666](https://togithub.com/webpack-contrib/copy-webpack-plugin/issues/666)) ([a1c2308](https://togithub.com/webpack-contrib/copy-webpack-plugin/commit/a1c2308511a4cccb92a22cb395b6eb66dc1c776b))\n\n##### [10.2.3](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v10.2.2...v10.2.3) (2022-01-29)\n\n##### Bug Fixes\n\n-   async `to` support ([fd095fb](https://togithub.com/webpack-contrib/copy-webpack-plugin/commit/fd095fb79399df5edbd06d9dbd1ed30fe4f7eb24))\n\n##### [10.2.2](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v10.2.1...v10.2.2) (2022-01-28)\n\n##### Bug Fixes\n\n-   types ([#&#8203;664](https://togithub.com/webpack-contrib/copy-webpack-plugin/issues/664)) ([f58470e](https://togithub.com/webpack-contrib/copy-webpack-plugin/commit/f58470ee1275330046b0867f70bcd3f2378a2a25))\n\n##### [10.2.1](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v10.2.0...v10.2.1) (2022-01-20)\n\n##### Bug Fixes\n\n-   types ([#&#8203;661](https://togithub.com/webpack-contrib/copy-webpack-plugin/issues/661)) ([324aecb](https://togithub.com/webpack-contrib/copy-webpack-plugin/commit/324aecb42ebd5594dcd1a607522cbbf1c512baff))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23161","RelatedDescription":"Open PR \"build: update dependency copy-webpack-plugin to v11\" (#23161)"},{"Id":"1239278375","IsPullRequest":true,"CreatedAt":"2022-05-18T00:24:32","Actor":"eltonc-dev","Number":"23158","RawContent":null,"Title":"fix(@angular/cli): alphabetically order imports during component generation","State":"closed","Body":"change the order of imports during component generation using `changeDetectionStrategy` set to `OnPush`\r\n\r\ncloses [angular#23156](https://github.com/angular/angular-cli/issues/23156#issue-1239014925)","Url":"https://github.com/angular/angular-cli/pull/23158","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): alphabetically order imports during component generation\" (#23158)"},{"Id":"1238788136","IsPullRequest":false,"CreatedAt":"2022-05-17T17:42:01","Actor":"johnmanko","Number":"23155","RawContent":null,"Title":"[webpack-dev-server] [HPM] WebSocket error: Error [ERR_STREAM_WRITE_AFTER_END]: write after end","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nYes, the previous version in which this bug was not present was: 12.*\r\n\r\n### Description\r\n\r\nCannot run application in Chrome without getting webpack dev server errors.  Makes it difficult to develop when needing to inspect.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nUpgrade from 12.* to 13.*.\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<e> [webpack-dev-server] [HPM] WebSocket error: Error [ERR_STREAM_WRITE_AFTER_END]: write after end\r\n<e>     at new NodeError (node:internal/errors:371:5)\r\n<e>     at _write (node:internal/streams/writable:320:11)\r\n<e>     at Socket.Writable.write (node:internal/streams/writable:335:10)\r\n<e>     at Sender.sendFrame (/path/to/project/node_modules/ws/lib/sender.js:413:20)\r\n<e>     at Sender.doClose (/path/to/project/node_modules/ws/lib/sender.js:153:10)\r\n<e>     at Sender.close (/path/to/project/node_modules/ws/lib/sender.js:140:12)\r\n<e>     at WebSocket.close (/path/to/project/node_modules/ws/lib/websocket.js:289:18)\r\n<e>     at Receiver.receiverOnConclude (/path/to/project/node_modules/ws/lib/websocket.js:969:18)\r\n<e>     at Receiver.emit (node:events:390:28)\r\n<e>     at Receiver.controlMessage (/path/to/project/node_modules/ws/lib/receiver.js:576:14) {\r\n<e>   code: 'ERR_STREAM_WRITE_AFTER_END'\r\n<e> }\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nNode.js version v17.3.1 detected.\r\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/releases/.\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.3.5\r\nNode: 17.3.1 (Unsupported)\r\nPackage Manager: npm 8.10.0\r\nOS: linux x64\r\n\r\nAngular: 13.3.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cdk                    13.3.7\r\n@angular/cli                    13.3.5\r\n@schematics/angular             13.3.5\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\r\n    \r\nWarning: The current version of Node (17.3.1) is not supported by Angular.\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nChromium Version 101.0.4951.64 (Official Build) snap (64-bit)\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/23155","RelatedDescription":"Closed issue \"[webpack-dev-server] [HPM] WebSocket error: Error [ERR_STREAM_WRITE_AFTER_END]: write after end\" (#23155)"},{"Id":"1238409576","IsPullRequest":false,"CreatedAt":"2022-05-17T13:48:14","Actor":"mwaldheim","Number":"23151","RawContent":null,"Title":"Proxy-Mode removed httpClient-Postvalues","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI use the proxy conf for local development as per Angular instructions. I noticed that the post values are discarded in my request. \r\n\r\nUnfortunately, after more than 3 hours of research, I have not found a solution.\r\n\r\nThe request arrives at my local PHP server but has no post values. By using the bypass variant I could find out that the post values are not passed at all.\r\n\r\n```json\r\n{\r\n  \"/api/*\": {\r\n    \"target\": \"https://pc057.mydomain.local/applikation\",\r\n    \"secure\": false,\r\n    \"changeOrigin\": true,\r\n    \"pathRewrite\": {\"^/api\" : \"\"}\r\n  }\r\n}\r\n```\r\n\r\n\r\nRequest (TS)\r\n```ts\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n// userCredentials come from a FromGroup on Submit\r\n  makeBasicAuth(userCredentials: BasicAuth): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>('/api/restlogin/api/REST_LOGIN', userCredentials);\r\n  }\r\n```\r\n\r\nImage from the Request before Proxy: \r\n![image](https://user-images.githubusercontent.com/31657644/168783894-3eb1b190-fccc-4f55-9b6a-5eaa7f0e445f.png)\r\n\r\n\r\nRequest on the Server (Post empty)\r\n![image](https://user-images.githubusercontent.com/31657644/168783950-3acec511-87be-4f77-96f3-51c3871ea946.png)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.5\r\nNode: 16.15.0\r\nPackage Manager: npm 8.4.0\r\nOS: win32 x64\r\n\r\nAngular: 13.3.6\r\n... animations, cdk, common, compiler, compiler-cli, core\r\n... elements, forms, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.5\r\n@angular-devkit/build-angular   13.3.5\r\n@angular-devkit/core            13.3.5\r\n@angular-devkit/schematics      13.3.5\r\n@angular/cli                    13.3.5\r\n@angular/flex-layout            13.0.0-beta.38\r\n@schematics/angular             13.3.5\r\nng-packagr                      13.3.1\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/23151","RelatedDescription":"Closed issue \"Proxy-Mode removed httpClient-Postvalues\" (#23151)"},{"Id":"1238588439","IsPullRequest":false,"CreatedAt":"2022-05-17T12:46:10","Actor":"vzakharov-rxnt","Number":"23154","RawContent":null,"Title":"Experimental esbuild errors in v14 RC","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] build\r\n\r\n### Is this a regression?\r\n\r\nUnknown, feature is new in v14.\r\n\r\n### Description\r\n\r\n[Experimental](https://github.com/angular/angular-cli/pull/22995) `browser-esbuild` option gives build errors.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n- Create Angular boilerplate project with `ng new`, using CSS and routing. My global CLI version is v13.3.3.\r\n- Change Angular versions in `package.json` to `14.0.0-rc.0`.\r\n- Run `npm install`.\r\n- Change builder option in `angular.json` to `@angular-devkit/build-angular:browser-esbuild`.\r\n- Run `\"build\": \"ng build\",`.\r\n\r\n## 🔥 Exception or Error\r\n\r\nIf CSS is part of the build (included in angular.json), getting this error:\r\n```\r\nX [ERROR] Could not resolve \"D:Gitng14-testsrcstyles.css\"\r\n\r\n    angular:style/global;styles:1:8:\r\n      1 │ @import 'D:\\Git\\ng14-test\\src\\styles.css';\r\n        ╵         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"D:Gitng14-testsrcstyles.css\" as external to exclude it from the bundle, which will remove this error.\r\n```\r\n\r\nIf I exclude it from angular.json by deleting\r\n```\r\n\"styles\": [\r\n  \"src/styles.css\"\r\n],\r\n```\r\ngetting another error:\r\n```\r\nAn unhandled exception occurred: ENOENT: no such file or directory, open 'D:\\Git\\ng14-test\\dist\\ng14-test\\D:\\Git\\ng14-test\\main.RY3CYEVR.js'\r\n```\r\n\r\n## 🌍 Your Environment\r\n\r\n```\r\nAngular CLI: 14.0.0-rc.0\r\nNode: 14.17.1\r\nPackage Manager: npm 6.14.13\r\nOS: win32 x64\r\n\r\nAngular: 14.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1400.0-rc.0\r\n@angular-devkit/build-angular   14.0.0-rc.0\r\n@angular-devkit/core            14.0.0-rc.0\r\n@angular-devkit/schematics      14.0.0-rc.0\r\n@schematics/angular             14.0.0-rc.0\r\nrxjs                            7.5.5\r\ntypescript                      4.6.4\r\n```\r\n\r\n**Anything else relevant?**\r\n\r\nMy package.json:\r\n```\r\n{\r\n  \"name\": \"ng14-test\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"14.0.0-rc.0\",\r\n    \"@angular/common\": \"14.0.0-rc.0\",\r\n    \"@angular/compiler\": \"14.0.0-rc.0\",\r\n    \"@angular/core\": \"14.0.0-rc.0\",\r\n    \"@angular/forms\": \"14.0.0-rc.0\",\r\n    \"@angular/platform-browser\": \"14.0.0-rc.0\",\r\n    \"@angular/platform-browser-dynamic\": \"14.0.0-rc.0\",\r\n    \"@angular/router\": \"14.0.0-rc.0\",\r\n    \"rxjs\": \"~7.5.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"14.0.0-rc.0\",\r\n    \"@angular/cli\": \"14.0.0-rc.0\",\r\n    \"@angular/compiler-cli\": \"14.0.0-rc.0\",\r\n    \"@types/jasmine\": \"~3.10.0\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"jasmine-core\": \"~4.0.0\",\r\n    \"karma\": \"~6.3.0\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.1.0\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\r\n    \"typescript\": \"~4.6.2\"\r\n  }\r\n}\r\n```","Url":"https://github.com/angular/angular-cli/issues/23154","RelatedDescription":"Open issue \"Experimental esbuild errors in v14 RC\" (#23154)"},{"Id":"1238534381","IsPullRequest":false,"CreatedAt":"2022-05-17T12:13:50","Actor":"vzakharov-rxnt","Number":"23153","RawContent":null,"Title":"Found mostly working esbuild Angular compiler - fix pending issues and use it for Angular CLI build?","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] build\r\n- [x] serve\r\n\r\n### Description\r\n\r\nI found a mostly working esbuild compiler for Angular. I know Angular team is investigating this, so could be of some help.\r\n- https://github.com/cherryApp/ngc-esbuild\r\n\r\n### Describe the solution you'd like\r\n\r\nPlease expedite build speed improvements, current Angular 13.x builds are too slow, even my most simple app with 5k of own LOC and 1.8MB JS bundle size takes 2min to build on a CI/CD agent. I checked other questions here, I would be fine to not have type checking, I can add a parallel type check with `npm-run-all`, it would still be faster.\r\n\r\nFor example, one enterprise application that I have here, with 15MB bundle size (combined main and lazy chunks), takes 1min to build with Angular 13 CLI on my Ryzen 9 laptop. It's a mix of Angular 13 and Angular 1.x code. Another enterprise application with the same bundle size takes 30 seconds to build with `webpack/esbuild-loader` and type checks running in parallel. It only has Angular 1.x code, no Angular 13.\r\n\r\nAssuming the above data and linear correlation between output bundle size and build time (15MB / 1.8MB * 2min), I estimate 16min on a CI/CD agent for our larger app.\r\n\r\n### Describe alternatives you've considered\r\n\r\nN/A","Url":"https://github.com/angular/angular-cli/issues/23153","RelatedDescription":"Closed issue \"Found mostly working esbuild Angular compiler - fix pending issues and use it for Angular CLI build?\" (#23153)"},{"Id":"1238521771","IsPullRequest":false,"CreatedAt":"2022-05-17T12:09:56","Actor":"adittya321","Number":"23152","RawContent":null,"Title":"ng serve not work","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [x] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/23152","RelatedDescription":"Closed issue \"ng serve not work\" (#23152)"},{"Id":"1238333591","IsPullRequest":true,"CreatedAt":"2022-05-17T10:54:23","Actor":"alan-agius4","Number":"23150","RawContent":null,"Title":"Snapshot fails","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23150","RelatedDescription":"Closed or merged PR \"Snapshot fails\" (#23150)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1240658141","IsPullRequest":true,"CreatedAt":"2022-05-18T22:53:56","Actor":"jelbourn","Number":"24941","RawContent":null,"Title":"refactor(cdk/menu): use `inject` for all injection","State":"open","Body":"This change switches the cdk menu from using constructor injection to using the `inject` function. This was enabled by https://github.com/angular/angular/pull/45991. This approach has a number of advantages:\r\n\r\n* We can add and remove injectables without changing the public constructor signature\r\n* It reduces the boilerplate of passing arguments through `super`\r\n* It avoids long/messy constructor blocks in favor of simpler member definitions.\r\n* This sidesteps a common pitfall of making `@Optional` injection (`null` if not provided) as an optional parameter (`undefined` if not provided)`.\r\n\r\nI expect this PR to involve some discussion around how we want to approach this in general. ","Url":"https://github.com/angular/components/pull/24941","RelatedDescription":"Open PR \"refactor(cdk/menu): use `inject` for all injection\" (#24941)"},{"Id":"1240619116","IsPullRequest":true,"CreatedAt":"2022-05-18T22:30:07","Actor":"jelbourn","Number":"24940","RawContent":null,"Title":"refactor(cdk/menu): switch to `inject` function","State":"closed","Body":"This change switches the cdk menu from using constructor injection to using the `inject` function. This was enabled by https://github.com/angular/angular/pull/45991. This approach has a number of advantages:\r\n* We can add and remove injectables without changing the public constructor signature\r\n* It reduces the boilerplate of passing arguments through `super`\r\n* It avoids long/messy constructor blocks in favor of simpler member definitions.\r\n* This sidesteps a common pitfall of making `@Optional` injection (`null` if not provided) as an optional parameter (`undefined` if not provided)`.","Url":"https://github.com/angular/components/pull/24940","RelatedDescription":"Closed or merged PR \"refactor(cdk/menu): switch to `inject` function\" (#24940)"},{"Id":"1240396476","IsPullRequest":false,"CreatedAt":"2022-05-18T19:18:08","Actor":"JaimeStill","Number":"24939","RawContent":null,"Title":"feat: MatMenu usage within a MatTabNavPanel","State":"open","Body":"### Feature Description\r\n\r\n> Submitting as a Feature as I'm pretty sure the below scenario isn't officially supported by MDL.\r\n\r\n[StackBlitz Scenario](https://stackblitz.com/edit/tab-embedded-menu)\r\n\r\nWhen building out child routes accessed via a `<nav mat-tab-nav-bar>`, it's helpful to provide a button or menu exposing common functionality directly within the tab panel (vs. adding another panel parallel or adjacent to the tab panel). This technically works by linking a `mat-tab-link` to a menu, but it triggers the following console errors when the menu is opened / closed:\r\n\r\n![image](https://user-images.githubusercontent.com/14102723/169138122-38153fea-68a0-4339-9abf-728b2693c6e1.png)\r\n\r\nIf I change the menu trigger to a simple `<a mat-button>`, the styling for the button does not conform to the styling of the tabs in the nav panel:\r\n\r\n![image](https://user-images.githubusercontent.com/14102723/169138416-fdefea31-99b9-4e15-8b1d-edf271159643.png)\r\n\r\nRecommendation would be to adjust styling for `mat-button` to to conform to tab styling when embedded in a `mat-tab-nav-bar`:\r\n\r\n```scss\r\nnav.mat-tab-nav-bar .mat-button {\r\n  height: 48px;\r\n  padding: 0 24px;\r\n  opacity: .6;\r\n  text-align: center;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  vertical-align: top;\r\n  text-decoration: none;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/14102723/169138952-2b87435b-d10a-4875-8e2d-e72767cb0421.png)\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/24939","RelatedDescription":"Open issue \"feat: MatMenu usage within a MatTabNavPanel\" (#24939)"},{"Id":"1240164036","IsPullRequest":true,"CreatedAt":"2022-05-18T15:49:27","Actor":"amysorto","Number":"24938","RawContent":null,"Title":"build: add chips example to mdc-migration integration test","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24938","RelatedDescription":"Open PR \"build: add chips example to mdc-migration integration test\" (#24938)"},{"Id":"1240042255","IsPullRequest":true,"CreatedAt":"2022-05-18T15:27:19","Actor":"damingerdai","Number":"24937","RawContent":null,"Title":"test(material/button): use withContext to show fail output","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24937","RelatedDescription":"Closed or merged PR \"test(material/button): use withContext to show fail output\" (#24937)"},{"Id":"1235808038","IsPullRequest":true,"CreatedAt":"2022-05-18T14:26:48","Actor":"renovate[bot]","Number":"24921","RawContent":null,"Title":"build: update angular shared dev-infra code to ce1d7f6","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `74954e7` -> `ce1d7f6` |\n| angular/dev-infra | action | digest | `c9f0e5d` -> `2a04da0` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24921","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code to ce1d7f6\" (#24921)"},{"Id":"1239518826","IsPullRequest":true,"CreatedAt":"2022-05-18T11:53:11","Actor":"crisbeto","Number":"24935","RawContent":null,"Title":"refactor(material-experimental/mdc-slide-toggle): remove usage of MDC adapter","State":"closed","Body":"Bases the MDC slide toggle on top of the non-MDC one, instead of the MDC adapter.","Url":"https://github.com/angular/components/pull/24935","RelatedDescription":"Closed or merged PR \"refactor(material-experimental/mdc-slide-toggle): remove usage of MDC adapter\" (#24935)"},{"Id":"1239699798","IsPullRequest":false,"CreatedAt":"2022-05-18T09:43:15","Actor":"CalaxDev","Number":"24936","RawContent":null,"Title":"help(Gestures): What is the recommended way to include gestures into Angular Material?","State":"open","Body":"### What are you trying to do?\n\nI have been researching on how to enable general gestures and animations with Angular Material.\r\nBack with AngularJS Material there were many Material-Like Controls with Animations like the Fab-Speed-Dial, and the Material-Spec and up until Angular 9 (I think) swipe-to-open Sidenavs were supported via gestures.\r\n\r\nHowever this Gesture-Support was then dropped. Looking at HammerJS, which was previously used but then dropped, I am now wondering what the recommended/preferred way to include native-like/feeling controls (without using something like ionic/capacitor) would be.\r\n\r\nIs there some recommendation for some library? Or is the general consensus \"Build it yourself with Vanilla JS/Do not use gestures/animations\"?\r\n\r\nOn Desktop gestures are not supported, sure, but for mobile devices, especially when packaged as a PWA, it would provide quite some \"responsive\" feeling and value if an Angular App worked just like a mobile app would.\r\n(For example - Swipe Sidenav to Open/Close, Swipe Snackbar to close, ...)\n\n### What troubleshooting steps have you tried?\n\n-\n\n### Reproduction\n\n-\n\n### Environment\n\nAngular CLI: 13.3.3\r\nNode: 18.0.0 (Unsupported)\r\nPackage Manager: npm 8.6.0\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1303.3 (cli-only)\r\n@angular-devkit/core         13.3.3 (cli-only)\r\n@angular-devkit/schematics   13.3.3 (cli-only)\r\n@schematics/angular          13.3.3 (cli-only)","Url":"https://github.com/angular/components/issues/24936","RelatedDescription":"Open issue \"help(Gestures): What is the recommended way to include gestures into Angular Material?\" (#24936)"},{"Id":"1239146747","IsPullRequest":true,"CreatedAt":"2022-05-18T04:23:32","Actor":"hilts-vaughan","Number":"24932","RawContent":null,"Title":"fix(material/tabs): ensure the ink bar realigns when the tab header i…","State":"closed","Body":"…tems have changed in dimensions","Url":"https://github.com/angular/components/pull/24932","RelatedDescription":"Closed or merged PR \"fix(material/tabs): ensure the ink bar realigns when the tab header i…\" (#24932)"},{"Id":"1239225799","IsPullRequest":true,"CreatedAt":"2022-05-17T22:29:25","Actor":"mmalerba","Number":"24934","RawContent":null,"Title":"feat(material-experimental/mdc-list): add support for activated state in harness","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24934","RelatedDescription":"Open PR \"feat(material-experimental/mdc-list): add support for activated state in harness\" (#24934)"},{"Id":"1239215850","IsPullRequest":true,"CreatedAt":"2022-05-17T22:23:29","Actor":"zarend","Number":"24933","RawContent":null,"Title":"fix(material-experimental/mdc-select): experiment with adding a close…","State":"open","Body":"… button to mdc-select","Url":"https://github.com/angular/components/pull/24933","RelatedDescription":"Open PR \"fix(material-experimental/mdc-select): experiment with adding a close…\" (#24933)"},{"Id":"1239008644","IsPullRequest":true,"CreatedAt":"2022-05-17T18:25:04","Actor":"crisbeto","Number":"24931","RawContent":null,"Title":"fix(material/schematics): support standalone components in ng-add","State":"open","Body":"Adds code to handle apps that are bootstrapped through `bootstrapApplication` instead of `bootstrapModule`.","Url":"https://github.com/angular/components/pull/24931","RelatedDescription":"Open PR \"fix(material/schematics): support standalone components in ng-add\" (#24931)"},{"Id":"1238969370","IsPullRequest":true,"CreatedAt":"2022-05-17T17:46:31","Actor":"mmalerba","Number":"24930","RawContent":null,"Title":"fix(multiple): fix focus and hover styles for mdc-checkbox and mdc-radio","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24930","RelatedDescription":"Open PR \"fix(multiple): fix focus and hover styles for mdc-checkbox and mdc-radio\" (#24930)"},{"Id":"1237847103","IsPullRequest":true,"CreatedAt":"2022-05-16T23:18:17","Actor":"mmalerba","Number":"24929","RawContent":null,"Title":"fix(material-experimental/mdc-button): don't apply styles to icons within the text label","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24929","RelatedDescription":"Open PR \"fix(material-experimental/mdc-button): don't apply styles to icons within the text label\" (#24929)"},{"Id":"1237828946","IsPullRequest":true,"CreatedAt":"2022-05-16T22:53:38","Actor":"zarend","Number":"24928","RawContent":null,"Title":"fix(material-experimental/mdc-select): wip, experimenting with using","State":"open","Body":"aria-activedescendent with non-native mdc-select","Url":"https://github.com/angular/components/pull/24928","RelatedDescription":"Open PR \"fix(material-experimental/mdc-select): wip, experimenting with using\" (#24928)"},{"Id":"1237739078","IsPullRequest":true,"CreatedAt":"2022-05-16T21:22:33","Actor":"mmalerba","Number":"24927","RawContent":null,"Title":"fix(material-experimental/mdc-checkbox): Use cursor:pointer for label","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24927","RelatedDescription":"Open PR \"fix(material-experimental/mdc-checkbox): Use cursor:pointer for label\" (#24927)"},{"Id":"1235903068","IsPullRequest":true,"CreatedAt":"2022-05-16T21:14:18","Actor":"crisbeto","Number":"24922","RawContent":null,"Title":"refactor(material-experimental/mdc-checkbox): remove usage of MDC adapter","State":"closed","Body":"Moves all of the checkbox logic into a base class which is used to replace the MDC checkbox adapter.","Url":"https://github.com/angular/components/pull/24922","RelatedDescription":"Closed or merged PR \"refactor(material-experimental/mdc-checkbox): remove usage of MDC adapter\" (#24922)"},{"Id":"1236715534","IsPullRequest":true,"CreatedAt":"2022-05-16T16:24:23","Actor":"crisbeto","Number":"24925","RawContent":null,"Title":"refactor(material-experimental/mdc-radio): remove adapter usage","State":"closed","Body":"Removes the dependency on the MDC radio adapter from the radio button component.","Url":"https://github.com/angular/components/pull/24925","RelatedDescription":"Closed or merged PR \"refactor(material-experimental/mdc-radio): remove adapter usage\" (#24925)"},{"Id":"1237162009","IsPullRequest":false,"CreatedAt":"2022-05-16T13:27:45","Actor":"SadiinsoSnowfall","Number":"24926","RawContent":null,"Title":"feat(MatTable) Add `sortPredicate` to MatTableDataSource or MatSort","State":"open","Body":"### Feature Description\n\n`MatTableDataSource<T>` already has a `filterPredicate` property that allows you to pass a function with the signature `(data: T, filter: string) => boolean` to implement a custom filtering algorithm. This makes it much easier to control the behavior of the table when passing a filter value to the data source.\r\nThe same thing is not possible when sorting: currently, the only way to control the behavior of a `MatSort` on a `MatTableDataSource` is to set its `sortingDataAccessor` property. And this is extremely limited because it only allows to control what the sorting algorithm \"sees\" and not how it sorts the data.\r\n\r\nProposition:\r\nAdd a `sortPredicate` analogous to `MatTableDataSource.filterPredicate` to either `MatTableDataSource` or `MatSort`.\r\n\r\nThis property would accept a function with the signature `(a: T, b: T, sort: Sort) => number` to mirror the signature of the comparison function passed to `Array.sort`.\r\nAn alternative would be a signature like `(sort: Sort) => (a: T, b: T) => number` which would return a comparison function derived the current sorting key/order.\r\n\r\nNote that it would be better to be able to override the sort comparison function of only certain columns, in this case a possible solution would be to accept a function with the signature  `(sort: Sort) => ((a: T, b: T) => number) | undefined`  and fallback to the default comparison function on `undefined`.\r\n\r\nThis property would give a lot more control over the sorting algorithm to the user than what is currently possible. \n\n### Use Case\n\nThere is no easy way to customize the sorting algorithm, for ex: https://stackoverflow.com/q/55016642/10061195\r\nThis property would also make it easier to sort nested objects. Currently, this needs to either give a specific name to the column to sort, or to catch the data access using `sortingDataAccessor`.\r\n\r\nFor example, a solution to the given SO question using the proposed property would be:\r\n```ts\r\ndataSource.sortPredicate = (sort: Sort) => {\r\n    if (sort.active === 'code') {\r\n        if (sort.direction === 'asc') {\r\n            return (a, b) => a.localeCompare(b, undefined, { numeric: true });\r\n        } else {\r\n            return (a, b) => b.localeCompare(a, undefined, { numeric: true });\r\n        }\r\n    }\r\n};\r\n```\r\nor\r\n```ts\r\n// JS/TS does not support array as keys in object / Map\r\nconst compare = {\r\n    'code#asc': (a, b) => a.localeCompare(b, undefined, { numeric: true }),\r\n    'code#desc': (a, b) => b.localeCompare(a, undefined, { numeric: true }),\r\n};\r\n\r\ndataSource.sortPredicate = (sort: Sort) => compare[sort.active + '#' + sort.direction];\r\n```","Url":"https://github.com/angular/components/issues/24926","RelatedDescription":"Open issue \"feat(MatTable) Add `sortPredicate` to MatTableDataSource or MatSort\" (#24926)"},{"Id":"1236320461","IsPullRequest":false,"CreatedAt":"2022-05-15T16:36:52","Actor":"lakshmi2716","Number":"24924","RawContent":null,"Title":"Angular Material page is not opening for past 2 weeks ","State":"closed","Body":"### Documentation Feedback\n\nAngular Material page is not opening for past 2 weeks \n\n### Affected documentation page\n\n material.angular.io","Url":"https://github.com/angular/components/issues/24924","RelatedDescription":"Closed issue \"Angular Material page is not opening for past 2 weeks \" (#24924)"},{"Id":"1236206386","IsPullRequest":true,"CreatedAt":"2022-05-15T07:32:22","Actor":"crisbeto","Number":"24923","RawContent":null,"Title":"build: switch back to yarn v3","State":"closed","Body":"During the TS 4.7 update I had to update temporarily to Yarn v4, because v3 didn't support it yet. Now that TS 4.7 is supported, we can switch back.","Url":"https://github.com/angular/components/pull/24923","RelatedDescription":"Closed or merged PR \"build: switch back to yarn v3\" (#24923)"},{"Id":"1235788547","IsPullRequest":true,"CreatedAt":"2022-05-13T23:23:17","Actor":"mmalerba","Number":"24920","RawContent":null,"Title":"fix(cdk-experimental/listbox): clean up the listbox API and make it work with forms","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24920","RelatedDescription":"Open PR \"fix(cdk-experimental/listbox): clean up the listbox API and make it work with forms\" (#24920)"},{"Id":"1235043426","IsPullRequest":false,"CreatedAt":"2022-05-13T10:21:16","Actor":"rothsandro","Number":"24919","RawContent":null,"Title":"bug(CDK a11y, Tooltip, SortHeader): AriaDescriber not working inside Shadow DOM","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe AriaDescriber service creates a container element and appends it to the body. The messages inside the container are linked with the host element using `aria-describedby` when calling `ariaDescriber.describe()`.\r\n\r\nWhen the host element is inside Shadow DOM this will not work properly because the hidden message element (that is referenced via `aria-describedby`) is outside of the Shadow DOM and will be ignored by the browser.\n\n### Reproduction\n\nI actually had the problem with Angular Material Tooltips and Table Sort Header (which use AriaDescriber) but for the repro I use the AriaDescriber service directly. I set a description on a button in the Example component which uses `ViewEncapsulation.ShadowDom`.\r\n\r\nSteps to reproduce:\r\n1. Open the repro https://stackblitz.com/edit/components-issue-rxwpmf?file=src/app/example-component.ts\r\n2. Inspect the \"Action\" button\r\n3. Open the \"Accessibility\" tab in the inspector\r\n\r\n\n\n### Expected Behavior\n\nThe button should have the description \"Some description\" which was created via AriaDescriber service.\n\n### Actual Behavior\n\nThe button has no description.\r\n\r\n![aria-describer-shadowdom](https://user-images.githubusercontent.com/16229645/168264055-4cc41d97-977d-4f3b-a7fd-175242f9ad4a.png)\r\n\r\nThe `aria-describedby` attribute is there but the referenced element is ignored because it's outside of the Shadow DOM. It works if I set `encapsulation` on the component to `Emulated`.\n\n### Environment\n\n- Angular: 13.3.0\r\n- CDK/Material: 13.3.0\r\n- Browser(s): Brave\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24919","RelatedDescription":"Open issue \"bug(CDK a11y, Tooltip, SortHeader): AriaDescriber not working inside Shadow DOM\" (#24919)"},{"Id":"1234986631","IsPullRequest":false,"CreatedAt":"2022-05-13T09:35:21","Actor":"shrhegde","Number":"24918","RawContent":null,"Title":"<mat-radio-button>: A11y Accessibility issue with mat radio button.","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\n\r\nWe are using <mat-radio-component> for radio buttons. After Applying high contrast mode, the focus is not visible on the radio buttons.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to [radio-example] (https://stackblitz.com/run?file=src%2Fapp%2Fradio-overview-example.ts)\r\n2. Apply high contrast mode. In windows, got to Settings -> Accessibility -> Contrast themes -> Apply Night sky.\r\n3. In [radio-example] (https://stackblitz.com/run?file=src%2Fapp%2Fradio-overview-example.ts), select or unselect any radio button. The status change is not visible. \r\n4. Also when you focus on the radio buttons using keyboard, the focus is not visible in high contrast mode.\r\n\n\n### Expected Behavior\n\n1. In high contrast mode, the inner circle should be visible when radio button is checked.\r\n2. In high contrast mode, when navigating through keyboard the focus should be visible on radio buttons.\r\n\n\n### Actual Behavior\n\n1. In high contrast mode, the inner circle is not visible when radio button is checked.\r\n2. In high contrast mode, when navigating through keyboard the focus is not visible on radio buttons.\n\n### Environment\n\n- Angular: 7.x.x, Latest version\r\n- CDK/Material: 7.3.6 and Latest\r\n- Browser(s): Chrome, Chromium Edge: Version 98.0.1108.13 (Official build) dev (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win11\r\n","Url":"https://github.com/angular/components/issues/24918","RelatedDescription":"Open issue \"<mat-radio-button>: A11y Accessibility issue with mat radio button.\" (#24918)"},{"Id":"1234905102","IsPullRequest":false,"CreatedAt":"2022-05-13T08:26:52","Actor":"rothsandro","Number":"24917","RawContent":null,"Title":"bug(CDK a11y): AriaDescriber id not unique in microfrontend / docs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe Tooltip component (and others like SortHeader, Badge) uses the CDK AriaDescriber service for a11y. The AriaDescriber service creates a new hidden element with a unique id and the tooltip text, appends it to the body and creates a reference on the tooltip element with `aria-describedby`.\r\n\r\nThe unique id for the hidden element is generated using counter variable (cdk-describedby-message-1, cdk-describedby-message-2, ...). In a microfrontend with multiple Angular versions on the page this results in elements with an id that is not unique. This results in wrong descriptions.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open https://material.angular.io/components/tooltip/overview\r\n2. Inspect the \"Action\" button in the first example\r\n3. Open the \"Accessibility\" tab in the inspector and scroll to the \"Description\" property\r\n\n\n### Expected Behavior\n\nThe description should be \"Info about the action\".\r\n\r\nThe id should be unique in a microfrontend with multiple Angular versions.\n\n### Actual Behavior\n\nThe description is \"Select a version of the documentation\".\r\n\r\n![aria-describer](https://user-images.githubusercontent.com/16229645/168242446-1ad73969-b90d-4097-aaf1-ad46e3999c03.png)\r\n\r\nThis is because aria-describedby is set to `cdk-describedby-message-1`.\r\nIf you scroll to the end in the Elements Tab you can see that there are two elements with class `cdk-describedby-message-container` and they contain elements with the same id.\r\n\r\n![aria-describer-id](https://user-images.githubusercontent.com/16229645/168242659-5afd8fbe-1303-4df6-a83f-9df9bd1c37b7.png)\n\n### Environment\n\n- Angular: 13.0.3\r\n- CDK/Material: 13.3.7\r\n- Browser(s): Brave\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24917","RelatedDescription":"Open issue \"bug(CDK a11y): AriaDescriber id not unique in microfrontend / docs\" (#24917)"},{"Id":"1234404196","IsPullRequest":false,"CreatedAt":"2022-05-12T19:36:15","Actor":"bordecal","Number":"24916","RawContent":null,"Title":"bug(mat-selection-list): Focus \"ghosts\" on iOS","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nOn iOS, tapping on an item in a multi-select `mat-selection-list` results in focus styling being briefly applied to the previously focused item:\r\n![mat-selection-list_ios](https://user-images.githubusercontent.com/6350017/168153515-b2c2dcc3-555e-4337-a6f6-206a22a56651.gif)\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Select or unselect an item in a multi-select `mat-selection-list` (e.g.: https://material.angular.io/components/list/examples#list-selection) by touching the item on an iOS device.\r\n2. Select or unselect another item in the list.\n\n### Expected Behavior\n\nThe focus shading for the first item should not appear when the second item is touched.\n\n### Actual Behavior\n\nThe focus shading for the first item appears briefly when the second item is touched.\n\n### Environment\n\n- Angular: (whatever is running on https://material.angular.io/ today)\r\n- CDK/Material: 13.3.7\r\n- Browser(s): Safari, Chrome, Edge\r\n- Operating System: iOS (at least 15.4.x, but probably others)\r\n","Url":"https://github.com/angular/components/issues/24916","RelatedDescription":"Open issue \"bug(mat-selection-list): Focus \"ghosts\" on iOS\" (#24916)"},{"Id":"1233929598","IsPullRequest":false,"CreatedAt":"2022-05-12T12:44:07","Actor":"angelaki","Number":"24915","RawContent":null,"Title":"feat(mat-datepicker): Restrict MatCalendarView","State":"open","Body":"### Feature Description\n\nI'd like to be able to disable some MatCalendarView options.\n\n### Use Case\n\nI'm using the picker as a month picker. When changing the view the user get irritated by being able to select a day since the picker usualy closes on month selection (via `(monthSelected)`).","Url":"https://github.com/angular/components/issues/24915","RelatedDescription":"Open issue \"feat(mat-datepicker): Restrict MatCalendarView\" (#24915)"},{"Id":"1233879063","IsPullRequest":false,"CreatedAt":"2022-05-12T12:02:48","Actor":"angelaki","Number":"24914","RawContent":null,"Title":"feat(mat-datepicker): Use mat-datepicker-actions without losing the regular behavior","State":"open","Body":"### Feature Description\n\nAs soon as any actions are set (in my case just a _Today_ button) the default functionality is los. Imho this should only be the case, if the `matDatepickerApply` directive is used, too.\n\n### Use Case\n\nAdd a _Today_ button, keeping the default select behavior.","Url":"https://github.com/angular/components/issues/24914","RelatedDescription":"Open issue \"feat(mat-datepicker): Use mat-datepicker-actions without losing the regular behavior\" (#24914)"},{"Id":"1233615320","IsPullRequest":true,"CreatedAt":"2022-05-12T11:53:21","Actor":"crisbeto","Number":"24912","RawContent":null,"Title":"build: update to Angular 14 RC, TypeScript 4.7 RC and MDC 15","State":"closed","Body":"Bumps up our versions of Angular, TypeScript and MDC to the latest.","Url":"https://github.com/angular/components/pull/24912","RelatedDescription":"Closed or merged PR \"build: update to Angular 14 RC, TypeScript 4.7 RC and MDC 15\" (#24912)"},{"Id":"1233715105","IsPullRequest":false,"CreatedAt":"2022-05-12T09:31:05","Actor":"artu-ole","Number":"24913","RawContent":null,"Title":" MatDialog: When using in dynamically loaded component workaround deprecated","State":"open","Body":"### What are you trying to do?\n\nMain issue that has the bug explanation and 2 workarounds provided: [MatDialog: When using in dynamically loaded component throws error No provider for MatDialog](https://github.com/angular/components/issues/19335#)\r\n\r\n>1. Add the `MatDialogModule` to the root module so that the service is available in your whole application\r\n>2. Retrieve the `ComponentFactoryResolver` for the lazy module and instantiate the component through that.\n\n### What troubleshooting steps have you tried?\n\nOut of the two workarounds the first one is going against minifying the initial bundle size and the lazy loading principles in case the material component is used only in the lazy module.\r\nThe second @devversion's workaround functions well, however, now that both `ComponentFactoryResolver` and `Compiler` usage is deprecated with Ivy it is something that needs either another workaround or a proper fix. \r\nPossibly related issue(https://github.com/angular/components/issues/10820) which I have encountered as well, the dynamically loaded components with angular material dependency resolution is in underwhelming state which limits their usage for complex angular applications.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/components-issue-m7dysp?file=src/main.ts\r\n2. Notice all the deprecations\r\n![image](https://user-images.githubusercontent.com/15938416/168039378-e27a36de-f07b-4529-83bc-811390107e2d.png)\r\n\r\n\n\n### Environment\n\n- Angular: 13.3.0\r\n- CDK/Material: 13.3.0\r\n","Url":"https://github.com/angular/components/issues/24913","RelatedDescription":"Open issue \" MatDialog: When using in dynamically loaded component workaround deprecated\" (#24913)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-05-19T03:30:03.1614197Z","RunDurationInMilliseconds":2253}