{"Data":{"Angular-Issues":{"Issues":[{"Id":"2389785451","IsPullRequest":true,"CreatedAt":"2024-07-04T02:18:47","Actor":"crutchcorn","Number":"56840","RawContent":null,"Title":"docs: add window title to reference pages","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe reference docs on angular.dev doesn't show in the title.\r\n\r\nIssue Number: #56026\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe Angular.dev now shows the name of the API in the title\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n","Url":"https://github.com/angular/angular/pull/56840","RelatedDescription":"Open PR \"docs: add window title to reference pages\" (#56840)"},{"Id":"2389646547","IsPullRequest":true,"CreatedAt":"2024-07-03T23:16:04","Actor":"clydin","Number":"56839","RawContent":null,"Title":"refactor(localize): reduce deep imports in ng add schematic","State":"open","Body":"The `@angular/schematic` package has a `utility` export path which can be used to access common utility rules and helpers. The previous deep imports into the `@angular/schematic` package have been switched to the actual export path where possible. This lowers the potential for breakage from internal package changes.\r\n","Url":"https://github.com/angular/angular/pull/56839","RelatedDescription":"Open PR \"refactor(localize): reduce deep imports in ng add schematic\" (#56839)"},{"Id":"2389641857","IsPullRequest":false,"CreatedAt":"2024-07-03T23:14:40","Actor":"wis-dev","Number":"56838","RawContent":null,"Title":"A `WritableSignal` used as `model()` on child component is not iterable","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\n### Which @angular/* package(s) are relevant/related to the feature request?\r\n@angular/core: 18.0.0\r\n@angular/compiler: 18.0.0\r\n\r\n### Description\r\nI am currently encountering an issue with **Model inputs** when attempting to iterate them on child components.\r\nThe goal is propagate new values back to parent component, but I'm getting get the following error:\r\n\r\n`NG8: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator.`\r\n\r\n### Proposed solution\r\nI try many ways but only one solve my problem. Adding a `setTimeout` on set a value to the `WritableSignal`\r\n\r\n---\r\n### Code with error\r\n✅ _Categories data is received in the child component._\r\n❌ _Products data is **not** received in the child component._\r\n```\r\ncategories: WritableSignal<Category[]> = signal([])\r\nproducts: WritableSignal<Product[]> = signal([])\r\n\t\r\nforkJoin([categoriesService, productsService]).pipe(\r\n  map(([categories, products]) => {\r\n    this.categories.set(categories)\r\n    this.products.set(products)\r\n  })\r\n).subscribe()\r\n```\r\n\r\n### Code without error\r\n✅ _Categories data is received in the child component._ \r\n✅ _Products data is received in the child component._ \r\n```\r\ncategories: WritableSignal<Category[]> = signal([])\r\nproducts: WritableSignal<Product[]> = signal([])\r\n\t\r\nforkJoin([categoriesService, productsService]).pipe(\r\n  map(([categories, products]) => {\r\n    this.categories.set(categories)\r\n    // this.products.set(products)\r\n    setTimeout(() => this.products.set(products), 0)\r\n})\r\n).subscribe()\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-ac28tm\n\n### Please provide the exception or error you saw\n\n```true\nNG8: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator. [plugin angular-compiler]\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.0.6\r\nNode: 18.20.3\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 18.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1800.6\r\n@angular-devkit/build-angular   18.0.6\r\n@angular-devkit/core            18.0.6\r\n@angular-devkit/schematics      18.0.6\r\n@angular/cli                    18.0.6\r\n@schematics/angular             18.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\n```\n\n\n### Anything else?\n\nOn my local I don't see any error messages, there are just no values ​​being retrieved in the child component. In Stackblitz I get the following error:\r\n\r\n`NG8: Type '{}' must have a '[Symbol.iterator]()' method that returns an iterator. [plugin angular-compiler]`","Url":"https://github.com/angular/angular/issues/56838","RelatedDescription":"Closed issue \"A `WritableSignal` used as `model()` on child component is not iterable\" (#56838)"},{"Id":"2389641767","IsPullRequest":true,"CreatedAt":"2024-07-03T23:09:16","Actor":"rush1818","Number":"56837","RawContent":null,"Title":"fix(upgrade): fixes downgrade issue for signal based inputs","State":"open","Body":"Fix issue where setting inputs did not work if the component used signal based inputs resulting in errors.\r\n\r\nSwitching to `setInput` API will correctly set the inputs.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSignal based inputs get the raw value instead of the signal function causing `not a function` error.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nUsing `setInput` correctly sets the input on the component. If the input is signal based then it wraps the value in the signal prior to setting it in the component.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56837","RelatedDescription":"Open PR \"fix(upgrade): fixes downgrade issue for signal based inputs\" (#56837)"},{"Id":"2389601778","IsPullRequest":true,"CreatedAt":"2024-07-03T22:31:42","Actor":"mvdluit","Number":"56836","RawContent":null,"Title":"docs: update app-shell docs to reflect v17","State":"open","Body":"Fixes the build commands as previously mentioned here: https://github.com/angular/angular/pull/52294\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ x ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ x ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ x ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nUpdates the build commands that were previously updated in https://github.com/angular/angular/pull/52294 but never made it to the live version of ADEV.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56836","RelatedDescription":"Open PR \"docs: update app-shell docs to reflect v17\" (#56836)"},{"Id":"2389340998","IsPullRequest":false,"CreatedAt":"2024-07-03T20:53:10","Actor":"t0m-4","Number":"56835","RawContent":null,"Title":"Input from Inheritance are not updated","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nHello,\r\n\r\nI noticed that inputs no longer work when they are inherited.\r\n\r\nI have reproduced the problem in a repository.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/t0m-4/input-ng-18\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nI have : \r\n\r\n- 1 component App with some properties: name, address, phone.\r\n- 1 component Base with an input address and a signal input phone.\r\n- 1 component Child that extends Base with an input name.\r\n\r\nApp uses the Child component and binds properties to inputs.\r\n\r\nWhen the component loads, everything works.\r\nWhen you update name, it also works.\r\nWhen you update address or phone, then the values from the Child inputs are cleared.\r\n\r\nI had this issue in a library, and I tried to fix it by replacing @Input with a signal input, but then I got an error on loading which says that ctxt.input is not a function.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 18.0.7\r\nNode: 18.19.1\r\nPackage Manager: npm 10.7.0\r\nOS: win32 x64\r\n\r\nAngular: 18.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1800.7\r\n@angular-devkit/build-angular   18.0.7\r\n@angular-devkit/core            18.0.7\r\n@angular-devkit/schematics      18.0.7\r\n@angular/cli                    18.0.7\r\n@schematics/angular             18.0.7\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/56835","RelatedDescription":"Closed issue \"Input from Inheritance are not updated\" (#56835)"},{"Id":"2389318165","IsPullRequest":true,"CreatedAt":"2024-07-03T19:38:31","Actor":"thePunderWoman","Number":"56834","RawContent":null,"Title":"docs: release notes for the v18.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/56834","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.0.6 release\" (#56834)"},{"Id":"2389313941","IsPullRequest":true,"CreatedAt":"2024-07-03T19:36:25","Actor":"thePunderWoman","Number":"56833","RawContent":null,"Title":"Bump version to \"v18.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/56833","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.0.6\" with changelog.\" (#56833)"},{"Id":"2389036028","IsPullRequest":true,"CreatedAt":"2024-07-03T18:53:51","Actor":"harishkrishnan24","Number":"56831","RawContent":null,"Title":"docs: Update hydration.md","State":"closed","Body":"Make the wording more clearer\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56831","RelatedDescription":"Closed or merged PR \"docs: Update hydration.md\" (#56831)"},{"Id":"2389062246","IsPullRequest":false,"CreatedAt":"2024-07-03T17:21:05","Actor":"ivan-artkod","Number":"56832","RawContent":null,"Title":"Router bindToComponentInputs/withComponentInputBinding for route data as well","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter\n\n### Description\n\nThe current behavior of `bindToComponentInputs`/`withComponentInputBinding` is very convenient as it removes the need to use instance of `ActivatedRoute` and pretty clunky code to extract data from it (pick your flavor: `prop` + `ngOnInit` + `subscribe`, observable `prop$` + `@if` + `asnyc` ...).\r\n\r\nCould we also have similar functionality for route data?\r\nAnd not just static data, but also those resolved via route resolve.\r\n\r\nOne thing to consider is potential race condition between route param updating vs async resolve function that may come about when using custom `RouteReuseStrategy`.\n\n### Proposed solution\n\nWhen using withComponentInputBinding() featue, have it accept additional flag to include data.\r\n\r\nI.e.\r\n```ts\r\n// app.module.ts or app.config.ts\r\n..\r\nproviders: [provideRouter(routes, withComponentInputBinding({bindData: true})]\r\n..\r\n```\r\n\r\n```ts\r\n// routes.ts\r\n...\r\n{\r\n   path: 'example/:id',\r\n   component: ExampleComponent,\r\n   data: { static: 'foo' },\r\n   resolve: {\r\n      dynamic: (route: ActivatedRouteSnapshot) => inject(HttpClient).get(`/api/example/${route.params.id}`))\r\n   }\r\n}\r\n...\r\n```\r\n\r\n```ts\r\n// example.component.ts\r\n...\r\n@Component({\r\n  selector: 'app-example',\r\n  standalone: true,\r\n  template: `\r\n     <p>ID: {{id}}</p>\r\n     <h1>{{ data.dynamic.title }}</h1>\r\n     <p>static: {{ data.static }}</p>\r\n  `\r\n})\r\nexport class ExampleComponent {\r\n  @Input() id: string; // mapped from :id param in route\r\n  @Input() data: any; // mapped from both static and resolved route data\r\n}\r\n...\r\n```\n\n### Alternatives considered\n\nCurrently my component looks like this:\r\n\r\n```ts\r\n// example-view.component.ts\r\n@Component({\r\n  selector: 'app-example-view',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n  <article>\r\n    <p>ID: {{id}}</p>\r\n    @if(data$ | async; as data) {\r\n      <h1>{{ data.dynamic.title }}</h1>\r\n      <p>static: {{ data.static }}</p>\r\n    }\r\n  </article>\r\n  `\r\n})\r\nexport class ExampleViewComponent {\r\n  @Input() id!: string; // binded directly from route :id param\r\n  protected data$: Observable<any> = this.route.data; // and this is observable\r\n\r\n  constructor(private route: ActivatedRoute){}\r\n}\r\n...\r\n```\r\nNotice the amount of extra bits both in component and in template just to deal with async nature of ActivatedRoute.data","Url":"https://github.com/angular/angular/issues/56832","RelatedDescription":"Closed issue \"Router bindToComponentInputs/withComponentInputBinding for route data as well\" (#56832)"},{"Id":"2389028256","IsPullRequest":true,"CreatedAt":"2024-07-03T16:27:10","Actor":"clydin","Number":"56830","RawContent":null,"Title":"build(docs-infra): use chunk optimizer for adev builds","State":"open","Body":"The Angular build system recently introduced an opt-in chunk optimizer for application builds. This is now enabled for adev production builds. It reduces the initial chunk count from 14 to 1 JavaScript file. While the raw initial total file size does increase by 0.75% (+7.3kB), the total estimated transfer size decreases by 8% (-17.8kB). Not only does this reduce the amount of data that must be sent over the network but it also reduces the amount of HTTP requests that must be made by the browser. While the injected HTML module preloads mitigate request cascades, not needing to make the requests is even better.","Url":"https://github.com/angular/angular/pull/56830","RelatedDescription":"Open PR \"build(docs-infra): use chunk optimizer for adev builds\" (#56830)"},{"Id":"2388751414","IsPullRequest":true,"CreatedAt":"2024-07-03T16:11:54","Actor":"thesmiler","Number":"56825","RawContent":null,"Title":"fix(docs-infra): Fix redirects for signals","State":"closed","Body":"Fix redirects from aio to adev for\r\nSignal inputs/queries and model inputs\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSignal input/queries/model redirects 404\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nthose pages redirect to the correct ones\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56825","RelatedDescription":"Closed or merged PR \"fix(docs-infra): Fix redirects for signals\" (#56825)"},{"Id":"2388998347","IsPullRequest":true,"CreatedAt":"2024-07-03T16:09:17","Actor":"JeanMeche","Number":"56829","RawContent":null,"Title":"ci: add myself as an aio reviewer","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/56829","RelatedDescription":"Open PR \"ci: add myself as an aio reviewer\" (#56829)"},{"Id":"2388536125","IsPullRequest":false,"CreatedAt":"2024-07-03T16:05:51","Actor":"cesco69","Number":"56823","RawContent":null,"Title":"Feat: HttpClient based on Signal instead of Observable","State":"closed","Body":"With Signal I can build an application without use anymore RxJS. But, if I use HttpClient, I still import RxJS because it is based on Observable. For **optimize tree shaking and final bundle size**, I think it is a good idea provide an alternative HttpClient based on Signal.\r\n\r\n### Proposed solution\r\n\r\nFrom observable\r\n```ts\r\n@Component({\r\n  template: `\r\n    <ng-container *ngIf=\"user$ | async as user\">\r\n      <p>Name: {{ user.name }}</p>\r\n      <p>Biography: {{ user.biography }}</p>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class UserProfileComponent {\r\n  @Input() userId!: string;\r\n  user$!: Observable<User>;\r\n  constructor(private http: HttpClient) {}\r\n  ngOnInit(): void {\r\n    this.user$ = this.http.get<User>(`/api/user/${this.userId}`);\r\n  }\r\n}\r\n```\r\n\r\nto Signal\r\n\r\n```ts\r\n@Component({\r\n  template: `\r\n    <ng-container *ngIf=\"user\">\r\n      <p>Name: {{ user().name }}</p>\r\n      <p>Biography: {{ user().biography }}</p>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class UserProfileComponent {\r\n  @Input() userId!: string;\r\n  user!: Signal<User>;\r\n  constructor(private http: HttpClientSignal) {}\r\n  ngOnInit(): void {\r\n    this.user = this.http.get<User>(`/api/user/${this.userId}`);\r\n  }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/56823","RelatedDescription":"Closed issue \"Feat: HttpClient based on Signal instead of Observable\" (#56823)"},{"Id":"2388881307","IsPullRequest":false,"CreatedAt":"2024-07-03T15:59:13","Actor":"mlau-anet","Number":"56826","RawContent":null,"Title":"https://v17.angular.io/guide/signal-inputs routes to 404 - https://angular.dev/guide/signal-inputs","State":"closed","Body":"### Describe the problem that you experienced\n\nold docs had broken link to new docs.\n\n### Enter the URL of the topic with the problem\n\nhttps://v17.angular.io/guide/signal-inputs\n\n### Describe what you were looking for in the documentation\n\nwhether signals are still in dev preview\n\n### Describe the actions that led you to experience the problem\n\nsearched google to see status of signals in dev preview, got linked to old docs\n\n### Describe what you want to experience that would fix the problem\n\nnot to have broken links\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/56826","RelatedDescription":"Closed issue \"https://v17.angular.io/guide/signal-inputs routes to 404 - https://angular.dev/guide/signal-inputs\" (#56826)"},{"Id":"2388942694","IsPullRequest":true,"CreatedAt":"2024-07-03T15:40:00","Actor":"bencodezen","Number":"56828","RawContent":null,"Title":"docs: add overview page for performance section","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: [Issue #56783 · angular/angular](https://github.com/angular/angular/issues/56783)\r\n\r\n## What is the new behavior?\r\n\r\nAdd performance page\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56828","RelatedDescription":"Open PR \"docs: add overview page for performance section\" (#56828)"},{"Id":"2388749626","IsPullRequest":false,"CreatedAt":"2024-07-03T12:38:08","Actor":"Licen-it","Number":"56824","RawContent":null,"Title":"extract-i18n generating wrong source inside the xfl file when parsing empty elements","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe recently upgraded to v16.2.14 from v14 (couldn't update further as we need to fix some dependencies which don't support > v17) and now I discovered by chance that extract-i18n is producing an xlf which would break html once using a language different from the default one.\r\nDebugging a bit, I found out that the parse of empty html elements (like `<svg></svg>` or `<span></span>`) is producing wrong closing tags picking up part of the text after the real closing tag. An example below:\r\nthis html\r\n```html\r\n<div>\r\n  <button\r\n    i18n=\"add line button@myAddLineStringId\"\r\n  >\r\n    Add line\r\n    <svg cdsIcon=\"add\" size=\"20\" class=\"cds--btn__icon\"></svg>\r\n  </button>\r\n</div>\r\n```\r\nis producing this entry in the xlf\r\n```xlf\r\n<source> Add line <x id=\"START_TAG__SVG_SVG\" ctype=\"x-_svg_svg\" equiv-text=\"&lt;svg cdsIcon=&quot;add&quot; size=&quot;20&quot; class=&quot;cds--btn__icon&quot;&gt;\"/><x id=\"CLOSE_TAG__SVG_SVG\" ctype=\"x-_svg_svg\" equiv-text=\"&lt;/button&gt;\r\n&lt;/di\"/></source>\r\n```\r\nas you can see, when the translated xlf will take over the default language version, it will produce an svg closing tag `</button></di` which would then break the above html\r\nA simple fix is to add a space inside the empty element, or move the closing tag in a new line, but this might collide with linter setup, so not a great temporary solution.\r\n\r\n### Minimal Reproduction\r\n\r\nhave in a template the following:\r\n```html\r\n<div i18n=\"description@@stringId\">\r\n  A string\r\n  <span></span>\r\n</div>\r\n```\r\n\r\nand then run the normal extract-i18n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.14\r\nNode: 18.20.1\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.12\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.14\r\n@angular-devkit/build-angular   16.2.14\r\n@angular-devkit/core            16.2.14\r\n@angular-devkit/schematics      16.2.14\r\n@angular/cdk                    16.2.14\r\n@angular/cli                    16.2.14\r\n@angular/material               16.2.14\r\n@schematics/angular             16.2.14\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/56824","RelatedDescription":"Open issue \"extract-i18n generating wrong source inside the xfl file when parsing empty elements\" (#56824)"},{"Id":"2388514868","IsPullRequest":false,"CreatedAt":"2024-07-03T12:33:43","Actor":"csisy-bt4w","Number":"56822","RawContent":null,"Title":"Allow providers added by our view child to be accessed in our content child","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nConsider the following scenario:\r\n\r\nA component wants to render user-specified content. This can easily be achieved with `contentChildren` queries for a custom directive:\r\n```\r\n// ts\r\nprotected readonly markers = contentChildren(MyMarkerDirective);\r\n\r\n// html\r\n@for (marker of markers(); track marker) {\r\n  <ng-container *ngTemplateOutlet=\"marker.templateRef\"/>\r\n}\r\n```\r\nHowever, we want to wrap this component inside another component but we want to keep the possibility to provide user-specified content.\r\n\r\nSince nested content projection still doesn't work as one could expect (e.g. #47732), we thought that instead of a `contentChildren` query, we would invert the whole dependency tree: register a container in the component that previously used the children query and the directive would directly register itself into this container.\r\n\r\nHowever, this still does not work because the instance provided by the component is not available in a directive created through content projection. See the following stackblitz for a complete example: https://stackblitz.com/edit/stackblitz-starters-yle9g4?file=src%2Fmain.ts\r\n\r\nIn summary, we have the following component tree:\r\n```\r\napp\r\n |-- wrapper component (view child of app)\r\n       |-- marker handler (view child of wrapper component)\r\n             |-- template with marker directive (view child of app, content child of wrapper component, SHOULD BE view/content child of the marker handler)\r\n```\r\nWe want to access the injectable instance provided by the marker handler in the marker directive.\r\n\r\n### Proposed solution\r\n\r\nThe injector tree should consider the view/content relation even for projected content that comes from outside. That way we could work around the nested projection issue by inverting the dependency graph. And it would work n-deep as well.\r\n```\r\n// caller side\r\n<my-wrapper>\r\n  <p myDirective>Hello</p>\r\n</my-wrapper>\r\n\r\n// wrapper\r\n<my-cool-component>\r\n  <my-another-component>\r\n    <my-component-interested-in-directive> <!-- container provided here -->\r\n      <ng-content/> <!-- myDirective projected here should be able to see the container -->\r\n    </my-component-interested-in-directive>\r\n  </my-another-component>\r\n</my-cool-component>\r\n```\r\n\r\n### Alternatives considered\r\n\r\nIn the linked stackblitz, we created an ugly workaround where the component that previously used a content query re-provides the container. In addition to being an ugly workaround, it might cause unexpected results (e.g. finding a container that should not be found, etc.).","Url":"https://github.com/angular/angular/issues/56822","RelatedDescription":"Open issue \"Allow providers added by our view child to be accessed in our content child\" (#56822)"},{"Id":"2388282329","IsPullRequest":false,"CreatedAt":"2024-07-03T10:38:02","Actor":"karthigamahe","Number":"56821","RawContent":null,"Title":"Type 'Observable<any[]>' is not assignable to type 'any[]'.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\non angular 16 rowdata declared as observable showing error\r\n\r\nthis is how i declared rowData\r\n\r\n`  rowData = new Observable<any[]>();\r\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nerror TS2322: Type 'Observable<any[]>' is not assignable to type 'any[]'.\r\n\r\n56     <ag-grid-angular id=\"ga_Grid\" style=\"width: 100%;height:100%\" class=\"ag-theme-alpine\" [rowData]=\"rowData\"\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular cli- 16.2.12\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/56821","RelatedDescription":"Closed issue \"Type 'Observable<any[]>' is not assignable to type 'any[]'.\" (#56821)"},{"Id":"2388275885","IsPullRequest":true,"CreatedAt":"2024-07-03T10:32:17","Actor":"alan-agius4","Number":"56820","RawContent":null,"Title":"perf(http): execute `fetch` outside of Angular zone","State":"open","Body":"In this update, the fetch backend now executes fetch operations outside of the Angular zone. This adjustment primarily aims to decrease Continuous Delivery (CD) cycles on Node.js. The decision was influenced by Undici, the Node.js fetch implementation, which relies on `setTimeouts` to manage response timeouts.\r\n","Url":"https://github.com/angular/angular/pull/56820","RelatedDescription":"Open PR \"perf(http): execute `fetch` outside of Angular zone\" (#56820)"},{"Id":"2388160004","IsPullRequest":false,"CreatedAt":"2024-07-03T10:16:54","Actor":"karthigamahe","Number":"56818","RawContent":null,"Title":"After update angular 16 - property '_isScalar' does not exist on type 'Observable<any[]>'.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI recently updated to angular 16 from V15, After change the observable which we declared doesn't contain/returning the propertly '_isScalar' which is worked before\r\n\r\n \"rxjs\": \"~7.5.5\",\r\n  \"tslib\": \"^2.3.0\",\r\n \"@angular/core\": \"^16.2.12\",\r\n\r\n\r\nthis is the observable\r\n`  rowData = new Observable<any[]>();\r\n`\r\nwe are checking this  _isScalar like below\r\n\r\n```\r\nif (this.rowData._isScalar !== false) {\r\n//some code\r\n}\r\n```\r\n\r\nThis was perfectly working fine in angular 15 after updated to 16 application showing compilation error like below\r\n\r\n```\r\n error TS2339: Property '_isScalar' does not exist on type 'Observable<any[]>'.\r\n\r\n259     if (this.rowData._isScalar !== false) {\r\n```\r\n\r\n```\r\nerror TS2322: Type 'Observable<any[]>' is not assignable to type 'any[]'.\r\n\r\n56     <ag-grid-angular id=\"ga_Grid\" style=\"width: 100%;height:100%\" class=\"ag-theme-alpine\" [rowData]=\"rowData\"\r\n                                                                                              ~~~~~~~\r\n```\r\n\r\nI need a help here why the observable not returning _isScalar propertly or do i need to change the declaration part\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular cli - 16.2.12\n```\n\n\n### Anything else?\n\nPlease help me to resolve this issue or alternate way to handle this","Url":"https://github.com/angular/angular/issues/56818","RelatedDescription":"Closed issue \"After update angular 16 - property '_isScalar' does not exist on type 'Observable<any[]>'.\" (#56818)"},{"Id":"2388199379","IsPullRequest":true,"CreatedAt":"2024-07-03T09:55:27","Actor":"harishkrishnan24","Number":"56819","RawContent":null,"Title":"docs: Update image-optimization.md","State":"open","Body":"Fix the mistyped attribute rel\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56819","RelatedDescription":"Open PR \"docs: Update image-optimization.md\" (#56819)"},{"Id":"2388102955","IsPullRequest":true,"CreatedAt":"2024-07-03T09:09:28","Actor":"cexbrayat","Number":"56817","RawContent":null,"Title":"fix(common): typo in warning for NgOptimizedDirective","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe warning message for the `PLACEHOLDER_DIMENSION_LIMIT_EXCEEDED` check has a repetition of `of`.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56817","RelatedDescription":"Open PR \"fix(common): typo in warning for NgOptimizedDirective\" (#56817)"},{"Id":"2386820356","IsPullRequest":true,"CreatedAt":"2024-07-02T17:46:07","Actor":"bencodezen","Number":"56816","RawContent":null,"Title":"docs: add quick reference installation page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nIn the onboarding process of the docs, there is no quick reference for getting started with a new application. This page provides clear guidance on this.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56816","RelatedDescription":"Open PR \"docs: add quick reference installation page\" (#56816)"},{"Id":"2386656543","IsPullRequest":true,"CreatedAt":"2024-07-02T16:57:34","Actor":"bencodezen","Number":"56813","RawContent":null,"Title":"docs: update playground app to use hello world for easier onboarding","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nPlayground defaults to \"Hello world\" rather than the \"Minigame\"\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56813","RelatedDescription":"Closed or merged PR \"docs: update playground app to use hello world for easier onboarding\" (#56813)"},{"Id":"2386733182","IsPullRequest":false,"CreatedAt":"2024-07-02T16:56:25","Actor":"iJungleboy","Number":"56815","RawContent":null,"Title":"Feat: transient(...) function to complement the inject(...) function","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWith standalone components comes great responsibility - especially regarding service lifetimes. \r\n\r\nThe problem is that components will need some services, and it's a lot of guessing which ones have already been added to `providers` at a level above, which services should start anew (because they have state, which shouldn't be modified by sub-components by accident) and much more. \r\n\r\nMy experience is that this leads to over-use `providers: [...]` because it's often a guesswork which providers are available from parent-level components and which ones are net. having everything it the own `providers[...]` has a smell 💩 to it though. \r\n\r\nBasically sub-components could forget their own providers - and everything works - but this will result in them sharing the service by accident. \r\n\r\nSo it's fine if it's on purpose, but my experience is that it's accidental a lot, leading to difficult to debug issues. \r\n\r\n### Proposed solution\r\n\r\nI propose a `transient(...)` method which is similar to `inject(...)`, except that it ensures that the service it creates is only created once, and never reused. \r\n\r\nThis would kind of result in shorter, nicer code \r\n\r\n```typescript\r\n@Component({\r\n  // selector etc.\r\n})\r\nexport class Example {\r\n  private = transient(ViewService);\r\n}\r\n```\r\n\r\n...than before (where you could never ensure that sub-components would reuse your service): \r\n\r\n```typescript\r\n@Component({\r\n  // selector etc.\r\n  providers: [\r\n    ViewService,\r\n  ],\r\n})\r\nexport class Example {\r\n  private = inject(ViewService);\r\n}\r\n```\r\n\r\nThe code for the `transient(...)` which works looks like this - but I'm sure there's room for improvement:\r\n\r\n```typescript\r\nimport { Injector, ProviderToken, TypeProvider, inject } from '@angular/core';\r\n\r\n/**\r\n * Transient dependency injection provider.\r\n * This will create a new instance of the provided token,\r\n * without making it available in sub-components\r\n * as would happen with providers in a component.\r\n * \r\n * @param token the class which is injectable\r\n * @param injector the injector to use, if not provided, the current injector will be used.\r\n *     Not not necessary when using transient in the class properties construction or in the constructor,\r\n *     as the injector will be available in the constructor.\r\n *     But necessary when using transient inside anything else.\r\n * @returns \r\n */\r\nexport function transient<T>(token: ProviderToken<T>, injector?: Injector): T {\r\n  // make sure we have an injector\r\n  // this will throw an error, if transient is used outside of construction and without providing an injector\r\n  injector ??= inject(Injector);\r\n\r\n  // create a new injector which is only meant to be used for this transient instance\r\n  const subInjector = Injector.create({\r\n    providers: [\r\n      token as TypeProvider\r\n    ],\r\n    parent: injector\r\n  });\r\n\r\n  // return the instance\r\n  return subInjector.get(token, undefined, { self: true });\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\nI guess we could also \r\n\r\n1. extend the inject-options to provide flags for this as well, but I think this would be simpler and clearer. \r\n2. Change the signature of services so they could be marked as `transient` and therefor the injector would always create a new service - this would be a welcome addition anyhow, but my recommendation with the `transient(...)` injector would still be great, because you would not have to define the `providers` just to get a service. ","Url":"https://github.com/angular/angular/issues/56815","RelatedDescription":"Open issue \"Feat: transient(...) function to complement the inject(...) function\" (#56815)"},{"Id":"2386668811","IsPullRequest":true,"CreatedAt":"2024-07-02T16:43:09","Actor":"bencodezen","Number":"56814","RawContent":null,"Title":"docs: add documentation aroun build error for docs","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThere are more docs in the ADEV Readme section for build errors.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56814","RelatedDescription":"Closed or merged PR \"docs: add documentation aroun build error for docs\" (#56814)"},{"Id":"2386559778","IsPullRequest":true,"CreatedAt":"2024-07-02T15:25:47","Actor":"ugultopu","Number":"56812","RawContent":null,"Title":"docs: capitalize webpack with a lowercase W","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/56812","RelatedDescription":"Open PR \"docs: capitalize webpack with a lowercase W\" (#56812)"},{"Id":"2386553418","IsPullRequest":true,"CreatedAt":"2024-07-02T15:23:31","Actor":"josephperrott","Number":"56811","RawContent":null,"Title":"build: update dependency typescript to v5.5.3","State":"open","Body":"See associated pull request for more information.\r\n","Url":"https://github.com/angular/angular/pull/56811","RelatedDescription":"Open PR \"build: update dependency typescript to v5.5.3\" (#56811)"},{"Id":"2386372157","IsPullRequest":true,"CreatedAt":"2024-07-02T14:14:52","Actor":"thePunderWoman","Number":"56810","RawContent":null,"Title":"Revert \"feat(compiler): Add extended diagnostic to warn when there ar…","State":"closed","Body":"…e uncalled functions in event bindings (#56295)\"\r\n\r\nThis reverts commit fd6cd0422d2d761d2c6cc0cd41838fbba8a3f010.\r\n\r\n","Url":"https://github.com/angular/angular/pull/56810","RelatedDescription":"Closed or merged PR \"Revert \"feat(compiler): Add extended diagnostic to warn when there ar…\" (#56810)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2389610916","IsPullRequest":true,"CreatedAt":"2024-07-03T22:42:51","Actor":"JeanMeche","Number":"27995","RawContent":null,"Title":"refactor: use explicit coercion of exitCode to number.","State":"open","Body":"Implicit coercion to number was removed in node 20, see https://nodejs.org/api/deprecations.html#DEP0164\r\n","Url":"https://github.com/angular/angular-cli/pull/27995","RelatedDescription":"Open PR \"refactor: use explicit coercion of exitCode to number.\" (#27995)"},{"Id":"2389600219","IsPullRequest":false,"CreatedAt":"2024-07-03T22:30:11","Actor":"danielalexis","Number":"27994","RawContent":null,"Title":"Dynamic require of \"google-protobuf\" is not supported","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is the same as #26833. As others have pointed this out, it still doesnt work\n\n### Minimal Reproduction\n\nMinimal reproduction on the related issue\n\n### Exception or Error\n\n```text\nUncaught Error: Dynamic require of \"google-protobuf\" is not supported\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 18.0.6\r\nNode: 20.12.1\r\nPackage Manager: npm 10.8.1\r\nOS: win32 x64\r\n\r\nAngular: 18.0.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------      \r\n@angular-devkit/architect       0.1800.6\r\n@angular-devkit/build-angular   18.0.6\r\n@angular-devkit/core            18.0.6\r\n@angular-devkit/schematics      18.0.6\r\n@angular/cli                    18.0.6\r\n@schematics/angular             18.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27994","RelatedDescription":"Open issue \"Dynamic require of \"google-protobuf\" is not supported\" (#27994)"},{"Id":"2389399487","IsPullRequest":true,"CreatedAt":"2024-07-03T20:19:09","Actor":"clydin","Number":"27993","RawContent":null,"Title":"refactor(@angular/cli): provide a default extract-i18n target for applications","State":"open","Body":"The `extract-i18n` command will now use a default project target and builder name if the target entry is not explicitly defined. This allows the removal of additional configuration from an `angular.json` file. If the target is already present than it will take priority over any default builder behavior. Infrastructure is also now present to allow other architect commands to have similar functionality in the future.","Url":"https://github.com/angular/angular-cli/pull/27993","RelatedDescription":"Open PR \"refactor(@angular/cli): provide a default extract-i18n target for applications\" (#27993)"},{"Id":"2389045939","IsPullRequest":true,"CreatedAt":"2024-07-03T17:31:43","Actor":"clydin","Number":"27992","RawContent":null,"Title":"fix(@angular/build): check inlineSourceMap option with isolated modules optimization","State":"closed","Body":"The isolated modules transpilation option that was recently introduced is currently disabled when source maps are enabled. TypeScript has two mutually exclusive options that can be used to check for source map usage. Both of these options (`sourceMap` and `inlineSourceMap`) are now checked to determine if the direct transpilation optimization can be used.","Url":"https://github.com/angular/angular-cli/pull/27992","RelatedDescription":"Closed or merged PR \"fix(@angular/build): check inlineSourceMap option with isolated modules optimization\" (#27992)"},{"Id":"2388902917","IsPullRequest":true,"CreatedAt":"2024-07-03T15:23:24","Actor":"clydin","Number":"27990","RawContent":null,"Title":"docs: release notes for the v18.1.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/27990","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.1.0-rc.1 release\" (#27990)"},{"Id":"2388955540","IsPullRequest":false,"CreatedAt":"2024-07-03T15:18:49","Actor":"angelaki","Number":"27991","RawContent":null,"Title":"\"Uncaught TypeError\" switching Angular Builder to \"@angular-devkit/build-angular:application\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a **pretty huge** project that I'm about to migrate from `\"builder\": \"@angular-devkit/build-angular:browser\"` to `\"builder\": \"@angular-devkit/build-angular:application\"`.\r\n\r\nAfter getting this project to build (using the migration guide [https://v17.angular.io/guide/esbuild], had to adopt some import paths etc.), I get a runtime error:\r\n\r\n> Uncaught TypeError: Class extends value undefined is not a constructor or null\r\n\r\nI don't have any chance to create a minimal repro (already tried but always stuck in a bunch of errors), but could please anyone try to help me solve this issue? Should it work out of the box? I don't have any idea what could cause this.\r\n\r\nAs far as I understand, this issue is caused by cirular dependencies. But: why could it work with the old builder and fail with the new one?\r\n\r\nEverywhere around this project I use some base classes `ComponentBase extends ServiceBase extends InjectableBase` with everyone of them adding some properties / methods / services etc.\r\n\r\nOnly Services / Components extending these classes cause the error.\r\n\r\nI guess it's pretty hard to help without any further knowledge of the code. But any help would be appreceated, finding this issue!\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nUncaught TypeError: Class extends value undefined is not a constructor or null\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.0.6\r\nNode: 20.10.0\r\nPackage Manager: npm 8.5.4\r\nOS: win32 x64\r\n\r\nAngular: 18.0.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-luxon-adapter, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1800.6 (cli-only)\r\n@angular-devkit/build-angular   18.0.6\r\n@angular-devkit/core            18.0.6 (cli-only)\r\n@angular-devkit/schematics      18.0.6 (cli-only)\r\n@angular/cli                    18.0.6\r\n@schematics/angular             18.0.6 (cli-only)\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\n```\n\n\n### Anything else?\n\n🍀","Url":"https://github.com/angular/angular-cli/issues/27991","RelatedDescription":"Open issue \"\"Uncaught TypeError\" switching Angular Builder to \"@angular-devkit/build-angular:application\"\" (#27991)"},{"Id":"2388861882","IsPullRequest":true,"CreatedAt":"2024-07-03T15:18:48","Actor":"clydin","Number":"27989","RawContent":null,"Title":"Bump version to \"v18.1.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27989","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.1.0-rc.1\" with changelog.\" (#27989)"},{"Id":"2388751465","IsPullRequest":true,"CreatedAt":"2024-07-03T14:46:21","Actor":"clydin","Number":"27987","RawContent":null,"Title":"docs: release notes for the v18.0.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/27987","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.0.7 release\" (#27987)"},{"Id":"2388805667","IsPullRequest":true,"CreatedAt":"2024-07-03T14:36:29","Actor":"cexbrayat","Number":"27988","RawContent":null,"Title":"feat(@schematics/angular): use isolatedModules in generated project","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nAs 3acb7768317bb05a9cd73fa64e081b5ca0326189 introduced an optimization for projects that use `isolatedModules`, this commit makes projects generated with `ng new` use this option by default.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/27988","RelatedDescription":"Open PR \"feat(@schematics/angular): use isolatedModules in generated project\" (#27988)"},{"Id":"2388652339","IsPullRequest":true,"CreatedAt":"2024-07-03T14:11:10","Actor":"clydin","Number":"27986","RawContent":null,"Title":"Bump version to \"v18.0.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27986","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.0.7\" with changelog.\" (#27986)"},{"Id":"2387689012","IsPullRequest":true,"CreatedAt":"2024-07-03T13:27:33","Actor":"angular-robot","Number":"27983","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `0e6b561` -> `bc2aed3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `956d328` -> `0dcecd0` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `008330a` -> `feaaf01` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`18.0.5` -> `18.0.6`](https://renovatebot.com/diffs/npm/@angular%2fcdk/18.0.5/18.0.6) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `609d9a6` -> `fecdf3d` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `23b9637` -> `c21456e` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `940582b` -> `c43f353` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `dc9a66e` -> `c0587c2` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `b66ae68` -> `bc82fc3` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `20b381c` -> `107bf87` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `918f9c4` -> `608e4d8` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `8d53e15` -> `953f72e` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`18.0.5` -> `18.0.6`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/18.0.5/18.0.6) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `73ee344` -> `162b108` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `fdd7da6` -> `4f33c72` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `2f60866` -> `0196ebf` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `d1cd803` -> `13472a0` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `0ee2dfe` -> `dd5a80a` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `571ce5d` -> `633209f` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `2f05d38` -> `43e8d29` |\n| angular/dev-infra | action | digest | `2f66fc9` -> `9432c0c` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v18.0.6`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1806-gallium-grape-2024-07-03)\n\n[Compare Source](https://togithub.com/angular/components/compare/18.0.5...18.0.6)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e5c5f151c](https://togithub.com/angular/components/commit/e5c5f151cc3a5293f629bfa84bcddb0b391cf268) | fix | **core:** add fallback if ripples get stuck ([#&#8203;29323](https://togithub.com/angular/components/pull/29323)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27983","RelatedDescription":"Closed or merged PR \"build: update angular\" (#27983)"},{"Id":"2385248820","IsPullRequest":true,"CreatedAt":"2024-07-03T13:27:03","Actor":"angular-robot","Number":"27975","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`7.14.1` -> `7.15.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/7.14.1/7.15.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`7.14.1` -> `7.15.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/7.14.1/7.15.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | minor | [`0.22.0` -> `0.23.0`](https://renovatebot.com/diffs/npm/esbuild/0.22.0/0.23.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | dependencies | minor | [`0.22.0` -> `0.23.0`](https://renovatebot.com/diffs/npm/esbuild/0.22.0/0.23.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.22.0` -> `0.23.0`](https://renovatebot.com/diffs/npm/esbuild/0.22.0/0.23.0) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | minor | [`0.22.0` -> `0.23.0`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.22.0/0.23.0) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.22.0` -> `0.23.0`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.22.0/0.23.0) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`5.3.2` -> `5.3.3`](https://renovatebot.com/diffs/npm/vite/5.3.2/5.3.3) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`5.3.2` -> `5.3.3`](https://renovatebot.com/diffs/npm/vite/5.3.2/5.3.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v7.15.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#7150-2024-07-01)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.14.1...v7.15.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[array-type] detect `Readonly<string[]>` case\n\n-   **eslint-plugin:** back-port new rules around empty object types from v8\n\n##### 🩹 Fixes\n\n-   disable `EXPERIMENTAL_useProjectService` in `disabled-type-checked` shared config\n\n-   **eslint-plugin:** \\[no-unsafe-return] differentiate a types-error any from a true any\n\n-   **eslint-plugin:** \\[no-unsafe-call] differentiate a types-error any from a true any\n\n##### ❤️  Thank You\n\n-   auvred\n-   Kim Sang Du\n-   rgehbt\n-   Vinccool96\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v7.15.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#7150-2024-07-01)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v7.14.1...v7.15.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.23.0`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0230)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.22.0...v0.23.0)\n\n***This release deliberately contains backwards-incompatible changes.*** To avoid automatically picking up releases like this, you should either be pinning the exact version of `esbuild` in your `package.json` file (recommended) or be using a version range syntax that only accepts patch upgrades such as `^0.22.0` or `~0.22.0`. See npm's documentation about [semver](https://docs.npmjs.com/cli/v6/using-npm/semver/) for more information.\n\n-   Revert the recent change to avoid bundling dependencies for node ([#&#8203;3819](https://togithub.com/evanw/esbuild/issues/3819))\n\n    This release reverts the recent change in version 0.22.0 that made `--packages=external` the default behavior with `--platform=node`.  The default is now back to `--packages=bundle`.\n\n    I've just been made aware that Amazon doesn't pin their dependencies in their \"AWS CDK\" product, which means that whenever esbuild publishes a new release, many people (potentially everyone?) using their SDK around the world instantly starts using it without Amazon checking that it works first. This change in version 0.22.0 happened to break their SDK. I'm amazed that things haven't broken before this point. This revert attempts to avoid these problems for Amazon's customers. Hopefully Amazon will pin their dependencies in the future.\n\n    In addition, this is probably a sign that esbuild is used widely enough that it now needs to switch to a more complicated release model. I may have esbuild use a beta channel model for further development.\n\n-   Fix preserving collapsed JSX whitespace ([#&#8203;3818](https://togithub.com/evanw/esbuild/issues/3818))\n\n    When transformed, certain whitespace inside JSX elements is ignored completely if it collapses to an empty string. However, the whitespace should only be ignored if the JSX is being transformed, not if it's being preserved. This release fixes a bug where esbuild was previously incorrectly ignoring collapsed whitespace with `--jsx=preserve`. Here is an example:\n\n    ```jsx\n    // Original code\n    <Foo>\n      <Bar />\n    </Foo>\n\n    // Old output (with --jsx=preserve)\n    <Foo><Bar /></Foo>;\n\n    // New output (with --jsx=preserve)\n    <Foo>\n      <Bar />\n    </Foo>;\n    ```\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.3.3`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small533-2024-07-03-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.3.2...v5.3.3)\n\n-   fix: lazily evaluate \\__vite\\_\\_mapDeps files ([#&#8203;17602](https://togithub.com/vitejs/vite/issues/17602)) ([dafff4a](https://togithub.com/vitejs/vite/commit/dafff4a)), closes [#&#8203;17602](https://togithub.com/vitejs/vite/issues/17602)\n-   fix(deps): update all non-major dependencies ([#&#8203;17590](https://togithub.com/vitejs/vite/issues/17590)) ([012490c](https://togithub.com/vitejs/vite/commit/012490c)), closes [#&#8203;17590](https://togithub.com/vitejs/vite/issues/17590)\n-   fix(lib): remove pure CSS dynamic import ([#&#8203;17601](https://togithub.com/vitejs/vite/issues/17601)) ([055f1c1](https://togithub.com/vitejs/vite/commit/055f1c1)), closes [#&#8203;17601](https://togithub.com/vitejs/vite/issues/17601)\n-   fix(proxy): replace changeOrigin changes in 5.3.0 with new rewriteWsOrigin option ([#&#8203;17563](https://togithub.com/vitejs/vite/issues/17563)) ([14c3d49](https://togithub.com/vitejs/vite/commit/14c3d49)), closes [#&#8203;17563](https://togithub.com/vitejs/vite/issues/17563)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27975","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#27975)"},{"Id":"2385167952","IsPullRequest":true,"CreatedAt":"2024-07-03T13:26:44","Actor":"clydin","Number":"27973","RawContent":null,"Title":"feat(@angular/build): support WASM/ES Module integration proposal","State":"closed","Body":"Application builds will now support the direct import of WASM files. The behavior follows the WebAssembly/ES module integration proposal. The usage of this feature requires the ability to use native async/await and top-level await. Due to this requirement, applications must be zoneless to use this new feature. Applications that use Zone.js are currently incompatible and an error will be generated if the feature is used in a Zone.js application. Manual setup of a WASM file is, however, possible in a Zone.js application if WASM usage is required. Further details for manual setup can be found here: https://developer.mozilla.org/en-US/docs/WebAssembly/Loading_and_running\r\n\r\nThe following is a brief example of using a WASM file in the new feature with the integration proposal behavior:\r\n```\r\nimport { multiply } from './example.wasm';\r\n\r\nconsole.log(multiply(4, 5));\r\n```\r\n\r\nNOTE: TypeScript will not automatically understand the types for WASM files. Type definition files will need to be created for each WASM file to allow for an error-free build. These type definition files are specific to each individual WASM file and will either need to be manually created or provided by library authors.\r\n\r\nThe feature relies on an active proposal which may change as it progresses through the standardization process. This may result in behavioral differences between versions.\r\nProposal Details: https://github.com/WebAssembly/esm-integration/tree/main/proposals/esm-integration\r\n\r\nFor more information regarding zoneless applications, you can visit https://angular.dev/guide/experimental/zoneless","Url":"https://github.com/angular/angular-cli/pull/27973","RelatedDescription":"Closed or merged PR \"feat(@angular/build): support WASM/ES Module integration proposal\" (#27973)"},{"Id":"2387932368","IsPullRequest":false,"CreatedAt":"2024-07-03T09:43:50","Actor":"Fluccioni","Number":"27984","RawContent":null,"Title":"Add support for esbuild chunkNames option","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nThe application builder does not provide all the options esbuild does ; I think the possibility to customize further the output location is interesting though.\r\n\r\nAs esbuild propose options to control the file names of automatically generated chunks (https://esbuild.github.io/api/#chunk-names), it could be a nice addition of options available through the application builder schema.\r\n\r\nThe same strategy could maybe be applied with similar `assetNames` option.\n\n### Describe the solution you'd like\n\nTo be able to control it for all chunks, I guess a good location for this templating string would be in the `outputPath` object like\r\n\r\n```json\r\n{\r\n  \"build\": {\r\n    \"executor\": \"\",            \r\n    \"options\": {\r\n      \"outputPath\": {\r\n        \"base\": \"dist\",\r\n        \"browser\": \"prod\",\r\n        \"server\": \"server\",\r\n        \"media\": \"media\",\r\n        \"browserChunkNames\": \"front-[ext]/[name]_[hash]\",\r\n        \"serverChunkNames\": \"example--[hash]\"\r\n      },\r\n  ...\r\n  }\r\n}\r\n```\n\n### Describe alternatives you've considered\n\nI'm currently using the application builder via the @nx/angular:application that, in addition of the cli builder features, add the suport of providing esbuild plugins.\r\n\r\nUnfortunately I didn't manage to find or write a plugin that can infer on the generated files, issues are open on this subject on esbuild to have callbacks such as \"onEmit\" for instance but as there is an existing option for the scenario, better use it.\r\n\r\nThanks for reading.","Url":"https://github.com/angular/angular-cli/issues/27984","RelatedDescription":"Closed issue \"Add support for esbuild chunkNames option\" (#27984)"},{"Id":"2386754451","IsPullRequest":false,"CreatedAt":"2024-07-02T17:27:39","Actor":"MathieuGirard","Number":"27982","RawContent":null,"Title":"Reduce angular uses of file watcher by leveraging folder watcher (ex: ng serve)","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Description\r\n\r\nI keep reaching the ENOSPC watcher errors with angular.\r\n\r\nIt would be nice for angular `ng serve` to be less ressource hungry by reusing folder watchers instead of file watchers. This would also reduce the need for \"file watch filtering\".\r\n\r\n### Describe the solution you'd like\r\n\r\nAccording to inotify man page angular watcher could use folder watches instead of watching file reducing the amount of watcher greatly (reusing a single inotify watcher per watched folder instead of one watcher file actual file).\r\n\r\nThe code would have to do the actual filtering on event reception to known if the item was watched (the event includes a file `name` attribute for folder watch allowing to known which file changed).\r\n\r\n```\r\nNAME         [top](https://www.man7.org/linux/man-pages/man7/inotify.7.html#top_of_page)\r\n       inotify - monitoring filesystem events\r\nDESCRIPTION         [top](https://www.man7.org/linux/man-pages/man7/inotify.7.html#top_of_page)\r\n       The inotify API provides a mechanism for monitoring filesystem\r\n       events.  Inotify can be used to monitor individual files, or to\r\n       monitor directories.  When a directory is monitored, inotify will\r\n       return events for the directory itself, and for files inside the\r\n       directory.\r\n\r\n[...]\r\n\r\nThe name field is present only when an event is returned for a\r\n       file inside a watched directory; it identifies the filename\r\n       within the watched directory.  This filename is null-terminated,\r\n       and may include further null bytes ('\\0') to align subsequent\r\n       reads to a suitable address boundary.\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nThe suggested alternative on the internet is to increase the sysctl limit for watchers at the cost of a kernel memory usage increase.\r\n","Url":"https://github.com/angular/angular-cli/issues/27982","RelatedDescription":"Closed issue \"Reduce angular uses of file watcher by leveraging folder watcher (ex: ng serve)\" (#27982)"},{"Id":"2386323980","IsPullRequest":true,"CreatedAt":"2024-07-02T14:13:04","Actor":"clydin","Number":"27980","RawContent":null,"Title":"build: update @discovery/json-ext to v0.6.0","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27980","RelatedDescription":"Closed or merged PR \"build: update @discovery/json-ext to v0.6.0\" (#27980)"},{"Id":"2386331706","IsPullRequest":false,"CreatedAt":"2024-07-02T14:04:52","Actor":"bryanerayner","Number":"27981","RawContent":null,"Title":"rspack support would be revolutionary","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAs of now, our build process for multiple Angular apps takes more than 12 minutes for each of our 20 apps we maintain for our enterprise product. Who knew that 12 years of Angular app development could get to be pretty big? \r\n\r\nRspack is becoming more stable every day. While it may not be in the interests of the Angular team to support it, it would potentially solve our teams biggest complaint with the framework. What steps would it take to develop an experimental bundler/ build step using rspack? We would be very interested in attempting to build using rspack as it's highly compatible with existing webpack configuration.\n\n### Describe the solution you'd like\n\nWe would like to know how we can start building a rspack variant of the webpack builder\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/27981","RelatedDescription":"Closed issue \"rspack support would be revolutionary\" (#27981)"},{"Id":"2385431644","IsPullRequest":true,"CreatedAt":"2024-07-02T13:33:08","Actor":"angular-robot","Number":"27976","RawContent":null,"Title":"build: update dependency webpack-merge to v6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack-merge](https://togithub.com/survivejs/webpack-merge) | dependencies | major | [`5.10.0` -> `6.0.1`](https://renovatebot.com/diffs/npm/webpack-merge/5.10.0/6.0.1) |\n| [webpack-merge](https://togithub.com/survivejs/webpack-merge) | devDependencies | major | [`5.10.0` -> `6.0.1`](https://renovatebot.com/diffs/npm/webpack-merge/5.10.0/6.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>survivejs/webpack-merge (webpack-merge)</summary>\n\n### [`v6.0.1`](https://togithub.com/survivejs/webpack-merge/blob/HEAD/CHANGELOG.md#601--2024-07-02)\n\n[Compare Source](https://togithub.com/survivejs/webpack-merge/compare/v6.0.0...v6.0.1)\n\n-   Fix - Restore usage of `clone-deep` as there was a corner case where `structuredClone` did not work as expected. [#&#8203;214](https://togithub.com/survivejs/webpack-merge/issues/214)\n\n### [`v6.0.0`](https://togithub.com/survivejs/webpack-merge/blob/HEAD/CHANGELOG.md#600--2024-07-02)\n\n[Compare Source](https://togithub.com/survivejs/webpack-merge/compare/v5.10.0...v6.0.0)\n\n-   Chore - Update internal dependencies. As a result, the package needs at least Node 18 to run.\n-   Chore - Use `structuredClone` over `clone-deep` dependency since it is included to Node 18 or above. [#&#8203;214](https://togithub.com/survivejs/webpack-merge/issues/214)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27976","RelatedDescription":"Closed or merged PR \"build: update dependency webpack-merge to v6\" (#27976)"},{"Id":"2386227322","IsPullRequest":true,"CreatedAt":"2024-07-02T13:32:50","Actor":"clydin","Number":"27979","RawContent":null,"Title":"fix(@angular/build): support import attributes in JavaScript transformer","State":"closed","Body":"The babel-based JavaScript transformer currently requires a syntax plugin to support import attributes. Import attributes are otherwise supported in application code. However, in production builds the JavaScript transformations such as the build optimizer passes would fail on code that contain any import attributes. The inclusion of the babel syntax plugin removes this problem. Once babel provides built-in support for this syntax feature, the plugin can be removed.\r\n\r\n(cherry picked from commit 2dc51d5c9cd1c40dbd97a714e3bb4d17e51c27ae)","Url":"https://github.com/angular/angular-cli/pull/27979","RelatedDescription":"Closed or merged PR \"fix(@angular/build): support import attributes in JavaScript transformer\" (#27979)"},{"Id":"2386197403","IsPullRequest":true,"CreatedAt":"2024-07-02T13:20:58","Actor":"alan-agius4","Number":"27978","RawContent":null,"Title":"fix(@angular-devkit/build-angular): rollback terser to `5.29.2`","State":"closed","Body":"More information in terser/terser#1539\r\n\r\nCloses #27866","Url":"https://github.com/angular/angular-cli/pull/27978","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): rollback terser to `5.29.2`\" (#27978)"},{"Id":"2385248511","IsPullRequest":true,"CreatedAt":"2024-07-02T13:13:49","Actor":"angular-robot","Number":"27974","RawContent":null,"Title":"build: update dependency typescript to v5.5.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/TypeScript)) | devDependencies | patch | [`5.5.2` -> `5.5.3`](https://renovatebot.com/diffs/npm/typescript/5.5.2/5.5.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/TypeScript (typescript)</summary>\n\n### [`v5.5.3`](https://togithub.com/microsoft/TypeScript/releases/tag/v5.5.3): TypeScript 5.5.3\n\n[Compare Source](https://togithub.com/Microsoft/TypeScript/compare/v5.5.2...v5.5.3)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/).\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for TypeScript v5.5.3 (Stable)](https://togithub.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=is%3Aissue+milestone%3A%22TypeScript+5.5.3%22+is%3Aclosed+).\n-   [fixed issues query for TypeScript v5.5.2 (Stable)](https://togithub.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=is%3Aissue+milestone%3A%22TypeScript+5.5.2%22+is%3Aclosed+).\n-   [fixed issues query for TypeScript v5.5.1 (RC)](https://togithub.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=is%3Aissue+milestone%3A%22TypeScript+5.5.1%22+is%3Aclosed+).\n-   [fixed issues query for TypeScript v5.5.0 (Beta)](https://togithub.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=is%3Aissue+milestone%3A%22TypeScript+5.5.0%22+is%3Aclosed+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27974","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v5.5.3\" (#27974)"},{"Id":"2386188157","IsPullRequest":true,"CreatedAt":"2024-07-02T13:11:08","Actor":"alan-agius4","Number":"27977","RawContent":null,"Title":"fix(@angular-devkit/build-angular): rollback terser to `5.29.2`","State":"closed","Body":"More information in https://github.com/terser/terser/issues/1539\r\n\r\nCloses #27866","Url":"https://github.com/angular/angular-cli/pull/27977","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): rollback terser to `5.29.2`\" (#27977)"},{"Id":"2384505448","IsPullRequest":true,"CreatedAt":"2024-07-02T13:03:46","Actor":"clydin","Number":"27971","RawContent":null,"Title":"fix(@angular/build): support import attributes in JavaScript transformer","State":"closed","Body":"The babel-based JavaScript transformer currently requires a syntax plugin to support import attributes. Import attributes are otherwise supported in application code. However, in production builds the JavaScript transformations such as the build optimizer passes would fail on code that contain any import attributes. The inclusion of the babel syntax plugin removes this problem. Once babel provides built-in support for this syntax feature, the plugin can be removed.","Url":"https://github.com/angular/angular-cli/pull/27971","RelatedDescription":"Closed or merged PR \"fix(@angular/build): support import attributes in JavaScript transformer\" (#27971)"},{"Id":"2383756526","IsPullRequest":true,"CreatedAt":"2024-07-01T22:21:22","Actor":"cexbrayat","Number":"27970","RawContent":null,"Title":"test: re-enable localize warning check","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe: test\r\n\r\n## What is the new behavior?\r\n\r\nIt can be re-enabled now that https://github.com/angular/angular/pull/56300 have been released in v18.1.0-next.2\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/27970","RelatedDescription":"Closed or merged PR \"test: re-enable localize warning check\" (#27970)"},{"Id":"2384720004","IsPullRequest":true,"CreatedAt":"2024-07-01T21:09:31","Actor":"clydin","Number":"27972","RawContent":null,"Title":"fix(@angular/build): allow top-level await in zoneless applications","State":"closed","Body":"With the potential future introduction of features such as WASM/ES module integration and the experimental chunk optimizer, the need to restrict top-level await usage is no longer needed and a blocker for new features. As such, top-level await will now be available if an application has been configured to be zoneless.\r\nZoneless Angular is currently experimental and more details can be found here: https://angular.dev/guide/experimental/zoneless","Url":"https://github.com/angular/angular-cli/pull/27972","RelatedDescription":"Closed or merged PR \"fix(@angular/build): allow top-level await in zoneless applications\" (#27972)"},{"Id":"2383038051","IsPullRequest":true,"CreatedAt":"2024-07-01T13:13:59","Actor":"angular-robot","Number":"27967","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27967","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#27967)"},{"Id":"2381497264","IsPullRequest":true,"CreatedAt":"2024-07-01T13:13:48","Actor":"angular-robot","Number":"27965","RawContent":null,"Title":"build: update github/codeql-action action to v3.25.11","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v3.25.10` -> `v3.25.11` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.25.11`](https://togithub.com/github/codeql-action/compare/v3.25.10...v3.25.11)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v3.25.10...v3.25.11)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27965","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.25.11\" (#27965)"},{"Id":"2383665453","IsPullRequest":true,"CreatedAt":"2024-07-01T13:11:59","Actor":"alan-agius4","Number":"27969","RawContent":null,"Title":"fix(@angular/build): reduce the number of max workers to available CPUs minus one","State":"closed","Body":"This commit reduces the maximum number of workers to the available CPUs minus 1. This adjustment ensures that some resources are left for the main thread, preventing it from being starved of CPU cycles.\r\n\r\nFor more context see: https://github.com/angular/angular-cli/issues/27167#issuecomment-2199987874\r\n","Url":"https://github.com/angular/angular-cli/pull/27969","RelatedDescription":"Closed or merged PR \"fix(@angular/build): reduce the number of max workers to available CPUs minus one\" (#27969)"},{"Id":"2381929339","IsPullRequest":true,"CreatedAt":"2024-07-01T12:14:16","Actor":"angular-robot","Number":"27966","RawContent":null,"Title":"build: update all non-major dependencies - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/confirm/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`3.1.11` -> `3.1.12`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/3.1.11/3.1.12) |\n| [@inquirer/confirm](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/confirm/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`3.1.11` -> `3.1.12`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/3.1.11/3.1.12) |\n| [@inquirer/prompts](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/prompts/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`5.0.7` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/5.0.7/5.1.0) |\n| [@inquirer/prompts](https://togithub.com/SBoudrias/Inquirer.js/blob/master/packages/prompts/README.md) ([source](https://togithub.com/SBoudrias/Inquirer.js)) | devDependencies | minor | [`5.0.7` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/5.0.7/5.1.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | minor | [`0.21.5` -> `0.22.0`](https://renovatebot.com/diffs/npm/esbuild/0.21.5/0.22.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | dependencies | minor | [`0.21.5` -> `0.22.0`](https://renovatebot.com/diffs/npm/esbuild/0.21.5/0.22.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.21.5` -> `0.22.0`](https://renovatebot.com/diffs/npm/esbuild/0.21.5/0.22.0) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | minor | [`0.21.5` -> `0.22.0`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.21.5/0.22.0) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | minor | [`0.21.5` -> `0.22.0`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.21.5/0.22.0) |\n| [istanbul-lib-instrument](https://istanbul.js.org/) ([source](https://togithub.com/istanbuljs/istanbuljs/tree/HEAD/packages/istanbul-lib-instrument)) | dependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/istanbul-lib-instrument/6.0.2/6.0.3) |\n| [istanbul-lib-instrument](https://istanbul.js.org/) ([source](https://togithub.com/istanbuljs/istanbuljs/tree/HEAD/packages/istanbul-lib-instrument)) | devDependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/istanbul-lib-instrument/6.0.2/6.0.3) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.38` -> `8.4.39`](https://renovatebot.com/diffs/npm/postcss/8.4.38/8.4.39) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | patch | [`8.4.38` -> `8.4.39`](https://renovatebot.com/diffs/npm/postcss/8.4.38/8.4.39) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v3.1.12`](https://togithub.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@3.1.11...@inquirer/confirm@3.1.12)\n\n[Compare Source](https://togithub.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@3.1.11...@inquirer/confirm@3.1.12)\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.22.0`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0220)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.21.5...v0.22.0)\n\n**This release deliberately contains backwards-incompatible changes.** To avoid automatically picking up releases like this, you should either be pinning the exact version of `esbuild` in your `package.json` file (recommended) or be using a version range syntax that only accepts patch upgrades such as `^0.21.0` or `~0.21.0`. See npm's documentation about [semver](https://docs.npmjs.com/cli/v6/using-npm/semver/) for more information.\n\n-   Omit packages from bundles by default when targeting node ([#&#8203;1874](https://togithub.com/evanw/esbuild/issues/1874), [#&#8203;2830](https://togithub.com/evanw/esbuild/issues/2830), [#&#8203;2846](https://togithub.com/evanw/esbuild/issues/2846), [#&#8203;2915](https://togithub.com/evanw/esbuild/issues/2915), [#&#8203;3145](https://togithub.com/evanw/esbuild/issues/3145), [#&#8203;3294](https://togithub.com/evanw/esbuild/issues/3294), [#&#8203;3323](https://togithub.com/evanw/esbuild/issues/3323), [#&#8203;3582](https://togithub.com/evanw/esbuild/issues/3582), [#&#8203;3809](https://togithub.com/evanw/esbuild/issues/3809), [#&#8203;3815](https://togithub.com/evanw/esbuild/issues/3815))\n\n    This breaking change is an experiment. People are commonly confused when using esbuild to bundle code for node (i.e. for `--platform=node`) because some packages may not be intended for bundlers, and may use node-specific features that don't work with a bundler. Even though esbuild's \"getting started\" instructions say to use `--packages=external` to work around this problem, many people don't read the documentation and don't do this, and are then confused when it doesn't work. So arguably this is a bad default behavior for esbuild to have if people keep tripping over this.\n\n    With this release, esbuild will now omit packages from the bundle by default when the platform is `node` (i.e. the previous behavior of `--packages=external` is now the default in this case). *Note that your dependencies must now be present on the file system when your bundle is run.* If you don't want this behavior, you can do `--packages=bundle` to allow packages to be included in the bundle (i.e. the previous default behavior). Note that `--packages=bundle` doesn't mean all packages are bundled, just that packages are allowed to be bundled. You can still exclude individual packages from the bundle using `--external:` even when `--packages=bundle` is present.\n\n    The `--packages=` setting considers all import paths that \"look like\" package imports in the original source code to be package imports. Specifically import paths that don't start with a path segment of `/` or `.` or `..` are considered to be package imports. The only two exceptions to this rule are [subpath imports](https://nodejs.org/api/packages.html#subpath-imports) (which start with a `#` character) and TypeScript path remappings via `paths` and/or `baseUrl` in `tsconfig.json` (which are applied first).\n\n-   Drop support for older platforms ([#&#8203;3802](https://togithub.com/evanw/esbuild/issues/3802))\n\n    This release drops support for the following operating systems:\n\n    -   Windows 7\n    -   Windows 8\n    -   Windows Server 2008\n    -   Windows Server 2012\n\n    This is because the Go programming language dropped support for these operating system versions in [Go 1.21](https://go.dev/doc/go1.21#windows), and this release updates esbuild from Go 1.20 to Go 1.22.\n\n    Note that this only affects the binary esbuild executables that are published to the `esbuild` npm package. It's still possible to compile esbuild's source code for these older operating systems. If you need to, you can compile esbuild for yourself using an older version of the Go compiler (before Go version 1.21). That might look something like this:\n\n        git clone https://github.com/evanw/esbuild.git\n        cd esbuild\n        go build ./cmd/esbuild\n        ./esbuild.exe --version\n\n    In addition, this release increases the minimum required node version for esbuild's JavaScript API from node 12 to node 18. Node 18 is the oldest version of node that is still being supported (see node's [release schedule](https://nodejs.org/en/about/previous-releases) for more information). This increase is because of an incompatibility between the JavaScript that the Go compiler generates for the `esbuild-wasm` package and versions of node before node 17.4 (specifically the `crypto.getRandomValues` function).\n\n-   Update `await using` behavior to match TypeScript\n\n    TypeScript 5.5 subtly changes the way `await using` behaves. This release updates esbuild to match these changes in TypeScript. You can read more about these changes in [microsoft/TypeScript#58624](https://togithub.com/microsoft/TypeScript/pull/58624).\n\n-   Allow `es2024` as a target environment\n\n    The ECMAScript 2024 specification was just approved, so it has been added to esbuild as a possible compilation target. You can read more about the features that it adds here: <https://2ality.com/2024/06/ecmascript-2024.html>. The only addition that's relevant for esbuild is the regular expression `/v` flag. With `--target=es2024`, regular expressions that use the `/v` flag will now be passed through untransformed instead of being transformed into a call to `new RegExp`.\n\n-   Publish binaries for OpenBSD on 64-bit ARM ([#&#8203;3665](https://togithub.com/evanw/esbuild/issues/3665), [#&#8203;3674](https://togithub.com/evanw/esbuild/pull/3674))\n\n    With this release, you should now be able to install the `esbuild` npm package in OpenBSD on 64-bit ARM, such as on an Apple device with an M1 chip.\n\n    This was contributed by [@&#8203;ikmckenz](https://togithub.com/ikmckenz).\n\n-   Publish binaries for WASI (WebAssembly System Interface) preview 1 ([#&#8203;3300](https://togithub.com/evanw/esbuild/issues/3300), [#&#8203;3779](https://togithub.com/evanw/esbuild/pull/3779))\n\n    The upcoming WASI (WebAssembly System Interface) standard is going to be a way to run WebAssembly outside of a JavaScript host environment. In this scenario you only need a `.wasm` file without any supporting JavaScript code. Instead of JavaScript providing the APIs for the host environment, the WASI standard specifies a \"system interface\" that WebAssembly code can access directly (e.g. for file system access).\n\n    Development versions of the WASI specification are being released using preview numbers. The people behind WASI are currently working on preview 2 but the Go compiler has [released support for preview 1](https://go.dev/blog/wasi), which from what I understand is now considered an unsupported legacy release. However, some people have requested that esbuild publish binary executables that support WASI preview 1 so they can experiment with them.\n\n    This release publishes esbuild precompiled for WASI preview 1 to the `@esbuild/wasi-preview1` package on npm (specifically the file `@esbuild/wasi-preview1/esbuild.wasm`). This binary executable has not been tested and won't be officially supported, as it's for an old preview release of a specification that has since moved in another direction. If it works for you, great! If not, then you'll likely have to wait for the ecosystem to evolve before using esbuild with WASI. For example, it sounds like perhaps WASI preview 1 doesn't include support for opening network sockets so esbuild's local development server is unlikely to work with WASI preview 1.\n\n-   Warn about `onResolve` plugins not setting a path ([#&#8203;3790](https://togithub.com/evanw/esbuild/issues/3790))\n\n    Plugins that return values from `onResolve` without resolving the path (i.e. without setting either `path` or `external: true`) will now cause a warning. This is because esbuild only uses return values from `onResolve` if it successfully resolves the path, and it's not good for invalid input to be silently ignored.\n\n-   Add a new Go API for running the CLI with plugins ([#&#8203;3539](https://togithub.com/evanw/esbuild/pull/3539))\n\n    With esbuild's Go API, you can now call `cli.RunWithPlugins(args, plugins)` to pass an array of esbuild plugins to be used during the build process. This allows you to create a CLI that behaves similarly to esbuild's CLI but with additional Go plugins enabled.\n\n    This was contributed by [@&#8203;edewit](https://togithub.com/edewit).\n\n</details>\n\n<details>\n<summary>istanbuljs/istanbuljs (istanbul-lib-instrument)</summary>\n\n### [`v6.0.3`](https://togithub.com/istanbuljs/istanbuljs/blob/HEAD/packages/istanbul-lib-instrument/CHANGELOG.md#603-2024-06-30)\n\n[Compare Source](https://togithub.com/istanbuljs/istanbuljs/compare/istanbul-lib-instrument-v6.0.2...istanbul-lib-instrument-v6.0.3)\n\n##### Bug Fixes\n\n-   allow use of importAttributes Babel parser plugin ([#&#8203;786](https://togithub.com/istanbuljs/istanbuljs/issues/786)) ([a44a124](https://togithub.com/istanbuljs/istanbuljs/commit/a44a124a600a798165f157d643f1fdb095c74f95))\n\n</details>\n\n<details>\n<summary>postcss/postcss (postcss)</summary>\n\n### [`v8.4.39`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#8439)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.38...8.4.39)\n\n-   Fixed `CssSyntaxError` types (by [@&#8203;romainmenke](https://togithub.com/romainmenke)).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy40MTAuMSIsInVwZGF0ZWRJblZlciI6IjM3LjQxMC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/27966","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies - autoclosed\" (#27966)"},{"Id":"2383078100","IsPullRequest":true,"CreatedAt":"2024-07-01T11:44:11","Actor":"alan-agius4","Number":"27968","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/27968","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#27968)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2389525861","IsPullRequest":true,"CreatedAt":"2024-07-03T21:36:14","Actor":"kseamon","Number":"29380","RawContent":null,"Title":"fix(cdk-experimental/popover-edit): Fix dialog role and allow aria label on popup","State":"open","Body":"Use the correct role attribute and allow setting aria label on the dialog/popup element.\r\n\r\nSee internal ticket 349939031","Url":"https://github.com/angular/components/pull/29380","RelatedDescription":"Open PR \"fix(cdk-experimental/popover-edit): Fix dialog role and allow aria label on popup\" (#29380)"},{"Id":"2389166945","IsPullRequest":true,"CreatedAt":"2024-07-03T17:56:59","Actor":"DBowen33","Number":"29379","RawContent":null,"Title":"fix(mat/paginator): fix focus issues with paginator buttons","State":"open","Body":"NOTE: This is a rework of https://github.com/angular/components/pull/29006, did a blur listener this time around.\r\n\r\nANOTHER NOTE: Not the biggest fan of the setTimeout's in lines 243 and 247, but couldn't figure out a way to focus on the next/previous buttons since the lifecycle hook to enable the buttons from a disabled state doesn't finish in time. Open to suggestions on that part.\r\n\r\nDEMO: https://screencast.googleplex.com/cast/NTI1MTE3MjQ5NDQ3NTI2NHw4YWYyYWUwMy01ZA\r\n\r\nfixes b/286098030","Url":"https://github.com/angular/components/pull/29379","RelatedDescription":"Open PR \"fix(mat/paginator): fix focus issues with paginator buttons\" (#29379)"},{"Id":"2384470455","IsPullRequest":false,"CreatedAt":"2024-07-03T16:33:28","Actor":"clamli","Number":"29359","RawContent":null,"Title":"bug(MatChipGrid): Focus order is not logical","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMultiple labels are added in a custom grid. The order in which focusable elements receive focus in the grid is not logical. The RIGHT and LEFT ARROW keys move right and left, but the DOWN and UP ARROW keys also move right and left. This is acceptable for users who can see the structure, but for screen reader users it interferes with understanding the grid structure.\r\n\r\nEnsure that the order in which elements receive keyboard focus follows a meaningful and logical sequence. DOWN ARROW and UP ARROW should only move between logical rows of the filter grid, as in the [ARIA APG pattern](https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/run?file=package.json\r\nSteps to reproduce:\r\n1. Navigate through the chips with input example\r\n2. Notice that RIGHT and LEFT ARROW keys have the same effect as the DOWN and UP ARROW keys\r\n\n\n### Expected Behavior\n\nDOWN and UP ARROW keys should move the focus from\r\n\r\nLemon -> Lime -> Apple\n\n### Actual Behavior\n\nDOWN and UP ARROW keys moves the focus from\r\n\r\nLemon -> Close icon (Lemon) -> Lime -> Close icon (Lime) -> Apple -> Close icon (Apple)\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/29359","RelatedDescription":"Closed issue \"bug(MatChipGrid): Focus order is not logical\" (#29359)"},{"Id":"2385802516","IsPullRequest":true,"CreatedAt":"2024-07-03T16:33:27","Actor":"crisbeto","Number":"29364","RawContent":null,"Title":"fix(material/chips): navigate between rows on up/down arrow","State":"closed","Body":"Currently the up/down arrows behave in the same way as left/right, however that's incorrect based on [the reference implementation](https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label) which shows them navigating between the rows.\r\n\r\nThese changes update the logic in the chip grid so that it matches the expected behavior.\r\n\r\nFixes #29359.","Url":"https://github.com/angular/components/pull/29364","RelatedDescription":"Closed or merged PR \"fix(material/chips): navigate between rows on up/down arrow\" (#29364)"},{"Id":"2387369618","IsPullRequest":false,"CreatedAt":"2024-07-03T15:04:20","Actor":"sebastian-altamirano","Number":"29369","RawContent":null,"Title":"bug(MatCheckbox/MatSlideToggle): the component is included in the form control validators when using Reactive Forms","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nI don't know if this behavior was present in previous versions, but I'm sure it happens in Angular v17 as well because that's where I first reproduced it.\n\n### Description\n\nWhen using `MatCheckbox` or `MatSlideToggle` with Reactive Forms (let's say we are using it with a `FormControl` named `control`), when one inspects `control.validator` it always contains an array with at least one validation function, even if `control` has no validator defined.\r\n\r\nIf we set a breakpoint in the `_setValidators` method of `AbstractControlDirective` we will see that it receives an instance of `_MatCheckbox`/`MatSlideToggle` (see screenshot).\r\n\r\n![debugger](https://github.com/angular/components/assets/38230545/a1379572-e219-4648-8938-6d65d6c74eee)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-xpcrvu\r\nSteps to reproduce:\r\n1. Check the console logs to verify what is described in the description.\r\n\n\n### Expected Behavior\n\n`checkboxControl.validator` and `slideToggleControl.validator` must be `null`.\n\n### Actual Behavior\n\n`checkboxControl.validator`/`slideToggleControl.validator` are `[compose(control) { ... }]` (after the view has been initialized) when using `MatCheckbox`/`MatSlideToggle` with `FormControlDirective`.\n\n### Environment\n\n```\r\n@angular-devkit/architect       0.1800.6\r\n@angular-devkit/build-angular   18.0.6\r\n@angular-devkit/core            18.0.6\r\n@angular-devkit/schematics      18.0.6\r\n@angular/cli                    18.0.6\r\n@schematics/angular             18.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\r\n```","Url":"https://github.com/angular/components/issues/29369","RelatedDescription":"Closed issue \"bug(MatCheckbox/MatSlideToggle): the component is included in the form control validators when using Reactive Forms\" (#29369)"},{"Id":"2387877117","IsPullRequest":false,"CreatedAt":"2024-07-03T15:01:43","Actor":"haigha106","Number":"29371","RawContent":null,"Title":"feature(MENU/SELECT): dropdown background on dark theme to similar to app background","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nthe dropdown background colour for the Menu (--mat-menu-container-color #221e21 ) and Select components (--mat-select-panel-background-color #221e21) on a dark theme are similar the the application background color as defined by the --mat-app-background-color css variable (#1e1a1d) as shown on the images below, these dropdowns are therefore hard to distinguish from the page background\r\n\r\nusing any dark theme\r\n\r\nhttps://material.angular.io/components/menu/overview \r\n\r\n![image](https://github.com/angular/components/assets/16877173/f68996cb-e019-48f0-9187-c663da9d64c3)\r\n\r\nhttps://material.angular.io/components/select/overview \r\n\r\n![image](https://github.com/angular/components/assets/16877173/1ae1649a-01d4-4c3a-bb66-f6e053da7829)\r\n\n\n### Reproduction\n\nbehaviour can be seen on the Angular Material website\r\n\n\n### Expected Behavior\n\nthe dropdowns backgrounds lightened slightly to stand out more from the page background\n\n### Actual Behavior\n\nthe dropdowns backgrounds are too close to the app background colour\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/29371","RelatedDescription":"Closed issue \"feature(MENU/SELECT): dropdown background on dark theme to similar to app background\" (#29371)"},{"Id":"2388372686","IsPullRequest":true,"CreatedAt":"2024-07-03T11:21:04","Actor":"crisbeto","Number":"29378","RawContent":null,"Title":"Update next branch to reflect new release-train \"v18.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v18.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/29378","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v18.2.0-next.0\".\" (#29378)"},{"Id":"2388364522","IsPullRequest":true,"CreatedAt":"2024-07-03T11:18:47","Actor":"crisbeto","Number":"29377","RawContent":null,"Title":"Bump version to \"v18.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29377","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.1.0-rc.0\" with changelog.\" (#29377)"},{"Id":"2388346507","IsPullRequest":true,"CreatedAt":"2024-07-03T11:10:23","Actor":"crisbeto","Number":"29376","RawContent":null,"Title":"docs: release notes for the v18.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29376","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.0.6 release\" (#29376)"},{"Id":"2388340422","IsPullRequest":true,"CreatedAt":"2024-07-03T11:05:02","Actor":"crisbeto","Number":"29375","RawContent":null,"Title":"Bump version to \"v18.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29375","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.0.6\" with changelog.\" (#29375)"},{"Id":"2388206378","IsPullRequest":false,"CreatedAt":"2024-07-03T09:58:51","Actor":"marklagendijk","Number":"29374","RawContent":null,"Title":"feat(system-level-variables): Allow calling component mixins without specific theme","State":"open","Body":"### Feature Description\r\n\r\nSystem level CSS variables are awesome. They give full control over theming:\r\n* Theme variable values are available at runtime.\r\n* Theme variable values can be adjusted at runtime.\r\n* Changing the entire theme is just a matter of supplying different values for the `sys-` variables.\r\n* Using any theme variable anywhere in the app can be done using the CSS variables. No need for importing any SASS logic from `@angular/material`.\r\n\r\nDefining and using a theme is as simple as:\r\n```scss\r\n@use \"@angular/material\" as mat;\r\n\r\n$theme: mat.define-theme(\r\n  (\r\n    color: (\r\n      theme-type: light,\r\n      primary: mat.$cyan-palette,\r\n      tertiary: mat.$magenta-palette,\r\n      use-system-variables: true,\r\n    ),\r\n    typography: (\r\n      use-system-variables: true,\r\n    ),\r\n  )\r\n);\r\n\r\nhtml {\r\n  @include mat.system-level-colors($theme);\r\n  @include mat.system-level-typography($theme);\r\n}\r\n```\r\n\r\nWith this one can easily define a bunch of such defined themes, and then load one based on user settings. Alternatively a backend endpoint could render the CSS file with the `sys-` variables.\r\n\r\n## The issue\r\nEverything in Angular Material nicely supports system-level themes, except the component theming mixins. \r\nWe still are still required to do something like:\r\n```scss\r\nhtml {\r\n    @include mat.all-component-themes($theme);\r\n}\r\n```\r\n\r\nThis is not nice, because we now have generic styling code that needs to use a specific theme. \r\n\r\nA solution would be to allow passing something like this:\r\n```scss\r\nhtml {\r\n  @include mat.all-component-themes((use-system-variables: true));\r\n  //Or\r\n  @include mat.all-component-themes(mat.$system-level-theme);\r\n}\r\n```\r\n\r\n### Workaround\r\nCreate your own `$system-level-theme`, and use it:\r\n```scss\r\nhtml {\r\n  $system-level-theme: mat.define-theme(\r\n    (\r\n      color: (\r\n        use-system-variables: true,\r\n      ),\r\n      typography: (\r\n        use-system-variables: true,\r\n      ),\r\n    )\r\n  );\r\n  @include mat.all-component-themes($system-level-theme);\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\nEasy and clean theming, with minimal theme files.\r\nI'm not sure whether the current workaround is 'ergonomic' enough. If it is, it should at least be added to the documentation.\r\n\r\n","Url":"https://github.com/angular/components/issues/29374","RelatedDescription":"Open issue \"feat(system-level-variables): Allow calling component mixins without specific theme\" (#29374)"},{"Id":"2388128114","IsPullRequest":true,"CreatedAt":"2024-07-03T09:21:03","Actor":"lindoRR-07","Number":"29373","RawContent":null,"Title":"docs-bug(mat-table): Example suggesting to use max-width to set column width is misleading","State":"open","Body":"The fix is to use the width property instead of max-width since this can be misleading as though the width will never exceed the max-width provided.\r\n\r\nFixes #29294","Url":"https://github.com/angular/components/pull/29373","RelatedDescription":"Open PR \"docs-bug(mat-table): Example suggesting to use max-width to set column width is misleading\" (#29373)"},{"Id":"2388049433","IsPullRequest":true,"CreatedAt":"2024-07-03T08:46:15","Actor":"crisbeto","Number":"29372","RawContent":null,"Title":"refactor(material/button): simplify structural styles","State":"open","Body":"Simplifies the structural styles for the button to make them simpler and easier to maintain.","Url":"https://github.com/angular/components/pull/29372","RelatedDescription":"Open PR \"refactor(material/button): simplify structural styles\" (#29372)"},{"Id":"2387856852","IsPullRequest":true,"CreatedAt":"2024-07-03T07:11:42","Actor":"crisbeto","Number":"29370","RawContent":null,"Title":"fix(cdk/drag-drop): reset pointer events on descendants","State":"open","Body":"When we create the preview and placeholder, we set `pointer-events: none` on them so they don't interfere with the `elementFromPoint` calls, however descendants of the element could be resetting it back to `auto` for themselves. These changes update the reset to prevent it from happening.","Url":"https://github.com/angular/components/pull/29370","RelatedDescription":"Open PR \"fix(cdk/drag-drop): reset pointer events on descendants\" (#29370)"},{"Id":"2387230462","IsPullRequest":true,"CreatedAt":"2024-07-03T05:46:51","Actor":"mmalerba","Number":"29368","RawContent":null,"Title":"ci: fix lint issue","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29368","RelatedDescription":"Closed or merged PR \"ci: fix lint issue\" (#29368)"},{"Id":"2386927345","IsPullRequest":false,"CreatedAt":"2024-07-02T18:52:31","Actor":"Aljumaily","Number":"29367","RawContent":null,"Title":"bug(M3): theme not being applied on mat-menu and mat-option","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have the following working theme switcher code:\r\n\r\n```\r\n@use '@angular/material' as mat;\r\n@import '@angular/cdk/overlay-prebuilt.css'; //copied it from a random place.\r\n\r\n@mixin patch-menu-colour($theme) {\r\n  @if mat.get-theme-type($theme)==dark {\r\n\r\n    .mat-mdc-menu-panel,\r\n    .mat-mdc-menu-item-text,\r\n    .mat-mdc-menu-item,\r\n    .mat-mdc-menu-content {\r\n      --mat-menu-container-color: #00ff00 !important;\r\n      background-color: var(--mat-menu-container-color) !important;\r\n    }\r\n  }\r\n\r\n  @else {\r\n\r\n    .mat-mdc-menu-panel,\r\n    .mat-mdc-menu-item-text,\r\n    .mat-mdc-menu-item,\r\n    .mat-mdc-menu-content {\r\n      --mat-menu-container-color: #ff00ff;\r\n      background-color: var(--mat-menu-container-color) !important;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n$light-theme: mat.define-theme(( //\r\n      color: ( //\r\n        theme-type: light,\r\n        primary: mat.$azure-palette,\r\n        tertiary: mat.$blue-palette,\r\n      ),\r\n      typography: ( //\r\n        plain-family: \"Arial\",\r\n        brand-family: \"Arial\",\r\n        regular-weight: \"Arial\",\r\n      ),\r\n    ));\r\n\r\n$dark-theme: mat.define-theme(( //\r\n      color: ( //\r\n        theme-type: dark,\r\n        primary: mat.$magenta-palette,\r\n        tertiary: mat.$violet-palette,\r\n      ),\r\n      typography: ( //\r\n        plain-family: \"Playwrite US Modern\",\r\n        brand-family: \"Playwrite US Modern\",\r\n        regular-weight: \"Playwrite US Modern\",\r\n      ),\r\n    ));\r\n\r\n@include mat.core();\r\n@include mat.color-variants-backwards-compatibility($light-theme);\r\n\r\n:root {\r\n  @include mat.all-component-themes($light-theme);\r\n  @include mat.all-component-typographies($light-theme);\r\n  @include mat.system-level-typography($light-theme);\r\n  @include mat.system-level-colors($light-theme);\r\n  @include patch-menu-colour($light-theme);\r\n}\r\n\r\n.light-theme {\r\n  @include mat.system-level-typography($light-theme);\r\n  @include mat.all-component-typographies($light-theme);\r\n  @include mat.system-level-typography($light-theme);\r\n  @include patch-menu-colour($light-theme);\r\n}\r\n\r\n.dark-theme {\r\n\r\n  @include mat.all-component-colors($dark-theme);\r\n  @include mat.system-level-typography($dark-theme);\r\n  @include mat.all-component-typographies($dark-theme);\r\n  @include mat.system-level-colors($dark-theme);\r\n  @include mat.system-level-typography($dark-theme);\r\n  @include mat.system-level-colors($dark-theme);\r\n  @include patch-menu-colour($dark-theme);\r\n}\r\n```\r\n\r\nAll of the `mat-...` work by default except `mat-menu` and `mat-option`. \r\n\r\nI create a custom mixin to manually update the colour of `mat-menu` but it only works for the light theme because it is placed in `:root{ }`.  Otherwise, it will not be triggered. All of the packages are up to date and no errors occur. The html code used is:\r\n\r\n```\r\n<div ngClass=\"dark-theme\">\r\n  <mat-menu #langMenu=\"matMenu\" color=\"primary\" >\r\n    <button\r\n      mat-menu-item\r\n      (click)=\"changeLanguage(language)\"\r\n      name=\"languageSelector\"\r\n      yPosition=\"below\"\r\n      *ngFor=\"let language of languages\"\r\n    >\r\n      <mat-icon [svgIcon]=\"language.icon\"></mat-icon>\r\n      <span>{{ language.text }}</span>\r\n    </button>\r\n  </mat-menu>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Select an option</mat-label>\r\n    <mat-select>\r\n      <mat-option>None</mat-option>\r\n      <mat-option value=\"option1\">Option 1</mat-option>\r\n      <mat-option value=\"option2\">Option 2</mat-option>\r\n      <mat-option value=\"option3\">Option 3</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n```\r\n\r\n\n\n### Reproduction\n\nThere is no StackBlitz link because the link of the documentation doesn't work with Angular 18.0.6.\n\n### Expected Behavior\n\nThe expected behaviour is to have both `mat-menu` and `mat-option` to follow automatically the theme, without the need of custom mixins.\n\n### Actual Behavior\n\nThe `mat-menu` is updated once because the mixin call was placed in `:root{}`, and `mat-option` just doesn't work.\r\n\r\n<img width=\"177\" alt=\"mat-menu\" src=\"https://github.com/angular/components/assets/44656681/1ec565a7-8673-4ef6-bdff-96c47aa2ed03\">\r\n<img width=\"211\" alt=\"mat-option\" src=\"https://github.com/angular/components/assets/44656681/917a9aea-6267-436c-bdf5-8d7fafd9dc4e\">\r\n\n\n### Environment\n\nAngular CLI: 18.0.6\r\nNode: 20.14.0\r\nPackage Manager: npm 10.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 18.0.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1800.6\r\n@angular-devkit/build-angular   18.0.6\r\n@angular-devkit/core            18.0.6\r\n@angular-devkit/schematics      18.0.6\r\n@angular/cli                    18.0.6\r\n@schematics/angular             18.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.4.5\r\nzone.js                         0.14.7\r\n","Url":"https://github.com/angular/components/issues/29367","RelatedDescription":"Open issue \"bug(M3): theme not being applied on mat-menu and mat-option\" (#29367)"},{"Id":"2383211292","IsPullRequest":true,"CreatedAt":"2024-07-02T17:06:49","Actor":"crisbeto","Number":"29357","RawContent":null,"Title":"refactor(material/chips): simplify structural styles","State":"closed","Body":"Simplifies the structural styles for the chips to make them simpler and easier to maintain.","Url":"https://github.com/angular/components/pull/29357","RelatedDescription":"Closed or merged PR \"refactor(material/chips): simplify structural styles\" (#29357)"},{"Id":"2386085983","IsPullRequest":true,"CreatedAt":"2024-07-02T17:06:30","Actor":"crisbeto","Number":"29365","RawContent":null,"Title":"Reduce reliance on external utilities","State":"closed","Body":"Includes a few commits that aim to reduce our reliance on external style utilities.","Url":"https://github.com/angular/components/pull/29365","RelatedDescription":"Closed or merged PR \"Reduce reliance on external utilities\" (#29365)"},{"Id":"2386287508","IsPullRequest":false,"CreatedAt":"2024-07-02T13:37:47","Actor":"Martinspire","Number":"29366","RawContent":null,"Title":"bug(MatSelect): MatSelect not allowing page scrolling underneath","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI spotted an issue with the current Material Select where you can open a mat-select to show options but when its open, you can no longer scroll the page. Behavior seems similarly broken with some but not all other similar components.\r\n\r\nThe weird thing is that it doesn't work on the current Material Examples page, but it does work on the stackblitzes connected to them.\r\n\r\nI have a similar problem in my own repo, but could not really reproduce it in the stackblitz. I do see that they all have the reposition scrollstrategy and I've tried it with the noop one too but it just doesn't seem to work properly.\r\n\r\nI've only recently migrated to 18, but 17 also has the issue present as that is our current production version.\r\n\r\nI don't have a workaround yet either. Setting the Scroll Strategy doesn't work and when you remove the pointer-events you can no longer close the dropdown. Behavior seems fine with MatAutocomplete examples, but also broken with MatMenu on examples page. Or at the very least overriding default behavior doesn't seem to work.\r\n\r\n### Reproduction\r\n\r\nBroken: https://material.angular.io/components/select/examples\r\n\r\nStackblitz that works: https://stackblitz.com/edit/dpyucv?file=src%2Fexample%2Fselect-optgroup-example.html\r\n\r\nExamples page from similar component that works: https://material.angular.io/components/autocomplete/examples\r\n\r\nOther example that is broken: https://material.angular.io/components/menu/examples\r\n\r\n### Expected Behavior\r\n\r\nWhen dropdown is shown I can still scroll the page below it\r\n\r\n### Actual Behavior\r\n\r\nScrolling is blocked while the dropdown is open.\r\n\r\n### Environment\r\n\r\n- Angular: 18.0.3 myself and 18.0.5 from material examples site\r\n- CDK/Material: 18.0.x\r\n- Browser(s): Edge, Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/29366","RelatedDescription":"Open issue \"bug(MatSelect): MatSelect not allowing page scrolling underneath\" (#29366)"},{"Id":"2385434360","IsPullRequest":false,"CreatedAt":"2024-07-02T10:00:39","Actor":"junedzs","Number":"29362","RawContent":null,"Title":"bug(MatDialog): Browser selection disappears when dialog opens in firefox","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nBrowser selection disappears when dialog opens in firefox. It is working properly in Chrome.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://v18.material.angular.io/components/dialog/api in Firefox browser\r\n2. Select text using mouse\r\n3. Click \"Pick one\" that opens dialog\r\n4. Selection disappears\r\n\n\n### Expected Behavior\n\nSelection should retain. And it is working as expected in Chrome.\n\n### Actual Behavior\n\nSelection is disappearing\n\n### Environment\n\n- Angular: 14, 15, 16, 17, 18\r\n- CDK/Material: 14, 15, 16, 17, 18\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/29362","RelatedDescription":"Closed issue \"bug(MatDialog): Browser selection disappears when dialog opens in firefox\" (#29362)"},{"Id":"2385710464","IsPullRequest":false,"CreatedAt":"2024-07-02T09:16:03","Actor":"MikaStark","Number":"29363","RawContent":null,"Title":"feat(theming): Replace SASS-Based theming with global CSS variables ","State":"open","Body":"### Feature Description\n\n### Motivation\r\n\r\nThis feature request aims to simplify and consolidate CSS code instead of splitting it into multiple mixins. The current recommended way of theming components requires writing a dedicated file with at least three mixins: `theme`, `color`, and `typography` (and `density`?). While this approach follows a good philosophy of separating concerns, it has some significant drawbacks:\r\n\r\n#### 1. Exponential Growth and Difficult Maintenance\r\n\r\nIn large projects with hundreds of components, having a separate theme for each component can become boilerplate-heavy and lead to tedious maintenance. For example, the [material.angular.io app theme](https://github.com/angular/material.angular.io/blob/main/src/_app-theme.scss) imports and uses all themes scattered across the app. Scaling this approach to a much larger project would be painful and error-prone. The component-attached stylesheet is no longer the single source of truth.\r\n\r\n#### 2. Excessive Boilerplate\r\n\r\nCreating a new component requires writing a dedicated theme that we have to import and use in `styles.scss`. This adds unnecessary complexity to the development process.\r\n\r\n#### 3. Lack of Component View Encapsulation\r\n\r\nOne of Angular's cool features is view encapsulation, which prevents style collisions. However, since themes need to be applied in the main `styles.scss` file, encapsulation cannot be used. This forces us to rely on verbose CSS class names (e.g., `app-my-component-header-title`), whereas a simpler `header-title` would suffice when wrapped in an encapsulated stylesheet.\r\n\r\n#### 4. Dependence on SASS\r\n\r\nTo customize Angular Material, you have to use SASS, but some developers might prefer not to rely on it for various reasons. Additionally, `ng new` offers different stylesheet formats, which means forcing SASS can be limiting.\r\n\r\n### Proposed Alternative\r\n\r\nInspired by the new Material 3 `use-system-variables` capability, I propose using a set of CSS variables (e.g., `--sys-primary`, `--sys-body-large`, etc.) available globally for Angular Material and custom components, instead of relying on SASS mixins. Of course, we could consider having a schematics to help developer to generate those variables just like `ng generate @angular/material:m3-theme` does.\r\n\r\n@crisbeto listed those variables in [this comment](https://github.com/angular/components/issues/29104#issuecomment-2126365863)\r\n\r\nAlso, using css variables only instead of SASS theme simplify overrides and remove the need of Angular components mixins (like `mat.button-theme($my-theme)`).\r\n\r\nHowever, I can understand we still need to import core styles. This could be easily addressed by registering the right css file in `angular.json` file in build `styles` option list.\r\n\r\n```json\r\n\"styles\": [\r\n  \"src/styles.css\",\r\n  \"path/to/angular-material-component-core.css\"\r\n],\r\n```\r\n\r\n### Problems to Consider\r\n\r\n#### 1. Conditional Logic Based on Theme Type (Dark or Light)\r\n\r\nWe have to find a css alernative to `get-theme-type($theme)`.\r\n\r\n```scss\r\ncolor: if(mat.get-theme-type($theme) == dark, white, black);\r\n```\r\n\r\nNative CSS does not provide an `if` conditional operator, but the CSS `container` property could be a viable alternative (cf. https://stackoverflow.com/a/76327443).\r\n\r\n#### 2. Reading Palettes' Hues\r\n\r\nWithout SASS, palettes will not be available. However, this issue could be mitigated by adding more CSS variables (e.g., `--sys-primary-80`, `--sys-secondary-20`).\r\n\r\n### To sumarize\r\n\r\nThis proposal aims to streamline the theming process in Angular Material by reducing boilerplate, enhancing maintainability, and leveraging modern CSS capabilities. It aligns with the broader trend of using CSS variables for theming and can simplify the theming experience for developers.\r\n\r\nThank you for considering this feature request. I believe it can significantly improve the development workflow and theming consistency in Angular Material projects.\n\n### Use Case\n\nWe could replace the following code :\r\n\r\n```scss\r\n// styles.scss\r\n\r\n@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n$my-theme: mat.define-theme((\r\n color: (\r\n    theme-type: light,\r\n    primary: mat.$violet-palette,\r\n  ),\r\n));\r\n\r\nhtml {\r\n  @include mat.all-component-themes($my-theme);\r\n}\r\n\r\n// carousel.scss\r\n\r\n.my-carousel {\r\n  display: flex;\r\n}\r\n\r\n.my-carousel-button {\r\n  border-radius: 50%;\r\n}\r\n\r\n// _carousel-theme.scss\r\n\r\n@use 'sass:map';\r\n@use '@angular/material' as mat;\r\n\r\n@mixin color($theme) {\r\n  .my-carousel-button {\r\n    // Read the 50 hue from the primary color palette.\r\n    color: mat.get-theme-color($theme, primary, 50);\r\n  }\r\n}\r\n\r\n@mixin typography($theme) {\r\n  .my-carousel {\r\n    // Get the large headline font from the theme.\r\n    font: mat.get-theme-typography($theme, headline-large, font);\r\n  }\r\n}\r\n\r\n@mixin theme($theme) {\r\n  @if mat.theme-has($theme, color) {\r\n    @include color($theme);\r\n  }\r\n\r\n  @if mat.theme-has($theme, typography) {\r\n    @include typography($theme);\r\n  }\r\n}\r\n```\r\n\r\nby this lighter code in pure css : \r\n\r\n```css\r\n// styles.css\r\n\r\nhtml {\r\n  --sys-primary: #xxxxxx;\r\n  --sys-secondary: #xxxxxx;\r\n  --sys-tertiary: #xxxxxx;\r\n  --sys-error: #xxxxxx;\r\n  // and so on...\r\n}\r\n\r\n// carousel.css\r\n\r\n.my-carousel {\r\n  display: flex;\r\n  font: var(--sys-headline-large);\r\n}\r\n\r\n.my-carousel-button {\r\n  border-radius: 50%;\r\n  color: var(--sys-primary-50);\r\n}\r\n\r\n// no more need for _carousel-theme.scss\r\n```","Url":"https://github.com/angular/components/issues/29363","RelatedDescription":"Open issue \"feat(theming): Replace SASS-Based theming with global CSS variables \" (#29363)"},{"Id":"2384828859","IsPullRequest":true,"CreatedAt":"2024-07-01T22:22:16","Actor":"mmalerba","Number":"29361","RawContent":null,"Title":"POC: zoneless support via await until condition in harnesses","State":"open","Body":"","Url":"https://github.com/angular/components/pull/29361","RelatedDescription":"Open PR \"POC: zoneless support via await until condition in harnesses\" (#29361)"},{"Id":"2382139772","IsPullRequest":true,"CreatedAt":"2024-07-01T16:55:19","Actor":"crisbeto","Number":"29353","RawContent":null,"Title":"refactor(material/button): simplify FAB structural styles","State":"closed","Body":"Simplifies the styles of the FAB to make them smaller and easier to maintain.","Url":"https://github.com/angular/components/pull/29353","RelatedDescription":"Closed or merged PR \"refactor(material/button): simplify FAB structural styles\" (#29353)"},{"Id":"2384016382","IsPullRequest":false,"CreatedAt":"2024-07-01T14:31:38","Actor":"SebastianPodgajny","Number":"29358","RawContent":null,"Title":"bug(drag-drop): Failed to execute insertBefore on Node","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen drag and drop is used and data refreshes in background this error can be thrown\r\n```\r\nERROR DOMException: Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.\r\n```\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/a9tq3w?file=src%2Fexample%2Fcdk-drag-drop-connected-sorting-example.html\r\nSteps to reproduce:\r\n1.  Keep moving first element to the bottom (fast)\r\n\r\n\r\n### Expected Behavior\r\n\r\nDrag and drop should not cause `DOMException`\r\n\r\n### Actual Behavior\r\n\r\n\r\n\r\nhttps://github.com/angular/components/assets/21180501/9e1cee2a-d9e4-4460-a049-74821a66c827\r\n\r\n\r\nhttps://github.com/angular/components/assets/21180501/ecaed375-0a32-404b-bbc2-860b58d1fe6d\r\n\r\n\r\n\r\n```\r\nERROR DOMException: Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.\r\n    at EmulatedEncapsulationDomRenderer2.insertBefore (/vendor.js:84094:20)\r\n    at BaseAnimationRenderer.insertBefore (/vendor.js:17733:19)\r\n    at nativeInsertBefore (/vendor.js:50345:12)\r\n    at applyToElementOrContainer (/vendor.js:49879:7)\r\n    at applyNodes (/vendor.js:50571:9)\r\n    at applyView (/vendor.js:50578:3)\r\n    at addViewToDOM (/vendor.js:49947:3)\r\n    at addLViewToLContainer (/vendor.js:52300:7)\r\n    at LiveCollectionLContainerImpl.attach (/vendor.js:63156:5)\r\n    at LiveCollectionLContainerImpl.swap (/vendor.js:62667:12)\r\n```\r\n\r\n### Environment\r\n\r\nAngular CLI: 18.0.2\r\nNode: 18.20.3\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 18.0.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1800.2\r\n@angular-devkit/build-angular      18.0.2\r\n@angular-devkit/core               18.0.2\r\n@angular-devkit/schematics         18.0.2\r\n@angular/cdk                       18.0.5\r\n@angular/cli                       18.0.2\r\n@angular/material                  18.0.5\r\n@angular/material-experimental     18.0.5\r\n@angular/material-moment-adapter   18.0.5\r\n@schematics/angular                18.0.2\r\nrxjs                               7.4.0\r\ntypescript                         5.4.5\r\nzone.js                            0.14.6","Url":"https://github.com/angular/components/issues/29358","RelatedDescription":"Open issue \"bug(drag-drop): Failed to execute insertBefore on Node\" (#29358)"},{"Id":"2382618079","IsPullRequest":false,"CreatedAt":"2024-07-01T01:46:21","Actor":"EpicDeveloper0928","Number":"29356","RawContent":null,"Title":"bug(form-field): hide/show button of password input is not working in the example in the doc","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nIn the example of **[Form field with prefix & suffix](https://material.angular.io/components/form-field/examples#form-field-prefix-suffix)**, the hide/show button inside password input field is not working.\n\n### Reproduction\n\nThe example includes StackBlitz link.\n\n### Expected Behavior\n\nIt should hide/show password of the input field whenever click the button.\n\n### Actual Behavior\n\nBy default, password is hidden. And I can see password by first click.\r\nNext time, button clicking is not working, and it doesn't hide password in the input field.\n\n### Environment\n\n- Angular: 18.0.5\r\n- CDK/Material: 18.0.5\r\n- Browser(s): Chrome 126.0.6478.127\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/29356","RelatedDescription":"Open issue \"bug(form-field): hide/show button of password input is not working in the example in the doc\" (#29356)"},{"Id":"2382001755","IsPullRequest":false,"CreatedAt":"2024-07-01T01:04:37","Actor":"bhushan217","Number":"29352","RawContent":null,"Title":"bug(mat-badge-small): font-size is 0","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Team,\r\nI was reading and learning angular material and found a bug/issue in CSS font-size for badge, is it valid? \r\n--mat-badge-small-size-text-size : 0\r\n\r\nsmall badge doesn't show number and medium & large has same size (box/circle & font)\r\n\r\n<img width=\"1512\" alt=\"Screenshot 2024-06-29 at 18 42 19\" src=\"https://github.com/angular/components/assets/937974/627e666a-ddd0-4113-a198-23b115b4796b\">\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1.  go to https://material.angular.io/components/badge/examples\r\n2. and look at small badge\r\n3. compare medium and large too\r\n\n\n### Expected Behavior\n\nif font-size of body is 16px , then small should be .5rem , medium =.668rem and large = 1rem may be \n\n### Actual Behavior\n\nsmall is 0 , medium is .668rem and large is .668rem\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/29352","RelatedDescription":"Closed issue \"bug(mat-badge-small): font-size is 0\" (#29352)"},{"Id":"2382344182","IsPullRequest":false,"CreatedAt":"2024-06-30T17:10:35","Actor":"Harpush","Number":"29355","RawContent":null,"Title":"feat(tooltip): allow providing a global matTooltipClass","State":"open","Body":"### Feature Description\n\nRight now the tooltip class can be set on per tooltip basis. I want to declare the class name globally once and it will apply to all tooltips (hence global options token).\n\n### Use Case\n\nWe have in our app a certain tooltip class we pass to hundreds of tooltips. If we could provide the options on the route (or in root) that needs the specific tooltip class with that class we shouldn't have to remember to pass the class name in each and every tooltip usage.","Url":"https://github.com/angular/components/issues/29355","RelatedDescription":"Open issue \"feat(tooltip): allow providing a global matTooltipClass\" (#29355)"},{"Id":"2382179490","IsPullRequest":true,"CreatedAt":"2024-06-30T09:53:24","Actor":"abdulloh-abid","Number":"29354","RawContent":null,"Title":"fix: unable to toggle icon in demo file","State":"open","Body":"Fixes minor bug in demo file where icon cannot be toggled. This is because `signal` was not called correctly","Url":"https://github.com/angular/components/pull/29354","RelatedDescription":"Open PR \"fix: unable to toggle icon in demo file\" (#29354)"},{"Id":"2381234943","IsPullRequest":true,"CreatedAt":"2024-06-28T21:33:47","Actor":"essjay05","Number":"29351","RawContent":null,"Title":"fix(material/chips): remove button is too small","State":"open","Body":"Fixes Angular Components Chip component where the touch target of the remove button of a chip is too small. Updates .mat-mdc-chip-remove to target more specific styles to override original style of padding: 8px so that the user has a larger touch target particularly on mobile devices.\r\n\r\nFixes b/286959517\r\n\r\nBefore [screenshot](https://screenshot.googleplex.com/LY4J6jk4b3TFyQo)\r\nAfter [screenshot](https://screenshot.googleplex.com/5zpHzNya7CxhMnx)\r\n\r\nBREAKING CHANGE: updates chip remove button touch target to increase accessibility of the button especially on touch/mobile devices.","Url":"https://github.com/angular/components/pull/29351","RelatedDescription":"Open PR \"fix(material/chips): remove button is too small\" (#29351)"},{"Id":"2380230299","IsPullRequest":false,"CreatedAt":"2024-06-28T11:39:22","Actor":"GeorgianStan","Number":"29350","RawContent":null,"Title":"feat(material/tree): removeNode method","State":"open","Body":"### Feature Description\r\n\r\nThere is a method for adding a node, `insertNode()`, but there is no method for deleting.\r\nAt the moment this can only be done by completely reinitializing the `data' object that is passed to the mat tree.\r\n\r\n### Use Case\r\n\r\nOne use case is in which there is a tree that can be modified by the user by adding and deleting nodes, without changing the state of the existing nodes.\r\nFor example, if the user expands the nodes and then wants to delete one of them, currently this can be implemented by saving the open nodes in a separate state, re-initializing the `dataSource.data` object after the desired node has been deleted and then restoring the open nodes .\r\n\r\n\r\n```ts\r\n  saveExpandedNodes() {\r\n    this.#expandedNodes.splice(0, this.#expandedNodes.length);\r\n\r\n    this.treeControl.dataNodes.forEach(node => {\r\n      if (node.expandable && this.treeControl.isExpanded(node)) {\r\n        this.#expandedNodes.push(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  restoreExpandedNodes() {\r\n    this.#expandedNodes.forEach(node => {\r\n      const treeNode = this.treeControl.dataNodes.find(n => n.id === node.id);\r\n      treeNode && this.treeControl.expand(treeNode);\r\n    });\r\n  }\r\n```\r\nUsage:\r\n```ts\r\nthis.saveExpandedNodes()\r\nthis.dataSource.data = this.dataSource.splice(0,1)\r\nthis.restoreExpandedNodes()\r\n```\r\n\r\nThis works ok for cases where the tree does not have many elements, but if there are dozens of nodes then this process takes from a few milliseconds to a few seconds, which does not lead to a very pleasant experience.","Url":"https://github.com/angular/components/issues/29350","RelatedDescription":"Open issue \"feat(material/tree): removeNode method\" (#29350)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-07-04T03:30:02.286891Z","RunDurationInMilliseconds":1562}