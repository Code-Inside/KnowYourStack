{"Data":{"Angular-Issues":{"Issues":[{"Id":"1870813105","IsPullRequest":true,"CreatedAt":"2023-08-29T03:23:36","Actor":"dylhunn","Number":"51544","RawContent":null,"Title":"refactor(compiler): Support content projection in template pipeline","State":"open","Body":"Add support for content projection. See individual commits for details.","Url":"https://github.com/angular/angular/pull/51544","RelatedDescription":"Open PR \"refactor(compiler): Support content projection in template pipeline\" (#51544)"},{"Id":"1868325182","IsPullRequest":true,"CreatedAt":"2023-08-29T00:16:05","Actor":"dylhunn","Number":"51518","RawContent":null,"Title":"refactor(compiler): Implement `switch` blocks in template pipeline","State":"closed","Body":"`switch` blocks are part of the new control flow syntax. This commit adds support for processing them, and emitting the appropriate templates and conditional instructions.","Url":"https://github.com/angular/angular/pull/51518","RelatedDescription":"Closed or merged PR \"refactor(compiler): Implement `switch` blocks in template pipeline\" (#51518)"},{"Id":"1868625352","IsPullRequest":true,"CreatedAt":"2023-08-28T23:53:37","Actor":"AndrewKushnir","Number":"51529","RawContent":null,"Title":"refactor(core): add basic prefetching runtime mechanism for defer blocks","State":"closed","Body":"This commit adds runtime implementation of a basic preloading mechanism for defer blocks. The base prefetching logic invokes a dependency loading function (generated by the compiler) when a corresponding `prefetch when` condition is triggered. The `prefetch on` triggers would be implemented in followup PRs.\r\n\r\nWe plan to explore additional prefetching techniques and will followup with more PRs later (based on the research).\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51529","RelatedDescription":"Closed or merged PR \"refactor(core): add basic prefetching runtime mechanism for defer blocks\" (#51529)"},{"Id":"1870649415","IsPullRequest":true,"CreatedAt":"2023-08-28T23:35:28","Actor":"atscott","Number":"51543","RawContent":null,"Title":"Route matching refactors","State":"open","Body":"See individual commits. Includes some cleanup, code simplification and deduplication.","Url":"https://github.com/angular/angular/pull/51543","RelatedDescription":"Open PR \"Route matching refactors\" (#51543)"},{"Id":"1870506813","IsPullRequest":false,"CreatedAt":"2023-08-28T21:05:29","Actor":"ShacharHarshuv","Number":"51542","RawContent":null,"Title":"Cold Signals?","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nOne of the things I like about the Angular's signal API, is how the `computed` signal is both lazy (runs only if needed) and shared (results are not recalculated between consumers). \r\n\r\nAs I imagine the future of using signals as a replacement of RxJS (at least, in most cases), I was wondering how would an HttpClient that returns a signal will look like. \r\n\r\nOf course - we can wrap the HttpClient with `toSignal` to return a signal, but the problem is that that would make an immediate subscription that will cause a request to be sent, even before the signal was used. Ideally, we would want to create signals, and have them send the request only when needed (aka - lazily).\r\n\r\nI [tried to work around ](https://stackblitz.com/edit/stackblitz-starters-c1pndt?file=src%2Fmain.ts) this issue using `computed`, but it didn't work as creating \"setting a signal\" is not allowed inside a computed callback. \r\n\r\n### Proposed solution\r\n\r\nOne option is to allowed writing to signals inside a computed, like can be allowed with effects:\r\n\r\n```\r\neffect(() => {\r\n...\r\n}, {\r\n  allowSignalWrites: true,\r\n})\r\n```\r\n\r\nSo the workaround will work.\r\n\r\nAnother option is to allow for cold signals in the `toSignal` callback:\r\n\r\n```ts\r\ntoSignal(myObseravble$, { lazy: true })\r\n```\r\n\r\nIn this option - the observable will be subscribed to only on the first time that the signal is read. \r\n\r\n### Alternatives considered\r\n\r\nSee multiple options in proposition above. ","Url":"https://github.com/angular/angular/issues/51542","RelatedDescription":"Open issue \"Cold Signals?\" (#51542)"},{"Id":"1870355045","IsPullRequest":true,"CreatedAt":"2023-08-28T19:37:33","Actor":"devknoll","Number":"51541","RawContent":null,"Title":"refactor(core): make AfterRenderEventManager tree-shakable","State":"open","Body":"In preparation for adding support for phases to after*Render, which will increase the implementation size, this commit splits out the optional logic so that it can be tree-shaken and dynamically loaded.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51541","RelatedDescription":"Open PR \"refactor(core): make AfterRenderEventManager tree-shakable\" (#51541)"},{"Id":"1870161894","IsPullRequest":true,"CreatedAt":"2023-08-28T17:28:52","Actor":"bencodezen","Number":"51540","RawContent":null,"Title":"docs: migrate dynamic-form guide and code to standalone","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51540","RelatedDescription":"Open PR \"docs: migrate dynamic-form guide and code to standalone\" (#51540)"},{"Id":"1870133346","IsPullRequest":false,"CreatedAt":"2023-08-28T17:24:17","Actor":"jsaguet","Number":"51539","RawContent":null,"Title":"Expose HTTP_INTERCEPTOR_FNS in public api","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon/http\r\n\r\n### Description\r\n\r\nHttp interceptor functions are currently provided by two injection tokens: `HTTP_INTERCEPTOR_FNS` and `HTTP_ROOT_INTERCEPTOR_FNS`. None of which are available as public APIs.\r\n\r\nInstead, we have to use \r\n```typescript\r\nprovideHttpClient(withInterceptors(...interceptors))\r\n```\r\n\r\nLet's say we have an application that use a set of interceptors. We will use them like that:\r\n```typescript\r\nprovideHttpClient(\r\n    withInterceptors([\r\n\tcommonInterceptor1,\r\n\tcommonInterceptor2,\r\n    ])\r\n)\r\n```\r\n\r\nNow let's say we import a library and this library needs to provide another interceptor to work.\r\n\r\nThe only way to provide an additional interceptor from the library would be to do:\r\n```typescript\r\nexport function provideAdditionalFeature() {\r\n    return makeEnvironmentProviders([\r\n\t...featureProviders,\r\n\tprovideHttpClient(withInterceptors([additionalInterceptor])),\r\n    ]),\r\n}\r\n```\r\n\r\nWe need to provide again the http client even though we only want to provide a new interceptor.\r\n\r\nIf we had access to the underlying `HTTP_INTERCEPTOR_FNS`, we could avoid providing again the http client by doing this:\r\n```typescript\r\nexport function provideAdditionalFeature() {\r\n    return makeEnvironmentProviders([\r\n\t...featureProviders,\r\n\t{\r\n\t    provide: HTTP_INTERCEPTOR_FNS,\r\n\t    useValue: additionalInterceptor,\r\n\t    multi: true\r\n\t},\r\n    ]),\r\n}\r\n```\r\n\r\nThis is exactly what is done internally for the `provideClientHydration()` (except that it uses another token but it's equivalent)\r\n\r\n```typescript\r\nexport function withHttpTransferCache(): Provider[] {\r\n  return [\r\n    ...\r\n    {\r\n      provide: HTTP_ROOT_INTERCEPTOR_FNS,\r\n      useValue: transferCacheInterceptorFn,\r\n      multi: true,\r\n      deps: [TransferState, CACHE_STATE]\r\n    },\r\n    ...\r\n  ];\r\n}\r\n```\r\n\r\n### Proposed solution\r\n\r\nExport `HTTP_INTERCEPTOR_FNS` in public API.\r\n\r\n### Alternatives considered\r\n\r\nI can see 3 alternatives:\r\nThe first one, I already talked about it, is to keep providing http client everytime we want to provide an interceptor.\r\n\r\nThe second one I see is to keep using the old `HTTP_INTERCEPTOR` token.\r\nWith this solution, we're forced to use `withInterceptorsFromDi()` and this `HTTP_INTERCEPTOR` token is already considered a legacy API as we can see in the angular code:\r\n```typescript\r\nexport function withInterceptorsFromDi(): HttpFeature<HttpFeatureKind.LegacyInterceptors> {\r\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [\r\n    {\r\n      provide: LEGACY_INTERCEPTOR_FN,\r\n      useFactory: legacyInterceptorFnFactory,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTOR_FNS,\r\n      useExisting: LEGACY_INTERCEPTOR_FN,\r\n      multi: true,\r\n    }\r\n  ]);\r\n}\r\n```\r\n\r\nThe third option I see is to expose the interceptor from the library and let the consumer import it in `withInterceptors()`. \r\nBut this causes a problem with encapsulation.","Url":"https://github.com/angular/angular/issues/51539","RelatedDescription":"Closed issue \"Expose HTTP_INTERCEPTOR_FNS in public api\" (#51539)"},{"Id":"1870126181","IsPullRequest":true,"CreatedAt":"2023-08-28T17:02:24","Actor":"bencodezen","Number":"51538","RawContent":null,"Title":"docs: migrate event-binding code to standalone","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51538","RelatedDescription":"Open PR \"docs: migrate event-binding code to standalone\" (#51538)"},{"Id":"1870114022","IsPullRequest":true,"CreatedAt":"2023-08-28T16:53:22","Actor":"atscott","Number":"51537","RawContent":null,"Title":"fix(core): Ensure backwards-referenced transplanted views are refreshed","State":"open","Body":"This commit updates the tracking of dirty child views to not specifically track child views to refresh at all. Instead, after the regular change detection cycle, a second pass is done to look for views with the `RefreshView` flag. This pass is done repeatedly until no views with the flag were found during the traversal. This is similar to the 2 runs of change detection in AngularJS but with a huge improvement: rather than actually running change detection twice on the whole app, the second pass is only a traversal to check for any dirty views.\r\n\r\n(Draft for experimentation and to run TGP)","Url":"https://github.com/angular/angular/pull/51537","RelatedDescription":"Open PR \"fix(core): Ensure backwards-referenced transplanted views are refreshed\" (#51537)"},{"Id":"1870094473","IsPullRequest":true,"CreatedAt":"2023-08-28T16:39:02","Actor":"bencodezen","Number":"51536","RawContent":null,"Title":"docs: migrate errors code example and guide to standalone","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51536","RelatedDescription":"Open PR \"docs: migrate errors code example and guide to standalone\" (#51536)"},{"Id":"1868356645","IsPullRequest":true,"CreatedAt":"2023-08-28T16:33:33","Actor":"akib1997","Number":"51520","RawContent":null,"Title":"docs(docs-infra): capitalize footer navigation links","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nFirst character of the footer navigation items is capitalized\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n![image](https://github.com/angular/angular/assets/48770016/18a59b29-13fb-41c4-8e09-e6a3bf576fcb)\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n![image](https://github.com/angular/angular/assets/48770016/666dccaa-6750-4eb8-b70b-24ef9ac1645e)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51520","RelatedDescription":"Closed or merged PR \"docs(docs-infra): capitalize footer navigation links\" (#51520)"},{"Id":"1869909608","IsPullRequest":false,"CreatedAt":"2023-08-28T14:44:56","Actor":"hiepxanh","Number":"51535","RawContent":null,"Title":"Dynamic components aren't hydrated when appModule bootstrap AppComponent","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAfter one month chasing this issue. I think I can finally reach it.  @AndrewKushnir \r\n## Example 1:\r\nlink: https://codesandbox.io/p/sandbox/unruffled-dawn-dngll7\r\n\r\nPreviously, this issue https://github.com/angular/angular/issues/51157 does show that dynamic component aren't hydrated and his example give 2 instance, because he have bootstrap on app.module.ts and it show 2 instance:\r\n![image](https://github.com/angular/angular/assets/16970990/c0a5e8a9-a2e4-4794-bb14-7186f5d9dabc)\r\n\r\n## Example 2:\r\nlink: https://codesandbox.io/p/sandbox/relaxed-feather-27fv8y?file=/src/app/app.module.ts:1,1\r\nI accident commend on bootstrap row in app.module.ts and it does not show error but give expect answer:\r\n![image](https://github.com/angular/angular/assets/16970990/e54797ed-2701-4226-88f1-e937b561a79a)\r\nAfter that I think we fix that issue and case close\r\n\r\n## Example 3: \r\nlink: https://codesandbox.io/p/sandbox/sharp-gagarin-j9ycmg?file=/src/app/app.component.ts:24,14\r\n\r\nI still get the flick and it still a really annoy issue. So I decide to reproduce my closest behavior on my production repo. So it little different but basicly same with example 2. Just only one think, I did not accident commend and now it alway render browser instead of reuse variable hydrated from server.\r\n\r\n![image](https://github.com/angular/angular/assets/16970990/59bc92f9-5ba6-4ff2-b4dd-1da1e4d0b536)\r\n\r\n\r\nright now I have the same issue with the new reproduce with createComponent function. And I realize that problem come from bootstrap: [AppComponent] is open or not. I think it is important and require because my project instant dead if I commend this.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://codesandbox.io/p/sandbox/sharp-gagarin-j9ycmg?file=/src/app/navbar.component.ts:8,26\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\"dependencies\": {\r\n    \"@angular/animations\": \"^16.2.0\",\r\n    \"@angular/common\": \"^16.2.0\",\r\n    \"@angular/compiler\": \"^16.2.0\",\r\n    \"@angular/core\": \"^16.2.0\",\r\n    \"@angular/forms\": \"^16.2.0\",\r\n    \"@angular/platform-browser\": \"^16.2.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^16.2.0\",\r\n    \"@angular/platform-server\": \"^16.2.0\",\r\n    \"@angular/router\": \"^16.2.0\",\r\n    \"@nguniversal/express-engine\": \"^16.1.3\",\r\n    \"express\": \"^4.15.2\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.13.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^16.1.1\",\r\n    \"@angular/cli\": \"~16.2.0\",\r\n    \"@angular/compiler-cli\": \"^16.2.0\",\r\n    \"@nguniversal/builders\": \"^16.1.2\",\r\n    \"@types/express\": \"^4.17.0\",\r\n    \"@types/jasmine\": \"~4.3.0\",\r\n    \"@types/node\": \"^14.15.0\",\r\n    \"jasmine-core\": \"~4.6.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.0.0\",\r\n    \"typescript\": \"~5.0.2\"\r\n  }\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51535","RelatedDescription":"Open issue \"Dynamic components aren't hydrated when appModule bootstrap AppComponent\" (#51535)"},{"Id":"1869620783","IsPullRequest":false,"CreatedAt":"2023-08-28T12:25:21","Actor":"martiesim","Number":"51534","RawContent":null,"Title":"date pipe uses us format for \"shortDate\" and \"en-GB\" locale","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe DatePipe uses the american date format for the format \"shortDate\", if the locale \"en-GB\" is given.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-4pnynj?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe date is shown with american format with month before day and not in the british format with day before month.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.8\r\nNode: 16.18.1\r\nPackage Manager: yarn 1.22.17\r\nOS: linux x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51534","RelatedDescription":"Closed issue \"date pipe uses us format for \"shortDate\" and \"en-GB\" locale\" (#51534)"},{"Id":"1869530346","IsPullRequest":true,"CreatedAt":"2023-08-28T11:01:31","Actor":"devversion","Number":"51533","RawContent":null,"Title":"Bazel saucelabs stability and debug improvements","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/51533","RelatedDescription":"Open PR \"Bazel saucelabs stability and debug improvements\" (#51533)"},{"Id":"1869342449","IsPullRequest":false,"CreatedAt":"2023-08-28T09:09:08","Actor":"IKatsuba","Number":"51532","RawContent":null,"Title":"Injection Context for `loadChildren` and `loadComponent` functions","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\n### What I have\r\n- host application\r\n- micro front-end applications that are loaded using `loadChildren` and `loadConponent`\r\n- localization using `@angular/localize`\r\n\r\n### Problem\r\nNeed to load micro-frontend module or component with host application locale.\r\n\r\nThe `LOCALE_ID` token is used to determine the current locale. The first thing that comes to mind is to use the `inject` function to get the token value from the injector.\r\n\r\n```ts\r\n{\r\n  path: '...',\r\n  loadChildren: () => loadRemoteModule(`module-${inject(LOCALE_ID)}`, 'Module')\r\n}\r\n```\r\n\r\nBut in the `loadChildren` and `loadComponent` functions, using the inject function causes an error. \r\n\r\n```\r\nNG0203: `inject()` must be called from an injection context, such as a constructor, a factory function, a field initializer, or a function used with `runInInjectionContext`.\r\n```\r\n\r\n\r\n### Proposed solution\r\n\r\nI propose to create an injection context for `loadChildren` and `loadComponent` functions when calling them\r\n\r\n### Alternatives considered\r\n\r\nI am setting the locale to the window object as a fast solution.\r\n\r\n```ts\r\n{\r\n      provide: APP_INITIALIZER,\r\n      multi: true,\r\n      useFactory: () => {\r\n        const locale = inject(LOCALE_ID);\r\n        const windowRef = inject(WINDOW);\r\n\r\n        windowRef.__LOCALE_ID__ = AvailableLocales.includes(\r\n          locale as AvailableLocale\r\n        )\r\n          ? locale\r\n          : AvailableLocale.EN;\r\n        return () => undefined;\r\n      },\r\n    }\r\n```\r\n\r\nAnd then load micro-frontend:\r\n\r\n```ts\r\n{\r\n  path: '...',\r\n  loadChildren: () => loadRemoteModule(\r\n    `module_${window.__LOCALE_ID__}`,\r\n    moduleName\r\n  )\r\n}\r\n```\r\n\r\nBut for SSR, I will have to get another solution.","Url":"https://github.com/angular/angular/issues/51532","RelatedDescription":"Open issue \"Injection Context for `loadChildren` and `loadComponent` functions\" (#51532)"},{"Id":"1869114972","IsPullRequest":false,"CreatedAt":"2023-08-28T07:01:08","Actor":"NRaf","Number":"51531","RawContent":null,"Title":"bindToComponentInputs does not work for components not in routes","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIf I have a component that is not defined in the `routes`, I can't access router params using component inputs (with `paramsInheritanceStrategy` and `bindToComponentInputs` both enabled).\r\n\r\nI can access the variables if I load that same component using a `router-outlet`. The documentation isn't very clear on this point.\r\n\r\ne.g. \r\n![image](https://github.com/angular/angular/assets/292355/2af8402a-bc23-40ec-9e87-d277415d5ee2)\r\n\r\n\r\nThere is no clear reference to this here: https://angular.io/guide/router#getting-route-information\r\n\r\nThe closest reference I've found is this, however this isn't very easy to understand:\r\n![image](https://github.com/angular/angular/assets/292355/d96c94dd-b074-4cdf-9fef-0c230c6980f1)\r\nhttps://angular.io/api/router/ExtraOptions\r\n\r\nI'm not sure if this is a limitation or a bug.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-wy6vp7?file=src%2Fparent.ts,src%2Fmain.ts,src%2Findex.html\n\n### Please provide the exception or error you saw\n\n```true\nThe route params do not work when the component inputs are in a component that isn't defined in a route configuration.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.0.0\r\nNode: 18\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51531","RelatedDescription":"Open issue \"bindToComponentInputs does not work for components not in routes\" (#51531)"},{"Id":"1868669700","IsPullRequest":true,"CreatedAt":"2023-08-27T23:24:03","Actor":"AndrewKushnir","Number":"51530","RawContent":null,"Title":"refactor(core): adjust defer block behavior on the server","State":"open","Body":"This commit updates the runtime implementation of defer blocks to avoid their triggering on the server. This behavior was described in the RFC (https://github.com/angular/angular/discussions/50716, see \"Server Side Rendering Behavior\" section): only a placeholder is rendered on the server at this moment. This commit also updates the logic to make sure that the placeholder content is hydrated after SSR.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51530","RelatedDescription":"Open PR \"refactor(core): adjust defer block behavior on the server\" (#51530)"},{"Id":"1868537666","IsPullRequest":true,"CreatedAt":"2023-08-27T15:35:21","Actor":"akib1997","Number":"51528","RawContent":null,"Title":"docs(docs-infra): mixin generated same multiple css","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nSCSS Mixin Generating same multiple CSS and second one overrides first one\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSCSS Mixin Generating same multiple CSS and second one overrides first one\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51528","RelatedDescription":"Open PR \"docs(docs-infra): mixin generated same multiple css\" (#51528)"},{"Id":"1868479570","IsPullRequest":true,"CreatedAt":"2023-08-27T12:32:00","Actor":"akib1997","Number":"51527","RawContent":null,"Title":"docs(docs-infra): correct spelling praticesto practices, seperateto s…","State":"open","Body":"\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nCorrect some spellings\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51527","RelatedDescription":"Open PR \"docs(docs-infra): correct spelling praticesto practices, seperateto s…\" (#51527)"},{"Id":"1868359151","IsPullRequest":true,"CreatedAt":"2023-08-27T12:28:56","Actor":"akib1997","Number":"51521","RawContent":null,"Title":"docs(docs-infra): correct spelling of pratices using practices","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nCorrect spelling of _pratices_ using **practices**\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nSpelling is _pratices_ instead of **practices**\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\npratices would be practices\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51521","RelatedDescription":"Closed or merged PR \"docs(docs-infra): correct spelling of pratices using practices\" (#51521)"},{"Id":"1868364061","IsPullRequest":true,"CreatedAt":"2023-08-27T12:28:37","Actor":"akib1997","Number":"51522","RawContent":null,"Title":"docs(docs-infra): correct spelling from coffe to coffee","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\ncorrect spelling from **coffe** to **coffee**\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51522","RelatedDescription":"Closed or merged PR \"docs(docs-infra): correct spelling from coffe to coffee\" (#51522)"},{"Id":"1868385298","IsPullRequest":true,"CreatedAt":"2023-08-27T12:28:25","Actor":"akib1997","Number":"51523","RawContent":null,"Title":"docs(docs-infra): correct spelling from seperate to separate","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\ncorrect spelling from **seperate** to **separate**\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51523","RelatedDescription":"Closed or merged PR \"docs(docs-infra): correct spelling from seperate to separate\" (#51523)"},{"Id":"1868470738","IsPullRequest":false,"CreatedAt":"2023-08-27T12:19:06","Actor":"xXNickznXx","Number":"51526","RawContent":null,"Title":"Control Flow - Shorter '@' syntax for deferred loading","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nSince its no longer possible to comment on the RFCs for Control Flow & Deferred Loading, Im opening this issue to make a suggestion / ask a question.\n\n### Proposed solution\n\nWouldnt it be possible to do the deferred loading with the '@' syntax like this:\r\n\r\n```\r\n@defer on viewport {\r\n  <heavy-cmp />\r\n} @placeholder {\r\n  <img src=\"ph.png\">\r\n} @loading {\r\n  <loading-spinner />  \r\n}\r\n```\r\n\r\nThat way the argument for block syntax:\r\n- `#defer` is lighter weight\r\n  - No need to name the \"main\" content block\r\n\r\nwould no longer be an argument.\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/51526","RelatedDescription":"Closed issue \"Control Flow - Shorter '@' syntax for deferred loading\" (#51526)"},{"Id":"1868340536","IsPullRequest":false,"CreatedAt":"2023-08-27T11:08:05","Actor":"muhamedkarajic","Number":"51519","RawContent":null,"Title":"@Input decorator fowards value to Subject/Signals","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nRecently Angular introduced a feature regarding such as\r\n```typescript\r\n@Input({ transform: (value: any) => Number(value) }) myNumber: number = 0;\r\n```\r\n\r\n### Proposed solution\r\n\r\nI propose we consider adding a way to do this but in such a way that we foward the value using the .next or .set for Subjects / Signals.\r\n\r\nThis would make developer life easier. Maybe it could even be in such a way that you don't have to write the boiler plate at all.\r\n```typescript\r\n@Input({ fowards: true ) myNumber = new BehaviorSubject<number>(0);\r\n@Input({ fowards: true ) myNumber = signal(0);\r\n```\r\n\r\n### Alternatives considered\r\n\r\nHow it could work is that it just checks when setting the new value if the object is a subject or a signal and based on that calls .next() or .set().","Url":"https://github.com/angular/angular/issues/51519","RelatedDescription":"Closed issue \"@Input decorator fowards value to Subject/Signals\" (#51519)"},{"Id":"1868431232","IsPullRequest":true,"CreatedAt":"2023-08-27T09:46:34","Actor":"akib1997","Number":"51525","RawContent":null,"Title":"docs(docs-infra): correct spelling incompabilities to incompatibiliti…","State":"open","Body":"…es, instrinsic to intrinsic, JavaScript runtimes to JavaScript runtime\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\ncorrect spelling: **incompabilities** to **incompatibilities**, **instrinsic** to **intrinsic**, JavaScript **runtimes** to JavaScript **runtime** \r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\ncorrect spelling: **incompabilities** to **incompatibilities**, **instrinsic** to **intrinsic**, JavaScript **runtimes** to JavaScript **runtime** \r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51525","RelatedDescription":"Open PR \"docs(docs-infra): correct spelling incompabilities to incompatibiliti…\" (#51525)"},{"Id":"1868418926","IsPullRequest":false,"CreatedAt":"2023-08-27T09:03:37","Actor":"BerndHme","Number":"51524","RawContent":null,"Title":"Docs > Navigation Pane > Indentations of topics > Cluttered overview","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nCluttered overview in the navigation pane.  \r\nI think it would be better to enlarge the indentation of nested topics.  \r\n... now it's hard to keep track of where you are in the navigation.\r\n\r\nExample > https://angular.io/guide/pipes-overview\r\n![image](https://github.com/angular/angular/assets/132269491/157ea065-71c5-410d-863f-dd6f367d60db)\r\n\r\nExample (right and left) > https://angular.io/tutorial/tour-of-heroes/toh-pt4\r\n![image](https://github.com/angular/angular/assets/132269491/0578637a-42b1-49ff-87cc-995103a83b4e)\r\n\r\nExample (better) > https://learn.microsoft.com/en-us/aspnet/core/mvc/overview?view=aspnetcore-7.0\r\n![image](https://github.com/angular/angular/assets/132269491/f0657920-e439-4854-9fae-1bdb8804ee47)\r\n","Url":"https://github.com/angular/angular/issues/51524","RelatedDescription":"Open issue \"Docs > Navigation Pane > Indentations of topics > Cluttered overview\" (#51524)"},{"Id":"1868316822","IsPullRequest":false,"CreatedAt":"2023-08-27T01:14:51","Actor":"NickeManarin","Number":"51517","RawContent":null,"Title":"Accept custom error message in Validators.pattern()","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nCurrently, `Validators.pattern()` is defined as so:\r\n\r\n```\r\nstatic pattern(pattern: string | RegExp): ValidatorFn;\r\n```\r\nWhen used and the control is invalid we get this as result:\r\n\r\n```\r\npattern: { \r\n  requiredPattern: '/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,32}$/', \r\n  actualValue: 'hello'\r\n}\r\n```\r\n\r\nRight now we can't assign a specific error message to that validator and we always need to use controlName + error type to display the error for the users.\n\n### Proposed solution\n\nThe proposed solution is to accept a secondary parameter, with a custom error message and return that message along with the rest of the error data:\r\n\r\n```\r\nstatic pattern(pattern: string | RegExp, message: string | undefined): ValidatorFn;\r\n```\n\n### Alternatives considered\n\nPerhaps this would be beneficial as well to be added to other types of Validators.","Url":"https://github.com/angular/angular/issues/51517","RelatedDescription":"Open issue \"Accept custom error message in Validators.pattern()\" (#51517)"},{"Id":"1868307573","IsPullRequest":true,"CreatedAt":"2023-08-27T00:24:48","Actor":"wardbell","Number":"51516","RawContent":null,"Title":"docs: Migrate RxJS Observables guides & code examples to standalone","State":"open","Body":"None of the guide pages mentions ngModules. Only `observables-in-angular` needed conversion to Standalone.\r\n\r\nHowever, some of the guide pages reflect old versions of RxJS, including signatures that are no longer valid. These have been corrected.\r\n\r\nMore significantly, *the existing guide is pretty bad at explaining RxJS and its usage*. It was written (by me I think) in the very early days of Angular and Angular RxJS instruction. I've taught numerous \"RxJS in Angular\" classes since and learned from that experience what does and does not work with students.\r\n\r\nThere was neither the time nor the charter to completely overhaul this guide. But this commit attempts to remove what flops with students and to bring the teaching closer to what seems more effectively. I hope reviewers agree that my revisions are an improvement.\r\n\r\n**Revised Overview**\r\n\r\nThe overview doc, `observables.md`, had a few errors (ex: `next` is NOT REQUIRED) and deprecated patterns (you now must pass the Observer object to `subscribe`).\r\n\r\nMore importantly, it was wildly overcomplicated and scary, especially when it got into multi-casting.\r\n\r\nMoved the multi-casting section to \"RxJS Library\" and rewrote it (with working example) for simplicity and context.\r\n\r\nI made other changes in an effort to make this an overview that is more comprehensive and more clear. I paid particular attention to the \"Basic usage and terms\" section.\r\n\r\nFinally, I relocated the \"Naming conventions for observables\" section here from `rx-library`. This is the section that describes the dollar-sign convention. It made more sense for it to be here.\r\n\r\n**Revised \"RxJS Library\" page and code**\r\n\r\n*RxJS no longer supports chaining* and hasn't for a very long time. Removed note in `rx-library.md` that suggested you could use operator chaining.\r\n\r\nThe RxJS `pipe` discussion in the \"Operators\" section was just weird. Almost no one calls the `pipe` function. We certainly should *start* there. We should start with how people actually use operators - by adding them to the argument list of the `Observable.pipe()` method.\r\n\r\nI kept the original `pipe` function example but subordinated it in a \"callout\". Most readers will (and should) ignore it.\r\n\r\n`Subject` is a *critically important RxJS mechanism for creating custom observables*. It was completely missing from the list of observable creators on this guide page. So I added it to the \"Observable creation functions\" section of the guide and wrote an accompanying `MessageService` code sample (see the new `rx-library/app/` folder).\r\n\r\nThe `MessageService` is a pretty common pattern in Angular apps - far more common than creating an observable from a counter or an event, two of the creation patterns currently on this page.\r\n\r\nThis new section also afforded an opportunity to show how RxJS helps with building loosely coupled applications. We will soon be talking about Signals. Many will wonder whether and when they should still use RxJS.\r\n\r\nAt least a partial answer is that RxJS is really good at progressively combining and enhancing streams of data as they cross component boundaries. Of course you can pass signals around; but they are not as rich in transformers as RxJS. This is where RxJS shines.\r\n\r\n**Revised \"Comparing observables\"**\r\n\r\nThe Promises section in `comparing-observables.md` had many errors and misleading remarks.\r\n\r\nThe comparison of error handling was especially egregious; the code example for that was nonsense.\r\n\r\nThe \"Chain\" sub-section was really about transforming values. It also failed to demonstrate chaining promise `.then`s.\r\n\r\nReworked these sub-sections and improved the code samples to match.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51516","RelatedDescription":"Open PR \"docs: Migrate RxJS Observables guides & code examples to standalone\" (#51516)"},{"Id":"1868130229","IsPullRequest":true,"CreatedAt":"2023-08-26T14:50:35","Actor":"atscott","Number":"51515","RawContent":null,"Title":"fix(core): Ensure backwards-referenced transplanted views are refreshed","State":"open","Body":"This commit updates the tracking of dirty child views to be a version rather than a counter. This is a much more simple method and less likely to get into the same 'always-wrong' situation that could happen with the counter (if it is off by 1 once, it's off by 1 forever and you either get infinite change detection or your view is never refreshed).\r\n\r\n(Draft for experimentation and to run TGP)","Url":"https://github.com/angular/angular/pull/51515","RelatedDescription":"Open PR \"fix(core): Ensure backwards-referenced transplanted views are refreshed\" (#51515)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1870324912","IsPullRequest":true,"CreatedAt":"2023-08-28T19:16:30","Actor":"angular-robot","Number":"25714","RawContent":null,"Title":"build: update dependency critters to v0.0.20 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [critters](https://togithub.com/GoogleChromeLabs/critters) | dependencies | patch | [`0.0.19` -> `0.0.20`](https://renovatebot.com/diffs/npm/critters/0.0.19/0.0.20) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2023-3481](https://togithub.com/GoogleChromeLabs/critters/security/advisories/GHSA-cx3j-qqxj-9597)\n\n### Impact\nCritters version 0.0.17-0.0.19 have an issue when parsing the HTML which leads to a potential [cross-site scripting (XSS)](https://owasp.org/www-community/attacks/xss/) bug.\n\n### Patches\nThe bug has been fixed in `v0.0.20`.\n\n### Workarounds\nUpgrading Critters version to `>0.0.20` is the easiest fix. This is a non breaking version upgrade so we recommend all users to use `v0.0.20`.\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChromeLabs/critters (critters)</summary>\n\n### [`v0.0.20`](https://togithub.com/GoogleChromeLabs/critters/compare/3b3ea7b1ad8ca4d5e40cdf793aecc1b4dcaa5e1c...0.0.20)\n\n[Compare Source](https://togithub.com/GoogleChromeLabs/critters/compare/3b3ea7b1ad8ca4d5e40cdf793aecc1b4dcaa5e1c...0.0.20)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi42OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25714","RelatedDescription":"Open PR \"build: update dependency critters to v0.0.20 [security]\" (#25714)"},{"Id":"1852894440","IsPullRequest":true,"CreatedAt":"2023-08-28T18:36:30","Actor":"alan-agius4","Number":"25689","RawContent":null,"Title":"Universal merge","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25689","RelatedDescription":"Closed or merged PR \"Universal merge\" (#25689)"},{"Id":"1870250878","IsPullRequest":true,"CreatedAt":"2023-08-28T18:35:14","Actor":"clydin","Number":"25713","RawContent":null,"Title":"build: update Angular version to v17 prerelease","State":"open","Body":"Package dependency versions and the version used to generate a new project have been updated to use `17.0.0-next.1`.","Url":"https://github.com/angular/angular-cli/pull/25713","RelatedDescription":"Open PR \"build: update Angular version to v17 prerelease\" (#25713)"},{"Id":"1870219463","IsPullRequest":true,"CreatedAt":"2023-08-28T18:12:16","Actor":"clydin","Number":"25712","RawContent":null,"Title":"ci: move Windows CI job to GHA","State":"open","Body":"The Windows E2E tests are now executed with a Github Action job via an additional entry in the existing E2E job's matrix. The CircleCI configuration previously needed to execute the job with CircleCI has also been removed.","Url":"https://github.com/angular/angular-cli/pull/25712","RelatedDescription":"Open PR \"ci: move Windows CI job to GHA\" (#25712)"},{"Id":"1869673463","IsPullRequest":false,"CreatedAt":"2023-08-28T12:32:30","Actor":"atuzovic","Number":"25711","RawContent":null,"Title":"Dependencies on vulnerable versions of libraries","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12\n\n### Description\n\nWhen \"npm audit\" is done for project that has @angular-devkit/build-angular 16.2.0 as devDependency, following report is generated:\r\n```\r\n\r\n# npm audit report\r\n\r\nrequest  *\r\nSeverity: moderate\r\nServer-Side Request Forgery in Request - https://github.com/advisories/GHSA-p8p7-x288-28g6\r\nDepends on vulnerable versions of tough-cookie\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/request\r\n  webdriver-manager  *\r\n  Depends on vulnerable versions of request\r\n  Depends on vulnerable versions of xml2js\r\n  node_modules/webdriver-manager\r\n    protractor  >=1.3.0\r\n    Depends on vulnerable versions of selenium-webdriver\r\n    Depends on vulnerable versions of webdriver-js-extender\r\n    Depends on vulnerable versions of webdriver-manager\r\n    node_modules/protractor\r\n      @angular-devkit/build-angular  >=0.1100.0-next.0\r\n      Depends on vulnerable versions of protractor\r\n      node_modules/@angular-devkit/build-angular\r\n\r\ntough-cookie  <4.1.3\r\nSeverity: moderate\r\ntough-cookie Prototype Pollution vulnerability - https://github.com/advisories/GHSA-72xf-g2v4-qvf3\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/tough-cookie\r\n\r\nxml2js  <0.5.0\r\nSeverity: moderate\r\nxml2js is vulnerable to prototype pollution - https://github.com/advisories/GHSA-776f-qx25-q3cc\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/xml2js\r\n  selenium-webdriver  2.43.1 - 4.0.0-rc-2\r\n  Depends on vulnerable versions of xml2js\r\n  node_modules/selenium-webdriver\r\n    webdriver-js-extender  *\r\n    Depends on vulnerable versions of selenium-webdriver\r\n    node_modules/webdriver-js-extender\r\n\r\n8 moderate severity vulnerabilities\r\n\r\nTo address all issues (including breaking changes), run:\r\n  npm audit fix --force\r\n\r\n```\r\n\r\nIt's important to note that this is happening on only few of the projects, not all.\r\nWhat is confusing is that all projects have (or at least seems to have) same contents for angular.json and package.json.\r\n\n\n### Minimal Reproduction\n\nnpm audit\r\n\r\npackage.json contents:\r\n\r\n{\r\n  \"name\": \"app\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"echo . && ng serve --verbose\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@ag-grid-community/angular\": \"30.1.0\",\r\n    \"@ag-grid-community/client-side-row-model\": \"30.1.0\",\r\n    \"@ag-grid-community/core\": \"30.1.0\",\r\n    \"@ag-grid-community/styles\": \"^30.1.0\",\r\n    \"@angular/animations\": \"~16.2.2\",\r\n    \"@angular/cdk\": \"^16.2.1\",\r\n    \"@angular/common\": \"~16.2.2\",\r\n    \"@angular/compiler\": \"~16.2.2\",\r\n    \"@angular/core\": \"~16.2.2\",\r\n    \"@angular/forms\": \"~16.2.2\",\r\n    \"@angular/google-maps\": \"^16.2.1\",\r\n    \"@angular/localize\": \"^16.2.2\",\r\n    \"@angular/material\": \"^16.2.1\",\r\n    \"@angular/platform-browser\": \"~16.2.2\",\r\n    \"@angular/platform-browser-dynamic\": \"~16.2.2\",\r\n    \"@angular/router\": \"~16.2.2\",\r\n    \"@fortawesome/angular-fontawesome\": \"^0.13.0\",\r\n    \"@fortawesome/fontawesome-svg-core\": \"^6.4.2\",\r\n    \"@fortawesome/free-brands-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-duotone-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-light-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-regular-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-solid-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-thin-svg-icons\": \"^6.4.2\",\r\n    \"@ng-select/ng-select\": \"^11.1.1\",\r\n    \"@ngbracket/ngx-layout\": \"^16.0.0\",\r\n    \"@ngx-translate/core\": \"^15.0.0\",\r\n    \"@tinymce/tinymce-angular\": \"^7.0.0\",\r\n    \"ace-builds\": \"^1.24.1\",\r\n    \"chart.js\": \"^4.4.0\",\r\n    \"chartjs-adapter-dayjs-4\": \"^1.2.3\",\r\n    \"cropperjs\": \"1.6.0\",\r\n    \"d3-scale-chromatic\": \"^3.0.0\",\r\n    \"dayjs\": \"^1.11.9\",\r\n    \"lodash-es\": \"^4.17.21\",\r\n    \"material-design-icons\": \"^3.0.1\",\r\n    \"ng2-date-picker\": \"^16.0.0\",\r\n    \"ng2-file-upload\": \"^5.0.0\",\r\n    \"ngx-ace-wrapper\": \"^14.0.0\",\r\n    \"ngx-color-picker\": \"^14.0.0\",\r\n    \"ngx-json-viewer\": \"^3.2.1\",\r\n    \"prismjs\": \"^1.29.0\",\r\n    \"rxjs\": \"~7.8.1\",\r\n    \"tinymce\": \"^6.6.2\",\r\n    \"tslib\": \"^2.6.2\",\r\n    \"zone.js\": \"~0.13.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^16.2.0\",\r\n    \"@angular/cli\": \"^16.2.0\",\r\n    \"@angular/compiler-cli\": \"^16.2.2\",\r\n    \"@angular/language-service\": \"^16.2.2\",\r\n    \"@types/d3\": \"^7.4.0\",\r\n    \"@types/jasmine\": \"~4.3.5\",\r\n    \"@types/lodash-es\": \"^4.17.8\",\r\n    \"jasmine-core\": \"~5.1.1\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.1\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"^2.1.0\",\r\n    \"typescript\": \"~5.1.6\"\r\n  }\r\n}\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.0 (cli-only)\r\n@angular-devkit/core         16.2.0 (cli-only)\r\n@angular-devkit/schematics   16.2.0 (cli-only)\r\n@schematics/angular          16.2.0 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25711","RelatedDescription":"Open issue \"Dependencies on vulnerable versions of libraries\" (#25711)"},{"Id":"1869141865","IsPullRequest":true,"CreatedAt":"2023-08-28T07:18:23","Actor":"crisbeto","Number":"25710","RawContent":null,"Title":"build: update to TypeScript 5.2","State":"open","Body":"Updates the repo to Angular v17-next.1 and TypeScript 5.2.","Url":"https://github.com/angular/angular-cli/pull/25710","RelatedDescription":"Open PR \"build: update to TypeScript 5.2\" (#25710)"},{"Id":"1865999071","IsPullRequest":true,"CreatedAt":"2023-08-24T22:58:22","Actor":"atcastle","Number":"25709","RawContent":null,"Title":"feat(@ngtools/webpack): add automated preconnects for image domains","State":"open","Body":"This PR adds new functionality to identify image domains used in [NgOptimizedImage](https://angular.io/api/common/NgOptimizedImage) loaders, and automatically add `link rel=\"preload\"` tags to the index.html file for those domains, if the end-user isn't already managing their own preconnects. I designed this change with some substantial help from @alan-agius4 and @clydin. ATTN: @kara @AndrewKushnir \r\n\r\n### Technical details\r\nHow domains are identified:\r\nImage domains are identified during the Typescript transformation process, where application Typescript files are already being traversed as an AST multiple times. This PR adds a new, non-modifying transformer, which conducts a narrow traversal of the AST to find image domains in the code. The traversal looks like this:\r\n1) Starting at the root of the file, do a one-layer traversal, looking for a ClassDeclaration with name 'appModule'.\r\n2) If found, look for the property assignment for `ɵinj`\r\n3) If found, continue traversal to find the `providers` array\r\n4) Visit all elements of the providers array and determine if they match one of two patterns:\r\n  4a) Invocations of a [built-in CDN loader function](https://angular.io/guide/image-directive#built-in-loaders). The domain is extracted from the argument.\r\n  4b) A manually-defined provider for IMAGE_LOADER with a [custom loader function](https://angular.io/guide/image-directive#custom-loaders). The function body is traversed and a regex is used on any string literals to find domain strings.\r\n\r\nFound domains are added to a Set, which is exported from `@ngtools/webpack`, and imported cross-package into `packages/angular_devkit/build_angular/src/builders/browser/index.ts`. From there, the domains are used during index.html generation to add preload tags.\r\n\r\n### Performance impacts\r\nI've designed the changes in this PR so that they should have minimal effect on build times. The AST traversal is narrow in scope, and will quit early if it doesn't encounter the specific pattern it's looking for.\r\n\r\n### Testing \r\nUnit tests are provided for both the new transform (`find_image_domains.ts`) and for the modifications to `augment-index-html.ts`. This feature really wants E2E testing (as it includes changes at both ends of the build process), but I couldn't find a good example of similar E2E tests for Ivy code in angular-cli. I'd be interested in feedback on this, and will be happy to add E2E tests with some guidance. \r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25709","RelatedDescription":"Open PR \"feat(@ngtools/webpack): add automated preconnects for image domains\" (#25709)"},{"Id":"1864769634","IsPullRequest":false,"CreatedAt":"2023-08-24T13:49:18","Actor":"Simon-Hayden-iteratec","Number":"25708","RawContent":null,"Title":"@angular-devkit/build-angular always includes \"@babel/plugin-transform-async-to-generator\" and \"@babel/plugin-proposal-async-generator-functions\"","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen I'm building an Angular project for modern browsers, I expect modern features like `async/await` to be used. However, when building the project, Angular uses Babel to replace `async/await` with calls to a helper function, which uses generator functions instead.\r\n\r\nThis means, that there is a slight overhead in performance, as well as bundle size to accommodate for the polyfill. Most annoyingly (to me at least) is that debugging can be tough, because I can't properly \"step into\" an async function call, without landing in Babel's helper function. Which makes understanding the code much harder.\r\n\r\n### Proposed changes\r\n\r\nI think either the behaviour should be well documented (e.g. on the [browser support](https://angular.io/guide/browser-support) site), or changed/customizable. Most browsers support `async` and `await`, so in my opinion the default should also include those features.\r\n\r\n### Minimal Reproduction\r\n\r\nI have created a demo repo for this issue: https://github.com/Simon-Hayden-iteratec/async-await-missing\r\n\r\nThere is a readme explaining the behaviour and how to reproduce it.\r\n\r\nBut the gist of it:\r\n- Run `ng build --optimization=false --output-hashing=none` targeting only modern browsers\r\n- At the bottom of the built `dist/<app-name>/main.js` find the function `_asyncToGenerator` from Babel. The file will also not include an `async`s or `await`s.\r\n\r\nI investigated where this code is coming from, and I assume [these lines](https://github.com/angular/angular-cli/blob/b09ce572ed72f19c353e71b7d9d751484c5db63a/packages/angular_devkit/build_angular/src/tools/babel/webpack-loader.ts#L90C7-L91C19) are the cause:\r\n\r\n```ts\r\n      // Application code (TS files) will only contain native async if target is ES2017+.\r\n      // However, third-party libraries can regardless of the target option.\r\n      // APF packages with code in [f]esm2015 directories is downlevelled to ES2015 and\r\n      // will not have native async.\r\n      customOptions.forceAsyncTransformation =\r\n        !/[\\\\/][_f]?esm2015[\\\\/]/.test(this.resourcePath) && source.includes('async');\r\n```\r\n\r\nIt appears to be `true` for all source files. I assume the line was only intended to be true for Angular library builds (or similar).\r\n\r\nWhen I edit the file in my local `node_modules` to be always `false`, I see a small, but measurable reduction in bundle size (measured with `du -bc \"dist/async-await-missing\"` in the linked Git repo):\r\n\r\n|      | Without Patch (Bit count) | With Patch (Bit count) | Diff |\r\n|:---:|:-------------------:|:--------------:|:-------:|\r\n| Unoptimized | 2 358 530 | 2 354 366 | -4 164 |\r\n| Optimized | 276 531 | 274 741| -1 790  |\r\n\r\nHowever, the difference is larger, for larger projects (tested in a company-private repo).\r\n\r\n### Exception or Error\r\n\r\n```text\r\nThere is no error message or similar.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.0\r\nNode: 16.20.1\r\nPackage Manager: npm 8.19.4\r\nOS: linux x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25708","RelatedDescription":"Closed issue \"@angular-devkit/build-angular always includes \"@babel/plugin-transform-async-to-generator\" and \"@babel/plugin-proposal-async-generator-functions\"\" (#25708)"},{"Id":"1864747185","IsPullRequest":true,"CreatedAt":"2023-08-24T09:17:43","Actor":"ocombe","Number":"25707","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use correct type for `extraEntryPoints`","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe type is incorrect\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThe type is correct\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25707","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): use correct type for `extraEntryPoints`\" (#25707)"},{"Id":"1863987193","IsPullRequest":false,"CreatedAt":"2023-08-23T20:08:06","Actor":"t0m-4","Number":"25706","RawContent":null,"Title":"Angular library build watch remove imports","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello,\r\n\r\nI have an angular 16 library with a sub entry point that contains a module.\r\n\r\nWhen i use \"ng build my-lib --watch\" --watch\"  it works but if i update a file then the module from my sub entry point is broken.\r\n\r\nYou can reproduce this :\r\n1. Get the project from https://github.com/t0m-4/lib-build-watch/tree/main\r\n2. Run 'ng build my-lib --watch --configuration development'.\r\n3. Check the file my-workspace\\dist\\my-lib\\ui\\form\\form.module.d.ts\r\n4. Update the file my-workspace\\projects\\my-lib\\ui\\form\\models\\form-type.model.ts (for exemple set another value for the enum value 'Other'\r\n5. Check again the file my-workspace\\dist\\my-lib\\ui\\form\\form.module.d.ts, some imports disappeared.\r\n\r\nMaybe it's related to my code but I don't understand why.\r\n\r\nThank you.\r\n![module-dif](https://github.com/angular/angular/assets/3096842/a6d8fe16-67b0-46d6-b1d1-38e762946a45)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/t0m-4/lib-build-watch/tree/main\n\n### Please provide the exception or error you saw\n\n```true\nthere is no exception during build but you got some when you use the library\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nng-packagr                      16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25706","RelatedDescription":"Open issue \"Angular library build watch remove imports\" (#25706)"},{"Id":"1862262350","IsPullRequest":false,"CreatedAt":"2023-08-22T20:28:19","Actor":"albanx","Number":"25705","RawContent":null,"Title":"ng generate m help does not generate module but shows help menu","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, Don't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nToday I was trying to generate a module called \"help\" using the CLI. I ran the command:\r\n```\r\nng generate m help\r\n```\r\n\r\nThis does not generate the module but shows up the angular cli help menu.\r\n\r\n![image](https://github.com/angular/angular/assets/1130664/59aaae3c-d239-4c67-badc-f94b874f0b18)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.0.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: win32 x64\r\n\r\nAngular: 16.0.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.0\r\n@angular-devkit/build-angular   16.0.0\r\n@angular-devkit/core            16.0.0\r\n@angular-devkit/schematics      16.0.0\r\n@nguniversal/builders           16.0.0\r\n@nguniversal/express-engine     16.0.0\r\n@schematics/angular             16.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25705","RelatedDescription":"Open issue \"ng generate m help does not generate module but shows help menu\" (#25705)"},{"Id":"1861371463","IsPullRequest":false,"CreatedAt":"2023-08-22T12:35:54","Actor":"antongakh","Number":"25704","RawContent":null,"Title":"Mismatch in schema name validation","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThere is a possibility to create an application with the `ng new` command with the name which makes it impossible to configure it through the `ng config` command.\n\n### Minimal Reproduction\n\n1. generate new application with `ng new my.application`\r\n2. run any `ng config` command in generated application (e.g. `ng config schematics.@schematics/angular:component.style scss`)\r\n3. Observe command output\r\n\r\nER: Command executed correctly\r\nAR: Error:\r\n`Error: Schema validation failed with the following errors:\r\n  Data path \"/projects\" must NOT have additional properties(my.application).`\n\n### Exception or Error\n\n```text\nError: Schema validation failed with the following errors:\r\n  Data path \"/projects\" must NOT have additional properties(my.application)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.0\r\n@angular-devkit/core         16.2.0\r\n@angular-devkit/schematics   16.2.0\r\n@angular/cli                 16.2.0\r\n@schematics/angular          16.2.0\n```\n\n\n### Anything else relevant?\n\nApplication name is validated by: https://github.com/angular/angular-cli/blob/main/packages/schematics/angular/application/schema.json#L16\r\nProject name is validated by: https://github.com/angular/angular-cli/blob/main/packages/angular/cli/lib/config/workspace-schema.json#L26C9-L26C47","Url":"https://github.com/angular/angular-cli/issues/25704","RelatedDescription":"Open issue \"Mismatch in schema name validation\" (#25704)"},{"Id":"1861320716","IsPullRequest":false,"CreatedAt":"2023-08-22T10:34:04","Actor":"trochol","Number":"25703","RawContent":null,"Title":"This undefined when using a private property in an async function with tsconfig target ES2022","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith target ES2022 in tsconfig the combination of a private property and an async function leads to an undefined this:\r\n\r\n```\r\nexport class AppComponent {\r\n\r\n  #counter = 0;\r\n\r\n  async count() {\r\n    this.#counter++;\r\n  }\r\n\r\n  getCounter() {\r\n    return this.#counter;\r\n  }\r\n}\r\n```\r\n\r\nThe problem is, that this is not assigned to a local field before the generator function:\r\n\r\n```\r\n  count() {\r\n    return (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      var _this$counter,\r\n        _this$counter2,\r\n        _this = this;\r\n      (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this, _counter, (_this$counter = (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this, _counter), _this$counter2 = _this$counter++, _this$counter)), _this$counter2;\r\n    })();\r\n  }\r\n```\r\n\r\nIf I downgrade the target to ES2020 it works correctly:\r\n\r\n```\r\n  count() {\r\n    var _this = this;\r\n    return (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      var _a;\r\n      (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__classPrivateFieldSet)(_this, _AppComponent_counter, (_a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__classPrivateFieldGet)(_this, _AppComponent_counter, \"f\"), _a++, _a), \"f\");\r\n    })();\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/trochol/private-field-in-async-function\n\n### Please provide the exception or error you saw\n\n```true\nERROR Error: Uncaught (in promise): TypeError: attempted to get private field on non-instance\r\nTypeError: attempted to get private field on non-instance\r\n    at _classExtractFieldDescriptor (classExtractFieldDescriptor.js:3:1)\r\n    at _classPrivateFieldGet (classPrivateFieldGet.js:4:47)\r\n    at app.component.ts:13:9\r\n    at Generator.next (<anonymous>)\r\n    at asyncGeneratorStep (asyncToGenerator.js:3:1)\r\n    at _next (asyncToGenerator.js:22:1)\r\n    at asyncToGenerator.js:27:1\r\n    at new ZoneAwarePromise (zone.js:1432:21)\r\n    at asyncToGenerator.js:19:1\r\n    at AppComponent.count (app.component.ts:13:21)\r\n    at resolvePromise (zone.js:1214:31)\r\n    at zone.js:1121:17\r\n    at zone.js:1137:33\r\n    at asyncGeneratorStep (asyncToGenerator.js:6:1)\r\n    at _next (asyncToGenerator.js:22:1)\r\n    at asyncToGenerator.js:27:1\r\n    at new ZoneAwarePromise (zone.js:1432:21)\r\n    at asyncToGenerator.js:19:1\r\n    at AppComponent.count (app.component.ts:13:21)\r\n    at AppComponent_Template_button_click_0_listener (app.component.html:1:18)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.6       \r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.6 (cli-only)\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.1.6\r\n@angular/cli                    15.1.6\r\n@schematics/angular             15.1.6\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25703","RelatedDescription":"Open issue \"This undefined when using a private property in an async function with tsconfig target ES2022\" (#25703)"},{"Id":"1859678212","IsPullRequest":false,"CreatedAt":"2023-08-21T15:54:16","Actor":"arobinson","Number":"25702","RawContent":null,"Title":"ng build does not display typescript errors when output is not a tty","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using an application to run `ng build` or piping the `ng build` output to a file, the typescript errors are not included, only the template warnings. When running it from a console/tty, the errors are correctly displayed. \r\n\r\nWe used to not have Typescript and Angular strict mode on. We want to get to the point where we have it on, so we are trying to capture the issues in our CI build and report them to Sonar as code smells via a custom eslint report so that we can reduce the issues over time. The problem is that trying to capture the `ng build` output is failing to work, hence reporting this issue. Without being able to get the typescript error output, it blocks our ability to capture this information.\n\n### Minimal Reproduction\n\nNo typescript errors reported:\r\n```\r\nng build -c strict --no-progress 2>&1 >&- > /tmp/ng-output.txt\r\n```\r\n\r\nTypescript errors correctly reported:\r\n```\r\nng build -c strict --no-progress\r\n```\r\n\r\ntsconfig.strict.json:\r\n```\r\n{\r\n  \"extends\": \"./tsconfig.app.json\",\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"./\",\r\n    \"strict\": true\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"preserveWhitespaces\": false,\r\n    \"strictInjectionParameters\": true,\r\n    \"strictInputAccessModifiers\": true,\r\n    \"fullTemplateTypeCheck\": true,\r\n    \"strictTemplates\": true\r\n  }\r\n}\r\n```\r\n\r\nangular.json:\r\n```\r\n{\r\n  ...\r\n          \"configurations\": {\r\n            \"strict\": {\r\n              \"tsConfig\": \"./tsconfig.strict.json\"\r\n            },\r\n  ....\r\n}\r\n```\r\n\r\nI'm actually trying to capture it from Python3, and getting the same problem:\r\n```\r\nimport subprocess as sp\r\nif __name__ == \"__main__\":\r\n    p = sp.Popen(\r\n        [\"ng\", \"build\", \"--no-progress\", \"-c\", \"strict\"],\r\n        stderr=sp.STDOUT,\r\n        stdout=sp.PIPE,\r\n        bufsize=1,\r\n        universal_newlines=True,\r\n    )\r\n    for i, line in enumerate(p.stdout, 1):\r\n        line = line.rstrip()\r\n        print(line)\r\n```\r\n\r\nOnce again, only the `Warning:` lines are seen, the typescript errors are lost\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.0.3\r\nNode: 16.16.0\r\nPackage Manager: pnpm 7.27.0\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1600.3\r\n@angular-devkit/core         16.0.3\r\n@angular-devkit/schematics   16.0.3\r\n@schematics/angular          16.0.3\r\n```\n```\n\n\n### Anything else relevant?\n\nMac OSX Ventura 13.4\r\nZsh command-line for the shell commands used above\r\nPython 3.9.6 for the python code\r\n\r\nTried using `FORCE_COLOR` 3 and 0 and still no help\r\n\r\n`ng build` seems to just be doing something really odd with its output when not a tty","Url":"https://github.com/angular/angular-cli/issues/25702","RelatedDescription":"Open issue \"ng build does not display typescript errors when output is not a tty\" (#25702)"},{"Id":"1858855350","IsPullRequest":false,"CreatedAt":"2023-08-21T08:18:26","Actor":"10eputzen","Number":"25701","RawContent":null,"Title":"ESBuild - Firebase/Firestore data is only shown after I manipulate something in the dom","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter changing the builder from\r\n\r\n`  \"builder\": \"@angular-devkit/build-angular:browser\"`\r\nto\r\n`  \"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\nI experience a very weird behavior for my data that I get from firestore in my Angular App in Development [it works fine on production!].\r\n\r\nThe data is loaded (I can see it in the console) but it would not show in the html template.\r\nIf I resize the page or click any button on it, the data will suddenly appear.\r\nI already tried changing between RXJS and Signals to deliver the data to my component, but only going back to webpack fixes the issue.\r\n\r\nThis is how I call an instance of firestore in my dataservice\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\n\n### Minimal Reproduction\n\n1) Change the builder in angular.json from\r\n\r\n`      \"builder\": \"@angular-devkit/build-angular:browser\"`\r\n\r\nto\r\n\r\n`    \"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\n2) Load any data to your template via Firestore\r\n\n\n### Exception or Error\n\n```text\nThere is no error - just no data in the template\n```\n\n\n### Your Environment\n\n```text\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\nIt works fine on production (firebase hosting)","Url":"https://github.com/angular/angular-cli/issues/25701","RelatedDescription":"Open issue \"ESBuild - Firebase/Firestore data is only shown after I manipulate something in the dom\" (#25701)"},{"Id":"1858754065","IsPullRequest":true,"CreatedAt":"2023-08-21T07:15:08","Actor":"angular-robot","Number":"25700","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25700","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25700)"},{"Id":"1858238673","IsPullRequest":false,"CreatedAt":"2023-08-20T19:21:34","Actor":"axos88","Number":"25699","RawContent":null,"Title":"ng build/serve --watch should have a switch to clear the screen before each rebuild","State":"open","Body":"### Command\n\nbuild, serve\n\n### Description\n\nReviving #21559, as I'd like to see the same thing implemented, to always have a clear view of what is actually an error and what has already been addressed. Without this it's very confusing to scroll back and forth to see where the last batch of errors are starting, and what was the output from the last build.\r\n\r\nDescription of #21559 below:\r\n\r\nWhen I'm refactoring large code-base i revised folowing process:\r\n\r\ni have ng serve running\r\ni do some changes in bulk without save\r\nsave all\r\ni stop the process\r\nclear the console\r\nthen start the ng serve again\r\nI'm doing this to see in isolation what I break, fixed what are new issues etc. So I can focus only on what is relevant\r\n\n\n### Describe the solution you'd like\n\nit would be nice to have a switch to run ng serve which would clear console everytime it detects change\r\n\n\n### Describe alternatives you've considered\n\nCurrently I'm doing it manually - stopping the process, clearing console and starting ng serve again","Url":"https://github.com/angular/angular-cli/issues/25699","RelatedDescription":"Open issue \"ng build/serve --watch should have a switch to clear the screen before each rebuild\" (#25699)"},{"Id":"1858187908","IsPullRequest":false,"CreatedAt":"2023-08-20T16:55:35","Actor":"SciTechEnthusiast","Number":"25698","RawContent":null,"Title":"proxy config json contents needs to be in sequence to work correctly","State":"open","Body":"### Command\n\nother, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nI don't know\n\n### Description\n\nBelow is the command I'm using \r\n`ng serve --proxy-config proxy.conf.json`\r\n\r\nContents of **proxy.conf.json** are:\r\n\r\n```\r\n{\r\n    \"/api/code\": {\r\n        \"target\": \"http://localhost/api/code\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    },\r\n    \"/api/codenames\": {\r\n        \"target\": \"http://localhost/api/codenames\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    }\r\n}\r\n```\r\n\r\nIf I make a call to  `GET /api/codenames` it gets called as  `GET /api/code/api/codenames`\r\n\r\n\r\nBelow is my angular http service code:\r\n\r\n```\r\nbaseUrl = `${window.location.protocol}//${window.location.host}`\r\ngetCode(codename: string): Observable<any> {\r\n    let payload = {\r\n      'codename': codename,\r\n    }\r\n    return this.http.post(`${this.baseUrl}/api/code`, payload);\r\n  }\r\n\r\n  getCodeNames(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/api/codenames`);\r\n  }\r\n\r\n```\r\n\r\n\r\n\n\n### Minimal Reproduction\n\n`ng serve --proxy-config proxy.conf.json`\r\n\r\njust make 2 dummy apis with similar name prefix \r\n\r\ne.g.\r\n\r\n- `/api/test`\r\n- `/api/testcases`\r\n\r\n\r\nwhen you try to call `/api/testcases` it will call `/api/test/api/testcases`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.1\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.2\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.1\r\n@angular-devkit/build-angular   16.1.1\r\n@angular-devkit/core            16.1.1\r\n@angular-devkit/schematics      16.1.1\r\n@angular/cdk                    16.1.4\r\n@angular/cli                    16.1.1\r\n@schematics/angular             16.1.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\nproxy resolving is just wrong I have to put the config in sequence like /codesnames first and then /code in order to make it work:\r\n\r\nAfter changing sequence like below then only I'm able to call correct endpoint:\r\n\r\n```\r\n{\r\n    \"/api/codenames\": {\r\n        \"target\": \"http://localhost/api/codenames\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    },\r\n    \"/api/code\": {\r\n        \"target\": \"http://localhost/api/code\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    }\r\n}\r\n```","Url":"https://github.com/angular/angular-cli/issues/25698","RelatedDescription":"Open issue \"proxy config json contents needs to be in sequence to work correctly\" (#25698)"},{"Id":"1857641129","IsPullRequest":false,"CreatedAt":"2023-08-19T08:51:36","Actor":"Neizan93","Number":"25697","RawContent":null,"Title":"Integrate jest-fail-on-console in @angular-devkit/build-angular:jest","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nI would like to propose the integration of the `jest-fail-on-console` plugin into the @angular-devkit/build-angular:jest configuration. Currently, Jest does not automatically fail tests when there are console errors or warnings. This plugin helps in making tests fail when such console outputs are present, aiding in maintaining a clean and clear test output.\n\n### Describe the solution you'd like\n\nIntegrate the jest-fail-on-console utility into the @angular-devkit/build-angular:jest configuration. This would involve adding the utility as a dependency and invoking it in the appropriate setup files for Jest.\n\n### Describe alternatives you've considered\n\nWhile there might be alternative solutions or workarounds, such as manually asserting console outputs in tests, integrating jest-fail-on-console would provide a standardized and automated approach, reducing the overhead for developers to manage console outputs in their tests.\r\n\r\n- Manually asserting console outputs in tests: While this is possible, it can lead to duplicated effort and less standardized testing practices.\r\n\r\n- Integrating Jest configuration within angular.json: Another alternative would be to integrate the Jest configuration (such as jest-config and jest-setup) into the angular.json configuration for @angular-devkit/build-angular:jest. This would provide a more seamless way to incorporate plugins like jest-fail-on-console and other customizations.","Url":"https://github.com/angular/angular-cli/issues/25697","RelatedDescription":"Open issue \"Integrate jest-fail-on-console in @angular-devkit/build-angular:jest\" (#25697)"},{"Id":"1857635076","IsPullRequest":false,"CreatedAt":"2023-08-19T08:28:18","Actor":"Neizan93","Number":"25696","RawContent":null,"Title":"Support for jest-angular-test-verifier when using @angular-devkit/build-angular:jest","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Description\r\n\r\nAs Angular CLI is starting to provide support for Jest in Angular 16, I would like to propose the addition of support for the `jest-angular-test-verifier` extension or a similar feature. This feature would enable developers to detect files that lack corresponding `spec.ts` files, helping to ensure comprehensive test coverage in Angular projects.\r\n\r\n**Benefits**\r\n\r\n- Enhance the testing experience in Angular projects by ensuring complete test coverage.\r\n- Provide a built-in solution for developers to easily identify files without corresponding test files.\r\n- Reduce the need for external tools or custom scripts to perform this analysis.\r\n- Align Angular CLI with best practices for maintaining test coverage in Angular applications.\r\n\r\njest-angular-test-verifier npmjs: https://www.npmjs.com/package/jest-angular-test-verifier\r\n\r\n### Describe the solution you'd like\r\n\r\nThe proposed solution is to integrate the functionality of `jest-angular-test-verifier` or a similar tool into Angular CLI. This would involve creating a built-in mechanism that can analyze the project's file structure and identify files that do not have associated `spec.ts` files. The tool should offer configuration options to customize the file extensions to check, define exclusions, and set exclusion rules based on content.\r\n\r\n### Describe alternatives you've considered\r\n\r\nWhile the proposed solution suggests integrating `jest-angular-test-verifier` directly into Angular CLI, an alternative approach could involve developing a dedicated and more sophisticated solution tailored to Angular projects. By leveraging the power and familiarity of Angular's codebase, the CLI team could create an integrated tool that offers more advanced features and optimizations for detecting missing `spec.ts` files. This approach could lead to a more seamless and tightly integrated experience for Angular developers.\r\n\r\nI appreciate your consideration of this feature proposal and look forward to the possibility of seeing this enhancement added to Angular CLI. If you have any questions or need further details, please let me know. Thank you!\r\n","Url":"https://github.com/angular/angular-cli/issues/25696","RelatedDescription":"Open issue \"Support for jest-angular-test-verifier when using @angular-devkit/build-angular:jest\" (#25696)"},{"Id":"1857571906","IsPullRequest":true,"CreatedAt":"2023-08-19T05:16:03","Actor":"angular-robot","Number":"25695","RawContent":null,"Title":"build: update dependency tslib to v2.6.2","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [tslib](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/tslib)) | dependencies | patch | [`2.6.1` -> `2.6.2`](https://renovatebot.com/diffs/npm/tslib/2.6.1/2.6.2) |\n| [tslib](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/tslib)) | devDependencies | patch | [`2.6.1` -> `2.6.2`](https://renovatebot.com/diffs/npm/tslib/2.6.1/2.6.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/tslib (tslib)</summary>\n\n### [`v2.6.2`](https://togithub.com/microsoft/tslib/releases/tag/v2.6.2): tslib 2.6.2\n\n[Compare Source](https://togithub.com/Microsoft/tslib/compare/v2.6.1...v2.6.2)\n\n##### What's Changed\n\n-   Fix path to `exports[\"module\"][\"types\"]` by [@&#8203;andrewbranch](https://togithub.com/andrewbranch) in [https://github.com/microsoft/tslib/pull/217](https://togithub.com/microsoft/tslib/pull/217)\n\n**Full Changelog**: https://github.com/microsoft/tslib/compare/v2.6.1...v2.6.2\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNDMuMiIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25695","RelatedDescription":"Open PR \"build: update dependency tslib to v2.6.2\" (#25695)"},{"Id":"1856747111","IsPullRequest":true,"CreatedAt":"2023-08-18T13:40:46","Actor":"santoshyadavdev","Number":"25694","RawContent":null,"Title":"refactor(@angular-devkit/schematics-cli): use latest version of jasmine for schematics","State":"open","Body":"Schematics project install jasmine, but its of very old version.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently jasmine version installed is very old\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\nInstall the latest version of jasmine\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25694","RelatedDescription":"Open PR \"refactor(@angular-devkit/schematics-cli): use latest version of jasmine for schematics\" (#25694)"},{"Id":"1854707350","IsPullRequest":false,"CreatedAt":"2023-08-17T10:17:21","Actor":"advapiIT","Number":"25693","RawContent":null,"Title":"Warning of deprecated referenced npms","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI got the following warning while I'm doing yarn ci... they seems to start from @angular-devkit/build-angular \r\n\r\n```warning @angular-devkit/build-angular > guess-parser > @wessberg/ts-evaluator@0.0.27: this package has been renamed to ts-evaluator. Please install ts-evaluator instead\r\nwarning @angular-devkit/build-angular > webpack-dev-middleware > memfs@3.6.0: this will be v4\r\nwarning @angular-devkit/build-angular > webpack-dev-server > webpack-dev-middleware > memfs@3.6.0: this will be v4\r\nwarning @angular-devkit/build-angular > guess-parser > @wessberg/ts-evaluator > jsdom > w3c-hr-time@1.0.2: Use your platform's native performance.now() and performance.timeOrigin.```\r\n\r\nAre you also get them? How can i fix them?\r\n\r\nThanks\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nHere's my package json\r\n\r\n```\r\n{\r\n  \"name\": \"moonshine\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ci\": \"yarn install --frozen-lockfile\",\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"start:docker\": \"ng serve --host=0.0.0.0 --disable-host-check --base-href=/\",\r\n    \"build\": \"ng build --configuration production --extract-licenses=true && xcopy web.config dist\\\\ttg-crm\",\r\n    \"build:linux\": \"ng build --configuration production --extract-licenses=true && cp web.config dist/ttg-crm\",\r\n    \"build:staging\": \"ng build --configuration=staging --extract-licenses=true && xcopy web.config dist\\\\ttg-crm\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^16.2.1\",\r\n    \"@angular/cdk\": \"^16.2.1\",\r\n    \"@angular/common\": \"^16.2.1\",\r\n    \"@angular/compiler\": \"^16.2.1\",\r\n    \"@angular/core\": \"^16.2.1\",\r\n    \"@angular/forms\": \"^16.2.1\",\r\n    \"@angular/localize\": \"^16.2.1\",\r\n    \"@angular/material\": \"^16.2.1\",\r\n    \"@angular/platform-browser\": \"^16.2.1\",\r\n    \"@angular/platform-browser-dynamic\": \"^16.2.1\",\r\n    \"@angular/router\": \"^16.2.1\",\r\n    \"@angular/service-worker\": \"^16.2.1\",\r\n    \"@material/checkbox\": \"^15.0.0-canary.b994146f6.0\",\r\n    \"@ng-bootstrap/ng-bootstrap\": \"^15.1.1\",\r\n    \"@ngrx/effects\": \"^16.2.0\",\r\n    \"@ngrx/store\": \"^16.2.0\",\r\n    \"@popperjs/core\": \"^2.11.8\",\r\n    \"@progress/kendo-angular-buttons\": \"13.3.0\",\r\n    \"@progress/kendo-angular-charts\": \"^13.3.0\",\r\n    \"@progress/kendo-angular-common\": \"13.3.0\",\r\n    \"@progress/kendo-angular-dateinputs\": \"13.3.0\",\r\n    \"@progress/kendo-angular-dialog\": \"13.3.0\",\r\n    \"@progress/kendo-angular-dropdowns\": \"13.3.0\",\r\n    \"@progress/kendo-angular-editor\": \"^13.3.0\",\r\n    \"@progress/kendo-angular-excel-export\": \"13.3.0\",\r\n    \"@progress/kendo-angular-grid\": \"^13.3.0\",\r\n    \"@progress/kendo-angular-icons\": \"13.3.0\",\r\n    \"@progress/kendo-angular-inputs\": \"13.3.0\",\r\n    \"@progress/kendo-angular-intl\": \"13.3.0\",\r\n    \"@progress/kendo-angular-l10n\": \"13.3.0\",\r\n    \"@progress/kendo-angular-label\": \"13.3.0\",\r\n    \"@progress/kendo-angular-layout\": \"13.3.0\",\r\n    \"@progress/kendo-angular-navigation\": \"13.3.0\",\r\n    \"@progress/kendo-angular-notification\": \"^13.3.0\",\r\n    \"@progress/kendo-angular-pdf-export\": \"13.3.0\",\r\n    \"@progress/kendo-angular-popup\": \"13.3.0\",\r\n    \"@progress/kendo-angular-progressbar\": \"13.3.0\",\r\n    \"@progress/kendo-angular-scheduler\": \"^13.3.0\",\r\n    \"@progress/kendo-angular-toolbar\": \"13.3.0\",\r\n    \"@progress/kendo-angular-treeview\": \"13.3.0\",\r\n    \"@progress/kendo-angular-upload\": \"13.3.0\",\r\n    \"@progress/kendo-angular-utils\": \"13.3.0\",\r\n    \"@progress/kendo-data-query\": \"^1.6.0\",\r\n    \"@progress/kendo-drawing\": \"^1.17.5\",\r\n    \"@progress/kendo-licensing\": \"^1.3.1\",\r\n    \"@progress/kendo-svg-icons\": \"^1.8.0\",\r\n    \"@progress/kendo-theme-bootstrap\": \"^6.6.0\",\r\n    \"@progress/kendo-theme-default\": \"^6.6.0\",\r\n    \"@progress/kendo-theme-fluent\": \"^6.6.0\",\r\n    \"@progress/kendo-theme-material\": \"^6.6.0\",\r\n    \"@types/crypto-js\": \"^4.1.1\",\r\n    \"bootstrap\": \"^5.3.1\",\r\n    \"crypto-js\": \"^4.1.1\",\r\n    \"hammerjs\": \"^2.0.8\",\r\n    \"imagesloaded\": \"^5.0.0\",\r\n    \"jquery\": \"^3.7.0\",\r\n    \"jsencrypt\": \"^3.3.2\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"moment\": \"^2.29.4\",\r\n    \"ngx-scanner-qrcode\": \"^1.6.2\",\r\n    \"pace-js\": \"^1.2.4\",\r\n    \"rxjs\": \"^7.8.1\",\r\n    \"rxjs-compat\": \"^6.6.7\",\r\n    \"sweetalert2\": \"^11.7.23\",\r\n    \"tslib\": \"^2.6.1\",\r\n    \"zone.js\": \"~0.13.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^16.2.0\",\r\n    \"@angular/cli\": \"~16.2.0\",\r\n    \"@angular/compiler-cli\": \"^16.2.1\",\r\n    \"@types/jasmine\": \"~4.3.5\",\r\n    \"@types/lodash\": \"^4.14.197\",\r\n    \"jasmine-core\": \"~5.1.0\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.1\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\r\n    \"typescript\": \"~5.1.6\"\r\n  }\r\n}\r\n\r\n```\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25693","RelatedDescription":"Open issue \"Warning of deprecated referenced npms\" (#25693)"},{"Id":"1854224694","IsPullRequest":false,"CreatedAt":"2023-08-17T08:04:37","Actor":"tommyc38","Number":"25691","RawContent":null,"Title":"IvyPlugin is overriding tsconfig options in AngularWebpackPlugin which leads to coverage issues","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI was running testing an angular buildable library using Storybook and Cypress.  I wanted coverage for my cypress tests but my coverage was thrown off because my source maps were partially compiled (e.g. decorators) so my line numbers were off. See [this issue](https://github.com/storybookjs/storybook/issues/21171) for a repro and more details.  I looked at the webpack config that was used to build storybook and noticed that AngularWebpackPlugin had `complierOptions.sourceMap = false` which was overriding my tsconfig which had `sourceMap = true`.  I set `sourceMap = true` in the webpack config at runtime and my source maps worked as expected.  I found the culprit in your source code [here](https://github.com/angular/angular-cli/blob/c3c4853d4d908025e2f9f0d32419f11459021bff/packages/angular_devkit/build_angular/src/tools/webpack/plugins/typescript.ts#L22C45-L22C45) and was wondering why you are explicitly setting these values and not letting tsconfig be the source of truth?  Is this a bug?  \n\n### Minimal Reproduction\n\nThere is a repro in the referenced issue above.\n\n### Exception or Error\n\n```text\nThere are no errors just unexpected behavior.\n```\n\n\n### Your Environment\n\n```text\n// partial package.json. ng version doesn't work in nx project.\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"16.1.8\",\r\n    \"@angular/common\": \"16.1.8\",\r\n    \"@angular/compiler\": \"16.1.8\",\r\n    \"@angular/core\": \"16.1.8\",\r\n    \"@angular/forms\": \"16.1.8\",\r\n    \"@angular/platform-browser\": \"16.1.8\",\r\n    \"@angular/platform-browser-dynamic\": \"16.1.8\",\r\n    \"@angular/router\": \"16.1.8\",\r\n    \"@nx/angular\": \"16.6.0\",\r\n    \"rxjs\": \"7.8.1\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"0.13.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"16.1.8\",\r\n    \"@angular-devkit/core\": \"16.1.8\",\r\n    \"@angular-devkit/schematics\": \"16.1.8\",\r\n    \"@angular-eslint/eslint-plugin\": \"16.0.3\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"16.0.3\",\r\n    \"@angular-eslint/template-parser\": \"16.0.3\",\r\n    \"@angular/cli\": \"~16.1.0\",\r\n    \"@angular/compiler-cli\": \"16.1.8\",\r\n    \"@angular/language-service\": \"16.1.8\",\r\n\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25691","RelatedDescription":"Closed issue \"IvyPlugin is overriding tsconfig options in AngularWebpackPlugin which leads to coverage issues\" (#25691)"},{"Id":"1854433039","IsPullRequest":false,"CreatedAt":"2023-08-17T07:56:14","Actor":"minnie80","Number":"25692","RawContent":null,"Title":"ng test does not load scripts from <head> tag / index.html","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI included bootstrap in my angular app (created by `@angular/cli@16.2.0`) by defining links to CDN inside the `<head>` tag of the `index.html` and calling it in `app.component.ts` like the following:\r\n\r\n```\r\ndeclare const bootstrap: any;\r\nngOnInit(){\r\n   console.log(bootstrap.Tooltip.VERSION);\r\n}\r\n```\r\n`ng serve` worked with functions from bootstrap!\r\n\r\n`ng test` (just the boilerplate tests) reported `ReferenceError: bootstrap is not defined` (while ng serve could display the page properly with bootstrap).\n\n### Minimal Reproduction\n\nhttps://github.com/minnie80/angular-test/tree/bootstrap-from-cdn\n\n### Exception or Error\n\n```text\n>npm run test\r\n\r\n> angular-test@0.0.0 test\r\n> ng test\r\n\r\n✔ Browser application bundle generation complete.\r\n17 08 2023 09:29:31.039:WARN [karma]: No captured browser, open http://localhost:9876/\r\n17 08 2023 09:29:31.059:INFO [karma-server]: Karma v6.4.2 server started at http://localhost:9876/\r\n17 08 2023 09:29:31.060:INFO [launcher]: Launching browsers Chrome with concurrency unlimited\r\n17 08 2023 09:29:31.077:INFO [launcher]: Starting browser Chrome\r\n17 08 2023 09:29:32.148:INFO [Chrome 115.0.0.0 (Windows 10)]: Connected on socket s1JzHMXLfQQOZkwPAAAB with id 52028682\r\nChrome 115.0.0.0 (Windows 10) AppComponent should render title FAILED\r\n        ReferenceError: bootstrap is not defined\r\n            at AppComponent.call [as ngOnInit] (src/app/app.component.ts:13:17)\r\n            at callHookInternal (node_modules/@angular/core/fesm2022/core.mjs:3940:14)\r\n            at callHook (node_modules/@angular/core/fesm2022/core.mjs:3967:13)\r\n            at callHooks (node_modules/@angular/core/fesm2022/core.mjs:3922:17)\r\n            at executeInitAndCheckHooks (node_modules/@angular/core/fesm2022/core.mjs:3872:9)\r\n            at refreshView (node_modules/@angular/core/fesm2022/core.mjs:12913:21)\r\n            at detectChangesInternal (node_modules/@angular/core/fesm2022/core.mjs:12837:9)\r\n            at RootViewRef.detectChanges (node_modules/@angular/core/fesm2022/core.mjs:13354:9)\r\n            at ComponentFixture._tick (node_modules/@angular/core/fesm2022/testing.mjs:126:32)\r\n            at node_modules/@angular/core/fesm2022/testing.mjs:139:22\r\nChrome 115.0.0.0 (Windows 10): Executed 3 of 3 (1 FAILED) (0.142 secs / 0.13 secs)\r\nTOTAL: 1 FAILED, 2 SUCCESS\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.16.1\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25692","RelatedDescription":"Closed issue \"ng test does not load scripts from <head> tag / index.html\" (#25692)"},{"Id":"1853377884","IsPullRequest":true,"CreatedAt":"2023-08-16T14:35:31","Actor":"Lightning00Blade","Number":"25690","RawContent":null,"Title":"docs(@angular/cli): Add Puppeteer schematics to e2e command","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nRunning `ng e2e` suggests `Cypress`, `Nightwatch`, `WebdriverIO`. \r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nRunning `ng e2e` suggests Puppeteer as an option to for e2e testing. \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n\r\nRef package: [@puppeteer/ng-schematics](https://www.npmjs.com/package/@puppeteer/ng-schematics)\r\nRef docs: [pptr.dev](https://pptr.dev/ng-schematics)\r\n","Url":"https://github.com/angular/angular-cli/pull/25690","RelatedDescription":"Open PR \"docs(@angular/cli): Add Puppeteer schematics to e2e command\" (#25690)"},{"Id":"1852583578","IsPullRequest":true,"CreatedAt":"2023-08-16T06:17:36","Actor":"angular-robot","Number":"25688","RawContent":null,"Title":"build: update dependency pacote to v17","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [pacote](https://togithub.com/npm/pacote) | dependencies | major | [`16.0.0` -> `17.0.3`](https://renovatebot.com/diffs/npm/pacote/16.0.0/17.0.3) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | major | [`16.0.0` -> `17.0.3`](https://renovatebot.com/diffs/npm/pacote/16.0.0/17.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/pacote (pacote)</summary>\n\n### [`v17.0.3`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1703-2023-08-24)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v17.0.2...v17.0.3)\n\n##### Dependencies\n\n-   [`ace7c28`](https://togithub.com/npm/pacote/commit/ace7c283c424b12ec18c9b412515fe750538f0d9) [#&#8203;305](https://togithub.com/npm/pacote/pull/305) bump npm-packlist from 7.0.4 to 8.0.0\n\n### [`v17.0.2`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1702-2023-08-18)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v17.0.1...v17.0.2)\n\n##### Dependencies\n\n-   [`c3b892d`](https://togithub.com/npm/pacote/commit/c3b892db8b889e43d8f385ee1171e2e36a5b32eb) [#&#8203;303](https://togithub.com/npm/pacote/pull/303) bump sigstore from 1.3.0 to 2.0.0\n\n### [`v17.0.1`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1701-2023-08-15)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v17.0.0...v17.0.1)\n\n##### Dependencies\n\n-   [`6ddae13`](https://togithub.com/npm/pacote/commit/6ddae13dd4cd346255221077d13fa534ed924f63) [#&#8203;302](https://togithub.com/npm/pacote/pull/302) bump npm-registry-fetch from 15.0.0 to 16.0.0\n-   [`42bf787`](https://togithub.com/npm/pacote/commit/42bf787be1af58050edd38ab599bb74021b88dbf) [#&#8203;300](https://togithub.com/npm/pacote/pull/300) bump npm-pick-manifest from 8.0.2 to 9.0.0\n\n### [`v17.0.0`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1700-2023-08-15)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v16.0.0...v17.0.0)\n\n##### ⚠️ BREAKING CHANGES\n\n-   support for node <=16.13 has been removed\n\n##### Bug Fixes\n\n-   [`2db2fb5`](https://togithub.com/npm/pacote/commit/2db2fb520b54a3a486c92f141a86c31910a5fa73) [#&#8203;296](https://togithub.com/npm/pacote/pull/296) drop node 16.13.x support ([@&#8203;lukekarrys](https://togithub.com/lukekarrys))\n\n##### Dependencies\n\n-   [`e9e964b`](https://togithub.com/npm/pacote/commit/e9e964b5facbf4eb1229ec17e9da3ebeaffc7fe0) [#&#8203;299](https://togithub.com/npm/pacote/pull/299) bump read-package-json from 6.0.4 to 7.0.0\n-   [`5d26500`](https://togithub.com/npm/pacote/commit/5d26500d32bc379a26c42b7e107c9bb28dac5389) [#&#8203;298](https://togithub.com/npm/pacote/pull/298) bump npm-package-arg from 10.1.0 to 11.0.0\n-   [`d13bb9c`](https://togithub.com/npm/pacote/commit/d13bb9c5f174f38c419bb9701efe1bd9eef27a91) [#&#8203;294](https://togithub.com/npm/pacote/pull/294) bump [@&#8203;npmcli/git](https://togithub.com/npmcli/git) from 4.1.0 to 5.0.0\n-   [`7a25e39`](https://togithub.com/npm/pacote/commit/7a25e396b6ca6a54da9724726e1da4fdd5a95ea5) [#&#8203;293](https://togithub.com/npm/pacote/pull/293) bump cacache from 17.1.4 to 18.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNTcuOCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25688","RelatedDescription":"Open PR \"build: update dependency pacote to v17\" (#25688)"},{"Id":"1852583335","IsPullRequest":true,"CreatedAt":"2023-08-16T06:17:23","Actor":"angular-robot","Number":"25687","RawContent":null,"Title":"build: update dependency npm-pick-manifest to v9","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [npm-pick-manifest](https://togithub.com/npm/npm-pick-manifest) | dependencies | major | [`8.0.2` -> `9.0.0`](https://renovatebot.com/diffs/npm/npm-pick-manifest/8.0.2/9.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/npm-pick-manifest (npm-pick-manifest)</summary>\n\n### [`v9.0.0`](https://togithub.com/npm/npm-pick-manifest/blob/HEAD/CHANGELOG.md#900-2023-08-15)\n\n[Compare Source](https://togithub.com/npm/npm-pick-manifest/compare/v8.0.2...v9.0.0)\n\n##### ⚠️ BREAKING CHANGES\n\n-   support for node 14 has been removed\n\n##### Bug Fixes\n\n-   [`842e4eb`](https://togithub.com/npm/npm-pick-manifest/commit/842e4eb36a6cf38387f75b4cc497f5124600e0d4) [#&#8203;95](https://togithub.com/npm/npm-pick-manifest/pull/95) drop node14 support ([@&#8203;lukekarrys](https://togithub.com/lukekarrys))\n\n##### Dependencies\n\n-   [`8bdb3a6`](https://togithub.com/npm/npm-pick-manifest/commit/8bdb3a619b86a6689b1a558fe753d936b74939d1) [#&#8203;94](https://togithub.com/npm/npm-pick-manifest/pull/94) bump npm-package-arg from 10.1.0 to 11.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNDMuMiIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25687","RelatedDescription":"Open PR \"build: update dependency npm-pick-manifest to v9\" (#25687)"},{"Id":"1852527916","IsPullRequest":true,"CreatedAt":"2023-08-16T05:15:46","Actor":"angular-robot","Number":"25686","RawContent":null,"Title":"build: update dependency npm-package-arg to v11","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | dependencies | major | [`10.1.0` -> `11.0.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.1.0/11.0.0) |\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | devDependencies | major | [`10.1.0` -> `11.0.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.1.0/11.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/npm-package-arg (npm-package-arg)</summary>\n\n### [`v11.0.0`](https://togithub.com/npm/npm-package-arg/blob/HEAD/CHANGELOG.md#1100-2023-08-15)\n\n[Compare Source](https://togithub.com/npm/npm-package-arg/compare/v10.1.0...v11.0.0)\n\n##### ⚠️ BREAKING CHANGES\n\n-   the strict RFC 8909 mode has been removed\n-   support for node 14 has been removed\n\n##### Bug Fixes\n\n-   [`9344167`](https://togithub.com/npm/npm-package-arg/commit/934416709cb14ad0a0bab6e544b8d42c62aa279f) [#&#8203;135](https://togithub.com/npm/npm-package-arg/pull/135) remove strict 8909 mode ([@&#8203;wraithgar](https://togithub.com/wraithgar))\n-   [`5042ff2`](https://togithub.com/npm/npm-package-arg/commit/5042ff2bba38bf3d8f62541960c808ac3230da08) [#&#8203;139](https://togithub.com/npm/npm-package-arg/pull/139) drop node14 support ([@&#8203;lukekarrys](https://togithub.com/lukekarrys))\n\n##### Dependencies\n\n-   [`d2ab7ba`](https://togithub.com/npm/npm-package-arg/commit/d2ab7bade19f4594c828ee2a4d5942b2626123cb) [#&#8203;138](https://togithub.com/npm/npm-package-arg/pull/138) bump hosted-git-info from 6.1.1 to 7.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNDMuMiIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25686","RelatedDescription":"Open PR \"build: update dependency npm-package-arg to v11\" (#25686)"},{"Id":"1852527734","IsPullRequest":true,"CreatedAt":"2023-08-16T05:15:34","Actor":"angular-robot","Number":"25685","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.22.10` -> `7.22.11`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.22.10/7.22.11) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.22.10` -> `7.22.11`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.22.10/7.22.11) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.22.10` -> `7.22.11`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.22.10/7.22.11) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.22.10` -> `7.22.11`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.22.10/7.22.11) |\n| [@bazel/bazelisk](https://togithub.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.12.1` -> `1.18.0`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.12.1/1.18.0) |\n| [@bazel/buildifier](https://togithub.com/bazelbuild/buildtools) | devDependencies | minor | [`6.1.2` -> `6.3.3`](https://renovatebot.com/diffs/npm/@bazel%2fbuildifier/6.1.2/6.3.3) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.4.0` -> `6.5.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.4.0/6.5.0) |\n| [actions/checkout](https://togithub.com/actions/checkout) | action | minor | `v3.5.3` -> `v3.6.0` |\n| [actions/setup-node](https://togithub.com/actions/setup-node) | action | patch | `v3.8.0` -> `v3.8.1` |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.47.0` -> `8.48.0`](https://renovatebot.com/diffs/npm/eslint/8.47.0/8.48.0) |\n| [eslint-plugin-import](https://togithub.com/import-js/eslint-plugin-import) | devDependencies | patch | [`2.28.0` -> `2.28.1`](https://renovatebot.com/diffs/npm/eslint-plugin-import/2.28.0/2.28.1) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | patch | [`0.30.2` -> `0.30.3`](https://renovatebot.com/diffs/npm/magic-string/0.30.2/0.30.3) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | devDependencies | patch | [`0.30.2` -> `0.30.3`](https://renovatebot.com/diffs/npm/magic-string/0.30.2/0.30.3) |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`16.2.0` -> `16.2.1`](https://renovatebot.com/diffs/npm/ng-packagr/16.2.0/16.2.1) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.27` -> `8.4.28`](https://renovatebot.com/diffs/npm/postcss/8.4.27/8.4.28) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | patch | [`8.4.27` -> `8.4.28`](https://renovatebot.com/diffs/npm/postcss/8.4.27/8.4.28) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.71` -> `23.0.73`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.71/23.0.73) |\n| [rollup](https://rollupjs.org/) ([source](https://togithub.com/rollup/rollup)) | devDependencies | minor | [`~3.24.0` -> `~3.28.0`](https://renovatebot.com/diffs/npm/rollup/3.24.1/3.28.1) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.65.1` -> `1.66.1`](https://renovatebot.com/diffs/npm/sass/1.65.1/1.66.1) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.65.1` -> `1.66.1`](https://renovatebot.com/diffs/npm/sass/1.65.1/1.66.1) |\n| [verdaccio](https://verdaccio.org) ([source](https://togithub.com/verdaccio/verdaccio)) | devDependencies | patch | [`5.26.1` -> `5.26.2`](https://renovatebot.com/diffs/npm/verdaccio/5.26.1/5.26.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.22.11`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72211-2023-08-24)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.10...v7.22.11)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15882](https://togithub.com/babel/babel/pull/15882) Fix: fully remove TS nested type-only exported namespaces ([@&#8203;yangguansen](https://togithub.com/yangguansen))\n-   `babel-types`\n    -   [#&#8203;15867](https://togithub.com/babel/babel/pull/15867) fix: definition of TS function type params ([@&#8203;danez](https://togithub.com/danez))\n-   `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-dynamic-import`, `babel-plugin-transform-export-namespace-from`, `babel-plugin-transform-json-strings`, `babel-plugin-transform-logical-assignment-operators`, `babel-plugin-transform-nullish-coalescing-operator`, `babel-plugin-transform-numeric-separator`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-catch-binding`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-private-property-in-object`\n    -   [#&#8203;15858](https://togithub.com/babel/babel/pull/15858) fix(standalone): strip archived syntax plugins ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`\n    -   [#&#8203;15850](https://togithub.com/babel/babel/pull/15850) Support configuring cache in ESM configs ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-parser`\n    -   [#&#8203;10940](https://togithub.com/babel/babel/pull/10940) Do not record trailing comma pos when `maybeAsyncArrow: false` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helper-compilation-targets`, `babel-parser`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-syntax-decorators`, `babel-preset-env`, `babel-preset-react`, `babel-register`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15872](https://togithub.com/babel/babel/pull/15872) enable jest/no-standalone-expect ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helpers`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-regenerator`, `babel-preset-env`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15833](https://togithub.com/babel/babel/pull/15833) bump json5, terser and webpack, further minimize babel helpers ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   Other\n    -   [#&#8203;15846](https://togithub.com/babel/babel/pull/15846) Use Babel 8.0 alpha to build babel ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;15856](https://togithub.com/babel/babel/pull/15856) Exclude redundant files from publish process ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-bugfix-v8-spread-parameters-in-optional-chaining`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-classes`, `babel-plugin-transform-optional-chaining`, `babel-preset-env`\n    -   [#&#8203;15871](https://togithub.com/babel/babel/pull/15871) Simplify `?.` output when chain result is ignored ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n</details>\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.18.0`](https://togithub.com/bazelbuild/bazelisk/releases/tag/v1.18.0)\n\n[Compare Source](https://togithub.com/bazelbuild/bazelisk/compare/v1.12.1...v1.18.0)\n\nBazelisk v1.18.0 contains some bug fixes and internal cleanups. Most notably, it uses consistent Bazel paths to avoid spurious rebuilds when downloading the same Bazel binary from a different mirror ([https://github.com/bazelbuild/bazelisk/pull/465](https://togithub.com/bazelbuild/bazelisk/pull/465)).\n\nWe’d like to thank our amazing contributors [@&#8203;alexeagle](https://togithub.com/alexeagle), [@&#8203;fmeum](https://togithub.com/fmeum), [@&#8203;illicitonion](https://togithub.com/illicitonion), [@&#8203;sluongng](https://togithub.com/sluongng) and [@&#8203;wisechengyi](https://togithub.com/wisechengyi)!\n\n</details>\n\n<details>\n<summary>bazelbuild/buildtools (@&#8203;bazel/buildifier)</summary>\n\n### [`v6.3.3`](https://togithub.com/bazelbuild/buildtools/releases/tag/v6.3.3): Release 6.3.3 (2023-08-25)\n\n[Compare Source](https://togithub.com/bazelbuild/buildtools/compare/v6.3.2...v6.3.3)\n\n-   `out_of_order_load` warning is enabled by default\n-   `format` command for buildozer for unconditional formatting\n\n### [`v6.3.2`](https://togithub.com/bazelbuild/buildtools/releases/tag/v6.3.2): Release 6.3.2 (2023-08-17)\n\n[Compare Source](https://togithub.com/bazelbuild/buildtools/compare/v6.1.2...v6.3.2)\n\n-   Updates to buildozer commands (`use_repo` and `use_repo_add`).\n-   Bug fixes.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.5.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#650-2023-08-28)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.4.1...v6.5.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n#### [6.4.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.4.0...v6.4.1) (2023-08-21)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n### [`v6.4.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#641-2023-08-21)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.4.0...v6.4.1)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v3.6.0`](https://togithub.com/actions/checkout/blob/HEAD/CHANGELOG.md#v360)\n\n[Compare Source](https://togithub.com/actions/checkout/compare/v3.5.3...v3.6.0)\n\n-   [Fix: Mark test scripts with Bash'isms to be run via Bash](https://togithub.com/actions/checkout/pull/1377)\n-   [Add option to fetch tags even if fetch-depth > 0](https://togithub.com/actions/checkout/pull/579)\n\n</details>\n\n<details>\n<summary>actions/setup-node (actions/setup-node)</summary>\n\n### [`v3.8.1`](https://togithub.com/actions/setup-node/releases/tag/v3.8.1)\n\n[Compare Source](https://togithub.com/actions/setup-node/compare/v3.8.0...v3.8.1)\n\n#### What's Changed\n\nIn scope of this release, the filter was removed within the cache-save step by [@&#8203;dmitry-shibanov](https://togithub.com/dmitry-shibanov) in [https://github.com/actions/setup-node/pull/831](https://togithub.com/actions/setup-node/pull/831). It is filtered and checked in the toolkit/cache library.\n\n**Full Changelog**: https://github.com/actions/setup-node/compare/v3...v3.8.1\n\n</details>\n\n<details>\n<summary>eslint/eslint (eslint)</summary>\n\n### [`v8.48.0`](https://togithub.com/eslint/eslint/releases/tag/v8.48.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.47.0...v8.48.0)\n\n#### Features\n\n-   [`1fbb3b0`](https://togithub.com/eslint/eslint/commit/1fbb3b0b477c814c0d179564fe495f4c50a451e9) feat: correct update direction in `for-direction` ([#&#8203;17483](https://togithub.com/eslint/eslint/issues/17483)) (Francesco Trotta)\n-   [`d73fbf2`](https://togithub.com/eslint/eslint/commit/d73fbf2228631d6c468cd24710e2579fe6cb70fd) feat: rule tester do not create empty valid or invalid test suites ([#&#8203;17475](https://togithub.com/eslint/eslint/issues/17475)) (fnx)\n-   [`ee2f718`](https://togithub.com/eslint/eslint/commit/ee2f718188d32e9888b1932fe6b9bd2a62c529a4) feat: Allow `void` in rule `no-promise-executor-return` ([#&#8203;17282](https://togithub.com/eslint/eslint/issues/17282)) (nopeless)\n\n#### Bug Fixes\n\n-   [`7234f6a`](https://togithub.com/eslint/eslint/commit/7234f6a706a209aa2d79259110328752e9ae3928) fix: update RuleTester JSDoc and deprecations ([#&#8203;17496](https://togithub.com/eslint/eslint/issues/17496)) (Jonas Berlin)\n\n#### Documentation\n\n-   [`7a51d77`](https://togithub.com/eslint/eslint/commit/7a51d77c0a066e461ff288568fdfee0e9539a2b5) docs: no-param-reassign mention strict mode ([#&#8203;17494](https://togithub.com/eslint/eslint/issues/17494)) (Stephen Hardy)\n-   [`9cd7ac2`](https://togithub.com/eslint/eslint/commit/9cd7ac2fdb6b1d71a9fb1b8297a478cafacbdafd) docs: add `fetch` script to package.json conventions ([#&#8203;17459](https://togithub.com/eslint/eslint/issues/17459)) (Nitin Kumar)\n-   [`cab21e6`](https://togithub.com/eslint/eslint/commit/cab21e64a8f79779c641178f825945958667c6e4) docs: advice for inline disabling of rules ([#&#8203;17458](https://togithub.com/eslint/eslint/issues/17458)) (Ashish Yadav)\n-   [`056499d`](https://togithub.com/eslint/eslint/commit/056499de31a139dbc965d18652b0b520e11b408d) docs: fix example of flat config from plugin ([#&#8203;17482](https://togithub.com/eslint/eslint/issues/17482)) (Francesco Trotta)\n-   [`9e9edf9`](https://togithub.com/eslint/eslint/commit/9e9edf93ecfa0658e8b79e71bc98530ade150081) docs: update documentation URL in error message ([#&#8203;17465](https://togithub.com/eslint/eslint/issues/17465)) (Nitin Kumar)\n\n#### Chores\n\n-   [`8dd3cec`](https://togithub.com/eslint/eslint/commit/8dd3cec90c97ed97d243a83b87ad4ea9e6b4781a) chore: upgrade [@&#8203;eslint/js](https://togithub.com/eslint/js)[@&#8203;8](https://togithub.com/8).48.0 ([#&#8203;17501](https://togithub.com/eslint/eslint/issues/17501)) (Milos Djermanovic)\n-   [`6d0496e`](https://togithub.com/eslint/eslint/commit/6d0496e9476fb2210fba0a3d541df8c052ecf73a) chore: package.json update for [@&#8203;eslint/js](https://togithub.com/eslint/js) release (ESLint Jenkins)\n-   [`9d4216d`](https://togithub.com/eslint/eslint/commit/9d4216d638d39844decffac33ee3d5a47413c80a) chore: Refactor and document CodePathSegment ([#&#8203;17474](https://togithub.com/eslint/eslint/issues/17474)) (Nicholas C. Zakas)\n\n</details>\n\n<details>\n<summary>import-js/eslint-plugin-import (eslint-plugin-import)</summary>\n\n### [`v2.28.1`](https://togithub.com/import-js/eslint-plugin-import/blob/HEAD/CHANGELOG.md#2281---2023-08-18)\n\n[Compare Source](https://togithub.com/import-js/eslint-plugin-import/compare/v2.28.0...v2.28.1)\n\n##### Fixed\n\n-   \\[`order`]: revert breaking change to single nested group (\\[[#&#8203;2854](https://togithub.com/import-js/eslint-plugin-import/issues/2854)], thanks \\[[@&#8203;yndajas](https://togithub.com/yndajas)])\n\n##### Changed\n\n-   \\[Docs] remove duplicate fixable notices in docs (\\[[#&#8203;2850](https://togithub.com/import-js/eslint-plugin-import/issues/2850)], thanks \\[[@&#8203;bmish](https://togithub.com/bmish)])\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string (magic-string)</summary>\n\n### [`v0.30.3`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#0303-2023-08-21)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.30.2...v0.30.3)\n\n##### Bug Fixes\n\n-   trim replaced content with space ([#&#8203;257](https://togithub.com/rich-harris/magic-string/issues/257)) ([8088f53](https://togithub.com/rich-harris/magic-string/commit/8088f53873da13c81877a05ab4549fce86f537b5))\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v16.2.1`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1621-2023-08-23)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/16.2.0...16.2.1)\n\n</details>\n\n<details>\n<summary>postcss/postcss (postcss)</summary>\n\n### [`v8.4.28`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#8428)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.27...8.4.28)\n\n-   Fixed `Root.source.end` for better source map (by Romain Menke).\n-   Fixed `Result.root` types when `process()` has no parser.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.73`](https://togithub.com/quicktype/quicktype/compare/160a84985bd8e848b25a8e7581c4abcac0ac0ba9...bfe11c8df9fe8c691fce5efd64bbd7cbea64f535)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/160a84985bd8e848b25a8e7581c4abcac0ac0ba9...bfe11c8df9fe8c691fce5efd64bbd7cbea64f535)\n\n### [`v23.0.72`](https://togithub.com/quicktype/quicktype/compare/987c863807be5fd40b40947744d044a705cd48f1...160a84985bd8e848b25a8e7581c4abcac0ac0ba9)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/987c863807be5fd40b40947744d044a705cd48f1...160a84985bd8e848b25a8e7581c4abcac0ac0ba9)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v3.28.1`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3281)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.28.0...v3.28.1)\n\n*2023-08-22*\n\n##### Bug Fixes\n\n-   Ensure external files with relative import paths outside the target are rendered correctly ([#&#8203;5099](https://togithub.com/rollup/rollup/issues/5099))\n\n##### Pull Requests\n\n-   [#&#8203;5093](https://togithub.com/rollup/rollup/pull/5093): chore(deps): update dependency eslint-config-prettier to v9 ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5094](https://togithub.com/rollup/rollup/pull/5094): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5099](https://togithub.com/rollup/rollup/pull/5099): Fix resolution of relative external files outside target directory ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;5101](https://togithub.com/rollup/rollup/pull/5101): chore(deps): update dependency lint-staged to v14 ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5102](https://togithub.com/rollup/rollup/pull/5102): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n\n### [`v3.28.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3280)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.27.2...v3.28.0)\n\n*2023-08-09*\n\n##### Features\n\n-   Add a new property `preliminaryFileName` to generated chunks containing the file name placeholder ([#&#8203;5086](https://togithub.com/rollup/rollup/issues/5086))\n-   Improve performance of sourcemap generation by lazily decoding mappings ([#&#8203;5087](https://togithub.com/rollup/rollup/issues/5087))\n\n##### Bug Fixes\n\n-   Make the `code` property of rendered modules in the output readonly ([#&#8203;5091](https://togithub.com/rollup/rollup/issues/5091))\n\n##### Pull Requests\n\n-   [#&#8203;5086](https://togithub.com/rollup/rollup/pull/5086): feat: add `preliminaryFileName` to `OutputChunk` ([@&#8203;lsdsjy](https://togithub.com/lsdsjy))\n-   [#&#8203;5087](https://togithub.com/rollup/rollup/pull/5087): perf(sourcemaps): add back lazy sourcemap decode and handling nullish mappings ([@&#8203;thebanjomatic](https://togithub.com/thebanjomatic))\n-   [#&#8203;5091](https://togithub.com/rollup/rollup/pull/5091): fix: the type of RenderedModule.code is readonly ([@&#8203;TrickyPi](https://togithub.com/TrickyPi))\n\n### [`v3.27.2`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3272)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.27.1...v3.27.2)\n\n*2023-08-04*\n\n##### Bug Fixes\n\n-   Revert sourcemap performance improvement for now as it causes issues with Vite ([#&#8203;5075](https://togithub.com/rollup/rollup/issues/5075))\n\n##### Pull Requests\n\n-   [#&#8203;5075](https://togithub.com/rollup/rollup/pull/5075): Revert perf(sourcemap): lazy compute decoded mappings ([@&#8203;thebanjomatic](https://togithub.com/thebanjomatic))\n\n### [`v3.27.1`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3271)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.27.0...v3.27.1)\n\n*2023-08-03*\n\n##### Bug Fixes\n\n-   Improve performance when generating sourcemaps ([#&#8203;5075](https://togithub.com/rollup/rollup/issues/5075))\n\n##### Pull Requests\n\n-   [#&#8203;5075](https://togithub.com/rollup/rollup/pull/5075): perf(sourcemap): lazy compute decoded mappings ([@&#8203;thebanjomatic](https://togithub.com/thebanjomatic))\n\n### [`v3.27.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3270)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.26.3...v3.27.0)\n\n*2023-07-28*\n\n##### Features\n\n-   Mark `Object.values` and `Object.entries` as pure if their argument does not contain getters ([#&#8203;5072](https://togithub.com/rollup/rollup/issues/5072))\n\n##### Pull Requests\n\n-   [#&#8203;5070](https://togithub.com/rollup/rollup/pull/5070): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5071](https://togithub.com/rollup/rollup/pull/5071): docs(tutorial): change the .js extension to .mjs ([@&#8203;TrickyPi](https://togithub.com/TrickyPi))\n-   [#&#8203;5072](https://togithub.com/rollup/rollup/pull/5072): Add known globals ([@&#8203;sapphi-red](https://togithub.com/sapphi-red))\n-   [#&#8203;5078](https://togithub.com/rollup/rollup/pull/5078): chore(deps): update dependency [@&#8203;vue/eslint-config-prettier](https://togithub.com/vue/eslint-config-prettier) to v8 ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5079](https://togithub.com/rollup/rollup/pull/5079): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n\n### [`v3.26.3`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3263)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.26.2...v3.26.3)\n\n*2023-07-17*\n\n##### Bug Fixes\n\n-   Do not pass external modules to `manualChunks` to avoid breaking existing configs ([#&#8203;5068](https://togithub.com/rollup/rollup/issues/5068))\n\n##### Pull Requests\n\n-   [#&#8203;5056](https://togithub.com/rollup/rollup/pull/5056): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5059](https://togithub.com/rollup/rollup/pull/5059): chore(config): migrate renovate config ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5064](https://togithub.com/rollup/rollup/pull/5064): chore(deps): update dependency prettier to v3 ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5065](https://togithub.com/rollup/rollup/pull/5065): chore(deps): update typescript-eslint monorepo to v6 (major) ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5068](https://togithub.com/rollup/rollup/pull/5068): fix: don't pass external modules to the manualChunks function ([@&#8203;TrickyPi](https://togithub.com/TrickyPi))\n\n### [`v3.26.2`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3262)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.26.1...v3.26.2)\n\n*2023-07-06*\n\n##### Bug Fixes\n\n-   Improve error handling when manual chunks would contain external modules ([#&#8203;5050](https://togithub.com/rollup/rollup/issues/5050))\n\n##### Pull Requests\n\n-   [#&#8203;5050](https://togithub.com/rollup/rollup/pull/5050): fix: improve error for manualChunks' modules that are resolved as an external module ([@&#8203;TrickyPi](https://togithub.com/TrickyPi))\n\n### [`v3.26.1`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3261)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.26.0...v3.26.1)\n\n*2023-07-05*\n\n##### Bug Fixes\n\n-   Support `hasOwnProperty` as exported name in CommonJS ([#&#8203;5010](https://togithub.com/rollup/rollup/issues/5010))\n-   Properly reference browser types in package file ([#&#8203;5051](https://togithub.com/rollup/rollup/issues/5051))\n\n##### Pull Requests\n\n-   [#&#8203;5010](https://togithub.com/rollup/rollup/pull/5010): safe hasOwnProperty call ([@&#8203;LongTengDao](https://togithub.com/LongTengDao))\n-   [#&#8203;5051](https://togithub.com/rollup/rollup/pull/5051): [@&#8203;rollup/browser](https://togithub.com/rollup/browser): fix types export map entry ([@&#8203;developit](https://togithub.com/developit))\n\n### [`v3.26.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3260)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.25.3...v3.26.0)\n\n*2023-06-30*\n\n##### Features\n\n-   Add `--filterLogs` CLI flag and `ROLLUP_FILTER_LOGS` environment variable for log filtering ([#&#8203;5035](https://togithub.com/rollup/rollup/issues/5035))\n\n##### Pull Requests\n\n-   [#&#8203;5035](https://togithub.com/rollup/rollup/pull/5035): Add ability to filter logs via CLI option or environment variable ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n-   [#&#8203;5049](https://togithub.com/rollup/rollup/pull/5049): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n\n### [`v3.25.3`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3253)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.25.2...v3.25.3)\n\n*2023-06-26*\n\n##### Bug Fixes\n\n-   Fix error when inlining dynamic imports that contain unused reexported variables ([#&#8203;5047](https://togithub.com/rollup/rollup/issues/5047))\n\n##### Pull Requests\n\n-   [#&#8203;5047](https://togithub.com/rollup/rollup/pull/5047): Do not add tree-shaken variables to namespaces when inlining dynamic imports ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n### [`v3.25.2`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3252)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.25.1...v3.25.2)\n\n*2023-06-24*\n\n##### Bug Fixes\n\n-   Handle plugin errors where `code` is not a string ([#&#8203;5042](https://togithub.com/rollup/rollup/issues/5042))\n-   Use current transformed source when generating code frames with positions in transform hooks ([#&#8203;5045](https://togithub.com/rollup/rollup/issues/5045))\n\n##### Pull Requests\n\n-   [#&#8203;5038](https://togithub.com/rollup/rollup/pull/5038): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n-   [#&#8203;5040](https://togithub.com/rollup/rollup/pull/5040): Fix typo in index.md ([@&#8203;vHeemstra](https://togithub.com/vHeemstra))\n-   [#&#8203;5042](https://togithub.com/rollup/rollup/pull/5042): fix: a plugin error can contains numeric code ([@&#8203;TrickyPi](https://togithub.com/TrickyPi))\n-   [#&#8203;5045](https://togithub.com/rollup/rollup/pull/5045): Fix `this.error` with `pos` in `transform` hook ([@&#8203;sapphi-red](https://togithub.com/sapphi-red))\n-   [#&#8203;5046](https://togithub.com/rollup/rollup/pull/5046): chore(deps): update dependency locate-character to v3 ([@&#8203;renovate](https://togithub.com/renovate)\\[bot])\n\n### [`v3.25.1`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3251)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.25.0...v3.25.1)\n\n*2023-06-12*\n\n##### Bug Fixes\n\n-   Respect `__NO_SIDE_EFFECTS__` for async functions ([#&#8203;5031](https://togithub.com/rollup/rollup/issues/5031))\n\n##### Pull Requests\n\n-   [#&#8203;5031](https://togithub.com/rollup/rollup/pull/5031): fix: `__NO_SIDE_EFFECTS__` annotation for async function ([@&#8203;antfu](https://togithub.com/antfu))\n\n### [`v3.25.0`](https://togithub.com/rollup/rollup/blob/HEAD/CHANGELOG.md#3250)\n\n[Compare Source](https://togithub.com/rollup/rollup/compare/v3.24.1...v3.25.0)\n\n*2023-06-11*\n\n##### Features\n\n-   Add `this.info` and `this.debug` plugin context logging functions ([#&#8203;5026](https://togithub.com/rollup/rollup/issues/5026))\n-   Add `onLog` option to read, map and filter logs ([#&#8203;5026](https://togithub.com/rollup/rollup/issues/5026))\n-   Add `logLevel` option to fully suppress logs by level ([#&#8203;5026](https://togithub.com/rollup/rollup/issues/5026))\n-   Support function logs in `this.warn`, `this.info` and `this.debug` to avoid heavy computations based on log level ([#&#8203;5026](https://togithub.com/rollup/rollup/issues/5026))\n-   Add `onLog` plugin hook to read, filter and map logs from plugins ([#&#8203;5026](https://togithub.com/rollup/rollup/issues/5026))\n\n##### Pull Requests\n\n-   [#&#8203;5026](https://togithub.com/rollup/rollup/pull/5026): Add Logging API ([@&#8203;lukastaegert](https://togithub.com/lukastaegert))\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.66.1`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1661)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.66.0...1.66.1)\n\n##### JS API\n\n-   Fix a bug where Sass compilation could crash in strict mode if passed a\n    callback that threw a string, boolean, number, symbol, or bignum.\n\n### [`v1.66.0`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1660)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.65.1...1.66.0)\n\n-   **Breaking change:** Drop support for the additional CSS calculations defined\n    in CSS Values and Units 4. Custom Sass functions whose names overlapped with\n    these new CSS functions were being parsed as CSS calculations instead, causing\n    an unintentional breaking change outside our normal \\[compatibility policy] for\n    CSS compatibility changes.\n\n    Support will be added again in a future version, but only after Sass has\n    emitted a deprecation warning for all functions that will break for at least\n    three months prior to the breakage.\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio (verdaccio)</summary>\n\n### [`v5.26.2`](https://togithub.com/verdaccio/verdaccio/releases/tag/v5.26.2)\n\n[Compare Source](https://togithub.com/verdaccio/verdaccio/compare/v5.26.1...v5.26.2)\n\n##### [5.26.2](https://togithub.com/verdaccio/verdaccio/compare/v5.26.1...v5.26.2) (2023-08-26)\n\n##### Bug Fixes\n\n-   **deps:** update dependency validator to v13.11.0 ([#&#8203;3967](https://togithub.com/verdaccio/verdaccio/issues/3967)) ([f61cfda](https://togithub.com/verdaccio/verdaccio/commit/f61cfda1c33a020bb1eddb99f0e606f5bf68b499))\n-   update core depepedencies 5.x  ([#&#8203;3991](https://togithub.com/verdaccio/verdaccio/issues/3991)) ([528a902](https://togithub.com/verdaccio/verdaccio/commit/528a9027557298e40058dd997fc486267178c9bb)), closes \\[[#&#8203;3988](https://togithub.com/verdaccio/verdaccio/issues/3988)] ([https://github.com/verdaccio/verdaccio/issues/3988](https://togithub.com/verdaccio/verdaccio/issues/3988)) [#&#8203;3989](https://togithub.com/verdaccio/verdaccio/issues/3989) by [@&#8203;moglerdev](https://togithub.com/moglerdev)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25685","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#25685)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1864991020","IsPullRequest":true,"CreatedAt":"2023-08-28T17:23:28","Actor":"crisbeto","Number":"27704","RawContent":null,"Title":"refactor(material/button): remove mixin class usages","State":"closed","Body":"Reworks the button to replace usages of mixin classes with either input transforms or host bindings. This is a test to see how breaking the approach is before we roll it out across the entire library.","Url":"https://github.com/angular/components/pull/27704","RelatedDescription":"Closed or merged PR \"refactor(material/button): remove mixin class usages\" (#27704)"},{"Id":"1869666098","IsPullRequest":true,"CreatedAt":"2023-08-28T12:59:29","Actor":"crisbeto","Number":"27720","RawContent":null,"Title":"build: bump node version","State":"closed","Body":"Updates to a slightly newer version of Node. We need this, because the automated Lighthouse audits require at least version 18.16.0.","Url":"https://github.com/angular/components/pull/27720","RelatedDescription":"Closed or merged PR \"build: bump node version\" (#27720)"},{"Id":"1869407529","IsPullRequest":false,"CreatedAt":"2023-08-28T12:12:59","Actor":"work933k","Number":"27719","RawContent":null,"Title":"mat-legacy-checkbox: inline style=\"display: none\" breaks csp","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWe are working on making our code-base Content Security Policy compliant. Unfortunately the mat-legacy-checkbox makes use of inline-styles which our CSP-policy blocks. \r\nhttps://github.com/angular/components/blob/16.0.x/src/material/legacy-checkbox/checkbox.html#L44\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nAngular Material components to be CSP compliant\n\n### Actual Behavior\n\nAn console error is triggered.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27719","RelatedDescription":"Closed issue \"mat-legacy-checkbox: inline style=\"display: none\" breaks csp\" (#27719)"},{"Id":"1867954829","IsPullRequest":true,"CreatedAt":"2023-08-28T11:48:20","Actor":"aanchal88","Number":"27712","RawContent":null,"Title":"docs: remove duplicate words","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27712","RelatedDescription":"Closed or merged PR \"docs: remove duplicate words\" (#27712)"},{"Id":"1868503468","IsPullRequest":true,"CreatedAt":"2023-08-28T09:36:34","Actor":"crisbeto","Number":"27716","RawContent":null,"Title":"refactor(material/button-toggle): remove unused file","State":"closed","Body":"Removes a file that isn't being used anymore after the button toggle was switched to tokens.","Url":"https://github.com/angular/components/pull/27716","RelatedDescription":"Closed or merged PR \"refactor(material/button-toggle): remove unused file\" (#27716)"},{"Id":"1869314213","IsPullRequest":false,"CreatedAt":"2023-08-28T08:52:36","Actor":"mwaibel-go","Number":"27718","RawContent":null,"Title":"docs-bug(coercion): Add a statement on how these functions relate to the Angular@^16 input transformers","State":"open","Body":"### Documentation Feedback\r\n\r\n#18840 suggested input decorators for input coercion. It seems like they have finally landed in v16 in the form of the [transform property](https://angular.io/api/core/Input#transform) on the `Input()` decorator. It looks like CDK’s [coerceBooleanProperty](https://github.com/angular/components/blob/main/src/cdk/coercion/boolean-property.ts#L16) and Angular’s [booleanAttribute](https://github.com/angular/angular/blob/16.2.2/packages/core/src/util/coercion.ts#L21) even are the same function, albeit worded differently.\r\n\r\nI would appreciate a documentation update either here in the coercion section or in the “base” Angular docs regarding the two approaches to coercion: Is one in some way superior to the other? Will CDK’s version get deprecated? Can/should code safely be upgraded from CDK conversion to ‘native’?\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/cdk/coercion/overview","Url":"https://github.com/angular/components/issues/27718","RelatedDescription":"Open issue \"docs-bug(coercion): Add a statement on how these functions relate to the Angular@^16 input transformers\" (#27718)"},{"Id":"1861719154","IsPullRequest":false,"CreatedAt":"2023-08-28T05:42:39","Actor":"YJPrakash","Number":"27695","RawContent":null,"Title":"Angular material components use as webComponents","State":"closed","Body":"### Feature Description\n\nTemplating using newly created web components. If it is run in the server using ngUniversal Express Engine render components from different html work as like as index.html. ie (looks like an Ejs template engine model)\n\n### Use Case\n\nPlease refer\r\n [Is there a way to implement all material components and directives themselves act as web components using createCustomElements?](https://stackoverflow.com/questions/71464589/is-there-a-way-to-implement-all-material-components-and-directives-itself-act-as)\r\n\r\nIt's more specifically to templating fast like Ejs in Nodejs server-side rendering.","Url":"https://github.com/angular/components/issues/27695","RelatedDescription":"Closed issue \"Angular material components use as webComponents\" (#27695)"},{"Id":"1867415012","IsPullRequest":false,"CreatedAt":"2023-08-28T05:40:11","Actor":"ssalveMobiltex","Number":"27710","RawContent":null,"Title":"bug(Angular Google Maps): fitBounds north > 85 is causing a grey area","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the fitbounds method to fit the markers, it is causing a grey area when the bounds.north > 85\r\n\r\neg.\r\n\r\npublic fitBounds(bounds: google.maps.LatLngBoundsLiteral): void {\r\n    bounds.north = 89.14;\r\n    this.map.fitBounds(bounds);\r\n  }\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nGrey area should not be seen\n\n### Actual Behavior\n\nGrey area at top is seen.\r\n\r\n![image](https://github.com/angular/components/assets/123488872/48383acb-91d9-4acd-97d6-149210c7d756)\r\n\n\n### Environment\n\n- Angular:\r\n- CDK/Material:      15.2.8\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n ","Url":"https://github.com/angular/components/issues/27710","RelatedDescription":"Closed issue \"bug(Angular Google Maps): fitBounds north > 85 is causing a grey area\" (#27710)"},{"Id":"1866716624","IsPullRequest":false,"CreatedAt":"2023-08-28T05:39:28","Actor":"Siddhu-K","Number":"27706","RawContent":null,"Title":"bug(MatDialog): stuttery animation and dropped frames while resizing browser while using 100% width","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI wanted to have the mat dialog take the maximum width available so I am using { width: '100%' } while opening the dialog. However, I am having issues while resizing the browser window.\r\n\r\n`openDialog() {\r\n    this.dialog.open(DialogElementsExampleDialog, { width: '100%' });\r\n}`\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gdlxuq-mwqccp?file=src%2Fexample%2Fdialog-elements-example.ts\r\nSteps to reproduce:\r\n1. open the dialog and resize the browser window. Inspect with dev tools\r\n\n\n### Expected Behavior\n\ndialog resizes smoothly\n\n### Actual Behavior\n\nThe animation is not smooth when I resize the browser window and chrome dev tools shows dropped frames\n\n### Environment\n\nAngular CLI: 16.2.0\r\nNode: 18.12.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1602.0\r\n@angular-devkit/build-angular      16.2.0\r\n@angular-devkit/core               16.2.0\r\n@angular-devkit/schematics         16.2.0\r\n@angular/cdk                       16.2.1\r\n@angular/cli                       16.2.0\r\n@angular/material                  16.2.1\r\n@angular/material-moment-adapter   16.2.1\r\n@schematics/angular                16.2.0\r\nrxjs                               7.8.1\r\ntypescript                         5.1.6\r\nzone.js                            0.13.1","Url":"https://github.com/angular/components/issues/27706","RelatedDescription":"Closed issue \"bug(MatDialog): stuttery animation and dropped frames while resizing browser while using 100% width\" (#27706)"},{"Id":"1867390005","IsPullRequest":true,"CreatedAt":"2023-08-27T23:58:36","Actor":"wagnermaciel","Number":"27709","RawContent":null,"Title":"fix(material/slider): set word-break on value-indicator","State":"closed","Body":"* fixes https://github.com/angular/components/issues/27612","Url":"https://github.com/angular/components/pull/27709","RelatedDescription":"Closed or merged PR \"fix(material/slider): set word-break on value-indicator\" (#27709)"},{"Id":"1868533378","IsPullRequest":true,"CreatedAt":"2023-08-27T15:21:29","Actor":"Naaajii","Number":"27717","RawContent":null,"Title":"fix(material/badge): aria-hidden warning with icon","State":"open","Body":"fixes the issue where the warning for aria-hidden when used with mat-icon it doesn't account in [attr.aria-hidden]=\"condition\"\r\n\r\nfixes #27705","Url":"https://github.com/angular/components/pull/27717","RelatedDescription":"Open PR \"fix(material/badge): aria-hidden warning with icon\" (#27717)"},{"Id":"1868361565","IsPullRequest":true,"CreatedAt":"2023-08-27T05:20:38","Actor":"harshitsharma1250","Number":"27715","RawContent":null,"Title":"Tried to resolve the error in the loading of the image","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27715","RelatedDescription":"Open PR \"Tried to resolve the error in the loading of the image\" (#27715)"},{"Id":"1868268441","IsPullRequest":true,"CreatedAt":"2023-08-26T21:07:29","Actor":"kharazian","Number":"27714","RawContent":null,"Title":"fix(material/autocomplete): Prevent Autocomplete overlap with outlined form-field label when overlay is positioned above","State":"open","Body":"Fixed by preventing Autocomplete overlap with outlined form-field label when overlay is positioned above. Implemented a function to calculate the necessary vertical offset for outlined appearance, ensuring label legibility.\r\n\r\nFix #27476","Url":"https://github.com/angular/components/pull/27714","RelatedDescription":"Open PR \"fix(material/autocomplete): Prevent Autocomplete overlap with outlined form-field label when overlay is positioned above\" (#27714)"},{"Id":"1868174970","IsPullRequest":true,"CreatedAt":"2023-08-26T17:03:05","Actor":"mmalerba","Number":"27713","RawContent":null,"Title":"refactor(multiple): convert components to theme inspection API (round 2)","State":"open","Body":"Converts: input, list, checkbox, radio, slide-toggle, slider, button, icon-button, fab, paginator.\r\n\r\nSee related PR https://github.com/angular/components/pull/27688 for more context.","Url":"https://github.com/angular/components/pull/27713","RelatedDescription":"Open PR \"refactor(multiple): convert components to theme inspection API (round 2)\" (#27713)"},{"Id":"1867770395","IsPullRequest":true,"CreatedAt":"2023-08-25T23:06:31","Actor":"amysorto","Number":"27711","RawContent":null,"Title":"fix(material/list): Emit tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27711","RelatedDescription":"Open PR \"fix(material/list): Emit tokens under mixin root selector\" (#27711)"},{"Id":"1867035905","IsPullRequest":false,"CreatedAt":"2023-08-25T13:12:35","Actor":"nicos68","Number":"27708","RawContent":null,"Title":"docs-bug(COMPONENT): Implementation of asynchronous data sorting should be documented","State":"open","Body":"### Documentation Feedback\r\n\r\nWhen retrieving data asynchronously (e.g. from a REST service, see example below), if I reinstanciate the `MatTableDataSource` object I use in the MatTable component, everything I do works fine except sorting.\r\n**example:**\r\n```typescript\r\n//...\r\nexport class TableSortingExample implements AfterViewInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  constructor(/*...*/) {\r\n    this.http.get(\"myservice\").pipe(\r\n        tap((response) => {\r\n          this.dataSource = new MatTableDataSource(response); // <- reinstanciating the Datasource. \r\n                                                              // Breaks sorting.\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n```\r\nIf I do something like this, clicking on the sort arrows has no effect.\r\n\r\nWhereas if I use something like that:\r\n```typescript\r\n//...\r\nexport class TableSortingExample implements AfterViewInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  constructor(/*...*/) {\r\n    this.http.get(\"myservice\").pipe(\r\n        tap((requests) => {\r\n          this.requests.data = requests; // <- Mutate reference to `data` property of the Datasource.\r\n                                         // Works fine.\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n```\r\nThen everything works. This took me several hours to figure out, and I would probably never have found out, wouldn’t it have been for [this](https://stackoverflow.com/a/63246373/1238300). I think this should be documented.\r\n\r\n**Context:**\r\nAngular & Angular Material versions : 16.1.7\r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/table/overview#sorting","Url":"https://github.com/angular/components/issues/27708","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Implementation of asynchronous data sorting should be documented\" (#27708)"},{"Id":"1866938708","IsPullRequest":false,"CreatedAt":"2023-08-25T12:10:22","Actor":"iKrishnaSahu","Number":"27707","RawContent":null,"Title":"feat(theming): support for css var as density value","State":"open","Body":"### Feature Description\n\nI tried using css var as a density value to the `mat.define-light-theme` mixin and it failed with below error\r\n\r\n```\r\nError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\n\"mdc-density: Supported density scales default, minimum, maximum, but received var(--app-density, 0).\"\r\n```\r\n\r\nWanted to check if this will be available with token based theming api which is currently under development.\r\n\r\nStackblitz link - https://stackblitz.com/edit/an6wid?file=src%2Ftheme.scss\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27707","RelatedDescription":"Open issue \"feat(theming): support for css var as density value\" (#27707)"},{"Id":"1866602996","IsPullRequest":false,"CreatedAt":"2023-08-25T08:31:58","Actor":"AlexanderMelde","Number":"27705","RawContent":null,"Title":"bug(Badge): Warning \"badge on `mat-icon` with `aria-hidden`\" doesn't check `attr.aria-hidden`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThere is [a warning in badge.ts](https://github.com/angular/components/blob/main/src/material/badge/badge.ts#L167) introduced in #27035 about using matBadge on mat-icons, when aria-hidden is set to true (which is the default).\r\n\r\n```\r\nDetected a matBadge on an \"aria-hidden\" \"<mat-icon>\". Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.\r\n<mat-icon role=\"img\" matbadge=\"4\" class=\"mat-icon notranslate mat-badge\" aria-hidden=\"true\"></mat-icon>\r\n```\r\n\r\nThe following produces the warning:\r\n`<mat-icon matBadge=\"4\">home</mat-icon>` \r\n\r\nUnfortunately, this warning still shows when setting `aria-hidden` via `attr.` (which is necessary for setting it conditionally). \r\n\r\nThe following does still show the warning (unwanted behaviour):\r\n`<mat-icon [attr.aria-hidden]=\"false\" matBadge=\"4\">home</mat-icon>`\r\n\r\nAnd when trying to set aria-hidden conditionally directly without `attr.`, the following warning appears instead:\r\n```\r\nCan't bind to 'aria-hidden' since it isn't a known property of 'mat-icon'.\r\n1. If 'mat-icon' is an Angular component and it has 'aria-hidden' input, then verify that it is part of this module.\r\n2. If 'mat-icon' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n```\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/components-issue-xyqstm?devToolsHeight=33&file=src%2Fapp%2Fexample-component.html)\r\n\r\nSteps to reproduce:\r\n1.  Load the Page\r\n2. Look at the console\r\n\n\n### Expected Behavior\n\nNo Warning\n\n### Actual Behavior\n\nWarning in Console\n\n### Environment\n\n- Angular: 16.2.0\r\n- CDK/Material: 16.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/27705","RelatedDescription":"Open issue \"bug(Badge): Warning \"badge on `mat-icon` with `aria-hidden`\" doesn't check `attr.aria-hidden`\" (#27705)"},{"Id":"1863729193","IsPullRequest":false,"CreatedAt":"2023-08-24T17:43:40","Actor":"wagnermaciel","Number":"27700","RawContent":null,"Title":"bug(material/slider): Safari IOS slider bound value does not always get updated on value change","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.0\n\n### Description\n\nOriginal report:\r\nhttps://github.com/angular/components/issues/27316#issuecomment-1688863198\r\n\r\nSlider `value` bindings are not always getting updated on value change.\n\n### Reproduction\n\nReproducible on material.angular.io\r\n\r\nSteps to reproduce:\r\n1. Go to the slider example that has a value binding\r\n2. Change the value of the slider\r\n\n\n### Expected Behavior\n\nThe slider value and the bound value stay in sync\n\n### Actual Behavior\n\nThe slider value can go out of sync with the bound value\n\n### Environment\n\n- Angular: 16.2.1\r\n- Browser(s): Safari\r\n- Operating System: IOS\r\n","Url":"https://github.com/angular/components/issues/27700","RelatedDescription":"Closed issue \"bug(material/slider): Safari IOS slider bound value does not always get updated on value change\" (#27700)"},{"Id":"1863845008","IsPullRequest":true,"CreatedAt":"2023-08-24T17:43:38","Actor":"wagnermaciel","Number":"27701","RawContent":null,"Title":"fix(material/slider): keep ios safari slider value binding in sync","State":"closed","Body":"fixes https://github.com/angular/components/issues/27700","Url":"https://github.com/angular/components/pull/27701","RelatedDescription":"Closed or merged PR \"fix(material/slider): keep ios safari slider value binding in sync\" (#27701)"},{"Id":"1864106116","IsPullRequest":true,"CreatedAt":"2023-08-24T17:35:50","Actor":"wagnermaciel","Number":"27702","RawContent":null,"Title":"fix(material/slider): make selecting thumbs at min/max easier","State":"closed","Body":"fixes https://github.com/angular/components/issues/27620","Url":"https://github.com/angular/components/pull/27702","RelatedDescription":"Closed or merged PR \"fix(material/slider): make selecting thumbs at min/max easier\" (#27702)"},{"Id":"1864951467","IsPullRequest":false,"CreatedAt":"2023-08-24T11:26:19","Actor":"bederuijter","Number":"27703","RawContent":null,"Title":"bug(Dialog): MatTestDialogOpener (This constructor is not compatible with Angular Dependency Injection)","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe MatDialog API mentions  a [`MatTestDialogOpener`](https://material.angular.io/components/dialog/api#MatTestDialogOpener) that can be used when writing tests that involve a mat-dialog. \r\n\r\nInstead, when using the `MatTestDialogOpener` when writing my test it throws an error:\r\n\r\n ```\r\n NG0202: This constructor is not compatible with Angular Dependency Injection because its dependency at index 0 of the parameter list is invalid.\r\n    This can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\r\n\r\n    Please check that 1) the type for the parameter at index 0 is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\r\n```\n\n### Reproduction\n\nI don't know how to provide a StackBlitz reproduction that involve a test. Using the [mat dialog opener test](https://github.com/angular/components/blob/main/src/material/dialog/testing/dialog-opener.spec.ts) I was still able to reproduce the error (In the hopes of eliminating user error 🙂)\r\n\r\n```ts\r\nimport {Component, Inject} from '@angular/core';\r\nimport {fakeAsync, TestBed, flush} from '@angular/core/testing';\r\nimport {MatTestDialogOpenerModule, MatTestDialogOpener} from '@angular/material/dialog/testing';\r\nimport {MAT_DIALOG_DATA, MatDialogRef, MatDialogState} from '@angular/material/dialog';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\ndescribe('MDC-based MatTestDialogOpener', () => {\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTestDialogOpenerModule, NoopAnimationsModule],\r\n      declarations: [ExampleComponent],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should open a dialog when created', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(MatTestDialogOpener.withComponent(ExampleComponent));\r\n    flush();\r\n    expect(fixture.componentInstance.dialogRef.getState()).toBe(MatDialogState.OPEN);\r\n    expect(document.querySelector('mat-dialog-container')).toBeTruthy();\r\n  }));\r\n\r\n  it('should throw an error if no dialog component is provided', () => {\r\n    expect(() => TestBed.createComponent(MatTestDialogOpener)).toThrow(\r\n      Error('MatTestDialogOpener does not have a component provided.'),\r\n    );\r\n  });\r\n\r\n  it('should pass data to the component', fakeAsync(() => {\r\n    const config = {data: 'test'};\r\n    TestBed.createComponent(MatTestDialogOpener.withComponent(ExampleComponent, config));\r\n    flush();\r\n    const dialogContainer = document.querySelector('mat-dialog-container');\r\n    expect(dialogContainer!.innerHTML).toContain('Data: test');\r\n  }));\r\n\r\n  it('should get closed result data', fakeAsync(() => {\r\n    const config = {data: 'test'};\r\n    const fixture = TestBed.createComponent(\r\n      MatTestDialogOpener.withComponent<ExampleComponent, ExampleDialogResult>(\r\n        ExampleComponent,\r\n        config,\r\n      ),\r\n    );\r\n    flush();\r\n    const closeButton = document.querySelector('#close-btn') as HTMLElement;\r\n    closeButton.click();\r\n    flush();\r\n    expect(fixture.componentInstance.closedResult).toEqual({reason: 'closed'});\r\n  }));\r\n});\r\n\r\ninterface ExampleDialogResult {\r\n  reason: string;\r\n}\r\n\r\n/** Simple component for testing MatTestDialogOpener. */\r\n@Component({\r\n  template: `\r\n    Data: {{data}}\r\n    <button id=\"close-btn\" (click)=\"close()\">Close</button>\r\n  `,\r\n})\r\nclass ExampleComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ExampleComponent, ExampleDialogResult>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {}\r\n\r\n  close() {\r\n    this.dialogRef.close({reason: 'closed'});\r\n  }\r\n}\r\n```\r\n\n\n### Expected Behavior\n\nTo be able to write tests using the `MatTestDialogOpener`\n\n### Actual Behavior\n\n`MatTestDialogOpener` throwing an error related to the Dependency injection\r\n\r\n```\r\nNG0202: This constructor is not compatible with Angular Dependency Injection because its dependency at index 0 of the parameter list is invalid.\r\n    This can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\r\n\r\n    Please check that 1) the type for the parameter at index 0 is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\r\n\r\n      at ɵɵinvalidFactoryDep (../../../../node_modules/@angular/core/fesm2022/core.mjs:668:11)\r\n      at NodeInjectorFactory.MatTestDialogOpener2_Factory [as factory] (../../../../ng:/MatTestDialogOpener2/ɵfac.js:5:48)\r\n      at getNodeInjectable (../../../../node_modules/@angular/core/fesm2022/core.mjs:4669:44)\r\n      at createRootComponent (../../../../node_modules/@angular/core/fesm2022/core.mjs:13264:35)\r\n      at ComponentFactory.create (../../../../node_modules/@angular/core/fesm2022/core.mjs:13122:25)\r\n      at initComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26421:51)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:421:30)\r\n      at FakeAsyncTestZoneSpec.Object.<anonymous>.FakeAsyncTestZoneSpec.onInvoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:4779:37)\r\n      at ProxyZoneSpec.Object.<anonymous>.ProxyZoneSpec.onInvoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:3088:43)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:420:56)\r\n      at Object.onInvoke (../../../../node_modules/@angular/core/fesm2022/core.mjs:26321:33)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:420:56)\r\n      at Zone.Object.<anonymous>.Zone.run (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:175:47)\r\n      at NgZone.run (../../../../node_modules/@angular/core/fesm2022/core.mjs:26175:28)\r\n      at _TestBedImpl.createComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26424:41)\r\n      at Function.createComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26231:37)\r\n```\n\n### Environment\n\n- Angular: 16.1.7\r\n- CDK/Material: 16.1.6\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27703","RelatedDescription":"Open issue \"bug(Dialog): MatTestDialogOpener (This constructor is not compatible with Angular Dependency Injection)\" (#27703)"},{"Id":"1863682148","IsPullRequest":false,"CreatedAt":"2023-08-23T16:45:29","Actor":"DrMayx","Number":"27699","RawContent":null,"Title":"bug(mat-select): screen reader not saying 'expanded' when opened (only first time) (Accessibility Issue)","State":"open","Body":"### Description\r\n\r\nScreen reader NVDA is not saying 'expanded' when mat-select is opened for the first time in Material angular version 15.2.8\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n    1. Install NVDA if not installed already;\r\n    2. Open NVDA;\r\n    3. (Optional) Turn on speech viewer for visual aid;\r\n    4. Navigate to the mat-select using keyboard\r\n    6. Open and close the mat-select;\r\n    7. Notice how on open there is just a key name and a list name read then there's an option description;\r\n    8. Open the mat-select again;\r\n    9. Notice how now it says expanded after option description;\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe screen reader should say and show the below when the select is opened every time:\r\n\r\n> space\r\n> list\r\n> Option 1  not selected  1 of 28\r\n> expanded\r\n\r\n### Actual Behavior\r\n\r\nThe screen reader  is not saying expanded when the select is opened for the first time\r\n\r\n> space\r\n> list\r\n> Option 1  not selected  1 of 28\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.8\r\n- Material: 15.2.8\r\n- Browser(s): Firefox, Chrome\r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/27699","RelatedDescription":"Open issue \"bug(mat-select): screen reader not saying 'expanded' when opened (only first time) (Accessibility Issue)\" (#27699)"},{"Id":"1863625302","IsPullRequest":false,"CreatedAt":"2023-08-23T16:06:30","Actor":"kdorion","Number":"27698","RawContent":null,"Title":"bug(mat-menu): When mat-menu trigger is positioned inside a transformed element, it causes layout issues","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen opening and closing the mat-menu, it triggers a weird layout issue on the transformed parent element. \r\n\r\nI'm not entirely sure whether it's a browser bug or an Angular Material bug.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nhttps://stackblitz.com/edit/angular-wosetm?file=src%2Fapp%2Fapp.component.html\r\n\r\nSteps to reproduce:\r\n1. Hover the grey element\r\n2. Click on the MAT MENU TRIGGER button\r\n3. While keeping the mouse cursor static on the grey area (important not to move the cursor), click on the grey area to close the mat-menu.\r\n4. Notice the red element moves up before going back to its original position\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe red element should just be going back to its intended position without going further up and jumping back down\r\n\r\n### Actual Behavior\r\n\r\nThe red element is jumping up before going back down to its intended position.\r\n\r\n### Environment\r\n\r\n- Angular: 16.0.0\r\n- CDK/Material: 16.0.0\r\n- Browser(s): Chrome / Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/27698","RelatedDescription":"Open issue \"bug(mat-menu): When mat-menu trigger is positioned inside a transformed element, it causes layout issues\" (#27698)"},{"Id":"1863285202","IsPullRequest":false,"CreatedAt":"2023-08-23T12:57:40","Actor":"digaus","Number":"27697","RawContent":null,"Title":"bug(Datepicker): Datepicker does not update \"periodButtonText\" when locale changes","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nCurrently when I implement a dateadapter where the locale can change at runtime and thus change the display value of the `periodButtonText` it does not get updated.\r\n\r\nThe monthview and the value correctly displays the newly formatted date.\r\n\r\n![image](https://github.com/angular/components/assets/15358538/39632e5f-99c9-4e84-8462-131e5c2baac5)\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz-starters-g4yw3h.stackblitz.io\r\n\r\n(Preview not loading, try [Editor Link](https://stackblitz.com/edit/stackblitz-starters-g4yw3h?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Ftemporal-date-adapter.ts,angular.json,src%2Fmain.ts&title=Angular%20Starter))\r\n\r\nSteps to reproduce:\r\n1.  Press button next to the datepicker\r\n2. Wait 2 seconds\r\n\r\n\r\n### Expected Behavior\r\n\r\n`periodButtonText` should also update on locale change\r\n\r\n### Actual Behavior\r\n\r\n`periodButtonText` does not update on locale change\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27697","RelatedDescription":"Open issue \"bug(Datepicker): Datepicker does not update \"periodButtonText\" when locale changes\" (#27697)"},{"Id":"1862057346","IsPullRequest":false,"CreatedAt":"2023-08-22T19:17:31","Actor":"arkthur","Number":"27696","RawContent":null,"Title":"bug(material): activated nav-list-item font color is not readable in dark mode","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an App that uses a sidenav with a nav-list inside. I want the activated nav-list-item to be noticeable, so I'm using that state, but the default behavior with a dark theme, results in an unreadable font color.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-3qaoos\r\nSteps to reproduce:\r\n1. Open it.\r\n2. See how the first nav list item is activated and barely readable.\r\n\n\n### Expected Behavior\n\nThe background and font color have a minimum contrast, so the item is readable.\n\n### Actual Behavior\n\nThe background and font color do not have a minimum contrast, so the item is not readable.\n\n### Environment\n\n- Angular: 16.1.0\r\n- CDK/Material: 16.1.5\r\n- Browser(s): Chrome 116.0.5845.97 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11 (10.0.22621.2134)\r\n","Url":"https://github.com/angular/components/issues/27696","RelatedDescription":"Open issue \"bug(material): activated nav-list-item font color is not readable in dark mode\" (#27696)"},{"Id":"1861226318","IsPullRequest":true,"CreatedAt":"2023-08-22T13:38:57","Actor":"crisbeto","Number":"27693","RawContent":null,"Title":"refactor(cdk/dialog): changes to accommodate standalone","State":"closed","Body":"Reworks the CDK dialog to use a standalone component and to use `providedIn: 'root'` for its providers.","Url":"https://github.com/angular/components/pull/27693","RelatedDescription":"Closed or merged PR \"refactor(cdk/dialog): changes to accommodate standalone\" (#27693)"},{"Id":"1861257402","IsPullRequest":false,"CreatedAt":"2023-08-22T13:15:03","Actor":"daniel-agouveia","Number":"27694","RawContent":null,"Title":"bug(Theming): After updating to Material 15 theming no longer works","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello, everyone, In Material 14 we created our theme file like this:\r\n\r\n```\r\n@import '@angular/material/theming'\r\n\r\n$primary: mat-palette($mat-grey)\r\n$accent: mat-palette($mat-blue-grey, A200, A100, A400)\r\n$warn: mat-palette($mat-red)\r\n\r\n$theme: mat-light-theme($primary, $accent, $warn)\r\n\r\n@include angular-material-theme($theme)\r\n```\r\nOur CSS files are in Sass and knowing Angular Material's theming APIs are built with Sass, I thought no issues would happen after the update, but every time we change the theme file to the following:\r\n\r\n@use '@angular/material' as mat\r\n\r\n@include mat.core()\r\n\r\n$primary: mat.define-palette(mat.$mat-grey)\r\n$accent: mat.define-palette(mat.$mat-blue-grey, A200, A100, A400)\r\n$warn: mat.define-palette(mat.$mat-red)\r\n\r\n$theme: mat.define-light-theme((\r\n color: (\r\n   primary: $primary,\r\n   accent: $accent,\r\n   warn: $warn\r\n ),\r\n typography: mat.define-typography-config()\r\n))\r\n\r\n@include mat.core-theme($theme)\r\n\r\nWe get the following error:\r\n\r\nSassError: expected \")\".\r\n  ╷\r\n9 │ $theme: mat.define-light-theme((\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create a project with Angular 15.2.9 and Material 15.2.9\r\n2. Create a Sass file to define the theme\r\n3. Try to run the project\r\n\n\n### Expected Behavior\n\nThe theme would be applied no error should be thrown.\n\n### Actual Behavior\n\nThe error SassError: expected \")\".\r\n  ╷\r\n9 │ $theme: mat.define-light-theme((\r\n\r\nHappens\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Brave\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27694","RelatedDescription":"Closed issue \"bug(Theming): After updating to Material 15 theming no longer works\" (#27694)"},{"Id":"1860974861","IsPullRequest":false,"CreatedAt":"2023-08-22T11:09:05","Actor":"Coconaut5","Number":"27691","RawContent":null,"Title":"bug(Table with Drag and Drop): Table with Drag and drop incorrect indexes when scrolling with overflow","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the material table (https://material.angular.io/components/table/overview) with the drag and drop cdk (https://material.angular.io/cdk/drag-drop/overview) there seems to be an issue in the indexes that the CdkDragDrop event emits. \r\n\r\nThis issue only seems to happen if there is a bigger amount of items and you have overflow on any container wrapping the table. \r\n\r\nLocally I had issues where the previous and current index swapped values. So what was supposed to be the currentIndex was the previousIndex and vice versa. \r\n\r\nIn the StackBlitz you can see the error where at a certain point it doesn't want to drag further down. This error only seems to happen when the overflow is on the table or a container wrapping it. But if the entire page is scrollable and the table is the full length it seems to work fine.\r\n\r\nI also have this issue inside of the Dialog Component that can also be seen in the StackBlitz. I assume it is the same issue where the overflow cannot be on the Dialog. \r\n\r\nsidenote: Locally i have also experienced issues where it doesnt let me drop to any items below a certain point in the container. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/cpg8gf?file=src%2Fapp%2Ftable%2Ftable.component.ts\r\nSteps to reproduce:\r\n1. Pick up any item in the table from the first few rows\r\n2. Scroll down to the last few rows and try to drop it there\r\n\n\n### Expected Behavior\n\nTo be able to drag items freely up and down where the indexes line up properly with where it has been dropped\n\n### Actual Behavior\n\nIndexes are incorrect and the item doesn't drop at intended position\n\n### Environment\n\n- Angular: 16.1.0\r\n- CDK/Material: 16.20.0\r\n- Browser(s): Google Chrome, Microsoft Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): linux x64\r\n","Url":"https://github.com/angular/components/issues/27691","RelatedDescription":"Closed issue \"bug(Table with Drag and Drop): Table with Drag and drop incorrect indexes when scrolling with overflow\" (#27691)"},{"Id":"1861028688","IsPullRequest":false,"CreatedAt":"2023-08-22T09:22:11","Actor":"anton-white","Number":"27692","RawContent":null,"Title":"bug(CDK): Drag and drop: Cannot read properties of null (reading 'style')","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi guys,\r\n\r\nWe are constantly facing production issues reported by Sentry.\r\nHere is the screenshot:\r\n<img width=\"836\" alt=\"image\" src=\"https://github.com/angular/components/assets/3082531/01555090-655e-4ac4-8f40-75983232d305\">\r\n\r\nThe problem occurs on https://github.com/angular/components/blob/main/src/cdk/drag-drop/dom/styling.ts#L77C18-L77C18\r\n\r\nIt looks like it happens on Chrome OS only:\r\n<img width=\"362\" alt=\"image\" src=\"https://github.com/angular/components/assets/3082531/094654f6-f1b9-498c-8f0e-29cfabd0966b\">\r\n\r\nAffected browser versions:\r\n<img width=\"365\" alt=\"image\" src=\"https://github.com/angular/components/assets/3082531/27b8571d-8928-4da2-977a-7c964e83b001\">\r\n\r\nThis is a real problem for us, because this error crashes the entire app and users have to refresh the browser and sign in again to bypass it.\r\n\r\nPlease hint us where to look at. \n\n### Reproduction\n\nUnfortunately we cannot reproduce this error locally. Neither we were able to identify conditions that are causing it. \n\n### Expected Behavior\n\nNo error and no browser crash.\n\n### Actual Behavior\n\nError and browser crash.\n\n### Environment\n\n```\r\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.6\r\nOS: darwin x64\r\n\r\nAngular: 16.2.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cdk                    16.1.4\r\n@angular/cli                    16.2.0\r\n@angular/material               16.1.4\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\r\nzone.js                         0.13.0\r\n```","Url":"https://github.com/angular/components/issues/27692","RelatedDescription":"Open issue \"bug(CDK): Drag and drop: Cannot read properties of null (reading 'style')\" (#27692)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-08-29T03:30:02.9411772Z","RunDurationInMilliseconds":1907}