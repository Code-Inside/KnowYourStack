{"Data":{"Angular-Issues":{"Issues":[{"Id":"1223480279","IsPullRequest":false,"CreatedAt":"2022-05-03T00:06:00","Actor":"jelbourn","Number":"45847","RawContent":null,"Title":"Type checking for host bindings","State":"open","Body":"Angular does not currently perform type checking for `@Component` and `@Directive` host bindings. This is a gap in Angular's otherwise robust template type checking system that leaves the door open to typos and type mismatches. \r\n\r\n- [ ] Introduce an option for host binding type checking\r\n- [ ] Devise and execute a rollout plan to make this the new default behavior","Url":"https://github.com/angular/angular/issues/45847","RelatedDescription":"Open issue \"Type checking for host bindings\" (#45847)"},{"Id":"1223453081","IsPullRequest":true,"CreatedAt":"2022-05-02T23:33:48","Actor":"atscott","Number":"45846","RawContent":null,"Title":"fix(dev-infra): Fix pullapprove by commenting out the empty availability","State":"closed","Body":"Fixes invalid yml caused by https://github.com/angular/angular/commit/509cab9972dc9ee3366649324e0b19ec9277d7f8\r\n","Url":"https://github.com/angular/angular/pull/45846","RelatedDescription":"Closed or merged PR \"fix(dev-infra): Fix pullapprove by commenting out the empty availability\" (#45846)"},{"Id":"1223067580","IsPullRequest":true,"CreatedAt":"2022-05-02T22:50:47","Actor":"alxhub","Number":"45838","RawContent":null,"Title":"refactor(core): guard against `importProvidersFrom` in components","State":"closed","Body":"`importProvidersFrom` provides a bridge from the world of NgModule-based DI\r\nconfiguration to the new, \"standalone\" world of direct providers and\r\nenvironment injectors. Early user feedback suggested some confusion around\r\nwhere this function was supposed to be used, particularly around importing\r\nNgModule-based providers into standalone component `providers` arrays, which\r\nis not the intended use. This confusion is exacerbated by the fact that due\r\nto the unified `Provider` type, this kind of misconfiguration was happily\r\naccepted by the type system.\r\n\r\nThis commit changes the return type of `importProvidersFrom` to wrap the\r\nreturned providers in an opaque type that prevents them from being used in\r\ncomponent provider contexts. This, together with stronger documentation\r\naround the purpose and functionality of `importProvidersFrom`, should\r\naddress some of the above confusion.\r\n","Url":"https://github.com/angular/angular/pull/45838","RelatedDescription":"Closed or merged PR \"refactor(core): guard against `importProvidersFrom` in components\" (#45838)"},{"Id":"1223171302","IsPullRequest":true,"CreatedAt":"2022-05-02T22:35:40","Actor":"pkozlowski-opensource","Number":"45842","RawContent":null,"Title":"ci: mark pkozlowski as available for PR reviews","State":"closed","Body":"Change pullapprove configuration to re-include pkozlowski\r\n","Url":"https://github.com/angular/angular/pull/45842","RelatedDescription":"Closed or merged PR \"ci: mark pkozlowski as available for PR reviews\" (#45842)"},{"Id":"1223149436","IsPullRequest":true,"CreatedAt":"2022-05-02T22:03:43","Actor":"dylhunn","Number":"45841","RawContent":null,"Title":"docs(forms): Add JSDoc content for typed forms.","State":"closed","Body":"Update the JSDoc on forms model classes with more specific information about the new types.\r\n\r\n(`public-api` review is spurious; no actual API changes were made.)","Url":"https://github.com/angular/angular/pull/45841","RelatedDescription":"Closed or merged PR \"docs(forms): Add JSDoc content for typed forms.\" (#45841)"},{"Id":"1223284131","IsPullRequest":true,"CreatedAt":"2022-05-02T22:02:09","Actor":"AndrewKushnir","Number":"45845","RawContent":null,"Title":"refactor(core): rename `INJECTOR_INITIALIZER` -> `ENVIRONMENT_INITIALIZER`","State":"closed","Body":"This commit renames the `INJECTOR_INITIALIZER` to `ENVIRONMENT_INITIALIZER` to better represent the intention of the token.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (*)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No (*)\r\n\r\n(*) - since the API is not release yet, this change is not breaking and can be considered a refactoring.","Url":"https://github.com/angular/angular/pull/45845","RelatedDescription":"Closed or merged PR \"refactor(core): rename `INJECTOR_INITIALIZER` -> `ENVIRONMENT_INITIALIZER`\" (#45845)"},{"Id":"1221800475","IsPullRequest":true,"CreatedAt":"2022-05-02T21:59:05","Actor":"JoostK","Number":"45827","RawContent":null,"Title":"fix(compiler-cli): report invalid imports in standalone components during resolve phase","State":"closed","Body":"The analysis phase of the compiler should operate on individual classes, independently\r\nof other the analysis of other classes. The validation that `Component.imports` only\r\ncontains standalone entities or NgModules however did happen during the analysis phase,\r\nintroducing a dependency on other classes and causing inconsistencies due to ordering\r\nand/or asynchronous timing differences.\r\n\r\nThis commit fixes the issue by moving the validation to the resolve phase, which occurs\r\nafter all classes have been analyzed.\r\n\r\nFixes #45819","Url":"https://github.com/angular/angular/pull/45827","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): report invalid imports in standalone components during resolve phase\" (#45827)"},{"Id":"1222638830","IsPullRequest":true,"CreatedAt":"2022-05-02T21:58:30","Actor":"pkozlowski-opensource","Number":"45836","RawContent":null,"Title":"docs(core): add public API docs for the ApplicationRef","State":"closed","Body":"This commits add the missing documentation for the ApplicationRef\r\ndestroy() method.\r\n","Url":"https://github.com/angular/angular/pull/45836","RelatedDescription":"Closed or merged PR \"docs(core): add public API docs for the ApplicationRef\" (#45836)"},{"Id":"1223199564","IsPullRequest":true,"CreatedAt":"2022-05-02T21:57:59","Actor":"AndrewKushnir","Number":"45844","RawContent":null,"Title":"fix(platform-server): update `renderApplication` to move `appId` to options","State":"closed","Body":"This commit updates the `renderApplication` function to move the `appId` argument to the options object. The goal is to achieve a symmetry with the `bootstrapApplication` call (use to bootstrap apps for the browser environment).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No, since this API is not released yet","Url":"https://github.com/angular/angular/pull/45844","RelatedDescription":"Closed or merged PR \"fix(platform-server): update `renderApplication` to move `appId` to options\" (#45844)"},{"Id":"1221602746","IsPullRequest":true,"CreatedAt":"2022-05-02T21:40:25","Actor":"zelliott","Number":"45823","RawContent":null,"Title":"feat(compiler-cli): Support template binding to protected component members","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n_(unclear if any docs need to be updated)_\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, you can not create a template binding to a protected component member. For example:\r\n\r\n```\r\n@Component({\r\n  selector: 'my-component',\r\n  template: '{{message}}',  // Does not compile, as `message` is protected and not visible to the template.\r\n})\r\nexport class MyComponent {\r\n  protected message = 'Hello world';\r\n}\r\n```\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nNow, the code above compiles.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45823","RelatedDescription":"Closed or merged PR \"feat(compiler-cli): Support template binding to protected component members\" (#45823)"},{"Id":"1223114045","IsPullRequest":true,"CreatedAt":"2022-05-02T19:00:05","Actor":"dario-piotrowicz","Number":"45840","RawContent":null,"Title":"docs: remove css keyframes scoping change from changelog","State":"closed","Body":"remove the css keyframes scpoing change present in the changelog\r\nsince that commit has actually been reverted\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Issue\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n@dylhunn This is for the keyframes reverted commit :sweat: ","Url":"https://github.com/angular/angular/pull/45840","RelatedDescription":"Closed or merged PR \"docs: remove css keyframes scoping change from changelog\" (#45840)"},{"Id":"1221680539","IsPullRequest":true,"CreatedAt":"2022-05-02T18:43:21","Actor":"AndrewKushnir","Number":"45825","RawContent":null,"Title":"fix(core): throw if standalone components are present in `@NgModule.bootstrap`","State":"closed","Body":"This commit updates the logic to detect a situation when a standalone component is used in the NgModule-based bootstrap (`@NgModule.bootstrap`). Both AOT and JIT compilers are updated to handle this situation.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/45825","RelatedDescription":"Closed or merged PR \"fix(core): throw if standalone components are present in `@NgModule.bootstrap`\" (#45825)"},{"Id":"1221829606","IsPullRequest":true,"CreatedAt":"2022-05-02T18:42:17","Actor":"dario-piotrowicz","Number":"45829","RawContent":null,"Title":"docs(docs-infra): improve clarity of toh-pt2 click code snippet","State":"closed","Body":"make clearer that the click code snippet present in the tour of heroes\r\npart 2 guide is not complete but adding ellipsis at the end of the\r\nsnippet and also by slightly tweaking the text introducing the snippet\r\n\r\nresolves #45758\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Issue\r\n\r\nIssue Number: #45758\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/45829","RelatedDescription":"Closed or merged PR \"docs(docs-infra): improve clarity of toh-pt2 click code snippet\" (#45829)"},{"Id":"1223172122","IsPullRequest":false,"CreatedAt":"2022-05-02T17:57:54","Actor":"AndrewKushnir","Number":"45843","RawContent":null,"Title":"Enable the `no-duplicate-enum-values` TSLint rule for the FW repo","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nAs a followup of https://github.com/angular/angular/pull/45825#discussion_r862797290, we should consider enabling `no-duplicate-enum-values` TSLint rule to catch accidental duplicate enum values.","Url":"https://github.com/angular/angular/issues/45843","RelatedDescription":"Open issue \"Enable the `no-duplicate-enum-values` TSLint rule for the FW repo\" (#45843)"},{"Id":"1223095877","IsPullRequest":true,"CreatedAt":"2022-05-02T16:36:32","Actor":"dylhunn","Number":"45839","RawContent":null,"Title":"Revert \"feat(core): allow to throw on unknown elements in tests (#454…","State":"closed","Body":"…79)\"\r\n\r\nThis reverts commit 6662a97c61f133a14f2d117f71e4d2b8f4a83c32.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45839","RelatedDescription":"Closed or merged PR \"Revert \"feat(core): allow to throw on unknown elements in tests (#454…\" (#45839)"},{"Id":"1222060034","IsPullRequest":true,"CreatedAt":"2022-05-02T16:28:47","Actor":"devversion","Number":"45834","RawContent":null,"Title":"build: update ng-dev with updated clang-format version to fix formatting","State":"closed","Body":"Updates ng-dev to the latest clang-format version which fixes the AMD\r\nx64 binaries.","Url":"https://github.com/angular/angular/pull/45834","RelatedDescription":"Closed or merged PR \"build: update ng-dev with updated clang-format version to fix formatting\" (#45834)"},{"Id":"1221511089","IsPullRequest":true,"CreatedAt":"2022-05-02T16:20:54","Actor":"dario-piotrowicz","Number":"45822","RawContent":null,"Title":"fix(docs-infra): fix wrong heading structure in aio resources page","State":"closed","Body":"in the aio resources page there is a main h1 heading and then the next\r\nheadings used are h3 and h4, thus h2 is being skipped, change such\r\nheadings so that there is no heading skipping (which is a bad practice\r\nand can result to confusing experiences from screen reader users)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n Just a minor a11y improvement, the page should look exactly as it does now :slightly_smiling_face: ","Url":"https://github.com/angular/angular/pull/45822","RelatedDescription":"Closed or merged PR \"fix(docs-infra): fix wrong heading structure in aio resources page\" (#45822)"},{"Id":"1222894563","IsPullRequest":true,"CreatedAt":"2022-05-02T13:31:47","Actor":"pkozlowski-opensource","Number":"45837","RawContent":null,"Title":"refactor(core): disallow standalone components in importProvidersFrom calls","State":"open","Body":"This commit narrows down acceptable argument types of the\r\n`importProvidersFrom` function. More specifically, it rejects\r\nstandalone components as a source of imports.\r\n\r\nBased on the discussion from https://github.com/angular/angular/pull/45766/files#r858684934","Url":"https://github.com/angular/angular/pull/45837","RelatedDescription":"Open PR \"refactor(core): disallow standalone components in importProvidersFrom calls\" (#45837)"},{"Id":"1221487235","IsPullRequest":false,"CreatedAt":"2022-05-01T11:31:26","Actor":"eng-dibo","Number":"45821","RawContent":null,"Title":"run ngcc recursively","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncompiler-cli\r\n\r\n### Description\r\n\r\nfor monorepos, when you install dependencies, you don't know exactly which dependencies will be hoisted to the root workspace and whitch will be installed inside the workspace.\r\n\r\nyou need to run `ngcc` in each workspace that depends on angular libraries, this makes an issue\r\n1- if you added `postinstall: ngcc` to each package, and it's dependencies hoisted to the root workspace, node_module dir will not be created and running `npm run postinstall -ws` will cause this error  `no such file or directory, scandir '/workspace-a/node_modules'`\r\n2- if you removed `postinstall:ngcc` from a workspace and it's dependencies didn't hoisted, so you will have some angular libraries without running `ngcc`\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\n**the solution** is to add `--recursively (-r)` option to ngcc, to run it in the root package and all workspaces packages\r\n\r\n### Alternatives considered\r\n\r\n..","Url":"https://github.com/angular/angular/issues/45821","RelatedDescription":"Closed issue \"run ngcc recursively\" (#45821)"},{"Id":"1221880328","IsPullRequest":true,"CreatedAt":"2022-04-30T17:25:12","Actor":"gkalpak","Number":"45833","RawContent":null,"Title":"fix(ngcc): cope with packages following APF v14+","State":"open","Body":"In PR #45405, the Angular Package Format (APF) was updated so that secondary entry-points (such as `@angular/common/http`) do not have their own `package.json` file, as they used to. Instead, the paths to their various formats and types are exposed via the primary `package.json` file's `exports` property. As an example, see the v13 [@angular/common/http/package.json][1] and compare it with the v14 [@angular/common/package.json > exports][2].\r\n\r\nPreviously, `ngcc` was not able to analyze such v14+ entry-points and would instead error as it considered such entry-points missing.\r\n\r\nThis commit addresses the issue by detecting this situation and synthesizing a `package.json` file for the secondary entry-points based on the `exports` property of the primary `package.json` file. This data is only used by `ngcc` in order to determine that the entry-point does not need further processing, since it is already in Ivy format.\r\n\r\n[1]: https://unpkg.com/browse/@angular/common@13.3.5/http/package.json\r\n[2]: https://unpkg.com/browse/@angular/common@14.0.0-next.15/package.json\r\n","Url":"https://github.com/angular/angular/pull/45833","RelatedDescription":"Open PR \"fix(ngcc): cope with packages following APF v14+\" (#45833)"},{"Id":"1221867895","IsPullRequest":false,"CreatedAt":"2022-04-30T16:22:45","Actor":"Harpush","Number":"45832","RawContent":null,"Title":"Allow specifying providers inside @Injectable decorator","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nCurrently providers can be provided only in component or module or root or etc.. but not inside other providers.\r\n\r\n* One issue is that one cannot create a provider which depends upon another provider privately. \r\n* Another issue is multiple instances of the same provider which are linked to the provider scope it is provided in.\r\n\r\nAn example of a case that currently suffer from those problems:\r\n```ts\r\n@Injectable()\r\nclass CounterService implements OnDestroy {\r\n  ngOnDestroy(): void {}\r\n}\r\n\r\nconst primaryCounterToken = new InjectionToken<CounterService>(\r\n  'primaryCounterToken'\r\n);\r\nconst primaryCounterProvider: Provider = {\r\n  provide: primaryCounterToken,\r\n  useClass: CounterService,\r\n};\r\nconst secondaryCounterToken = new InjectionToken<CounterService>(\r\n  'secondaryCounterToken'\r\n);\r\nconst secondaryCounterProvider: Provider = {\r\n  provide: secondaryCounterToken,\r\n  useClass: CounterService,\r\n};\r\n\r\n@Injectable()\r\nclass TwoCountersService {\r\n  constructor(\r\n    @Inject(primaryCounterToken) primary: CounterService,\r\n    @Inject(secondaryCounterToken) secondary: CounterService\r\n  ) {}\r\n}\r\n\r\nconst twoCountersProviders: Provider[] = [\r\n  primaryCounterProvider,\r\n  secondaryCounterProvider,\r\n  TwoCountersService,\r\n];\r\n```\r\nIn this case `CounterService` has some logic but in `TwoCountersService` two instances of it are required. The solution here is using  `InjectionToken` to create two instances and inject them. The second issue mentioned above is yet to be seen in this example, but the first issue is.\r\nLets assume I want to use this  `TwoCountersService` in a component - I need to provide all three tokens in the component providers - hence the  `twoCountersProviders` array. Ideally I would like to just specify `TwoCountersService`.\r\n\r\nNow lets assume I want two instances of  `TwoCountersService` just like I wanted with `CounterService`. At this point I am stuck due to the second issue - as I actually need 4 instances of `CounterService` which is not possible this way.\r\nThe only solution is using a factory provider:\r\n```ts\r\nconst counterFactoryToken = new InjectionToken<CounterService>(\r\n  'counterFactoryToken'\r\n);\r\nconst counterFactoryProvider: Provider = {\r\n  provide: secondaryCounterToken,\r\n  useFactory: () => () => new CounterService(),\r\n};\r\n\r\n@Injectable()\r\nclass TwoCountersService {\r\n  private primary = this.counterFactory();\r\n  private secondary = this.counterFactory();\r\n\r\n  constructor(\r\n    @Inject(counterFactoryToken) private counterFactory: () => CounterService\r\n  ) {}\r\n}\r\n\r\n// Two instances:\r\nconst firstTwoCountersToken = new InjectionToken<TwoCountersService>(\r\n  'firstTwoCountersToken'\r\n);\r\nconst firstTwoCountersProvider: Provider = {\r\n  provide: firstTwoCountersToken,\r\n  useClass: TwoCountersService,\r\n};\r\nconst secondTwoCountersToken = new InjectionToken<TwoCountersService>(\r\n  'secondTwoCountersToken'\r\n);\r\nconst secondTwoCountersProvider: Provider = {\r\n  provide: secondTwoCountersToken,\r\n  useClass: TwoCountersService,\r\n};\r\n```\r\nNow i can safely inject `firstTwoCountersToken` and `secondTwoCountersToken` and have two instances and get 4 new instances of `CounterService`.\r\nThe first issue is even more apparent here - I need to provide now: `counterFactoryProvider`, `firstTwoCountersProvider` and `secondTwoCountersProvider` and if there was a service injecting both - that service too.\r\nThe second issue is solved here.\r\nBut - I lose lifecycle methods (`ngOnDestroy`) this way which isn't what I wanted.\r\n\r\nSo instead of factory provider I need a service and manually handle lifecycle... something like:\r\n```ts\r\n@Injectable()\r\nexport class CounterServiceFactory {\r\n  private registry: CounterService[] = [];\r\n\r\n  getNew() {\r\n    const srv = new CounterService();\r\n    this.registry.push(srv);\r\n    return srv;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const srv of this.registry) {\r\n      srv.ngOnDestroy();\r\n    }\r\n\r\n    this.registry = [];\r\n  }\r\n}\r\n``` \r\nAnd I got it working with **A LOT** of code and roundabout issues to solve. It still requires annoyingly providing providers carefully and a factory service for every service.\r\n\r\n### Proposed solution\r\n\r\nIf it was possible to provide providers inside @Injectable - it could be solved nicely:\r\n```ts\r\n@Injectable()\r\nclass CounterService implements OnDestroy {\r\n  ngOnDestroy(): void {}\r\n}\r\n\r\nconst primaryCounterToken = new InjectionToken<CounterService>(\r\n  'primaryCounterToken'\r\n);\r\nconst primaryCounterProvider: Provider = {\r\n  provide: primaryCounterToken,\r\n  useClass: CounterService,\r\n};\r\nconst secondaryCounterToken = new InjectionToken<CounterService>(\r\n  'secondaryCounterToken'\r\n);\r\nconst secondaryCounterProvider: Provider = {\r\n  provide: secondaryCounterToken,\r\n  useClass: CounterService,\r\n};\r\n\r\n@Injectable({\r\n  providers: [primaryCounterProvider, secondaryCounterProvider]\r\n})\r\nclass TwoCountersService {\r\n  constructor(\r\n    @Inject(primaryCounterToken) primary: CounterService,\r\n    @Inject(secondaryCounterToken) secondary: CounterService\r\n  ) {}\r\n}\r\n\r\nconst firstTwoCountersToken = new InjectionToken<TwoCountersService>(\r\n  'firstTwoCountersToken'\r\n);\r\nconst firstTwoCountersProvider: Provider = {\r\n  provide: firstTwoCountersToken,\r\n  useClass: TwoCountersService,\r\n};\r\nconst secondTwoCountersToken = new InjectionToken<TwoCountersService>(\r\n  'secondTwoCountersToken'\r\n);\r\nconst secondTwoCountersProvider: Provider = {\r\n  provide: secondTwoCountersToken,\r\n  useClass: TwoCountersService,\r\n};\r\n```\r\nNow if I need `firstTwoCountersProvider` and `secondTwoCountersProvider` - that's only what I provide and inject and all the different instances are handled automatically as providers provided in `@Injectable` are sharing the providing scope. \r\nEven better if there was a service injecting both - I would just provide that service ONLY and inject it.\r\n\r\n### Alternatives considered\r\n\r\nThe long and complicated solution from above.","Url":"https://github.com/angular/angular/issues/45832","RelatedDescription":"Open issue \"Allow specifying providers inside @Injectable decorator\" (#45832)"},{"Id":"1221862506","IsPullRequest":true,"CreatedAt":"2022-04-30T15:57:27","Actor":"tmair","Number":"45831","RawContent":null,"Title":"chore(docs-infra): remove unnecessary types for stemmer dependency","State":"open","Body":"NOTE:\r\nSince version 2.0.0 stemmer includes its own typings (see https://github.com/words/stemmer/commit/cd6fd9a0319bd7f44dc09ed40614fa807fe28535)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThere are two versions for the `stemmer` dependency types: \r\n- `@types/stemmer` for version < 2.0.0\r\n- `stemmer` for version 2.0.0\r\n\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\nThe types bundled with the `stemmer` package are used.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nWhen updating stemmer to version 2.0.0 (see https://github.com/angular/angular/pull/41724) the types where not updated. ","Url":"https://github.com/angular/angular/pull/45831","RelatedDescription":"Open PR \"chore(docs-infra): remove unnecessary types for stemmer dependency\" (#45831)"},{"Id":"1221841038","IsPullRequest":true,"CreatedAt":"2022-04-30T14:13:35","Actor":"gkalpak","Number":"45830","RawContent":null,"Title":"docs: fix code snippets in TOH (part 5) \"Final code review\" section","State":"open","Body":"Fixes #45736.","Url":"https://github.com/angular/angular/pull/45830","RelatedDescription":"Open PR \"docs: fix code snippets in TOH (part 5) \"Final code review\" section\" (#45830)"},{"Id":"1221813530","IsPullRequest":true,"CreatedAt":"2022-04-30T11:55:23","Actor":"alefra86","Number":"45828","RawContent":null,"Title":"docs: modify header and path of code-example to improve docs readability","State":"open","Body":"In this part of the [docs](https://angular.io/guide/content-projection#conditional-content-projection), without opening live example, `@ContentChild(ZippyContentDirective) content!: ZippyContentDirective;` seems to be used in `app.component.ts`.\r\n\r\nMoving Component and Directives from `app.component.ts` to a separate file (`example-zippy.component.ts`) improves docs readability.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/45828","RelatedDescription":"Open PR \"docs: modify header and path of code-example to improve docs readability\" (#45828)"},{"Id":"1221113623","IsPullRequest":false,"CreatedAt":"2022-04-30T06:28:49","Actor":"JounQin","Number":"45817","RawContent":null,"Title":"Dynamic displayed `required` + `formControlName` in template validates failed","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\n```html\r\n<form [formGroup]=\"form\">\r\n  <button type=\"button\" (click)=\"show = !show\">Toggle</button>\r\n  <input *ngIf=\"show\" formControlName=\"name\" required />\r\n  {{ form.get('name').status }}\r\n  {{ form.status }}\r\n</form>\r\n```\r\n\r\nWhen first click `Toggle` button, it should display `INVALID INVALID`, but it is `VALID VALID` now.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-tpggkc?file=src%2Fapp%2Fapp.component.html\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\"@angular/animations\": \"^13.3.2\",\r\n\"@angular/cdk\": \"^13.3.2\",\r\n\"@angular/common\": \"^13.3.2\",\r\n\"@angular/compiler\": \"^13.3.2\",\r\n\"@angular/core\": \"^13.3.2\",\r\n\"@angular/flex-layout\": \"^13.0.0-beta.38\",\r\n\"@angular/forms\": \"^13.3.2\",\r\n\"@angular/platform-browser\": \"^13.3.2\",\r\n\"@angular/platform-browser-dynamic\": \"^13.3.2\",\r\n\"@angular/router\": \"^13.3.2\",\r\n\"@angular/cli\": \"^13.3.2\",\r\n\"@angular/compiler-cli\": \"^13.3.2\",\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/45817","RelatedDescription":"Closed issue \"Dynamic displayed `required` + `formControlName` in template validates failed\" (#45817)"},{"Id":"1221694204","IsPullRequest":true,"CreatedAt":"2022-04-30T02:11:05","Actor":"AndrewKushnir","Number":"45826","RawContent":null,"Title":"fix(core): prevent `BrowserModule` providers from being loaded twice","State":"open","Body":"This commit updates the logic of the `BrowserModule` to detect a situation when it's used in the `bootstrapApplication` case, which already includes `BrowserModule` providers.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/45826","RelatedDescription":"Open PR \"fix(core): prevent `BrowserModule` providers from being loaded twice\" (#45826)"},{"Id":"1221672236","IsPullRequest":true,"CreatedAt":"2022-04-30T00:27:14","Actor":"AleksanderBodurri","Number":"45824","RawContent":null,"Title":"refactor(core): convert `walkProviderTree` and `processInjectorTypesWithProviders` to callback style interfaces","State":"open","Body":"`walkProviderTree` and `processInjectorTypesWithProviders` both perform some generic traversal logic of the import tree of an input NgModule or Standalone component. Currently, these functions pass around a `providersOut` array that is used to collect providers at each step of the traversal.\r\n\r\nThis PR converts those functions to accept visitor callbacks instead of the `providersOut` array. This is done to make the traversal logic of these functions reusable, while leaving it up to the visitor to determine the logic that fires for each visited node.\r\n\r\nThe visitor is given access to both the provider and the injector type at each node in the import tree.\r\n\r\nThis refactor would allow us to reuse `walkProviderTree` for injector debugging APIs that could support some cool features in DevTools, like tracing the injector resolution path of an injected property on a component instance all the way up to the specific imported module/standalone component.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/45824","RelatedDescription":"Open PR \"refactor(core): convert `walkProviderTree` and `processInjectorTypesWithProviders` to callback style interfaces\" (#45824)"},{"Id":"1221475492","IsPullRequest":true,"CreatedAt":"2022-04-29T20:11:42","Actor":"gkalpak","Number":"45820","RawContent":null,"Title":"docs: fix ellipsis in code-snippet in `creating-libraries` guide","State":"open","Body":"When hard-coding content in a `<code-example>` tag inside an `.md` file, the content is treated as HTML by the Markdown processor and thus any characters with special meaning in HTML have to be encoded (or replaced with HTML entities).\r\n\r\nHowever, the content that is embedded into `<code-example>` tags via docregions is treated as text (since it is not parsed by the Markdown processor) and thus should not have encoded characters or HTML entities.\r\n\r\n##\r\nYou can see the issue and the fix in action in this code-snippet of the \"Creating Libraries\" guide:\r\n- Before: https://angular.io/guide/creating-libraries#consuming-partial-ivy-code-outside-the-angular-cli\r\n- After: https://pr45820-d4f3270.ngbuilds.io/guide/creating-libraries#consuming-partial-ivy-code-outside-the-angular-cli\r\n","Url":"https://github.com/angular/angular/pull/45820","RelatedDescription":"Open PR \"docs: fix ellipsis in code-snippet in `creating-libraries` guide\" (#45820)"},{"Id":"1221214558","IsPullRequest":false,"CreatedAt":"2022-04-29T16:31:54","Actor":"pkozlowski-opensource","Number":"45818","RawContent":null,"Title":"Update error message for an unknown tag in standalone components","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCurrently the error for unknown element tags looks like follows:\r\n\r\n```\r\nsrc/app/app.component.ts:7:14 - error NG8001: 'admin-s' is not a known element:\r\n1. If 'admin-s' is an Angular component, then verify that it is part of this module.\r\n2. If 'admin-s' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n\r\n7   template: '<admin-s></admin-s>',\r\n``\r\nThis error message needs to be updated for standalone components to:\r\n* mention `@Component.imports` / `@Component.schemas' \r\n* _not_ mention NgModule \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/45818","RelatedDescription":"Open issue \"Update error message for an unknown tag in standalone components\" (#45818)"},{"Id":"1221090400","IsPullRequest":false,"CreatedAt":"2022-04-29T15:29:34","Actor":"Harpush","Number":"45816","RawContent":null,"Title":"FormGroup compatible with typescript discriminate union (aka DuFormGroup?)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nIt all started from having a lot of forms that handle a discriminate model. For the sake of explanation here is an example of such model which I will use later too:\r\n```ts\r\ninterface One {\r\n  type: 'one';\r\n  name: string;\r\n}\r\n\r\ninterface Two {\r\n  type: 'two';\r\n  value: number;\r\n}\r\n\r\ntype Both = One | Two;\r\n```\r\n\r\nWhat I needed is to create form based UI which have an angular material select for `one` and `two` and based on the selection different html renders. In `one`  an input for the name property and in `two` another number based form component for the `value` property.\r\nCurrently it's not easy to implement it in reactive forms - it requires a lot of manual code and valueChanges listeners etc...\r\nThat's why I came up with this new `DuFormGroup` feature.\n\n### Proposed solution\n\nIntroducing `DuFormGroup` idea:\r\nA new class for the forms package (Seems like another step in the way `FormRecord` made) for discriminate unions models based form groups.\r\nCreation:\r\n```ts\r\nconst form = new DuFormGroup({\r\n  discriminateKeyName: 'type',\r\n  discriminateOptions: ['one', 'two'],\r\n  controls: {\r\n    one: new FormGroup({\r\n      name: new FormControl('name'),\r\n    }),\r\n    two: new FormGroup({\r\n      value: new FormControl(3),\r\n    }),\r\n  },\r\n});\r\n``` \r\n`discriminateKeyName` - the model keyof that acts as a discriminate\r\n`discriminateOptions` - The options for the discriminates (not entirely sure it's needed)\r\n`controls` - object with each discriminate as a key and the value is a form group representing the specific DU part (excluding the discriminate property(?)).\r\n\r\nThere are a few new functions:\r\n```ts\r\nform.switchToDiscriminate('one');\r\nform.forDiscriminate('one').get('name');\r\nform.activeDiscriminate\r\n```\r\n`switchToDiscriminate` - Does the actual switching between discriminates. Using `setValue` with `{type: 'two', value: 2}` requires switching to `two` first (or not? If both can live together).\r\n`forDiscriminate` - getting the form group for specific discriminate.\r\n`activeDiscriminate` - The active discriminate\r\n\r\nUsing `.value` returns the full discriminate model (`{type: 'two', value: 2}`) based on current active discriminate.\r\n\r\nFor `DuFormGroup` to be fully integrated with forms the HTML can look like this:\r\n```html\r\n<select [duFormGroupDiscriminator]=\"form\">...</select>\r\n<div [duFormGroup]=\"form\"\r\n     duFormGroupName=\"someName\">\r\n  <div *duFormGroupDiscriminate=\"'one'\">\r\n    <input type=\"text\" formControlName=\"name\">\r\n  </div>\r\n  <div *duFormGroupDiscriminate=\"'two'\">\r\n    <input type=\"number\" formControlName=\"value\">\r\n  </div>\r\n</div>\r\n``` \r\n`duFormGroupDiscriminator` - Will connect to the active discriminate in the form and change it based on the value. In this case the value accessor will return a string with either `one` or `two` from the select. Works the same as manually calling `switchToDiscriminate` and synced with it.\r\n`duFormGroup` - Same as `formGroup` just for the new type\r\n`duFormGroupName` - Same as `formGroupName` just for the new type\r\n`duFormGroupDiscriminate` - I thought making it a structural directive but I guess worst case we can combine it with `ngSwitch`. It binds to the specific discriminate and inside it we can bind form controls or groups the same as under `formGroup`. It's a structural directive to automatically switch between the templates based on `activeDiscriminate`.\n\n### Alternatives considered\n\n1. Writing manual code with nested form groups, value changes and model conversion.\r\n2. Creating a custom made wrapper not baked into angular forms (Not sure even possible)\r\n3. Trying to extend form group - not sure possible","Url":"https://github.com/angular/angular/issues/45816","RelatedDescription":"Open issue \"FormGroup compatible with typescript discriminate union (aka DuFormGroup?)\" (#45816)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1223155703","IsPullRequest":false,"CreatedAt":"2022-05-02T17:40:11","Actor":"bmayen","Number":"23068","RawContent":null,"Title":"Unable to resolve migrations for package","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n^12.0.0\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nI opened this issue for @angular/cdk https://github.com/angular/components/issues/24862, but I think this may instead be a CLI issue.\r\n\r\nI have custom schematics that include @angular/cdk in the package.json \"packageGroup\". When running `ng update my-custom-schematics` I get the following error:\r\n\r\nUnable to resolve migrations for package (@angular/cdk). [Package subpath '././schematics/migration.json' is not defined by \"exports\" in [project root]/node_modules/@angular/cdk/package.json]\r\n\r\nAt first I assumed this was an issue with CDK's package.json. However, this seems to work fine if I call `ng update` specifically for @angular/cdk. When updating through my custom schematics though, note the double '././' path reference in '././schematics/migration.json'. Looks like packagePath is not getting set properly and we're catching the exception here: https://github.com/angular/angular-cli/blob/1c634cd327e5a850553b258aa2d5e6a6b2c75c65/packages/angular/cli/src/commands/update/cli.ts#L494.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nUnable to resolve migrations for package (@angular/cdk). [Package subpath '././schematics/migration.json' is not defined by \"exports\" in [project root]/node_modules/@angular/cdk/package.json]\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/23068","RelatedDescription":"Open issue \"Unable to resolve migrations for package\" (#23068)"},{"Id":"1222648396","IsPullRequest":true,"CreatedAt":"2022-05-02T16:56:32","Actor":"alan-agius4","Number":"23063","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update `@ampproject/remapping` to `2.2.0`","State":"closed","Body":"… \r\nCloses #22998","Url":"https://github.com/angular/angular-cli/pull/23063","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update `@ampproject/remapping` to `2.2.0`\" (#23063)"},{"Id":"1223091514","IsPullRequest":true,"CreatedAt":"2022-05-02T16:31:34","Actor":"clydin","Number":"23067","RawContent":null,"Title":"feat(@schematics/angular): introduce `addDependency` rule to utilities","State":"open","Body":"An `addDependency` schematics rule has been added to the newly introduced `utility` subpath export for the `@schematics/angular` package.\r\nThis new rule allows for adding a package as a dependency to a `package.json`. By default the `package.json` located\r\nat the schematic's root will be used. The `manifestPath` option can be used to explicitly specify\r\na `package.json` in different location. The type of the dependency can also be specified instead\r\nof the default of the `dependencies` section by using the `type` option with either `dev` or `peer` values.\r\n\r\nBlocked on #23041","Url":"https://github.com/angular/angular-cli/pull/23067","RelatedDescription":"Open PR \"feat(@schematics/angular): introduce `addDependency` rule to utilities\" (#23067)"},{"Id":"1222755313","IsPullRequest":true,"CreatedAt":"2022-05-02T11:07:56","Actor":"alan-agius4","Number":"23066","RawContent":null,"Title":"Completion tests","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/23066","RelatedDescription":"Open PR \"Completion tests\" (#23066)"},{"Id":"1222648580","IsPullRequest":true,"CreatedAt":"2022-05-02T09:42:41","Actor":"alan-agius4","Number":"23064","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove babel workaround","State":"closed","Body":"The `fullySpecified` workaround is no longe needed as the issue has been addressed upstream.","Url":"https://github.com/angular/angular-cli/pull/23064","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove babel workaround\" (#23064)"},{"Id":"1216264257","IsPullRequest":false,"CreatedAt":"2022-05-02T08:43:49","Actor":"lukhomdingi","Number":"23042","RawContent":null,"Title":"ng build timestamp","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nHi, all.\r\n\r\nIs it possible to add a function that gets the date of the build and use it in a component? For example to display `version 2022.04.26` in a footer (not current date, but the date of the last build):\r\n\r\nfooter.component.ts\r\n````\r\nimport { Component, OnInit, isDevMode, getBuildDate } from '@angular/core';\r\n...\r\nngOnInit() {\r\n    this.buildDate = getBuildDate();\r\n}\r\n````\r\n\r\nfooter.component.html\r\n````\r\n<footer class=\"footer\">\r\n    <div class=\"container\">\r\n        <p>\r\n            Copyright 2018 - 2022 © Company. All Rights Reserved.\r\n            <small>version {{buildDate | date:'yyyy.MM.dd' }}</small>\r\n        </p>\r\n    </div>\r\n</footer>\r\n````\r\n\r\n### Proposed solution\r\n\r\n```\r\nlet _buildDate = null;\r\n/**\r\n * Returns the date of the Angular build.\r\n *\r\n * @publicApi\r\n */\r\nexport function getBuildDate() {\r\n    if (isDevMode()) {\r\n        return new Date();\r\n    }\r\n    return _buildDate;\r\n}\r\n\r\n...\r\n\r\nexport function enableProdMode(): void {\r\n    if (_runModeLocked) {\r\n        throw new Error('Cannot enable prod mode after platform setup.');\r\n    }\r\n\r\n    // The below check is there so when ngDevMode is set via terser\r\n    // `global['ngDevMode'] = false;` is also dropped.\r\n    if (typeof ngDevMode === undefined || !!ngDevMode) {\r\n        global['ngDevMode'] = false;\r\n    }\r\n\r\n    // Set build date\r\n    if (!_buildDate) {\r\n        _buildDate = new Date();\r\n    }\r\n    _devMode = false;\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\n````\r\n// Set the build date in the @angular-devkit package\r\n````","Url":"https://github.com/angular/angular-cli/issues/23042","RelatedDescription":"Closed issue \"ng build timestamp\" (#23042)"},{"Id":"1222490506","IsPullRequest":false,"CreatedAt":"2022-05-02T05:35:51","Actor":"AndrewKushnir","Number":"23062","RawContent":null,"Title":"Provide an ability to tree-shake the code but avoid symbol renaming","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] build\r\n\r\n### Description\r\n\r\nIn order to investigate bundle size issues in a CLI app, it'd be very helpful to have an ability to apply tree-shaking (dead code elimination), but retain symbol names in the output, so that it's easier to figure out which code is retained and why. If I understand correctly, the `NG_BUILD_DEBUG_OPTIMIZE` doesn't provide an ability to configure `ng build` in this way.","Url":"https://github.com/angular/angular-cli/issues/23062","RelatedDescription":"Closed issue \"Provide an ability to tree-shake the code but avoid symbol renaming\" (#23062)"},{"Id":"1221802367","IsPullRequest":false,"CreatedAt":"2022-04-30T10:54:18","Actor":"n614cd","Number":"23061","RawContent":null,"Title":"Build to exclude files from tree-shaking (prefer using regex expression)","State":"open","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x ] build\r\n\r\n### Description\r\n\r\nShort version: Skip the tree-shaking for select file(s) based on a regex expression.\r\n\r\nLonger version: I have an application which uses a GraphQL based api. With a significant portion of the application dynamic and based upon data provided by the server. With GraphQL I believe this development pattern will become more common. \r\nThe fundamental issue is the Angular CLI is too aggressive on tree-shaking the types from the generated GrapphQL schema. As a result, in a \"production\" build the application has errors in HTML templates processing directives (usually ngFor in my case).\r\n\r\nI believe this is similar to a previous request, however I believe with growing popularity of GraphQL the issue will gain more significance and should be queued for a future release. https://github.com/angular/angular-cli/issues/20828\r\n\r\n### Describe the solution you'd like\r\n\r\nAn ability to add a reg expression to specifically exclude file(s) from tree-shaking.\r\n\r\n### Describe alternatives you've considered\r\n\r\n1. Disable optimization\r\n2. Create a dummy component which contains references to all items in the schema file, is included in the app component but is never displayed using an ngIf.","Url":"https://github.com/angular/angular-cli/issues/23061","RelatedDescription":"Open issue \"Build to exclude files from tree-shaking (prefer using regex expression)\" (#23061)"},{"Id":"1220026785","IsPullRequest":true,"CreatedAt":"2022-04-29T23:39:46","Actor":"renovate[bot]","Number":"23057","RawContent":null,"Title":"build: update dependency typescript to v4.6.4","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/TypeScript)) | [`4.6.3` -> `4.6.4`](https://renovatebot.com/diffs/npm/typescript/4.6.3/4.6.4) | [![age](https://badges.renovateapi.com/packages/npm/typescript/4.6.4/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/typescript/4.6.4/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/typescript/4.6.4/compatibility-slim/4.6.3)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/typescript/4.6.4/confidence-slim/4.6.3)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/TypeScript</summary>\n\n### [`v4.6.4`](https://togithub.com/Microsoft/TypeScript/releases/v4.6.4)\n\n[Compare Source](https://togithub.com/Microsoft/TypeScript/compare/v4.6.3...v4.6.4)\n\nThis release includes [a bug fix for text formatting on certain ranges](Studiohttps://togithub.com/microsoft/TypeScript/pull/48463), which was impacting Visual Studio users.\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for Typescript 4.6.0 (Beta)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.6.0%22+).\n-   [fixed issues query for Typescript 4.6.1 (RC)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.6.1%22+).\n-   [fixed issues query for Typescript 4.6.2 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.6.2%22+).\n-   [fixed issues query for Typescript 4.6.3 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.6.3%22+).\n-   [fixed issues query for Typescript 4.6.4 (Stable)](https://togithub.com/microsoft/TypeScript/issues?q=milestone%3A%22TypeScript+4.6.4%22+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [Visual Studio 2022/2019](https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.TypeScript-464) ([Select new version in project options](https://togithub.com/Microsoft/TypeScript/wiki/Updating-TypeScript-in-Visual-Studio-2017))\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23057","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v4.6.4\" (#23057)"},{"Id":"1221448637","IsPullRequest":true,"CreatedAt":"2022-04-29T23:37:56","Actor":"clydin","Number":"23059","RawContent":null,"Title":"feat(@angular-devkit/schematics): disable package script execution by default in `NodePackageInstallTask`","State":"closed","Body":"In an effort to improve supply chain security, the `NodePackageInstallTask` will now use the package\r\nmanager's `--ignore-scripts` option by default. Without the option, all direct and transitive\r\ndependencies would have their scripts executed during the task's package manager installation operation.\r\nThe change only affects the package manager behavior controlled by the Schematics `NodePackageInstallTask`.\r\n\r\nFirst-party Angular schematics do not currently require any direct or transitive dependency\r\n`install`/`postinstall` scripts to execute. Only two dependencies within a v14.0 new project would\r\npotentially be affected by this: `nice-napi` (transitive from `piscina`) and `esbuild`. The `nice-napi`\r\nfunctionality of `piscina` is unused within the Angular CLI with no plans to use it in the future.\r\nEven if it was used, the `install` script runs `node-gyp-build` which would only have an effect\r\n(based on the current version 1.0.2) on platforms that are not Windows, darwin-x64, or linux-x64.\r\nIn the event this functionality is eventually used, the Angular CLI could be setup to automatically execute\r\nthis particular script for unsupported platforms. For `esbuild`, the `postinstall` functionality\r\nperforms an optional native binary bootstrap optimization but would only be performed if not\r\nusing Windows or Yarn. As such, it would not be performed for many users regardless of the change in\r\nthis commit. If noticeable performance regressions on platforms where the optimization was previously\r\nperformed are reported, the script could also be setup to be automatically run by the Angular CLI during\r\nproject creation and/or first build.\r\n\r\nBREAKING CHANGE: Schematics `NodePackageInstallTask` will not execute package scripts by default\r\nThe `NodePackageInstallTask` will now use the package manager's `--ignore-scripts` option by default.\r\nThe `--ignore-scripts` option will prevent package scripts from executing automatically during an install.\r\nIf a schematic installs packages that need their `install`/`postinstall` scripts to be executed, the\r\n`NodePackageInstallTask` now contains an `allowScripts` boolean option which can be enabled to provide the\r\nprevious behavior for that individual task. As with previous behavior, the `allowScripts` option will\r\nprevent the individual task's usage of the `--ignore-scripts` option but will not override the package\r\nmanager's existing configuration.","Url":"https://github.com/angular/angular-cli/pull/23059","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/schematics): disable package script execution by default in `NodePackageInstallTask`\" (#23059)"},{"Id":"1221657423","IsPullRequest":true,"CreatedAt":"2022-04-29T23:35:09","Actor":"dgp1130","Number":"23060","RawContent":null,"Title":"feat(@angular/cli): prompt to set up autocompletion and add `ng completion init`","State":"open","Body":"This adds a new command `ng completion init` which sets up Angular CLI autocompletion for the current shell by appending `source <(ng completion)` to the relevant run configuration (`~/.bashrc`) file.\r\n\r\nThis also includes a prompt which is displayed to users on first command execution. After set up or if the user refuses the prompt, the CLI stores this state in the global workspace configuration and avoids prompting again. Users are expected to use `ng completion init` if they want to set up autocompletion after previously refusing the prompt. This hopefully provides a good middle ground where users who might not be aware of the feature can discover it without being too annoying to users who have custom shell setups or don't want autocompletion.\r\n\r\nThe prompt is also skipped when running on CI, in a non-interactive terminal, or if a run configuration for the current shell already has `ng completion` in it (implying the user already set this up).\r\n\r\nEnd-to-end tests cover most of the flows, though there are a couple error conditions which are impractical to test. This required some modifications to test infrastructure to support passing stdin and environment variables in the right places. I also had to rewrite analytics tests to be more stable and not break from adding a new prompt.\r\n\r\nCloses #23003.","Url":"https://github.com/angular/angular-cli/pull/23060","RelatedDescription":"Open PR \"feat(@angular/cli): prompt to set up autocompletion and add `ng completion init`\" (#23060)"},{"Id":"1219584327","IsPullRequest":true,"CreatedAt":"2022-04-29T01:58:06","Actor":"jbedard","Number":"23056","RawContent":null,"Title":"build: remove \"build\" requirement of \"test\" circleci job","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/23056","RelatedDescription":"Open PR \"build: remove \"build\" requirement of \"test\" circleci job\" (#23056)"},{"Id":"1219449790","IsPullRequest":true,"CreatedAt":"2022-04-28T23:34:54","Actor":"jbedard","Number":"23055","RawContent":null,"Title":"build: update node to m1 compatible v16","State":"open","Body":"This sure would be nice :/\r\n\r\nnpm also updated to v7 due to: https://github.com/npm/npm/issues/3623 although that doesn't seem to fix it","Url":"https://github.com/angular/angular-cli/pull/23055","RelatedDescription":"Open PR \"build: update node to m1 compatible v16\" (#23055)"},{"Id":"1219165441","IsPullRequest":false,"CreatedAt":"2022-04-28T19:17:07","Actor":"twerske","Number":"23054","RawContent":null,"Title":"schematic to add font inlining for a new font family","State":"open","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] generate\r\n- [x] add\r\n\r\n### Description\r\n\r\nNew schematic to add the configurations to add a new font to font inlining so that if you have a theme with a new font, we can give the user a prompt like `ng add font-inlining --font=\"Google Sans\"` and add this to the app configs to inline their given font","Url":"https://github.com/angular/angular-cli/issues/23054","RelatedDescription":"Open issue \"schematic to add font inlining for a new font family\" (#23054)"},{"Id":"1214500829","IsPullRequest":true,"CreatedAt":"2022-04-28T17:37:48","Actor":"devversion","Number":"23038","RawContent":null,"Title":"build: changes for primary branch rename to `main` [11.2.x]","State":"closed","Body":"Changes part of the `DIRECT` phase of the \"renaming master\r\nto main\" planning doc.\r\n\r\nNote the version of ng-dev used in this LTS branch does not properly\r\nsupport custom primary branches, but this should be non-relevant here\r\nbecause this commit will only land in a version branch (11.2.x)","Url":"https://github.com/angular/angular-cli/pull/23038","RelatedDescription":"Closed or merged PR \"build: changes for primary branch rename to `main` [11.2.x]\" (#23038)"},{"Id":"1214496145","IsPullRequest":true,"CreatedAt":"2022-04-28T17:37:32","Actor":"devversion","Number":"23037","RawContent":null,"Title":"build: changes for primary branch rename to `main` [12.2.x]","State":"closed","Body":"Changes part of the `DIRECT` phase of the \"renaming master\r\nto main\" planning doc.","Url":"https://github.com/angular/angular-cli/pull/23037","RelatedDescription":"Closed or merged PR \"build: changes for primary branch rename to `main` [12.2.x]\" (#23037)"},{"Id":"1219004337","IsPullRequest":true,"CreatedAt":"2022-04-28T17:34:16","Actor":"devversion","Number":"23053","RawContent":null,"Title":"build: update dev-infra to latest snapshot","State":"closed","Body":"Updates dev-infra to the latest snapshot, supporting for the\r\nnew migrate to main helper command.","Url":"https://github.com/angular/angular-cli/pull/23053","RelatedDescription":"Closed or merged PR \"build: update dev-infra to latest snapshot\" (#23053)"},{"Id":"1218530741","IsPullRequest":true,"CreatedAt":"2022-04-28T14:19:34","Actor":"renovate[bot]","Number":"23051","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.9","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.8` -> `v2.1.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.9`](https://togithub.com/github/codeql-action/compare/v2.1.8...v2.1.9)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.8...v2.1.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23051","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.9\" (#23051)"},{"Id":"1218689131","IsPullRequest":false,"CreatedAt":"2022-04-28T12:55:45","Actor":"Blackbaud-SteveBrush","Number":"23052","RawContent":null,"Title":"Angular 13 `ng new` installs `typescript@~4.6.2` but `~4.4.0` is documented as the supported version","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command\r\n\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\nNo.\r\n\r\n### Description\r\nRunning `npx @angular/cli@13 new` creates a project with `typescript@~4.6.2` installed. However, the [update guide for Angular 13](https://update.angular.io/?v=12.0-13.0) mentions \"Angular now uses TypeScript 4.4\". Is the migration guide correct, or is `ng new` correct?\r\n\r\n## 🔬 Minimal Reproduction\r\nRun `npx @angular/cli@13 new` and view the version of `typescript` in the generated `package.json`.\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.3.4\r\nNode: 14.17.6\r\nPackage Manager: npm 6.14.15\r\nOS: darwin x64\r\n\r\nAngular: 13.3.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.4\r\n@angular-devkit/build-angular   13.3.4\r\n@angular-devkit/core            13.3.4\r\n@angular-devkit/schematics      13.3.4\r\n@angular/cli                    13.3.4\r\n@schematics/angular             13.3.4\r\nrxjs                            7.5.5\r\ntypescript                      4.6.3\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/23052","RelatedDescription":"Open issue \"Angular 13 `ng new` installs `typescript@~4.6.2` but `~4.4.0` is documented as the supported version\" (#23052)"},{"Id":"1218530655","IsPullRequest":true,"CreatedAt":"2022-04-28T10:33:13","Actor":"renovate[bot]","Number":"23050","RawContent":null,"Title":"build: update angular","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `7b6d862` -> `e969d9f` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fanimations//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fanimations//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fanimations//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fanimations//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fanimations/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fanimations/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fanimations/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fanimations/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fanimations/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `39f12a8` -> `44b06ba` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fcdk//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fcdk//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fcdk//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fcdk//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`14.0.0-next.11` -> `14.0.0-next.12`](https://renovatebot.com/diffs/npm/@angular%2fcdk/14.0.0-next.11/14.0.0-next.12) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fcdk/14.0.0-next.12/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fcdk/14.0.0-next.12/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fcdk/14.0.0-next.12/compatibility-slim/14.0.0-next.11)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fcdk/14.0.0-next.12/confidence-slim/14.0.0-next.11)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `445b6b9` -> `cba48af` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fcommon//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fcommon//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fcommon//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fcommon//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fcommon/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fcommon/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fcommon/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fcommon/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fcommon/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `a06e296` -> `155ce4b` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `ca2fbd2` -> `d042bb4` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler-cli//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler-cli//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler-cli//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fcompiler-cli//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler-cli/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler-cli/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler-cli/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fcompiler-cli/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `7e9a673` -> `fc766ba` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fcore//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fcore//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fcore//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fcore//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fcore/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fcore/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fcore/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fcore/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fcore/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `4149a6b` -> `335aad1` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fdev-infra-private//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fdev-infra-private//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fdev-infra-private//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fdev-infra-private//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `f90e292` -> `37acaae` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fforms//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fforms//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fforms//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fforms//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fforms/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fforms/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fforms/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fforms/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fforms/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `3c284eb` -> `3c75e90` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2flanguage-service//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2flanguage-service//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2flanguage-service//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2flanguage-service//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `740258f` -> `cdeb67b` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2flocalize//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2flocalize//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2flocalize//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2flocalize//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2flocalize/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2flocalize/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2flocalize/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2flocalize/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2flocalize/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `c9fa6e8` -> `f3bac54` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`14.0.0-next.11` -> `14.0.0-next.12`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/14.0.0-next.11/14.0.0-next.12) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fmaterial/14.0.0-next.12/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fmaterial/14.0.0-next.12/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fmaterial/14.0.0-next.12/compatibility-slim/14.0.0-next.11)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fmaterial/14.0.0-next.12/confidence-slim/14.0.0-next.11)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `f125bf9` -> `ca0079a` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial-moment-adapter//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial-moment-adapter//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial-moment-adapter//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fmaterial-moment-adapter//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `62dff5c` -> `b92f5c3` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `c5315ac` -> `6963aa4` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser-dynamic//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser-dynamic//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser-dynamic//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-browser-dynamic//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser-dynamic/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser-dynamic/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser-dynamic/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-browser-dynamic/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `6c99913` -> `72fc58f` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-server//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-server//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-server//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fplatform-server//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-server/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-server/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-server/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fplatform-server/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `5659a78` -> `784a9fd` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2frouter//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2frouter//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2frouter//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2frouter//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/router](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2frouter/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2frouter/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2frouter/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2frouter/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2frouter/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `ca95514` -> `9487526` | [![age](https://badges.renovateapi.com/packages/github-tags/@angular%2fservice-worker//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/@angular%2fservice-worker//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/@angular%2fservice-worker//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/@angular%2fservice-worker//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`14.0.0-next.14` -> `14.0.0-next.15`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/14.0.0-next.14/14.0.0-next.15) | [![age](https://badges.renovateapi.com/packages/npm/@angular%2fservice-worker/14.0.0-next.15/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@angular%2fservice-worker/14.0.0-next.15/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@angular%2fservice-worker/14.0.0-next.15/compatibility-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@angular%2fservice-worker/14.0.0-next.15/confidence-slim/14.0.0-next.14)](https://docs.renovatebot.com/merge-confidence/) |\n| angular/dev-infra | action | digest | `303acfd` -> `a7d07a6` | [![age](https://badges.renovateapi.com/packages/github-tags/angular%2fdev-infra//age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/github-tags/angular%2fdev-infra//adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/github-tags/angular%2fdev-infra//compatibility-slim/)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/github-tags/angular%2fdev-infra//confidence-slim/)](https://docs.renovatebot.com/merge-confidence/) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v14.0.0-next.15`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1400-next15-2022-04-27)\n\n[Compare Source](https://togithub.com/angular/angular/compare/14.0.0-next.14...14.0.0-next.15)\n\n#### Breaking Changes\n\n##### common\n\n-   Adds new required class member that any implementors of the LocationStrategy will need to satisfy.\n    Location does not depend on PlatformLocation anymore.\n\n##### router\n\n-   When a guard returns a `UrlTree`, the router would previously schedule\n    the redirect navigation within a `setTimeout`. This timeout is now removed,\n    which can result in test failures due to incorrectly written tests.\n    Tests which perform navigations should ensure that all timeouts are\n    flushed before making assertions. Tests should ensure they are capable\n    of handling all redirects from the original navigation.\n\n##### bazel\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [68597bb0ca](https://togithub.com/angular/angular/commit/68597bb0ca958445655653a0a3cb206c01c7e0b3) | feat | speed up dev-turnaround by bundling types only when packaging ([#&#8203;45405](https://togithub.com/angular/angular/pull/45405)) |\n| [970a3b5c70](https://togithub.com/angular/angular/commit/970a3b5c70fee29aa40945836ebeb464d75438e4) | fix | add this_is_bazel marker ([#&#8203;45728](https://togithub.com/angular/angular/pull/45728)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [31d7c3bd71](https://togithub.com/angular/angular/commit/31d7c3bd71fdab3fef1b4615ecb8124fe6c165bd) | feat | add getState method to LocationStrategy interface ([#&#8203;45648](https://togithub.com/angular/angular/pull/45648)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5771b18a98](https://togithub.com/angular/angular/commit/5771b18a989c3c75d713ffb75cd7c047c63e4090) | feat | add the `bootstrapApplication` function ([#&#8203;45674](https://togithub.com/angular/angular/pull/45674)) |\n| [5a10fc4f82](https://togithub.com/angular/angular/commit/5a10fc4f8287d448c88ce2f6c97c48307af34af1) | feat | implement standalone directives, components, and pipes ([#&#8203;45687](https://togithub.com/angular/angular/pull/45687)) |\n\n##### localize\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a50e2da64a](https://togithub.com/angular/angular/commit/a50e2da64a4297d1bc994a267203c2097da2efaf) | fix | ensure transitively loaded compiler code is tree-shakable ([#&#8203;45405](https://togithub.com/angular/angular/pull/45405)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dea8c86cd5](https://togithub.com/angular/angular/commit/dea8c86cd57f8e1720634928805f9ea0ba8f0baa) | feat | add ariaCurrentWhenActive input to RouterLinkActive directive ([#&#8203;45167](https://togithub.com/angular/angular/pull/45167)) |\n| [4962a4a332](https://togithub.com/angular/angular/commit/4962a4a3324d5972f364d768b38b21a33fdb7d7c) | feat | Allow `loadChildren` to return a `Route` array ([#&#8203;45700](https://togithub.com/angular/angular/pull/45700)) |\n| [50004c143b](https://togithub.com/angular/angular/commit/50004c143ba9b1e041c7b30caf98f6582d3d26d4) | feat | Support lazy loading standalone components with `loadComponent` ([#&#8203;45705](https://togithub.com/angular/angular/pull/45705)) |\n| [7b367d9d90](https://togithub.com/angular/angular/commit/7b367d9d908e15222645a45e2ba133b9d9da76b7) | refactor | Remove unnecessary setTimeout in UrlTree redirects ([#&#8203;45735](https://togithub.com/angular/angular/pull/45735)) |\n\n#### Special Thanks\n\nAlex Rickabaugh, Andrew Kushnir, Andrew Scott, George Kalpakas, Joey Perrott, Michal Materowski, Paul Gschwendtner, Pawel Kozlowski, Sumit Arora and dario-piotrowicz\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v14.0.0-next.12`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1400-next12-plastic-keyboard-2022-04-28)\n\n[Compare Source](https://togithub.com/angular/components/compare/14.0.0-next.11...14.0.0-next.12)\n\n#### Deprecations\n\n##### material\n\n-   `mat.define-dark-theme` no longer accepts `$primary`, `$accent` and `$warn`.\n    Pass a single config map instead.\n-   `mat.define-light-theme` no longer accepts `$primary`, `$accent` and `$warn`.\n    Pass a single config map instead.\n-   Custom Material themes should no longer access `primary`, `accent`, `warn`,\n    `is-dark`, `foreground` and `background` from the theme map, but instead use the actual `color`\n    configuration (`mat.get-color-config($theme)`).\n-   Passing a color configuration directly to a `-theme` mixin\n    is not supported. Pass the theme container object instead or use the dedicated\n    `-color` mixins.\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ce67406f4a](https://togithub.com/angular/components/commit/ce67406f4ac6ed7a4ed9bb7be4299edea1cc72bd) | fix | **mdc-slider:** remove pointerdown passive eve… ([#&#8203;24766](https://togithub.com/angular/components/pull/24766)) |\n| [d3428ba5a2](https://togithub.com/angular/components/commit/d3428ba5a20a6780c90f68403806f8e8acc41414) | fix | **mdc-snack-bar:** avoid querying the DOM on each change detection ([#&#8203;24770](https://togithub.com/angular/components/pull/24770)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4e5e286e9e](https://togithub.com/angular/components/commit/4e5e286e9ebdefdc13222611c36a42f0685277f4) | fix | **autocomplete:** outside click in Angular zone. ([#&#8203;24817](https://togithub.com/angular/components/pull/24817)) |\n| [8dfbbed549](https://togithub.com/angular/components/commit/8dfbbed549621546d72dda341aa268cbb44fed97) | fix | **table:** accessibility improvements on table examples |\n| [f30609c925](https://togithub.com/angular/components/commit/f30609c9259ec5b2cabf52abaa051cac6fbe0bc5) | refactor | **core:** deprecate legacy theming API ([#&#8203;24835](https://togithub.com/angular/components/pull/24835)) |\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c6a1d1519e](https://togithub.com/angular/components/commit/c6a1d1519e1cf6677c161d8794b6af108fa996ed) | feat | **dialog:** move experimental CDK dialog into stable ([#&#8203;24804](https://togithub.com/angular/components/pull/24804)) |\n| [49c1921316](https://togithub.com/angular/components/commit/49c1921316282c561adb6694b699cd3c6ab0e5ac) | feat | **drag-drop:** adding method to set drag position ([#&#8203;24769](https://togithub.com/angular/components/pull/24769)) |\n| [653457eaf4](https://togithub.com/angular/components/commit/653457eaf48faab99227f37bc2fe104d9f308787) | feat | **menu:** move experimental CDK menu into stable ([#&#8203;24826](https://togithub.com/angular/components/pull/24826)) |\n| [0faba6e5fc](https://togithub.com/angular/components/commit/0faba6e5fcb3ebed7fad497fb5938bde47827c9a) | fix | **overlay:** animations interrupted on repeat insertions ([#&#8203;24815](https://togithub.com/angular/components/pull/24815)) |\n\n#### Special Thanks\n\nAndrew Seguin, Diego Bonura, Egor Volvachev, Jesse Beder, Kirill Cherkashin, Kristiyan Kostadinov, Martin Forstner, Paul Gschwendtner, Ruslan Lekhman, Sukka, Wagner Maciel, Zach Arend and renovate\\[bot]\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23050","RelatedDescription":"Open PR \"build: update angular\" (#23050)"},{"Id":"1217939111","IsPullRequest":true,"CreatedAt":"2022-04-27T22:54:58","Actor":"dgp1130","Number":"23049","RawContent":null,"Title":"Bump version to \"v14.0.0-next.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23049","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-next.12\" with changelog.\" (#23049)"},{"Id":"1217933181","IsPullRequest":true,"CreatedAt":"2022-04-27T22:11:40","Actor":"dgp1130","Number":"23048","RawContent":null,"Title":"docs: release notes for the v13.3.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.3.x\" branch to the next branch (master).","Url":"https://github.com/angular/angular-cli/pull/23048","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.3.4 release\" (#23048)"},{"Id":"1217835579","IsPullRequest":true,"CreatedAt":"2022-04-27T22:07:39","Actor":"dgp1130","Number":"23047","RawContent":null,"Title":"Bump version to \"v13.3.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/23047","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.3.4\" with changelog.\" (#23047)"},{"Id":"1217688993","IsPullRequest":true,"CreatedAt":"2022-04-27T18:18:11","Actor":"clydin","Number":"23046","RawContent":null,"Title":"[13.3.x] fix(@angular-devkit/build-angular): correctly resolve custom service worker configuration file","State":"closed","Body":"Paths within the `angular.json` file should be relative to the location of the `angular.json` file.\r\nThe `ngswConfigPath` option was incorrectly using the current working directory for a base path when\r\na relative configuration path was specified. Most of the time this would work as a build command usually\r\nis executed from the root of the workspace. However, this may not always be the case and for those cases\r\nthe actual workspace root is now used to resolve the full path for the service worker configuration file.","Url":"https://github.com/angular/angular-cli/pull/23046","RelatedDescription":"Closed or merged PR \"[13.3.x] fix(@angular-devkit/build-angular): correctly resolve custom service worker configuration file\" (#23046)"},{"Id":"1217615055","IsPullRequest":true,"CreatedAt":"2022-04-27T17:45:43","Actor":"clydin","Number":"23045","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly resolve custom service worker configuration file","State":"closed","Body":"Paths within the `angular.json` file should be relative to the location of the `angular.json` file.\r\nThe `ngswConfigPath` option was incorrectly using the current working directory for a base path when\r\na relative configuration path was specified. Most of the time this would work as a build command usually\r\nis executed from the root of the workspace. However, this may not always be the case and for those cases\r\nthe actual workspace root is now used to resolve the full path for the service worker configuration file.","Url":"https://github.com/angular/angular-cli/pull/23045","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly resolve custom service worker configuration file\" (#23045)"},{"Id":"1215748805","IsPullRequest":true,"CreatedAt":"2022-04-27T17:35:19","Actor":"renovate[bot]","Number":"23040","RawContent":null,"Title":"build: update angular to 7b6d862","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `e9949aa` -> `7b6d862` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `aae7a9d` -> `445b6b9` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `0a041be` -> `a06e296` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5f4b054` -> `ca2fbd2` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `cd410bf` -> `7e9a673` |\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `619a2bb` -> `7577b56` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `7c980e4` -> `f90e292` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `0ba130e` -> `3c284eb` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `41c4b71` -> `740258f` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `db334fc` -> `62dff5c` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `7395523` -> `c5315ac` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `a9fb9bb` -> `6c99913` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `622574a` -> `5659a78` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `978cd59` -> `ca95514` |\n| angular/dev-infra | action | digest | `2dbd81f` -> `6ea40a1` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/23040","RelatedDescription":"Closed or merged PR \"build: update angular to 7b6d862\" (#23040)"},{"Id":"1216313439","IsPullRequest":true,"CreatedAt":"2022-04-27T16:28:42","Actor":"wagnermaciel","Number":"23043","RawContent":null,"Title":"fix(@angular/cli): change wrapping of schematic code","State":"closed","Body":"Fixes the schematic wrapper function used to capture the module's exports to correctly return `module.exports` instead of just `exports`.\r\n\r\n### Problem Demo\r\n\r\n```ts\r\n(function() {\r\n  var exports = {};\r\n  var module = { exports };\r\n\r\n  // schematic #1 code example\r\n  // exports.default = ...\r\n\r\n  // schematic #2 code example\r\n  // module.exports = ...\r\n\r\n  // works for schematic #1 but fails for schematic #2\r\n  return exports['default'];\r\n});\r\n```","Url":"https://github.com/angular/angular-cli/pull/23043","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): change wrapping of schematic code\" (#23043)"},{"Id":"1214554327","IsPullRequest":true,"CreatedAt":"2022-04-26T21:13:34","Actor":"clydin","Number":"23039","RawContent":null,"Title":"perf(@ngtools/webpack): use Webpack's built-in xxhash64 support","State":"closed","Body":"Webpack provides built-in support for creating hashes using the xxhash64 algorithm via a WebAssembly module.\r\nThis can be significantly faster than the previously used md5 algorithm and is currently used as the output hashing algorithm  within the Webpack configuration.\r\nThe Webpack peer dependency has also been update to a minimum of 5.54.0 to ensure xxhash64 supported is available.","Url":"https://github.com/angular/angular-cli/pull/23039","RelatedDescription":"Closed or merged PR \"perf(@ngtools/webpack): use Webpack's built-in xxhash64 support\" (#23039)"},{"Id":"1216475966","IsPullRequest":false,"CreatedAt":"2022-04-26T21:04:58","Actor":"dgp1130","Number":"23044","RawContent":null,"Title":"Standalone components end-to-end test","State":"open","Body":"With standalone components coming soon, we should set up an e2e test in the CLI project which builds and tests a \"Hello, World!\" application built entirely with standalone components and related APIs. This will help protect against future regressions.","Url":"https://github.com/angular/angular-cli/issues/23044","RelatedDescription":"Open issue \"Standalone components end-to-end test\" (#23044)"},{"Id":"1216167025","IsPullRequest":true,"CreatedAt":"2022-04-26T15:56:57","Actor":"clydin","Number":"23041","RawContent":null,"Title":"feat(@schematics/angular): introduce a utility subpath export for Angular rules and utilities","State":"open","Body":"The `@schematics/angular` package now contains a defined set of package `exports` including a `utility` subpath export.\r\nA wildcard export is also temporarily defined to support transition away from existing deep-import usage.\r\nThe `@schematics/angular/utility` subpath export will contain supported utility methods used by the first-party schematics\r\ncontained within the `@schematics/angular` package and can be considered public API that will follow SemVer stability constraints.\r\nThe first group of utilities introduced in this change are used to modify the `angular.json` workspace file\r\nwithin the schematics and include the `updateWorkspace` rule and `readWorkspace`/`writeWorkspace` helpers.","Url":"https://github.com/angular/angular-cli/pull/23041","RelatedDescription":"Open PR \"feat(@schematics/angular): introduce a utility subpath export for Angular rules and utilities\" (#23041)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1222402957","IsPullRequest":false,"CreatedAt":"2022-05-02T22:42:46","Actor":"jpduckwo","Number":"24859","RawContent":null,"Title":"bug(checkbox): Merged pull request caused a breaking change with checkbox checked value","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13.2.6\r\n\r\n### Description\r\n\r\nRegarding https://github.com/angular/components/pull/20645\r\nWhen this change was merged the checked value only accepts all non-null value as true except boolean false or 'false' string. This caused us issues where we were passing 0 or 1 and both are now treated as true.\r\n\r\nI don't dispute the merge, but I think that this should be highlighted more prominently as a potential breaking change in the changelog.\r\n\r\n> Thanks for your patience with getting this in :) there were several internal failures where clients were passing objects, strings, and arrays rather than booleans, causing unexpected changes\r\n\r\nYou can see it caused issues for the internal tests in the pull request comments for the same reason. People might have unexpected broken checkboxes without realising after upgrading (like we did)\r\n\r\nEDIT: Comments are locked by the bot on the PR... if it's just been merged, I feel comments should be allowed again as I would have posted / linked this issue there...\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\nNA\r\n\r\n\r\n### Expected Behavior\r\n\r\nNotification in the changelog\r\n\r\n### Actual Behavior\r\n\r\nNo notification of the potential impact of this change\r\n\r\n### Environment\r\n\r\n- Angular: 13.3.4\r\n- CDK/Material: 13.3.4\r\n- Browser(s): na\r\n- Operating System (e.g. Windows, macOS, Ubuntu): na\r\n","Url":"https://github.com/angular/components/issues/24859","RelatedDescription":"Closed issue \"bug(checkbox): Merged pull request caused a breaking change with checkbox checked value\" (#24859)"},{"Id":"1222579504","IsPullRequest":true,"CreatedAt":"2022-05-02T20:32:48","Actor":"crisbeto","Number":"24860","RawContent":null,"Title":"fix(material/menu): add constructor overloads for non-deprecated signatures","State":"closed","Body":"In #24116 I explored using constructor overload for deprecations, but I forgot to add an overload for the non-deprecated signatures.\r\n\r\nFixes #24740.","Url":"https://github.com/angular/components/pull/24860","RelatedDescription":"Closed or merged PR \"fix(material/menu): add constructor overloads for non-deprecated signatures\" (#24860)"},{"Id":"1222975443","IsPullRequest":false,"CreatedAt":"2022-05-02T17:46:14","Actor":"bmayen","Number":"24862","RawContent":null,"Title":"bug(cdk): Unable to resolve migrations","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n^12.0.0\n\n### Description\n\nI have custom schematics that include @angular/cdk in the package.json \"packageGroup\". When running `ng update my-custom-schematics` I get the following error:\r\n\r\nUnable to resolve migrations for package (@angular/cdk).  [Package subpath '././schematics/migration.json' is not defined by \"exports\" in [project root]/node_modules/@angular/cdk/package.json]\n\n### Reproduction\n\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nWhen running `ng update my-custom-schematics` @angular/cdk should run any required migrations without error\n\n### Actual Behavior\n\nUnable to resolve migrations for package (@angular/cdk).  [Package subpath '././schematics/migration.json' is not defined by \"exports\" in [project root]/node_modules/@angular/cdk/package.json]\n\n### Environment\n\n- Angular: v13\r\n- CDK/Material: v13\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24862","RelatedDescription":"Closed issue \"bug(cdk): Unable to resolve migrations\" (#24862)"},{"Id":"1223095273","IsPullRequest":false,"CreatedAt":"2022-05-02T16:35:26","Actor":"fireflysemantics","Number":"24863","RawContent":null,"Title":"bug(OverlayContainer): Dropdown not rendering after adding custom theme and also adding the class to the CDK OverlayContainer","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've created a custom theme and followed the documentation steps for adding and it works fine.\r\n\r\nI'm also trying to get the overlays styled for Dropdowns, etc. and IIUC the way to go about that is to add the custom theme class to the class list of the overlay container.\r\n\r\nI've done that like this:\r\n\r\n```\r\n    this.overlayContainer.getContainerElement().classList.add('my-theme')\r\n    console.log(this.overlayContainer.getContainerElement().classList)\r\n```\r\n\r\nThe `console.log` statement does show that it has been added.\r\n\r\nHowever it is not showing up in the application when served, and so the dropdown is not rendering.\n\n### Reproduction\n\nSteps to reproduce:\r\n1.git clone [git@github.com](mailto:git@github.com):fireflysemantics/angular-theming-test.git\r\n2. cd  angular-theming-test\r\n3. ng serve -o\r\n\r\nSince it uses SCSS I had to create a new repository for it.\n\n### Expected Behavior\n\nThe dropdown should render.\n\n### Actual Behavior\n\nThe `my-theme` class should render in the overlay container.  I looked for the overlay container in developer tools and it does not have `my-theme` on it.\r\n\r\n```\r\n<div cdk-overlay-origin=\"\" class=\"mat-select-trigger ng-tns-c80-1\"><div class=\"mat-select-value ng-tns-c80-1\" ng-reflect-ng-switch=\"true\" id=\"mat-select-value-1\"><span class=\"mat-select-placeholder mat-select-min-line ng-tns-c80-1 ng-star-inserted\"></span><!--bindings={\r\n  \"ng-reflect-ng-switch-case\": \"true\"\r\n}--><!--bindings={\r\n  \"ng-reflect-ng-switch-case\": \"false\"\r\n}--></div><div class=\"mat-select-arrow-wrapper ng-tns-c80-1\"><div class=\"mat-select-arrow ng-tns-c80-1\"></div></div></div>\r\n```\n\n### Environment\n\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: darwin x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cdk                    13.3.5\r\n@angular/cli                    13.0.4\r\n@angular/material               13.3.5\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4","Url":"https://github.com/angular/components/issues/24863","RelatedDescription":"Open issue \"bug(OverlayContainer): Dropdown not rendering after adding custom theme and also adding the class to the CDK OverlayContainer\" (#24863)"},{"Id":"1222792899","IsPullRequest":false,"CreatedAt":"2022-05-02T11:51:13","Actor":"newshahn","Number":"24861","RawContent":null,"Title":"bug(DATEPICKER): dateAdapter.setLocale('fa') not working properly","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Angular material datepicker with locale('fa) which is persian/jalali calendar, today date is 1 day ahead. So for example, today is Ordibehesht 12th but material datepicker is showing Ordibehesht 13th. Moreover, when I choose a date in the datepicker, for example (۱۹/۴/۱۳۷۶), the datepicker closes and the date that is shown in the input isn't actually what I chose. Instead it's (۱۷/۴/۱۳۷۶).\n\n### Reproduction\n\nhttps://components-issue-mle1fv.stackblitz.io\r\n\n\n### Expected Behavior\n\nFor today's date to be shown correctly and the input value to be the same as the date selected.\n\n### Actual Behavior\n\nToday's date is not shown correctly and the input value of the datepicker is not the same as the date selected.\n\n### Environment\n\n- Angular: 13.3.2\r\n- CDK/Material: 13.3.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24861","RelatedDescription":"Open issue \"bug(DATEPICKER): dateAdapter.setLocale('fa') not working properly\" (#24861)"},{"Id":"1222211801","IsPullRequest":false,"CreatedAt":"2022-05-02T07:08:50","Actor":"fireflysemantics","Number":"24858","RawContent":null,"Title":"help(THEMING): How do we theme component overlays (Dropdown, Snackbox...)?","State":"closed","Body":"### What are you trying to do?\n\nI've asked about how to Theme overlays (Dropdown, snackbox, etc.) on Stackoverflow here:\r\n\r\nhttps://stackoverflow.com/questions/72074206/rendering-overlay-containers-when-theming-angular-material\r\n\r\nI also created a github repository that shows what I'm trying to do per the tutorials that I have found on the subject.\r\n\r\nRight now I can't get the dropdown to apply the dark theme, but everything else works fine.  I would really appreciate any tips you can give me.\n\n### What troubleshooting steps have you tried?\n\nCreated a github repository and I have done research.  I also read all the documentation on Angular Material Theming and unfortunately there is no guidance on theming the CDK overlay contains in there.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. git clone git@github.com:fireflysemantics/angular-theming-test.git\r\n2.cd ngular-theming-test\r\n3. ng serve -o\r\n\n\n### Environment\n\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 13.0.4\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: darwin x64\r\n\r\nAngular: 13.0.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1300.4\r\n@angular-devkit/build-angular   13.0.4\r\n@angular-devkit/core            13.0.4\r\n@angular-devkit/schematics      13.0.4\r\n@angular/cdk                    13.3.5\r\n@angular/cli                    13.0.4\r\n@angular/material               13.3.5\r\n@schematics/angular             13.0.4\r\nrxjs                            7.4.0\r\ntypescript                      4.4.4","Url":"https://github.com/angular/components/issues/24858","RelatedDescription":"Closed issue \"help(THEMING): How do we theme component overlays (Dropdown, Snackbox...)?\" (#24858)"},{"Id":"1221793419","IsPullRequest":true,"CreatedAt":"2022-05-01T10:13:16","Actor":"crisbeto","Number":"24856","RawContent":null,"Title":"Miscellaneous fixes for the CDK menu","State":"closed","Body":"Resolves some issues with the CDK menu. See the individual commits for more info, but at a high level, these changes:\r\n* Fix a unit test that was only failing locally.\r\n* Fix some accessibility issues in the docs examples.\r\n* Resolve some UX issues when the user tries to scroll while a menu is open.","Url":"https://github.com/angular/components/pull/24856","RelatedDescription":"Closed or merged PR \"Miscellaneous fixes for the CDK menu\" (#24856)"},{"Id":"1222056461","IsPullRequest":true,"CreatedAt":"2022-05-01T07:27:39","Actor":"crisbeto","Number":"24857","RawContent":null,"Title":"refactor(material/dialog): switch to CDK dialog internally","State":"open","Body":"Switches the Material dialog to be based on the CDK dialog.","Url":"https://github.com/angular/components/pull/24857","RelatedDescription":"Open PR \"refactor(material/dialog): switch to CDK dialog internally\" (#24857)"},{"Id":"1221536274","IsPullRequest":false,"CreatedAt":"2022-04-29T21:02:48","Actor":"WellingtonLopesJ","Number":"24855","RawContent":null,"Title":"bug(CHIPS AUTOCOMPLETE): chips autocomplete won't emit optionSelected if matChipInputAddOnBlur is set to true","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen creating a mat autocomplete with chips the <v-autocomplete> selectedOption event is not fired if the input associated with the chip-list has the [matChipInputAddOnBlur] property set as true and has a value typed in.\r\n\r\n\r\nif you set the matChipInputAddOnBlur to false it will work perfectly, but I also need it to fire on blur to validate or insert the inputted value.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. visit https://stackblitz.com/edit/angular-rmuzjg-t8dcn6?file=src/app/chips-autocomplete-example.ts\r\n2. type \"a\" into the input\r\n3. click orange (or any other option except apple)\r\n\r\nthere is a console.log('selected') in the function associated with the (optionSelected) event, it won't be fired.\r\n\n\n### Expected Behavior\n\nThe option clicked (orange) should be added to the chips.\r\n\r\nThe autocomplete's optionSelected event should be fired.\n\n### Actual Behavior\n\na chip with the value inputted is added to the chips but the option clicked is not.\r\n\r\nthe autocomplete's optionSelected event is not fired.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24855","RelatedDescription":"Open issue \"bug(CHIPS AUTOCOMPLETE): chips autocomplete won't emit optionSelected if matChipInputAddOnBlur is set to true\" (#24855)"},{"Id":"1218941306","IsPullRequest":false,"CreatedAt":"2022-04-29T14:42:24","Actor":"avatsaev","Number":"24849","RawContent":null,"Title":"bug(mat-tooltip): flickering issue on mat-tooltips with delay setting","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n?\n\n### Description\n\nWhen hovering out of a mat tooltip with a delay before the delay ends, there is flicker of the mat tooltip which appears and then quickly disappears.\r\n\r\nStackblitz from from the official documentation with added delay setting: https://stackblitz.com/edit/angular-jhdwzh?file=src%2Fapp%2Ftooltip-custom-class-example.html\r\n\r\nloom: https://www.loom.com/share/02182737108a4887bdcf5ded660fdb50\n\n### Reproduction\n\nSteps to reproduce:\r\n1. create a mat tooltip with a delay of 1000\r\n2. hover in and out of the element with tooltip quickly\r\n3. the tooltip flickers when mouse moves out of the element before the delay ends\r\n\n\n### Expected Behavior\n\nThe tooltip shouldn't be displayed when the mouse moves out of the element before the delay ends\n\n### Actual Behavior\n\nThe tooltip flickers when moving the mouse out of the element before the delay ends.\n\n### Environment\n\n- Angular: 13.3\r\n- CDK/Material: 13.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows/Macos\r\n","Url":"https://github.com/angular/components/issues/24849","RelatedDescription":"Closed issue \"bug(mat-tooltip): flickering issue on mat-tooltips with delay setting\" (#24849)"},{"Id":"1220743097","IsPullRequest":true,"CreatedAt":"2022-04-29T12:48:57","Actor":"renovate[bot]","Number":"24854","RawContent":null,"Title":"build: update angular shared dev-infra code to 335aad1","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `0026dda` -> `335aad1` |\n| angular/dev-infra | action | digest | `93fef04` -> `a7d07a6` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24854","RelatedDescription":"Open PR \"build: update angular shared dev-infra code to 335aad1\" (#24854)"},{"Id":"1220451659","IsPullRequest":true,"CreatedAt":"2022-04-29T10:22:53","Actor":"crisbeto","Number":"24853","RawContent":null,"Title":"feat(google-maps): switch to non-deprecated API for clustering","State":"open","Body":"The marker clusterer component is currently based on the `@googlemaps/markerclustererplus` package which is deprecated. These changes rewrite the component to use `@googlemaps/markerclusterer` instead.\r\n\r\nBREAKING CHANGE:\r\nThe new `@googlemaps/markerclusterer` API should be imported instead of the old one. Read more at: https://github.com/googlemaps/js-markerclusterer\r\n\r\nFurthermore, the new clustering package doesn't offer the same set of public APIs. As a result, the following inputs to the `MapMarkerClusterer` component have been removed:\r\n* `ariaLabelFn`\r\n* `averageCenter`\r\n* `batchSizeIE`\r\n* `calculator`\r\n* `clusterClass`\r\n* `enableRetinaIcons`\r\n* `gridSize`\r\n* `ignoreHidden`\r\n* `imageExtension`\r\n* `imagePath`\r\n* `imageSizes`\r\n* `maxZoom`\r\n* `minimumClusterSize`\r\n* `styles`\r\n* `title`\r\n* `zIndex`\r\n* `zoomOnClick`\r\n* `options`\r\n\r\nIt is now recommended to customize the cluster using the `renderer` and `algorithm` inputs.\r\n\r\nFixes #23695.","Url":"https://github.com/angular/components/pull/24853","RelatedDescription":"Open PR \"feat(google-maps): switch to non-deprecated API for clustering\" (#24853)"},{"Id":"1219199304","IsPullRequest":true,"CreatedAt":"2022-04-28T20:55:14","Actor":"wagnermaciel","Number":"24851","RawContent":null,"Title":"build: update angular cli to 14.0.0-next.12","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24851","RelatedDescription":"Closed or merged PR \"build: update angular cli to 14.0.0-next.12\" (#24851)"},{"Id":"1219251204","IsPullRequest":true,"CreatedAt":"2022-04-28T20:41:09","Actor":"renovate[bot]","Number":"24852","RawContent":null,"Title":"build: update angular shared dev-infra code to 0026dda","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/dev-infra-private](https://togithub.com/angular/dev-infra-private-builds) | devDependencies | digest | `4149a6b` -> `0026dda` |\n| angular/dev-infra | action | digest | `303acfd` -> `93fef04` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24852","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code to 0026dda\" (#24852)"},{"Id":"1219102269","IsPullRequest":true,"CreatedAt":"2022-04-28T18:20:30","Actor":"devversion","Number":"24850","RawContent":null,"Title":"build: update to account for snapshot repository branch rename","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24850","RelatedDescription":"Closed or merged PR \"build: update to account for snapshot repository branch rename\" (#24850)"},{"Id":"1217968196","IsPullRequest":true,"CreatedAt":"2022-04-28T16:54:50","Actor":"jelbourn","Number":"24838","RawContent":null,"Title":"docs(material/theming): document `typography-hierarchy`","State":"closed","Body":"The `typography-hierarchy` mixin was missing from the documentation. This adds a couple of sentences mentioning that it exists.","Url":"https://github.com/angular/components/pull/24838","RelatedDescription":"Closed or merged PR \"docs(material/theming): document `typography-hierarchy`\" (#24838)"},{"Id":"1218486123","IsPullRequest":true,"CreatedAt":"2022-04-28T14:44:13","Actor":"ddubrava","Number":"24844","RawContent":null,"Title":"docs(material/autocomplete): change documentation for the optionActivated event","State":"closed","Body":"Hi! I removed 'using the keyabord' since it's not correct.\r\nbtw, I'm not sure the current description is accurate enough. Perhaps we should include some information about the active index logic.\r\n\r\nFixes #24799","Url":"https://github.com/angular/components/pull/24844","RelatedDescription":"Closed or merged PR \"docs(material/autocomplete): change documentation for the optionActivated event\" (#24844)"},{"Id":"1218647919","IsPullRequest":false,"CreatedAt":"2022-04-28T12:20:40","Actor":"WilliamChelman","Number":"24848","RawContent":null,"Title":"bug(mat-button): disabled not following html specs","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen making use of `[disabled]` on any sort of `mat-button`, instead of just having `disabled` in the html, we get [disable]=\"true\", which is not correctly following [html specs for boolean attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attribute).\r\n\r\nIt is to be noted that, in absence of `mat-button`, `[disabled]` is behaving correctly on `<button>`. I wouldn't be surprised if this had to do with the [boolean coercion being made](https://github.com/angular/components/blob/master/src/material/core/common-behaviors/disabled.ts#L30).\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. go to the [stackbliz](https://stackblitz.com/edit/components-issue-ug7qvf?file=src/app/example-component.html)\r\n2. notice the difference in html `disable` attributes between the native button and the material one\r\n\r\n\r\n### Expected Behavior\r\n\r\n`disabled` is following [specs](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attribute)\r\n```html\r\n<button \r\n  _ngcontent-nxh-c308=\"\" \r\n  mat-raised-button=\"\" \r\n  class=\"mat-focus-indicator mat-raised-button mat-button-base mat-button-disabled\" \r\n  ng-reflect-disabled=\"true\" \r\n  disabled>[...]</button>\r\n```\r\n\r\n### Actual Behavior\r\n\r\n`disabled` attribute is set to `true`\r\n```html\r\n<button \r\n  _ngcontent-nxh-c308=\"\"\r\n   mat-raised-button=\"\" \r\n  class=\"mat-focus-indicator mat-raised-button mat-button-base mat-button-disabled\" \r\n  ng-reflect-disabled=\"true\" \r\n  disabled=\"true\">[...]</button>\r\n```\r\n`=\"true\"` should not be there in `disabled=\"true\"`\r\n\r\n### Environment\r\n\r\n- Angular: 11, 12, 13 & 14.next-12\r\n- CDK/Material: 11, 12, 13 & 14.next-12 (tested trough https://material.angular.io/components/button/overview and equivalent for each version)\r\n- Browser(s): Edge 100\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/24848","RelatedDescription":"Open issue \"bug(mat-button): disabled not following html specs\" (#24848)"},{"Id":"1218353245","IsPullRequest":true,"CreatedAt":"2022-04-28T11:35:31","Actor":"devversion","Number":"24843","RawContent":null,"Title":"build: temporarily disable queue orb causing snapshot deployment failures","State":"closed","Body":"See: https://github.com/eddiewebb/circleci-queue/issues/79.","Url":"https://github.com/angular/components/pull/24843","RelatedDescription":"Closed or merged PR \"build: temporarily disable queue orb causing snapshot deployment failures\" (#24843)"},{"Id":"1218577106","IsPullRequest":true,"CreatedAt":"2022-04-28T11:17:15","Actor":"andrewseguin","Number":"24847","RawContent":null,"Title":"Bump version to \"v14.0.0-next.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24847","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-next.12\" with changelog.\" (#24847)"},{"Id":"1218551919","IsPullRequest":true,"CreatedAt":"2022-04-28T11:13:09","Actor":"devversion","Number":"24846","RawContent":null,"Title":"build: fix staging release checks after auto-generating `material-experimental`  package json","State":"closed","Body":"We recently started auto-generating the material-experimental\r\npackage.json file to avoid duplicating the MDC version/deps\r\nacross multiple places.\r\n\r\nThe staging checks assume a `package.json` file to be visible in the\r\nsource files. For our checks it is sufficient to use the handwritten\r\nbase package.json file.\r\n\r\nNote: We do have actual generated `package.json` tests, but these tests\r\nare quick sanity checks that run before actually releasing (giving a quick\r\nheads-up before doing too much unnecessary work)","Url":"https://github.com/angular/components/pull/24846","RelatedDescription":"Closed or merged PR \"build: fix staging release checks after auto-generating `material-experimental`  package json\" (#24846)"},{"Id":"1218326512","IsPullRequest":true,"CreatedAt":"2022-04-28T10:25:17","Actor":"crisbeto","Number":"24842","RawContent":null,"Title":"refactor(cdk/dialog): expand and clean up API","State":"closed","Body":"Adjusts the public API of the CDK dialog based on a recent feedback session by:\r\n* Expanding `DialogRef.restoreFocus` to allow CSS selectors and DOM nodes.\r\n* Changing `Dialog.openDialogs`, `DialogRef.componentInstance` and `DialogRef.containerInstance` to be readonly.\r\n* Allowing for numbers to be passed in to `DialogRef.updateSize`.\r\n* Updating the doc string of `DialogRef.updateSize`.","Url":"https://github.com/angular/components/pull/24842","RelatedDescription":"Closed or merged PR \"refactor(cdk/dialog): expand and clean up API\" (#24842)"},{"Id":"1218490203","IsPullRequest":false,"CreatedAt":"2022-04-28T09:59:56","Actor":"mark-langer","Number":"24845","RawContent":null,"Title":"feat(material icon): Support for Material Symbols","State":"open","Body":"### Feature Description\n\nGoogle just published [Material Symbols](https://material.io/blog/introducing-symbols), a fresher version of material icons that's also packaged within a variable font, giving us designers & developers more fine-grained control over the icons' looks 🎨 Plus, their default icon styles look a tad more modern (-> rounded icons).\r\n\r\nIt would be great to use them in our Angular projects through one of Angular's material components.\n\n### Use Case\n\nSimplify using Google's new Material Symbols font.","Url":"https://github.com/angular/components/issues/24845","RelatedDescription":"Open issue \"feat(material icon): Support for Material Symbols\" (#24845)"},{"Id":"1218042201","IsPullRequest":true,"CreatedAt":"2022-04-28T00:56:36","Actor":"andrewseguin","Number":"24841","RawContent":null,"Title":"docs: release notes for the v13.3.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.3.x\" branch to the next branch (master).","Url":"https://github.com/angular/components/pull/24841","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.3.5 release\" (#24841)"},{"Id":"1218039559","IsPullRequest":true,"CreatedAt":"2022-04-28T00:49:31","Actor":"andrewseguin","Number":"24840","RawContent":null,"Title":"Bump version to \"v13.3.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24840","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.3.5\" with changelog.\" (#24840)"},{"Id":"1217995999","IsPullRequest":true,"CreatedAt":"2022-04-27T23:51:52","Actor":"zarend","Number":"24839","RawContent":null,"Title":"fix(material-experimental/mdc-checkbox): remove extra a11y tree node for the <label/>","State":"open","Body":"In the mdc checkbox component, moves the click handler on the label to\r\nits parent, the .mdc-checkbox. This removes the extra a11y\r\ntree node on the label and fixes TalkBack having an extra navigation\r\nstop (#14385).\r\n\r\nA11y tree before this commit. It has an un-necessary node, which\r\ncoresponds to the `<label>` element.\r\n```\r\n- Generic\r\n - Checkbox, \"Field A\"\r\n - Textlabel, \"Field A\"\r\n```\r\n\r\nA11y tree with this commit applied\r\n```\r\n- Generic\r\n - Checkbox, \"Field A\"\r\n```\r\n\r\nfixes #14385","Url":"https://github.com/angular/components/pull/24839","RelatedDescription":"Open PR \"fix(material-experimental/mdc-checkbox): remove extra a11y tree node for the <label/>\" (#24839)"},{"Id":"1215587385","IsPullRequest":true,"CreatedAt":"2022-04-26T16:07:27","Actor":"crisbeto","Number":"24834","RawContent":null,"Title":"build: disable feature request bot","State":"closed","Body":"Disables the feature request triage bot.","Url":"https://github.com/angular/components/pull/24834","RelatedDescription":"Closed or merged PR \"build: disable feature request bot\" (#24834)"},{"Id":"1216019184","IsPullRequest":true,"CreatedAt":"2022-04-26T15:49:49","Actor":"devversion","Number":"24837","RawContent":null,"Title":"build: update tsec and drop corresponding postinstall patch","State":"closed","Body":"Updates tsec and drops the corresponding postinstall patch that\r\nwe added when we updated to Bazel v5. See: google/tsec#25","Url":"https://github.com/angular/components/pull/24837","RelatedDescription":"Closed or merged PR \"build: update tsec and drop corresponding postinstall patch\" (#24837)"},{"Id":"1216016323","IsPullRequest":true,"CreatedAt":"2022-04-26T15:49:23","Actor":"SukkaW","Number":"24836","RawContent":null,"Title":"chore: replace all git.io link","State":"closed","Body":"All links on git.io will stop redirecting after April 29, 2022: https://github.blog/changelog/2022-04-25-git-io-deprecation/\r\n\r\n---\r\n\r\nAlternative solution: should angular provide its own redirection under the domain `angular.io`?","Url":"https://github.com/angular/components/pull/24836","RelatedDescription":"Closed or merged PR \"chore: replace all git.io link\" (#24836)"},{"Id":"1215956728","IsPullRequest":true,"CreatedAt":"2022-04-26T15:48:13","Actor":"devversion","Number":"24835","RawContent":null,"Title":"refactor(material/core): deprecate legacy theming API","State":"closed","Body":"DEPRECATED: `mat.define-dark-theme` no longer accepts `$primary`, `$accent` and `$warn`.\r\n  Pass a single config map instead.\r\n\r\nDEPRECATED: `mat.define-light-theme` no longer accepts `$primary`, `$accent` and `$warn`.\r\n  Pass a single config map instead.\r\n\r\nDEPRECATED: Custom Material themes should no longer access `primary`, `accent`, `warn`,\r\n  `is-dark`, `foreground` and `background` from the theme map, but instead use the actual `color`\r\n  configuration (`mat.get-color-config($theme)`).\r\n\r\nDEPRECATED: Passing a color configuration directly to a `-theme` mixin\r\n  is not supported. Pass the theme container object instead or use the dedicated\r\n  `-color` mixins.","Url":"https://github.com/angular/components/pull/24835","RelatedDescription":"Closed or merged PR \"refactor(material/core): deprecate legacy theming API\" (#24835)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-05-03T03:30:03.863628Z","RunDurationInMilliseconds":2117}