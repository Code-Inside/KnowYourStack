{"Data":{"Angular-Issues":{"Issues":[{"Id":"1659325563","IsPullRequest":true,"CreatedAt":"2023-04-08T01:20:15","Actor":"quazi44","Number":"49751","RawContent":null,"Title":"docs: I want to add Urdu in the language list so that it will be easy for the students who know urdu","State":"open","Body":"Need to add Urdu language in language list\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49751","RelatedDescription":"Open PR \"docs: I want to add Urdu in the language list so that it will be easy for the students who know urdu\" (#49751)"},{"Id":"1659220457","IsPullRequest":true,"CreatedAt":"2023-04-07T21:29:49","Actor":"AndrewKushnir","Number":"49750","RawContent":null,"Title":"refactor(core): do not enable hydration when server response was incomplete","State":"open","Body":"This commit updates the logic to avoid enabling hydration in case server response doesn't contain hydration-related info serialized. It can happen when `provideClientHydration()` call only happens on the client, but not on the server.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49750","RelatedDescription":"Open PR \"refactor(core): do not enable hydration when server response was incomplete\" (#49750)"},{"Id":"1659172255","IsPullRequest":true,"CreatedAt":"2023-04-07T20:40:19","Actor":"brandonroberts","Number":"49749","RawContent":null,"Title":"fix(http): ensure new cache state is returned on each request","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe cache state is only used only the first server request. Restarting the server uses the cache on the first request.\r\n\r\nSubsequent requests skip the cache because the `CACHE_STATE` object is mutated.\r\n\r\n## What is the new behavior?\r\n\r\nA new cache state is returned on every server request.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nAngular v16.0.0-next.7 release with Universal installed and client hydration enabled\r\nReproduction: https://github.com/brandonroberts/angular-v16-universal-standalone\r\n\r\n1. Clone the repo, install the dependencies\r\n2. Run npm run dev:ssr\r\n3. Visit the `/todos` route\r\n4. Notice the API request is not made\r\n5. Reload the page\r\n6. Notice the API request is made on the client\r\n","Url":"https://github.com/angular/angular/pull/49749","RelatedDescription":"Open PR \"fix(http): ensure new cache state is returned on each request\" (#49749)"},{"Id":"1659040563","IsPullRequest":false,"CreatedAt":"2023-04-07T18:04:47","Actor":"TheColorRed","Number":"49748","RawContent":null,"Title":"New @Required() decorator to enforce usage of @Intput()","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/core\r\n\r\n### Description\r\n\r\nIt would be nice to require some inputs to be enforced on the component. Based on this [stackoverflow answer](https://stackoverflow.com/questions/35528395/make-directive-input-required), It would be nice to not have to put the required elements in the selector, then add an input for each one:\r\n\r\n```typescript\r\n/** Note: requires the [a] attribute to be passed */\r\n@Component({\r\n  selector: 'my-dir[a]', // <-- use attribute selector along with tag to ensure both tag name and attribute are used to \"select\" element by Angular in DOM\r\n});\r\nexport class MyComponent {\r\n  @Input() a: number;\r\n}\r\n```\r\n\r\n### Proposed solution\r\n\r\nBy adding a `@Required()` decorator could be a solution.\r\n\r\n```typescript\r\n@Component({\r\n  selector: 'example-component',\r\n  template: ''\r\n})\r\nexport class ExampleComponent {\r\n\r\n  @Required()\r\n  @Input()\r\n  myInput: string;\r\n\r\n  @Required()\r\n  @Input()\r\n  // Should not have a default value (other than undefined)\r\n  invalidUsage: string = 'Hello';\r\n\r\n}\r\n```\r\n\r\nWhen executed, an error is thrown if `myInput` doesn't have a value.\r\n","Url":"https://github.com/angular/angular/issues/49748","RelatedDescription":"Closed issue \"New @Required() decorator to enforce usage of @Intput()\" (#49748)"},{"Id":"1658216245","IsPullRequest":true,"CreatedAt":"2023-04-07T16:42:12","Actor":"AndrewKushnir","Number":"49743","RawContent":null,"Title":"refactor(core): add a warning when hydration annotation is missing in server response","State":"closed","Body":"This commit updates the logic to detect a situation when hydration support was enabled only on the client. If that happens, Angular produces a warning in a console with a link to the error guide.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49743","RelatedDescription":"Closed or merged PR \"refactor(core): add a warning when hydration annotation is missing in server response\" (#49743)"},{"Id":"1658913616","IsPullRequest":true,"CreatedAt":"2023-04-07T15:11:43","Actor":"atscott","Number":"49747","RawContent":null,"Title":"fix(core): When using setInput, mark view dirty in same way as `markForCheck`","State":"open","Body":"patch target for https://github.com/angular/angular/pull/49711\r\n\r\n`ComponentRef.setInput` internally calls `markDirtyIfOnPush` which only marks the given view as dirty but does not mark parents dirty like `ChangeDetectorRef.markForCheck` would. https://github.com/angular/angular/blob/f071224720f8affb97fd32fb5aeaa13155b13693/packages/core/src/render3/instructions/shared.ts#L1018-L1024\r\n\r\n`markDirtyIfOnPush` has an assumption that it’s being called from the parent’s template. That is, we don’t need to mark dirty to the root, because we’ve already traversed down to it. The function used to only be called during template execution for input bindings but was added to `setInput` later. It's not a good fit because it means that if you are responding to events such as an emit from an `Observable` and call `setInput`, the view of your `ComponentRef` won't necessarily get checked when change detection runs next. If this lives inside some `OnPush` component tree that's not already dirty, it only gets refreshed if you also call `ChangeDetectorRef.markForCheck` in the host component (because it will be \"shielded\" be a non-dirty parent).\r\n","Url":"https://github.com/angular/angular/pull/49747","RelatedDescription":"Open PR \"fix(core): When using setInput, mark view dirty in same way as `markForCheck`\" (#49747)"},{"Id":"1658883056","IsPullRequest":true,"CreatedAt":"2023-04-07T14:47:21","Actor":"JeanMeche","Number":"49746","RawContent":null,"Title":"ci: Remove environment files and `EnableProdMode` on integration tests","State":"open","Body":"Since v15, prod mode is handled by the CLI with the `optimization` flag. We can remove the environement files and `enableProdMode` when the tests use the CLI.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes","Url":"https://github.com/angular/angular/pull/49746","RelatedDescription":"Open PR \"ci: Remove environment files and `EnableProdMode` on integration tests\" (#49746)"},{"Id":"1658643119","IsPullRequest":true,"CreatedAt":"2023-04-07T10:22:30","Actor":"JeanMeche","Number":"49745","RawContent":null,"Title":"docs: update docs about prodMode.","State":"open","Body":"Following #49723, this commit updates the doc to reflect the actual message prompted in the console.\r\n","Url":"https://github.com/angular/angular/pull/49745","RelatedDescription":"Open PR \"docs: update docs about prodMode.\" (#49745)"},{"Id":"1658455419","IsPullRequest":true,"CreatedAt":"2023-04-07T07:04:02","Actor":"000panther","Number":"49744","RawContent":null,"Title":"docs(localize) add warning about ICU not working with $localize, adap…","State":"open","Body":"…t example\r\n\r\nSince I fell over it i added a warning that ICU will not work in $localize tags (this was not obvious for me from the documentation) and adapted the first example to show that it is used from a template.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nDocumentation not mentioning ICU does not work with $localize\r\n\r\n## What is the new behavior?\r\nDocumention mentions that ICU does only work in templates.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49744","RelatedDescription":"Open PR \"docs(localize) add warning about ICU not working with $localize, adap…\" (#49744)"},{"Id":"1658153001","IsPullRequest":true,"CreatedAt":"2023-04-06T23:09:57","Actor":"JeanMeche","Number":"49742","RawContent":null,"Title":"fix(compiler) support for keyword similar properties in components (i.e. `as`)","State":"open","Body":"At moment, `as` is the only keyword that is also a valid js property identifier. \r\nThe lexer wasn't able to handle this particular case. It always assumed that it was a keyword thus preventing the use of an `as` property in a template.\r\n\r\nThis fix is required to land #49731. \r\n\r\nfixes #49733\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49742","RelatedDescription":"Open PR \"fix(compiler) support for keyword similar properties in components (i.e. `as`)\" (#49742)"},{"Id":"1658090965","IsPullRequest":true,"CreatedAt":"2023-04-06T21:55:18","Actor":"atscott","Number":"49741","RawContent":null,"Title":"Router ActivatedRoute refactoring","State":"open","Body":"1: refactor(router): Correct types of ActivatedRoute Observables\r\n2: refactor(router): Ensure data is bound to components in change detection following navigation","Url":"https://github.com/angular/angular/pull/49741","RelatedDescription":"Open PR \"Router ActivatedRoute refactoring\" (#49741)"},{"Id":"1658049609","IsPullRequest":false,"CreatedAt":"2023-04-06T21:23:15","Actor":"meenamunshi","Number":"49740","RawContent":null,"Title":"Upgrade from 13 ~ 15 Error: Emit attempted before Angular Webpack plugin initialization.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\n\"dependencies\": {\r\n    \"@angular/animations\": \"^15.2.6\",\r\n    \"@angular/cdk\": \"^15.2.6\",\r\n    \"@angular/common\": \"~15.2.6\",\r\n    \"@angular/compiler\": \"~15.2.6\",\r\n    \"@angular/core\": \"~15.2.6\",\r\n    \"@angular/forms\": \"~15.2.6\",\r\n    \"@angular/material\": \"^15.2.6\",\r\n    \"@angular/platform-browser\": \"~15.2.6\",\r\n    \"@angular/platform-browser-dynamic\": \"~15.2.6\",\r\n    \"@angular/router\": \"~15.2.6\",\r\n    \"@ng-bootstrap/ng-bootstrap\": \"^14.1.0\",\r\n    \"@ngrx/effects\": \"^15.4.0\",\r\n    \"@ngrx/entity\": \"^15.4.0\",\r\n    \"@ngrx/store\": \"^15.4.0\",\r\n    \"@ngrx/store-devtools\": \"^15.4.0\",\r\n    \"@ngtools/webpack\": \"^15.2.5\",\r\n    \"@swimlane/ngx-charts\": \"^20.1.2\",\r\n    \"bootstrap\": \"^5.0.2\",\r\n    \"echarts\": \"^5.1.0\",\r\n    \"jwt-decode\": \"^3.1.2\",\r\n    \"ngx-echarts\": \"^15.0.3\",\r\n    \"ngx-logger\": \"^5.0.11\",\r\n    \"ngx-toastr\": \"^16.1.0\",\r\n    \"rxjs\": \"7.5.0\",\r\n    \"tslib\": \"^2.0.0\",\r\n    \"zone.js\": \"~0.13.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~15.2.5\",\r\n    \"@angular/cli\": \"~15.2.5\",\r\n    \"@angular/compiler-cli\": \"~15.2.6\",\r\n    \"@types/d3-scale\": \"^4.0.2\",\r\n    \"@types/d3-selection\": \"^3.0.2\",\r\n    \"@types/echarts\": \"^4.9.16\",\r\n    \"@types/jasmine\": \"~4.3.1\",\r\n    \"@types/node\": \"^18.15.11\",\r\n    \"angular-persistence\": \"^1.0.1\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"jasmine-core\": \"~4.6.0\",\r\n    \"jasmine-spec-reporter\": \"~7.0.0\",\r\n    \"karma\": \"~6.4.1\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"^2.0.0\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"rxjs-compat\": \"^6.6.7\",\r\n    \"ts-node\": \"~10.9.1\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"4.8.2\"\r\n  }\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nOne or more browsers which are configured in the project's Browserslist configuration will be ignored as ES5 output is not supported by the Angular CLI.\r\nIgnored browsers: kaios 2.5, op_mini all\r\n✔ Browser application bundle generation complete.\r\n\r\nInitial Chunk Files   | Names         |  Raw Size | Estimated Transfer Size\r\nstyles.css, styles.js | styles        | 398.39 kB |                57.87 kB\r\nmain.js               | main          | 118.77 kB |                29.05 kB\r\npolyfills.js          | polyfills     | 118.77 kB |                29.04 kB\r\nruntime.js            | runtime       |   1.25 kB |               681 bytes\r\n\r\n                      | Initial Total | 637.17 kB |               116.61 kB\r\n\r\nBuild at: 2023-04-06T21:04:06.409Z - Hash: d96d42fe7f3c7221 - Time: 12077ms\r\n\r\nWarning: 1 rules skipped due to selector errors:\r\n  legend+* -> Cannot read properties of undefined (reading 'type')\r\n\r\n\r\n\r\n./src/main.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\n./src/polyfills.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\nError: Failed to initialize Angular compilation - The target entry-point \"angular-persistence\" has missing dependencies:\r\n - rxjs/Rx\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49740","RelatedDescription":"Closed issue \"Upgrade from 13 ~ 15 Error: Emit attempted before Angular Webpack plugin initialization.\" (#49740)"},{"Id":"1657837600","IsPullRequest":false,"CreatedAt":"2023-04-06T18:56:06","Actor":"sunilbaba","Number":"49739","RawContent":null,"Title":"How to use below fix for memory leak issue for apps below angular version prior to 14","State":"closed","Body":"              For anybody looking for an ugly workaround, I've yet to see any issues with  this patch of `attachPatchData`:\r\n\r\n```typescript\r\nimport { process as runNgcc } from '@angular/compiler-cli/ngcc';\r\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\nconst ANGULAR_CORE_PATH = '@angular/core';\r\nconst ANGULAR_CORE_NGCC_PATH = `${ANGULAR_CORE_PATH}/__ivy_ngcc__/fesm2015/core.js`;\r\n\r\nconst REPLACE_AT = `\r\nfunction attachPatchData(target, data) {\r\n    ngDevMode && assertDefined(target, 'Target expected');\r\n    target[MONKEY_PATCH_KEY_NAME] = data;\r\n}\r\n`.trim();\r\n\r\nconst REPLACE_WITH = `\r\nfunction attachPatchData(target, data) {\r\n    ngDevMode && assertDefined(target, 'Target expected');\r\n    if (ngDevMode || !(target instanceof EventTarget)) {\r\n      target[MONKEY_PATCH_KEY_NAME] = data;\r\n    }\r\n}\r\n`.trim();\r\n\r\n// https://github.com/angular/angular/issues/41047\r\nexport function patchAngularToRemoveNgContextFromDom(nodeModulesPath: string): void {\r\n  const patchFilePath = join(nodeModulesPath, ANGULAR_CORE_NGCC_PATH);\r\n\r\n  if (!existsSync(patchFilePath)) {\r\n    runNgcc({\r\n      basePath: nodeModulesPath,\r\n      targetEntryPointPath: join(nodeModulesPath, ANGULAR_CORE_PATH),\r\n      createNewEntryPointFormats: true,\r\n      propertiesToConsider: ['fesm2015'],\r\n    });\r\n\r\n    if (!existsSync(patchFilePath)) {\r\n      throw new Error(`Tried to patch @angular/core but could not find ${patchFilePath}.`);\r\n    }\r\n  }\r\n\r\n  const fileContent = readFileSync(patchFilePath, 'utf8');\r\n  const replacedFileContent = fileContent.replace(REPLACE_AT, REPLACE_WITH);\r\n\r\n  if (!replacedFileContent.includes(REPLACE_WITH)) {\r\n    throw new Error(`Could not patch memory leak in @angular/core.`);\r\n  }\r\n\r\n  if (fileContent.length === replacedFileContent.length) {\r\n    return;\r\n  }\r\n\r\n  writeFileSync(patchFilePath, replacedFileContent);\r\n}\r\n```\r\n\r\n_Originally posted by @blidblid in https://github.com/angular/angular/issues/41047#issuecomment-902648515_\r\n            ","Url":"https://github.com/angular/angular/issues/49739","RelatedDescription":"Closed issue \"How to use below fix for memory leak issue for apps below angular version prior to 14\" (#49739)"},{"Id":"1656614095","IsPullRequest":true,"CreatedAt":"2023-04-06T18:01:06","Actor":"AndrewKushnir","Number":"49728","RawContent":null,"Title":"refactor(core): update the link in hydration stats message","State":"closed","Body":"Currently, the link points to https://angular.io/guides/hydration and there are 2 issues with it: the `guides/hydration` should actually be `guide/hydration` and the guide is only available at https://next.angular.io, but not at https://angular.io. It will be available at https://angular.io once v16 final is released. For now, we can point to https://next.angular.io, so that developers testing hydration during the pre-release period can follow the link.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49728","RelatedDescription":"Closed or merged PR \"refactor(core): update the link in hydration stats message\" (#49728)"},{"Id":"1656538391","IsPullRequest":true,"CreatedAt":"2023-04-06T18:00:33","Actor":"AndrewKushnir","Number":"49723","RawContent":null,"Title":"refactor(core): drop a reference to `enableProdMode()` in a console.log","State":"closed","Body":"New `ng new` apps no longer generate `enableProdMode` calls when an app is created. The prod mode is enabled via CLI flags (and configuration in the `angular.json` if needed).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49723","RelatedDescription":"Closed or merged PR \"refactor(core): drop a reference to `enableProdMode()` in a console.log\" (#49723)"},{"Id":"1656477388","IsPullRequest":true,"CreatedAt":"2023-04-06T17:59:53","Actor":"AndrewKushnir","Number":"49722","RawContent":null,"Title":"refactor(core): skip hydration for components that use i18n (instead of throwing an error)","State":"closed","Body":"Currently, non-destructive hydration for i18n blocks is not supported (but support is coming!). This commit updates the serialization logic from throwing an error when it comes across an i18n block to annotating a component with a skip hydration flag.\r\n\r\nThe second commit applies the same changes for components that use `ViewEncapsulation.ShadowDom`. The Domino DOM emulation library doesn't support shadow DOM. For such components we can not guarantee that client and server representations would match perfectly. To avoid hydration mismatch errors, such components are opted out of hydration.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49722","RelatedDescription":"Closed or merged PR \"refactor(core): skip hydration for components that use i18n (instead of throwing an error)\" (#49722)"},{"Id":"1657815463","IsPullRequest":true,"CreatedAt":"2023-04-06T17:46:20","Actor":"josephperrott","Number":"49738","RawContent":null,"Title":"docs: release notes for the v13.4.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.4.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/49738","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.4.0 release\" (#49738)"},{"Id":"1657815403","IsPullRequest":true,"CreatedAt":"2023-04-06T17:41:55","Actor":"JeanMeche","Number":"49737","RawContent":null,"Title":"feat(core): `ComponentMirror` exposes hostdirectives inputs/outputs","State":"open","Body":"This commits increases the api surface for `ComponentMirror` by exposings a Map of HostDirectives' inputs/outputs.\r\n\r\nSee #49734\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49737","RelatedDescription":"Open PR \"feat(core): `ComponentMirror` exposes hostdirectives inputs/outputs\" (#49737)"},{"Id":"1657811511","IsPullRequest":true,"CreatedAt":"2023-04-06T17:40:20","Actor":"josephperrott","Number":"49736","RawContent":null,"Title":"Bump version to \"v13.4.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49736","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.4.0\" with changelog.\" (#49736)"},{"Id":"1657747583","IsPullRequest":true,"CreatedAt":"2023-04-06T16:48:00","Actor":"HyperLife1119","Number":"49735","RawContent":null,"Title":"feat(common): add component input binding support for NgComponentOutlet","State":"open","Body":"This commit add component input binding support for NgComponentOutlet.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49735","RelatedDescription":"Open PR \"feat(common): add component input binding support for NgComponentOutlet\" (#49735)"},{"Id":"1657646519","IsPullRequest":false,"CreatedAt":"2023-04-06T15:32:22","Actor":"gmfun","Number":"49734","RawContent":null,"Title":"reflectComponentType should include inputs and outputs from hostDirective","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\n`reflectComponentType` does not include inputs and outputs added using host directive.\r\n\r\nWe are creating dynamic component and using `component.setInput(key, value)`. We do not know before hand if `key` will be available as input and if it is not defined we get the following error\r\n\r\n<img width=\"566\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6323787/230426535-15bbed66-80cd-409f-acdc-70c86289f9b6.png\">\r\n\r\nSo, we where checking if `key` is a valid input for the component using `reflectComponentType` function.\r\n\r\nThis does not work when the input is added to the dynamic component through directive composition.\r\n\r\nEven try, catch is not supressing the error. In prod mode the error is not there\n\n### Proposed solution\n\nSolution\r\n1. `reflectComponentType` should include inputs from host directive\r\n2. try, catch should supress error \r\n3. Provide alternatve way to get inputs\n\n### Alternatives considered\n\n--","Url":"https://github.com/angular/angular/issues/49734","RelatedDescription":"Open issue \"reflectComponentType should include inputs and outputs from hostDirective\" (#49734)"},{"Id":"1657518364","IsPullRequest":false,"CreatedAt":"2023-04-06T14:20:18","Actor":"JeanMeche","Number":"49733","RawContent":null,"Title":"Compiler doesn't support templates with keyword variables like `as`. ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nNo. \r\n\r\n### Description\r\n\r\nWhile trying to implement a fix in #49731, I stumbled upon this bug :  a variable `as` (which is valid in JS/TS) is not supported in templates. \r\n\r\nJIT throws : `Parser Error: Unexpected token as at column 1 in [{{as}}]`\r\nAOT throws:  `Parser Error: Unexpected token as`\r\n\r\nRoot cause is because it's one of the lexer's keyword: \r\n\r\nhttps://github.com/angular/angular/blob/726f09c01e214114c137fcbd1928bc81035cc09d/packages/compiler/src/expression_parser/lexer.ts#L22\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\nhttps://stackblitz.com/edit/angular-edh4hz)","Url":"https://github.com/angular/angular/issues/49733","RelatedDescription":"Open issue \"Compiler doesn't support templates with keyword variables like `as`. \" (#49733)"},{"Id":"1657394315","IsPullRequest":false,"CreatedAt":"2023-04-06T13:13:31","Actor":"GeorgeKnap","Number":"49732","RawContent":null,"Title":"Cannot use inject() in ResolveFn (standalone routes function resolver)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nrouter\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nBased on the official description of [ResolveFn](https://angular.io/api/router/ResolveFn) I should be able to use inject() in inline resolver:\r\n\r\n\r\n_routes.ts_\r\n```\r\nconst myResolver: ResolveFn<Plant> = (route) => inject(PlantResolver).resolve(route.paramMap.get('plantId'));\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: ':plantId',\r\n    component: PlantConfigurationComponent,\r\n    title: 'plantConfiguration',\r\n    resolve: { plant:  myResolver },\r\n  },\r\n];\r\n```\r\n\r\nhowever, this results in a runtime error \r\n```\r\nError: NG0203: inject() must be called from an injection context such as a constructor, a factory function, a field initializer, or a function used with `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nError: NG0203: inject() must be called from an injection context such as a constructor, a factory function, a field initializer, or a function used with `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular: 15.2.1\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/49732","RelatedDescription":"Closed issue \"Cannot use inject() in ResolveFn (standalone routes function resolver)\" (#49732)"},{"Id":"1657324024","IsPullRequest":true,"CreatedAt":"2023-04-06T12:21:37","Actor":"JeanMeche","Number":"49731","RawContent":null,"Title":"fix(compiler): Support `in` operator in *ngIf expressions","State":"open","Body":"This commit adds the support of the `in` operator to the Expression Parser.\r\n\r\nFixes #49612 \r\nAlso related to #43485 \r\n\r\nBecause of #49733, this actually breaks variables named  `in` in templates. It this acceptable ? \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/49731","RelatedDescription":"Open PR \"fix(compiler): Support `in` operator in *ngIf expressions\" (#49731)"},{"Id":"1656876057","IsPullRequest":false,"CreatedAt":"2023-04-06T08:01:21","Actor":"leo6104","Number":"49730","RawContent":null,"Title":"ApplicationRef.isStable doesn't wait for all requests finished on SSR with angular 16.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nplatform-server\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThis is regression issue for SSR rendering. \r\n\r\nWe trigger several api calls from 30+ components in SSR and it should wait until all response finished. \r\nHowever, when the first api call got response from server, it immediately finish ssr render and CommonEngine Promise return partial rendered html. \r\n\r\nIt seems ApplicationRef.isStable doesn't wait for all api requests finished. \r\n\r\nThere is no changes in our projects and just update to angular 16. (we doesn't apply `provideClientHydration()` option.)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/dasom0801/my-universal-app\r\n\r\nComponent 1 / Component 2 / COmponent 3 each component request api call and only fastest one rendered.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nthe result got from CommonEngine doesn't return fully rendered html string. Only return partially rendered html.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.0.0-next.6\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin x64\r\n\r\nAngular: 16.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.0-next.6\r\n@angular-devkit/build-angular   16.0.0-next.6\r\n@angular-devkit/core            16.0.0-next.6\r\n@angular-devkit/schematics      16.0.0-next.6\r\n@angular/bazel                  15.2.4\r\n@angular/cdk                    16.0.0-next.2\r\n@angular/cli                    16.0.0-next.6\r\n@angular/material               16.0.0-next.2\r\n@angular/youtube-player         16.0.0-next.2\r\n@nguniversal/builders           16.0.0-next.0\r\n@nguniversal/common             16.0.0-next.0\r\n@nguniversal/express-engine     16.0.0-next.0\r\n@schematics/angular             16.0.0-next.6\r\nng-packagr                      16.0.0-next.2\r\nrxjs                            7.8.0\r\ntypescript                      5.0.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nPrevious angular 15 version we used is here .\r\n```\r\nAngular CLI: 15.2.0-next.4\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin x64\r\n\r\nAngular: 15.2.0-next.4\r\n... animations, bazel, cli, common, compiler, compiler-cli, core\r\n... elements, forms, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.0-next.4\r\n@angular-devkit/build-angular   15.2.0-next.4\r\n@angular-devkit/core            15.2.0-next.4\r\n@angular-devkit/schematics      15.2.0-next.4\r\n@angular/cdk                    15.2.0-next.0\r\n@angular/material               15.2.0-next.0\r\n@angular/youtube-player         15.2.0-next.0\r\n@nguniversal/common             15.0.0\r\n@schematics/angular             15.2.0-next.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.6.0\r\ntypescript                      4.8.4\r\n```","Url":"https://github.com/angular/angular/issues/49730","RelatedDescription":"Open issue \"ApplicationRef.isStable doesn't wait for all requests finished on SSR with angular 16.\" (#49730)"},{"Id":"1656801784","IsPullRequest":false,"CreatedAt":"2023-04-06T07:11:22","Actor":"arunsoraba2","Number":"49729","RawContent":null,"Title":"Angular universal not updating dynamic meta tags and content received from API","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am trying to add meta tags dynamically, i am able to see in inspect element, but view page source not displaying.\r\n\r\nIf i hardcode same metatags in service instead of taking from API it works. but if we take data from API and than try to set its not visible in View page source. (Same applies to dynamic content in page)\r\n\r\nHere is little snap how i am setting meta tags\r\n\r\n```\r\nimport { Title, Meta, MetaDefinition } from '@angular/platform-browser';\r\n\r\n\r\n constructor(private seoService:SeoService,\r\n    private metaTagService: Meta){\r\n\r\n  }\r\n  ngOnInit(): void {\r\n   this.seoService.getResponse().subscribe((res:any)=>{\r\n    let tags: MetaDefinition[]=[];\r\n    for(let i=0;i<res.meta.length; i++){\r\n     let eachTag:MetaDefinition;\r\n     if(res.meta[i].metaType== \"name\"){\r\n       eachTag={\r\n         name:res.meta[i].tag,\r\n         content: res.meta[i].content\r\n       }\r\n     } else{\r\n       eachTag={\r\n         property:res.meta[i].tag,\r\n         content: res.meta[i].content\r\n       }\r\n     }\r\n     \r\n     tags.push(eachTag);\r\n    }\r\n   \r\n   this.metaTagService.addTags(tags);\r\n   })\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n{\r\n  \"name\": \"cms-website-ui\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\",\r\n    \"dev:ssr\": \"ng run cms-website-ui:serve-ssr\",\r\n    \"serve:ssr\": \"node dist/cms-website-ui/server/main.js\",\r\n    \"build:ssr\": \"ng build && ng run cms-website-ui:server\",\r\n    \"prerender\": \"ng run cms-website-ui:prerender\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^14.1.0\",\r\n    \"@angular/common\": \"^14.1.0\",\r\n    \"@angular/compiler\": \"^14.1.0\",\r\n    \"@angular/core\": \"^14.1.0\",\r\n    \"@angular/forms\": \"^14.1.0\",\r\n    \"@angular/platform-browser\": \"^14.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^14.1.0\",\r\n    \"@angular/platform-server\": \"^14.1.0\",\r\n    \"@angular/router\": \"^14.1.0\",\r\n    \"@nguniversal/express-engine\": \"^15.2.0\",\r\n    \"express\": \"^4.15.2\",\r\n    \"http-client\": \"^4.3.1\",\r\n    \"ngx-seo\": \"^5.3.0\",\r\n    \"rxjs\": \"~7.5.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^14.1.3\",\r\n    \"@angular/cli\": \"~14.1.3\",\r\n    \"@angular/compiler-cli\": \"^14.1.0\",\r\n    \"@nguniversal/builders\": \"^15.2.0\",\r\n    \"@types/express\": \"^4.17.0\",\r\n    \"@types/jasmine\": \"~4.0.0\",\r\n    \"@types/node\": \"^14.15.0\",\r\n    \"jasmine-core\": \"~4.2.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.0.0\",\r\n    \"typescript\": \"~4.7.2\"\r\n  }\r\n}\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49729","RelatedDescription":"Open issue \"Angular universal not updating dynamic meta tags and content received from API\" (#49729)"},{"Id":"1656586032","IsPullRequest":true,"CreatedAt":"2023-04-06T03:00:53","Actor":"dylhunn","Number":"49727","RawContent":null,"Title":"Update next branch to reflect new release-train \"v16.1.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the feature-freeze phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v16.0.0-next.7 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular/pull/49727","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v16.1.0-next.0\".\" (#49727)"},{"Id":"1656582619","IsPullRequest":true,"CreatedAt":"2023-04-06T02:57:54","Actor":"dylhunn","Number":"49726","RawContent":null,"Title":"Bump version to \"v16.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49726","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.0.0-next.7\" with changelog.\" (#49726)"},{"Id":"1656576880","IsPullRequest":true,"CreatedAt":"2023-04-06T02:46:22","Actor":"dylhunn","Number":"49725","RawContent":null,"Title":"docs: release notes for the v15.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/49725","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.2.6 release\" (#49725)"},{"Id":"1656575098","IsPullRequest":true,"CreatedAt":"2023-04-06T02:44:19","Actor":"dylhunn","Number":"49724","RawContent":null,"Title":"Bump version to \"v15.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49724","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.6\" with changelog.\" (#49724)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1659136052","IsPullRequest":true,"CreatedAt":"2023-04-07T19:48:56","Actor":"clydin","Number":"24976","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only import esbuild watcher when in watch mode","State":"open","Body":"When using the esbuild-based browser application builder, all the watch-related code is now only imported when the watch mode is enabled. This removes the need for Node.js to resolve and load code that will not be used.","Url":"https://github.com/angular/angular-cli/pull/24976","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): only import esbuild watcher when in watch mode\" (#24976)"},{"Id":"1658971736","IsPullRequest":true,"CreatedAt":"2023-04-07T16:16:24","Actor":"clydin","Number":"24975","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure all build resources are served in esbuild dev server","State":"open","Body":"Previously when using the esbuild-based browser application builder with the new dev server, resource files referenced via stylesheets may not have been served by the development server. The development server has now been adjusted to properly prioritize and serve and such files that were generated during the build process.\r\nGlobal stylesheets are also currently considered resource files as well to workaround issues with development sourcemaps within the development server itself. Global stylesheets are already fully processed by the build system prior to being passed to the development server.","Url":"https://github.com/angular/angular-cli/pull/24975","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): ensure all build resources are served in esbuild dev server\" (#24975)"},{"Id":"1658788216","IsPullRequest":true,"CreatedAt":"2023-04-07T13:06:43","Actor":"clydin","Number":"24974","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure directories are properly ignored in esbuild builder","State":"open","Body":"When using the esbuild-based browser application builder in watch mode, the underlying file watcher based on chokidar would previously not fully ignore the output path if the path contained a trailing slash. To workaround this, directory paths based on supplied options are now normalized to remove any trailing slashes.\r\n\r\nFixes #24936","Url":"https://github.com/angular/angular-cli/pull/24974","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): ensure directories are properly ignored in esbuild builder\" (#24974)"},{"Id":"1658376294","IsPullRequest":true,"CreatedAt":"2023-04-07T05:16:41","Actor":"angular-robot","Number":"24973","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `2080cd3` -> `e30395b` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a8012d3` -> `b70ab13` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `1c67057` -> `151c800` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `f5b969b` -> `95900b2` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `3205fad` -> `35b2be8` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `ceeb6cb` -> `a8ef742` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `845f192` -> `dad1a4b` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `f694379` -> `b53d98d` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `c578464` -> `dd78f75` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `f8cf02d` -> `f45e316` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f9f64e9` -> `db1c911` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `adba6cf` -> `a33fbf8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `68a6d97` -> `4c1e855` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `1e583f7` -> `014f85b` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `1cf5507` -> `9df7e51` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `287f11a` -> `3fb2674` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `1f9279c` -> `8923cf6` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `d5292a6` -> `60b5364` |\n| angular/dev-infra | action | digest | `d28e5f7` -> `df34baa` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS44LjIiLCJ1cGRhdGVkSW5WZXIiOiIzNS44LjIifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24973","RelatedDescription":"Open PR \"build: update angular\" (#24973)"},{"Id":"1658170296","IsPullRequest":false,"CreatedAt":"2023-04-06T23:38:57","Actor":"anandlingaraj","Number":"24972","RawContent":null,"Title":"Compilation error after migrating from Angular 13 to 15","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\n\r\n   > ng serve --proxy-config proxy.conf.json\r\n\r\n****************************************************************************************\r\nThis is a simple server for use in testing or debugging Angular applications locally.\r\nIt hasn't been reviewed for security issues.\r\n\r\nDON'T USE IT FOR PRODUCTION!\r\n****************************************************************************************\r\nOne or more browsers which are configured in the project's Browserslist configuration will be ignored as ES5 output is not supported by the Angular CLI.\r\nIgnored browsers: kaios 2.5, op_mini all\r\n✔ Browser application bundle generation complete.\r\n\r\nInitial Chunk Files   | Names         |  Raw Size | Estimated Transfer Size\r\nstyles.css, styles.js | styles        | 398.39 kB |                57.87 kB\r\nmain.js               | main          | 118.77 kB |                29.05 kB\r\npolyfills.js          | polyfills     | 118.77 kB |                29.04 kB\r\nruntime.js            | runtime       |   1.25 kB |               681 bytes\r\n\r\n                      | Initial Total | 637.17 kB |               116.61 kB\r\n\r\nBuild at: 2023-04-06T23:33:20.264Z - Hash: d96d42fe7f3c7221 - Time: 2443ms\r\n\r\nWarning: 1 rules skipped due to selector errors:\r\n  legend+* -> Cannot read properties of undefined (reading 'type')\r\n\r\n\r\n\r\n./src/main.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\n./src/polyfills.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\nError: Failed to initialize Angular compilation - The target entry-point \"angular-persistence\" has missing dependencies:\r\n - rxjs/Rx\r\n\r\n\r\n\r\n\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **\r\n\r\n\r\n✖ Failed to compile.\r\n\r\n\n\n### Minimal Reproduction\n\nAngular 13 project , yarn upgrade angular to 15.\r\n\r\n> ng serve --proxy-config proxy.conf.json\r\n\r\n****************************************************************************************\r\nThis is a simple server for use in testing or debugging Angular applications locally.\r\nIt hasn't been reviewed for security issues.\r\n\r\nDON'T USE IT FOR PRODUCTION!\r\n****************************************************************************************\r\nOne or more browsers which are configured in the project's Browserslist configuration will be ignored as ES5 output is not supported by the Angular CLI.\r\nIgnored browsers: kaios 2.5, op_mini all\r\n✔ Browser application bundle generation complete.\r\n\r\nInitial Chunk Files   | Names         |  Raw Size | Estimated Transfer Size\r\nstyles.css, styles.js | styles        | 398.39 kB |                57.87 kB\r\nmain.js               | main          | 118.77 kB |                29.05 kB\r\npolyfills.js          | polyfills     | 118.77 kB |                29.04 kB\r\nruntime.js            | runtime       |   1.25 kB |               681 bytes\r\n\r\n                      | Initial Total | 637.17 kB |               116.61 kB\r\n\r\nBuild at: 2023-04-06T23:33:20.264Z - Hash: d96d42fe7f3c7221 - Time: 2443ms\r\n\r\nWarning: 1 rules skipped due to selector errors:\r\n  legend+* -> Cannot read properties of undefined (reading 'type')\r\n\r\n\r\n\r\n./src/main.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\n./src/polyfills.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Emit attempted before Angular Webpack plugin initialization.\r\n\r\nError: Failed to initialize Angular compilation - The target entry-point \"angular-persistence\" has missing dependencies:\r\n - rxjs/Rx\r\n\r\n\r\n\r\n\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **\r\n\r\n\r\n✖ Failed to compile.\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\ngrumpysage > ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.2.5\r\nNode: 14.21.1\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin x64\r\n\r\nAngular: 15.2.6\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.5\r\n@angular-devkit/build-angular   15.2.5\r\n@angular-devkit/core            15.2.5\r\n@angular-devkit/schematics      15.2.5\r\n@angular/cli                    15.2.5\r\n@ngtools/webpack                15.2.5\r\n@schematics/angular             15.2.5\r\nrxjs                            7.5.0\r\ntypescript                      4.8.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24972","RelatedDescription":"Open issue \"Compilation error after migrating from Angular 13 to 15\" (#24972)"},{"Id":"1656680194","IsPullRequest":true,"CreatedAt":"2023-04-06T18:42:15","Actor":"angular-robot","Number":"24963","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.11","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.9` -> `v2.2.11` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.11`](https://togithub.com/github/codeql-action/compare/v2.2.10...v2.2.11)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.10...v2.2.11)\n\n### [`v2.2.10`](https://togithub.com/github/codeql-action/compare/v2.2.9...v2.2.10)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.9...v2.2.10)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS44LjIiLCJ1cGRhdGVkSW5WZXIiOiIzNS44LjIifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24963","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.11\" (#24963)"},{"Id":"1653189408","IsPullRequest":true,"CreatedAt":"2023-04-06T18:41:58","Actor":"angular-robot","Number":"24949","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `6f91ab9` -> `2080cd3` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fanimations/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1bd47a3` -> `a8012d3` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `a35ef9f` -> `1c67057` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.2.5` -> `15.2.6`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.2.5/15.2.6) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b0d7291` -> `f5b969b` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcommon/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `743f6b2` -> `3205fad` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `9446882` -> `ceeb6cb` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `f412673` -> `845f192` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcore/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `4b014a5` -> `f694379` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fforms/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `eb2cb76` -> `c578464` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `1849b7f` -> `f8cf02d` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2flocalize/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `785e142` -> `f9f64e9` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.2.5` -> `15.2.6`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.2.5/15.2.6) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `684cb3d` -> `adba6cf` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `80af881` -> `68a6d97` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `45ba356` -> `1e583f7` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `3fb794a` -> `1cf5507` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `60fc0c1` -> `287f11a` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `3160ff0` -> `1f9279c` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2frouter/16.0.0-next.5/16.0.0-next.7) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `bbe41ef` -> `d5292a6` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`16.0.0-next.5` -> `16.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/16.0.0-next.5/16.0.0-next.7) |\n| angular/dev-infra | action | digest | `0189d65` -> `d28e5f7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v16.0.0-next.7`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1600-next7-2023-04-05)\n\n[Compare Source](https://togithub.com/angular/angular/compare/16.0.0-next.6...16.0.0-next.7)\n\n#### Breaking Changes\n\n##### core\n\n-   QueryList.filter now supports type guard functions, which will result in type narrowing. Previously if you used type guard functions, it resulted in no changes to the return type. Now the type would be narrowed, which might require updates to the application code that relied on the old behavior.\n-   The `ReflectiveInjector` and related symbols were removed. Please update the code to avoid references to the `ReflectiveInjector` symbol. Use `Injector.create` as a replacement to create an injector instead.\n\n##### platform-browser\n\n-   The deprecated `BrowserTransferStateModule` was removed, since it's no longer needed. The `TransferState` class can be injected without providing the module. The `BrowserTransferStateModule` was empty starting from v14 and you can just remove the reference to that module from your applications.\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b2327f4df1](https://togithub.com/angular/angular/commit/b2327f4df12ca91d7cdbc3dc5c0f5cb3ab88a30e) | feat | Allow typeguards on QueryList.filter ([#&#8203;48042](https://togithub.com/angular/angular/pull/48042)) |\n| [b35fa73968](https://togithub.com/angular/angular/commit/b35fa739687a357108edaa0a57dcd033ecfcb9f2) | feat | change the URL sanitization to only block javascript: URLs ([#&#8203;49659](https://togithub.com/angular/angular/pull/49659)) |\n| [061f3d1086](https://togithub.com/angular/angular/commit/061f3d1086421b921403f7d358c02f84927b699b) | feat | Drop public `factories` property for `IterableDiffers` : Breaking change ([#&#8203;49598](https://togithub.com/angular/angular/pull/49598)) |\n| [a5f1737d1c](https://togithub.com/angular/angular/commit/a5f1737d1c2435b1476c1277bdc9a6827377465f) | feat | expose onDestroy on ApplicationRef ([#&#8203;49677](https://togithub.com/angular/angular/pull/49677)) |\n| [aad05ebeb4](https://togithub.com/angular/angular/commit/aad05ebeb44afad29fd989019638590344ba61eb) | feat | support usage of non-experimental decorators with TypeScript 5.0 ([#&#8203;49492](https://togithub.com/angular/angular/pull/49492)) |\n| [df1dfc4c17](https://togithub.com/angular/angular/commit/df1dfc4c17abc6799f2e8f3f5f8604a7bf3d173a) | fix | make sure that lifecycle hooks are not tracked ([#&#8203;49701](https://togithub.com/angular/angular/pull/49701)) |\n| [a4e749ffca](https://togithub.com/angular/angular/commit/a4e749ffca5b1f726c365cecaf0f5c4f13eec8d9) | fix | When using setInput, mark view dirty in same was as `markForCheck` ([#&#8203;49711](https://togithub.com/angular/angular/pull/49711)) |\n| [3b863ddc1e](https://togithub.com/angular/angular/commit/3b863ddc1e67a2fa7627ad78e172c839781e81b6) | refactor | Remove `ReflectiveInjector` symbol ([#&#8203;48103](https://togithub.com/angular/angular/pull/48103)) |\n\n##### http\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [aff1512950](https://togithub.com/angular/angular/commit/aff15129501511569bbb4ff6dfcb16ad1c01890d) | feat | allow `HttpClient` to cache requests ([#&#8203;49509](https://togithub.com/angular/angular/pull/49509)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [761e02d912](https://togithub.com/angular/angular/commit/761e02d912e4f910f9e5e915c019dc1fef0d0839) | feat | add a public API function to enable non-destructive hydration ([#&#8203;49666](https://togithub.com/angular/angular/pull/49666)) |\n| [81e7d15ef6](https://togithub.com/angular/angular/commit/81e7d15ef65b70c9734ebfd2c865e70d743263dc) | feat | enable HTTP request caching when using `provideClientHydration` ([#&#8203;49699](https://togithub.com/angular/angular/pull/49699)) |\n| [9bd9a11f4e](https://togithub.com/angular/angular/commit/9bd9a11f4e21e5a7cc9da18f150f6dd520e7cd1e) | refactor | remove deprecated `BrowserTransferStateModule` symbol ([#&#8203;49718](https://togithub.com/angular/angular/pull/49718)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [7870fb07fe](https://togithub.com/angular/angular/commit/7870fb07fe6b25f5ebb22497bff3a03b7b5fc646) | feat | rename `provideServerSupport` to `provideServerRendering` ([#&#8203;49678](https://togithub.com/angular/angular/pull/49678)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b203e4c19d](https://togithub.com/angular/angular/commit/b203e4c19d4ccec09b9d1910dbc6f314070c1428) | fix | create correct URL relative to path with empty child ([#&#8203;49691](https://togithub.com/angular/angular/pull/49691)) |\n\n#### Special Thanks\n\nAlan Agius, Alex Rickabaugh, Andrew Kushnir, Andrew Scott, Charles Lyding, Dylan Hunn, Guillaume Weghsteen, Jessica Janiuk, JoostK, Matthieu Riegler, Pawel Kozlowski, Robin Richtsfeld, Sandra Limacher and vikram menon\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v16.0.0-next.6`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1600-next6-2023-04-03)\n\n[Compare Source](https://togithub.com/angular/angular/compare/16.0.0-next.5...16.0.0-next.6)\n\n#### Breaking Changes\n\n#####\n\n-   Deprecated `EventManager` method `addGlobalEventListener` has been removed as it is not used by Ivy.\n\n#####\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2703fd6260](https://togithub.com/angular/angular/commit/2703fd626040c5e65401ebd776404a3b9e284724) | refactor | remove deprecated `EventManager` method `addGlobalEventListener` ([#&#8203;49645](https://togithub.com/angular/angular/pull/49645)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d7d6514add](https://togithub.com/angular/angular/commit/d7d6514add2912a18c50f190aaa8afafa313bc9e) | feat | Add ability to configure `NgZone` in `bootstrapApplication` ([#&#8203;49557](https://togithub.com/angular/angular/pull/49557)) |\n| [e883198460](https://togithub.com/angular/angular/commit/e8831984601da631afc29f9fd72d36f57696f936) | feat | implement `takeUntilDestroyed` in rxjs-interop ([#&#8203;49154](https://togithub.com/angular/angular/pull/49154)) |\n| [8997bdc03b](https://togithub.com/angular/angular/commit/8997bdc03bd3ef0dc1ac68c913bf7d09340cee0d) | feat | prototype implementation of @&#8203;angular/core/rxjs-interop ([#&#8203;49154](https://togithub.com/angular/angular/pull/49154)) |\n\n##### forms\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [07a1aa3004](https://togithub.com/angular/angular/commit/07a1aa300404969155ed1eb3cd02f4a766e07963) | feat | Improve typings form (async)Validators ([#&#8203;48679](https://togithub.com/angular/angular/pull/48679)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f982a3f965](https://togithub.com/angular/angular/commit/f982a3f965995c4883780b0d48cb5d1411ebad0f) | feat | Opt-in for binding `Router` information to component inputs ([#&#8203;49633](https://togithub.com/angular/angular/pull/49633)) |\n| [fa3909e8b4](https://togithub.com/angular/angular/commit/fa3909e8b4b982423357a6e3d6c1d719ea6fa378) | fix | Ensure initial navigation clears current navigation when blocking ([#&#8203;49572](https://togithub.com/angular/angular/pull/49572)) |\n\n#### Special Thanks\n\nAlan Agius, Alex Rickabaugh, Andrew Kushnir, Andrew Scott, John Manners, Johnny Gérard, Kristiyan Kostadinov, Matthieu Riegler, Pawel Kozlowski, Sarthak Thakkar and Vinit Neogi\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.2.6`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1526-chiffon-cardigan-2023-04-05)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.2.5...15.2.6)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cc5f7d0890](https://togithub.com/angular/components/commit/cc5f7d089072dc8839f467d0bf9648f8d7ab34ad) | fix | **menu:** move focus when opening via click ([#&#8203;26874](https://togithub.com/angular/components/pull/26874)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fd58310a1f](https://togithub.com/angular/components/commit/fd58310a1fb0afd1fbda65663479b855dff2b560) | fix | **core:** don't use font shorthand property in typography-level ([#&#8203;26865](https://togithub.com/angular/components/pull/26865)) |\n\n#### Special Thanks\n\nJonathan Meier and Kristiyan Kostadinov\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS44LjIiLCJ1cGRhdGVkSW5WZXIiOiIzNS44LjIifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24949","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24949)"},{"Id":"1656347759","IsPullRequest":true,"CreatedAt":"2023-04-06T17:58:55","Actor":"clydin","Number":"24961","RawContent":null,"Title":"perf(@angular-devkit/build-angular): skip Angular linker in JIT mode with esbuild","State":"closed","Body":"When using the esbuild-based browser application builder in JIT mode, the Angular linker will now be skipped. The runtime Angular compiler present in JIT applications will automatically link any needed code.","Url":"https://github.com/angular/angular-cli/pull/24961","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): skip Angular linker in JIT mode with esbuild\" (#24961)"},{"Id":"1657760730","IsPullRequest":true,"CreatedAt":"2023-04-06T17:58:42","Actor":"clydin","Number":"24971","RawContent":null,"Title":"test: update module resolution E2E for latest framework changes","State":"closed","Body":"The `module-resolution-core-mapping` E2E test modifies the tsconfig path mapping settings to change the location of `@angular/common`.  However, with recent changes to the framework, the `@angular/platform-browser` package now also depends on `@angular/common/http` (a secondary export). This secondary export was not mapped in the test which resulted in the test failing since the build could not find the export.\r\nRelated FW change: https://github.com/angular/angular/commit/81e7d15ef65b70c9734ebfd2c865e70d743263dc","Url":"https://github.com/angular/angular-cli/pull/24971","RelatedDescription":"Closed or merged PR \"test: update module resolution E2E for latest framework changes\" (#24971)"},{"Id":"1657649854","IsPullRequest":false,"CreatedAt":"2023-04-06T15:34:46","Actor":"eneajaho","Number":"24970","RawContent":null,"Title":"esbuild-builder: Sort output table by size ","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nIn the webpack builder we have the stats sorted by size:\r\n\r\n![CleanShot 2023-04-06 at 17 32 19@2x](https://user-images.githubusercontent.com/25394362/230427519-a893f753-a62a-4ecc-a6ae-973f7649278e.png)\r\n\r\n\r\nWhile in the esbuild browser they are not sorted: \r\n\r\n![CleanShot 2023-04-06 at 17 33 35@2x](https://user-images.githubusercontent.com/25394362/230427690-9f1801b9-888b-4106-b596-0f5ffbda0250.png)\r\n\r\n\r\nHaving them sorted sometimes help pinpoint the biggest bundles easily. \r\n\r\n### Describe the solution you'd like\r\n\r\n_No response_\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24970","RelatedDescription":"Open issue \"esbuild-builder: Sort output table by size \" (#24970)"},{"Id":"1657577453","IsPullRequest":true,"CreatedAt":"2023-04-06T14:52:25","Actor":"clydin","Number":"24969","RawContent":null,"Title":"fix(@angular-devkit/build-angular): show lazy files in stat table correctly with esbuild","State":"open","Body":"When using the esbuild-based browser application builder, the output build file stat table was incorrectly displaying non-injected global styles and scripts as initial files. These output files will now be correctly shown as lazy files. Initial files will also now display their respective name if available.","Url":"https://github.com/angular/angular-cli/pull/24969","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): show lazy files in stat table correctly with esbuild\" (#24969)"},{"Id":"1657527076","IsPullRequest":true,"CreatedAt":"2023-04-06T14:25:37","Actor":"clydin","Number":"24968","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): directly watch package lock files in esbuild builder","State":"open","Body":"When using the esbuild-based browser application builder in watch mode, all `node_modules` directories will now be ignored by the file watcher. Instead all relevant package manifests and lock files for `npm`, `yarn, and `pnpm` will be watched to detect potential changes to the project's dependencies. This avoids creating a potentially large amount of filesystem watchers as the node modules directories can be very large.","Url":"https://github.com/angular/angular-cli/pull/24968","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): directly watch package lock files in esbuild builder\" (#24968)"},{"Id":"1656797745","IsPullRequest":false,"CreatedAt":"2023-04-06T09:01:46","Actor":"gmfun","Number":"24966","RawContent":null,"Title":"esbuild dev server watch mode is not watching projects added in tsconfig paths","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI trying `16.0.0-next.7` esbuild dev server. I am using nx workspace style tsconfig, where `compilerOptions.paths` point to source code of projects. Changing any code inside `projects/abc/src/index.ts` is not rebuilding.  Only when changes code inside src of the application is rebuilding the dev server.\r\n\r\n```json\r\n{\r\n   \"compilerOptions\": {\r\n   ...\r\n   \"paths\": {\r\n      \"@company/abc\": [\r\n\t\"projects/abc/src/index.ts\"\r\n       ],\r\n   }\r\n}\r\n```\r\n\r\n\n\n### Minimal Reproduction\n\n- create nx workspace and angular standlone application\r\n- create a library/project and reference it in the application\r\n- update angular to `16.0.0-next.7` and use esbuild builder\r\n- run `ng serve`\r\n- change code in `src`, dev server gets rebuild\r\n- change code in library/project, dev server does not get rebuild\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.2.4\r\nNode: 18.10.0\r\nPackage Manager: npm 9.6.2\r\nOS: linux x64\r\n\r\nAngular: 15.2.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.0-next.7\r\n@angular-devkit/build-angular   16.0.0-next.7\r\n@angular-devkit/core            16.0.0-next.7\r\n@angular-devkit/schematics      16.0.0-next.7\r\n@angular/cli                    16.0.0-next.7\r\n@schematics/angular             16.0.0-next.7\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24966","RelatedDescription":"Closed issue \"esbuild dev server watch mode is not watching projects added in tsconfig paths\" (#24966)"},{"Id":"1656819623","IsPullRequest":false,"CreatedAt":"2023-04-06T07:23:28","Actor":"jpike88","Number":"24967","RawContent":null,"Title":"esbuild serve not using configured outputPath, all assets missing","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.0.0-next-4 (this is a new feature)\r\n\r\n### Description\r\n\r\nEsbuild using `ng build` seems to work perfectly, assets, script, css etc all end up in the configured outputPath in my angular.json, ready to go.\r\n\r\nHowever using `ng serve`, I notice some strange behaviour:\r\n\r\n\r\n- it seems to build fine (see screenshot below)\r\n![Screenshot 2023-04-06 at 2 24 12 pm](https://user-images.githubusercontent.com/9585787/230304564-d43fecc7-0f61-44f8-8656-a0c6938cc5a4.png). though the `Sourcemap for \"/styles.css\" points to missing source files` line I have no idea how to resolve.\r\n- however, when I go to `http://127.0.0.1:4200/`, I see a blank page. It seems that generated files have been created and being served successfully, but any assets are not being served breaking the whole initialization phase of my application.\r\n![Screenshot 2023-04-06 at 2 13 50 pm](https://user-images.githubusercontent.com/9585787/230302204-55ff9db9-7b39-4591-8c02-6d1232a94bc7.png)\r\n- When I look in my outputPath folder (which for me is `cordova/www`, so a non-standard value), it's just empty. I can't find anywhere that the files are being hosted (e.g. searching for `chunk-Z53IBAJG.js` on my filesystem gives me nothing). I don't see a dist folder or something\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nng serve with `\"@angular/cli\": \"^16.0.0-next.6\"`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.0.0-next.7\r\nNode: 16.14.2\r\nPackage Manager: npm 9.6.3\r\nOS: darwin arm64\r\n\r\nAngular: 16.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1600.0-next.7\r\n@angular-devkit/build-angular      16.0.0-next.7\r\n@angular-devkit/core               16.0.0-next.7\r\n@angular-devkit/schematics         16.0.0-next.7\r\n@angular/cdk                       16.0.0-next.4\r\n@angular/flex-layout               15.0.0-beta.42\r\n@angular/material                  16.0.0-next.4\r\n@angular/material-moment-adapter   16.0.0-next.4\r\n@schematics/angular                16.0.0-next.7\r\nrxjs                               7.8.0\r\n    \r\n```\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24967","RelatedDescription":"Open issue \"esbuild serve not using configured outputPath, all assets missing\" (#24967)"},{"Id":"1656683172","IsPullRequest":true,"CreatedAt":"2023-04-06T05:19:55","Actor":"alan-agius4","Number":"24965","RawContent":null,"Title":"Update next branch to reflect new release-train \"v16.1.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the feature-freeze phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v16.0.0-next.7 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/24965","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v16.1.0-next.0\".\" (#24965)"},{"Id":"1656681250","IsPullRequest":true,"CreatedAt":"2023-04-06T05:17:56","Actor":"alan-agius4","Number":"24964","RawContent":null,"Title":"Bump version to \"v16.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24964","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.0.0-next.7\" with changelog.\" (#24964)"},{"Id":"1655929913","IsPullRequest":true,"CreatedAt":"2023-04-06T05:08:26","Actor":"alan-agius4","Number":"24960","RawContent":null,"Title":"fix(@schematics/angular): replace `provideServerSupport` with `provideServerRendering`","State":"closed","Body":"\r\nUpdate `provideServerSupport` with `provideServerRendering` as the former has been renamed.\r\n","Url":"https://github.com/angular/angular-cli/pull/24960","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): replace `provideServerSupport` with `provideServerRendering`\" (#24960)"},{"Id":"1656359504","IsPullRequest":true,"CreatedAt":"2023-04-05T22:04:46","Actor":"clydin","Number":"24962","RawContent":null,"Title":"perf(@angular-devkit/build-angular): cache Sass in memory with esbuild watch mode","State":"open","Body":"To improve rebuild performance when using Sass stylesheets with the esbuild-based browser application builder in watch mode, Sass stylesheets that are not affected by any file changes will now be cached and directly reused. This avoids performing potentially expensive Sass preprocessing on stylesheets that will not change within a rebuild.","Url":"https://github.com/angular/angular-cli/pull/24962","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): cache Sass in memory with esbuild watch mode\" (#24962)"},{"Id":"1655781672","IsPullRequest":true,"CreatedAt":"2023-04-05T16:07:45","Actor":"clydin","Number":"24959","RawContent":null,"Title":"feat(@angular-devkit/build-angular): implement progress option for esbuild builder","State":"closed","Body":"When using the esbuild-based browser application builder, the `progress` option which is enabled by default will now show an activity spinner when building/rebuilding.","Url":"https://github.com/angular/angular-cli/pull/24959","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): implement progress option for esbuild builder\" (#24959)"},{"Id":"1654751155","IsPullRequest":true,"CreatedAt":"2023-04-05T16:07:34","Actor":"clydin","Number":"24955","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support SSL options with esbuild development server","State":"closed","Body":"When using the esbuild-based browser application builder and its newly supported development server, the SSL related `dev-server` builder options can now be used. These include the existing `ssl`, `sslCert`, and `sslKey` options. Additionally, if no certificate and key are provided the `@vitejs/plugin-basic-ssl` plugin will be used to provide an auto-generated one. While not providing a certificate is possible, the browser will display a warning upon accessing the development server when using an auto-generated certificate.","Url":"https://github.com/angular/angular-cli/pull/24955","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support SSL options with esbuild development server\" (#24955)"},{"Id":"1655459347","IsPullRequest":true,"CreatedAt":"2023-04-05T12:45:46","Actor":"alan-agius4","Number":"24956","RawContent":null,"Title":"fix(@schematics/angular): add experimental message when using standalone application schematic","State":"closed","Body":"\r\nThis commit adds a warning when using `ng new --standalone` and `ng generate app --standalone`.\r\n","Url":"https://github.com/angular/angular-cli/pull/24956","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): add experimental message when using standalone application schematic\" (#24956)"},{"Id":"1655477684","IsPullRequest":true,"CreatedAt":"2023-04-05T11:53:10","Actor":"alan-agius4","Number":"24958","RawContent":null,"Title":"docs: release notes for the v15.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24958","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.2.5 release\" (#24958)"},{"Id":"1655475878","IsPullRequest":true,"CreatedAt":"2023-04-05T11:51:06","Actor":"alan-agius4","Number":"24957","RawContent":null,"Title":"Bump version to \"v15.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24957","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.5\" with changelog.\" (#24957)"},{"Id":"1653314570","IsPullRequest":true,"CreatedAt":"2023-04-05T10:26:33","Actor":"alan-agius4","Number":"24950","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"(cherry picked from commit 497da48086f84a8e7f260dcd817ffbe84ef7765e)\r\n","Url":"https://github.com/angular/angular-cli/pull/24950","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24950)"},{"Id":"1653977709","IsPullRequest":true,"CreatedAt":"2023-04-05T09:25:38","Actor":"clydin","Number":"24953","RawContent":null,"Title":"fix(@angular-devkit/build-angular): pass listening port in result for esbuild dev server","State":"closed","Body":"The deprecated protractor builder requires that the result object from a development server provide the port used to access the application if the port is not the default (4200). The newly introduced esbuild development server will now provide the port when available.","Url":"https://github.com/angular/angular-cli/pull/24953","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): pass listening port in result for esbuild dev server\" (#24953)"},{"Id":"1654520056","IsPullRequest":true,"CreatedAt":"2023-04-04T20:48:49","Actor":"burner-account","Number":"24954","RawContent":null,"Title":"feat@angular-devkit/build-angular: allow TS config files for tailwindcss ","State":"closed","Body":"as mostly the filepath is passed around and handed off to tailwindcss, this might work\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\nIssue Number: #24943 \r\n\r\n## What is the new behavior?\r\n\r\nThe behavior is unchanged, only now one more value \"tailwind.config.ts\" is deemed valid to pass through to tailwindcss.\r\n(see ./packages/angular_devkit/build_angular/src/builders/browser-esbuild/css-plugin.ts)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/24954","RelatedDescription":"Closed or merged PR \"feat@angular-devkit/build-angular: allow TS config files for tailwindcss \" (#24954)"},{"Id":"1653411859","IsPullRequest":true,"CreatedAt":"2023-04-04T14:26:22","Actor":"alan-agius4","Number":"24951","RawContent":null,"Title":"feat(@schematics/angular): add support to add service worker to standalone application","State":"closed","Body":"\r\n\r\nThis commit adds support to generate a service worker in a standalone application.\r\n","Url":"https://github.com/angular/angular-cli/pull/24951","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add support to add service worker to standalone application\" (#24951)"},{"Id":"1653592753","IsPullRequest":false,"CreatedAt":"2023-04-04T10:27:36","Actor":"v1nger125","Number":"24952","RawContent":null,"Title":"Multi repos architect library generation","State":"closed","Body":"### Is this a bug report or a feature request?\r\n\r\n- [ ] Bug Report\r\n- [X] Feature Request\r\n\r\n### Description [Feature Request only]\r\n\r\nHi angular,\r\n\r\nI was interested in options of creation libraries for angular projects and this what i have found\r\n\r\nit is possible to create library by\r\n`ng g lib <name>`\r\nwith in the angular workspace which was created before\r\n`ng new <workspace-name>`\r\nthis solution is monorepo solution\r\nin my architect i don't wanna store all projects within the singe repo and i need multirepo solution where single repo will be resposible for single package\r\ni can use \r\n`ng new <workspace-name> --create-application=false`\r\n`ng g lib <name>`\r\n\r\nit will allow me create empty workspace with library inside, but it still monorepo solution, it is quite hard manage it due to duplicated configs\r\n![image](https://user-images.githubusercontent.com/47892944/229758613-ee02a428-0f26-4fb6-b19b-11102e4e1264.png)\r\n\r\nis it possible to create library with in the root of workspace to keep architect as standalone library?\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\ni have tried to do that with `ng g lib <name> --project-root=./`\r\nbut it will cause conflicts right now\r\nor maybe it will be nice to have an option with in workspace generation\r\n`ng new <workspace-name> library=true`\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24952","RelatedDescription":"Closed issue \"Multi repos architect library generation\" (#24952)"},{"Id":"1652394749","IsPullRequest":false,"CreatedAt":"2023-04-04T09:59:53","Actor":"rychnal","Number":"24948","RawContent":null,"Title":" Error: Module parse failed: Unexpected character '@'","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n\r\nWhen i run ng build, i get this error \"Error: Module parse failed: Unexpected character '@' \"\r\n\r\nI used \"stylePreprocessorOptions\" \r\n\r\nIn Angular version  14. Everything worked fine.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n./src/assets/css/styles.scss?ngGlobalStyle:18:0 - Error: Module parse failed: Unexpected character '@' (18:0)\r\nFile was processed with these loaders:\r\n * ./node_modules/resolve-url-loader/index.js\r\n * ./node_modules/@angular-devkit/build-angular/node_modules/sass-loader/dist/cjs.js\r\nYou may need an additional loader to handle the result of these loaders.\r\n|     100% {background: #ffe6e6;}\r\n| }*/\r\n> @keyframes rotation {\r\n|   from {\r\n|     transform: rotate(0deg);\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.4\r\nNode: 14.20.0\r\nPackage Manager: npm 8.3.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.5\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.4\r\n@angular-devkit/build-angular   15.2.4\r\n@angular-devkit/core            15.2.4\r\n@angular-devkit/schematics      15.2.4\r\n@angular/cli                    15.2.4\r\n@angular/flex-layout            15.0.0-beta.42\r\n@schematics/angular             15.2.4\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n\"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-builders/custom-webpack:browser\",\r\n          \"options\": {\r\n            \"customWebpackConfig\": {\r\n              \"path\": \"./extra-webpack.config.js\"\r\n            },\r\n            \"allowedCommonJsDependencies\": [\r\n              \"hash.js\",\r\n              \"web3-bzz\",\r\n              \"web3-core\",\r\n              \"web3-eth\",\r\n              \"web3-eth-personal\",\r\n              \"web3-net\",\r\n              \"web3-shh\",\r\n              \"web3-utils\"\r\n            ],\r\n            \"outputPath\": \"dist/\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"aot\": true,\r\n            \"assets\": [\"src/assets\"],\r\n            \"styles\": [\"src/assets/css/styles.scss\"],\r\n            \"stylePreprocessorOptions\": {\r\n              \"includePaths\": [\"src/assets/css/\", \"src/app\"]\r\n            },\r\n            \"scripts\": []\r\n          },","Url":"https://github.com/angular/angular-cli/issues/24948","RelatedDescription":"Closed issue \" Error: Module parse failed: Unexpected character '@'\" (#24948)"},{"Id":"1652377112","IsPullRequest":false,"CreatedAt":"2023-04-03T16:31:30","Actor":"Techman47","Number":"24947","RawContent":null,"Title":"Update from 11 to 12","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n11\n\n### Description\n\nI have an app which run through docker Image. It was running fine in angular 11 using command npm run watch. I update the app to v12 using `ng update @angular/core@12 @angular/cli@12` Now when I run build and run using npm run watch its showing blank app. I changed nothing just update. everything run fine in terminal and no issue is shown while updating. But issues in console\r\nError in console:\r\nFailed to load module script: Expected a JavaScript module script but the server responded with a MIME type of \"text/html\". Strict MIME type checking is enforced for module scripts per HTML spec.\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nscript in package.json\r\n\"watch\": \"npx ng build --watch\",\n\n### Exception or Error\n\n```text\nFailed to load module script: Expected a JavaScript module script but the server responded with a MIME type of \"text/html\". Strict MIME type checking is enforced for module scripts per HTML spec.\r\n\r\nFailed to load module script: Expected a JavaScript module script but the server responded with a MIME type of \"text/html\". Strict MIME type checking is enforced for module scripts per HTML spec.\r\n\r\nFailed to load module script: Expected a JavaScript module script but the server responded with a MIME type of \"text/html\". Strict MIME type checking is enforced for module scripts per HTML spec.\n```\n\n\n### Your Environment\n\n```text\n/ \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.17.0 (Unsupported)\r\nPackage Manager: npm 6.14.18\r\nOS: linux x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            12.2.18\r\n@angular-devkit/schematics      12.2.18\r\n@angular/cli                    12.2.18\r\n@angular/fire                   6.1.5\r\n@schematics/angular             12.2.18\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\nwebpack                         4.46.0\n```\n\n\n### Anything else relevant?\n\nI am using docker so maybe It is related to docker or something","Url":"https://github.com/angular/angular-cli/issues/24947","RelatedDescription":"Closed issue \"Update from 11 to 12\" (#24947)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1659214759","IsPullRequest":true,"CreatedAt":"2023-04-07T21:19:16","Actor":"wagnermaciel","Number":"26897","RawContent":null,"Title":"refactor(material/core): generalize lazy ripple logic","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26897","RelatedDescription":"Open PR \"refactor(material/core): generalize lazy ripple logic\" (#26897)"},{"Id":"1658802880","IsPullRequest":false,"CreatedAt":"2023-04-07T13:23:46","Actor":"Ollitod","Number":"26896","RawContent":null,"Title":"bug(MatDialogTitle): Whitespace rendered when content of enclosing tag is wrapped","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWe basically wrap the content of every tag in our source code. After upgrading Material to v15, we noticed that the whitespaces which are rendered around the content of an element annotated with mat-dialog-title are also visible on the UI. This was not the case in Material v14. In both versions when inspecting the DOM, you can see that whitespaces are visible around the text. The following example illustrates the problem:\r\n\r\nThis ...\r\n```\r\n<h2 mat-dialog-title>\r\n  Text content\r\n</h2>\r\n```\r\n\r\n... will be rendered as \" Text content \" in the DOM.\r\n\r\nIn Material v14 these whitespaces were simply ignored in by the MatDialogTitle, but since v15 they are actually visible on the UI as described above.\r\n\r\nMaterial v14:\r\n<img width=\"318\" alt=\"image\" src=\"https://user-images.githubusercontent.com/50339686/230615884-d14ea354-3a5c-4b30-a024-d1ec26c4de97.png\">\r\n\r\nMaterial v15:\r\n<img width=\"212\" alt=\"image\" src=\"https://user-images.githubusercontent.com/50339686/230616041-836a79fa-8a62-49dd-b4f7-2585662334e9.png\">\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Wrap content of a tag annotated with mat-dialog-title\r\n2. Inspect the DOM in the browser (Chrome)\r\n3. See the rendered whitespace in front of the text\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe whitespaces are ignored by MatDialogTitle\r\n\r\n### Actual Behavior\r\n\r\nThe whitespaces are visible on the UI like \" Text content \"\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.4\r\n- CDK/Material: 15.2.4\r\n- Browser(s): Chrome (110.0.5481.177 (Offizieller Build) (x86_64))\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Ventura\r\n","Url":"https://github.com/angular/components/issues/26896","RelatedDescription":"Open issue \"bug(MatDialogTitle): Whitespace rendered when content of enclosing tag is wrapped\" (#26896)"},{"Id":"1658572991","IsPullRequest":false,"CreatedAt":"2023-04-07T09:11:02","Actor":"SergiyCh","Number":"26895","RawContent":null,"Title":"bug(MatSelect): List loses focus after source data change","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.2.5\n\n### Description\n\nIf mat-select was opened it can be navigated using keyboard. But if after open the source data was updated - the expanded options loses focus and MatSelect.focus() method also doesn't work. So user unable to navigate list using ketboard.\r\n\r\n[Demo project](https://stackblitz.com/edit/angular-xu7clc?file=src/app/select-custom-trigger-example.ts)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Prepare some data for list\r\n2. After list opened using .open() method - update source data\r\n3. List become unfocused\r\n\n\n### Expected Behavior\n\nList always focused to navigate with keyboard.\n\n### Actual Behavior\n\nList loses focus after update so user can't use keyboard to navigate it.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome\r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/26895","RelatedDescription":"Open issue \"bug(MatSelect): List loses focus after source data change\" (#26895)"},{"Id":"1658461499","IsPullRequest":true,"CreatedAt":"2023-04-07T07:10:32","Actor":"crisbeto","Number":"26894","RawContent":null,"Title":"build: update ng add standalone integration test","State":"open","Body":"The layout for a standalone project has changed since we added our integration test.","Url":"https://github.com/angular/components/pull/26894","RelatedDescription":"Open PR \"build: update ng add standalone integration test\" (#26894)"},{"Id":"1658108404","IsPullRequest":true,"CreatedAt":"2023-04-06T22:11:32","Actor":"zarend","Number":"26893","RawContent":null,"Title":"fix(material/core): remove tabindex from mat-option","State":"open","Body":"Remove the tabindex attribute from MatOption. MatOption will no longer set a tabindex. Tabindex is not needed since focus is managed on the parent by setting `aria-activedescendant`.\r\n\r\nTabindex=\"-1\" seems to be causing a problem in #26861 where VoiceOver with Firefox moves DOM focus from the combobox to the option when opening the listbox popup.","Url":"https://github.com/angular/components/pull/26893","RelatedDescription":"Open PR \"fix(material/core): remove tabindex from mat-option\" (#26893)"},{"Id":"1653584281","IsPullRequest":true,"CreatedAt":"2023-04-06T21:20:28","Actor":"crisbeto","Number":"26881","RawContent":null,"Title":"refactor(material/tabs): switch to tokens API","State":"closed","Body":"Switches the tabs to use the new tokens API.","Url":"https://github.com/angular/components/pull/26881","RelatedDescription":"Closed or merged PR \"refactor(material/tabs): switch to tokens API\" (#26881)"},{"Id":"1657919294","IsPullRequest":true,"CreatedAt":"2023-04-06T20:27:12","Actor":"amysorto","Number":"26892","RawContent":null,"Title":"Update next branch to reflect new release-train \"v16.1.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the feature-freeze phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v16.0.0-next.5 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/components/pull/26892","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v16.1.0-next.0\".\" (#26892)"},{"Id":"1657913132","IsPullRequest":true,"CreatedAt":"2023-04-06T19:10:36","Actor":"amysorto","Number":"26891","RawContent":null,"Title":"Bump version to \"v16.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26891","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.0.0-next.5\" with changelog.\" (#26891)"},{"Id":"1657303622","IsPullRequest":false,"CreatedAt":"2023-04-06T12:08:18","Actor":"mazhar-fis","Number":"26890","RawContent":null,"Title":"bug(table): Table data does not get updated when paginator pageIndex  is modified","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nOn changing paginator's input property 'pageIndex', table content does not update.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a table with paginator.\r\n2. Bind input property 'pageIndex' on paginator.\r\n3. increment the pageIndex property.\r\n4. Notice the table content. (Content remains on Page-1)\r\n5. Refresh the page.\r\n6. Click the next button of paginator.\r\n7. Notice the table content. (Content moves to Page-2)\r\n\r\nStackblitz: https://stackblitz.com/edit/angular-4h4jkr?file=src%2Fapp%2Ftable-overview-example.ts\r\n\r\n### Expected Behavior\r\n\r\nWhen we use table with paginator and change page by:\r\n\r\n1. clicking next/previous button:\r\n- paginator state updates\r\n- table content updates\r\n\r\n2. Updating pageIndex property\r\n- paginator state updates\r\n- **table content also should update**\r\n\r\n### Actual Behavior\r\n\r\nWhen we use table with paginator and change page by:\r\n\r\n1. clicking next/previous button:\r\n- paginator state updates\r\n- table content updates\r\n\r\n2. Updating pageIndex property\r\n- paginator state updates\r\n- **table content does not update**\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.6\r\n- CDK/Material: 15.2.6\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26890","RelatedDescription":"Open issue \"bug(table): Table data does not get updated when paginator pageIndex  is modified\" (#26890)"},{"Id":"1656859544","IsPullRequest":true,"CreatedAt":"2023-04-06T07:50:37","Actor":"JelleBruisten","Number":"26889","RawContent":null,"Title":"fix: improved missing dateAdapters error message to include matLuxon and matDateFns","State":"open","Body":"The error message for missing dateAdapter was missing `MatDateFnsModule` and `MatLuxonDateModule` this pr updates the error message to include these modules","Url":"https://github.com/angular/components/pull/26889","RelatedDescription":"Open PR \"fix: improved missing dateAdapters error message to include matLuxon and matDateFns\" (#26889)"},{"Id":"1656791974","IsPullRequest":true,"CreatedAt":"2023-04-06T07:25:04","Actor":"crisbeto","Number":"26888","RawContent":null,"Title":"build: update to latest version of Angular","State":"closed","Body":"Updates to the latest Angular version and fixes some tests that were failing, because our stubs of the `document` didn't implement all the necessary methods.","Url":"https://github.com/angular/components/pull/26888","RelatedDescription":"Closed or merged PR \"build: update to latest version of Angular\" (#26888)"},{"Id":"1648418173","IsPullRequest":false,"CreatedAt":"2023-04-06T06:01:12","Actor":"cusher","Number":"26869","RawContent":null,"Title":"bug(LuxonDateAdapter): Zone set on DateTime ignored","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.x\n\n### Description\n\nAs part of the [update to Luxon 3](https://github.com/angular/components/pull/25660/commits/638587116616e7a92fbc2fd7f1d92e816775aefb) for the LuxonDateAdapter, a change was made so that [`setZone(undefined)` is called whenever `useUtc` is not enabled on the options](https://github.com/angular/components/pull/25660/commits/638587116616e7a92fbc2fd7f1d92e816775aefb#diff-8892f3dc79c65ee2fa1fdea9daf0e9f954af378750a2fd4b69797a6c488dc027R198). This means that now there are now only two possibilities when using the adapter:\r\n1. Use UTC via the adapter options\r\n2. Use the default zone from Luxon\r\n\r\nPreviously, if `useUtc` was not set, the adapter would keep the timezone that had been set on the Luxon DateTime object.\r\n\r\nThis is either an undocumented breaking change (with no clean way to get the previous behavior) or a regression.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a Luxon DateTime with a zone different from the default zone, where it falls on a different day than it would when shifted into the default zone.\r\n2. Set the DateTime as the value for a form control using the LuxonDateAdapter.\n\n### Expected Behavior\n\nThe form control shows the date as set on the date time object.\n\n### Actual Behavior\n\nThe form control shows the date shifted into the default time zone.\n\n### Environment\n\n- Angular: 15.2.5\r\n- CDK/Material: 15.2.5\r\n- Browser(s): Firefox 111.0, Chrome 111.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26869","RelatedDescription":"Closed issue \"bug(LuxonDateAdapter): Zone set on DateTime ignored\" (#26869)"},{"Id":"1656362609","IsPullRequest":true,"CreatedAt":"2023-04-06T06:01:10","Actor":"cusher","Number":"26887","RawContent":null,"Title":"fix(material-luxon-adapter): zone on DateTime ignored","State":"closed","Body":"Fixes a bug where the timezone on the Luxon DateTime is thrown away during conversion to string, resulting in using the Luxon defaultZone regardless of how the particular DateTime is configured.\r\n\r\nFixes #26869","Url":"https://github.com/angular/components/pull/26887","RelatedDescription":"Closed or merged PR \"fix(material-luxon-adapter): zone on DateTime ignored\" (#26887)"},{"Id":"1656339059","IsPullRequest":true,"CreatedAt":"2023-04-05T21:51:10","Actor":"amysorto","Number":"26886","RawContent":null,"Title":"docs: release notes for the v15.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26886","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.2.6 release\" (#26886)"},{"Id":"1656334412","IsPullRequest":true,"CreatedAt":"2023-04-05T21:47:36","Actor":"amysorto","Number":"26885","RawContent":null,"Title":"Bump version to \"v15.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26885","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.6\" with changelog.\" (#26885)"},{"Id":"1655063633","IsPullRequest":true,"CreatedAt":"2023-04-05T10:46:50","Actor":"crisbeto","Number":"26884","RawContent":null,"Title":"refactor(material/button): resolve build failures","State":"closed","Body":"The icon button theme was using a slash for division instead of `math.div` which causes a deprecation warning to be logged which was breaking one of the tests.","Url":"https://github.com/angular/components/pull/26884","RelatedDescription":"Closed or merged PR \"refactor(material/button): resolve build failures\" (#26884)"},{"Id":"1651910603","IsPullRequest":true,"CreatedAt":"2023-04-04T16:56:36","Actor":"andrewseguin","Number":"26877","RawContent":null,"Title":"fix(material/button): fix icon button density","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26877","RelatedDescription":"Closed or merged PR \"fix(material/button): fix icon button density\" (#26877)"},{"Id":"1653838019","IsPullRequest":false,"CreatedAt":"2023-04-04T12:55:04","Actor":"jakubweber","Number":"26883","RawContent":null,"Title":"docs-bug(MatChips): Input placeholder is not showing if not focused","State":"open","Body":"### Documentation Feedback\r\n\r\nIn v14 the placeholder is always visible, since v15 is visible only when input is focused. Is it a purpose?\r\nAlso the add input is wrapped on the next line.\r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/chips/examples\r\n![Screenshot from 2023-04-04 14-50-22](https://user-images.githubusercontent.com/5078760/229798655-5055401b-1fd7-468e-a803-99dd757763fa.png)\r\n![Screenshot from 2023-04-04 14-50-12](https://user-images.githubusercontent.com/5078760/229798681-56470ce9-019f-496d-9e91-70c9b298c774.png)\r\n","Url":"https://github.com/angular/components/issues/26883","RelatedDescription":"Open issue \"docs-bug(MatChips): Input placeholder is not showing if not focused\" (#26883)"},{"Id":"1653822533","IsPullRequest":false,"CreatedAt":"2023-04-04T12:45:20","Actor":"d-0-t","Number":"26882","RawContent":null,"Title":"CDK Virtual Scroller (Experimental) Glitch after viewport width resize (or zoom in/out) and scrolling to the Bottom","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version (I don't know)\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_ (I don't know)\r\n\r\n### Description\r\n\r\nI switched from the basic version to experimental because we need to support various item sizes, and encountered this during implementation.\r\n\r\nWhen using the CDK virtual scroller with autosize, a visual glitch occurs after resizing the viewport width (or zooming in/out) and scrolling to the bottom of the content.\r\n\r\n- Attempting to scrolling back up, the translateY property becomes negative, and just keeps getting lower and lower, unable to recover with any scroll attempt. **It seems like any mouse wheel scroll attempt just registers as \"scroll down\" and keeps increasing the already out-of-bound value.**\r\n- With my workaround that prevents translateY from becoming negative, the viewport is still glitchy. Scrolling up (and up only) is causing the viewport content to disappear and reappear in a glitchy manner. This glitch only happens after scrolling to the BOTTOM of the content after resizing the viewport (or window if it snaps to it), and it persists until the user scrolls to the exact TOP of the viewport. After you scroll completely to the top (with the workaround implemented), the glitchy behavior stops, you can scroll up and down, even to the bottom, and it will work, until the viewport width is resized again, and then the glitch reappears.\r\n- The workaround-glitch does not start happening (nor the one without the workaround) until you actually scroll to the bottom. if you just scroll to the middle, etc, and then up, it behaves normally.\r\n\r\nUnfortunately the workaround is not enough and results in horrible UX, especially with large datasets.\r\n\r\n\r\n**Snippets:**\r\n\r\nTemplate:\r\n\r\n```html\r\n<cdk-virtual-scroll-viewport\r\n    #accordionVirtualScroller\r\n    autosize\r\n    [style.height]=\"isOutermostInstance ? '100%' : '500px'\"\r\n    (scroll)=\"checkViewportStuff($event)\"\r\n>\r\n    ... rendered a bunch of closed accordions etc ...\r\n</...>\r\n```\r\n\r\nComponent:\r\n\r\n\r\n```ts\r\ncheckViewportStuff($event: Event): void {\r\n    console.log('well, we scrolled');\r\n    const accordionWrapper = this.accordionVirtualScroller.elementRef.nativeElement;\r\n    const contentWrapper = accordionWrapper.querySelector('.cdk-virtual-scroll-content-wrapper') as HTMLElement;\r\n    if (!contentWrapper) return;\r\n\r\n    const transformStyle = contentWrapper.style.transform;\r\n\r\n    const translateYMatch = transformStyle.match(/translateY\\(([^)]+)\\)/);\r\n    if (translateYMatch && translateYMatch[1]) {\r\n        const translateY = parseFloat(translateYMatch[1]);\r\n        if (translateY < 0) {\r\n            console.log('OUT OF BOUNDS');\r\n            setTimeout(() => {\r\n                this.renderer.setStyle(contentWrapper, 'transform', 'translateY(0px)');\r\n                accordionWrapper.scrollTop = 0;\r\n            }, 100);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n\r\n1. Implement the CDK virtual scroller with autosize enabled.\r\n2. Resize the viewport width to change the width of the virtual scroller.\r\n3. Scroll to the bottom of the content.\r\n4. Attempt to scroll back up.\r\n\r\n### Expected Behavior\r\n\r\n- Smooth scrolling without any visual glitches\r\n- No out-of-bound translateY values.\r\n- Correct scroll direction.\r\n\r\n### Actual Behavior\r\n\r\n- When scrolling back up from the bottom after resizing the viewport width, the translateY CSS property becomes negative and keeps getting lower and lower, causing the viewport content to disappear.\r\n- The viewport does not differentiate between the scroll wheel direction, it just keeps pushing the translateY further into an invalid value.\r\n\r\n### Environment\r\n\r\n- **Angular:** 15.1.4, 15.2.5 (both versions tested, updated to see if it helps)\r\n- **CDK:** 15.1.4, 15.2.5 \r\n- **CDK-Experimental:** 15.1.4, 15.2.5 \r\n- **Browser(s):** Brave v1.49.132 (Chromium), Mozilla 111.0.1 (64-bit), likely all other browsers?\r\n- **Operating System:**: Windows 10 Enterprise 21H2\r\n","Url":"https://github.com/angular/components/issues/26882","RelatedDescription":"Open issue \"CDK Virtual Scroller (Experimental) Glitch after viewport width resize (or zoom in/out) and scrolling to the Bottom\" (#26882)"},{"Id":"1653102883","IsPullRequest":false,"CreatedAt":"2023-04-04T03:18:44","Actor":"zarend","Number":"26880","RawContent":null,"Title":"bug(slide-toggle): DOM order does not match visual order when slide toggle has `labelPosition=\"before\"`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDOM order does not match visual order when slide toggle has `labelPosition=\"before\"`\n\n### Reproduction\n\n  ```\r\n  \r\n          <mat-slide-toggle\r\n            labelPosition=\"before\"\r\n          >Activate</mat-slide-toggle>\r\n          \r\n         ```\n\n### Expected Behavior\n\nDOM order matches visual order\n\n### Actual Behavior\n\nlabel comes after the button in the DOM. I don't have the WCAG criteria handy, but this can cause a11y issues.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26880","RelatedDescription":"Open issue \"bug(slide-toggle): DOM order does not match visual order when slide toggle has `labelPosition=\"before\"`\" (#26880)"},{"Id":"1652380351","IsPullRequest":false,"CreatedAt":"2023-04-03T16:23:47","Actor":"GeorgeKnap","Number":"26879","RawContent":null,"Title":"bug(button): @include mat.button-density(-2) not working","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs stated in material docs about density, using\r\n```\r\n@use '@angular/material' as mat;\r\nbutton {\r\n  @include mat.button-density(-2);\r\n}\r\n```\r\nshould make my button more dense. But no matter what value you put in nothing happens. Please see stackblitz..\n\n### Reproduction\n\nhere stackblitz:\r\n[https://stackblitz.com/edit/angular-8x5erh?file=src/styles.scss](https://stackblitz.com/edit/angular-8x5erh?file=src/styles.scss)\n\n### Expected Behavior\n\ndensity works\n\n### Actual Behavior\n\nno effect\n\n### Environment\n\n- Angular: \r\n- CDK/Material: 15.2.5\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26879","RelatedDescription":"Closed issue \"bug(button): @include mat.button-density(-2) not working\" (#26879)"},{"Id":"1651680554","IsPullRequest":true,"CreatedAt":"2023-04-03T15:37:16","Actor":"crisbeto","Number":"26876","RawContent":null,"Title":"refactor(material/radio): switch to tokens API","State":"closed","Body":"Switches the radio button component to use the new tokens API. Also fixes a place in the list where CSS variable fallbacks weren't disabled.","Url":"https://github.com/angular/components/pull/26876","RelatedDescription":"Closed or merged PR \"refactor(material/radio): switch to tokens API\" (#26876)"},{"Id":"1650928105","IsPullRequest":true,"CreatedAt":"2023-04-03T14:09:38","Actor":"crisbeto","Number":"26874","RawContent":null,"Title":"fix(cdk/menu): move focus when opening via click","State":"closed","Body":"Fixes that the CDK menu wasn't moving focus to the first item when opening using a click. This caused other issues like not being able to use the escape key to close the menu.\r\n\r\nFixes #26858.","Url":"https://github.com/angular/components/pull/26874","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): move focus when opening via click\" (#26874)"},{"Id":"1651993043","IsPullRequest":false,"CreatedAt":"2023-04-03T12:40:30","Actor":"avrim-tr","Number":"26878","RawContent":null,"Title":"bug(COMPONENT): infiniteScroll and cdkVirtual overlap scrollWindow property","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12\n\n### Description\n\nOk,\r\n\r\nFirst of all , i was not sure how much it is related to bug, yes, starting angular 14 it stop, but, not from angular's way.\r\n\r\nThis is the issue:\r\n\r\nWe used to have in our code , something like this:\r\n`\r\n<cdk-virtual-scroll-viewport\r\n       infiniteScroll\r\n      [scrollWindow]=\"false\"\r\n...>\r\n`\r\n\r\nAs you can see, we use [scrollWindow] for the use [infiniteScroll](https://www.npmjs.com/package/ngx-infinite-scroll) only.\r\nAfter we upgraded to angular 14 scrollWindow also causes cdk-virtual-scroll-viewport[scrollWindow] directive to appear, which causes us to break our container (cdk-virtual-scroll-viewport)\r\n\r\nI say again, I do not want to call it a bug, but I was not sure what to do :)\r\n\r\nNow, is it possible please to change scrollWindow to something else please\n\n### Reproduction\n\nNo need to attach here nothing.\r\nJust install \r\nhttps://www.npmjs.com/package/ngx-infinite-scroll\r\nangular material cdk\r\nand use:\r\n\r\n<cdk-virtual-scroll-viewport\r\n       infiniteScroll\r\n      [scrollWindow]=\"false\"\r\n...>\n\n### Expected Behavior\n\nscrollWindow is an angular input of infinite scroll which should not causes cdk-virtual-scroll-viewport[scrollWindow] directive to be instansiated.\n\n### Actual Behavior\n\nscrollWindow is an angular input of infinite scroll which should which causes cdk-virtual-scroll-viewport[scrollWindow] directive to be instansiated.\n\n### Environment\n\n- Angular: ^14.3.0\r\n- CDK/Material: ^14.2.7\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): mac\r\n","Url":"https://github.com/angular/components/issues/26878","RelatedDescription":"Open issue \"bug(COMPONENT): infiniteScroll and cdkVirtual overlap scrollWindow property\" (#26878)"},{"Id":"1651668132","IsPullRequest":false,"CreatedAt":"2023-04-03T09:34:16","Actor":"Suresh918","Number":"26875","RawContent":null,"Title":"Menu- Unable to navigate using arrow keys","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen we have input text area in mat menu, the up and down arrow keys are not working inside text area to navigate.\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\nPlease check the code in the stackblitz. We have text area inside menu. After entering some in the text area in multiple lines, if you use arrow up and down keys the cursor has to be moved accordingly. But it is not happening.\r\n[](https://stackblitz.com/edit/angular-s8knmv?file=src/app/menu-icons-example.ts)\n\n### Expected Behavior\n\nThe arrow keys should work inside the text area for navigation.\n\n### Actual Behavior\n\nThe arrow keys are not working inside the text area for navigation.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26875","RelatedDescription":"Closed issue \"Menu- Unable to navigate using arrow keys\" (#26875)"},{"Id":"1650581366","IsPullRequest":true,"CreatedAt":"2023-04-01T18:00:44","Actor":"Captainnik53","Number":"26873","RawContent":null,"Title":"docs(material/form-field): custom MatFormFieldControl validation not …","State":"open","Body":"…working unless touched\r\n\r\nFixes a bug in the Angular Material Guide  where form-control remains valid unless touched. This is because MatFormFieldControl emits null value when form is invalid, but default value was not set to null, bypassing required Validators.\r\n\r\nFixes #23352","Url":"https://github.com/angular/components/pull/26873","RelatedDescription":"Open PR \"docs(material/form-field): custom MatFormFieldControl validation not …\" (#26873)"},{"Id":"1650432827","IsPullRequest":false,"CreatedAt":"2023-04-01T11:31:56","Actor":"sqljim","Number":"26872","RawContent":null,"Title":"docs-bug(AbstractControl): Adding a max to a datepicker input will fire valueChanges","State":"open","Body":"### Documentation Feedback\r\n\r\nCurrently the [documentation ](https://angular.io/api/forms/AbstractControl#valueChanges)only says that valueChanges will fire 'every time the value of the control changes' or 'each time you call enable() or disable()' however, I've also found valueChanges to fire if two inputs with datepickers rely upon one another for min and max.\r\n\r\nMy scenario is a period that has a start and end date. The start date cannot be after the end date, similarly the end date cannot be before the start. So basically my two form fields look like this:\r\n\r\n```\r\n   <input matInput  [max]=\"period.get('endDate')?.value\" formControlName=\"startDate\"\r\n    [matDatepicker]=\"startDatePicker\"/>\r\n```\r\nand\r\n```\r\n<input matInput [min]=\"period.get('startDate')?.value\" formControlName=\"endDate\"\r\n    [matDatepicker]=\"endDatePicker\"/>\r\n```\r\n\r\nWhat I've found is that the valueChanges of startDate will emit whenever the endDate is changed because of the startDate max.\r\n\r\nIt doesn't seem obvious in the documentation that setting the mib or max will cause the value of the control to change.\r\n\r\nHere's a [stackblitz](https://stackblitz.com/edit/reactive-form-validation-angular-15-swfz9e?file=src/app/app.component.html). \r\n\r\nSteps to reproduce:\r\n\r\n1: Select a start date and see that its value is logged to the console via the valueChanges subscription on startDate. \r\n2: Now make a change to the endDate field and note that the startDate valueChanges emits again.\r\n3: Remove the [max]=\"period.get('endDate')?.value\" from the startDate input and notice that the issue goes away.\r\n\r\n### Affected documentation page\r\n\r\nhttps://angular.io/api/forms/AbstractControl#valueChanges","Url":"https://github.com/angular/components/issues/26872","RelatedDescription":"Open issue \"docs-bug(AbstractControl): Adding a max to a datepicker input will fire valueChanges\" (#26872)"},{"Id":"1650224153","IsPullRequest":false,"CreatedAt":"2023-04-01T01:07:47","Actor":"wtygibbs","Number":"26871","RawContent":null,"Title":"bug(mat-form-field): Password visibility shows two buttons on first load","State":"open","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nOn first load, when typing into the password field an alternate visibility button is displayed. The issue goes away after first load.\r\n\r\nEdit, working accessible StackBlitz\r\nhttps://stackblitz.com/edit/angular-rrcgpa?file=src/app/form-field-prefix-suffix-example.ts\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Refresh the stack blitz\r\n2. Begin typing in the password field\r\n\r\n\r\n### Expected Behavior\r\n\r\nThere should only be one visibility button displayed at any given time.\r\n\r\nThe icon corresponds with a boolean. There should only be 2 states.\r\n\r\n### Actual Behavior\r\n\r\nA new button appears to the left of the one that is supposed to be there. It is fully functional with toggling password visibility.\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.0\r\n- CDK/Material: 15.2.5\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26871","RelatedDescription":"Open issue \"bug(mat-form-field): Password visibility shows two buttons on first load\" (#26871)"},{"Id":"1649300120","IsPullRequest":false,"CreatedAt":"2023-03-31T12:49:19","Actor":"JordanW9232","Number":"26870","RawContent":null,"Title":"feat(MatTabNav): Add selectedIndexChanged","State":"open","Body":"### Feature Description\n\nMatTabNav currently does not have a selectedIndexChanged EventEmitter like MatTabGroup has. There is only a `selectFocusedIndex` EventEmitter which is close, but not quite what I am looking for.\n\n### Use Case\n\nBe able to track when the active tab changes. There is currently no way to do this.","Url":"https://github.com/angular/components/issues/26870","RelatedDescription":"Open issue \"feat(MatTabNav): Add selectedIndexChanged\" (#26870)"},{"Id":"1648060085","IsPullRequest":false,"CreatedAt":"2023-03-30T19:59:04","Actor":"yvesguilherme","Number":"26868","RawContent":null,"Title":"Can't find stylesheet to import: @use '~@angular/material' as mat;","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nHello, good afternoon.\r\n\r\nI'm trying to perform the following commands following the Angular material documentation in version 15.2.0:\r\n```\r\n@import './assets/scss/index';\r\n\r\n@use 'node_modules/@angular/material' as mat;\r\n@include mat.core();\r\n\r\n$my-primary: mat.define-palette(mat.$indigo-palette, 500);\r\n$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-theme: mat.define-light-theme((color: (primary: $my-primary,\r\n        accent: $my-accent,\r\n      ),\r\n      density: 0,\r\n    ));\r\n@include mat.core-theme($my-theme);\r\n\r\n@include mat.button-theme($my-theme);\r\n```\r\n\r\nBut when compiling, the following error is being returned: \r\n\r\n![image](https://user-images.githubusercontent.com/22429592/228921580-9f51ae35-c77a-48af-8424-298312809ec1.png)\r\n\r\nI have tried several options, putting '~@angular'; 'node_modules/...'; '../node_modules/...'\r\nand...\r\n```\r\n \"stylePreprocessorOptions\": {  \"includePaths\": [ \"node_modules/\"  ] }; \r\n```\r\n\r\nUnfortunately nothing I did was successful... \r\nIs there a bug in the version I am using?\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Add to styles.scss @use '@angular/material' as mat;\r\n2. Add to styles.scss @include mat.core();\r\n3. Execute the command ng s\n\n### Expected Behavior\n\nThe import should be successful.\n\n### Actual Behavior\n\n./src/styles.scss - Error: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: @use rules must be written before any other rules.\r\n  ╷\r\n3 │ @use '@angular/material' as mat;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src/styles.scss 3:1  root stylesheet\r\n\r\n./src/styles.scss?ngGlobalStyle - Error: Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\r\nHookWebpackError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: @use rules must be written before any other rules.\r\n  ╷\r\n3 │ @use '../node_modules/@angular/material/_index.scss' as mat;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src/styles.scss 3:1  root stylesheet\r\n\n\n### Environment\n\n- Angular: ^15.2.0\r\n- CDK/Material: ^15.2.0\r\n- Browser(s): Brave, Chrome\r\n- Operating System: Pop!_OS 21.10\r\n","Url":"https://github.com/angular/components/issues/26868","RelatedDescription":"Closed issue \"Can't find stylesheet to import: @use '~@angular/material' as mat;\" (#26868)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-08T03:30:02.9358775Z","RunDurationInMilliseconds":2206}