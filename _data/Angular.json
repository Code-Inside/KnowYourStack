{"Data":{"Angular-Issues":{"Issues":[{"Id":"1969436736","IsPullRequest":true,"CreatedAt":"2023-10-31T00:39:11","Actor":"dylhunn","Number":"52464","RawContent":null,"Title":"Template Pipeline: commenting and naming cleanups","State":"open","Body":"No new features -- just a variety of small commenting and naming cleanups to improve code health. See individual commits for details.\r\n\r\nRebased on #52387, so ignore those commits.","Url":"https://github.com/angular/angular/pull/52464","RelatedDescription":"Open PR \"Template Pipeline: commenting and naming cleanups\" (#52464)"},{"Id":"1969134787","IsPullRequest":false,"CreatedAt":"2023-10-30T23:48:34","Actor":"web-dave","Number":"52454","RawContent":null,"Title":"NG0500 when template is dynamic","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nWhen using hydration and if the template is dynamic ngFor or @for i get a ng0500 error\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/web-dave/cli-test\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nERROR Error: NG0500: During hydration Angular expected <th> but found <tr>.\r\n\r\nAngular expected this DOM:\r\n\r\n<thead _ngcontent-ng-c3385063389=\"\">\r\n  <th>…</th>  <-- AT THIS LOCATION\r\n  …\r\n</thead>\r\n\r\nActual DOM is:\r\n\r\n<thead _ngcontent-ng-c3385063389=\"\">\r\n  <tr>…</tr>  <-- AT THIS LOCATION\r\n</thead>\r\n\r\nNote: attributes are only displayed to better represent the DOM but have no effect on hydration mismatches.\r\n\r\nTo fix this problem:\r\n  * check the \"_AppComponent\" component for hydration-related issues\r\n  * check to see if your template has valid HTML structure\r\n  * or skip hydration by adding the `ngSkipHydration` attribute to its host node in a template\r\n\r\n Find more at https://angular.io/errors/NG0500\r\n    at validateMatchingNode (core.mjs:17491:15)\r\n    at locateOrCreateElementNodeImpl (core.mjs:20926:18)\r\n    at ɵɵelementStart (core.mjs:20825:20)\r\n    at AppComponent_Template (app.component.html:1:8)\r\n    at executeTemplate (core.mjs:12187:13)\r\n    at renderView (core.mjs:13386:13)\r\n    at renderComponent (core.mjs:13333:5)\r\n    at renderChildComponents (core.mjs:13431:9)\r\n    at renderView (core.mjs:13411:13)\r\n    at ComponentFactory.create (core.mjs:14310:13)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0-rc.2\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.2\r\n@angular-devkit/build-angular   17.0.0-rc.2\r\n@angular-devkit/core            17.0.0-rc.2\r\n@angular-devkit/schematics      17.0.0-rc.2\r\n@angular/cli                    17.0.0-rc.2\r\n@angular/ssr                    17.0.0-rc.2\r\n@schematics/angular             17.0.0-rc.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/52454","RelatedDescription":"Closed issue \"NG0500 when template is dynamic\" (#52454)"},{"Id":"1969374205","IsPullRequest":false,"CreatedAt":"2023-10-30T23:20:58","Actor":"gp187","Number":"52463","RawContent":null,"Title":"Angular esbuild SCSS import error","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI am no longer able to import SCSS files from an NPM package directly in the styles.scss.\r\n\r\n![image](https://github.com/angular/angular/assets/3019963/6b507635-56a1-414b-89e9-bce6398fc986)\r\n\r\n\r\nSteps to reproduce:\r\nnpm i bootstrap\r\ngo to style SCSS\r\nImport any style from bootstrap \r\n\r\n\r\nOnly happens with `\"executor\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\nWorks fine `\"executor\": \"@angular-devkit/build-angular:browser\",`\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17\r\nNode: v19.3.0\r\nPackage manager: npm 9.2.0\r\nOS: Ubuntu\r\n\r\n\"@angular/animations\": \"~16.0.3\",\r\n    \"@angular/common\": \"~16.0.3\",\r\n    \"@angular/compiler\": \"~16.0.3\",\r\n    \"@angular/core\": \"~16.0.3\",\r\n    \"@angular/forms\": \"~16.0.3\",\r\n    \"@angular/localize\": \"^16.0.3\",\r\n    \"@angular/platform-browser\": \"~16.0.3\",\r\n    \"@angular/platform-browser-dynamic\": \"~16.0.3\",\r\n    \"@angular/platform-server\": \"^16.0.3\",\r\n    \"@angular/router\": \"~16.0.3\",\r\n    \"@angular/service-worker\": \"^16.0.3\",\r\n    \"@angular/youtube-player\": \"^16.0.1\",\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/52463","RelatedDescription":"Open issue \"Angular esbuild SCSS import error\" (#52463)"},{"Id":"1969362433","IsPullRequest":true,"CreatedAt":"2023-10-30T23:08:14","Actor":"jelbourn","Number":"52462","RawContent":null,"Title":"refactor(compiler): rename decorator extracted \"options\" to \"members\"","State":"open","Body":"The property name `members` makes it easier to use the same rendering code as other constructs.","Url":"https://github.com/angular/angular/pull/52462","RelatedDescription":"Open PR \"refactor(compiler): rename decorator extracted \"options\" to \"members\"\" (#52462)"},{"Id":"1969301431","IsPullRequest":false,"CreatedAt":"2023-10-30T22:08:05","Actor":"10kc-manoj","Number":"52461","RawContent":null,"Title":"ng extract-i18n bug when file has async pipe. Equiv-text extracting wrong characters.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nlocalize\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen a component's html file has an async pipe in it, all the items in the file marked for i18n extraction get incorrect equiv-text contents if they have a variable in them.\r\n\r\n**Example:**\r\nFor the HTML content\r\n```html\r\n<span i18n=\"@@someTransUnitKey\">{{ foodList?.length }} items exist</span>\r\n```\r\n**Expected `<source>` for the trans-unit in the xlf file is:**\r\n```html\r\n<source><x id=\"INTERPOLATION\" equiv-text=\"{{ foodList?.length }}\"/> items exist</source>\r\n```\r\n**But the `<source>` I get is:**\r\n```html\r\n<source><x id=\"INTERPOLATION\" equiv-text=\"i\"/> items exist</source>\r\n```\r\n\r\nThis makes it difficult to maintain code as adding an async pipe in a file throws a bunch of diffs in the xlf file. This is also problematic for our translators when the equiv-text blocks do not contain their expected context.\r\n\r\n**Observed Conditions that trigger this problem / Steps to reproduce:** (Check `test-bad.component.html` in the linked project)\r\n1) The html file should have an async pipe in it, like: \r\n```html\r\n<ng-container *ngIf=\"anyObservable | async\"> </ng-container>\r\n```\r\n2) The item tagged for extraction should contain a variable or nested HTML or both to trigger placeholders in the xlf file.\r\n3) The variable or nested HTML should be the first item in the tagged HTML element and should have no leading whitespace, for example: `<span i18n=\"@@test\"> {{test}} hello</span>` will extract properly, but: `<span i18n=\"@@test\">{{test}} hello</span>` will not have accurate equiv-text in its extraction.\r\n\r\n### Stackblitz link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-1zcqro?file=angular-hello%2Fsrc%2Flocale%2Fmessages.xlf\r\n_cd angular-hello_\r\n_npm i_\r\nTo generate xlf file: _ng extract-i18n angular-hello_\r\nTo run the app: _ng serve --open_\r\n\r\nPlease notice the xlf file linked and compare the `<source>` of trans-units with id `badComponentTitle` and `goodComponentTitle` in the linked stackblitz project. This is one of the more \"colorful\" examples that make our work inconvenient with the unexpected characters it has extracted. The only difference is that `test-bad-component` has an async pipe in its HTML file, while `test-good-component` does not.\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```","Url":"https://github.com/angular/angular/issues/52461","RelatedDescription":"Open issue \"ng extract-i18n bug when file has async pipe. Equiv-text extracting wrong characters.\" (#52461)"},{"Id":"1969294196","IsPullRequest":false,"CreatedAt":"2023-10-30T22:01:35","Actor":"naveedahmed1","Number":"52460","RawContent":null,"Title":"control-flow migration throws Cannot set properties of undefined error","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI recently tried control flow migration schematics for my project using command `ng generate @angular/core:control-flow` but its throwing error `Cannot set properties of undefined (setting 'hasLineBreaks')`\n\n### Please provide a link to a minimal reproduction of the bug\n\nFor this I can add you to a private repo\n\n### Please provide the exception or error you saw\n\n```true\n`Cannot set properties of undefined (setting 'hasLineBreaks')`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.1\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, google-maps, material, platform-browser\r\n... platform-browser-dynamic, platform-server, pwa, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.1\r\n@angular-devkit/build-angular   17.0.0-rc.1\r\n@angular-devkit/core            17.0.0-rc.1\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/fire                   16.0.0\r\n@schematics/angular             17.0.0-rc.1\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52460","RelatedDescription":"Open issue \"control-flow migration throws Cannot set properties of undefined error\" (#52460)"},{"Id":"1969273134","IsPullRequest":true,"CreatedAt":"2023-10-30T21:43:36","Actor":"atcastle","Number":"52459","RawContent":null,"Title":"fix(common): apply fixed_srcset_width value only to fixed srcsets","State":"open","Body":"This fixes a bug in NgOptimizedImage where the FIXED_SRCSET_WIDTH_LIMIT was being applied to both \"fixed\" and \"responsive\" srcsets. As the constant name indicates, this is only supposed to apply to fixed images. For responsive images, not generating the srcset in this case is an antipattern, as it prevents the automatic srcset from correctly suggesting a smaller version of the image.\r\n\r\nNew tests included to prevent regression. CC: @AndrewKushnir @kara ","Url":"https://github.com/angular/angular/pull/52459","RelatedDescription":"Open PR \"fix(common): apply fixed_srcset_width value only to fixed srcsets\" (#52459)"},{"Id":"1969246727","IsPullRequest":true,"CreatedAt":"2023-10-30T21:21:37","Actor":"AleksanderBodurri","Number":"52458","RawContent":null,"Title":"fix(core): ignore ENVIRONMENT_INTIIALIZER and INJECTOR_DEF_TYPES providers in getInjectorProviders","State":"open","Body":"These special providers are configured when `walkProviderTree` is called. Because of this, they do not maintain any equality between subsequent runs of `walkProviderTree`. This prevents us from being able to compare the provider objects for equality between runs.\r\n\r\nThis commit changes the behaviour of getInjectorProviders to ignore these providers. In the future we will consider another approach for differentiating these providers from legitimate ones provided by users rather than the framework.\r\n","Url":"https://github.com/angular/angular/pull/52458","RelatedDescription":"Open PR \"fix(core): ignore ENVIRONMENT_INTIIALIZER and INJECTOR_DEF_TYPES providers in getInjectorProviders\" (#52458)"},{"Id":"1969238535","IsPullRequest":true,"CreatedAt":"2023-10-30T21:15:22","Actor":"jessicajaniuk","Number":"52457","RawContent":null,"Title":"docs: update defer guide to use Deferrable View language","State":"open","Body":"This updates the defer guide to use the recommended language of Deferrable Views.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] Documentation content changes\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52457","RelatedDescription":"Open PR \"docs: update defer guide to use Deferrable View language\" (#52457)"},{"Id":"1969181591","IsPullRequest":true,"CreatedAt":"2023-10-30T20:43:12","Actor":"MarkTechson","Number":"52456","RawContent":null,"Title":"docs: update home page for live stream event","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nEverything is fine.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nAdds a video placeholder on the landing page.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52456","RelatedDescription":"Open PR \"docs: update home page for live stream event\" (#52456)"},{"Id":"1969137131","IsPullRequest":true,"CreatedAt":"2023-10-30T20:14:50","Actor":"atscott","Number":"52455","RawContent":null,"Title":"After render app ref tick","State":"open","Body":"fix(core): Ensure afterRender hooks called just once on ApplicationRef.tick\r\n\r\nWhen the ApplicationRef ticks, the current implementation will execute\r\nafterRender hooks for each root view. This change ensures the hooks are\r\nrun just once after all root views are refreshed.\r\n\r\nfixes https://github.com/angular/angular/issues/52429\r\n\r\nFirst two commits are in https://github.com/angular/angular/pull/52430","Url":"https://github.com/angular/angular/pull/52455","RelatedDescription":"Open PR \"After render app ref tick\" (#52455)"},{"Id":"1969078160","IsPullRequest":true,"CreatedAt":"2023-10-30T19:34:13","Actor":"JoostK","Number":"52453","RawContent":null,"Title":"fix(compiler-cli): only bind inputs that are part of microsyntax to a structural directive","State":"open","Body":"Prior to this change the template type-check generator would incorrectly apply inputs and attributes to a structural directive, where only the bindings as present in microsyntax are actually bound to the directive. This introduced a problem where usages of template variables could not be resolved, because the template variables are out-of-scope of the template element itself.\r\n\r\nCloses #49931","Url":"https://github.com/angular/angular/pull/52453","RelatedDescription":"Open PR \"fix(compiler-cli): only bind inputs that are part of microsyntax to a structural directive\" (#52453)"},{"Id":"1969031103","IsPullRequest":true,"CreatedAt":"2023-10-30T19:03:14","Actor":"JeanMeche","Number":"52452","RawContent":null,"Title":"build: add missing entries for the api extraction","State":"open","Body":"We were missing :\r\n\r\n* `@angular/common/http/testing`\r\n* `@angular/platform-browser/animations/async`\r\n\r\n","Url":"https://github.com/angular/angular/pull/52452","RelatedDescription":"Open PR \"build: add missing entries for the api extraction\" (#52452)"},{"Id":"1968918913","IsPullRequest":true,"CreatedAt":"2023-10-30T17:51:05","Actor":"josephperrott","Number":"52451","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"See associated pull request for more information.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52451","RelatedDescription":"Open PR \"build: lock file maintenance\" (#52451)"},{"Id":"1968524549","IsPullRequest":true,"CreatedAt":"2023-10-30T14:34:32","Actor":"AleksanderBodurri","Number":"52450","RawContent":null,"Title":"fix(core): mutation bug in `getDependenciesFromInjectable`","State":"open","Body":"Previously, we would modified `dep.flags` directly to convert injection flags to booleans. This caused a mutation bug where subsequent calls to `getDependenciesFromInjectable` would result in the flags object containing false for every injection flag.\r\n\r\nNow, we stop modifying `dep.flags` directly and instead assign the converted flags to a new object.","Url":"https://github.com/angular/angular/pull/52450","RelatedDescription":"Open PR \"fix(core): mutation bug in `getDependenciesFromInjectable`\" (#52450)"},{"Id":"1967882840","IsPullRequest":true,"CreatedAt":"2023-10-30T09:19:18","Actor":"crisbeto","Number":"52449","RawContent":null,"Title":"Account for comment nodes in control flow","State":"open","Body":"Includes a couple of fixes to account for comments inside `@switch` and `@defer` blocks.\r\n\r\n### fix(compiler): allow comments between switch cases\r\nFixes that the template parser was throwing an error if a comment is used directly inside an `@switch` block.\r\n\r\n### refactor(compiler): account for comments when resolving implicit deferred triggers\r\nAdds some logic to skip over comments when resolving implicit `@defer` block triggers. This currently isn't a problem since we don't capture comments by default, but it may come up if we start capturing comments.\r\n\r\n\r\nFixes #52421.","Url":"https://github.com/angular/angular/pull/52449","RelatedDescription":"Open PR \"Account for comment nodes in control flow\" (#52449)"},{"Id":"1967871033","IsPullRequest":true,"CreatedAt":"2023-10-30T09:13:02","Actor":"alan-agius4","Number":"52448","RawContent":null,"Title":"build: update node.js engines version to be more explicate about v20 support","State":"open","Body":"\r\n\r\nThis commit adds Node.js 20 as explicitly supported version to match the Angular CLI engines.\r\n\r\nSee: https://github.com/angular/angular-cli/pull/26173\r\n","Url":"https://github.com/angular/angular/pull/52448","RelatedDescription":"Open PR \"build: update node.js engines version to be more explicate about v20 support\" (#52448)"},{"Id":"1967828545","IsPullRequest":true,"CreatedAt":"2023-10-30T08:48:55","Actor":"crisbeto","Number":"52447","RawContent":null,"Title":"fix(compiler): compilation error when for loop block expression contains new line","State":"open","Body":"Fixes that the regex which captures the expression of a `@for` loop block wasn't accounting for line breaks.\r\n\r\nFixes #52446.","Url":"https://github.com/angular/angular/pull/52447","RelatedDescription":"Open PR \"fix(compiler): compilation error when for loop block expression contains new line\" (#52447)"},{"Id":"1967658088","IsPullRequest":false,"CreatedAt":"2023-10-30T07:11:24","Actor":"cexbrayat","Number":"52446","RawContent":null,"Title":"Control flow: `@for` and inline arrays with multiple lines","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIt is currently possible to use `ngFor` with inline arrays:\r\n\r\n```html\r\n<div *ngFor=\"let i of [\r\n  { id: 1 },\r\n  { id: 2 }\r\n]\">{{ i.id }}</div>\r\n```\r\n\r\nThe current migration properly works, but the generated code is not accepted by the compiler:\r\n\r\n```html\r\n@for (i of [\r\n  { id: 1 },\r\n  { id: 2 }\r\n]; track i) {\r\n  <div>{{ i.id }}</div>\r\n}\r\n```\r\n\r\nThe compiler fails with the error below\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNG5002: Parser Error: Missing expected ] at the end of the expression [[] in /Users/cedric/Code/temp/control-flow-errors/src/app/app.component.html@0:6 [plugin angular-compiler]\r\n\r\n    src/app/app.component.html:1:6:\r\n      1 │ @for (i of [\r\n        ╵       ~~~~~~\r\n\r\n  Error occurs in the template of component AppComponent.\r\n\r\n    src/app/app.component.ts:8:15:\r\n      8 │   templateUrl: './app.component.html',\r\n        ╵                ~~~~~~~~~~~~~~~~~~~~~~\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.2\r\nNode: 18.18.2\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.2\r\n@angular-devkit/build-angular   17.0.0-rc.2\r\n@angular-devkit/core            17.0.0-rc.2\r\n@angular-devkit/schematics      17.0.0-rc.2\r\n@angular/cli                    17.0.0-rc.2\r\n@schematics/angular             17.0.0-rc.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52446","RelatedDescription":"Open issue \"Control flow: `@for` and inline arrays with multiple lines\" (#52446)"},{"Id":"1967652933","IsPullRequest":true,"CreatedAt":"2023-10-30T07:07:48","Actor":"angular-robot","Number":"52445","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular/pull/52445","RelatedDescription":"Open PR \"build: lock file maintenance\" (#52445)"},{"Id":"1967642551","IsPullRequest":true,"CreatedAt":"2023-10-30T06:59:58","Actor":"cexbrayat","Number":"52444","RawContent":null,"Title":"fix(core): handle aliased index with no space in control flow migration","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe current regexp supposes that there is at least one space between the `=` and the aliased variable. \r\n\r\n\r\n## What is the new behavior?\r\nAs it is possible to write `let myIndex=index`, this commit updates the regexp to handle such a case.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52444","RelatedDescription":"Open PR \"fix(core): handle aliased index with no space in control flow migration\" (#52444)"},{"Id":"1967071943","IsPullRequest":false,"CreatedAt":"2023-10-29T17:19:06","Actor":"kukjevov","Number":"52443","RawContent":null,"Title":"Feature(language-service): new control flow syntax colouring","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nlanguage-service\n\n### Description\n\nIt would be awesome to have \"colouring\" of new control flow syntax like when you have regular code in typescript.\r\n\r\nRight now it looks like plain text, and it kinda melts together.\r\n\r\nGreat work anyway :)\n\n### Proposed solution\n\ncolouring of \"keywords\" (@if, @for, @switch, @defer)\r\ncolouring of \"variables\"\r\ncolouring of method invocations\r\n\r\nuse colouring depending of used theme in vscode :), just like in typescript.\n\n### Alternatives considered\n\nor any colouring that would at least make some visual comfort for developer.","Url":"https://github.com/angular/angular/issues/52443","RelatedDescription":"Closed issue \"Feature(language-service): new control flow syntax colouring\" (#52443)"},{"Id":"1966947142","IsPullRequest":true,"CreatedAt":"2023-10-29T11:17:39","Actor":"Mayureshd-18","Number":"52442","RawContent":null,"Title":"docs: Rename Twitter to X (formerly Twitter)","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52442","RelatedDescription":"Open PR \"docs: Rename Twitter to X (formerly Twitter)\" (#52442)"},{"Id":"1966938563","IsPullRequest":true,"CreatedAt":"2023-10-29T10:50:51","Actor":"JeanMeche","Number":"52441","RawContent":null,"Title":"refactor(animations): use existing helper methods.","State":"open","Body":"Saving a few bytes...\r\n\r\nThe changes are split over several commits in case we want to drop one. ","Url":"https://github.com/angular/angular/pull/52441","RelatedDescription":"Open PR \"refactor(animations): use existing helper methods.\" (#52441)"},{"Id":"1966936722","IsPullRequest":true,"CreatedAt":"2023-10-29T10:44:38","Actor":"JeanMeche","Number":"52440","RawContent":null,"Title":"refactor(platform-browser): remove the depency on `window` for the `AngularProfiler`","State":"open","Body":"`performance` and `console` are both available on NodeJS, we can replace `window` with `globalThis`.\r\n","Url":"https://github.com/angular/angular/pull/52440","RelatedDescription":"Open PR \"refactor(platform-browser): remove the depency on `window` for the `AngularProfiler`\" (#52440)"},{"Id":"1966789423","IsPullRequest":true,"CreatedAt":"2023-10-29T00:50:29","Actor":"JeanMeche","Number":"52439","RawContent":null,"Title":"refactor(platform-browser): remove non necessary factories","State":"open","Body":"Let's keep the code a simple as necessary","Url":"https://github.com/angular/angular/pull/52439","RelatedDescription":"Open PR \"refactor(platform-browser): remove non necessary factories\" (#52439)"},{"Id":"1966779244","IsPullRequest":true,"CreatedAt":"2023-10-29T00:11:07","Actor":"JeanMeche","Number":"52438","RawContent":null,"Title":"refactor(http):  for a few bytes less","State":"open","Body":"Small refactor to save a few bytes in the http package. \r\n\r\n","Url":"https://github.com/angular/angular/pull/52438","RelatedDescription":"Open PR \"refactor(http):  for a few bytes less\" (#52438)"},{"Id":"1966764000","IsPullRequest":true,"CreatedAt":"2023-10-28T22:55:55","Actor":"JoostK","Number":"52437","RawContent":null,"Title":"fix(compiler-cli): various fixes to input transform type emitting","State":"open","Body":"**fix(compiler-cli): properly emit literal types in input coercion function arguments**\r\n\r\nThis commit fixes an issue where using literal types in the arguments of an input coercion\r\nfunction could result in emitting invalid output, due to an assumption that TypeScript makes\r\nwhen emitting literal types. Specifically, it takes the literal's text from its containing\r\nsource file, but this breaks when the literal type node has been transplanted into a\r\ndifferent source file. This issue has surfaced in the type-check code generator and is\r\nalready being addressed there, so this commit moves the relevant `TypeEmitter` class\r\nfrom the `typecheck` module to the `translator` module, such that it can be reused for\r\nemitting types in the type translator.\r\n\r\nFixes #51672\r\n\r\n---\r\n\r\n**fix(compiler-cli): use originally used module specifier for transform functions**\r\n\r\nPrior to this change, the transform function would be referenced with a potentially\r\nrelative import into an external declaration file. Such imports are not portable\r\nand should not be created in this context. This commit addresses the issue by threading\r\nthough the originally used module specifier by means of the `Reference` type.\r\n\r\nFixes #52324","Url":"https://github.com/angular/angular/pull/52437","RelatedDescription":"Open PR \"fix(compiler-cli): various fixes to input transform type emitting\" (#52437)"},{"Id":"1966683213","IsPullRequest":true,"CreatedAt":"2023-10-28T17:47:08","Actor":"AleksanderBodurri","Number":"52436","RawContent":null,"Title":"fix(core): use TNode instead of LView for mapping injector providers","State":"open","Body":"Previously, LViews were used here to be consistent with other debug APIs. Using LViews for tracking injector providers does not work because providers only get configured once per TNode type.\r\n\r\nNow we use the TNode as the key to track element injector providers, allowing the injector for each item rendered in a list (`ngFor` or `@for`) to be targeted with debug APIs for inspecting providers","Url":"https://github.com/angular/angular/pull/52436","RelatedDescription":"Open PR \"fix(core): use TNode instead of LView for mapping injector providers\" (#52436)"},{"Id":"1966559462","IsPullRequest":true,"CreatedAt":"2023-10-28T11:30:34","Actor":"swami-sanapathi","Number":"52435","RawContent":null,"Title":"docs: remove documentation for `mutate` function","State":"open","Body":"This PR removes the documentation of `mutate` function, since it is removed from the signals public API.","Url":"https://github.com/angular/angular/pull/52435","RelatedDescription":"Open PR \"docs: remove documentation for `mutate` function\" (#52435)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1969466607","IsPullRequest":true,"CreatedAt":"2023-10-31T01:21:59","Actor":"clydin","Number":"26182","RawContent":null,"Title":"fix(@angular-devkit/build-angular): only watch used files with application builder","State":"open","Body":"When using the application builder in watch mode (including `ng serve`), the file watching will now only watch files used or relevant to the used files. Previously, all files within the project root were watched. This previous behavior could result in unneeded rebuilds when unrelated files were changed. An environment variable named `NG_BUILD_WATCH_ROOT` is also now available to enable the previous behavior in cases where it is still preferred as well as for testing and debugging purposes.","Url":"https://github.com/angular/angular-cli/pull/26182","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): only watch used files with application builder\" (#26182)"},{"Id":"1969348649","IsPullRequest":true,"CreatedAt":"2023-10-30T22:55:06","Actor":"clydin","Number":"26181","RawContent":null,"Title":"test: remove node-fetch package usage","State":"open","Body":"Native fetch support is now available in Node.js and the `node-fetch` package can now be removed.","Url":"https://github.com/angular/angular-cli/pull/26181","RelatedDescription":"Open PR \"test: remove node-fetch package usage\" (#26181)"},{"Id":"1969311879","IsPullRequest":true,"CreatedAt":"2023-10-30T22:17:28","Actor":"clydin","Number":"26180","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): lazily initialize JS transformer worker pool","State":"open","Body":"The Worker thread pool that is used by the JavaScript Transformer within the application builder is now only initialized if there is JavaScript that must be transformed. This removes any overhead associated with the worker pool if no work is required. This is particularly useful when using the development server with caching enabled and all the dependencies have already been prebundled.","Url":"https://github.com/angular/angular-cli/pull/26180","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): lazily initialize JS transformer worker pool\" (#26180)"},{"Id":"1969276781","IsPullRequest":false,"CreatedAt":"2023-10-30T21:46:48","Actor":"naveedahmed1","Number":"26179","RawContent":null,"Title":"build-angular:application breaks SSR for apps using .Net Core","State":"open","Body":"### Command\n\nbuild, run, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.x\n\n### Description\n\nI just tied `build-angular:application` in Mustakbil Angular app, the build time is pretty impressive. \r\n\r\nThe output of browser bundles reduced from 3.9mb to 3.22mb. main bundle reduced from 493kb to 34kb. \r\n\r\nBut we are facing issues with SSR. In .Net Core aApps we still depend on `aspnet-prerendering` plugin as described here (skip to Angular setup section in this article https://pieterjandeclippel.medium.com/server-side-rendering-in-asp-net-core-angular-2022-version-7aaed8157976 ) and current output of ssr doesnt seem to work with this setup.\r\n\r\nAny plans to make it compatable with .Net Core?\n\n### Minimal Reproduction\n\nSetup a project by following the steps provided in the guide https://pieterjandeclippel.medium.com/server-side-rendering-in-asp-net-core-angular-2022-version-7aaed8157976\r\n\r\nUpdate Angular app to use build-angular:application\r\n\r\nRun the app\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.1\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, google-maps, material, platform-browser\r\n... platform-browser-dynamic, platform-server, pwa, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.1\r\n@angular-devkit/build-angular   17.0.0-rc.1\r\n@angular-devkit/core            17.0.0-rc.1\r\n@angular-devkit/schematics      17.0.0-rc.1\r\n@angular/fire                   16.0.0\r\n@schematics/angular             17.0.0-rc.1\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26179","RelatedDescription":"Open issue \"build-angular:application breaks SSR for apps using .Net Core\" (#26179)"},{"Id":"1969082301","IsPullRequest":false,"CreatedAt":"2023-10-30T19:37:08","Actor":"web-dave","Number":"26178","RawContent":null,"Title":"CLI ng s cant be killed","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.x\r\n\r\n### Description\r\n\r\nWhen starting the dev process with ng server. This process can't be stoped.\r\nonly tasmkananger process kill works\r\n\r\n### Minimal Reproduction\r\n\r\nng s\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.0-rc.2\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.2\r\n@angular-devkit/build-angular   17.0.0-rc.2\r\n@angular-devkit/core            17.0.0-rc.2\r\n@angular-devkit/schematics      17.0.0-rc.2\r\n@angular/cli                    17.0.0-rc.2\r\n@angular/ssr                    17.0.0-rc.2\r\n@schematics/angular             17.0.0-rc.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nSometimes this works like charm.\r\n\r\nreproduce it:\r\nng s\r\nwait some time.\r\ncmd+c no luck","Url":"https://github.com/angular/angular-cli/issues/26178","RelatedDescription":"Open issue \"CLI ng s cant be killed\" (#26178)"},{"Id":"1968794394","IsPullRequest":true,"CreatedAt":"2023-10-30T16:50:47","Actor":"alan-agius4","Number":"26177","RawContent":null,"Title":"build: use single Node.js toolchain to run unit tests","State":"closed","Body":"E2E tests are used to run tests on multiple platforms and node.js versions.\r\n","Url":"https://github.com/angular/angular-cli/pull/26177","RelatedDescription":"Closed or merged PR \"build: use single Node.js toolchain to run unit tests\" (#26177)"},{"Id":"1966050246","IsPullRequest":true,"CreatedAt":"2023-10-30T16:48:08","Actor":"josephperrott","Number":"26163","RawContent":null,"Title":"ci: migrate snapshot publish job to GHA","State":"closed","Body":"Builds on #26119","Url":"https://github.com/angular/angular-cli/pull/26163","RelatedDescription":"Closed or merged PR \"ci: migrate snapshot publish job to GHA\" (#26163)"},{"Id":"1968476925","IsPullRequest":true,"CreatedAt":"2023-10-30T16:43:06","Actor":"alan-agius4","Number":"26176","RawContent":null,"Title":"fix(@angular-devkit/build-angular): log number of prerendered routes in console","State":"closed","Body":"\r\n\r\nThis changes add a log to the console to prints the total number of prerendered routes.\r\n","Url":"https://github.com/angular/angular-cli/pull/26176","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): log number of prerendered routes in console\" (#26176)"},{"Id":"1967665055","IsPullRequest":true,"CreatedAt":"2023-10-30T13:12:51","Actor":"angular-robot","Number":"26172","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26172","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#26172)"},{"Id":"1968007758","IsPullRequest":true,"CreatedAt":"2023-10-30T13:12:38","Actor":"alan-agius4","Number":"26174","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only rebundle server polyfills on explicit changes","State":"closed","Body":"\r\n\r\nThe newly introduced incremental bundler result caching is now used for server polyfills. This allows the bundling steps to be skipped in watch mode when no related files have been modified.\r\n","Url":"https://github.com/angular/angular-cli/pull/26174","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): only rebundle server polyfills on explicit changes\" (#26174)"},{"Id":"1968327247","IsPullRequest":true,"CreatedAt":"2023-10-30T13:12:06","Actor":"alan-agius4","Number":"26175","RawContent":null,"Title":"fix(@schematics/angular): add missing express `REQUEST` and `RESPONSE` tokens","State":"open","Body":"\r\n\r\nThis commit updates the nguniversal migration to add `REQUEST` and `RESPONSE` tokens.\r\n\r\nCloses #26110\r\n","Url":"https://github.com/angular/angular-cli/pull/26175","RelatedDescription":"Open PR \"fix(@schematics/angular): add missing express `REQUEST` and `RESPONSE` tokens\" (#26175)"},{"Id":"1967756708","IsPullRequest":true,"CreatedAt":"2023-10-30T11:28:00","Actor":"alan-agius4","Number":"26173","RawContent":null,"Title":"Node.js 20","State":"closed","Body":"Closes https://github.com/angular/angular-cli/issues/26114","Url":"https://github.com/angular/angular-cli/pull/26173","RelatedDescription":"Closed or merged PR \"Node.js 20\" (#26173)"},{"Id":"1967159458","IsPullRequest":true,"CreatedAt":"2023-10-30T10:27:46","Actor":"clydin","Number":"26171","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove unactionable error overlay suggestion from Vite-based dev server","State":"closed","Body":"The Vite-based development server that is used with the esbuild-based builders (`application`/`browser-esbuild`)\r\nwill show an error overlay when the application build encounters an error. This overlay previously provided a\r\nsuggestion to edit the `vite.config.js` configuration file to disable the error overlay. Since Vite usage is\r\nencapsulated within the Angular CLI, this suggestion is unactionable and may lead to user confusion due to\r\nno Vite configuration file being present within the project nor would creating one have an effect on the build\r\nprocess.","Url":"https://github.com/angular/angular-cli/pull/26171","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove unactionable error overlay suggestion from Vite-based dev server\" (#26171)"},{"Id":"1966345869","IsPullRequest":true,"CreatedAt":"2023-10-30T10:27:29","Actor":"clydin","Number":"26166","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): format post-bundle diagnostic messages for esbuild builders","State":"closed","Body":"Any errors or warnings generated from post-bundling steps of the build will now be formatted and displayed in a similar manner to the bundling errors and warnings. This should be most noticeable with bundle budgets.","Url":"https://github.com/angular/angular-cli/pull/26166","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): format post-bundle diagnostic messages for esbuild builders\" (#26166)"},{"Id":"1966294226","IsPullRequest":true,"CreatedAt":"2023-10-30T10:20:57","Actor":"clydin","Number":"26165","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only rebundle browser polyfills on explicit changes","State":"closed","Body":"The newly introduced incremental bundler result caching is now used for browser polyfills (`polyfills` option). This allows the bundling steps to be skipped in watch mode when no related files have been modified.","Url":"https://github.com/angular/angular-cli/pull/26165","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): only rebundle browser polyfills on explicit changes\" (#26165)"},{"Id":"1965692990","IsPullRequest":true,"CreatedAt":"2023-10-30T09:05:08","Actor":"alan-agius4","Number":"26160","RawContent":null,"Title":"perf(@angular-devkit/build-angular): patch `fetch` to load assets from memory","State":"closed","Body":"\r\nThis commit refactors the assets SSG asset loading from memory to use a patched version of `fetch` instead of spawning a separate server.\r\n","Url":"https://github.com/angular/angular-cli/pull/26160","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): patch `fetch` to load assets from memory\" (#26160)"},{"Id":"1964159710","IsPullRequest":false,"CreatedAt":"2023-10-30T08:01:57","Actor":"zip-fa","Number":"26153","RawContent":null,"Title":"esbuild-builders: webworker resolves invalid url","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nwebpack builder\n\n### Description\n\nHi.\r\nAngular compiles invalid path to worker, so worker can't start. This is the compiled code:\r\n\r\n```\r\nconst worker = new Worker(new URL(\"/@fs/C:/worker-UXGOV42A.js?type=module&worker_file\", self.location), {\r\n        type: \"module\"\r\n      });\r\n```\r\n\r\n![image](https://github.com/angular/angular-cli/assets/61551308/991f14db-f678-4849-8282-fd1ffb058bbb)\r\n\n\n### Minimal Reproduction\n\nhttps://github.com/zip-fa/ng17-web-worker-bug\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.2\r\nNode: 18.18.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.2\r\n@angular-devkit/build-angular   17.0.0-rc.2\r\n@angular-devkit/core            17.0.0-rc.2\r\n@angular-devkit/schematics      17.0.0-rc.2\r\n@angular/cli                    17.0.0-rc.2\r\n@schematics/angular             17.0.0-rc.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26153","RelatedDescription":"Closed issue \"esbuild-builders: webworker resolves invalid url\" (#26153)"},{"Id":"1965954365","IsPullRequest":true,"CreatedAt":"2023-10-30T08:01:56","Actor":"clydin","Number":"26162","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure correct web worker URL resolution in Vite dev server","State":"closed","Body":"When using the application builder with the development server, Web Worker URLs previously may have been incorrectly resolved. This caused Vite to consider the Web Worker URLs as outside the project root and generate a special file system URL. While this worked on Mac/Linux, it would fail on Windows. Since Vite does not appear to support resolve plugins for Web Workers, the virtual project root for the in-memory build has now been adjusted to allow the referencing file to have a path that resolves the Web Worker URL to a project relative location.","Url":"https://github.com/angular/angular-cli/pull/26162","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure correct web worker URL resolution in Vite dev server\" (#26162)"},{"Id":"1967155392","IsPullRequest":true,"CreatedAt":"2023-10-30T08:01:29","Actor":"clydin","Number":"26169","RawContent":null,"Title":"fix(@angular-devkit/build-angular): skip checking CommonJS module descendants","State":"closed","Body":"When CommonJS module checking is enabled in the esbuild-based builders (`application`/`browser-esbuild`), the checker will now skip all descendants of a CommonJS module. Previously it would only skip them if the module was not allowed. This change now provides the same module checking behavior as the Webpack-based check. This makes the build behavior more consistent when migrating to the new build system.","Url":"https://github.com/angular/angular-cli/pull/26169","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): skip checking CommonJS module descendants\" (#26169)"},{"Id":"1966738563","IsPullRequest":false,"CreatedAt":"2023-10-30T08:00:33","Actor":"robertIsaac","Number":"26167","RawContent":null,"Title":"projects with @nguniversal/builders fail to update to v17-rc without --force","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ntrying with `ng update @angular/cli --next` without `--force` will fail\r\neither mention that in https://update.angular.io/?v=16.0-17.0 that if you use `@nguniversal/builders` you need to use force\r\nor update the code to treat `@nguniversal/builders` as special case since it's will be replace in the migration steps\n\n### Minimal Reproduction\n\n1. generate new angular 16 project\r\n2. add @nguniversal/express-engine to it\r\n3. update to version 17\n\n### Exception or Error\n\n```text\nPackage \"@nguniversal/builders\" has an incompatible peer dependency to \"@angular-devkit/build-angular\" (requires \"^16.0.0 || ^16.1.0-next.0\", would install \"17.0.0-rc.2\").\r\n× Migration failed: Incompatible peer dependencies found.\r\nPeer dependency warnings when installing dependencies means that those dependencies might not work correctly together.\r\nYou can use the '--force' option to ignore incompatible peer dependencies and instead address these warnings later.\r\n  See \"C:\\Users\\rober\\AppData\\Local\\Temp\\ng-Lo6jIx\\angular-errors.log\" for further details.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.8\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.8\r\n@angular-devkit/build-angular   16.2.8\r\n@angular-devkit/core            16.2.8\r\n@angular-devkit/schematics      16.2.8\r\n@angular/cli                    16.2.8\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.8\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26167","RelatedDescription":"Closed issue \"projects with @nguniversal/builders fail to update to v17-rc without --force\" (#26167)"},{"Id":"1967157278","IsPullRequest":true,"CreatedAt":"2023-10-30T08:00:32","Actor":"clydin","Number":"26170","RawContent":null,"Title":"fix(@angular/cli): ignore peer mismatch when updating @nguniversal/builders","State":"closed","Body":"When updating to v17, the `@nguniversal/builders` is now ignored when checking peer dependency ranges. The `@nguniversal/builders` is no longer used and will be removed in a migration during the update process.\r\n\r\nCloses #26167","Url":"https://github.com/angular/angular-cli/pull/26170","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): ignore peer mismatch when updating @nguniversal/builders\" (#26170)"},{"Id":"1966269795","IsPullRequest":true,"CreatedAt":"2023-10-30T08:00:18","Actor":"dgp1130","Number":"26164","RawContent":null,"Title":"Fix empty `styles` string and update component schematic to use single `styles` or `styleUrl` property","State":"closed","Body":"An array is no longer required in v17 and we always generate a single style or style URL anyways, so we may as well drop the array.\r\n\r\nThis actually revealed a bug in the Webpack compilation where an empty `styles: ''` string would break PostCSS / the Webpack loader. Fixed this by just skipping resource inlining for an empty string, since there's no work to do anyways.","Url":"https://github.com/angular/angular-cli/pull/26164","RelatedDescription":"Closed or merged PR \"Fix empty `styles` string and update component schematic to use single `styles` or `styleUrl` property\" (#26164)"},{"Id":"1966806737","IsPullRequest":true,"CreatedAt":"2023-10-30T07:59:55","Actor":"angular-robot","Number":"26168","RawContent":null,"Title":"build: update dependency picomatch to v3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [picomatch](https://togithub.com/micromatch/picomatch) | dependencies | major | [`2.3.1` -> `3.0.1`](https://renovatebot.com/diffs/npm/picomatch/2.3.1/3.0.1) |\n| [picomatch](https://togithub.com/micromatch/picomatch) | devDependencies | major | [`2.3.1` -> `3.0.1`](https://renovatebot.com/diffs/npm/picomatch/2.3.1/3.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>micromatch/picomatch (picomatch)</summary>\n\n### [`v3.0.1`](https://togithub.com/micromatch/picomatch/compare/3.0.0...3.0.1)\n\n[Compare Source](https://togithub.com/micromatch/picomatch/compare/3.0.0...3.0.1)\n\n### [`v3.0.0`](https://togithub.com/micromatch/picomatch/compare/2.3.1...3.0.0)\n\n[Compare Source](https://togithub.com/micromatch/picomatch/compare/2.3.1...3.0.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26168","RelatedDescription":"Closed or merged PR \"build: update dependency picomatch to v3\" (#26168)"},{"Id":"1965201525","IsPullRequest":true,"CreatedAt":"2023-10-27T16:29:34","Actor":"angular-robot","Number":"26157","RawContent":null,"Title":"build: update github/codeql-action action to v2.22.5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.22.4` -> `v2.22.5` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.22.5`](https://togithub.com/github/codeql-action/compare/v2.22.4...v2.22.5)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.22.4...v2.22.5)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26157","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.22.5\" (#26157)"},{"Id":"1965434177","IsPullRequest":true,"CreatedAt":"2023-10-27T16:28:30","Actor":"alan-agius4","Number":"26159","RawContent":null,"Title":"fix(@angular-devkit/build-angular): add a maximum rendering timeout for SSR and SSG during development","State":"closed","Body":"There might be cases were currently, the render application promise does not resolve because the application never becomes stable in most cases this is due to errors, this causes the worker to never exit and the build to keep running until it's manually terminated.\r\n\r\nWith this change, we add a maximum rendering timeout of 30seconds for each page.\r\n","Url":"https://github.com/angular/angular-cli/pull/26159","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): add a maximum rendering timeout for SSR and SSG during development\" (#26159)"},{"Id":"1965117530","IsPullRequest":true,"CreatedAt":"2023-10-27T14:52:43","Actor":"alan-agius4","Number":"26156","RawContent":null,"Title":"perf(@angular-devkit/build-angular): move SSG asset server into workers","State":"closed","Body":"This commit moves the assets server into the rendering workers where each worker will spawn it's own server and handle it's own HTTP requests.\r\n\r\nThis improves performance when there are a large number of assets being requested concurrently due to multiple pages being rendered at the same time.\r\n","Url":"https://github.com/angular/angular-cli/pull/26156","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): move SSG asset server into workers\" (#26156)"},{"Id":"1965753806","IsPullRequest":false,"CreatedAt":"2023-10-27T14:39:50","Actor":"AshotAleqsanyan96","Number":"26161","RawContent":null,"Title":"Need an ability to generate style bundle separatelly under a directory","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncompiler\r\n\r\n### Description\r\n\r\nHello Friends,\r\n\r\nAfter some research and reading the official documentation, I couldn't find any helpful information and I think it is not possible right now, to build the style files as a separate bundle under the subdirectory via the configuration in angular.json.\r\n\r\nSo let's say we have 2-3 theme CSS files \r\n1. `default-theme.scss`\r\n2. `dark-theme.scss`\r\n3. `system-theme.scss`\r\n\r\nI want to build these scss files as a 3 separate bundles, fortunately it is possible via the angular.json configuration. I can add several lines and it will be ready:\r\n\r\n`angular.json`: `projects.{PROJECT_NAME}.architect.build.options.styles`\r\n```\r\n...............................\r\n\"styles\": [\r\n         {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/default-theme.scss\",\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/dark-theme.scss\",\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/system-theme.scss\",\r\n          },\r\n]\r\n...............................\r\n```\r\n\r\nand this will generate 3 separate files in the root directory in the `dist/{PROJECT_NAME}/`. \r\n1. `default-theme.css`\r\n2. `dark-theme.css`\r\n3. `system-theme.css`\r\n\r\nI also noticed that the Style Object has one more additional property: `bundleName` which will help us to change the generated bundle name(which is good). \r\n\r\nBut unfortunately, there is no way to generate these bundles under the sub-directory.\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\nSo it will be helpfull to modify the style object, by adding `output` property, that will get the path(`string`) as a value:\r\n\r\n`angular.json`: `projects.{PROJECT_NAME}.architect.build.options.styles`\r\n```\r\n...............................\r\n\"styles\": [\r\n         {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/default-theme.scss\",\r\n                \"output\": \"themes\",\r\n                \"bundleName\": \"default-theme\"\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/dark-theme.scss\",\r\n                \"output\": \"themes\",\r\n                \"bundleName\": \"dark-theme\"\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/system-theme.scss\",\r\n                \"output\": \"themes\",\r\n                \"bundleName\": \"system-theme\"\r\n          },\r\n]\r\n...............................\r\n```\r\n\r\nand by these configuration I expect to have, my generated bundles under the `themes` directory\r\n1. `themes/default-theme.css`\r\n2. `themes/dark-theme.css`\r\n3. `themes/system-theme.css`\r\n\r\n\r\n### Alternatives considered\r\n\r\nThe second option is to have some standard objects for example:\r\n\r\n`$styles`, `$assets` by which we can have access to the generated styles and assets to manipulate with them in angular.json\r\n\r\nFor example, by using the above example:\r\n\r\n`angular.json`: `projects.{PROJECT_NAME}.architect.build.options.styles`\r\n```\r\n...............................\r\n\"styles\": [\r\n         {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/default-theme.scss\",\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/dark-theme.scss\",\r\n          },\r\n          {\r\n                \"inject\": false,\r\n                \"input\": \"src/themes/system-theme.scss\",\r\n          },\r\n]\r\n...............................\r\n```\r\n\r\nWe can use assets object to change the directories:\r\n\r\n`angular.json`: `projects.{PROJECT_NAME}.architect.build.options.assets`\r\n```\r\n...............................\r\n\"assets\": [\r\n         {\r\n                \"input\": \"$styles['default-theme.css']\",\r\n                \"output\": \"themes/default-theme.css\",\r\n                \"glob\": \"compiled\"                 <------------ this is also can be modified a little bit to indicate that the file is not static\r\n          },\r\n         {\r\n                \"input\": \"$styles['dark-theme.css']\",\r\n                \"output\": \"themes/dark-theme.css\",\r\n                \"glob\": \"compiled\"                 <------------ this is also can be modified a little bit to indicate that the file is not static\r\n          },\r\n                   {\r\n                \"input\": \"$styles['system-theme.css']\",\r\n                \"output\": \"themes/system-theme.css\",\r\n                \"glob\": \"compiled\"                 <------------ this is also can be modified a little bit to indicate that the file is not static\r\n          },\r\n]\r\n...............................\r\n```\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/26161","RelatedDescription":"Open issue \"Need an ability to generate style bundle separatelly under a directory\" (#26161)"},{"Id":"1965395844","IsPullRequest":true,"CreatedAt":"2023-10-27T12:10:35","Actor":"alan-agius4","Number":"26158","RawContent":null,"Title":"fix(@angular-devkit/build-angular): redirect `global` and `self` to `globalThis`","State":"open","Body":"\r\nIn some cases libraries do not correctly check if these if `global` and self are defined.\r\n","Url":"https://github.com/angular/angular-cli/pull/26158","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): redirect `global` and `self` to `globalThis`\" (#26158)"},{"Id":"1964781091","IsPullRequest":true,"CreatedAt":"2023-10-27T05:13:28","Actor":"angular-robot","Number":"26155","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `ae264cc` -> `d283b7e` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `2a68e95` -> `e965ad3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1aa5847` -> `4b50b7e` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `3e981c7` -> `c92c895` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `6474647` -> `5d17897` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `4bcb5c6` -> `c76ca53` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `f7c2469` -> `4296dd0` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `55a0599` -> `a32ebc6` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `f291d0c` -> `108b1b8` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `8a236dc` -> `39a2865` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `c2fd6bc` -> `8355065` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `002ac70` -> `b6e1945` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `ae49315` -> `883e158` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `162ca6b` -> `dc6f6a5` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `8d68d57` -> `6bd96bf` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `7e6efa1` -> `df8b584` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `9f82fcb` -> `481280d` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `01a3394` -> `fefb5d8` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `94c3f21` -> `0cdac8a` |\n| angular/dev-infra | action | digest | `4ccf7ee` -> `99d93c4` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zMy4xIiwidXBkYXRlZEluVmVyIjoiMzcuMzYuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26155","RelatedDescription":"Open PR \"build: update angular\" (#26155)"},{"Id":"1964471844","IsPullRequest":false,"CreatedAt":"2023-10-27T03:10:29","Actor":"gbrunow","Number":"26154","RawContent":null,"Title":"[Regression] Angular apps not working in Safari v15 due to `ReferenceError`","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n@angular-devkit/build-angular@16.1.6\n\n### Description\n\nWe're experiencing the exact same issue reported on #24355 on Safari Version 15.5 (17613.2.7.1.8).\r\nThe issue started when updating from angular `16.1` to `16.2`, more specifically when we update `@angular-devkit/build-angular` from version `16.1.6` to `16.2.0`, and it reproduces on `16.2.8`. \n\n### Minimal Reproduction\n\nSee  #24355\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.8\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.8\r\n@angular/cdk                    16.2.10\r\n@angular/cli                    16.2.8\r\n@schematics/angular             16.2.8\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26154","RelatedDescription":"Closed issue \"[Regression] Angular apps not working in Safari v15 due to `ReferenceError`\" (#26154)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1969290752","IsPullRequest":false,"CreatedAt":"2023-10-30T21:58:24","Actor":"hisham","Number":"28023","RawContent":null,"Title":"docs-bug(Form field input): Best way to adjust input outlined border width on focus? ","State":"open","Body":"### Documentation Feedback\n\nThe documentation at https://material.angular.io/guide/customizing-component-styles and https://material.angular.io/guide/theming is not specific enough on how to best customize component style properties like the width of an outlined border when the input has focus. \r\n\r\nI came up with the below solution:\r\n```\r\nmat-form-field .mdc-text-field--focused .mdc-notched-outline > * {\r\n  border-width: 1.5px !important;\r\n}\r\n```\r\n\r\nThe react version of material web suggests a mixin type approach but I tried it in angular and it didn't work for me: https://github.com/material-components/material-components-web-react/issues/941\r\n\r\nAny guidance on this would be helpful. \n\n### Affected documentation page\n\nhttps://material.angular.io/guide/customizing-component-styles","Url":"https://github.com/angular/components/issues/28023","RelatedDescription":"Open issue \"docs-bug(Form field input): Best way to adjust input outlined border width on focus? \" (#28023)"},{"Id":"1969146305","IsPullRequest":true,"CreatedAt":"2023-10-30T21:33:56","Actor":"zarend","Number":"28022","RawContent":null,"Title":"fix(cdk/tree): cleanup tree-key-manager token","State":"closed","Body":"Change how tree-key-manager token is provided. Provide default TreeKeyManager at root. Remove provider from NgModule.","Url":"https://github.com/angular/components/pull/28022","RelatedDescription":"Closed or merged PR \"fix(cdk/tree): cleanup tree-key-manager token\" (#28022)"},{"Id":"1969015697","IsPullRequest":false,"CreatedAt":"2023-10-30T18:52:52","Actor":"slivniy","Number":"28021","RawContent":null,"Title":"bug(CDK/SCROLLING): <object> element in *cdkVirtualFor is glitching when using \"templateCacheSize: 0\"","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using No cache strategy (templateCacheSize: 0) for *cdkVirtualFor with <object> element (as image), elements of list  glitch while scrolling. Seems like cdkVirtualFor incorrectly init/reinit or reuse instances of listed elements.\r\n\r\nWhen using <img> tag instead of <object> no bug detected.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/uyv2wg?file=src%2Fexample%2Fcdk-virtual-scroll-template-cache-example.html\r\nSteps to reproduce:\r\n1. Create list of 100 elements, use <object type=\"image/jpeg\"> with image link data.\r\n2. Scroll\r\n\n\n### Expected Behavior\n\nSmooth scrolling, correct reusing/reinit of list elements, no content replacing.\n\n### Actual Behavior\n\nScrolling is not smooth (end sometimes end / start of list is unreachable), elements in list are replaced by content of sibling.\n\n### Environment\n\n- Angular: 17.0.0-rc.0 (and 15)\r\n- CDK/Material: 16.2.10\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/28021","RelatedDescription":"Open issue \"bug(CDK/SCROLLING): <object> element in *cdkVirtualFor is glitching when using \"templateCacheSize: 0\"\" (#28021)"},{"Id":"1966899254","IsPullRequest":true,"CreatedAt":"2023-10-30T16:25:53","Actor":"crisbeto","Number":"28018","RawContent":null,"Title":"refactor(material/core): remove unused compatibility code","State":"closed","Body":"Removes some density-related code that isn't being used anywhere anymore.","Url":"https://github.com/angular/components/pull/28018","RelatedDescription":"Closed or merged PR \"refactor(material/core): remove unused compatibility code\" (#28018)"},{"Id":"1966956558","IsPullRequest":true,"CreatedAt":"2023-10-29T11:47:09","Actor":"dolezaljan","Number":"28020","RawContent":null,"Title":"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected (#28019)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28020","RelatedDescription":"Open PR \"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected (#28019)\" (#28020)"},{"Id":"1966950844","IsPullRequest":false,"CreatedAt":"2023-10-29T11:29:12","Actor":"dolezaljan","Number":"28019","RawContent":null,"Title":"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected","State":"open","Body":"### Feature Description\n\nLet's have [MatDialog's member **_dialog**](https://github.com/angular/components/blob/17.0.x/src/material/dialog/dialog.ts#L85) which is the reference to the CDK Dialog _protected_ instead of _private_.\n\n### Use Case\n\nI'm using scoped material dialogs as described by @reppners [here](https://github.com/angular/components/issues/4612#issuecomment-340049922).\r\n\r\nWhen upgrading from ng13 to ng14 (and onwards) the MatDialog started to use CDK Dialog internally.\r\n\r\n[The reference to the CDK Dialog is private](https://github.com/angular/components/blob/main/src/material/dialog/dialog.ts#L85) preventing me from [overwriting](https://github.com/dolezaljan/ngx-cdk-dynamic-overlay-container/commit/8b060ac349ced6807fb4afe40417dc9d8d7bf768#diff-3a91ff9580ab7c0afb986280d3fea2ba4ce1903eb5799a47802ef038eaa1a8c9R22) it with my CustomCdkDialog within my custom CustomMatDialog.\r\n\r\nTo have the use case complete: all this bubbles down to CustomOverlayContainer updating [_containerElement](https://github.com/angular/components/blob/17.0.x/src/cdk/overlay/overlay-container.ts#L16), which makes the dialog scoped.\r\n\r\n(**Is there a reason for this member not to be protected?**)\r\n(The alternative is to keep [patching](https://github.com/dolezaljan/ngx-cdk-dynamic-overlay-container/blob/master/patch.modules.sh) this directly within downloaded npm module.)","Url":"https://github.com/angular/components/issues/28019","RelatedDescription":"Open issue \"feat(material/dialog:MatDialog): change cdk member _dialog from private to protected\" (#28019)"},{"Id":"1964186009","IsPullRequest":false,"CreatedAt":"2023-10-27T21:37:21","Actor":"clamli","Number":"28012","RawContent":null,"Title":"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events","State":"closed","Body":"### Feature Description\r\n\r\nHi!\r\n\r\nWe are working on a chip announcement feature which listens to chip addition and removal events and live announce a message when any of the event occurs. Is it possible for AM chips to\r\n\r\n1. Expose _chipGrid from MatChipInput\r\n2. Add a stream of chip removal events in MatChipSet like the existing [destroy event stream](https://github.com/angular/components/blob/main/src/material/chips/chip-set.ts#L83C16-L86)?\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28012","RelatedDescription":"Closed issue \"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events\" (#28012)"},{"Id":"1964318229","IsPullRequest":true,"CreatedAt":"2023-10-27T21:26:30","Actor":"clamli","Number":"28013","RawContent":null,"Title":"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events","State":"closed","Body":"The original FR is this (https://github.com/angular/components/issues/28012). There are two changes in this PR,\r\n1. Expose _chipGrid from MatChipInput\r\n2. Add a stream of chip removal events in MatChipSet","Url":"https://github.com/angular/components/pull/28013","RelatedDescription":"Closed or merged PR \"feat(material/chips): expose _chipGrid in MatChipInput and add a stream of chip removal events\" (#28013)"},{"Id":"1964940220","IsPullRequest":false,"CreatedAt":"2023-10-27T07:33:46","Actor":"ice-blaze","Number":"28017","RawContent":null,"Title":"bug(button-toggle): Accessibility breaks with matTooltip","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen adding the tooltip on a button toggle, the screen reader loses the group detection.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dh5vz6?file=src%2Fexample%2Fbutton-toggle-overview-example.ts,src%2Fexample%2Fbutton-toggle-overview-example.html\r\nSteps to reproduce:\r\n1.  Use NVDA screen reader\r\n2. Navigate with the browse mode\r\n\n\n### Expected Behavior\n\nThe second button toggle should be detected as a whole. Like the first button toggle.\n\n### Actual Behavior\n\nWhen navigating on the second button toggle, the screen reader doesn't mention all the other buttons at once. \n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n- Screen reader: NVDA","Url":"https://github.com/angular/components/issues/28017","RelatedDescription":"Open issue \"bug(button-toggle): Accessibility breaks with matTooltip\" (#28017)"},{"Id":"1964921654","IsPullRequest":false,"CreatedAt":"2023-10-27T07:21:32","Actor":"X-Celcius","Number":"28016","RawContent":null,"Title":"bug(material/theming): get-contrast-color-from-palette doesn't work with pre-defined hue names","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing `get-contrast-color-from-palette` is convenient and explicit as it gives you the contrast color without having to add `-contrast` to the hue value. It seems to me as the right thing to choose, even though the theming documentation currently doesn't mention this function. \r\n\r\nHowever the behavior can be confusing because hues such as `default`, `lighter` or `darker` are added only to the outer map, not the inner contrast map, when calling `define-palette`. Therefore you can only use it with hues that are defined in the contrast-palette from the beginning (such as 500). \r\n\r\nThere is an easy workaround but I also think that it should be fairly easy to add `default`, `lighter`, `darker` etc. to the inner contrast map in `mat.define-palette`. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-egs21k?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Use `mat.get-contrast-color-from-palette` with a pre-defined hue value such as `default` or `lighter`\r\n\n\n### Expected Behavior\n\nI expect `mat.get-contrast-color-from-palette($palette, default)` to return the same color as `mat-get-color-from-palette($palette, default-contrast)` after defining a palette using `mat.define-palette`. \n\n### Actual Behavior\n\n`mat.get-contrast-color-from-palette` looks for a hue called `default` in the inner contrast map but that doesn't get added to the inner contrast map when calling `mat.define-palette`. \n\n### Environment\n\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28016","RelatedDescription":"Open issue \"bug(material/theming): get-contrast-color-from-palette doesn't work with pre-defined hue names\" (#28016)"},{"Id":"1964424325","IsPullRequest":true,"CreatedAt":"2023-10-26T23:51:03","Actor":"mmalerba","Number":"28015","RawContent":null,"Title":"docs(material/theming): Fix broken theme guide formatting","State":"closed","Body":"Our docs site does not support the definition-list markdown, so I switched to headers instead. I also added a link from the generated schematic comment to the relevant documentation so users can learn more.","Url":"https://github.com/angular/components/pull/28015","RelatedDescription":"Closed or merged PR \"docs(material/theming): Fix broken theme guide formatting\" (#28015)"},{"Id":"1962211209","IsPullRequest":true,"CreatedAt":"2023-10-26T21:36:36","Actor":"mmalerba","Number":"28002","RawContent":null,"Title":"docs(material/theming): Update docs on accessing theme values","State":"closed","Body":"Demo: https://material2-docs-dev.web.app/guide/theming-your-components","Url":"https://github.com/angular/components/pull/28002","RelatedDescription":"Closed or merged PR \"docs(material/theming): Update docs on accessing theme values\" (#28002)"},{"Id":"1964341777","IsPullRequest":true,"CreatedAt":"2023-10-26T20:43:42","Actor":"mmalerba","Number":"28014","RawContent":null,"Title":"feat(material-experimental/theming): add M3 slide-toggle support","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28014","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 slide-toggle support\" (#28014)"},{"Id":"1964005987","IsPullRequest":false,"CreatedAt":"2023-10-26T17:13:02","Actor":"amybedinghaus","Number":"28011","RawContent":null,"Title":"mat-autocomplete causes invalid aria-owns value when opened and then closed","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nInvalid ARIA aria-owns attribute value with mat-autocomplete when the autocomplete has been opened and then closed again.  I see this previous bug:  https://github.com/angular/components/issues/12332 and the associated PR appears to have partially fixed it but not fully.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1.   open mat-autocomplete\r\n2.  choose option\r\n3.  close mat-autocomplete\r\n4. Run AXE and get \"Invalid ARIA attribute value: aria-owns='mat-autocomplete'\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nThere should be no accessibility issue\r\n\r\n### Actual Behavior\r\n\r\nThere is accessibility issue \"Invalid ARIA attribute value: aria-owns='mat-autocomplete'\"\r\n\r\n### Environment\r\n\r\n- Angular:  16.2.7\r\n- CDK/Material:  16.2.6\r\n- Browser(s):  Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):  Windows\r\n","Url":"https://github.com/angular/components/issues/28011","RelatedDescription":"Open issue \"mat-autocomplete causes invalid aria-owns value when opened and then closed\" (#28011)"},{"Id":"1963885072","IsPullRequest":false,"CreatedAt":"2023-10-26T16:01:29","Actor":"janousek","Number":"28010","RawContent":null,"Title":"feat(cdk/a11y): isFakeMousedownFromScreenReader - Layout thrashing (forced layout reflow)","State":"open","Body":"### Feature Description\r\n\r\nThe current implementation of the isFakeMousedownFromScreenReader function results in [Layout thrashing / forced layout reflow](https://web.dev/articles/avoid-large-complex-layouts-and-layout-thrashing). This method is called by InputModalityDetector on every mouse down event. This causes performance issues when using virtually any component that uses InputModalityDetector (CdkMenuTrigger for example).\r\n\r\nLayout thrashing is triggered by this line:\r\nhttps://github.com/angular/components/blob/01a95013c6ae0b7bce31f74ec8e1d4afe3749cda/src/cdk/a11y/fake-event-detection.ts#L18C35-L18C35\r\nWhich is caused by using the offsetX and offsetY properties.\r\n\r\nIt would be good to use another solution to detect fake mousedown events (without usage of these properties).\r\n\r\nBased on my tests, it should be possible to use the screenX and screenY properties, which are also 0. But unlike offsetX and offsetY, they don't cause layout thrashing\r\n","Url":"https://github.com/angular/components/issues/28010","RelatedDescription":"Open issue \"feat(cdk/a11y): isFakeMousedownFromScreenReader - Layout thrashing (forced layout reflow)\" (#28010)"},{"Id":"1963834163","IsPullRequest":true,"CreatedAt":"2023-10-26T15:55:59","Actor":"josephperrott","Number":"28009","RawContent":null,"Title":"ci: provide environment variables to the deploy step","State":"closed","Body":"Include the env variables for the step for deploying docs related to doc site access","Url":"https://github.com/angular/components/pull/28009","RelatedDescription":"Closed or merged PR \"ci: provide environment variables to the deploy step\" (#28009)"},{"Id":"1963679558","IsPullRequest":true,"CreatedAt":"2023-10-26T14:19:24","Actor":"crisbeto","Number":"28008","RawContent":null,"Title":"refactor(material/button): fix out of sync file","State":"closed","Body":"Adds a change that was missed in #28007.","Url":"https://github.com/angular/components/pull/28008","RelatedDescription":"Closed or merged PR \"refactor(material/button): fix out of sync file\" (#28008)"},{"Id":"1963632615","IsPullRequest":true,"CreatedAt":"2023-10-26T14:07:06","Actor":"crisbeto","Number":"28007","RawContent":null,"Title":"refactor(material/button): handle disabled states through tokens","State":"closed","Body":"**This is a cherry-pick of #28005** to the RC branch.\r\n\r\nMDC applies disabled styles through the `:disabled` selector which forced us to work around it by using a selector like `.mat-mdc-button[disabled][disabled]` and setting both the disabled and enabled button tokens. This is problematic, because it increases the specificity too much and it introduces space for mistakes, because we have to duplicate the tokens values.\r\n\r\nThese changes resolve the issue by re-applying the token slots to disabled buttons with the correct selector so that they can reuse the same tokens as the `button` nodes.","Url":"https://github.com/angular/components/pull/28007","RelatedDescription":"Closed or merged PR \"refactor(material/button): handle disabled states through tokens\" (#28007)"},{"Id":"1962891820","IsPullRequest":true,"CreatedAt":"2023-10-26T13:42:23","Actor":"crisbeto","Number":"28005","RawContent":null,"Title":"refactor(material/button): handle disabled states through tokens","State":"closed","Body":"MDC applies disabled styles through the `:disabled` selector which forced us to work around it by using a selector like `.mat-mdc-button[disabled][disabled]` and setting both the disabled and enabled button tokens. This is problematic, because it increases the specificity too much and it introduces space for mistakes, because we have to duplicate the tokens values.\r\n\r\nThese changes resolve the issue by re-applying the token slots to disabled buttons with the correct selector so that they can reuse the same tokens as the `button` nodes.","Url":"https://github.com/angular/components/pull/28005","RelatedDescription":"Closed or merged PR \"refactor(material/button): handle disabled states through tokens\" (#28005)"},{"Id":"1963521114","IsPullRequest":false,"CreatedAt":"2023-10-26T13:03:06","Actor":"michahell","Number":"28006","RawContent":null,"Title":"docs-bug(material design spec compliancy / compatibility): what process/system is used for this?","State":"open","Body":"### Documentation Feedback\n\nHi,\r\n\r\nA couple of questions came up in our team regarding Angular Material's compatibility and **parity** to material design specs.\r\n\r\nWe noticed that - for example - the `Expansion panel`, which was introduced in material design v1 (https://m1.material.io/components/expansion-panels.html#) still exists in the latest Angular Material version (https://material.angular.io/components/expansion/overview)\r\n\r\nHowever, the expansion panel as a design component is not present in the material design v2 spec (except for list component expand-and-collapse: https://m2.material.io/components/lists#types no deeplink, search `expand and collapse`)\r\n\r\nThe first question is this:\r\nWas it an explicit decision to keep supporting previous Material Design spec design components as opposed to dropping them and is this documented somewhere?\r\n\r\nThe second question is actually a followup question of the first: \r\nIf it was [an explicit decision], is there some sort of deprecation policy for components that are phased out in future Material Design spec versions?\n\n### Affected documentation page\n\nhttps://material.angular.io/components/expansion/overview","Url":"https://github.com/angular/components/issues/28006","RelatedDescription":"Open issue \"docs-bug(material design spec compliancy / compatibility): what process/system is used for this?\" (#28006)"},{"Id":"1962731764","IsPullRequest":false,"CreatedAt":"2023-10-26T05:27:58","Actor":"cirdeicostel","Number":"28004","RawContent":null,"Title":"bug(Table): Tab navigation on inputs inside table with sticky columns (focus out of sight)","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen having multiple inputs on one row, one input per cell, inside a table with one or more sticky columns the TAB key navigation is focusing at some point on an input that is hidden under the sticky columns, making the focus out of sight, but still inside the table.\r\n\r\nThe current behavior it's not compliant with the latest accessibility guidelines (WCAG) that states that an element that is focused needs to be in sight. (ref link: https://www.w3.org/WAI/WCAG22/Understanding/focus-not-obscured-minimum)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nhttps://stackblitz.com/edit/r22tvc?file=src%2Fexample%2Ftable-sticky-complex-flex-example.html\r\n\r\nTable state:\r\n - have horizontal scroll (requires a higher number of columns)\r\n - one or more columns sticky\r\n - on at least one row have an input on each cell\r\n \r\nSteps to reproduce:\r\n1. Scroll the table in order to hide some columns under the sticky columns\r\n2. Focus first inside the first cell of the row with the inputs\r\n3. Press TAB key in order to navigate through the inputs\r\n4. The focus at some point is on the input that is hidden under the sticky columns\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe focused element should be in sight, visible, not hidden under the sticky columns.\r\n\r\n### Actual Behavior\r\n\r\nThe focus is hidden under the sticky columns, out of sight.\r\n\r\nDEMO:\r\n![table_TAB_focus](https://github.com/angular/components/assets/26005241/58a91a07-5b04-41c3-a54c-f1ccda6b9b8c)\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome (118.0.5993.89) / Firefix (119.0)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows x64\r\n","Url":"https://github.com/angular/components/issues/28004","RelatedDescription":"Open issue \"bug(Table): Tab navigation on inputs inside table with sticky columns (focus out of sight)\" (#28004)"},{"Id":"1962601117","IsPullRequest":true,"CreatedAt":"2023-10-26T02:46:32","Actor":"cusher","Number":"28003","RawContent":null,"Title":"fix(material/autocomplete): update selection on form control value changes","State":"open","Body":"Fixes a bug in Autocomplete where the highlighted selection would not update when the underlying form control had its value updated or was reset.\r\n\r\nThis goes beyond the changes in https://github.com/angular/components/pull/27653 which does clear the select on reset, but does not update the selection when the control value is modified.\r\n\r\nFixes #27861, #27652","Url":"https://github.com/angular/components/pull/28003","RelatedDescription":"Open PR \"fix(material/autocomplete): update selection on form control value changes\" (#28003)"},{"Id":"1962076903","IsPullRequest":false,"CreatedAt":"2023-10-25T19:23:04","Actor":"Matthew-The-Developer","Number":"28001","RawContent":null,"Title":"bug(mat-menu): panelClass is being overridden by the default styling","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen applying a panelClass to the mat-menu component to alter the max-width of the menu, to accommodate menu items with extra long text, the panelClass is applied but then overridden by mat-menu's default styling\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-nxy1yz?file=src%2Fapp%2Fexample-component.html,src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Open the menu by clicking the 'Menu' button\r\n2. See that the menu item's text is wrapped instead of pushing the menu's width wider\r\n3. With the menu open, open the element inspect in the DevTools and select the menu's panel from the DOM\r\n4. See that the custom-panel-class is being applied to the menu but is being overridden be the component's defaults\r\n\n\n### Expected Behavior\n\nThe expected behavior would be that the menu's width would be wide enough to display the menu item's text without wrapping it\n\n### Actual Behavior\n\nThe current behavior is that the menu item's text is wrapped with in the menu's default max-width\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows (win32 x64)\r\n","Url":"https://github.com/angular/components/issues/28001","RelatedDescription":"Open issue \"bug(mat-menu): panelClass is being overridden by the default styling\" (#28001)"},{"Id":"1962034482","IsPullRequest":false,"CreatedAt":"2023-10-25T18:55:24","Actor":"thatcort","Number":"28000","RawContent":null,"Title":"docs-bug(ALL): Add Styling Instructions","State":"open","Body":"### Documentation Feedback\n\nPlease add instructions for how to theme and style the components. As a start, please describe the CSS properties that apply to each component, what they do, and their default values. Please describe how styles are inherited from theming (or not) and how to best customize them.\n\n### Affected documentation page\n\nALL","Url":"https://github.com/angular/components/issues/28000","RelatedDescription":"Open issue \"docs-bug(ALL): Add Styling Instructions\" (#28000)"},{"Id":"1961826030","IsPullRequest":true,"CreatedAt":"2023-10-25T16:41:26","Actor":"wagnermaciel","Number":"27999","RawContent":null,"Title":"refactor(material/button): switch typography to tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27999","RelatedDescription":"Open PR \"refactor(material/button): switch typography to tokens\" (#27999)"},{"Id":"1960804848","IsPullRequest":true,"CreatedAt":"2023-10-25T15:47:15","Actor":"crisbeto","Number":"27994","RawContent":null,"Title":"refactor(material/button): clean up fab tokens","State":"closed","Body":"Reworks the tokens setup for the FAB by:\r\n* Introducing a custom tokens map. It was necessary both for these changes and will come in handy later for the ripples.\r\n* Using tokens specifically for the disabled state instead of passing in the non-disabled ones. This aligns the FAB with the rest of the library and allows us to reduce the specificity.\r\n* Introducing a tokens specifically for the icon/text color. Currently we have an ad-hoc variable declared directly in the component styles.\r\n* Using our own mixins for the elevation instead of MDC's. Our mixin calls into MDC eventually, but it has some safeguards as well.\r\n* Generating the tokens that we pass into MDC's theme using our APIs, instead of creating the map directly.","Url":"https://github.com/angular/components/pull/27994","RelatedDescription":"Closed or merged PR \"refactor(material/button): clean up fab tokens\" (#27994)"},{"Id":"1961034047","IsPullRequest":true,"CreatedAt":"2023-10-25T10:14:43","Actor":"crisbeto","Number":"27998","RawContent":null,"Title":"docs: release notes for the v16.2.10 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27998","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.10 release\" (#27998)"},{"Id":"1961030893","IsPullRequest":true,"CreatedAt":"2023-10-25T10:10:43","Actor":"crisbeto","Number":"27997","RawContent":null,"Title":"Bump version to \"v16.2.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27997","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.10\" with changelog.\" (#27997)"},{"Id":"1960993281","IsPullRequest":true,"CreatedAt":"2023-10-25T09:51:08","Actor":"crisbeto","Number":"27996","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27996","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.1 release\" (#27996)"},{"Id":"1960987995","IsPullRequest":true,"CreatedAt":"2023-10-25T09:48:54","Actor":"crisbeto","Number":"27995","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27995","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.1\" with changelog.\" (#27995)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-31T03:30:02.69109Z","RunDurationInMilliseconds":1732}