{"Data":{"Angular-Issues":{"Issues":[{"Id":"2926967842","IsPullRequest":true,"CreatedAt":"2025-03-18T03:19:43","Actor":"AleksanderBodurri","Number":"60430","RawContent":null,"Title":"fix(devtools): catch firefox non-top level frame error case when using utilities APIs","State":"open","Body":"Previously the `frameUrl` option in `chrome.devtools.inspectedWindow.eval` would throw errors when used in Firefox, preventing inspect source functionality for firefox users even if they don't need to target a particular frame on the page (they are on the top level frame with Angular DevTools).\r\n\r\nNow this behaviour is as follows:\r\n\r\nFirefox user that has the top level frame selected -> DevTools inspect functionality works as expected.\r\n\r\nFirefox user that has a non-top level frame selected -> DevTools now renders a snackbar message informing the user of the limitation.","Url":"https://github.com/angular/angular/pull/60430","RelatedDescription":"Open PR \"fix(devtools): catch firefox non-top level frame error case when using utilities APIs\" (#60430)"},{"Id":"2926685138","IsPullRequest":true,"CreatedAt":"2025-03-18T00:11:28","Actor":"jkrems","Number":"60429","RawContent":null,"Title":"fix: catch hydration marker with implicit body tag","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60429","RelatedDescription":"Open PR \"fix: catch hydration marker with implicit body tag\" (#60429)"},{"Id":"2926501875","IsPullRequest":true,"CreatedAt":"2025-03-17T22:12:12","Actor":"angular-robot","Number":"60428","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to ebdb141","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `3b3667f` -> `ebdb141` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60428","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to ebdb141\" (#60428)"},{"Id":"2926397584","IsPullRequest":true,"CreatedAt":"2025-03-17T21:14:08","Actor":"devversion","Number":"60427","RawContent":null,"Title":"build: improve partial compliance golden generation and add debug logging","State":"open","Body":"    Improves the partial compliance golden generation to not rely on large\r\nfiles being transmitted via `stdout`. Instead the files are written\r\ndirectly as it's done in idiomatic Bazel generation actions.\r\n    \r\nIn addition, we add extra stdout logging for the Bazel action, to see if\r\nthe process is actually invoked in RBE workers. Right now those are\r\noccassionally stuck, but neither us, nor the RBE team can see anything\r\nrunning, and they're occasionally stuck for 1hr.","Url":"https://github.com/angular/angular/pull/60427","RelatedDescription":"Open PR \"build: improve partial compliance golden generation and add debug logging\" (#60427)"},{"Id":"2926100287","IsPullRequest":true,"CreatedAt":"2025-03-17T19:01:52","Actor":"eneajaho","Number":"60426","RawContent":null,"Title":"refactor(core): improve the messaging on effect manualCleanup option","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## What is the current behavior?\r\nWhen using the `manualCleanup` option in effect and we're outside an injection context, it feels like we're good to go without having to pass an injector, but that's not the case. No matter what, we always have to pass an injector when using the effect outside the injection context. \r\n\r\n## What is the new behavior?\r\nAdds the messaging on the option comment. Also introduced a test for the option. If the injector is removed, the test fails ofc.\r\n\r\n## Does this PR introduce a breaking change?\r\n- [x] No\r\n\r\n\r\n## Other information\r\nThis has caught me off guard a couple of times. ","Url":"https://github.com/angular/angular/pull/60426","RelatedDescription":"Open PR \"refactor(core): improve the messaging on effect manualCleanup option\" (#60426)"},{"Id":"2926036546","IsPullRequest":true,"CreatedAt":"2025-03-17T18:32:06","Actor":"thePunderWoman","Number":"60425","RawContent":null,"Title":"refactor(compiler): Add conditionalCreate instruction","State":"open","Body":"This adds a new instruction for dealing with creating conditionals. It ensures flags are set on the TNode for later identification during hydration.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/60425","RelatedDescription":"Open PR \"refactor(compiler): Add conditionalCreate instruction\" (#60425)"},{"Id":"2923010504","IsPullRequest":true,"CreatedAt":"2025-03-17T17:33:47","Actor":"JeanMeche","Number":"60409","RawContent":null,"Title":"docs(docs-infra): fix & enable shared-docs tests","State":"closed","Body":"This commit includes a refactoring that removes `TableOfContentsScrollSpy` as this is only directly handled via a browser API.\n","Url":"https://github.com/angular/angular/pull/60409","RelatedDescription":"Closed or merged PR \"docs(docs-infra): fix & enable shared-docs tests\" (#60409)"},{"Id":"2925783930","IsPullRequest":true,"CreatedAt":"2025-03-17T16:51:53","Actor":"arturovt","Number":"60424","RawContent":null,"Title":"refactor(service-worker): drop `fromEvent`","State":"open","Body":"In this commit, we remove `fromEvent` and replace it with a manually created observable to import fewer symbols from RxJS. Some codebases may not use `fromEvent` at all, but using it in a single place would still include it in the initial bundle.","Url":"https://github.com/angular/angular/pull/60424","RelatedDescription":"Open PR \"refactor(service-worker): drop `fromEvent`\" (#60424)"},{"Id":"2925717605","IsPullRequest":false,"CreatedAt":"2025-03-17T16:30:51","Actor":"JoostK","Number":"60423","RawContent":null,"Title":"Type inference for advanced `linkedSignal` signature","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe signature of `linkedSignal` that takes an object with `source` and `computation` properties does not allow for proper type inference, given the cyclic nature of the `previous` argument of the computation. Even though `previous.value` uses `NoInfer` to block TypeScript from picking up inferences from this position, TypeScript is still unable to infer type arguments if they are omitted:\n\n```ts\nconst user = signal('Joost');\nconst linked = linkedSignal({\n  source: user,\n  computation: (user) => user.length,\n});\n```\n\nHere, `linked` is inferred as `WritableSignal<unknown>` instead of `WritableSignal<number>`.\n\n### Please provide a link to a minimal reproduction of the bug\n\n[TypeScript playground](https://www.typescriptlang.org/play/?#code/JYWwDg9gTgLgBAbwM7AOYDsCGAbANHbYdAawFMATAZTS2wF84AzKCEOAcgAFN1UBXbJigB6AMbRS7ANwAoGePRJ4fJKShwAvHBQYcACnYApCBCXsAlLIVKCRMuU22SFarux6EM4cLi+4APQB+GV8kCD4oUVIALjgVNVwQuHFwPhhMGGAIdFi9eKhzTQA+ONUoADpsUl4YAAtEuksZIA)","Url":"https://github.com/angular/angular/issues/60423","RelatedDescription":"Open issue \"Type inference for advanced `linkedSignal` signature\" (#60423)"},{"Id":"2925626936","IsPullRequest":false,"CreatedAt":"2025-03-17T16:03:32","Actor":"alebx","Number":"60422","RawContent":null,"Title":"Components Inheritance suggests metadata inheritance","State":"open","Body":"### Describe the problem that you experienced\n\nThe Components/Inheritance guide suggests metadata inheritance:\n\n> When a component extends another component or a directive, it inherits all the metadata defined in the base class's decorator and the base class's decorated members. This includes the selector, template, styles, host bindings, inputs, outputs, lifecycle methods, and any other settings.\n\nBut the metadata isn't inherited, e.g. [here](https://stackblitz.com/edit/t9fag3cq) `styles` should be inherited.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/inheritance#extending-other-components-and-directives\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/60422","RelatedDescription":"Open issue \"Components Inheritance suggests metadata inheritance\" (#60422)"},{"Id":"2925437708","IsPullRequest":true,"CreatedAt":"2025-03-17T15:04:04","Actor":"JeanMeche","Number":"60421","RawContent":null,"Title":"refactor(core): run `effect` cleanup as `untracked`","State":"open","Body":"A effect cleanup should not be considered reactive.\r\n\r\nfixes #57757\r\n","Url":"https://github.com/angular/angular/pull/60421","RelatedDescription":"Open PR \"refactor(core): run `effect` cleanup as `untracked`\" (#60421)"},{"Id":"2924969597","IsPullRequest":false,"CreatedAt":"2025-03-17T12:50:38","Actor":"lilas78","Number":"60420","RawContent":null,"Title":"When child form control disabled. entire form group dirty status is change to be false","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen child form control disabled. entire form group dirty status is change to be false\n\nA former bug was resolved : https://github.com/angular/angular/issues/23309\n\nBut is is resolved only for direct parent (level+1).  \nIf a form has multiple levels (fromArray, formgroup, ...), and a control at the bottom is marked as disabled, the dirty status of a upper parent (level +2) is changed to be false.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/sb1-wqy95ggs?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60420","RelatedDescription":"Open issue \"When child form control disabled. entire form group dirty status is change to be false\" (#60420)"},{"Id":"2924938716","IsPullRequest":true,"CreatedAt":"2025-03-17T12:40:37","Actor":"Ngnintedem3004","Number":"60419","RawContent":null,"Title":"Update code snippet  visibleLines = \"[28,32]\" to visibleLines = \"[25,â€¦","State":"open","Body":"â€¦32]\"\r\n\r\nHello, Please look the reference code  below  , I changed 28 to 25 because in the text  of this tutorial , we can't see the  service that was injected.   So previuosly we had visibleLines = \"[28,32]\" ; I think that the correct way is  visibleLines = \"[25,32]\"\r\n\r\n1. In `HomeComponent`, add the following code to inject the new service and initialize the data for the app. The `constructor` is the first function that runs when this component is created. The code in the `constructor` will assign the `housingLocationList` the value returned from the call to `getAllHousingLocations`.\r\n\r\n    <docs-code header=\"Initialize data from service in src/app/home/home.component.ts\" path=\"adev/src/content/tutorials/first-app/steps/10-routing/src/app/home/home.component.ts\" visibleLines=\"[28,32]\"/>\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60419","RelatedDescription":"Open PR \"Update code snippet  visibleLines = \"[28,32]\" to visibleLines = \"[25,â€¦\" (#60419)"},{"Id":"2924703750","IsPullRequest":true,"CreatedAt":"2025-03-17T11:21:19","Actor":"JeanMeche","Number":"60418","RawContent":null,"Title":"refactor(core): Improve NG0600 error message.","State":"open","Body":"This commit adds the mention of templates as illegal context to write signals.\n\nfixes #60143\n","Url":"https://github.com/angular/angular/pull/60418","RelatedDescription":"Open PR \"refactor(core): Improve NG0600 error message.\" (#60418)"},{"Id":"2924635586","IsPullRequest":false,"CreatedAt":"2025-03-17T11:19:25","Actor":"linkdotnet","Number":"60417","RawContent":null,"Title":"Using anonymous function inside `computed` doesn't trigger UI update","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nGiven the two code pieces:\n```ts\n  readonly selectedXAxisLabel = computed(() => {\n    return (\n      this.options.find((option) => option.value === this.selectedXAxis())\n        ?.label ?? ''\n    );\n  });\n```\n\nAnd:\n```ts\n  readonly selectedXAxisLabel = computed(() => {\n    const selectedXAxis = this.selectedXAxis();\n    return (\n      this.options.find((option) => option.value === selectedXAxis)?.label ?? ''\n    );\n  });\n```\n\nWhile looking the same, the former will **not** update the UI because the signal is buried inside an anonymous expression. \n\nWhile this is totally explainable, the developer experience around that could be improved so that this case is reported to the user.\n\n### Proposed solution\n\nEither the check should include an anonymous function, which I guess is non-trivial (and therefore, also, a compiler warning might not be easy).\n\nI also did not see anything in the docs so far pointing to that behavior.\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/60417","RelatedDescription":"Closed issue \"Using anonymous function inside `computed` doesn't trigger UI update\" (#60417)"},{"Id":"2922894058","IsPullRequest":true,"CreatedAt":"2025-03-17T11:16:06","Actor":"crisbeto","Number":"60406","RawContent":null,"Title":"fix(core): remove unused parameter from listener instruction","State":"closed","Body":"Removes the `useCapture` parameter from the `listener` instruction, because it's not used.\r\n","Url":"https://github.com/angular/angular/pull/60406","RelatedDescription":"Closed or merged PR \"fix(core): remove unused parameter from listener instruction\" (#60406)"},{"Id":"2921896245","IsPullRequest":true,"CreatedAt":"2025-03-17T11:15:05","Actor":"crisbeto","Number":"60404","RawContent":null,"Title":"fix(core): include input name in error message","State":"closed","Body":"Includes either the `debugName` or alias of an input in the error message about a value not being available.\r\n\r\nFixes #60199.\r\n","Url":"https://github.com/angular/angular/pull/60404","RelatedDescription":"Closed or merged PR \"fix(core): include input name in error message\" (#60404)"},{"Id":"2924416341","IsPullRequest":true,"CreatedAt":"2025-03-17T09:49:47","Actor":"alan-agius4","Number":"60416","RawContent":null,"Title":"refactor(platform-server): expose internal `render` method for extensibility","State":"open","Body":"\r\nThe `renderApplication` and `renderModule` methods currently encapsulate the entire rendering process, making it difficult to intercept key phases from a non-Angular context. This change exports the internal `render` method, allowing us to perform operations such as:\r\n\r\n- Flushing headers before hydration preparation\r\n- Handling non static redirects (e.g., 302 responses)\r\n- Intercepting router events for additional processing\r\n\r\nThis refactor serves as an experimental step toward improving the API for better customization and integration in the future.\r\n\r\n//cc @jkrems, I believe you might also find this useful.","Url":"https://github.com/angular/angular/pull/60416","RelatedDescription":"Open PR \"refactor(platform-server): expose internal `render` method for extensibility\" (#60416)"},{"Id":"2921049205","IsPullRequest":true,"CreatedAt":"2025-03-17T09:26:51","Actor":"angular-robot","Number":"60400","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/60400","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#60400)"},{"Id":"2921086745","IsPullRequest":true,"CreatedAt":"2025-03-17T09:26:03","Actor":"angular-robot","Number":"60401","RawContent":null,"Title":"build: pin actions/upload-artifact action to 4cec3d8","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | pinDigest |  -> `4cec3d8` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60401","RelatedDescription":"Closed or merged PR \"build: pin actions/upload-artifact action to 4cec3d8\" (#60401)"},{"Id":"2924330483","IsPullRequest":true,"CreatedAt":"2025-03-17T09:23:01","Actor":"arturovt","Number":"60415","RawContent":null,"Title":"refactor(common): drop error messages in production","State":"open","Body":"Drops more error messages in production.","Url":"https://github.com/angular/angular/pull/60415","RelatedDescription":"Open PR \"refactor(common): drop error messages in production\" (#60415)"},{"Id":"2924260699","IsPullRequest":true,"CreatedAt":"2025-03-17T09:01:48","Actor":"crisbeto","Number":"60414","RawContent":null,"Title":"feat(core): remove TestBed.get","State":"open","Body":"`TestBed.get` isn't type safe and has been deprecated for several years now. These changes remove it from the public API.\r\n\r\nBREAKING CHANGE:\r\n* `TestBed.get` has been removed. Use `TestBed.inject` instead.","Url":"https://github.com/angular/angular/pull/60414","RelatedDescription":"Open PR \"feat(core): remove TestBed.get\" (#60414)"},{"Id":"2923991708","IsPullRequest":true,"CreatedAt":"2025-03-17T07:13:15","Actor":"angular-robot","Number":"60413","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\nðŸ”§ This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60413","RelatedDescription":"Open PR \"build: lock file maintenance\" (#60413)"},{"Id":"2923249549","IsPullRequest":true,"CreatedAt":"2025-03-16T19:02:03","Actor":"JeanMeche","Number":"60411","RawContent":null,"Title":"docs(docs-infra): Support aliased decorators in the API pages","State":"open","Body":"fixes #60244 ","Url":"https://github.com/angular/angular/pull/60411","RelatedDescription":"Open PR \"docs(docs-infra): Support aliased decorators in the API pages\" (#60411)"},{"Id":"2923211004","IsPullRequest":false,"CreatedAt":"2025-03-16T18:28:06","Actor":"GriffinJohnston","Number":"60410","RawContent":null,"Title":"Angular.dev IP flagged by abuseipdb","State":"closed","Body":"### Describe the problem that you experienced\n\nMalwarebytes uses abuseipdb, which means that angular.dev is currently being blocked for Malwarebytes users. This is a much bigger issue for Google in general, since that IP is used for all Firebase Hosting websites, but I wasn't sure where else to report the problem.\n\nhttps://www.abuseipdb.com/check/199.36.158.100\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\nAttempted to load angular.dev while using Malwarebytes.\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n<img width=\"606\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05a32e2e-10cc-4042-b3ce-a2a0ad8fa002\" />\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/60410","RelatedDescription":"Closed issue \"Angular.dev IP flagged by abuseipdb\" (#60410)"},{"Id":"2923000824","IsPullRequest":true,"CreatedAt":"2025-03-16T12:37:23","Actor":"JeanMeche","Number":"60408","RawContent":null,"Title":"docs(docs-infra): Improve markdown generation for code examples.","State":"open","Body":"Markdown requires code blocks (```) to start without white spaces. With this change we ensure that `@example` blocks with leading spaces are well supported.\r\n\r\nfixes #60407\r\n","Url":"https://github.com/angular/angular/pull/60408","RelatedDescription":"Open PR \"docs(docs-infra): Improve markdown generation for code examples.\" (#60408)"},{"Id":"2922958641","IsPullRequest":false,"CreatedAt":"2025-03-16T11:19:22","Actor":"vladboisa","Number":"60407","RawContent":null,"Title":"Wrong render of `code` in example docregion","State":"open","Body":"### Describe the problem that you experienced\n\nWrong render of code example\nI would be glad to fix this problem if someone tell me in which direction i should \"dig\" ;)\n![Image](https://github.com/user-attachments/assets/61549949-7ab4-4501-ae8a-0dad763bb2d8)\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/api/upgrade/static/downgradeModule#downgrading-multiple-modules\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\nChecked the source of [downgradeModue page](https://github.com/angular/angular/blob/main/packages/upgrade/static/src/downgrade_module.ts#L139-L141) Seemed okay\nIn the [source of `docregion` ](https://github.com/angular/angular/blob/eb867c3d231279e32ff390f8ea9ca0c01b10c492/packages/examples/upgrade/static/ts/lite-multi-shared/module.ts#L93) also seemed okay. \nProbably problem in part of the code which responsible for generate examples.\n\n\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/60407","RelatedDescription":"Open issue \"Wrong render of `code` in example docregion\" (#60407)"},{"Id":"2921925383","IsPullRequest":true,"CreatedAt":"2025-03-15T09:10:57","Actor":"angular-robot","Number":"60405","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `aaebd30` -> `8b7425f` |\n| angular/dev-infra | action | digest | `85eab90` -> `5bfed18` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60405","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#60405)"},{"Id":"2921116510","IsPullRequest":false,"CreatedAt":"2025-03-14T23:18:03","Actor":"moniuch","Number":"60402","RawContent":null,"Title":"Could `AbstractControl.reset()` adopt a new flag to also reset the `.defaultValue`?","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nRecently I had to build quite an extensive (reactive) form with the requirement of marking every single control whose value has been changed.\n\nFor example: if there was a `<select>` with a pristine value of `A`, and user changed it to `B` then it would of course be marked as dirty, but when the user then changed the value back to `A` - the control would get unmarked back to pristine - because there is no factual value difference. \n\nI initially thought I could get away by using `[class.is-changed]=\"control.value !== control.defaultValue\"`. \n\nThe **limitation** of `.defaultValue` however is that it is only populated during the control's construction and then exposed as **readonly**. That means that after the form submission we aren't able reassign the new `.defaultValue` without rebuilding the entire form for the sake of clearing the `is-changed` classes. Rebuilding the entire form wasn't something I wanted to do.\n\n### Proposed solution\n\nI thought the `.reset()` method on `AbstractControl` could have a flag to also reset `.defaultValue` of all the controls.\n\nIf that doesn't fit into how Angular team perceives the purpose of `.defaultValue` in the API, and wouldn't want to touch it, maybe we could have a new property (`.pristineValue` ?), also readonly, but such that **could** be affected by `.reset()`.\n\n### Intended usage examples\n\n1.\n\n```ts\nform.reset({\n  name: 'Saved name',\n  skills: [\n   {name: 'kayaking', level: 'amateur'},\n   {name: 'photography', level: 'pro'},\n ],\n wantsNewsletter: true,\n}, { resetPristine: true } )\n```\n\n2.\n\n```ts\nconst response = await api.saveForm(form.value);\nform.reset(response, { resetDefaultValues: true }); \n```\n\nor\n\n```ts\nconst response = await api.saveForm(form.value);\nform.reset(undefined, { resetDefaultValues: true }); \n```\n\n### Alternatives considered\n\nIt takes to code some directives in order to manually set up listeners. A bit costly and inefficient solution. The template usage:\n\n```html\n[class.is-changed]=\"control.value !== control.defaultValue\"`. \n```\n\nseems to be the most effective.\n","Url":"https://github.com/angular/angular/issues/60402","RelatedDescription":"Closed issue \"Could `AbstractControl.reset()` adopt a new flag to also reset the `.defaultValue`?\" (#60402)"},{"Id":"2921433376","IsPullRequest":true,"CreatedAt":"2025-03-14T22:49:09","Actor":"dgp1130","Number":"60403","RawContent":null,"Title":"refactor(devtools): fix reading `resolutionPath`","State":"open","Body":"Sometimes `forest` can be empty if the provided roots are empty, and was leading to a \"Cannot read `resolutionPath` of `undefined`\" error. Now we check the forest has a tree in it before looking up `resolutionPath`.","Url":"https://github.com/angular/angular/pull/60403","RelatedDescription":"Open PR \"refactor(devtools): fix reading `resolutionPath`\" (#60403)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2926723342","IsPullRequest":true,"CreatedAt":"2025-03-18T00:40:13","Actor":"clydin","Number":"29870","RawContent":null,"Title":"build: move `@angular/build` specific dependencies out of root","State":"open","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular/build` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29870","RelatedDescription":"Open PR \"build: move `@angular/build` specific dependencies out of root\" (#29870)"},{"Id":"2925072950","IsPullRequest":true,"CreatedAt":"2025-03-17T21:18:59","Actor":"clydin","Number":"29868","RawContent":null,"Title":"build: move devkit core specific dependencies out of root","State":"closed","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular-devkit/core` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29868","RelatedDescription":"Closed or merged PR \"build: move devkit core specific dependencies out of root\" (#29868)"},{"Id":"2926005995","IsPullRequest":true,"CreatedAt":"2025-03-17T18:18:21","Actor":"clydin","Number":"29869","RawContent":null,"Title":"fix(@schematics/angular): generate services without a `.service` extension/type","State":"open","Body":"To align with the updated style guide, Angular v20 will generate services without a `.service` file extension type for all service related files by default. Projects will automatically use this naming convention. Projects can however opt-out by setting the `type` option to `Service` for the service schematic. This can be done as a default in the `angular.json` or directly on the commandline via `--type=Service` when executing `ng generate`. As an example, `example.service.ts` will now be named `example.ts`. Additionally, the TypeScript class name will be `Example` instead of the previous `ExampleService`.","Url":"https://github.com/angular/angular-cli/pull/29869","RelatedDescription":"Open PR \"fix(@schematics/angular): generate services without a `.service` extension/type\" (#29869)"},{"Id":"2923973846","IsPullRequest":true,"CreatedAt":"2025-03-17T16:28:40","Actor":"angular-robot","Number":"29865","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\nðŸ”§ This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29865","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29865)"},{"Id":"2922235548","IsPullRequest":true,"CreatedAt":"2025-03-17T11:38:17","Actor":"angular-robot","Number":"29864","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`5.1.7` -> `5.1.8`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.7/5.1.8) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`7.3.3` -> `7.4.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.3.3/7.4.0) |\n| [piscina](https://redirect.github.com/piscinajs/piscina) | dependencies | minor | [`4.8.0` -> `4.9.0`](https://renovatebot.com/diffs/npm/piscina/4.8.0/4.9.0) |\n| [piscina](https://redirect.github.com/piscinajs/piscina) | devDependencies | minor | [`4.8.0` -> `4.9.0`](https://renovatebot.com/diffs/npm/piscina/4.8.0/4.9.0) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | minor | [`4.35.0` -> `4.36.0`](https://renovatebot.com/diffs/npm/rollup/4.35.0/4.36.0) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | minor | [`4.35.0` -> `4.36.0`](https://renovatebot.com/diffs/npm/rollup/4.35.0/4.36.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.8`](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.7...@inquirer/confirm@5.1.8)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.7...@inquirer/confirm@5.1.8)\n\n</details>\n\n<details>\n<summary>piscinajs/piscina (piscina)</summary>\n\n### [`v4.9.0`](https://redirect.github.com/piscinajs/piscina/compare/v4.8.0...893a11c4b6d5d8db2e55e38d92588068136c9e41)\n\n[Compare Source](https://redirect.github.com/piscinajs/piscina/compare/v4.8.0...893a11c4b6d5d8db2e55e38d92588068136c9e41)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.36.0`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4360)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.35.0...v4.36.0)\n\n*2025-03-17*\n\n##### Features\n\n-   Extend `renderDynamicImport` hook to provide information about static dependencies of the imported module ([#&#8203;5870](https://redirect.github.com/rollup/rollup/issues/5870))\n-   Export several additional types used by Vite ([#&#8203;5879](https://redirect.github.com/rollup/rollup/issues/5879))\n\n##### Bug Fixes\n\n-   Do not merge chunks if that would create a top-level await cycle between chunks ([#&#8203;5843](https://redirect.github.com/rollup/rollup/issues/5843))\n\n##### Pull Requests\n\n-   [#&#8203;5843](https://redirect.github.com/rollup/rollup/pull/5843): avoiding top level await circular ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi), [@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5870](https://redirect.github.com/rollup/rollup/pull/5870): draft for extended renderDynamicImport hook ([@&#8203;iczero](https://redirect.github.com/iczero), [@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5876](https://redirect.github.com/rollup/rollup/pull/5876): Update axios overrides to 1.8.2 ([@&#8203;vadym-khodak](https://redirect.github.com/vadym-khodak))\n-   [#&#8203;5877](https://redirect.github.com/rollup/rollup/pull/5877): chore(deps): update dependency eslint-plugin-vue to v10 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5878](https://redirect.github.com/rollup/rollup/pull/5878): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5879](https://redirect.github.com/rollup/rollup/pull/5879): fix: export types ([@&#8203;sxzz](https://redirect.github.com/sxzz))\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29864","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29864)"},{"Id":"2924542122","IsPullRequest":false,"CreatedAt":"2025-03-17T10:41:38","Actor":"edocbuhtig","Number":"29867","RawContent":null,"Title":"error code ENOTEMPTY: npm install -g @angular/cli","State":"closed","Body":"### Command\n\nconfig\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.x\n\n### Description\n\nNot able to globally install Angular CLI using the(Official Docs at angular.dev\n\n### Minimal Reproduction\n\n\nnpm install -g @angular/cli\n\n### Exception or Error\n\n```text\n$npm install -g @angular/cli\nnpm error code ENOTEMPTY\nnpm error syscall rename\nnpm error path /usr/local/lib/node_modules/@angular/cli\nnpm error dest /usr/local/lib/node_modules/@angular/.cli-G39XYeT9\nnpm error errno -66\nnpm error ENOTEMPTY: directory not empty, rename '/usr/local/lib/node_modules/@angular/cli' -> '/usr/local/lib/node_modules/@angular/.cli-G39XYeT9'\nnpm error A complete log of this run can be found in: /Users/sunilkumar/.npm/_logs/2025-03-17T10_10_38_118Z-debug-0.log\n```\n\n### Your Environment\n\n```text\nzsh: command not found: ng\nMACOSver 12.7.6 Intel chipset\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29867","RelatedDescription":"Closed issue \"error code ENOTEMPTY: npm install -g @angular/cli\" (#29867)"},{"Id":"2923993773","IsPullRequest":false,"CreatedAt":"2025-03-17T07:49:54","Actor":"maksimetny","Number":"29866","RawContent":null,"Title":"Revert `index.csr.html` to default filename `index.html`","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nIn my application I use Tauri as a wrapper for a desktop application and I would like to use the same Angular build artifacts for deployment as a browser web app and as a desktop app, but fact that `index.html` has been renamed to `index.csr.html` creates additional difficulties for bundle reuse\n\nI think this feature would be useful for many\n\n### Proposed solution\n\nI would like to be able to override the behavior of Angular builder in terms of naming the index file as an option in `angular.json` file or CLI and think this feature would be useful for many\n\n### Alternatives considered\n\n1) Ability to define multiple build targets Â«out of the boxÂ», e.g. `browser-csr` for only `index.html` without SSG and `browser` with hybrid rendering\n2) Ability to fully disable SSG to avoid name conflicts at revert traditional `index.html`","Url":"https://github.com/angular/angular-cli/issues/29866","RelatedDescription":"Closed issue \"Revert `index.csr.html` to default filename `index.html`\" (#29866)"},{"Id":"2921921883","IsPullRequest":true,"CreatedAt":"2025-03-15T09:02:51","Actor":"angular-robot","Number":"29863","RawContent":null,"Title":"build: update devinfra digest to 5bfed18","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `85eab90` -> `5bfed18` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29863","RelatedDescription":"Open PR \"build: update devinfra digest to 5bfed18\" (#29863)"},{"Id":"2921642390","IsPullRequest":false,"CreatedAt":"2025-03-15T06:52:10","Actor":"kewur","Number":"29862","RawContent":null,"Title":"reopen: Providing a DI token in commonEngine.render() does not provide its value to application","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccording to this issue https://github.com/angular/angular-cli/issues/26323 the objects that are provided in server.ts with ssr would be available in \"ng serve\" as well.\n\nI've upgraded to angular 19, and I'm still seeing the same issue\n\nthis is in my server.ts\n\n```\ncommonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [\n          { provide: APP_BASE_HREF, useValue: baseUrl },\n          { provide: REQUEST, useValue: req },\n          { provide: 'RESPONSE', useValue: res },\n          { provide: COOKIES, useValue: req.headers.cookie || '' },\n          { provide: FORWARDED_HOST, useValue: forwardedHost }, // Pass forwarded host\n        ],\n        inlineCriticalCss: false,\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n```\n\n\nWhen I run with\n\n```\nng build && npm run serve:ssr:web\n```\n\nI can inject REQUEST into a service and get the request in.\n\nIf I run \n\n```\nng serve\n```\n\nthose values are null. \n\n### Minimal Reproduction\n\nserver.ts\n\n```\n\n\ncommonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [\n          { provide: APP_BASE_HREF, useValue: baseUrl },\n          { provide: REQUEST, useValue: req },\n          { provide: 'RESPONSE', useValue: res }\n        ],\n        inlineCriticalCss: false,\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n\n```\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  constructor(\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n    @Optional() @Inject(REQUEST) private cookiesString: string,\n    @Optional() @Inject('RESPONSE') private readonly response: Response,\n  ) {\n\n  if (!isPlatformBrowser(this.platformId)) {\n    console.log(response); // <==== NULL WITH \"NG SERVE\" NOT NULL WITH NPM RUN serve:ssr:web\"\n  }\n  \n}\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.1.1\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: linux x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.1 (cli-only)\n@angular-devkit/core         19.1.1 (cli-only)\n@angular-devkit/schematics   19.1.1 (cli-only)\n@schematics/angular          19.1.1 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29862","RelatedDescription":"Closed issue \"reopen: Providing a DI token in commonEngine.render() does not provide its value to application\" (#29862)"},{"Id":"2921433669","IsPullRequest":false,"CreatedAt":"2025-03-15T06:49:33","Actor":"daynemagicos","Number":"29861","RawContent":null,"Title":"How to fix error when deploying Angular 18 application in Vercel?","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/40aa908c-f67e-4b5f-9e88-539272b46fe9)\n\n\n### Minimal Reproduction\n\nHow to fix error when deploying Angular 18 application in Vercel?\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nHow to fix error when deploying Angular 18 application in Vercel?\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29861","RelatedDescription":"Closed issue \"How to fix error when deploying Angular 18 application in Vercel?\" (#29861)"},{"Id":"2921046651","IsPullRequest":true,"CreatedAt":"2025-03-14T22:19:33","Actor":"clydin","Number":"29859","RawContent":null,"Title":"refactor(@angular/cli): import from `node:fs/promises` where appropriate","State":"closed","Body":"Several usages of `import { promises as fs } from 'node:fs'` have been adjusted to import directly from `node:fs/promises`. This is consistent with the rest of the source code usage.","Url":"https://github.com/angular/angular-cli/pull/29859","RelatedDescription":"Closed or merged PR \"refactor(@angular/cli): import from `node:fs/promises` where appropriate\" (#29859)"},{"Id":"2921112176","IsPullRequest":false,"CreatedAt":"2025-03-14T18:46:11","Actor":"constantant","Number":"29860","RawContent":null,"Title":"Prerender generates wrong path for routes from routesFile if baseHref contains host","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI try to prerender a web app which uses CDN for the static files so `document.baseURI` and `APP_BASE_HREF` are different and  `document.baseURI` looks like `https://aws-blablabla.com/version-0001/build-0002/`.\n\nFor the discovered routes everything works fine but if I need to indicate the dynamic ones it generates the wrong path like `https:/ aws-blablabla.com/ version-0001/ build-0002/ dynamic/ path/ 01/` but it must be `dynamic/ path/ 01/`\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.2.1\nNode: 20.14.0\nPackage Manager: npm 9.6.2\nOS: win32 x64\n\nAngular: 19.2.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, platform-server, router, ssr\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1902.1\n@angular-devkit/build-angular      19.2.1\n@angular-devkit/core               19.2.1\n@angular-devkit/schematics         19.2.1\n@angular/cdk                       19.2.2\n@angular/components-examples       19.2.0-next.4+sha-c40c701\n@angular/google-maps               19.2.2\n@angular/material                  19.2.2\n@angular/material-experimental     19.2.2\n@angular/material-moment-adapter   19.2.2\n@angular/youtube-player            19.2.2\n@schematics/angular                19.0.4\nng-packagr                         19.0.1\nrxjs                               7.8.1\ntypescript                         5.6.3\nzone.js                            0.15.0\n\n```","Url":"https://github.com/angular/angular-cli/issues/29860","RelatedDescription":"Open issue \"Prerender generates wrong path for routes from routesFile if baseHref contains host\" (#29860)"},{"Id":"2919128125","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:59","Actor":"angular-robot","Number":"29851","RawContent":null,"Title":"build: update devinfra digest to 85eab90","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `47572ab` -> `85eab90` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29851","RelatedDescription":"Closed or merged PR \"build: update devinfra digest to 85eab90\" (#29851)"},{"Id":"2919235521","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:33","Actor":"angular-robot","Number":"29852","RawContent":null,"Title":"build: update dependency vite to v6.2.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.2.1` -> `6.2.2`](https://renovatebot.com/diffs/npm/vite/6.2.1/6.2.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.2.2`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small622-2025-03-14-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.2.1...v6.2.2)\n\n-   fix: await client buildStart on top level buildStart ([#&#8203;19624](https://redirect.github.com/vitejs/vite/issues/19624)) ([b31faab](https://redirect.github.com/vitejs/vite/commit/b31faab2a81b839e4b747baeb9c7a7cbb724f8d2)), closes [#&#8203;19624](https://redirect.github.com/vitejs/vite/issues/19624)\n-   fix(css): inline css correctly for double quote use strict ([#&#8203;19590](https://redirect.github.com/vitejs/vite/issues/19590)) ([d0aa833](https://redirect.github.com/vitejs/vite/commit/d0aa833296668fc420a27a1ea88ecdbdeacdbce7)), closes [#&#8203;19590](https://redirect.github.com/vitejs/vite/issues/19590)\n-   fix(deps): update all non-major dependencies ([#&#8203;19613](https://redirect.github.com/vitejs/vite/issues/19613)) ([363d691](https://redirect.github.com/vitejs/vite/commit/363d691b4995d72f26a14eb59ed88a9483b1f931)), closes [#&#8203;19613](https://redirect.github.com/vitejs/vite/issues/19613)\n-   fix(indexHtml): ensure correct URL when querying module graph ([#&#8203;19601](https://redirect.github.com/vitejs/vite/issues/19601)) ([dc5395a](https://redirect.github.com/vitejs/vite/commit/dc5395a27e44066ef7725278c4057d9f1071a53f)), closes [#&#8203;19601](https://redirect.github.com/vitejs/vite/issues/19601)\n-   fix(preview): use preview https config, not server ([#&#8203;19633](https://redirect.github.com/vitejs/vite/issues/19633)) ([98b3160](https://redirect.github.com/vitejs/vite/commit/98b3160fa5916189e756cd7c5aae87e0d8f1978e)), closes [#&#8203;19633](https://redirect.github.com/vitejs/vite/issues/19633)\n-   fix(ssr): use optional chaining to prevent \"undefined is not an object\" happening in \\`ssrRewriteStac ([4309755](https://redirect.github.com/vitejs/vite/commit/43097550a1aa8ff633c39fb197b5f9ac1222119b)), closes [#&#8203;19612](https://redirect.github.com/vitejs/vite/issues/19612)\n-   feat: show friendly error for malformed `base` ([#&#8203;19616](https://redirect.github.com/vitejs/vite/issues/19616)) ([2476391](https://redirect.github.com/vitejs/vite/commit/2476391b2854aaa67d0ed317b6d0c462e68028f7)), closes [#&#8203;19616](https://redirect.github.com/vitejs/vite/issues/19616)\n-   feat(worker): show asset filename conflict warning ([#&#8203;19591](https://redirect.github.com/vitejs/vite/issues/19591)) ([367d968](https://redirect.github.com/vitejs/vite/commit/367d968fbf584e9f0e17192b816e92e8045c6217)), closes [#&#8203;19591](https://redirect.github.com/vitejs/vite/issues/19591)\n-   chore: extend commit hash correctly when ambigious with a non-commit object ([#&#8203;19600](https://redirect.github.com/vitejs/vite/issues/19600)) ([89a6287](https://redirect.github.com/vitejs/vite/commit/89a62873243805518b672212db7e317989c5c197)), closes [#&#8203;19600](https://redirect.github.com/vitejs/vite/issues/19600)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29852","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v6.2.2\" (#29852)"},{"Id":"2920911877","IsPullRequest":true,"CreatedAt":"2025-03-14T18:28:09","Actor":"clydin","Number":"29858","RawContent":null,"Title":"build: move `@angular/cli` specific dependencies out of root","State":"closed","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular/cli` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29858","RelatedDescription":"Closed or merged PR \"build: move `@angular/cli` specific dependencies out of root\" (#29858)"},{"Id":"2920726646","IsPullRequest":true,"CreatedAt":"2025-03-14T17:18:16","Actor":"clydin","Number":"29857","RawContent":null,"Title":"build: move build-angular/build-webpack specific dependencies out of root","State":"closed","Body":"With the migration to `rules_js`, package specific dependencies now only need to be referenced with the source `package.json` for each specific package. Most of the `@angular-devkit/build-angular` and `@angular-devkit/build-webpack` specific dependencies have now been moved. This is not exhaustive and further changes will continue to move additional dependencies.","Url":"https://github.com/angular/angular-cli/pull/29857","RelatedDescription":"Closed or merged PR \"build: move build-angular/build-webpack specific dependencies out of root\" (#29857)"},{"Id":"2920242946","IsPullRequest":false,"CreatedAt":"2025-03-14T15:02:58","Actor":"prclm","Number":"29854","RawContent":null,"Title":"Support for SASS PKG-Importer","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nAngular can not handle the new `@use \"pkg:@myPackage/...\"` syntax of sass which uses the \"exports\" of the package.json to reference a file.\n\nI would really like to have support for this very good feature:\nhttps://sass-lang.com/blog/announcing-pkg-importers/\n\n### Proposed solution\n\nSupport this official SASS feature. :)\n\n### Alternatives considered\n\nthis is the alternative to adding \"node_modules\" to \"loadPaths\" (\"includePath\" in angulars sytlePreprocessorOptions).","Url":"https://github.com/angular/angular-cli/issues/29854","RelatedDescription":"Closed issue \"Support for SASS PKG-Importer\" (#29854)"},{"Id":"2920351628","IsPullRequest":true,"CreatedAt":"2025-03-14T15:02:56","Actor":"alan-agius4","Number":"29855","RawContent":null,"Title":"feat(@angular/build): Support Sass package importers","State":"closed","Body":"Enhanced Sass integration by adding support for package importers.\r\n\r\nSee: https://sass-lang.com/blog/announcing-pkg-importers/\r\n\r\nCloses: #29854\r\n","Url":"https://github.com/angular/angular-cli/pull/29855","RelatedDescription":"Closed or merged PR \"feat(@angular/build): Support Sass package importers\" (#29855)"},{"Id":"2920422393","IsPullRequest":true,"CreatedAt":"2025-03-14T14:41:15","Actor":"alan-agius4","Number":"29856","RawContent":null,"Title":"docs: correct bazel e2e commands","State":"closed","Body":"These command are outdated and no longer work\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29856","RelatedDescription":"Closed or merged PR \"docs: correct bazel e2e commands\" (#29856)"},{"Id":"2920129752","IsPullRequest":false,"CreatedAt":"2025-03-14T13:52:22","Actor":"BenjaminHofstetter","Number":"29853","RawContent":null,"Title":"Native async/await with polyfills file","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy goal is to run a zoneless app without downleveling asynchronous/await.  This is only true if I don't use a polyfills file. \n\n\n\n\n### Minimal Reproduction\n\nVery minimal...\n\nJust a minimal main.ts with just this async call with no polyfills file. \n\n\nangular.json\n\n```json\n            \"polyfills\": [],\n```\n\n\n```ts\nwindow.setTimeout(async () => {\n  const { body: readableStream } = await fetch('http://localhost:4200');\n  if (!readableStream) {\n    throw new Error('Failed to fetch');\n  }\n  console.log('hello Angular');\n}, 0);\n\n```\n\nis transpiled to .... (checked in chrome dev tools source tab)\n\n```js\n// src/main.ts\nwindow.setTimeout(async () => {\n    const {body: readableStream} = await fetch(\"http://localhost:4200\");\n    if (!readableStream) {\n        throw new Error(\"Failed to fetch\");\n    }\n    console.log(\"hello Angular\");\n}\n, 0);\n\n```\n\nWith a polyfills file in angular.json (the polyfills.ts  file is empty) transpires to \n\nangular.json\n\n```json\n            \"polyfills\": [\n                  \"src/polyfills.ts\"\n              ],\n```\n\n```js \nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/main.ts\nvar require_main = __commonJS({\n  \"src/main.ts\"(exports) {\n    window.setTimeout(() => __async(exports, null, function* () {\n      const { body: readableStream } = yield fetch(\"http://localhost:4200\");\n      if (!readableStream) {\n        throw new Error(\"Failed to fetch\");\n      }\n      console.log(\"hello Angular\");\n    }), 0);\n  }\n});\nexport default require_main();\n\n```\n\n### Exception or Error\n\nMy expectation was that since zone.js is absent in the polifills, native async should not be downleveled. However, it seems that this is only the case when no polyfills files are added.\n\n### Your Environment\n\n```text\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.3\n@angular-devkit/build-angular   19.2.3\n@angular-devkit/core            19.2.3\n@angular-devkit/schematics      19.2.3\n@angular/cli                    19.2.3\n@schematics/angular             19.2.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29853","RelatedDescription":"Closed issue \"Native async/await with polyfills file\" (#29853)"},{"Id":"2919128081","IsPullRequest":true,"CreatedAt":"2025-03-14T05:03:32","Actor":"angular-robot","Number":"29850","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `e584028` -> `88b9f22` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `f2ce660` -> `e1ac751` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `01d5048` -> `e3229b4` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `523dac1` -> `2fe230f` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `ff3ed45` -> `5068675` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `10fc1e4` -> `e6292fb` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `25932d9` -> `e60db0b` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `7f8ee16` -> `7ef42c2` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `fcce120` -> `7262f2b` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `8acdf1d` -> `3ada033` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `8b9f481` -> `623a01a` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `9fd3adb` -> `8b7425f` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `95eaabd` -> `8add510` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `d0e03e6` -> `2442c46` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `c3f2e22` -> `67fa238` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `6b4daa7` -> `b05a155` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `7479509` -> `fc5d4b7` |\n| angular/dev-infra | action | digest | `47572ab` -> `5bfed18` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xOTguMSIsInVwZGF0ZWRJblZlciI6IjM5LjE5OC4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29850","RelatedDescription":"Open PR \"build: update angular\" (#29850)"},{"Id":"2917639646","IsPullRequest":true,"CreatedAt":"2025-03-13T17:49:56","Actor":"clydin","Number":"29849","RawContent":null,"Title":"fix(@angular/build): ensure relative karma stack traces for test failures","State":"closed","Body":"The karma configuration will now automatically set the `basePath` option to the temporary output path when using the application build system's karma testing. This ensures that only the relative path of the test files is represented in the stack traces of test failures.\r\n\r\nCloses #29766","Url":"https://github.com/angular/angular-cli/pull/29849","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure relative karma stack traces for test failures\" (#29849)"},{"Id":"2917118457","IsPullRequest":true,"CreatedAt":"2025-03-13T16:40:26","Actor":"alan-agius4","Number":"29846","RawContent":null,"Title":"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs","State":"closed","Body":"\r\n**feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs**\r\n\r\nThis commit promotes the `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs from dev preview to stable. These APIs enhance server-side rendering (SSR) capabilities in Angular applications, improving routing and server integration for better performance and reliability.\r\n\r\n----\r\n\r\n**feat(@schematics/angular): remove `--server-routing` option**\r\n\r\nServer-side rendering (SSR) will always enable server routing when using the application builder.\r\n\r\nBREAKING CHANGE: `--server-routing` option has been removed from several schematics. Server routing will be used when using the application builder.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29846","RelatedDescription":"Closed or merged PR \"feat(@angular/ssr): stabilize `AngularNodeAppEngine`, `AngularAppEngine`, and `provideServerRouting` APIs\" (#29846)"},{"Id":"2917449624","IsPullRequest":true,"CreatedAt":"2025-03-13T14:53:00","Actor":"devversion","Number":"29848","RawContent":null,"Title":"build: remove `rules_js` migration interop files and clean up","State":"open","Body":"Removes the `rules_js` migration interop files and cleans up other remainings.\r\n\r\nBlocked on the `ng_package` `rules_js` variant where we currently use the old one w/ interop.","Url":"https://github.com/angular/angular-cli/pull/29848","RelatedDescription":"Open PR \"build: remove `rules_js` migration interop files and clean up\" (#29848)"},{"Id":"2917129146","IsPullRequest":true,"CreatedAt":"2025-03-13T13:51:31","Actor":"alan-agius4","Number":"29847","RawContent":null,"Title":"docs(@angular-devkit/build-angular): update `forceEsbuild` option description","State":"closed","Body":"\r\n\r\nEsbuild builder is stable and is no longer in developer preview.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29847","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): update `forceEsbuild` option description\" (#29847)"},{"Id":"2916893733","IsPullRequest":true,"CreatedAt":"2025-03-13T12:03:46","Actor":"alan-agius4","Number":"29845","RawContent":null,"Title":"docs: release notes for the v17.3.13 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29845","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.13 release\" (#29845)"},{"Id":"2916883604","IsPullRequest":true,"CreatedAt":"2025-03-13T11:52:20","Actor":"alan-agius4","Number":"29844","RawContent":null,"Title":"Bump version to \"v17.3.13\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29844","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.13\" with changelog.\" (#29844)"},{"Id":"2916696530","IsPullRequest":true,"CreatedAt":"2025-03-13T11:45:44","Actor":"alan-agius4","Number":"29843","RawContent":null,"Title":"build: configure Bazel to ignore `packages/angular/build/node_modules`","State":"closed","Body":"Although the `build` package is not present in this branch, the `node_modules` directory may persist when switching branches during a release, potentially causing the build to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/29843","RelatedDescription":"Closed or merged PR \"build: configure Bazel to ignore `packages/angular/build/node_modules`\" (#29843)"},{"Id":"2916656082","IsPullRequest":true,"CreatedAt":"2025-03-13T10:34:05","Actor":"alan-agius4","Number":"29842","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29842","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#29842)"},{"Id":"2916645105","IsPullRequest":true,"CreatedAt":"2025-03-13T10:32:10","Actor":"alan-agius4","Number":"29841","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29841","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#29841)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2926468163","IsPullRequest":true,"CreatedAt":"2025-03-17T21:49:52","Actor":"calebkish","Number":"30642","RawContent":null,"Title":"fix(material/timepicker): TimepickerInput component in shadow DOM","State":"open","Body":"Fixes an issue where the value of the input element referenced by a TimepickerInput component inside a shadow DOM was getting formatted too often due to `TimepickerInput._hasFocus()` assuming the component wasn't in the shadow DOM.\r\n\r\nFixes #30641","Url":"https://github.com/angular/components/pull/30642","RelatedDescription":"Open PR \"fix(material/timepicker): TimepickerInput component in shadow DOM\" (#30642)"},{"Id":"2926356031","IsPullRequest":false,"CreatedAt":"2025-03-17T20:52:36","Actor":"calebkish","Number":"30641","RawContent":null,"Title":"bug(TimepickerInput): Incorrect input behavior when component is in shadow DOM","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the `MatTimepickerInput` component is within a shadow DOM, the input element's value will get formatted more often than it should, which results in unexpected behavior when typing.\n\nThe reason for this is [`MatTimepickerInput._hasFocus()`](https://github.com/angular/components/blob/443df2661fa3174bd2c854d9a094c8ade1b47446/src/material/timepicker/timepicker-input.ts#L408) making the assumption that the component will never be in the shadow DOM, doing a check that `inject(DOCUMENT).activeElement === inject(ElementRef).nativeElement`.\n\n`inject(DOCUMENT)` refers to the root document, so when the `MatTimepickerInput` component instance is in the shadow DOM, the check that `MatTimepickerInput._hasFocus()` is doing will never be `true`.\n\nThe comparison that should actually be done is `inject(ElementRef).nativeElement.getRootNode().activeElement === inject(ElementRef).nativeElement`.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-ucheqywm?file=src%2Fmain.ts\nSteps to reproduce:\n1. Focus on the input\n2. Try typing out \"12:30 PM\"\n3. On typing \"1\", nothing will be in the input.\n4. On typing \"2\", \"2\" will be in the input.\n5. On typing \":\", \"2:\" will be in the input.\n6. On typing \"3\", \"2:03 AM\" will be in the input.\n7. On typing \"0\", nothing will be in the input.\n\n\n### Expected Behavior\n\nThe expected behavior is typing \"12:30 PM\", and the \"12:30 PM\" option being selected.\n\n### Actual Behavior\n\n1. Focus on the input\n2. Try typing out \"12:30 PM\"\n3. On typing \"1\", nothing will be in the input.\n4. On typing \"2\", \"2\" will be in the input.\n5. On typing \":\", \"2:\" will be in the input.\n6. On typing \"3\", \"2:03 AM\" will be in the input.\n7. On typing \"0\", nothing will be in the input.\n\n### Environment\n\n- Angular: 19.2.2\n- CDK/Material: 19.2.3\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30641","RelatedDescription":"Open issue \"bug(TimepickerInput): Incorrect input behavior when component is in shadow DOM\" (#30641)"},{"Id":"2925686703","IsPullRequest":true,"CreatedAt":"2025-03-17T17:54:05","Actor":"andrewseguin","Number":"30640","RawContent":null,"Title":"fix(material/card): remove alternate token for container-color","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30640","RelatedDescription":"Closed or merged PR \"fix(material/card): remove alternate token for container-color\" (#30640)"},{"Id":"2924831827","IsPullRequest":false,"CreatedAt":"2025-03-17T16:07:04","Actor":"luthesebas","Number":"30637","RawContent":null,"Title":"bug(timepicker): Multiple overlays and host already has a portal attached","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nClicking outside a `Timepicker` enclosed by a `MatFormField` causes an error and multiple `Timepicker` overlays.\n\n```\nERROR Error: Host already has a portal attached\n    at throwPortalAlreadyAttachedError (portal.mjs:17:9)\n    at DomPortalOutlet.attach (portal.mjs:196:9)\n    at OverlayRef.attach\n```\n\n### Reproduction\n\n#### Error \"Host already has a portal attached\"\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-v6k1y4ci?file=src%2Fmain.ts\nSteps to reproduce:\n1. Open StackBlitz link\n3. Click into the `Timepicker` input (overlay should open upwards)\n4. Click right below the `Timepicker`. Just right below the `MatFormField` where hints and errors (would) appear\n5. Look at the browser console output\n\n#### Multiple overlays\n\nSteps to reproduce:\n1. Head to https://material.angular.io/components/timepicker/examples\n2. Scroll so that a timepicker is at the bottom of the browser window, which should cause the timepicker overlay to open upwards.\n3. Click into the `Timepicker` input (overlay should open upwards)\n4. Click right below the `Timepicker`. Just right below the `MatFormField` where hints and errors (would) appear\n5. Now there should be two `Timepicker` overlays\n6. Repeat step 4 as often as you like to create N overlays\n\n(no idea how to reproduce this behavior in StackBlitz/local)\n\nCode for reproduction\n```ts\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [DemoMaterialModule],\n  template: `\n    <mat-form-field>\n      <mat-label>Pick a time</mat-label>\n      <input matInput [matTimepicker]=\"picker\">\n      <mat-timepicker-toggle matIconSuffix [for]=\"picker\"/>\n      <mat-timepicker #picker/>\n    </mat-form-field>\n  `,\n  styles: `\n    :host {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      height: calc(100vh - 2rem);\n    }\n  `\n})\nexport class App {}\n```\n\n### Expected Behavior\n\n- No error\n- No multiple `Timepicker` overlays\n- The already existing overlay should be closed and not reopened\n\n### Actual Behavior\n\n- error \"Host already has a portal attached\"\n- Multiple `Timepicker` overlays (at leat at https://material.angular.io/components/timepicker/examples)\n- The already existing overlay gets closed and reopened\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.1\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30637","RelatedDescription":"Closed issue \"bug(timepicker): Multiple overlays and host already has a portal attached\" (#30637)"},{"Id":"2925080346","IsPullRequest":true,"CreatedAt":"2025-03-17T16:07:03","Actor":"crisbeto","Number":"30639","RawContent":null,"Title":"fix(material/timepicker): assertion error if reopened quickly","State":"closed","Body":"Fixes that the timepicker was throwing an error if it gets closed and reopened before change detection has had a chance to run.\r\n\r\nFixes #30637.","Url":"https://github.com/angular/components/pull/30639","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): assertion error if reopened quickly\" (#30639)"},{"Id":"2917934558","IsPullRequest":true,"CreatedAt":"2025-03-17T15:18:04","Actor":"andrewseguin","Number":"30628","RawContent":null,"Title":"fix(material/select): use flexible overlay dimensions","State":"closed","Body":"When the browser window is small, the select's listbox panel does not shrink in size, which causes options to become unreachable.\r\n\r\nWith flexible positioning, the overlay is constrained in height causing the panel to shrink as well, rendering all available options with scrolling\r\n\r\n## Example: Panel displayed underneath the select. \r\n### Observe that the Milk option was not fully visible when the panel is scrolled all the way down\r\nBefore:\r\n![image](https://github.com/user-attachments/assets/4a2b3f29-39ff-4dc1-bacf-ab2c6c0f4d23)\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/c2d37c2a-be13-49e2-bce2-b144f5ae58e3)\r\n\r\n## Example: Panel displayed above the select. \r\n#### Observe the None option was not at all visible when scrolled up\r\nBefore: \r\n![image](https://github.com/user-attachments/assets/f723ce44-7771-4479-a910-b0fb76800249)\r\nAfter:\r\n![image](https://github.com/user-attachments/assets/eb84bb49-09a0-4568-845c-2a621870216c)\r\n\r\n","Url":"https://github.com/angular/components/pull/30628","RelatedDescription":"Closed or merged PR \"fix(material/select): use flexible overlay dimensions\" (#30628)"},{"Id":"2908141285","IsPullRequest":false,"CreatedAt":"2025-03-17T14:50:29","Actor":"kenyerman","Number":"30614","RawContent":null,"Title":"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `mat-slider` with **range thumbs** (start and end thumbs) in a reactive form, resetting the form sets the control values to `null`. This results in:  \n\n1. The thumbs repositioning **to slice the range into equal parts**, despite their values being `null`.  \n2. A conflict with the initialization logic, where `null` values correctly position the thumbs **at the rangeâ€™s endpoints**.  \n\n##### Investigation  \n- On reset, the slider attempts to **divide the range into equal sections**.  \n- This behavior works fine for **single-thumb sliders**, but for **range sliders**, it introduces **rounding errors** (since the range is divided by 3, which becomes worse as the value of `steps` gets closer to `0`).  \n- As a result, multiple resets can produce **different thumb positions**, making the behavior inconsistent:  \n  - **Inconsistent with initialization** (where `null` places thumbs at the ends).  \n  - **Inconsistent with itself** (due to rounding errors). \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-ak9ciyht?file=src%2Fmain.ts\nSteps to reproduce:\n1. Click on `reset` button\n2. Notice the thumbs are trying to slice the range into 3 parts\n3. Click on `reset` button \n4. Notice the thumbs are getting into different positions\n\n\n### Expected Behavior\n\nWhen resetting the form, the thumbs should **match the initialization logic**:  \n  - If the control values are `null`, **both thumbs should be placed at the rangeâ€™s endpoints**.  \n  - The reset behavior should be **consistent and predictable**.  \n\n### Actual Behavior\n\nInstead of moving to the endpoints, the thumbs attempt to **slice the range into equal parts**, leading to:  \n  - Inconsistency with initialization (`null` values initially place thumbs at the rangeâ€™s ends).  \n  - Rounding errors when dividing the range, causing the reset position to change across multiple resets.  \n\n\n### Environment\n\n```\nAngular CLI: 18.2.8\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```","Url":"https://github.com/angular/components/issues/30614","RelatedDescription":"Closed issue \"bug(MatSlider): Inconsistent Reset Behavior for mat-slider with Range Thumbs in Reactive Forms\" (#30614)"},{"Id":"2913556358","IsPullRequest":true,"CreatedAt":"2025-03-17T14:50:27","Actor":"mistrykaran91","Number":"30621","RawContent":null,"Title":"fix(material/slider): handle null values in slider input","State":"closed","Body":"The slider values behaved inconsistently when we reset the formGroup. This MR will resolve that issue by setting `value` to default value when its `null`\r\n\r\nFixes #30614","Url":"https://github.com/angular/components/pull/30621","RelatedDescription":"Closed or merged PR \"fix(material/slider): handle null values in slider input\" (#30621)"},{"Id":"2924585402","IsPullRequest":false,"CreatedAt":"2025-03-17T13:05:59","Actor":"msgoloborodov","Number":"30636","RawContent":null,"Title":"Add backdrop to autocomplete overlay","State":"closed","Body":"mat-select has ovarlay with transparent backdrop, but mat-autocomplete hasn't.\nIt almost same components, and it should has same behavior.\n\n_getOverlayConfig method of MatAutocompleteTrigger should also return `{ hasBackdrop: true, backdropClass: 'cdk-overlay-transparent-backdrop' }`.\n\nhttps://github.com/angular/components/blob/b08860440abd596a174fa3a88699c68115eb38d2/src/material/autocomplete/autocomplete-trigger.ts#L903","Url":"https://github.com/angular/components/issues/30636","RelatedDescription":"Closed issue \"Add backdrop to autocomplete overlay\" (#30636)"},{"Id":"2925013364","IsPullRequest":true,"CreatedAt":"2025-03-17T13:02:50","Actor":"crisbeto","Number":"30638","RawContent":null,"Title":"feat(material/button): add support for tonal button","State":"open","Body":"Adds support for the tonal button appearance from the spec. It can be enabled by setting `matButton=\"tonal\"` on the button.\r\n\r\nFixes #28809.","Url":"https://github.com/angular/components/pull/30638","RelatedDescription":"Open PR \"feat(material/button): add support for tonal button\" (#30638)"},{"Id":"2919429526","IsPullRequest":true,"CreatedAt":"2025-03-17T05:57:12","Actor":"crisbeto","Number":"30630","RawContent":null,"Title":"refactor(material/button): simplify host bindings","State":"closed","Body":"Following up on https://github.com/angular/components/pull/30626#discussion_r1994327339, these changes move the button's shared host bindings into the base class and turn some classes that are added manually into host bindings.\r\n\r\nThe previous approach was only necessary with ViewEngine, because it wasn't doing inheritance of host bindings correctly and wasn't merging classes. These are no longer issues in Ivy.\r\n\r\nFinally, these changes allow us to take advantage of an upcoming framework feature: https://github.com/angular/angular/pull/60267","Url":"https://github.com/angular/components/pull/30630","RelatedDescription":"Closed or merged PR \"refactor(material/button): simplify host bindings\" (#30630)"},{"Id":"2921361627","IsPullRequest":true,"CreatedAt":"2025-03-16T17:48:15","Actor":"andrewseguin","Number":"30633","RawContent":null,"Title":"fix(material/core): include alternative tokens","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30633","RelatedDescription":"Closed or merged PR \"fix(material/core): include alternative tokens\" (#30633)"},{"Id":"2922026892","IsPullRequest":false,"CreatedAt":"2025-03-15T11:41:11","Actor":"worthy7","Number":"30635","RawContent":null,"Title":"feat(MatCalendar): Allow to turn focus off on change inputs to MatCalendar","State":"open","Body":"### Feature Description\n\nAdd some option so that MatCalendar does not take focus when it's inputs are changed.\n\n### Use Case\n\nThank you for making a very beautiful calendar/date picker for material ðŸ™‚\n\n\nI am using the calendar and dynamically deciding which dates are selectable or not from some backend service.\n\nWhen the user changes month, it requests the available dates, and updates the myFilter observable which produces a new function, which causes MatCalendar to recheck all the shown dates to see if it should disable that date or not.\n\nThis works great, but the issue is that sometimes the data is updated by other things - not month change - that are on a different part of the screen. The available dates will update, the observable pushes a new filter function.\n\nThe problem is that this causes the MatCalendar to take focus, and scrolls my user from wherever they are on the screen, I cannot allow this but don't see a way to solve it without disabling the filter all-together.","Url":"https://github.com/angular/components/issues/30635","RelatedDescription":"Open issue \"feat(MatCalendar): Allow to turn focus off on change inputs to MatCalendar\" (#30635)"},{"Id":"2921487714","IsPullRequest":true,"CreatedAt":"2025-03-14T23:37:58","Actor":"DavidACCarvalho","Number":"30634","RawContent":null,"Title":"fix(material/select): close panel on detach output event","State":"open","Body":"Enable detection of the detach output event on the panel of the mat-select component. This ensures that when CloseScrollStrategy is set via MAT_SELECT_SCROLL_STRATEGY, the panel correctly closes on scroll, updating the panelOpen property to false.\r\n\r\nFixes #30620","Url":"https://github.com/angular/components/pull/30634","RelatedDescription":"Open PR \"fix(material/select): close panel on detach output event\" (#30634)"},{"Id":"2917745646","IsPullRequest":true,"CreatedAt":"2025-03-14T17:33:19","Actor":"andrewseguin","Number":"30627","RawContent":null,"Title":"fix(material/paginator): prevent keyboard nav to disabled buttons","State":"closed","Body":"Previous and next buttons should not be in the tab order if they are disabled\r\n\r\nFixes b/395610398","Url":"https://github.com/angular/components/pull/30627","RelatedDescription":"Closed or merged PR \"fix(material/paginator): prevent keyboard nav to disabled buttons\" (#30627)"},{"Id":"2920625845","IsPullRequest":false,"CreatedAt":"2025-03-14T15:57:14","Actor":"gcocevar","Number":"30632","RawContent":null,"Title":"bug(mat-select): lose the focus when no selection is made by pressing ESC","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nWhen the mat-select is expanded, if user tries to close it with the \"ESC\" key without making a selection, the focus is lost and goes at the bottom of the page.\n\nTested in desktop environment with all major browsers and screen-readers.\n\n\n\n### Reproduction\n\nExample with the Angular latest version: [](https://next.material.angular.io/components/select/overview)\nSteps to reproduce:\nFor example with NVDA: \n- make sure that NVDA is not in the \"browse mode\"\n- using arrow keys, put the NVDA keyboard focus on the select (for example from the Angular Material's documentation: \"Favorite food\", you hear \"clickable  Favorite food  combo box  collapsed  opens list\"). Tip: in \"browse mode\" you can use the \"C\" key to jump to the next combo box in the page\n- make NVDA interact with the select (\"focus mode\") by pressing \"ENTER\" key or with the \"FORCED FOCUS MODE\" key (NVDA + space). You should hear a sound and NVDA speech again \"Favorite food combo box collapsed opens list\"\n- press again enter to expand the select panel to show all possible options\n- optionally, scroll options with down and up arrow keys\n- do not select any option and press the \"ESC\" key. You should hear a \"descending\" sound that means the NVDA \"focus mode\" was deactivated and you are now in \"browse mode\" again\n- using the up and down arrow keys to explore the page, you can see that the NVDA focus was moved down at the bottom of the page (at least for the NVDA virtual dom) and the select is still opened.\n\n\n\n\n### Expected Behavior\n\nFor reference take the native example where the select should collapse when pressing the \"ESC\" key and the screen-reader focus remains on the select element.\n\nNotice that in Angular Material v14 or v15, the correct behavior is the following:\nwhile the select is open and the screen-reader is in the focus mode, if you press the \"ESC\" key one time the select closes but the focus mode not. Afther that, if you press \"ESC\" again the NVDA focus mode will deactivate and the focus will be placed where it was before you started the interaction.\n\n### Actual Behavior\n\nSame as Reproduction\n\n### Environment\n\n- Angular: 16>\n- CDK/Material: Material\n- Browser(s): Chrome and Firefox (latest)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30632","RelatedDescription":"Open issue \"bug(mat-select): lose the focus when no selection is made by pressing ESC\" (#30632)"},{"Id":"2920190599","IsPullRequest":true,"CreatedAt":"2025-03-14T13:08:42","Actor":"mistrykaran91","Number":"30631","RawContent":null,"Title":"fix(material/autocomplete): allow overlay backdrop when opened","State":"open","Body":"Currently when we open the panel, backdrop is not allowed and is not inline with `mat-select`, `mat-menu`, etc. This fix will align autocomplete with those components\r\n\r\nFixes #30457","Url":"https://github.com/angular/components/pull/30631","RelatedDescription":"Open PR \"fix(material/autocomplete): allow overlay backdrop when opened\" (#30631)"},{"Id":"2910564045","IsPullRequest":false,"CreatedAt":"2025-03-14T12:09:39","Actor":"scarrasco-pgr","Number":"30615","RawContent":null,"Title":"bug(form-field): mdc-notched-outline__notch shows overlapping border","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf the form field is contained in a parent that contains the `transform` CSS property e.g. `transform: translate3d(40px, -38px, 0px);` then the notch shows an overlapping border. \n\n![Image](https://github.com/user-attachments/assets/c54e280a-8a0e-4d4f-bd6e-e5a5220eb455)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/hcnjyvfa?file=src%2Fexample%2Fcdk-drag-drop-root-element-example.html\nSteps to reproduce:\n1. Move the dialog around\n2. Adjust the zoom level\n\n\n### Expected Behavior\n\nFor the notch to not contain an overlapping border\n\n### Actual Behavior\n\nNotch contains an overlapping border\n\n### Environment\n\nAngular CLI: 19.2.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.2.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1902.0\n@angular-devkit/build-angular      19.2.0\n@angular-devkit/core               19.2.0\n@angular-devkit/schematics         19.2.0\n@angular/cdk                       19.2.1\n@angular/material                  19.2.1\n@angular/material-moment-adapter   19.2.1\n@schematics/angular                19.2.0\nrxjs                               7.4.0\ntypescript                         5.8.2\nzone.js                            0.15.0\n","Url":"https://github.com/angular/components/issues/30615","RelatedDescription":"Closed issue \"bug(form-field): mdc-notched-outline__notch shows overlapping border\" (#30615)"},{"Id":"2919409252","IsPullRequest":true,"CreatedAt":"2025-03-14T07:39:49","Actor":"devversion","Number":"30629","RawContent":null,"Title":"Initial PR for migrating to `rules_js`","State":"open","Body":"See individual commits","Url":"https://github.com/angular/components/pull/30629","RelatedDescription":"Open PR \"Initial PR for migrating to `rules_js`\" (#30629)"},{"Id":"2916650331","IsPullRequest":true,"CreatedAt":"2025-03-14T06:04:15","Actor":"crisbeto","Number":"30626","RawContent":null,"Title":"feat(material/button): allow appearance to be set dynamically","State":"closed","Body":"Adds the following features to the button:\r\n* Allows the appearance of a button to be set dynamically using the `matButton` input.\r\n* Aligns the terminology with the M3 spec. Currently the names are derived from an old spec.\r\n* Adds the ability to set the default appearance for buttons.\r\n* Adds a `matIconButton` selector to the icon button for consistency.\r\n* Adds a `matFab` selector to the FAB for consistency.\r\n* Adds a `matMiniFab` selector to the mini FAB for consistency.\r\n\r\nAll of these changes are backwards-compatible and allow us to evolve the button in the future.\r\n\r\nBREAKING CHANGE:\r\n* `ButtonVariant` which is returned by `MatButtonHarness.getVariant` no longer includes the appearance of the button. Use `MatButtonHarness.getAppearance` instead.\r\n\r\nFixes #15367.\r\nFixes #29841.","Url":"https://github.com/angular/components/pull/30626","RelatedDescription":"Closed or merged PR \"feat(material/button): allow appearance to be set dynamically\" (#30626)"},{"Id":"2914672502","IsPullRequest":true,"CreatedAt":"2025-03-13T20:32:30","Actor":"wagnermaciel","Number":"30625","RawContent":null,"Title":"fix(cdk-experimental/ui-patterns): small fixes for internal compatibiâ€¦","State":"closed","Body":"â€¦lity","Url":"https://github.com/angular/components/pull/30625","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/ui-patterns): small fixes for internal compatibiâ€¦\" (#30625)"},{"Id":"2914423966","IsPullRequest":true,"CreatedAt":"2025-03-12T15:53:40","Actor":"crisbeto","Number":"30624","RawContent":null,"Title":"docs: release notes for the v19.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30624","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.3 release\" (#30624)"},{"Id":"2914414785","IsPullRequest":true,"CreatedAt":"2025-03-12T15:51:16","Actor":"crisbeto","Number":"30623","RawContent":null,"Title":"Bump version to \"v19.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30623","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.3\" with changelog.\" (#30623)"},{"Id":"2914381273","IsPullRequest":true,"CreatedAt":"2025-03-12T15:39:32","Actor":"crisbeto","Number":"30622","RawContent":null,"Title":"Bump version to \"v20.0.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30622","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.1\" with changelog.\" (#30622)"},{"Id":"2913104664","IsPullRequest":true,"CreatedAt":"2025-03-12T14:29:46","Actor":"crisbeto","Number":"30619","RawContent":null,"Title":"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM","State":"closed","Body":"There are a few places where the autocomplete was checking if it has focus which were breaking down when inside the shadow DOM, because `document.activeElement` will point to the closest shadow root.\r\n\r\nThese changes consolidate the places where we check for focus and use our utility for resolving the focused element through shadow boundaries.\r\n\r\nFixes #30611.","Url":"https://github.com/angular/components/pull/30619","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): incorrectly resolving focused element in shadow DOM\" (#30619)"},{"Id":"2913491987","IsPullRequest":false,"CreatedAt":"2025-03-12T10:33:52","Actor":"laliconfigcat","Number":"30620","RawContent":null,"Title":"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1.x\n\n### Description\n\nI asked for a new feature recently, introducing the MAT_TIMEPICKER_SCROLL_STRATEGY: https://github.com/angular/components/issues/30421\n\nIt has been implemented, but there was a bug, after opening the Timepicker and closing it via scroll (with a close scroll strategy), the Timepicker could not be opened again: https://github.com/angular/components/issues/30558\n\nThat issue was solved in 19.2.x and it is working fine.\n\nBut in 19.2.x, now the Select is having the same issue when having a close scroll strategy as MAT_SELECT_SCROLL_STRATEGY.\n```\nconst closeScrollStrategyFactory = (overlay: Overlay): (() => CloseScrollStrategy) => {\n  return () => overlay.scrollStrategies.close();\n};\n```\n\n\nAfter opening the select, and closing it via scrolling on the page, the select cannot be opened again.\nI'm not sure if the issue has anything to do with the TimePicker.\n\nWe have the same scroll strategy for MAT_DATEPICKER_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY and MAT_MENU_SCROLL_STRATEGY, all the others are working fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/timepicker-scroll-strategy-issue-cjulrhcw?file=src%2Fmain.ts\nSteps to reproduce:\n1. Open the select.\n2. Scroll on the page.\n3. The select should be closed.\n4. Try opening the select again, it won't work\n\n\n### Expected Behavior\n\nWe should be able to reopen the select after it is closed with a scroll strategy.\n\n### Actual Behavior\n\nThe select cannot be reopened.\n\n### Environment\n\n- Angular: 19.2.x\n- CDK/Material: 19.2.x\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30620","RelatedDescription":"Open issue \"bug(Select): MAT_SELECT_SCROLL_STRATEGY issue\" (#30620)"},{"Id":"2911913116","IsPullRequest":true,"CreatedAt":"2025-03-12T07:36:29","Actor":"devversion","Number":"30618","RawContent":null,"Title":"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30618","RelatedDescription":"Closed or merged PR \"[19.2.x] build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30618)"},{"Id":"2911894445","IsPullRequest":true,"CreatedAt":"2025-03-11T21:20:57","Actor":"devversion","Number":"30617","RawContent":null,"Title":"build: update `@angular/bazel` to support `.d.ts` code splitting","State":"closed","Body":"This will unblock the fixit where we'll introduce relative imports that currently (without this commit) result in duplicated `d.ts` declarations between entry-points.","Url":"https://github.com/angular/components/pull/30617","RelatedDescription":"Closed or merged PR \"build: update `@angular/bazel` to support `.d.ts` code splitting\" (#30617)"},{"Id":"2910701103","IsPullRequest":false,"CreatedAt":"2025-03-11T14:09:13","Actor":"TimUnderhay","Number":"30616","RawContent":null,"Title":"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav","State":"open","Body":"### Documentation Feedback\n\nThe sidenav component's \"Autosize sidenav\" example is incorrect: it uses mat-drawer rather than sidenav.\n\n![Image](https://github.com/user-attachments/assets/1075bcb0-9c69-43f5-84bc-5c219a0c93e7)\n\n### Affected documentation page\n\nhttps://material.angular.io/components/sidenav/examples","Url":"https://github.com/angular/components/issues/30616","RelatedDescription":"Open issue \"docs-bug(Sidenav): Autosize sidenav example uses drawer instead of sidenav\" (#30616)"},{"Id":"2908042706","IsPullRequest":true,"CreatedAt":"2025-03-10T18:04:51","Actor":"jamOne-","Number":"30613","RawContent":null,"Title":"refactor(multiple): eliminate usages of `any` type (batch 2)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30613","RelatedDescription":"Open PR \"refactor(multiple): eliminate usages of `any` type (batch 2)\" (#30613)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-18T03:30:03.5373496Z","RunDurationInMilliseconds":2018}