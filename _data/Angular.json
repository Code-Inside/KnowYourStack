{"Data":{"Angular-Issues":{"Issues":[{"Id":"2066626342","IsPullRequest":true,"CreatedAt":"2024-01-05T02:17:24","Actor":"caseycolvell","Number":"53803","RawContent":null,"Title":"53771 issue fix","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: [https://github.com/angular/angular/issues/53771](https://github.com/angular/angular/issues/53771)\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe documentation example returns the correct method.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53803","RelatedDescription":"Open PR \"53771 issue fix\" (#53803)"},{"Id":"2066599278","IsPullRequest":true,"CreatedAt":"2024-01-05T01:48:58","Actor":"AndrewKushnir","Number":"53802","RawContent":null,"Title":"[Test-only] Local compilation mode changes","State":"closed","Body":"This draft PR contains commits from https://github.com/angular/angular/pull/53543 and https://github.com/angular/angular/pull/53591. This PR is needed for testing purposes only, do no review.","Url":"https://github.com/angular/angular/pull/53802","RelatedDescription":"Closed or merged PR \"[Test-only] Local compilation mode changes\" (#53802)"},{"Id":"2066536245","IsPullRequest":true,"CreatedAt":"2024-01-05T00:16:51","Actor":"reafernandes10","Number":"53801","RawContent":null,"Title":"docs(testing): Fix the escaped characters visible during search","State":"open","Body":"Update the Query for the <h1> in Component testing scenarios to avoid escaped characters during search\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSearch for section titles with HTML markup displays escaped characters.\r\n\r\nIssue Number: #53741 \r\n\r\n\r\n## What is the new behavior?\r\nSearch for section titles with HTML markup DOES NOT displays escaped characters #53741\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53801","RelatedDescription":"Open PR \"docs(testing): Fix the escaped characters visible during search\" (#53801)"},{"Id":"2066271990","IsPullRequest":true,"CreatedAt":"2024-01-04T21:56:26","Actor":"mgechev","Number":"53798","RawContent":null,"Title":"docs: remove state of js 2023 banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/53798","RelatedDescription":"Closed or merged PR \"docs: remove state of js 2023 banner\" (#53798)"},{"Id":"2066380605","IsPullRequest":false,"CreatedAt":"2024-01-04T21:47:33","Actor":"d-koppenhagen","Number":"53800","RawContent":null,"Title":"Docs: don't recommend using `$index` as a good default","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nIn the docs (angular.io / angular.dev), the following sentence is written:\r\n\r\n>  Because of the potential for poor performance, the track expression is required for the @for loops. When in doubt, using track $index is a good default.\r\n\r\nSee references: https://github.com/search?q=repo%3Aangular%2Fangular+%22is+a+good+default.%22&type=code\r\n\r\nIn my opinion tracking the `$index` isn't a good tracking criteria at all since the index may changes and in conclusion this can result in unexpected behavior.\r\n\r\nI created a Stackblitz Demo project to simulate this behavor:\r\nhttps://stackblitz.com/edit/angular-track-list-comp?file=src%2Fmain.ts\r\n\r\n\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/api/core/@for\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nhttps://github.com/search?q=repo%3Aangular%2Fangular+%22is+a+good+default.%22&type=code\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nThe recommendation should be changed.\r\nThere are also situations which should be discussed such as how to handle tracking a non-unique string array?\r\ne.g. `['apple', 'pea', 'orange', 'pea']`\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53800","RelatedDescription":"Open issue \"Docs: don't recommend using `$index` as a good default\" (#53800)"},{"Id":"2066360037","IsPullRequest":true,"CreatedAt":"2024-01-04T21:28:48","Actor":"atscott","Number":"53799","RawContent":null,"Title":"refactor(router): Update integration tests to cover navigation and history API","State":"open","Body":"This commit updates the router integration tests to cover both the classic History and the new Navigation API. There is more work to be done here, but this commit works to prove the efficacy of the `FakeNavigation` implementation.\r\n","Url":"https://github.com/angular/angular/pull/53799","RelatedDescription":"Open PR \"refactor(router): Update integration tests to cover navigation and history API\" (#53799)"},{"Id":"2066217521","IsPullRequest":false,"CreatedAt":"2024-01-04T19:28:03","Actor":"nkosi23","Number":"53797","RawContent":null,"Title":"DOM nodes duplicated / not removed ONLY in production configuration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore, forms\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI am facing a disturbing and unexpected issue just as I need to push code in production asap.  My application works perfectly fine using the development configuration, however in the production configuration I see many issues boiling down to the fact that after change detection some DOM nodes are not removed from the DOM while they should. \r\n\r\nI see things like the below at random places of my application:\r\n\r\n![image](https://github.com/angular/angular/assets/6731436/a4692eba-c6f8-48c3-b7e3-229f01d61a67)\r\n\r\n```html\r\nif (selectedPeriodDurationInMonths > 1) {\r\n        <span i18n>months</span>\r\n    } @else {\r\n        <span i18n>month</span>\r\n    }\r\n```\r\n\r\n(yeah I know there is a dedicated syntax for pluralization but this is just one of many examples)\r\n\r\n![image](https://github.com/angular/angular/assets/6731436/4d0de922-a801-4703-89ef-6b9fc0cc9bd6)\r\n\r\n```html\r\n  @if (!isUKCompany) {\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"EUR\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>Euros</span></label>\r\n      </div>\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"USD\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>American Dollars</span></label>\r\n      </div>\r\n  }\r\n  @if (isUKCompany) {\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      inputId=\"ukCurrency\"\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"GBP\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>British Pound</span></label>\r\n      </div>\r\n}\r\n```\r\n\r\nBasically controls are not being removed from the DOM while they should. Does anyone have any idea on what could be the cause? I initially suspected the *ngIf syntax, but I had one page using the new control flow syntax on its forms, and the other one using the old directives and both were having this problem.\r\n\r\nThe fact that the there can be such radically different behaviors between development and build configurations is something I really dislike with Angular. I've already been beaten by these differences in the past and this is not something one would except. In other stacks, the only thing that happens when a default production configuration is switch ON is performance improvements.\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\nThere is no error in the development console\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.9\r\nNode: 20.8.1\r\nPackage Manager: npm 10.1.0\r\nOS: linux x64\r\n\r\nAngular: 17.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.9\r\n@angular-devkit/build-angular   17.0.9\r\n@angular-devkit/core            17.0.9\r\n@angular-devkit/schematics      17.0.9\r\n@angular/cli                    17.0.9\r\n@schematics/angular             17.0.9\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nAngular.json:\r\n\r\n```json\r\n\"production\": {\r\n    \"optimization\": {\r\n    \"scripts\": true,\r\n    \"styles\": {\r\n        \"minify\": true,\r\n        \"inlineCritical\": false\r\n    },\r\n    \"fonts\": true\r\n    },\r\n    \"outputHashing\": \"all\",\r\n    \"localize\": [\"en\"]\r\n},\r\n\"development\": {\r\n    \"buildOptimizer\": true,\r\n    \"optimization\": true,\r\n    \"vendorChunk\": true,\r\n    \"extractLicenses\": false,\r\n    \"sourceMap\": true,\r\n    \"namedChunks\": true,\r\n    \"localize\": [\"en\"]\r\n}\r\n```\r\n_No response_","Url":"https://github.com/angular/angular/issues/53797","RelatedDescription":"Open issue \"DOM nodes duplicated / not removed ONLY in production configuration\" (#53797)"},{"Id":"2066129041","IsPullRequest":false,"CreatedAt":"2024-01-04T18:20:50","Actor":"ShacharHarshuv","Number":"53796","RawContent":null,"Title":"Unit test a service that uses effect and injects ChangeDetectorRef","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm not sure if that's actually a bug or if I just don't understand how I am supposed to do it. I couldn't find any related information in the docs. \r\n\r\nThe problem is when trying to unit test a service that looks like this:\r\n\r\n```ts\r\n@Injectable()\r\nexport class MyService {\r\n  readonly eff = effect(() => {});\r\n\r\n  constructor(cdf: ChangeDetectorRef) {}\r\n}\r\n```\r\n\r\nWhen doing the basic setup:\r\n\r\n```ts\r\ndescribe('MyService', () => {\r\n  let service: MyService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [MyService],\r\n    });\r\n    service = TestBed.inject(MyService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});\r\n```\r\nYou get the exception: \r\n```\r\nNullInjectorError: R3InjectorError(DynamicTestModule)[MyService -> ChangeDetectorRef -> ChangeDetectorRef]: \r\n  NullInjectorError: No provider for ChangeDetectorRef!\r\n```\r\n\r\nMy understanding is that you're supposed to create your own mock for the ChangeDetectorRef like so:\r\n\r\n```ts\r\nproviders: [\r\n  {\r\n    provide: ChangeDetectorRef,\r\n    useValue: {\r\n      detectChanges: () => {},\r\n    },\r\n  },\r\n  MyService,\r\n]\r\n```\r\nHowever, when you do that, you get this cryptic exception:\r\n\r\n```\r\nTypeError: Cannot read properties of undefined (reading '2')\r\n```\r\n\r\nI managed to narrow it down to line 293 in effect.ts: `if (!cdr || !(cdr._lView[FLAGS] & LViewFlags.FirstLViewPass)) {`, where the `ChangeDetectorRef` is being injected, but it gets the mock instead, so `cdr._lView` is undefined, which is not properly handled. \r\n\r\nI believe that's a bug in the `effect` function, as it should allow consumers to mock `ChangeDetectorRef` without breaking (it works if it's not provided at all...)\r\n\r\nIf this is the intended behavior, please tell me how am I supposed to fix it from my side.\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Cannot read properties of undefined (reading '2')\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0-next.2\r\nNode: 18.13.0\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0-next.2+sha-9d7d136\r\n@angular-devkit/architect-cli   0.1700.7\r\n@angular-devkit/build-angular   17.1.0-next.2+sha-9d7d136\r\n@angular-devkit/core            17.1.0-next.2+sha-9d7d136\r\n@angular-devkit/schematics      17.1.0-next.2\r\n@angular/animations             17.0.7\r\n@angular/build-tooling          0.0.0-2ec28a960001deacf7a54952e5dcfbbdd810deca\r\n@angular/cdk                    17.1.0-next.2\r\n@angular/cli                    17.1.0-next.2\r\n@angular/docs                   0.0.0-e00986799c9f15a3d8f264fdca07de8ef338c3ad\r\n@angular/material               17.1.0-next.2\r\n@angular/ng-dev                 <error>\r\n@bazel/bazelisk                 1.18.0\r\n@bazel/buildifier               6.3.3\r\n@bazel/concatjs                 5.8.1\r\n@bazel/esbuild                  5.8.1\r\n@bazel/ibazel                   v0.16.2\r\n@bazel/jasmine                  5.8.1\r\n@bazel/protractor               5.8.1\r\n@bazel/rollup                   5.8.1\r\n@bazel/runfiles                 5.8.1\r\n@bazel/terser                   5.8.1\r\n@bazel/worker                   5.8.1\r\n@schematics/angular             17.1.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53796","RelatedDescription":"Open issue \"Unit test a service that uses effect and injects ChangeDetectorRef\" (#53796)"},{"Id":"2065838115","IsPullRequest":false,"CreatedAt":"2024-01-04T15:16:42","Actor":"preda7or","Number":"53795","RawContent":null,"Title":"Add typing for NgElement Outputs","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nelements\r\n\r\n### Description\r\n\r\nI was experimenting with Angular's custom elements. The [documentation](https://angular.io/guide/elements) mentions how attributes/inputs of such elements could be typed,\r\n```typescript\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'my-dialog': NgElement & WithProperties<{content: string}>;\r\n    'my-other-element': NgElement & WithProperties<{foo: 'bar'}>;\r\n    …\r\n  }\r\n}\r\n```\r\nbut it does not mention how the events/outputs could be typed.\r\n\r\n### Proposed solution\r\n\r\nI would propose to either add (similar to the WithProperties) a WithEvents/WithOutputs type or even better to add a wrapper type that does the merging of addEventListener signatures better:\r\n\r\nUsing the `type-fest` library my solution is \r\n```typescript\r\nimport { Merge, UnionToIntersection } from \"type-fest\";\r\nimport { NgElement, WithProperties } from \"@angular/elements\";\r\n\r\nexport type TypedNgElement<Inputs extends Record<string, any>, Outputs extends Record<string, any> = {}> = Merge<\r\n  NgElement,\r\n  WithProperties<Inputs> &\r\n    UnionToIntersection<\r\n      {\r\n        [K in keyof Outputs]: {\r\n          addEventListener(type: K, listener: (event: CustomEvent<Outputs[K]>) => void, options?: boolean | AddEventListenerOptions): void;\r\n        };\r\n      }[keyof Outputs]\r\n    >\r\n>;\r\n```\r\n\r\nThat can later be used as follows:\r\n```typescript\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"my-custom-element-selector\": TypedNgElement<\r\n      {\r\n        inputOne: SomeType;\r\n        inputTwo?: boolean;\r\n      },\r\n      {\r\n        outputOne: SomeType;\r\n        outputTwo: void;\r\n      }\r\n    >;\r\n  }\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\nI see alternatives (as I mentioned in the solution) in the way the type is introduced.","Url":"https://github.com/angular/angular/issues/53795","RelatedDescription":"Open issue \"Add typing for NgElement Outputs\" (#53795)"},{"Id":"2065504565","IsPullRequest":false,"CreatedAt":"2024-01-04T11:42:39","Actor":"manuks","Number":"53794","RawContent":null,"Title":"broken link to lifecycle hooks","State":"open","Body":"### Describe the problem that you experienced\n\nIt shows \"page not found\" on the lifecycle hooks link. Instead of using the link https://angular.dev/guide/components/lifecycle it is using the link https://angular.dev/guide/lifecycle-hooks\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/learn-angular\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/570393/c42b1d08-835e-4212-a393-d001968b330b)\r\nThe link to the `Lifecycle Hooks` in the popup above `@Component` decorator is pointing to https://angular.dev/guide/lifecycle-hooks which shows as below\r\n![image](https://github.com/angular/angular/assets/570393/686431bd-17d4-401a-8956-0efeeff6214b)\r\n\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nThe link should be https://angular.dev/guide/components/lifecycle\n```\n","Url":"https://github.com/angular/angular/issues/53794","RelatedDescription":"Open issue \"broken link to lifecycle hooks\" (#53794)"},{"Id":"2065324411","IsPullRequest":false,"CreatedAt":"2024-01-04T09:44:38","Actor":"NithinProdapt","Number":"53793","RawContent":null,"Title":"14.2.13 and 17.0.9 Vulnerability Report - Node.js (node-pkg) - CVE-2022-25883","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n\r\nI have identified a vulnerability in the Angular v14 an v17 application related to the Node.js (node-pkg) package. The vulnerability is categorized as CVE-2022-25883, with a severity level of MEDIUM. The affected library is \"semver\" as specified in the package.json file.\r\n\r\nVulnerability Details:\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nStatus: Fixed\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)\r\n\r\nI recommend that the Angular team investigates and addresses this vulnerability promptly to ensure the security of the application. Please review the provided details and take appropriate actions to mitigate the risk associated with this security issue.Your timely guidance on the recommended version and any necessary steps for a secure migration would be immensely valuable.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nIN Angular CLI: 14.2.13\r\n\r\nVulnerability Details:\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nStatus: Fixed\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: CVE-2022-25883\r\n\r\n\r\nAngular CLI: 17.0.9\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\n\r\nVulnerability_issue:\r\nLibrary: axios (package.json)\r\nVulnerability: CVE-2023-45857\r\nSeverity: MEDIUM\r\nInstalled Version: 0.21.4\r\nFixed Version: 1.6.0\r\nTitle: axios: exposure of confidential data stored in cookies\r\nReference: CVE-2023-45857\r\nVulnerability 2:\r\n-------------------------------------------------------------\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: CVE-2022-25883\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.13\r\nNode: 14.18.0\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\n AND\r\n\r\nAngular CLI: 17.0.9\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\nOS: linux x64\r\n\r\nAngular: 17.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.9\r\n@angular-devkit/build-angular   16.2.11\r\n@angular-devkit/core            17.0.9\r\n@angular-devkit/schematics      17.0.9\r\n@angular/cli                    17.0.9\r\n@angular/ssr                    17.0.9\r\n@schematics/angular             17.0.9\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\nThe current state of our project security is critical, and I am eager to collaborate with your team to implement the necessary measures promptly. Your swift response and guidance in resolving these issues are highly appreciated.\r\nYour timely guidance on the recommended version and any necessary steps for a secure migration would be immensely valuable.","Url":"https://github.com/angular/angular/issues/53793","RelatedDescription":"Open issue \"14.2.13 and 17.0.9 Vulnerability Report - Node.js (node-pkg) - CVE-2022-25883\" (#53793)"},{"Id":"2065303492","IsPullRequest":false,"CreatedAt":"2024-01-04T09:34:59","Actor":"dr-ananthakrishna","Number":"53791","RawContent":null,"Title":"NavigationEnd event not firing on constructor","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHi,\r\nI am using the following snippet for performing a check in a route, it goes like:\r\n```javascript\r\nconst routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n       console.log('here');\r\n        // Perform an operation     \r\n      }\r\n});\r\n```\r\nThis is inside a `constructor`. But the event is not firing on first load. It was happening till my Angular version was 11, now after upgrade to 15, it stopped.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.10\r\nNode: 16.17.0\r\nPackage Manager: npm 8.15.0\r\nOS: darwin x64\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53791","RelatedDescription":"Closed issue \"NavigationEnd event not firing on constructor\" (#53791)"},{"Id":"2065305767","IsPullRequest":false,"CreatedAt":"2024-01-04T09:31:45","Actor":"axos88","Number":"53792","RawContent":null,"Title":"Ability to call constructors within a template","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler, core\n\n### Description\n\nI'd like to be able to do something like:\r\n\r\n```\r\n  <button (onClick)=\"myHandler(new Foo(42))\"></button>\r\n```  \n\n### Proposed solution\n\nSupport the new keyword in the template language\n\n### Alternatives considered\n\nI tried `Foo.constructor(42)`, `Foo.prototype.constructor(42)`, `Foo.constructor.call(42)`, `Foo.prototype.constructor.call(42)`, but nothing seems to work.","Url":"https://github.com/angular/angular/issues/53792","RelatedDescription":"Open issue \"Ability to call constructors within a template\" (#53792)"},{"Id":"2064834645","IsPullRequest":false,"CreatedAt":"2024-01-04T09:26:08","Actor":"markgoho","Number":"53787","RawContent":null,"Title":"page linked in roadmap doesn't exist (Try Inject)","State":"closed","Body":"### Describe the problem that you experienced\n\nWent to the [Angular Roadmap](https://angular.dev/roadmap) page, tried to click \"Try Inject\" at the bottom which led to https://angular.dev/di\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/di\n\n### Describe what you were looking for in the documentation\n\nInformation about the inject function\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53787","RelatedDescription":"Closed issue \"page linked in roadmap doesn't exist (Try Inject)\" (#53787)"},{"Id":"2065096089","IsPullRequest":false,"CreatedAt":"2024-01-04T09:13:17","Actor":"pawangit-hub","Number":"53789","RawContent":null,"Title":"Pattern(/^[^+%{}~?^:#!|=*;,\\[\\]<>\"'`\\¿\\-]*$/) not accepting chars x,f,b on prod build while working on dev build for Validators","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI have Angular project with the following pattern with a file app.component.ts which is like as follows and I'm using angular validator version \"@angular/forms\": \"^14.2.0\" :\r\n\r\n`import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n[ Validators.required, Validators.pattern(/^[^+%{}~?^:#!|=*;,[]<>\"'\\¿\\-]*$/), Validators.maxLength(64) ]` \r\n\r\nAnd my html file as app.component.html : \r\n\r\n`<form [formGroup]=\"myForm\"> <label for=\"name\">Name:</label> <input type=\"text\" id=\"name\" formControlName=\"name\" />\r\n<div *ngIf=\"myForm.get('name')?.hasError('required')\"> Name is required. </div>\r\n<div *ngIf=\"myForm.get('name')?.hasError('pattern')\"> Invalid characters in the name. </div>\r\n<div *ngIf=\"myForm.get('name')?.hasError('maxlength')\"> Name should not exceed 64 characters. </div> </form> `\r\n\r\nHere's the example of Angular 14.2.0 which is giving us error on production build:\r\n![Angular 14 2 0 failed validation on production build](https://github.com/angular/angular/assets/155613576/e2a48b02-a726-4666-bdca-7738d96ef3c4)\r\n\r\nHere's the example of Angular 10.2.0 which is working fine on production build:\r\n![Angular version 10 2 0 working example for production build](https://github.com/angular/angular/assets/155613576/f984a312-8248-454b-890c-a70dc4af77ba)\r\n\r\nThis pattern is NOT accepting x,f,b characters on production build in case of Angular version 14.2.0 while same is working on dev build for validator framework. The Angular version 10.2.0 is accepting x,f,b characters and is working fine on both production build and dev build.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nThis pattern is NOT accepting x,f,b characters on production build in case of Angular version 14.2.0 while same is working on dev build for validator framework. The Angular version 10.2.0 is accepting x,f,b characters and is working fine on both production build and dev build.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n\"dependencies\": {\r\n    \"@angular/animations\": \"^14.2.0\",\r\n    \"@angular/common\": \"^14.2.0\",\r\n    \"@angular/compiler\": \"^14.2.0\",\r\n    \"@angular/core\": \"^14.2.0\",\r\n    \"@angular/forms\": \"^14.2.0\",\r\n    \"@angular/platform-browser\": \"^14.2.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^14.2.0\",\r\n    \"@angular/router\": \"^14.2.0\",\r\n    \"rxjs\": \"~7.5.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^14.2.10\",\r\n    \"@angular/cli\": \"~14.2.10\",\r\n    \"@angular/compiler-cli\": \"^14.2.0\",\r\n    \"@types/jasmine\": \"~4.0.0\",\r\n    \"jasmine-core\": \"~4.3.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.0.0\",\r\n    \"typescript\": \"~4.7.2\"\r\n  }\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nIt is the clear case of information leakage which can be utilized by attacker to filter the data.\r\n\r\nPotential attackers with knowledge of the validation pattern used in the Angular application could deliberately not considered following characters (such as 'x', 'f', 'b') to enter sensitive string e.g., username etc.\r\n\r\nBy this validator gap, they can easily filter out the usernames of the organization and they can exploit further because these are very generic characters so a vast amount of data can be filtered easily by attacker.\r\n","Url":"https://github.com/angular/angular/issues/53789","RelatedDescription":"Closed issue \"Pattern(/^[^+%{}~?^:#!|=*;,\\[\\]<>\"'`\\¿\\-]*$/) not accepting chars x,f,b on prod build while working on dev build for Validators\" (#53789)"},{"Id":"2065256114","IsPullRequest":false,"CreatedAt":"2024-01-04T09:06:04","Actor":"kklocker","Number":"53790","RawContent":null,"Title":"Link to \"try out inject\"  results in pagenotfound","State":"closed","Body":"### Describe the problem that you experienced\n\nclick the \"try out inject\" link on https://angular.dev/roadmap, which links to https://angular.dev/di\r\n![image](https://github.com/angular/angular/assets/25065744/87f6826d-ff62-4ea6-87b1-0a0fcb23171a)\r\nResults in:\r\n![image](https://github.com/angular/angular/assets/25065744/67409fc3-bded-4ae2-be23-06d4c11dc834)\r\n\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/roadmap\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\nRead the blog here -> clicked roadmap\r\nhttps://blog.angular.io/angular-developer-survey-2023-86372317c95f\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nMicrosoft Edge 120.0.2210.91 (Official build) (64-bit) \r\nWindows 11\n```\n\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53790","RelatedDescription":"Closed issue \"Link to \"try out inject\"  results in pagenotfound\" (#53790)"},{"Id":"2064969719","IsPullRequest":false,"CreatedAt":"2024-01-04T04:10:20","Actor":"KostaD02","Number":"53788","RawContent":null,"Title":"Navigation scrollbar issue on IOS 17.1.2","State":"open","Body":"### Describe the problem that you experienced\n\nThere is a scroll issue on the [Angular dev website](https://angular.dev). Mostly, similar visual bugs appear on iOS mobile. To fully understand what the issue is, please check the video.\r\n\r\nhttps://github.com/angular/angular/assets/68782786/1db82eae-00f9-47e1-9a3e-81c4b2391aed\r\n\r\nThere is 2 UI bug:\r\n\r\n1. couldn't see all links as shown in video\r\n2. there is small gap in navigations (check the image)\r\n\r\n![Capture](https://github.com/angular/angular/assets/68782786/9848f648-87cf-49af-82e8-9cb4cc23f039)\r\n\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/overview\n\n### Describe what you were looking for in the documentation\n\nNothing just were browsing\n\n### Describe the actions that led you to experience the problem\n\nAlready demonstrated in the video\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nIphone 13 | IOS 17.1.2\n```\n\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53788","RelatedDescription":"Open issue \"Navigation scrollbar issue on IOS 17.1.2\" (#53788)"},{"Id":"2064815609","IsPullRequest":false,"CreatedAt":"2024-01-04T00:20:56","Actor":"LMS5413","Number":"53786","RawContent":null,"Title":"An unhandled exception occurred","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi! Im trying usage angular js but this error appears An unhandled exception occurred: require() of ES Module dir\\node_modules\\strip-ansi\\index.js from dir\\node_modules\\ora\\index.js not supported.\r\nInstead change the require of dir\\node_modules\\strip-ansi\\index.js in dir\\node_modules\\ora\\index.js to a dynamic import() which is available in all CommonJS modules.\r\nThis error appears when install any modules.\n\n### Please provide a link to a minimal reproduction of the bug\n\nInstall any packages.\n\n### Please provide the exception or error you saw\n\n```true\nAn unhandled exception occurred: require() of ES Module dir\\node_modules\\strip-ansi\\index.js from dir\\node_modules\\ora\\index.js not supported.\r\nInstead change the require of dir\\node_modules\\strip-ansi\\index.js in dir\\node_modules\\ora\\index.js to a dynamic import() which is available in all CommonJS modules.\r\nThis error appears when install any modules.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.2\r\nNode: 18.18.2\r\nPackage Manager: yarn 1.22.18\r\nOS: win32 x64\r\n\r\nAngular: 17.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.9\r\n@angular-devkit/build-angular   17.0.9\r\n@angular-devkit/core            17.0.9\r\n@angular-devkit/schematics      17.0.9\r\n@angular/cli                    17.0.9\r\n@angular/ssr                    17.0.9\r\n@schematics/angular             17.0.9\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53786","RelatedDescription":"Open issue \"An unhandled exception occurred\" (#53786)"},{"Id":"2064716583","IsPullRequest":true,"CreatedAt":"2024-01-03T22:15:28","Actor":"NurRehman","Number":"53785","RawContent":null,"Title":"docs(docs-infra): wrong URL for Unicode CLDR fixed","State":"open","Body":"fixes wrong URLs for Unicodde CLDR\r\n\r\nFixes #53734\r\n\r\n\r\n## PR Type\r\nPlease check the one that applies to this PR using \"x\".\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nPlease describe the current behavior that you are modifying, or link to a relevant issue.\r\n\r\nIssue Number: #53734\r\n\r\n\r\n## What is the new behavior?\r\nNow clicking on the links will route to the correct URLs instead of 404\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53785","RelatedDescription":"Open PR \"docs(docs-infra): wrong URL for Unicode CLDR fixed\" (#53785)"},{"Id":"2064660073","IsPullRequest":true,"CreatedAt":"2024-01-03T21:17:49","Actor":"atscott","Number":"53784","RawContent":null,"Title":"feat(router): Add transient info to RouterLink input","State":"open","Body":"This is a follow up to https://github.com/angular/angular/commit/5c1d4410298e20cb03d7a1ddf7931538b6a181b4 which added the `info` property to navigation requests. `RouterLink` now supports passing that transient navigation info to the navigation request.\r\n\r\nThis info object can be anything and doesn't have to be serializable.\r\nOne use-case might be for passing the element that was clicked. This\r\nmight be useful for something like view transitions. In the \"animating\r\nwith javascript\" example from the blog (https://stackblitz.com/edit/stackblitz-starters-cklnkm)\r\nthose links could have done this instead of needing to create a separate\r\ndirective that tracks clicks.\r\n","Url":"https://github.com/angular/angular/pull/53784","RelatedDescription":"Open PR \"feat(router): Add transient info to RouterLink input\" (#53784)"},{"Id":"2064599663","IsPullRequest":true,"CreatedAt":"2024-01-03T20:21:29","Actor":"atcastle","Number":"53783","RawContent":null,"Title":"feat(common): add placeholder to NgOptimizedImage","State":"open","Body":"This PR adds a new automatic placeholders feature to NgOptimizedImage. This feature takes a small placeholder image, generated with an image loader, or provided by the developer in the form of a data URL, and applies it as a `background-image` with a blur while the primary image is being downloaded. The placeholder styling is removed when loading is complete.\r\n\r\nCC: @AndrewKushnir @kara \r\n","Url":"https://github.com/angular/angular/pull/53783","RelatedDescription":"Open PR \"feat(common): add placeholder to NgOptimizedImage\" (#53783)"},{"Id":"2064475745","IsPullRequest":false,"CreatedAt":"2024-01-03T18:45:26","Actor":"Chamanjaiswal","Number":"53782","RawContent":null,"Title":"Pipes API documentation is not opening.","State":"closed","Body":"### Describe the problem that you experienced\n\nWhen I open this page it's not open.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/api/common#pipes\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53782","RelatedDescription":"Closed issue \"Pipes API documentation is not opening.\" (#53782)"},{"Id":"2063549266","IsPullRequest":false,"CreatedAt":"2024-01-03T18:15:24","Actor":"vlzware","Number":"53773","RawContent":null,"Title":"Empty @switch block can't compile","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn the code I am working with, we have a section which looked like this:\r\n\r\n```\r\n<ng-container [ngSwitch]=\"type\">\r\n  <!-- commented out code -->\r\n</ng-container>\r\n```\r\nThis used to compile.\r\n\r\nIf I replace this with the new syntax like this:\r\n```\r\n@switch (type) {\r\n  <!-- commented out code -->\r\n}\r\n```\r\nit fails to compile with the error shown below.\r\nThe switch block contains commented out code for legacy reasons.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n√ Browser application bundle generation complete.\r\n<e> [webpack-dev-middleware] TypeError: Cannot read properties of undefined (reading 'index')\r\n<e>     at TemplateDefinitionBuilder.visitSwitchBlock (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:28574:44)\r\n<e>     at SwitchBlock.visit (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:3970:24)\r\n<e>     at visitAll$1 (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:4184:34)\r\n<e>     at TemplateDefinitionBuilder.visitElement (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:28324:9)\r\n<e>     at Element$1.visit (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:3836:24)\r\n<e>     at visitAll$1 (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:4184:34)\r\n<e>     at TemplateDefinitionBuilder.buildTemplateFunction (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:27798:9)\r\n<e>     at compileComponentFromMetadata (file:///C:/<myproject>/node_modules/@angular/compiler/fesm2022/compiler.mjs:30021:60)\r\n<e>     at ComponentDecoratorHandler.compileFull (file:///C:/<myproject>/node_modules/@angular/compiler-cli/bundles/chunk-B5URQIVL.js:7010:17)\r\n<e>     at TraitCompiler.compile (file:///C:/<myproject>/node_modules/@angular/compiler-cli/bundles/chunk-B5URQIVL.js:1688:38)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.8\r\nNode: 18.18.2\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@angular/cdk                    17.0.4\r\n@angular/material               17.0.4\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53773","RelatedDescription":"Closed issue \"Empty @switch block can't compile\" (#53773)"},{"Id":"2063717537","IsPullRequest":true,"CreatedAt":"2024-01-03T18:15:23","Actor":"crisbeto","Number":"53776","RawContent":null,"Title":"fix(compiler): ignore empty switch blocks","State":"closed","Body":"Adds some code to the compiler so that it ignores empty `@switch` blocks instead of trying to generate code for them.\r\n\r\nFixes #53773.","Url":"https://github.com/angular/angular/pull/53776","RelatedDescription":"Closed or merged PR \"fix(compiler): ignore empty switch blocks\" (#53776)"},{"Id":"2064394108","IsPullRequest":false,"CreatedAt":"2024-01-03T17:46:40","Actor":"benjaminbekes","Number":"53781","RawContent":null,"Title":"Angular request caching - cache payload with POST requests","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nplatform-browser\n\n### Description\n\nI think that in applications where GET requests are not widely used, it could be great to have cached POST methods with their bodies (payloads) as well. Also could be nice to specify only which requests should be cached and not the entire project requests where some requests can be filtered out.\n\n### Proposed solution\n\nInclude payloads of the POST requests to the cache.\r\nProvide an opposite way to specify only specific requests to be cached.\n\n### Alternatives considered\n\nNot used","Url":"https://github.com/angular/angular/issues/53781","RelatedDescription":"Closed issue \"Angular request caching - cache payload with POST requests\" (#53781)"},{"Id":"2064364584","IsPullRequest":false,"CreatedAt":"2024-01-03T17:04:49","Actor":"ducin","Number":"53780","RawContent":null,"Title":"require explicit toSignal new param in order to reduce risk of env injectors' destroyref resulting in no cleanup (more strict toSignal API)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nIt's more of a **CHANGE request**.\r\n\r\nCurrently when using `toSignal` passing the `injector` via options it **OPTIONAL**. On one hand it makes sense, though in practice I see a huge risk of developers accidentally introducing too many immediate subscriptions bound to Env Injectors which will never get cleaned up:\r\n\r\n```ts\r\ntoSignal(myObservable$)\r\n```\r\nNow if the dev doesn't know all the quirks around injector hierarchy, they might not know that e.g. a service provided-in-root might get env injector which doesn't trigger `DestroyRef`. In fact, moving that code (since it depends on `inject`/`DestroyRef`) changes the semantics significantly!\r\n\r\nRelates to #51290.\r\n\r\n\n\n### Proposed solution\n\n## Usage\r\n\r\n```ts\r\n// within a component/directive OR service provided in component/directive\r\nconst signal = toSignal(observable$) // ✅ no runtime error\r\n// no additional params needed\r\n// runtime check makes sure that a NodeInjector spits out a NodeInjectorDestroyRef\r\n\r\n// within a global service\r\nconst signal = toSignal(observable$) // ❌ safety error: Env Injector was used when only node injectors are allowed (whatever message...)\r\n// expected: toSignal(observable$, { onlyInNodeInjectors: false })\r\n\r\n// within a global service\r\nconst signal = toSignal(observable$, { onlyInNodeInjectors: false }) // ✅ no runtime error\r\n// the developer is doing it ON THEIR OWN RISK\r\n```\r\n\r\n## How\r\n\r\nThis _proposal_ aims to make potentially unsafe usage explicit (like with requireSync default is `false`). I.e. revert the current API (thankfully, toSignal is still within `developerPreview`) whenever **ENV injector** would get passed: from \"_implicit env injector_\" into \"_explicit env injector_\" (doesn't matter if node injector gets used).\r\n\r\nSlightly change the toSignal function signature and/or overloads.\r\n\r\nCurrent options:\r\n```ts\r\nexport interface ToSignalOptions {\r\n  initialValue?: unknown;\r\n  requireSync?: boolean;\r\n  injector?: Injector;\r\n  manualCleanup?: boolean;\r\n  rejectErrors?: boolean;\r\n}\r\n```\r\n\r\nNote that specific `onlyInNodeInjectors` name of the option is less relevant at the moment... 😉\r\n\r\nProposed:\r\n```ts\r\nexport interface ToSignalOptions {\r\n  ...\r\n  onlyInNodeInjectors?: boolean // default true\r\n}\r\n```\r\n\r\nRuntime check:\r\n- angular has internal access to all classes that represent injectors (env, node) or destroy refs (node)\r\n- depending on what is simpler (checking the injectors OR destroyRefs - ultimately it's all about destroyRefs anyway), use the `instanceOf` operator to find out whether the allowed\r\n\r\n```ts\r\n// either injectors:\r\n- class NodeInjector\r\n- abstract class EnvironmentInjector / class R3Injector extends EnvironmentInjector\r\n\r\n// or:\r\n- class NodeInjectorDestroyRef\r\n```\r\n\r\nMechanics:\r\n- in compile-time we don't know whether the injector is going to be **node** or **env** one\r\n- the default (true) allows to only use node injectors, and since node injectors get removed along with components, the risk of memory leaks drops significantly\r\n- if devs want to go with env injectors, they shall do that explicitly.\r\n\r\n\n\n### Alternatives considered\n\n# 1. enum\r\n\r\nchange `manualCleanup`'s boolean with an `cleanup` **enum** with:\r\n- `NODE_ONLY` (default) -> destroyRef can be taken ONLY from node injectors\r\n- `MANUAL_CLEANUP` -> no destroyRef\r\n- `ALL_INJECTORS` -> (unrecommended) although both node and env injectors might be used to fetch destroyRef\r\n\r\nagain, better names could be provided.\r\n\r\n# 2. toSignal overloads\r\n\r\nupdate the overloads:\r\n\r\n```ts\r\n// Base case: no options -> `undefined` in the result type.\r\nexport function toSignal<T>(source: Observable<T>|Subscribable<T>): Signal<T|undefined>;\r\n// Options with `undefined` initial value and no `requiredSync` -> `undefined`.\r\nexport function toSignal<T>(\r\n    source: Observable<T>|Subscribable<T>,\r\n    options: ToSignalOptions&{initialValue?: undefined, requireSync?: false}): Signal<T|undefined>;\r\n// Options with `null` initial value -> `null`.\r\nexport function toSignal<T>(\r\n    source: Observable<T>|Subscribable<T>,\r\n    options: ToSignalOptions&{initialValue?: null, requireSync?: false}): Signal<T|null>;\r\n// Options with `undefined` initial value and `requiredSync` -> strict result type.\r\nexport function toSignal<T>(\r\n    source: Observable<T>|Subscribable<T>,\r\n    options: ToSignalOptions&{initialValue?: undefined, requireSync: true}): Signal<T>;\r\n// Options with a more specific initial value type.\r\nexport function toSignal<T, const U extends T>(\r\n    source: Observable<T>|Subscribable<T>,\r\n    options: ToSignalOptions&{initialValue: U, requireSync?: false}): Signal<T|U>;\r\n```\r\n\r\nto enforce passing the injector explicitly. But **I don't like this idea** since it 1. worsens the DX and 2. doesn't guarantee that people would not just simply `injector = inject(Injector)` and YOLO, which would NOT remove the issue in the first place.","Url":"https://github.com/angular/angular/issues/53780","RelatedDescription":"Open issue \"require explicit toSignal new param in order to reduce risk of env injectors' destroyref resulting in no cleanup (more strict toSignal API)\" (#53780)"},{"Id":"2064336354","IsPullRequest":false,"CreatedAt":"2024-01-03T16:43:19","Actor":"yharaskrik","Number":"53779","RawContent":null,"Title":"Control Flow Migration does not work correctly on template","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nRunning control flow migration on the following template does not work correctly.\r\n\r\nOriginal Template:\r\n```html\r\n<ng-container *ngIf=\"generic; else specific\">\r\n    <ng-container [ngSwitch]=\"dueWhen\">\r\n        <ng-container *ngSwitchCase=\"due.NOW\">\r\n            <div class=\"alert alert-danger generic\" [template]=\"tooltip\" trTemplateTooltip position=\"centre-end\">\r\n                Required Information\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"due.SOON\">\r\n            <div class=\"alert alert-warning generic\" [template]=\"tooltip\" trTemplateTooltip position=\"centre-end\">\r\n                Information Required Soon\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault></ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n<ng-template #specific>\r\n    <ng-container [ngSwitch]=\"dueWhen\">\r\n        <ng-container *ngSwitchCase=\"due.NOW\">\r\n            <div\r\n                class=\"alert alert-danger\"\r\n                matTooltip=\"Stripe requires this information immediately to verify your account.\">\r\n                Required Now\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"due.SOON\">\r\n            <div class=\"alert alert-warning\" matTooltip=\"Stripe may require this information in the future.\">\r\n                Required Soon\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n            <div class=\"trellis-p\" [ngClass]=\"{ 'text-muted': !value && !overrideValue }\">\r\n                {{ value && !overrideValue ? value : altValue }}\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n<ng-template #tooltip>\r\n    <tr-stripe-banking-missing-info [account]=\"account\"></tr-stripe-banking-missing-info>\r\n</ng-template>\r\n```\r\n\r\nMigrates to: \r\n\r\n```html\r\n@if (generic) {\r\n    @switch (dueWhen) {\r\n        @case (due.NOW) {\r\n            <div class=\"alert alert-danger generic\" [template]=\"tooltip\" trTemplateTooltip position=\"centre-end\">\r\n                Required Information\r\n            </div>\r\n        }\r\n        @case (due.SOON) {\r\n            <div class=\"alert alert-warning generic\" [template]=\"tooltip\" trTemplateTooltip position=\"centre-end\">\r\n                Information Required Soon\r\n            </div>\r\n        }\r\n        @default {}\r\n    }\r\n} @else {\r\n    @switch (dueWhen) {\r\n        @case (due.NOW) {\r\n            \">\r\n            <div\r\n                class=\"alert alert-danger\"\r\n                matTooltip=\"Stripe requires this information immediately to verify your account.\">\r\n                Required Now\r\n            </div>\r\n        }\r\n        r>\r\n        @case (due.SOON) {\r\n            \">\r\n            <div class=\"alert alert-warning\" matTooltip=\"Stripe may require this information in the future.\">\r\n                Required Soon\r\n            </div>\r\n        }\r\n        r>\r\n        @default {\r\n            t>\r\n            <div class=\"trellis-p\" [ngClass]=\"{ 'text-muted': !value && !overrideValue }\">\r\n                {{ value && !overrideValue ? value : altValue }}\r\n            </div>\r\n        }\r\n        r>\r\n    }\r\n}\r\n\r\n<ng-template #tooltip>\r\n    <tr-stripe-banking-missing-info [account]=\"account\"></tr-stripe-banking-missing-info>\r\n</ng-template>\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53779","RelatedDescription":"Open issue \"Control Flow Migration does not work correctly on template\" (#53779)"},{"Id":"2063787888","IsPullRequest":false,"CreatedAt":"2024-01-03T11:19:15","Actor":"RustyF","Number":"53777","RawContent":null,"Title":"404 on https://angular.dev/versions","State":"closed","Body":"### Describe the problem that you experienced\n\n404\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/versions\n\n### Describe what you were looking for in the documentation\n\nTo view Angular version compatibility\n\n### Describe the actions that led you to experience the problem\n\nClicking link from https://angular.dev/tools/cli/setup-local  \n\n### Describe what you want to experience that would fix the problem\n\nGoes to right page\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/277341/ed997f0c-1d11-4374-8ab0-51a41cf248e7)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53777","RelatedDescription":"Closed issue \"404 on https://angular.dev/versions\" (#53777)"},{"Id":"2063707325","IsPullRequest":false,"CreatedAt":"2024-01-03T10:23:13","Actor":"zip-fa","Number":"53775","RawContent":null,"Title":"docs: broken example in afterNextRender","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi. Example is broken on new angular.dev website, while it’s not on old one.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular.dev/api/core/afterNextRender?tab=usage-notes\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53775","RelatedDescription":"Open issue \"docs: broken example in afterNextRender\" (#53775)"},{"Id":"2063697059","IsPullRequest":false,"CreatedAt":"2024-01-03T10:18:12","Actor":"chriswoodie","Number":"53774","RawContent":null,"Title":"Describe how to fully translate route paths, handle prerendering for them and set lang attribute on html","State":"open","Body":"### Describe the problem that you experienced\n\nCan't find any official documentation for how to do route paths translations (`path` property in each configurated route).\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/i18n\n\n### Describe what you were looking for in the documentation\n\nThe i18n documentation only describes how to handle language code segment in the url, not each configurated route path. It also:\r\n\r\n1. Lacks documentation (or support) for how to handle prerendering with different languages when using the `routesFile` to point to a text file with the routes that should be prerendered.\r\n2. Lacks clarity how to handle all of the above while also updating the `lang` attribute on the `html` element. I saw you can do this by specifying locales in `angular.json` but when trying to put it all together it just becomes a nightmare to try and figure it out.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\nAn official way of translating route paths based on a subdomain like `en.foo.com/home` or path segment like `foo.com/en/home`, without having to resort to poorly maintained or flat out abandoned third party packages.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53774","RelatedDescription":"Open issue \"Describe how to fully translate route paths, handle prerendering for them and set lang attribute on html\" (#53774)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2066593543","IsPullRequest":false,"CreatedAt":"2024-01-05T01:38:17","Actor":"n614cd","Number":"26798","RawContent":null,"Title":"Expose webpack dev-server config to allow for multiple projects","State":"open","Body":"### Command\n\nserve\n\n### Description\n\nLike others (https://github.com/angular/angular-cli/issues/12181), we are utilizing the multi-project features of Angular to create smaller and more efficient SPAs.\r\nThe production reality is they are served within separate URI contexts on a web server. \r\nCurrently in development we are required to run multiple servers on separate ports. This is inefficient, and introduces more variables compared to production.\r\nTherefore, it would be beneficial to allow webpack to with each application project underneath its own URI context. \r\n\r\n\n\n### Describe the solution you'd like\n\nNew command to the CLI such as \"serveAll\" which launches a single web server, with URI context defined for each project.\n\n### Describe alternatives you've considered\n\nTwo solutions so far. Spin up Apache web server, and configure (using a sledge hammer for a nail).\r\nCreate a script which spawns \"ng build --project=name\" for each project with a standalone dev project with just webpack-dev-server in it. The webpack.config.js contains hard coded static sections for each project.","Url":"https://github.com/angular/angular-cli/issues/26798","RelatedDescription":"Open issue \"Expose webpack dev-server config to allow for multiple projects\" (#26798)"},{"Id":"2063092673","IsPullRequest":false,"CreatedAt":"2024-01-04T22:04:16","Actor":"onwsk8r","Number":"26777","RawContent":null,"Title":"ng serve 17 live reload only reloads on .ts file changes","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe crux of the issue is that, when using `ng serve`, my app is not rebuilt correctly (or at all) unless I'm saving a .ts file. That is to say if I edit the HTML file I'm viewing in my browser to add or remove some content and then save the file, nothing changes in my browser. I have not tried `ng build` to see whether it considers HTML/style changes to necessitate rebuilding the app.\r\n\r\nOn to my specific problem! I'm hand-crafting some SVG (excited for `@for`), and I'm editing files with extensions like `.html` and `.scss`, as well as `.ts`. I can reproduce the problem on `app.component.*`, generated via `ng new`. When I edit a TS file, live reload works as expected. If you look at my \"exception or error\" output, you'll see the following series of events:\r\n\r\n1. The initial build, which worked\r\n2. Me editing and saving an HTML file (notice the comment), which did not actually rebuild anything (apparently) or change the content in my browser\r\n3. Me changing an SCSS file, which did the same\r\n4. Subsequent changes to HTML or SCSS files simply do nothing, as you can see. I made several changes such as adding and removing lines to both the HTML and SCSS files and saved them afterwards with no effect.\r\n\r\nI suppose you could argue this is an issue with 3rd party software, not with Angular, but then again, isn't the whole point of Angular to provide a developer-ready framework? I contend that an app created with `ng new` should fully - not partially - support tasks such as editing HTML or SCSS files.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n❯ ng serve\r\n\r\nInitial Chunk Files | Names         |  Raw Size\r\npolyfills.js        | polyfills     |  82.71 kB | \r\nmain.js             | main          |  25.46 kB | \r\nstyles.css          | styles        |  96 bytes | \r\n\r\n                    | Initial Total | 108.26 kB\r\n\r\nApplication bundle generation complete. [0.988 seconds]\r\nWatch mode enabled. Watching for file changes...\r\n  ➜  Local:   http://localhost:4200/\r\n   \r\n// Now I'm going to edit an HTML file\r\n\r\nInitial Chunk Files | Names | Raw Size\r\nmain.js             | main  | 25.31 kB | \r\n\r\nUnchanged output files: 2\r\nApplication bundle generation complete. [0.084 seconds]\r\nPage reload sent to client(s).\r\n\r\n// Now I'm going to edit an SCSS file\r\n\r\nInitial Chunk Files | Names | Raw Size\r\nmain.js             | main  | 25.31 kB | \r\n\r\nUnchanged output files: 2\r\nApplication bundle generation complete. [0.067 seconds]\r\nPage reload sent to client(s).\r\n\r\n// And another HTML file change\r\n\r\n// And another scss file change\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n❯ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.8\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26777","RelatedDescription":"Closed issue \"ng serve 17 live reload only reloads on .ts file changes\" (#26777)"},{"Id":"2066338485","IsPullRequest":true,"CreatedAt":"2024-01-04T21:25:36","Actor":"dgp1130","Number":"26797","RawContent":null,"Title":"Fix Web Test Runner e2e test on Windows","State":"closed","Body":"Needed to set `$CHROME_PATH` correctly for Web Test Runner / Chrome launcher to correctly find the the Chrome binary provided by Bazel.","Url":"https://github.com/angular/angular-cli/pull/26797","RelatedDescription":"Closed or merged PR \"Fix Web Test Runner e2e test on Windows\" (#26797)"},{"Id":"2066323677","IsPullRequest":true,"CreatedAt":"2024-01-04T20:56:18","Actor":"clydin","Number":"26796","RawContent":null,"Title":"fix(@angular-devkit/build-angular): show diagnostic messages after build stats","State":"open","Body":"To improve the readability and discoverability of any warnings or errors present during build, the diagnostic messages will be shown after the build stats are displayed. For large projects the amount of generated files previously could cause warnings to scroll off the screen and potentially be missed.\r\n\r\nCloses #26514","Url":"https://github.com/angular/angular-cli/pull/26796","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): show diagnostic messages after build stats\" (#26796)"},{"Id":"2066174617","IsPullRequest":true,"CreatedAt":"2024-01-04T20:45:23","Actor":"dgp1130","Number":"26795","RawContent":null,"Title":"ci: fix `sauce-connect-proxy` version","State":"closed","Body":"Somehow the requested and resolved versions of `sauce-connect-proxy` got desynced and downgraded to 4.8.1 in 68dae539adfa12d6088f96ac5c9f224d9bb52e17. This reverts that change and bumps it back up to 4.9.1 which appears to fix Saucelabs CI.","Url":"https://github.com/angular/angular-cli/pull/26795","RelatedDescription":"Closed or merged PR \"ci: fix `sauce-connect-proxy` version\" (#26795)"},{"Id":"2064793406","IsPullRequest":true,"CreatedAt":"2024-01-04T13:11:46","Actor":"dgp1130","Number":"26790","RawContent":null,"Title":"refactor: remove `process.cwd` from Web Test Runner builder","State":"closed","Body":"Turns out this isn't needed for `application` builder to correctly resolve inputs. Not using `process.cwd` should make this builder a little less brittle for monorepo use cases or when running `ng test` inside a subdirectory.","Url":"https://github.com/angular/angular-cli/pull/26790","RelatedDescription":"Closed or merged PR \"refactor: remove `process.cwd` from Web Test Runner builder\" (#26790)"},{"Id":"2065070263","IsPullRequest":true,"CreatedAt":"2024-01-04T10:02:07","Actor":"angular-robot","Number":"26792","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `96a98e8` -> `fb2bc97` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `99804dc` -> `b3d2c6b` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `4a08d93` -> `8abb9fe` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `598a957` -> `7586edd` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `c30a001` -> `e7e4b0f` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `4edeb0e` -> `bee64e1` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `81587ca` -> `fe8b0ce` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `a544a6b` -> `e44df02` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `00d2878` -> `9b5ea18` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `ae53beb` -> `0d71da2` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `59ad436` -> `6272f36` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `6ce0136` -> `6aae229` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `8903960` -> `b451a38` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `01f5e33` -> `610f952` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `e1ccbe1` -> `f5eac0d` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `5dee447` -> `5e35b03` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `20adba7` -> `7622f57` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26792","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26792)"},{"Id":"2064802389","IsPullRequest":true,"CreatedAt":"2024-01-04T10:01:00","Actor":"dgp1130","Number":"26791","RawContent":null,"Title":"ci: add `ci-*` to GitHub actions config","State":"closed","Body":"This automatically runs full CI for any branch prefixed with `ci-`. This makes it easier to manually run CI prior to opening a pull request without having to update any files and make sure they aren't accidentally included in the final PR.","Url":"https://github.com/angular/angular-cli/pull/26791","RelatedDescription":"Closed or merged PR \"ci: add `ci-*` to GitHub actions config\" (#26791)"},{"Id":"2065117767","IsPullRequest":true,"CreatedAt":"2024-01-04T10:00:36","Actor":"dgp1130","Number":"26794","RawContent":null,"Title":"ci: disable WTR e2e test on Windows","State":"closed","Body":"It doesn't appear to be finding the Chrome binary from Bazel correctly. Likely a Bazel-specific issue. This should get the build green immediately, will need to spend more time looking into the issue.","Url":"https://github.com/angular/angular-cli/pull/26794","RelatedDescription":"Closed or merged PR \"ci: disable WTR e2e test on Windows\" (#26794)"},{"Id":"2065070659","IsPullRequest":true,"CreatedAt":"2024-01-04T10:00:25","Actor":"angular-robot","Number":"26793","RawContent":null,"Title":"build: update dependency @web/test-runner to ^0.18.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@web/test-runner](https://togithub.com/modernweb-dev/web/tree/master/packages/test-runner) ([source](https://togithub.com/modernweb-dev/web/tree/HEAD/packages/test-runner)) | peerDependencies | minor | [`^0.17.3` -> `^0.18.0`](https://renovatebot.com/diffs/npm/@web%2ftest-runner/0.17.3/0.18.0) |\n| [@web/test-runner](https://togithub.com/modernweb-dev/web/tree/master/packages/test-runner) ([source](https://togithub.com/modernweb-dev/web/tree/HEAD/packages/test-runner)) | devDependencies | minor | [`^0.17.3` -> `^0.18.0`](https://renovatebot.com/diffs/npm/@web%2ftest-runner/0.17.3/0.18.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>modernweb-dev/web (@&#8203;web/test-runner)</summary>\n\n### [`v0.18.0`](https://togithub.com/modernweb-dev/web/blob/HEAD/packages/test-runner/CHANGELOG.md#0180)\n\n[Compare Source](https://togithub.com/modernweb-dev/web/compare/@web/test-runner@0.17.3...@web/test-runner@0.18.0)\n\n##### Minor Changes\n\n-   [`c185cba`](https://togithub.com/modernweb-dev/web/commit/c185cbaa): Set minimum node version to 18\n\n##### Patch Changes\n\n-   Updated dependencies \\[[`c185cba`](https://togithub.com/modernweb-dev/web/commit/c185cbaa)]\n    -   [@&#8203;web/test-runner-commands](https://togithub.com/web/test-runner-commands)[@&#8203;0](https://togithub.com/0).9.0\n    -   [@&#8203;web/test-runner-chrome](https://togithub.com/web/test-runner-chrome)[@&#8203;0](https://togithub.com/0).15.0\n    -   [@&#8203;web/test-runner-mocha](https://togithub.com/web/test-runner-mocha)[@&#8203;0](https://togithub.com/0).9.0\n    -   [@&#8203;web/test-runner-core](https://togithub.com/web/test-runner-core)[@&#8203;0](https://togithub.com/0).13.0\n    -   [@&#8203;web/config-loader](https://togithub.com/web/config-loader)[@&#8203;0](https://togithub.com/0).3.0\n    -   [@&#8203;web/browser-logs](https://togithub.com/web/browser-logs)[@&#8203;0](https://togithub.com/0).4.0\n    -   [@&#8203;web/dev-server](https://togithub.com/web/dev-server)[@&#8203;0](https://togithub.com/0).4.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26793","RelatedDescription":"Closed or merged PR \"build: update dependency @web/test-runner to ^0.18.0\" (#26793)"},{"Id":"2064297316","IsPullRequest":false,"CreatedAt":"2024-01-04T09:58:56","Actor":"segrey","Number":"26783","RawContent":null,"Title":"Angular 17 compiler errors have zero-based column, but one-based column would be more expected","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nSince Angular 17, compilation errors have zero-based column while having one-based line.\r\nIt would be more natural to have both line and column one-based.\r\n\r\n\r\n\n\n### Minimal Reproduction\n\n1. Generate an example Angular 17 app\r\n2. Make an intentional compilation error, e.g. change `src/app/app.component.html` to\r\n```\r\n<span>{{ title.foo }} app is running!</span>\r\n```\r\n3. Run `ng serve`. The error with zero-based column (15) will appear:\r\n```\r\n✘ [ERROR] NG9: Property 'foo' does not exist on type 'string'. [plugin angular-compiler]\r\n\r\n    src/app/app.component.html:1:15:\r\n      1 │ <span>{{ title.foo }} app is running!</span>\r\n        ╵                ~~~\r\n```\r\n\r\nPreviously, in Angular 16, columns in errors were one-based:\r\n```\r\nError: src/app/app.component.html:1:16 - error TS2339: Property 'foo' does not exist on type 'string'.\r\n\r\n1 <span>{{ title.foo }} app is running!</span>\r\n                 ~~~\r\n```\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.8\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26783","RelatedDescription":"Closed issue \"Angular 17 compiler errors have zero-based column, but one-based column would be more expected\" (#26783)"},{"Id":"2064790429","IsPullRequest":false,"CreatedAt":"2024-01-03T23:48:07","Actor":"adover","Number":"26789","RawContent":null,"Title":"router-outlet reference in App Shell does not accept self closing router-outlet","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the regex for matching a router outlet in the app shell generation, it fails to match the new self closing syntax `<router-outlet/>`.\r\n\r\nThis can be remediated by modifying the regex to `/<router-outlet.*?(\\/?)>([\\s\\S]*?)(?:<\\/router-outlet>)?/`\r\n\n\n### Minimal Reproduction\n\nTo reproduce\r\n\r\nCreate a new application and add `<router-outlet/>` to the app.component.html.\r\n\r\nRun `ng generate app-shell` and observe the failure.\r\n\r\nChange it to `<router-outlet></router-outlet>` and observe it works as expected.\r\n\n\n### Exception or Error\n\n```text\nPrerequisite for application shell is to define a router-outlet in your root component.\n```\n\n\n### Your Environment\n\n```text\n17.0.7\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26789","RelatedDescription":"Closed issue \"router-outlet reference in App Shell does not accept self closing router-outlet\" (#26789)"},{"Id":"2064470512","IsPullRequest":true,"CreatedAt":"2024-01-03T18:28:08","Actor":"alan-agius4","Number":"26788","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/26788","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.2.0-next.0\".\" (#26788)"},{"Id":"2064435492","IsPullRequest":true,"CreatedAt":"2024-01-03T18:26:23","Actor":"alan-agius4","Number":"26787","RawContent":null,"Title":"Bump version to \"v17.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26787","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-rc.0\" with changelog.\" (#26787)"},{"Id":"2064369937","IsPullRequest":true,"CreatedAt":"2024-01-03T17:19:05","Actor":"alan-agius4","Number":"26786","RawContent":null,"Title":"Bump version to \"v17.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26786","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-rc.0\" with changelog.\" (#26786)"},{"Id":"2064363107","IsPullRequest":true,"CreatedAt":"2024-01-03T17:04:47","Actor":"alan-agius4","Number":"26785","RawContent":null,"Title":"docs: release notes for the v17.0.9 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26785","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.9 release\" (#26785)"},{"Id":"2064357955","IsPullRequest":true,"CreatedAt":"2024-01-03T17:02:13","Actor":"alan-agius4","Number":"26784","RawContent":null,"Title":"Bump version to \"v17.0.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26784","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.9\" with changelog.\" (#26784)"},{"Id":"2060649007","IsPullRequest":true,"CreatedAt":"2024-01-03T16:15:36","Actor":"angular-robot","Number":"26772","RawContent":null,"Title":"build: update all non-major dependencies - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-core)) | dependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.6/7.23.7) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-core)) | devDependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.23.6/7.23.7) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | dependencies | patch | [`7.23.4` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.23.4/7.23.7) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | devDependencies | patch | [`7.23.4` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.23.4/7.23.7) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-runtime)) | dependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.23.6/7.23.7) |\n| [@babel/plugin-transform-runtime](https://babel.dev/docs/en/next/babel-plugin-transform-runtime) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-runtime)) | devDependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-runtime/7.23.6/7.23.7) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | dependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.6/7.23.7) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | devDependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.23.6/7.23.7) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-runtime)) | dependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.6/7.23.7) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel/tree/HEAD/packages/babel-runtime)) | devDependencies | patch | [`7.23.6` -> `7.23.7`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.23.6/7.23.7) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`6.16.0` -> `6.17.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/6.16.0/6.17.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`6.16.0` -> `6.17.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.16.0/6.17.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.19.10` -> `0.19.11`](https://renovatebot.com/diffs/npm/esbuild/0.19.10/0.19.11) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.10` -> `0.19.11`](https://renovatebot.com/diffs/npm/esbuild/0.19.10/0.19.11) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.19.10` -> `0.19.11`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.10/0.19.11) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.10` -> `0.19.11`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.10/0.19.11) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | patch | [`1.69.6` -> `1.69.7`](https://renovatebot.com/diffs/npm/sass/1.69.6/1.69.7) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | patch | [`1.69.6` -> `1.69.7`](https://renovatebot.com/diffs/npm/sass/1.69.6/1.69.7) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.23.7`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7237-2023-12-29)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.23.6...v7.23.7)\n\n##### :bug: Bug Fix\n\n-   `babel-traverse`\n    -   [#&#8203;16191](https://togithub.com/babel/babel/pull/16191) fix: Crash when removing without `Program` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helpers`, `babel-plugin-proposal-decorators`\n    -   [#&#8203;16180](https://togithub.com/babel/babel/pull/16180) fix: Class decorator `ctx.kind` is wrong ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-plugin-proposal-decorators`\n    -   [#&#8203;16170](https://togithub.com/babel/babel/pull/16170) Fix decorator initProto usage in derived classes ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`\n    -   [#&#8203;16167](https://togithub.com/babel/babel/pull/16167) Avoid unpreventable `unhandledRejection` events ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-helper-create-class-features-plugin`\n    -   [#&#8203;16186](https://togithub.com/babel/babel/pull/16186) chore: Update deps ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-proposal-decorators`\n    -   [#&#8203;16177](https://togithub.com/babel/babel/pull/16177) Merge decorators into class features ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v6.17.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#6170-2024-01-01)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.16.0...v6.17.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[no-restricted-imports] prevent crash when `patterns` or `paths` in options are empty ([#&#8203;8108](https://togithub.com/typescript-eslint/typescript-eslint/issues/8108)) ([675e987](https://togithub.com/typescript-eslint/typescript-eslint/commit/675e987ca1d13244c03d7e09d4e42c6539689d9a))\n\n##### Features\n\n-   **eslint-plugin:** \\[no-floating-promises] flag result of .map(async) ([#&#8203;7897](https://togithub.com/typescript-eslint/typescript-eslint/issues/7897)) ([5857356](https://togithub.com/typescript-eslint/typescript-eslint/commit/5857356962060b19aa792bee778f9167ee54154b))\n-   **eslint-plugin:** \\[switch-exhaustiveness-check] add an option to warn against a `default` case on an already exhaustive `switch` ([#&#8203;7539](https://togithub.com/typescript-eslint/typescript-eslint/issues/7539)) ([6a219bd](https://togithub.com/typescript-eslint/typescript-eslint/commit/6a219bdfe6fcf86aae28158e0d855f87a8bac719))\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.17.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6170-2024-01-01)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.16.0...v6.17.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.19.11`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#01911)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.10...v0.19.11)\n\n-   Fix TypeScript-specific class transform edge case ([#&#8203;3559](https://togithub.com/evanw/esbuild/issues/3559))\n\n    The previous release introduced an optimization that avoided transforming `super()` in the class constructor for TypeScript code compiled with `useDefineForClassFields` set to `false` if all class instance fields have no initializers. The rationale was that in this case, all class instance fields are omitted in the output so no changes to the constructor are needed. However, if all of this is the case *and* there are `#private` instance fields with initializers, those private instance field initializers were still being moved into the constructor. This was problematic because they were being inserted before the call to `super()` (since `super()` is now no longer transformed in that case). This release introduces an additional optimization that avoids moving the private instance field initializers into the constructor in this edge case, which generates smaller code, matches the TypeScript compiler's output more closely, and avoids this bug:\n\n    ```ts\n    // Original code\n    class Foo extends Bar {\n      #private = 1;\n      public: any;\n      constructor() {\n        super();\n      }\n    }\n\n    // Old output (with esbuild v0.19.9)\n    class Foo extends Bar {\n      constructor() {\n        super();\n        this.#private = 1;\n      }\n      #private;\n    }\n\n    // Old output (with esbuild v0.19.10)\n    class Foo extends Bar {\n      constructor() {\n        this.#private = 1;\n        super();\n      }\n      #private;\n    }\n\n    // New output\n    class Foo extends Bar {\n      #private = 1;\n      constructor() {\n        super();\n      }\n    }\n    ```\n\n-   Minifier: allow reording a primitive past a side-effect ([#&#8203;3568](https://togithub.com/evanw/esbuild/issues/3568))\n\n    The minifier previously allowed reordering a side-effect past a primitive, but didn't handle the case of reordering a primitive past a side-effect. This additional case is now handled:\n\n    ```js\n    // Original code\n    function f() {\n      let x = false;\n      let y = x;\n      const boolean = y;\n      let frag = $.template(`<p contenteditable=\"${boolean}\">hello world</p>`);\n      return frag;\n    }\n\n    // Old output (with --minify)\n    function f(){const e=!1;return $.template(`<p contenteditable=\"${e}\">hello world</p>`)}\n\n    // New output (with --minify)\n    function f(){return $.template('<p contenteditable=\"false\">hello world</p>')}\n    ```\n\n-   Minifier: consider properties named using known `Symbol` instances to be side-effect free ([#&#8203;3561](https://togithub.com/evanw/esbuild/issues/3561))\n\n    Many things in JavaScript can have side effects including property accesses and ToString operations, so using a symbol such as `Symbol.iterator` as a computed property name is not obviously side-effect free. This release adds a special case for known `Symbol` instances so that they are considered side-effect free when used as property names. For example, this class declaration will now be considered side-effect free:\n\n    ```js\n    class Foo {\n      *[Symbol.iterator]() {\n      }\n    }\n    ```\n\n-   Provide the `stop()` API in node to exit esbuild's child process ([#&#8203;3558](https://togithub.com/evanw/esbuild/issues/3558))\n\n    You can now call `stop()` in esbuild's node API to exit esbuild's child process to reclaim the resources used. It only makes sense to do this for a long-lived node process when you know you will no longer be making any more esbuild API calls. It is not necessary to call this to allow node to exit, and it's advantageous to not call this in between calls to esbuild's API as sharing a single long-lived esbuild child process is more efficient than re-creating a new esbuild child process for every API call. This API call used to exist but was removed in [version 0.9.0](https://togithub.com/evanw/esbuild/releases/v0.9.0). This release adds it back due to a user request.\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.69.7`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1697)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.69.6...1.69.7)\n\n##### Embedded Sass\n\n-   In the JS Embedded Host, properly install the x64 Dart Sass executable on\n    ARM64 Windows.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26772","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies - autoclosed\" (#26772)"},{"Id":"2063781533","IsPullRequest":true,"CreatedAt":"2024-01-03T15:18:08","Actor":"alan-agius4","Number":"26780","RawContent":null,"Title":"fix(@angular/cli): add prerender and ssr-dev-server schemas in angular.json schema","State":"closed","Body":"\r\nAdd missing schemas to improve IDE DX\r\n","Url":"https://github.com/angular/angular-cli/pull/26780","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): add prerender and ssr-dev-server schemas in angular.json schema\" (#26780)"},{"Id":"2063520423","IsPullRequest":true,"CreatedAt":"2024-01-03T15:15:35","Actor":"alan-agius4","Number":"26779","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26779","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26779)"},{"Id":"2064161826","IsPullRequest":false,"CreatedAt":"2024-01-03T14:45:43","Actor":"mivanyna","Number":"26782","RawContent":null,"Title":"esbuild with proxy doesn't return Content-Language headers for OPTIONS request","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nupgrade, Don't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI upgraded my project to Angular 17 and switched to `\"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`. For local env I use proxy config to redirect requests to test env.\r\n\r\nI receive all the data, except for `OPTIONS` request there is no `Content-Language` header in response.\r\nIt works on prev version(Angular 16 and `\"builder\": \"@angular-devkit/build-angular:browser\"`)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.7\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 17.0.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n... upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.7\r\n@angular-devkit/build-angular   17.0.7\r\n@angular-devkit/architect       0.1700.7\r\n@angular-devkit/build-angular   17.0.7\r\n@angular-devkit/core            17.0.7\r\n@angular-devkit/schematics      17.0.7\r\n@schematics/angular             17.0.7\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI switched to `\"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\nWith proxy for the local env\r\npackage.json:\r\n```\r\n{\r\n...\r\n\"start\": \"ng serve --proxy-config config/proxy.conf.js --hmr --port 3000 --open=true\",\r\n...\r\n}\r\n```\r\nMy proxy config looks like this:\r\n```\r\nconst PROXY_CONFIG = [\r\n  {\r\n    context: [\r\n      \"/api\"\r\n    ],\r\n    target: \"test env link\",\r\n    secure: true,\r\n    changeOrigin: true,\r\n  }\r\n]\r\n\r\nmodule.exports = PROXY_CONFIG;\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/26782","RelatedDescription":"Open issue \"esbuild with proxy doesn't return Content-Language headers for OPTIONS request\" (#26782)"},{"Id":"2060489414","IsPullRequest":false,"CreatedAt":"2024-01-03T14:31:05","Actor":"first-account","Number":"26771","RawContent":null,"Title":"Error: An unhandled exception occurred - The service was stopped [Angular CLI v17.0.8]","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.10\n\n### Description\n\nI'm encountering the following error when attempting to run an Angular application using `ng serve`:\r\n\r\n```plaintext\r\nAn unhandled exception occurred: The service was stopped\r\nSee \"C:\\Users\\op\\AppData\\Local\\Temp\\ng-yxgjmu\\angular-errors.log\" for further details.\n\n### Minimal Reproduction\n\nng new project\r\nng serve\n\n### Exception or Error\n\n```text\n[error] Error: The service was stopped\r\n    at C:\\Users\\op\\Desktop\\yes\\node_modules\\esbuild\\lib\\main.js:1111:28\r\n    at responseCallbacks.<computed> (C:\\Users\\op\\Desktop\\yes\\node_modules\\esbuild\\lib\\main.js:703:9)\r\n    at Socket.afterClose (C:\\Users\\op\\Desktop\\yes\\node_modules\\esbuild\\lib\\main.js:693:28)\r\n    at Socket.emit (node:events:526:35)\r\n    at endReadableNT (node:internal/streams/readable:1589:12)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.8\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: win32 x64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\nit worked on debian but not on windows 10 ltsc 2019 1809 (OS build 17763.1)","Url":"https://github.com/angular/angular-cli/issues/26771","RelatedDescription":"Closed issue \"Error: An unhandled exception occurred - The service was stopped [Angular CLI v17.0.8]\" (#26771)"},{"Id":"2064060612","IsPullRequest":false,"CreatedAt":"2024-01-03T13:43:27","Actor":"omarzougui","Number":"26781","RawContent":null,"Title":"This issue has been automatically locked due to inactivity.","State":"closed","Body":"              This issue has been automatically locked due to inactivity.\r\nPlease file a new issue if you are encountering a similar or related problem.\r\n\r\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/8f24bc9443b3872fe095d9f7f77b308a361a13b4/docs/GITHUB_PROCESS.md#conversation-locking).\r\n\r\n<sub>_This action has been performed automatically by a bot._</sub>\r\n\r\n_Originally posted by @angular-automatic-lock-bot[bot] in https://github.com/angular/angular-cli/issues/26508#issuecomment-1871636091_\r\n            ","Url":"https://github.com/angular/angular-cli/issues/26781","RelatedDescription":"Closed issue \"This issue has been automatically locked due to inactivity.\" (#26781)"},{"Id":"2062523946","IsPullRequest":true,"CreatedAt":"2024-01-03T08:46:56","Actor":"clydin","Number":"26775","RawContent":null,"Title":"build: add function type annotation for bazel win32 build support","State":"closed","Body":"Due to the file structure of Bazel Windows builds, type annotations are required in certain locations to successfully build the project. Function return type annotations are generally recommended anyway within the code.","Url":"https://github.com/angular/angular-cli/pull/26775","RelatedDescription":"Closed or merged PR \"build: add function type annotation for bazel win32 build support\" (#26775)"},{"Id":"2061405279","IsPullRequest":true,"CreatedAt":"2024-01-03T08:41:48","Actor":"angular-robot","Number":"26773","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26773","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#26773)"},{"Id":"2059995260","IsPullRequest":false,"CreatedAt":"2024-01-03T08:36:23","Actor":"armen96work","Number":"26769","RawContent":null,"Title":"Unable to Retrieve Hostname with Angular SSR (@angular/ssr)","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI encountered an issue while attempting to retrieve the hostname within an Angular SSR (@angular/ssr) environment, particularly in a multi-domain Firebase Hosting setup. My goal is to dynamically fetch specific theme configurations based on the individual hostnames.\r\n\r\nProblem Description:\r\n\r\n**Scenario**: I have multiple Firebase hostings (e.g., test1.com, test2.com) linked to a single Firebase project. Each domain should have its own theme configuration fetched from a database on the server.\r\n\r\n**Approaches Tried**: I attempted to access the hostname using methods such as `@Inject(DOCUMENT)` for the **Document** and **PlatformLocation**, but these only work on the client side.\r\n\r\n**Server-side Code**: In the server-side code (server.ts), I added Injection Tokens within the Angular SSR's commonEngine.render() method to provide request-related data, but the retrieved data remains NULL in the component.\r\n\n\n### Minimal Reproduction\n\nCreate an Angular SSR application with Firebase Hosting connected to multiple domains. (Although it is not required*)\r\n\r\nIn the app component page use HttpClient to get a domain theme (or any info)\r\n\r\n```\r\n  constructor(\r\n    private linkService: LinkService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    // private platformLocation: PlatformLocation,\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.hostName = this.document.location.hostname;\r\n    this.linkService.executeGETHTTPQuery('LOAD_LINK_PROFILE_DATA', {link_id: this.hostName})\r\n    ...\r\n  }\r\n```\r\n\r\nThen build or server the application\r\n`\"serve:ssr\": \"npm run build:dev && node dist/{APP_NAME}/server/server.mjs\",`\r\n\r\nTry to run `curl {host}` it's a blank page which means there was not any SSR process to generate HTML content.\r\nIn the case of my other application with a static hostname, it returns me a full HTML codebase.\r\n\n\n### Exception or Error\n\n```text\nI expected to retrieve the hostname or domain information during server-side rendering, allowing me to dynamically fetch the specific theme configurations based on the individual domains.\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.8\r\nNode: 20.9.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1700.8\r\n@angular-devkit/build-angular     17.0.8\r\n@angular-devkit/core              17.0.8\r\n@angular-devkit/schematics        17.0.8\r\n@angular/cdk                      17.0.4\r\n@angular/fire                     17.0.0\r\n@angular/material                 17.0.4\r\n@angular/material-luxon-adapter   17.0.4\r\n@schematics/angular               17.0.8\r\nng-packagr                        17.0.3\r\nrxjs                              7.8.1\r\ntypescript                        5.2.2\r\nzone.js                           0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26769","RelatedDescription":"Closed issue \"Unable to Retrieve Hostname with Angular SSR (@angular/ssr)\" (#26769)"},{"Id":"2063018621","IsPullRequest":false,"CreatedAt":"2024-01-03T08:35:24","Actor":"JeanMeche","Number":"26776","RawContent":null,"Title":"Application builder doesn't tree shake non top-level variables ","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nWhile investigating prod builds I did notice, in some cases tree shaking is less efficient when using esbuild. \r\n\r\nFor example here: \r\n\r\nhttps://github.com/angular/angular/blob/d315e2c4fa178dfbd41bc25259605bb999fa302e/packages/core/src/render3/errors_di.ts#L54-L57\r\n\r\n```\r\n/** Throws an error when a token is not found in DI. */\r\nexport function throwProviderNotFoundError(token: any, injectorName?: string): never {\r\n  const injectorDetails = injectorName ? ` in ${injectorName}` : '';\r\n  throw new RuntimeError(\r\n      RuntimeErrorCode.PROVIDER_NOT_FOUND,\r\n      ngDevMode && `No provider for ${stringifyForError(token)} found${injectorDetails}`);\r\n}\r\n```\r\n\r\nThe `injectorDetails` const remains in the final bundle while being unused. \r\nThis issue does not occur when using the webpack/terser. \r\n\r\nI believe this is related to evanw/esbuild#639. \r\n\r\n### Minimal Reproduction\r\n\r\n* `ng new foobar`\r\n* NG_BUILD_DEBUG_OPTIMIZE=1 yarn build\r\n* notice `throwProviderNotFoundError` isn't removed by tree-shaking when using esbuild. \r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.8\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin x64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n\r\ncc @AndrewKushnir \r\n","Url":"https://github.com/angular/angular-cli/issues/26776","RelatedDescription":"Closed issue \"Application builder doesn't tree shake non top-level variables \" (#26776)"},{"Id":"2063497428","IsPullRequest":false,"CreatedAt":"2024-01-03T08:32:20","Actor":"nicetomytyuk","Number":"26778","RawContent":null,"Title":"Live Reload Fails on HTML Files After Extended Development Time","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nLive reload functionality ceases to work for HTML files after a period of development. Changes in HTML files are not reflected in real-time, requiring a manual trigger through saving `.ts` or `.scss` files to initiate a live reload.\n\n### Minimal Reproduction\n\n1. Run `ng serve` to start the development server.\r\n2. Initially, live reload works as expected for HTML, TS, and SCSS files.\r\n3. After some time, live reload stops responding to changes in HTML files.\n\n### Exception or Error\n\n```text\nLive reload should consistently update the application view when HTML files are modified, without requiring changes in TS or SCSS files as a trigger.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.7\r\nNode: 18.14.0\r\nPackage Manager: npm 9.3.1\r\nOS: win32 x64\r\n\r\nAngular:\r\n\r\n@angular-devkit/architect    0.1700.7 (cli-only)\r\n@angular-devkit/core         17.0.7 (cli-only)\r\n@angular-devkit/schematics   17.0.7 (cli-only)\r\n@schematics/angular          17.0.7 (cli-only)\n```\n\n\n### Anything else relevant?\n\n- The issue has been observed in various Angular versions.\r\n- The problem temporarily resolves after restarting the server with `ng serve`, but reoccurs after prolonged development.","Url":"https://github.com/angular/angular-cli/issues/26778","RelatedDescription":"Open issue \"Live Reload Fails on HTML Files After Extended Development Time\" (#26778)"},{"Id":"2062311220","IsPullRequest":false,"CreatedAt":"2024-01-02T11:50:55","Actor":"JeanMeche","Number":"26774","RawContent":null,"Title":"Report a warning/error when multiple instance of `@angular/core` are bundled. ","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nWhen the CLI bundles Angular apps it can happen that multiple instances of `@angular/core` are bundled. \r\n\r\nThis leads to a variety of errors at runtime that are difficult to diagnose for developers.\r\n \r\nCurrently on the FW repo we point users toward : angular/angular#35586\r\n\r\n### Describe the solution you'd like\r\n\r\nI'd be great if the CLI could throw a warning/error when it happens so users are aware even before runtime that there is an issue with their bundle and they should have a look at their dependency resolution ! ","Url":"https://github.com/angular/angular-cli/issues/26774","RelatedDescription":"Open issue \"Report a warning/error when multiple instance of `@angular/core` are bundled. \" (#26774)"},{"Id":"2060339039","IsPullRequest":false,"CreatedAt":"2023-12-29T19:34:18","Actor":"pumano","Number":"26770","RawContent":null,"Title":"Sec vuln in @babel/core package","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n```bash\r\n@babel/traverse  <7.23.2\r\nSeverity: critical\r\nBabel vulnerable to arbitrary code execution when compiling specifically crafted malicious code - https://github.com/advisories/GHSA-67hx-6x53-jw92\r\nfix available via `npm audit fix`\r\nnode_modules/@babel/traverse\r\n\r\n```\r\nhttps://github.com/advisories/GHSA-67hx-6x53-jw92\r\n\r\n### Minimal Reproduction\r\n\r\njust need to update @babel/core to latest\r\n\r\n### Exception or Error\r\n\r\n```text\r\n% npm ls @babel/traverse\r\nmyapp@2.0.0 /Users/iam/myapp\r\n├─┬ @angular-devkit/build-angular@17.0.8\r\n│ └─┬ @babel/core@7.23.2\r\n│   ├─┬ @babel/helpers@7.23.2\r\n│   │ └── @babel/traverse@7.23.2 deduped\r\n│   └── @babel/traverse@7.23.2\r\n├─┬ @angular/compiler-cli@17.0.8\r\n│ └─┬ @babel/core@7.23.2\r\n│   ├─┬ @babel/helpers@7.23.2\r\n│   │ └── @babel/traverse@7.23.2 deduped\r\n│   └── @babel/traverse@7.23.2\r\n├─┬ @nx/js@17.2.8\r\n│ ├─┬ @babel/core@7.23.0\r\n│ │ ├─┬ @babel/helpers@7.23.1\r\n│ │ │ └── @babel/traverse@7.23.0 deduped\r\n│ │ └── @babel/traverse@7.23.0\r\n│ └─┬ babel-plugin-const-enum@1.2.0\r\n│   └── @babel/traverse@7.23.0 deduped\r\n├─┬ @storybook/addon-docs@7.6.6\r\n│ └─┬ @storybook/csf-tools@7.6.6\r\n│   └── @babel/traverse@7.23.2\r\n├─┬ @storybook/angular@7.6.6\r\n│ ├─┬ @storybook/builder-webpack5@7.6.6\r\n│ │ └─┬ @babel/core@7.23.5\r\n│ │   ├─┬ @babel/helpers@7.23.5\r\n│ │   │ └── @babel/traverse@7.23.5 deduped\r\n│ │   └── @babel/traverse@7.23.5\r\n│ └─┬ @storybook/cli@7.6.6\r\n│   ├─┬ @babel/core@7.23.5\r\n│   │ ├─┬ @babel/helpers@7.23.5\r\n│   │ │ └── @babel/traverse@7.23.5 deduped\r\n│   │ └── @babel/traverse@7.23.5\r\n│   └─┬ @storybook/codemod@7.6.6\r\n│     └─┬ @babel/core@7.23.5\r\n│       ├─┬ @babel/helpers@7.23.5\r\n│       │ └── @babel/traverse@7.23.5 deduped\r\n│       └── @babel/traverse@7.23.5\r\n└─┬ eslint-plugin-rxjs@5.0.3\r\n  └─┬ rxjs-report-usage@1.0.6\r\n    └── @babel/traverse@7.23.0 deduped\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.8\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@angular/cdk                    17.0.4\r\n@angular/cdk-experimental       17.0.4\r\n@schematics/angular             17.0.8\r\nng-packagr                      17.0.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26770","RelatedDescription":"Closed issue \"Sec vuln in @babel/core package\" (#26770)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2066553086","IsPullRequest":false,"CreatedAt":"2024-01-05T00:33:40","Actor":"gregworking","Number":"28372","RawContent":null,"Title":"docs-bug(Homepage): app-support description text reads awkwardly","State":"open","Body":"### Documentation Feedback\n\nAt the bottom of the homepage, in the app-support section, at a particular screen size, the description text reads as\r\n\r\n\"   StackOverflow                               Discord\r\nQuestions tagged with angular-Angular Community on Discord\r\nmaterial or angular-cdk\" \r\n\r\nwhich is incorrect. Please add a few pixels of spacing between elements so that they always read as intended.\r\n<img width=\"446\" alt=\"image\" src=\"https://github.com/angular/components/assets/138836074/295c5a9f-467c-4e97-b4ca-f495537a7f1e\">\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/28372","RelatedDescription":"Open issue \"docs-bug(Homepage): app-support description text reads awkwardly\" (#28372)"},{"Id":"2066387214","IsPullRequest":false,"CreatedAt":"2024-01-04T21:54:25","Actor":"marek-aguita","Number":"28371","RawContent":null,"Title":"feat(Toolbar & Tabs): support more density scale levels in Toolbar or Tabs","State":"open","Body":"### Feature Description\r\n\r\nCurrently there are these densities supported for Tabs:\r\n\r\nhttps://github.com/angular/components/blob/a7f87a80a18a62d75a8c5621fd89dbc2cf28a865/src/material/core/tokens/m2/mdc/_tab.scss#L69\r\n\r\n![image](https://github.com/angular/components/assets/15703819/eb7d56e0-9669-4c37-8c95-95f0e93828da)\r\n\r\nand these for Toolbar:\r\n\r\nhttps://github.com/angular/components/blob/a7f87a80a18a62d75a8c5621fd89dbc2cf28a865/src/material/core/tokens/m2/mat/_toolbar.scss#L38\r\n\r\n![image](https://github.com/angular/components/assets/15703819/d86718dd-4303-4e2d-b068-9e737a7464de)\r\n\r\nFrom these `scale levels vs height in pixels` maps we can see that the highest Tabs have their Tab Header 48px high and the lowest Toolbar is 52px high (on desktop). This means these two components never get the same height regardless the density applied.\r\n\r\nIn case they are used next to each other, when Tabs are used as kind of a 'toolbar' on a screen, it causes a visual discrepancy. Here is a demonstration where default 0 density is used for Tabs and -3 density used for Toolbars:\r\n\r\nhttps://stackblitz.com/edit/egbtbh?file=src%2Ftheme.scss\r\n\r\n![image](https://github.com/angular/components/assets/15703819/605962a4-0db7-40cf-832a-7bec85e248fc)\r\n\r\nThis may look as a tiny problem, but the Design, Business or QA departments may have very attentive eyes and report this as a visual bug (as it happened in my team). I am trying to avoid changing the heights with some custom CSS as this is not an approach recommended by Angular Material team as per this section in the official docs: https://material.angular.io/guide/customizing-component-styles#targeting-custom-styles\r\n\r\n![image](https://github.com/angular/components/assets/15703819/534edb36-b9a9-4043-a112-2a3f8c22fa1c)\r\n\r\nTherefore my question is, would it be please possible to add more density scale levels for either Tabs or Toolbar and still be compliant to the Material Design specs? Or maybe the whole use case of having Tabs next to a Toolbar is not correct from the Material Design specs point of view and I should ask our Design department to fix the designs?\r\n\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28371","RelatedDescription":"Open issue \"feat(Toolbar & Tabs): support more density scale levels in Toolbar or Tabs\" (#28371)"},{"Id":"2066314509","IsPullRequest":true,"CreatedAt":"2024-01-04T20:48:20","Actor":"atscott","Number":"28370","RawContent":null,"Title":"refactor(material/snack-bar): Remove NgZone.onMicrotaskEmpty dependency","State":"open","Body":"`onMicrotaskEmpty` will not emit when an application is using `NoopNgZone`. There wasn't a test around this bit of code when it was added so I can't be completely sure this doesn't break anything. It's unclear to me whether it's meant to wait for rendering or just meant to be async. It's possible that simply making the code execute in the microtask queue will have the same overall effect as before.","Url":"https://github.com/angular/components/pull/28370","RelatedDescription":"Open PR \"refactor(material/snack-bar): Remove NgZone.onMicrotaskEmpty dependency\" (#28370)"},{"Id":"2065410525","IsPullRequest":true,"CreatedAt":"2024-01-04T20:39:04","Actor":"crisbeto","Number":"28366","RawContent":null,"Title":"fix(material/tabs): enable hydration","State":"closed","Body":"Adds a workaround that allows us to enable hydration in the tab group component.","Url":"https://github.com/angular/components/pull/28366","RelatedDescription":"Closed or merged PR \"fix(material/tabs): enable hydration\" (#28366)"},{"Id":"2066275986","IsPullRequest":true,"CreatedAt":"2024-01-04T20:15:57","Actor":"wagnermaciel","Number":"28369","RawContent":null,"Title":"fix(material/slider): m3 ripple color","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28369","RelatedDescription":"Open PR \"fix(material/slider): m3 ripple color\" (#28369)"},{"Id":"2063591160","IsPullRequest":false,"CreatedAt":"2024-01-04T16:33:10","Actor":"MikaStark","Number":"28357","RawContent":null,"Title":"feat(material-date-fns-adapter): add support for date-fns 3","State":"closed","Body":"### Feature Description\n\n`date-fns` 3 is now available (https://blog.date-fns.org/v3-is-out/). It would be great Angular Material supports it in `material-date-fns-adapter` package.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/28357","RelatedDescription":"Closed issue \"feat(material-date-fns-adapter): add support for date-fns 3\" (#28357)"},{"Id":"2065186368","IsPullRequest":true,"CreatedAt":"2024-01-04T16:33:08","Actor":"crisbeto","Number":"28364","RawContent":null,"Title":"feat(material-date-fns-adapter): support date-fns 3.0","State":"closed","Body":"Adds support for `date-fns` 3 to the date adapter.\r\n\r\nFixes #28357.","Url":"https://github.com/angular/components/pull/28364","RelatedDescription":"Closed or merged PR \"feat(material-date-fns-adapter): support date-fns 3.0\" (#28364)"},{"Id":"2065940659","IsPullRequest":true,"CreatedAt":"2024-01-04T16:16:09","Actor":"wagnermaciel","Number":"28368","RawContent":null,"Title":"fix(material/slider): safari value correction bug","State":"open","Body":"* Fixes an issue where the slider value would sometimes not get immediately corrected on pointerdown in safari.\r\n* This bug only gets triggered when the user triggers a user begins dragging directly on the hidden native inputs slider thumb.","Url":"https://github.com/angular/components/pull/28368","RelatedDescription":"Open PR \"fix(material/slider): safari value correction bug\" (#28368)"},{"Id":"2064003249","IsPullRequest":true,"CreatedAt":"2024-01-04T12:34:23","Actor":"alexfriesen","Number":"28359","RawContent":null,"Title":"build: import sass","State":"closed","Body":"This PR will will use `import` instead of `require` for sass.","Url":"https://github.com/angular/components/pull/28359","RelatedDescription":"Closed or merged PR \"build: import sass\" (#28359)"},{"Id":"2065465484","IsPullRequest":false,"CreatedAt":"2024-01-04T11:56:38","Actor":"vartikaagrawal411","Number":"28367","RawContent":null,"Title":"Issue in Material/Select with ngx-scrollbar","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI need to use ngx scrollbar inside mat select component. For that I am giving \r\nmax-height like this\r\n![image](https://github.com/angular/components/assets/149461813/3cf29e3c-0119-4bd0-8fb3-e2acd0f22833)\r\nand autoHeightDisabled= false  ,\r\n![image](https://github.com/angular/components/assets/149461813/6df3edd6-cc1a-4d51-a1bc-c95bbc2514b3)\r\n\r\nbut, mat select dropdown is not adjusting it's position on top,  and is getting clipped\r\n![image](https://github.com/angular/components/assets/149461813/5cc21532-3db5-4dde-9714-9a4be8cea7d1)\r\n\r\n\r\n\r\n### Reproduction\r\n1. Go to Scroll-event section\r\n2. see the behavior in given dropdown\r\n\r\nStackBlitz link: https://stackblitz.com/edit/ngx-scrollbar-jpa7wb?file=src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.html,src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.module.ts,src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.scss,src%2Fapp%2Fapp.component.html,src%2Fapp%2Fapp.component.css\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nmat select dropdown should adjust itself on top so that content don't get clipped\r\n\r\n### Actual Behavior\r\n\r\nmat select dropdown is not getting adjusted on top and is getting clipped\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.15\r\n- CDK/Material: 16.1.15\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28367","RelatedDescription":"Closed issue \"Issue in Material/Select with ngx-scrollbar\" (#28367)"},{"Id":"2065234709","IsPullRequest":true,"CreatedAt":"2024-01-04T08:40:47","Actor":"crisbeto","Number":"28365","RawContent":null,"Title":"fix(material/slide-toggle): delete custom typography tokens","State":"open","Body":"Removes the custom typography tokens from the slide toggle since the typography is controlled through the internal MDC form field. This should be a no-op since the token values are the same.","Url":"https://github.com/angular/components/pull/28365","RelatedDescription":"Open PR \"fix(material/slide-toggle): delete custom typography tokens\" (#28365)"},{"Id":"2064789050","IsPullRequest":true,"CreatedAt":"2024-01-03T23:43:52","Actor":"eneajaho","Number":"28363","RawContent":null,"Title":"fix(multiple): add code docs for date adapters standalone APIs","State":"open","Body":"This commit adds docs for the new *provider* functions. \r\n\r\nAlso refactors the code to use these functions directly in the NgModules providers array, so we don't have code repetition.","Url":"https://github.com/angular/components/pull/28363","RelatedDescription":"Open PR \"fix(multiple): add code docs for date adapters standalone APIs\" (#28363)"},{"Id":"2064424980","IsPullRequest":false,"CreatedAt":"2024-01-03T17:49:07","Actor":"bart113","Number":"28362","RawContent":null,"Title":"bug(MatAutocomplete): when using single mat-autocomplete with multiple inputs,  panel does not open in some circumstances and displays incorrect option as selected","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nMatAutocomplete enters a broken state (invisible, but clickable), when the following conditions are met:\r\n* a single `<mat-autocomplete>` instance is used by multiple `<input>`s\r\n* user moves focus between these inputs using a mouse\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ajkqp1?file=src%2Fexample%2Fautocomplete-simple-example.html\r\n\r\nSteps to reproduce:\r\n1. Open the StackBlitz demo.\r\n2. Click the \"Number 2\" input.\r\n3. Observe that the autocomplete panel is now open.\r\n4. Click the \"Number 1\" input.\n\n### Expected Behavior\n\nThe autocomplete panel for the \"Number 1\" input is now open.\n\n### Actual Behavior\n\nThe autocomplete panel was visible for a brief moment, and then disappeared.\r\n\r\nIn particular, the panel still exists and is clickable, but has `opacity: 0`. This style appears to have been set by the [animation](https://github.com/angular/components/blob/main/src/material/autocomplete/animations.ts#L26) of the panel that has just been closed.\r\n\r\nNote that:\r\n* The bug cannot be observed, if user does not click, but uses Tab to navigate between the `<input>` fields.\r\n* The panel works correctly in Angular Material 17, if every input has its own `<mat-autocomplete>` defined. [Demo](https://stackblitz.com/edit/ajkqp1-fgaxvw?file=src%2Fexample%2Fautocomplete-simple-example.html).\r\n* Using a single `<mat-autocomplete>` for multiple `<input>`s used to work in Angular Material 14.2.7. [Demo](https://stackblitz.com/edit/pcajwp?file=src%2Fapp%2Fautocomplete-simple-example.html).\r\n\n\n### Environment\n\n- Angular: 17.0.0\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome 120.0.6099.129\r\n- Operating System: Linux\r\n","Url":"https://github.com/angular/components/issues/28362","RelatedDescription":"Open issue \"bug(MatAutocomplete): when using single mat-autocomplete with multiple inputs,  panel does not open in some circumstances and displays incorrect option as selected\" (#28362)"},{"Id":"2064368492","IsPullRequest":false,"CreatedAt":"2024-01-03T17:07:49","Actor":"GhoshWorld","Number":"28361","RawContent":null,"Title":"\"Select/Unselect\" event for mat-tab-group","State":"open","Body":"### Feature Description\r\n\r\nIn this mat-tab-group, I need a \"Select Unselect\" event for same tab. When I select the tab the tab is fully selected and the page is properly routing but when I go to sub-route on this same page then the page changes but the tab remains selected. At that time I want the tab to be unselected or the event is deleted.\r\n","Url":"https://github.com/angular/components/issues/28361","RelatedDescription":"Open issue \"\"Select/Unselect\" event for mat-tab-group\" (#28361)"},{"Id":"2062749101","IsPullRequest":false,"CreatedAt":"2024-01-03T15:27:35","Actor":"jcachat","Number":"28352","RawContent":null,"Title":"bug(mat-select): Keypress followed by tab before typeaheadDebounceInterval expires causes item to not be selected","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nPrior to version 15, using the keyboard to pick an item in a mat-select followed (quickly) by tab would pick the item corresponding to the key.  As of version 15, that is no longer happening.  If the user tabs before the typeaheadDebounceInterval has elapsed, the mat-select is left unchanged.  After a recent update to our application which upgraded Angular to version 15, this is causing issues with some users who were accustomed to being able to quickly populate a set of mat-selects via keyboard and tab.\r\n\r\nI can workaround this issue on the specific form that is most affected by setting typeaheadDebounceInterval to a much smaller value.  But we have this issue throughout our application.  I'm not sure if it's safe to do that globally in the MatSelectConfig (it will take some time to figure out if that will impact anything in our app).  I would prefer this be fixed to set the value as it did before version 15.\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Go to the custom ErrorStateMatched example on the mat-select examples site: https://material.angular.io/components/select/examples#select-error-state-matcher\r\n2.  Use \"v\" or \"i\" to switch the selected item followed (quickly) by tab.\r\n\n\n### Expected Behavior\n\nThe item corresponding to the keypress should be selected\n\n### Actual Behavior\n\nThe item is not selected after tabbing\n\n### Environment\n\n- Angular: 15+\r\n- CDK/Material: 15+\r\n\r\n","Url":"https://github.com/angular/components/issues/28352","RelatedDescription":"Closed issue \"bug(mat-select): Keypress followed by tab before typeaheadDebounceInterval expires causes item to not be selected\" (#28352)"},{"Id":"2064126549","IsPullRequest":false,"CreatedAt":"2024-01-03T14:25:25","Actor":"Kmaczek","Number":"28360","RawContent":null,"Title":"bug(Datepicker): In multi-year view, date picker doesnt announce selected year range","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nSteps to reproduce:\r\n1. Open multi year view.\r\n![image](https://github.com/angular/components/assets/1743813/1ad1c08f-8d7c-4ebb-b7d3-51a0e0b7efad)\r\n3. Tab to previous (or next) arrow and press enter.\r\n![image](https://github.com/angular/components/assets/1743813/2b0d5fcd-6cf2-44b2-bb0f-8e8d8fc64e4b)\r\n4. Observe that, displayed year range is updated, but it's not announced\r\n5. Tab back to the year range (incorrectly announced for firefox)\r\n![image](https://github.com/angular/components/assets/1743813/18e19d9e-8950-4301-8491-fc957b5b0bb3)\r\n\r\n\r\n![image](https://github.com/angular/components/assets/1743813/1c7e28c5-7c4c-4adb-a9e9-f12fb90d68f8)\r\n\n\n### Reproduction\n\nCan be reproduced on documentation page: https://material.angular.io/components/datepicker/overview#accessibility with basic datepicker example (first one)\r\nI checked it for versions 17.0.4 and 16.2.12, 15.2.9, 14.2.7 and 12.2.13\r\n\r\nI used NVDA, Jaws, Firefox, Chrome\r\n\r\n\n\n### Expected Behavior\n\n- **Related to Repro step no. 3**: Announce change of year range. \r\n![image](https://github.com/angular/components/assets/1743813/f2ecd099-9e9d-42e2-87ec-cc55c43034ee)\r\n\r\n\r\n- **Related to Repro step no. 4**: Announce '1992 to 2015'\n\n### Actual Behavior\n\n- **Related to Repro step no. 3**: Visual changes should be announced to the user. This doesn't happen since version 15.\r\nHappens for both JAWS/NVDA and Chrome/Firefox\r\n\r\n- **Related to Repro step no. 4**:  its announcing previous range '2016 to 2039', instead announcing '1992 to 2015' according to displayed label. This happens for Firefox only.\n\n### Environment\n\n- Angular: 16.1.3 (any after 14)\r\n- CDK/Material: 16.1.3 (any after 14)\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28360","RelatedDescription":"Open issue \"bug(Datepicker): In multi-year view, date picker doesnt announce selected year range\" (#28360)"},{"Id":"2062764531","IsPullRequest":true,"CreatedAt":"2024-01-03T13:00:04","Actor":"programmerkgit","Number":"28353","RawContent":null,"Title":"fix(guides/theming.md) Typo fix of theming.md","State":"closed","Body":"I guess the word \"us\" might be a typo of \"use\". \r\n\r\n\r\n### Seems wrong passage\r\n\r\nThe recommended approach is to rely on the `theme` mixins to lay down your base styles, and if needed _**us**_ the single dimension mixins to override particular aspects for parts of your app (see the section on...\r\n","Url":"https://github.com/angular/components/pull/28353","RelatedDescription":"Closed or merged PR \"fix(guides/theming.md) Typo fix of theming.md\" (#28353)"},{"Id":"2063649264","IsPullRequest":false,"CreatedAt":"2024-01-03T09:53:47","Actor":"MikaStark","Number":"28358","RawContent":null,"Title":"feat(icon): provide standalone-friendly APIs for icon registry testing","State":"open","Body":"### Feature Description\r\n\r\nIt would be nice to have a standalone `provideFakeIconRegistry` function to provide the `MatIconRegistry` with `FakeMatIconRegistry` as a replacement for using `MatIconTestingModule`.\r\n\r\nThis feature request is motivated by the want to enforce standalone APIs way of doing.\r\n\r\nJust like the effort made in this commit : https://github.com/angular/components/commit/7840cd3a779b6e7388971e279bd60de2bcb1e89b\r\n\r\n\r\n\r\n### Use Case\r\n\r\nReplace :\r\n```ts\r\nTestBed.configureTestingModule({\r\n  imports: [MatIconTestingModule, /* ... */],\r\n  // ...\r\n})\r\n\r\n// OR\r\n\r\nTestBed.configureTestingModule({\r\n  providers: [\r\n    //...\r\n   {\r\n      provide: MatIconRegistry,\r\n      useClass: FakeMatIconRegistry,\r\n    },\r\n  ],\r\n  // ...\r\n})\r\n```\r\n\r\nBy :\r\n```ts\r\nTestBed.configureTestingModule({\r\n  providers: [provideFakeIconRegistry(), /* ... */],\r\n  // ...\r\n})\r\n```","Url":"https://github.com/angular/components/issues/28358","RelatedDescription":"Open issue \"feat(icon): provide standalone-friendly APIs for icon registry testing\" (#28358)"},{"Id":"2063567837","IsPullRequest":true,"CreatedAt":"2024-01-03T09:11:53","Actor":"crisbeto","Number":"28356","RawContent":null,"Title":"fix(cdk/table): support hydration","State":"open","Body":"Reworks the table so that it can support hydration. There were a few issues that broke hydration:\r\n1. There wasn't a catch-all `ng-content` slot which meant that the comment nodes representing the table content were dropped, causing an error.\r\n2. The table needs to conditionally wrap some content with native table sections (`thead`,  `tbody` etc.) which was done with direct DOM manipulation. This breaks hydration because Angular won't know about those elements.\r\n\r\nThe first issue is easily resolved by adding an `ng-content` element. It shouldn't affect existing tables, since all the projected content is composed of comment nodes.\r\n\r\nThe second issue is a bit trickier, because we were using content queries to resolve the individual table outlets. Wrapping them in a conditional breaks the query so we have to use something else to resolve them. I've worked around it by using DI which doesn't have the exact same timing, but it appears to be close enough.\r\n\r\nFixes #28355.","Url":"https://github.com/angular/components/pull/28356","RelatedDescription":"Open PR \"fix(cdk/table): support hydration\" (#28356)"},{"Id":"2062874647","IsPullRequest":false,"CreatedAt":"2024-01-02T19:53:34","Actor":"tsenguunchik","Number":"28355","RawContent":null,"Title":"bug(mat-table): Mat Table has skip hydration attribute","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've noticed a lot of material components have ngSkipHydration attribute present such as mat-table. \r\n\r\nThe sidenav component fixed this issue recently in https://github.com/angular/components/pull/28340 and I'm very grateful. Hoping to see all the rest of the components have this fix.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. ng new example --ssr\r\n2. add mat-table \r\n\n\n### Expected Behavior\n\nHydration working as expected when using mat-table\n\n### Actual Behavior\n\nI still see double flicker rendering which means the hydration is not properly working\n\n### Environment\n\n- Angular: 17.0.8\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28355","RelatedDescription":"Open issue \"bug(mat-table): Mat Table has skip hydration attribute\" (#28355)"},{"Id":"2062770770","IsPullRequest":true,"CreatedAt":"2024-01-02T18:08:10","Actor":"kseamon","Number":"28354","RawContent":null,"Title":"perf(cdk/table): Use afterRender hooks","State":"open","Body":"Per Chrome devtools, in the Angular Material devapp, cuts down startup rendering time by about 60ms (~25%). In a real app screen with a single large table, the reduction is ~16%. The main difference is that the change makes a bigger difference when multiple tables are rendering at the same time, since previously separate CoalescedStyleScheduler instances would be grouping tasks separately per-table. Seems to reduce scripting time a smidge as well.","Url":"https://github.com/angular/components/pull/28354","RelatedDescription":"Open PR \"perf(cdk/table): Use afterRender hooks\" (#28354)"},{"Id":"2062131859","IsPullRequest":true,"CreatedAt":"2024-01-02T16:10:01","Actor":"crisbeto","Number":"28349","RawContent":null,"Title":"fix(multiple): provide standalone-friendly APIs for date adapters","State":"closed","Body":"Similarly to the core APIs, these changes add `provider*` functions for the various date adapters.","Url":"https://github.com/angular/components/pull/28349","RelatedDescription":"Closed or merged PR \"fix(multiple): provide standalone-friendly APIs for date adapters\" (#28349)"},{"Id":"2062321990","IsPullRequest":true,"CreatedAt":"2024-01-02T12:06:27","Actor":"crisbeto","Number":"28351","RawContent":null,"Title":"build: resolve api golden failure","State":"closed","Body":"Fixes a failure in the API goldens.","Url":"https://github.com/angular/components/pull/28351","RelatedDescription":"Closed or merged PR \"build: resolve api golden failure\" (#28351)"},{"Id":"2062312183","IsPullRequest":true,"CreatedAt":"2024-01-02T11:56:19","Actor":"crisbeto","Number":"28350","RawContent":null,"Title":"Cherry-pick hydration fixes","State":"closed","Body":"Cherry-picks the changes from #28343 and #28340 to the patch branch.","Url":"https://github.com/angular/components/pull/28350","RelatedDescription":"Closed or merged PR \"Cherry-pick hydration fixes\" (#28350)"},{"Id":"2060986743","IsPullRequest":true,"CreatedAt":"2024-01-02T11:42:57","Actor":"crisbeto","Number":"28343","RawContent":null,"Title":"fix(multiple): enable hydration in autocomplete, menu and select","State":"closed","Body":"Hydration was disabled for `mat-autocomplete`, `mat-menu` and `mat-select`, even though it currently seems to work. These changes enable it to allow for better initial performance.","Url":"https://github.com/angular/components/pull/28343","RelatedDescription":"Closed or merged PR \"fix(multiple): enable hydration in autocomplete, menu and select\" (#28343)"},{"Id":"2061190817","IsPullRequest":true,"CreatedAt":"2024-01-02T11:32:34","Actor":"crisbeto","Number":"28346","RawContent":null,"Title":"build: bump year","State":"closed","Body":"Happy New Year! 🎉🎉🎉","Url":"https://github.com/angular/components/pull/28346","RelatedDescription":"Closed or merged PR \"build: bump year\" (#28346)"},{"Id":"2061413379","IsPullRequest":true,"CreatedAt":"2024-01-01T14:35:23","Actor":"crisbeto","Number":"28348","RawContent":null,"Title":"build: support multiple packages in api approval script","State":"closed","Body":"Updates the `approve-api` script to allow more than one package to be approved at the same time.","Url":"https://github.com/angular/components/pull/28348","RelatedDescription":"Closed or merged PR \"build: support multiple packages in api approval script\" (#28348)"},{"Id":"2061296293","IsPullRequest":false,"CreatedAt":"2024-01-01T04:01:41","Actor":"pieman72","Number":"28347","RawContent":null,"Title":"bug(mat-table): ChromeVox screen-reader highlights multiple table cells at a time","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen navigating with screen reader controls only one table cell should be highlighted at a time, however multiple cells are highlighted.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz-starters-fcezcx.stackblitz.io\r\n\r\nSteps to reproduce:\r\n1. Once the StackBlitz has loaded, click anywhere within the rendered demo.\r\n2. Activate ChromeVox (CTRL + ALT + z)\r\n3. Have ChromeVox select the table (Shift + Search + t), and you'll see that the first two table headers are highlighted together and the third is highlighted separately.\r\n4. Now navigate around the table (CTRL + ALT + Search + [arrows]), and you'll see that multiple table cells are always highlighted\n\n### Expected Behavior\n\nWhen navigating around the table, only one table cell at a time should be highlighted by ChromeVox.\n\n### Actual Behavior\n\nGenerally, the focused cell is highlighted together with the cell to its immediate right (if there is one). Also, all cells in the same row as the focused cell are highlighted separately.\r\n\r\n**Note:** focusing and voicing are correct; it's only the highlighting that's wrong.\n\n### Environment\n\n- Angular: **17.0.8**\r\n- CDK/Material: **17.0.4**\r\n- Browser(s): **Chrome**\r\n- Operating System: **ChromeOS**\r\n","Url":"https://github.com/angular/components/issues/28347","RelatedDescription":"Open issue \"bug(mat-table): ChromeVox screen-reader highlights multiple table cells at a time\" (#28347)"},{"Id":"2061132728","IsPullRequest":false,"CreatedAt":"2023-12-31T18:00:12","Actor":"kiran-cm","Number":"28345","RawContent":null,"Title":"bug(Stepper): Cdk Stepper selected property setter method issue","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCdk Stepper selected property setter method indexOf not setting correct index.\r\n\r\n this.selectedIndex = step && this.steps ? **this.steps.toArray().indexOf(step)** : -1;\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create stepper using [Cdk stepper guide](https://v16.material.angular.io/guide/creating-a-custom-stepper-using-the-cdk-stepper)\r\n2. Add onClick on cdkStep\r\n3. In onClick callback, set **this.selected = this.steps.get(index);**\r\n4. **selectedIndex** property of CdkStepper class not working properly.\r\n\n\n### Expected Behavior\n\n**selectedIndex** property should be set properly correctly when we set **selected** from wrapper component.\n\n### Actual Behavior\n\nselectedIndex set to -1\n\n### Environment\n\n- Angular: v16\r\n- CDK/Material: v16\r\n- Browser(s): NA\r\n- Operating System (e.g. Windows, macOS, Ubuntu): NA\r\n","Url":"https://github.com/angular/components/issues/28345","RelatedDescription":"Open issue \"bug(Stepper): Cdk Stepper selected property setter method issue\" (#28345)"},{"Id":"2060997554","IsPullRequest":false,"CreatedAt":"2023-12-31T09:58:29","Actor":"AbdulTheActivePiecer","Number":"28344","RawContent":null,"Title":"bug(mat-input): outlined inputs don't support RTL","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAny Angular Material form control that is using the \"outline\" appearance, looks messed up in RTL.\r\n![image](https://github.com/angular/components/assets/106555838/11f74560-eacf-4a98-896f-429ba70bd89b)\r\n\r\nwithout RTL they look like this\r\n\r\n![image](https://github.com/angular/components/assets/106555838/261c1694-7222-4fc8-a670-9dbdb03b4e3d)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/yw2eyk?file=src%2Findex.html\r\nSteps to reproduce:\r\n1.  Add Material inputs like mat-select or matInput directive to an input/textarea\r\n2. Make the direction of your html document RTL.\r\n\n\n### Expected Behavior\n\nThat the inputs look fine in both RTL and LTR like the filled inputs\n\n### Actual Behavior\n\nThe inputs borders and label look messed up and sliced to three different parts\n\n### Environment\n\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.4\r\n@angular/material                  17.0.4\r\n@angular/material-moment-adapter   17.0.4\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js          0.14.0","Url":"https://github.com/angular/components/issues/28344","RelatedDescription":"Closed issue \"bug(mat-input): outlined inputs don't support RTL\" (#28344)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-05T03:30:02.651337Z","RunDurationInMilliseconds":1474}