{"Data":{"Angular-Issues":{"Issues":[{"Id":"1577071180","IsPullRequest":true,"CreatedAt":"2023-02-09T01:35:07","Actor":"angular-robot","Number":"49007","RawContent":null,"Title":"build: update dependency webdriver-manager to v13","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webdriver-manager](https://togithub.com/angular/webdriver-manager) | resolutions | major | [`12.1.8` -> `13.0.1`](https://renovatebot.com/diffs/npm/webdriver-manager/12.1.8/13.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/webdriver-manager</summary>\n\n### [`v13.0.1`](https://togithub.com/angular/webdriver-manager/compare/13.0.0...13.0.1)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/13.0.0...13.0.1)\n\n### [`v13.0.0`](https://togithub.com/angular/webdriver-manager/compare/12.1.9...13.0.0)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/12.1.9...13.0.0)\n\n### [`v12.1.9`](https://togithub.com/angular/webdriver-manager/blob/HEAD/CHANGELOG.md#&#8203;1219)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/12.1.8...12.1.9)\n\nUpdates `adm-zip` to version `0.5.2`.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/49007","RelatedDescription":"Open PR \"build: update dependency webdriver-manager to v13\" (#49007)"},{"Id":"1576854886","IsPullRequest":false,"CreatedAt":"2023-02-08T21:59:40","Actor":"cexbrayat","Number":"49006","RawContent":null,"Title":"`ng g @angular/core:standalone` should prefer `NgFor` instead of `NgForOf`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\n```\r\nng new standalone-migration --defaults\r\ncd standalone-migration\r\nng update @angular/core@next @angular/cli@next --force\r\necho \"<div *ngFor=\"let i of [1, 2]\">Hello world</div>\" > src/app/app.component.html\r\nng g @angular/core:standalone --defaults --mode standalone-bootstrap\r\n```\r\n\r\n`app.component.ts` gets migrated to:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { NgForOf } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    standalone: true,\r\n    imports: [NgForOf]\r\n})\r\nexport class AppComponent {\r\n  title = 'standalone-migration';\r\n}\r\n```\r\n\r\n\n\n### Proposed solution\n\nThe recently introduced alias `NgFor` should be used instead of `NgForOf`\n\n### Alternatives considered\n\nIt can be replaced manually","Url":"https://github.com/angular/angular/issues/49006","RelatedDescription":"Open issue \"`ng g @angular/core:standalone` should prefer `NgFor` instead of `NgForOf`\" (#49006)"},{"Id":"1576839695","IsPullRequest":false,"CreatedAt":"2023-02-08T21:43:55","Actor":"cexbrayat","Number":"49005","RawContent":null,"Title":"`ng g @angular/core:standalone` should migrate test components properly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\n```\r\nng new standalone-migration --defaults\r\ncd standalone-migration\r\nng update @angular/core@next @angular/cli@next --force\r\nng g c hello\r\n```\r\n\r\nUpdate the test of `HelloComponent` with:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { HelloComponent } from './hello.component';\r\n\r\n@Component({\r\n  template: '<app-hello></app-hello>'\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('HelloComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    declarations: [TestComponent, HelloComponent]\r\n  }));\r\n\r\n  it('should display hello', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('p').textContent).toContain('hello works!');\r\n  });\r\n});\r\n```\r\n\r\nand run the migration with `ng g @angular/core:standalone --defaults`.\r\n\r\nIt gets migrated to:\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { HelloComponent } from './hello.component';\r\n\r\n@Component({\r\n    template: '<app-hello></app-hello>',\r\n    standalone: true\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('HelloComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    imports: [TestComponent, HelloComponent]\r\n}));\r\n\r\n  it('should display hello', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('p').textContent).toContain('hello works!');\r\n  });\r\n});\r\n```\r\n\r\nNote that `TestComponent` is now standalone, but it does not import `HelloComponent`.\r\n\r\n`ng test` hence throws:\r\n```\r\nChrome 110.0.0.0 (Mac OS 10.15.7) HelloComponent should display hello FAILED\r\n\tError: NG0304: 'app-hello' is not a known element (used in the 'TestComponent' component template):\r\n```\r\n\r\nThis can be fixed by adding `imports: [HelloComponent]` to `TestComponent`\r\n\r\nAlso note that in an ideal scenario `configureTestingModule` could be simplified to:\r\n\r\n```ts\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    imports: [TestComponent] // no need for HelloComponent\r\n  }));\r\n``` \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.0-next.3\r\nNode: 16.17.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.0-next.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.0-next.3\r\n@angular-devkit/build-angular   15.2.0-next.3\r\n@angular-devkit/core            15.2.0-next.3\r\n@angular-devkit/schematics      15.2.0-next.3\r\n@angular/cli                    15.2.0-next.3\r\n@schematics/angular             15.2.0-next.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49005","RelatedDescription":"Open issue \"`ng g @angular/core:standalone` should migrate test components properly\" (#49005)"},{"Id":"1576601567","IsPullRequest":true,"CreatedAt":"2023-02-08T18:26:46","Actor":"pkozlowski-opensource","Number":"49004","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49004","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#49004)"},{"Id":"1576592083","IsPullRequest":true,"CreatedAt":"2023-02-08T18:20:03","Actor":"pkozlowski-opensource","Number":"49003","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/49003","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#49003)"},{"Id":"1576587213","IsPullRequest":true,"CreatedAt":"2023-02-08T18:15:54","Actor":"pkozlowski-opensource","Number":"49002","RawContent":null,"Title":"Bump version to \"v15.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49002","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.4\" with changelog.\" (#49002)"},{"Id":"1576482521","IsPullRequest":true,"CreatedAt":"2023-02-08T16:59:42","Actor":"AleksanderBodurri","Number":"49001","RawContent":null,"Title":"refactor(devtools): consolidate devtools global styles into 1 file","State":"open","Body":"Previously the DevTools demo app and browser app had duplicated styles in their respective styles.scss files.\r\n\r\nThis commit creates a global styles.scss that is imported with sass @use into the demo and browser app styles.scss files. This will prevent any issues where css changes to one are missed in the other. Also reduces duplication of material css theme definitions by consolidating it in one place. The respective styles.scss files for the demo app and browser app continue to exist incase those need environment specific css. For example the browser app requires that height: 100% is set on a document in order to render properly in a browser's devtools tab.\r\n\r\n","Url":"https://github.com/angular/angular/pull/49001","RelatedDescription":"Open PR \"refactor(devtools): consolidate devtools global styles into 1 file\" (#49001)"},{"Id":"1576416106","IsPullRequest":true,"CreatedAt":"2023-02-08T16:15:52","Actor":"devversion","Number":"49000","RawContent":null,"Title":"build: update dependency terser to 5.16.3 [security] ","State":"open","Body":"See individual commits.\r\n\r\nFixed up version of: #48990 \r\n\r\nFor concrete examples of the Terser diff/investigation:\r\n\r\n**Before**:\r\n\r\n<img width=\"651\" alt=\"Screenshot 2023-02-08 at 16 49 06\" src=\"https://user-images.githubusercontent.com/4987015/217587201-1e92cc86-a023-4f86-959d-d4cc9bfa1cf4.png\">\r\n\r\n<img width=\"775\" alt=\"Screenshot 2023-02-08 at 16 49 15\" src=\"https://user-images.githubusercontent.com/4987015/217587240-c41f691c-e941-41d6-841e-ce592fb12664.png\">\r\n\r\n**After**\r\n\r\n<img width=\"782\" alt=\"Screenshot 2023-02-08 at 16 49 20\" src=\"https://user-images.githubusercontent.com/4987015/217587279-b6381296-f621-41af-9175-8d5b42050083.png\">\r\n\r\n<img width=\"779\" alt=\"Screenshot 2023-02-08 at 16 49 26\" src=\"https://user-images.githubusercontent.com/4987015/217587305-1bb1755c-4e34-409c-bb69-1a47d52733fa.png\">\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/49000","RelatedDescription":"Open PR \"build: update dependency terser to 5.16.3 [security] \" (#49000)"},{"Id":"1576370273","IsPullRequest":true,"CreatedAt":"2023-02-08T15:50:44","Actor":"josephperrott","Number":"48999","RawContent":null,"Title":"Contributors update","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular/pull/48999","RelatedDescription":"Open PR \"Contributors update\" (#48999)"},{"Id":"1576281640","IsPullRequest":true,"CreatedAt":"2023-02-08T15:04:02","Actor":"angular-robot","Number":"48998","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.\n\nCloses #48796","Url":"https://github.com/angular/angular/pull/48998","RelatedDescription":"Open PR \"docs: update events\" (#48998)"},{"Id":"1576129887","IsPullRequest":false,"CreatedAt":"2023-02-08T14:39:33","Actor":"priyamtheone","Number":"48995","RawContent":null,"Title":"Problem installing @angular-redux/store in Angular application.","State":"closed","Body":"### Describe the problem that you experienced\n\nI'm new into Angular development and learning how to use Redux. While trying to install Redux using `npm install redux @angular-redux/store --save`, the terminal throws up a bunch of error messages mentioned hereunder.\r\n\r\nI tried installing **redux** and **@angular-redux/store** separately. That way, while **redux** is getting installed successfully, **@angular-redux/store** still throws up the same error. I tried checking for solutions, but in most forums, `npm install redux @angular-redux/store --save` is the recommended command to install them. Even [npm](https://www.npmjs.com/package/@angular-redux/store) and the official sites say so.\r\n\r\nEven after force install, I can't use `import { NgReduxModule, NgRedux } from '@angular-redux/store';` in `app.module.ts`, neither can I access `NgReduxModule` and `NgRedux` in the `imports` array of `app.module.ts`.\r\n\r\nI've also mentioned my development environment trivia below.\r\n\r\nSo what's wrong with my system? How do I get rid of the errors and can install Redux successfully? Please help as I'm new into it and finding it difficult to figure it out.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nnpm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR! \r\nnpm ERR! While resolving: myapp@0.0.0\r\nnpm ERR! Found: @angular/core@14.2.12\r\nnpm ERR! node_modules/@angular/core\r\nnpm ERR!   @angular/core@\"^14.2.0\" from the root project\r\nnpm ERR! \r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @angular/core@\"^7.0.0\" from @angular-redux/store@10.0.0\r\nnpm ERR! node_modules/@angular-redux/store\r\nnpm ERR!   @angular-redux/store@\"*\" from the root project\r\nnpm ERR! \r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR! \r\nnpm ERR! See C:\\Users\\Admin\\AppData\\Local\\npm-cache\\eresolve-report.txt for a full report.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Admin\\AppData\\Local\\npm-cache\\_logs\\2023-02-08T07_15_27_253Z-debug-0.log\r\n```\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nMy development environment trivia:\r\n\r\n1) Node: 18.12.1\r\n2) Package Manager: npm 8.5.5\r\n3) Angular CLI: 14.2.10\r\n4) Angular: 14.2.12\r\n5) OS: Windows 10 win32 x64\n```\n","Url":"https://github.com/angular/angular/issues/48995","RelatedDescription":"Closed issue \"Problem installing @angular-redux/store in Angular application.\" (#48995)"},{"Id":"1576163645","IsPullRequest":false,"CreatedAt":"2023-02-08T14:31:01","Actor":"GiovaneRobertiTafine","Number":"48997","RawContent":null,"Title":"Error when injecting with token in a library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a library that exports a pipe:\r\n\r\n```typescript\r\n@Pipe({\r\n    name: 'fromToDisplay'\r\n})\r\nexport class FromToDisplayPipe implements PipeTransform {\r\n    public list: { [index: string]: any; } | any;\r\n```\r\n\r\nand in the lib module:\r\n\r\n```typescript\r\n    exports: [\r\n        SdkLibComponent,\r\n        FromToDisplayPipe\r\n    ],\r\n    providers: [],\r\n})\r\nexport class SdkLibModule {\r\n\r\n    static forRoot(\r\n        config?: SdkjConfig\r\n    ): ModuleWithProviders<SdkLibModule> {\r\n        return {\r\n            ngModule: SdkLibModule,\r\n            providers: [{ provide: SDK_CONFIG, useValue: config }],\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nThrough the module I provide an injectable token, with a value received when using the lib:\r\n\r\n```typescript\r\nimport { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface SdkjConfig {\r\n    fromToDisplay?: { [index: string]: any; };\r\n}\r\n\r\nexport const SDK_CONFIG = new InjectionToken<SdkjConfig>(\r\n    \"SDK_CONFIG\"\r\n);\r\n```\r\n\r\nusing the lib:\r\n\r\n```typescript\r\nSdkLibModule.forRoot({\r\n            fromToDisplay: {\r\n                'display-test': {\r\n                    'teste1': 'TESTE 1',\r\n                    0: 'TESTE 0'\r\n                }\r\n            }\r\n        }),\r\n        \r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\n```\r\n\r\nBut when trying to provide the token in the pipe I get an error:\r\n\r\n```typescript\r\nexport class FromToDisplayPipe implements PipeTransform {\r\n    public list: { [index: string]: any; } | any;\r\n\r\n    constructor(\r\n        @Inject(\"SDK_CONFIG\") private SdkService: SdkjConfig\r\n    ) {\r\n    }\r\nmain.ts:7 Error: NG0203: inject() must be called from an injection context such as a \r\n\\n constructor, a factory function, a field initializer, or a function used with \r\n\\n `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\r\n```\r\n\r\nconfig:\r\n\r\n\"@angular/common\": \"^15.1.0\",\r\n\"@angular/core\": \"^15.1.0\",\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nmain.ts:7 Error: NG0203: inject() must be called from an injection context such as a \r\n\\n constructor, a factory function, a field initializer, or a function used with \r\n\\n `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: ~15.1.3\r\nNode: 18.13.0\r\nPackage Manager: npm 8.19.3\r\nOS: Windows x64\r\n\r\nAngular: 15\r\n\r\nPackage\t\t\t\tVersion\r\n---------------------------------------\r\n@angular-devkit/build-angular\t15.1.4\r\n@angular-devkit/core\t\t^15.1.0\r\nrxjs\t\t\t\t~7.8.0\r\ntypescript\t\t\t~4.9.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48997","RelatedDescription":"Closed issue \"Error when injecting with token in a library\" (#48997)"},{"Id":"1575843951","IsPullRequest":true,"CreatedAt":"2023-02-08T14:20:05","Actor":"crisbeto","Number":"48993","RawContent":null,"Title":"fix(migrations): avoid generating imports with forward slashes","State":"closed","Body":"We're using Node's `path` utilities to remap existing imports and create new ones which can yield paths with forward slash separators.\r\n\r\nThese changes add some logic to ensure that we only generate forward slashes.","Url":"https://github.com/angular/angular/pull/48993","RelatedDescription":"Closed or merged PR \"fix(migrations): avoid generating imports with forward slashes\" (#48993)"},{"Id":"1574097851","IsPullRequest":true,"CreatedAt":"2023-02-08T14:18:23","Actor":"crisbeto","Number":"48987","RawContent":null,"Title":"Various standalone migrations improvements","State":"closed","Body":"Includes the following improvements to the standalone migration. There is more info in each of the commits:\r\n1. Only excludes bootstrapped declarations from the first step of the migration, rather than all of them.\r\n2. Migrates tests when switching the root module to standalone.\r\n3. Doesn't copy over `ModuleWithProviders` when migrating tests.\r\n4. Preserves the project's tsconfig when constructing the migration program.\r\n5. Reduces the number of files that the migration has to load in order to speed it up.\r\n6. Corrects any standalone declarations that might still be left in the `declarations` array from a previous migration. This is primarily targeted towards tests.\r\n\r\nFixes #48944.\r\nFixes #48971.","Url":"https://github.com/angular/angular/pull/48987","RelatedDescription":"Closed or merged PR \"Various standalone migrations improvements\" (#48987)"},{"Id":"1576131968","IsPullRequest":true,"CreatedAt":"2023-02-08T13:31:35","Actor":"devversion","Number":"48996","RawContent":null,"Title":"build: update cross-repo angular dependencies ","State":"open","Body":"Updates cross deps.","Url":"https://github.com/angular/angular/pull/48996","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies \" (#48996)"},{"Id":"1576005967","IsPullRequest":false,"CreatedAt":"2023-02-08T12:13:06","Actor":"DilipV2503","Number":"48994","RawContent":null,"Title":"Compile time error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\n**Hii,\r\nI am getting this error while I connect a web-sdk into our angular project**\r\n\r\n![InkedError](https://user-images.githubusercontent.com/83951998/217497916-95de5f1a-c066-4e16-9631-baf499f565f0.jpg)\r\n\r\nPlease help me out to fix this error.\r\n\r\nThank you.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 10.0.8\r\nNode: 16.15.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.6\r\n... animations, common, compiler, core, forms, language-service\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1000.8\r\n@angular-devkit/build-angular      0.1000.8\r\n@angular-devkit/build-optimizer    0.1000.8\r\n@angular-devkit/build-webpack      0.1000.8\r\n@angular-devkit/core               10.0.8\r\n@angular-devkit/schematics         10.0.8\r\n@angular/cdk                       10.2.7\r\n@angular/cli                       10.0.8\r\n@angular/compiler-cli              10.2.5\r\n@angular/material                  10.2.7\r\n@angular/material-moment-adapter   11.2.13\r\n@ngtools/webpack                   10.0.8\r\n@schematics/angular                10.0.8\r\n@schematics/update                 0.1000.8\r\nrxjs                               6.6.7\r\ntypescript                         3.9.5\r\nwebpack                            4.43.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48994","RelatedDescription":"Closed issue \"Compile time error\" (#48994)"},{"Id":"1573742858","IsPullRequest":true,"CreatedAt":"2023-02-07T19:49:10","Actor":"angular-robot","Number":"48983","RawContent":null,"Title":"build: update eslint dependencies to v5.51.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.50.0/5.51.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.50.0/5.51.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[sort-type-constituents] fixed behavior change ([#&#8203;6384](https://togithub.com/typescript-eslint/typescript-eslint/issues/6384)) ([5bf7f7f](https://togithub.com/typescript-eslint/typescript-eslint/commit/5bf7f7fe48aee61a676dfbe829c2a5e9e44cd552)), closes [#&#8203;6339](https://togithub.com/typescript-eslint/typescript-eslint/issues/6339)\n-   **eslint-plugin:** do not use .at(), Node 14 does not support it ([#&#8203;6402](https://togithub.com/typescript-eslint/typescript-eslint/issues/6402)) ([077ed1b](https://togithub.com/typescript-eslint/typescript-eslint/commit/077ed1b5be844df35b7fba554ddae579b3144787))\n\n##### Features\n\n-   **eslint-plugin:** \\[naming-convention] improve performance by removing unnecessary selectors ([#&#8203;6376](https://togithub.com/typescript-eslint/typescript-eslint/issues/6376)) ([3647a1c](https://togithub.com/typescript-eslint/typescript-eslint/commit/3647a1c1bbcfe6551647632fc2d978fa90881de1))\n-   **eslint-plugin:** \\[no-floating-promises] error on logical expression ([#&#8203;6356](https://togithub.com/typescript-eslint/typescript-eslint/issues/6356)) ([f330e06](https://togithub.com/typescript-eslint/typescript-eslint/commit/f330e0651548d55163ddc3233c90fd3cbe37c9c0))\n-   **eslint-plugin:** \\[no-import-type-side-effects] add rule to warn against runtime side effects with `verbatimModuleSyntax` ([#&#8203;6394](https://togithub.com/typescript-eslint/typescript-eslint/issues/6394)) ([b14d3be](https://togithub.com/typescript-eslint/typescript-eslint/commit/b14d3be0f305d71e0adfc9381e9de993898b2b43))\n-   **eslint-plugin:** \\[strict-boolean-expressions] add allow nullable enum to strict boolean expressions ([#&#8203;6096](https://togithub.com/typescript-eslint/typescript-eslint/issues/6096)) ([d4747cd](https://togithub.com/typescript-eslint/typescript-eslint/commit/d4747cd8cc9dad2bf2cb64e1c0e8980ce34d82c7))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/48983","RelatedDescription":"Closed or merged PR \"build: update eslint dependencies to v5.51.0\" (#48983)"},{"Id":"1574880425","IsPullRequest":true,"CreatedAt":"2023-02-07T19:07:09","Actor":"angular-robot","Number":"48990","RawContent":null,"Title":"build: update dependency terser to v5.14.2 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.14.1` -> `5.14.2`](https://renovatebot.com/diffs/npm/terser/5.14.1/5.14.2) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2022-25858](https://nvd.nist.gov/vuln/detail/CVE-2022-25858)\n\nThe package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.14.2`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5142)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.14.1...v5.14.2)\n\n-   Security fix for RegExps that should not be evaluated (regexp DDOS)\n-   Source maps improvements ([#&#8203;1211](https://togithub.com/terser/terser/issues/1211))\n-   Performance improvements in long property access evaluation ([#&#8203;1213](https://togithub.com/terser/terser/issues/1213))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/48990","RelatedDescription":"Open PR \"build: update dependency terser to v5.14.2 [security]\" (#48990)"},{"Id":"1574880185","IsPullRequest":true,"CreatedAt":"2023-02-07T19:06:57","Actor":"angular-robot","Number":"48989","RawContent":null,"Title":"build: update dependency json5 to v2.2.2 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [json5](http://json5.org/) ([source](https://togithub.com/json5/json5)) | devDependencies | patch | [`2.2.1` -> `2.2.2`](https://renovatebot.com/diffs/npm/json5/2.2.1/2.2.2) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2022-46175](https://togithub.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h)\n\nThe `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```\n\n---\n\n### Release Notes\n\n<details>\n<summary>json5/json5</summary>\n\n### [`v2.2.2`](https://togithub.com/json5/json5/blob/HEAD/CHANGELOG.md#v222-code-c222--diff-d222)\n\n[Compare Source](https://togithub.com/json5/json5/compare/v2.2.1...v2.2.2)\n\n[c2.2.2]: https://togithub.com/json5/json5/tree/v2.2.2\n\n[d2.2.2]: https://togithub.com/json5/json5/compare/v2.2.1...v2.2.2\n\n-   Fix: Properties with the name `__proto__` are added to objects and arrays.\n    (\\[[#&#8203;199](https://togithub.com/json5/json5/issues/199)]) This also fixes a prototype pollution vulnerability reported by\n    Jonathan Gregson! (\\[[#&#8203;295](https://togithub.com/json5/json5/issues/295)]).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/48989","RelatedDescription":"Open PR \"build: update dependency json5 to v2.2.2 [security]\" (#48989)"},{"Id":"1574239540","IsPullRequest":true,"CreatedAt":"2023-02-07T17:01:13","Actor":"crisbeto","Number":"48988","RawContent":null,"Title":"fix(compiler-cli): incorrectly detecting forward refs when symbol already exists in file","State":"closed","Body":"In #48898 the `isForwardRef` flag was added to indicate whether a reference should be wrapped in a `forwardRef`. This logic assumed that the node can't be referring to another node within the same file, however from testing it looks like that's not actually the case, because we hit the same code path when an external import to the same symbol exists already.","Url":"https://github.com/angular/angular/pull/48988","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): incorrectly detecting forward refs when symbol already exists in file\" (#48988)"},{"Id":"1574056108","IsPullRequest":false,"CreatedAt":"2023-02-07T14:50:45","Actor":"e-oz","Number":"48986","RawContent":null,"Title":"Please report about unknown tags","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nRight now one can forget to import some component to render a tag, and Angular will be completely silent about it, even in runtime.\n\n### Proposed solution\n\nPlease generate some warning or error during compilation, if some tag is unknown and there is no component imported with matching selector.\n\n### Alternatives considered\n\n🤷‍♂️","Url":"https://github.com/angular/angular/issues/48986","RelatedDescription":"Closed issue \"Please report about unknown tags\" (#48986)"},{"Id":"1573805791","IsPullRequest":false,"CreatedAt":"2023-02-07T07:15:00","Actor":"matrium0","Number":"48984","RawContent":null,"Title":"Documentation about critical inlining styles does not mention impact on CSP","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nIf you use inlineCritical=true (which is the default) your CSP needs to have \"unsafe-inline\" in their \"script-src\". This is due to the way critical inline works (with an \"onload\" event). I think the [CSP documentation](https://angular.io/guide/security#content-security-policy) is lacking, because the default CSP does not work with Angular in any but the most trivial cases.\r\n\r\nHonestly having to set unsafe-inline for script-src is such a huge blow to CSP, that you almost might completely deactivate it. \r\n\r\nAnyway: this really should be mentioned in the Security -> CSP area to make this more clear to the user. Ideally this would describe the trade-off involved\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.io/guide/security#content-security-policy\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nCSP documentation should mention what settings you need for your usual Angular application (not just the hello-world example with zero styles)","Url":"https://github.com/angular/angular/issues/48984","RelatedDescription":"Open issue \"Documentation about critical inlining styles does not mention impact on CSP\" (#48984)"},{"Id":"1573269976","IsPullRequest":false,"CreatedAt":"2023-02-07T06:21:47","Actor":"shivachaturvedhi9","Number":"48979","RawContent":null,"Title":"Alter scss/css variables from angular typescript","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAble to use typescript variables, which can be rendered or altered through api calls,\r\nthese changes needs to be reflected in scss / css files\r\n\r\nRight now, only features, could be able to see are:  able to declare fixed values in scss file and then\r\nuse them in all other files.\r\nBut the scss file , we cannot change using api calls.\r\n\r\nLooking for an ability to alter scss variables throuh api calls\r\n\n\n### Proposed solution\n\nIt is a request. no idea of solution\r\n\n\n### Alternatives considered\n\nno idea how to implement","Url":"https://github.com/angular/angular/issues/48979","RelatedDescription":"Closed issue \"Alter scss/css variables from angular typescript\" (#48979)"},{"Id":"1573466123","IsPullRequest":false,"CreatedAt":"2023-02-06T23:52:09","Actor":"anjunar","Number":"48982","RawContent":null,"Title":"Reactive Form gets wrong path with nested groups when doing it recursivly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\nThe formControlName has as parent the FormControlDirective and not the formGroupName as parent. In this way the 3 Inputs are missing the Form Group \"form\"\r\n\r\n```\r\n<button type=\"button\" (click)=\"onClick()\">Load</button>\r\n<form [formGroup]=\"form\">\r\n  <ng-container *ngTemplateOutlet=\"fields; context : {$implicit : schema}\"></ng-container>\r\n\r\n  <ng-template #fields let-node>\r\n    <ng-container *ngFor=\"let control of node.properties | keyvalue\">\r\n      <ng-container [ngSwitch]=\"widget(control.value)\">\r\n        <ng-container *ngSwitchCase=\"'form'\">\r\n          <div [formGroupName]=\"key(control)\" >\r\n            <ng-container *ngTemplateOutlet=\"fields; context : {$implicit : control.value}\"></ng-container>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <input type=\"text\" [formControlName]=\"key(control)\" [placeholder]=\"key(control)\">\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-template>\r\n</form>\r\n```\r\n```\r\n{\r\n  \"$schema\" : {\r\n    \"properties\" : {\r\n      \"form\" : {\r\n        \"widget\" : \"form\",\r\n        \"type\" : \"object\",\r\n        \"properties\" : {\r\n          \"firstName\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"First Name\",\r\n            \"widget\" : \"text\"\r\n          },\r\n          \"lastName\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"Last Name\",\r\n            \"widget\" : \"text\"\r\n          },\r\n          \"birthDate\" : {\r\n            \"type\" : \"string\",\r\n            \"title\" : \"Birthdate\",\r\n            \"widget\" : \"date\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"form\" : {\r\n    \"firstName\" : \"Patrick\",\r\n    \"lastName\" : \"Bittner\",\r\n    \"birthDate\" : \"1980-04-01\"\r\n  }\r\n}\r\n```\r\n\r\n```\r\nimport {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Node} from \"./as-meta-form.classes\";\r\n\r\n@Component({\r\n  selector: 'as-meta-form',\r\n  templateUrl: 'as-meta-form.component.html',\r\n  styleUrls: ['as-meta-form.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AsMetaFormComponent implements OnInit {\r\n\r\n  @Input() model!: any\r\n  @Input() schema!: Node\r\n  form!: FormGroup\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group(this.schema2Form(this.schema.properties));\r\n  }\r\n\r\n  onClick() {\r\n    this.form.setValue({form: this.model.form})\r\n  }\r\n\r\n  key(value: any): string {\r\n    return value.key\r\n  }\r\n\r\n  widget(value: any): string {\r\n    return value.widget\r\n  }\r\n\r\n  schema2Form(properties: any): FormGroup {\r\n    let switchNode = (node: any) => {\r\n      switch (node.widget) {\r\n        case \"form\" : {\r\n          return this.formBuilder.group(this.schema2Form(node.properties))\r\n        }\r\n        default : {\r\n          return [\"\"]\r\n        }\r\n      }\r\n    }\r\n\r\n    return Object.entries(properties).reduce((prev, [key, value]) => {\r\n      prev[key] = switchNode(value);\r\n      return prev;\r\n    }, {} as any)\r\n  }\r\n\r\n}\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nERROR Error: Cannot find control with name: 'birthDate'\r\nERROR Error: Cannot find control with name: 'lastName'\r\nERROR Error: Cannot find control with name: 'firstName'\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.1\r\nNode: 19.4.0 (Unsupported)\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.1\r\n@angular-devkit/build-angular   15.1.1\r\n@angular-devkit/core            15.1.1\r\n@angular-devkit/schematics      15.1.1\r\n@angular/cli                    15.1.1\r\n@schematics/angular             15.1.1\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48982","RelatedDescription":"Open issue \"Reactive Form gets wrong path with nested groups when doing it recursivly\" (#48982)"},{"Id":"1573412164","IsPullRequest":true,"CreatedAt":"2023-02-06T22:49:26","Actor":"gitmibrahim","Number":"48981","RawContent":null,"Title":"docs: fix aot is the default compiler","State":"open","Body":"## PR Type\r\n\r\n- [x] Documentation content changes\r\n\r\n## What is the current behavior?\r\nIn https://angular.io/guide/file-structure#application-source-files describing `main.ts`, it still states that JIT is the default compiler over AOT.\r\n\r\n## What is the new behavior?\r\n- Updated information.\r\n- Link to the update in the docs.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48981","RelatedDescription":"Open PR \"docs: fix aot is the default compiler\" (#48981)"},{"Id":"1573411828","IsPullRequest":true,"CreatedAt":"2023-02-06T22:48:59","Actor":"alxhub","Number":"48980","RawContent":null,"Title":"feat(compiler-cli): DI mode for ctors with default values","State":"open","Body":"Previously, the AOT compiler would attempt to generate DI constructor calls for all constructors, and report errors if explicit type annotations or other problems prevented them from being generated.\r\n\r\nThis commit adds a new feature which specially handles constructors that have default values specificed for all parameters. When the compiler encounters such a constructor, it now generates a zero-arg constructor call (`new ClassName()`) as the factory function instead of a normal DI call. This means that the default values (the initializers) of all parameters will be used.\r\n\r\nWith this feature, the constructor form:\r\n\r\n```typescript\r\nconstructor(foo = inject(FooService), bar = inject(BarService)) {}\r\n```\r\n\r\nnow works correctly. Such a constructor can use DI in production, and have these default values overridden for tests.\r\n\r\nNote that this feature only works in AOT mode. In JIT, there is no reflection information available regarding the presence/absence of parameter initializers, and so the JIT compiler still generates an error if a parameter does not have an injectable type.\r\n\r\nFixes #47606","Url":"https://github.com/angular/angular/pull/48980","RelatedDescription":"Open PR \"feat(compiler-cli): DI mode for ctors with default values\" (#48980)"},{"Id":"1573267307","IsPullRequest":false,"CreatedAt":"2023-02-06T20:56:51","Actor":"GabrielBB","Number":"48978","RawContent":null,"Title":"Standalone Component DebugElements are missing properties","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf you use a non standalone `ChildComponent` by its selector and pass an attribute, this will be included inside `DebugElement.properties` . Example: When doing `<child-component [foos]=\"fooList\"/>` then `DebugElement.properties.foos` will contain `fooList` . However, if you add `standalone: true` to `ChildComponent` and import it from `ParentComponent` , at the time of testing `ParentComponent` and querying `child-component`, `DebugElement.properties.foos` will return `undefined` . \r\n\r\nWorkaround: If I do `DebugElement.componentInstance.foos` then the value is there, however this requires me to change a lot of tests when migrating my project to standalone.\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nFails at: `expect(childComponent.properties.foos).toBe([]);`\r\n\r\n`Expected undefined to be []`\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.4\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.2\r\n@angular-devkit/build-angular   15.1.3\r\n@angular-devkit/core            15.1.3\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.6\r\ntypescript                      4.8.4\r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48978","RelatedDescription":"Open issue \"Standalone Component DebugElements are missing properties\" (#48978)"},{"Id":"1572950404","IsPullRequest":true,"CreatedAt":"2023-02-06T20:32:38","Actor":"jessicajaniuk","Number":"48975","RawContent":null,"Title":"fix(dev-infra): Fix code ownership for animations package","State":"closed","Body":"An incorrect username was added to the reviewers list for animations.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: pullapprove fix\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48975","RelatedDescription":"Closed or merged PR \"fix(dev-infra): Fix code ownership for animations package\" (#48975)"},{"Id":"1573923756","IsPullRequest":false,"CreatedAt":"2023-02-06T20:09:05","Actor":"Andrew-Marks-Trisept","Number":"48985","RawContent":null,"Title":"extract-i18n: Broken parsing of interpolated values with es2020","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nAngular 13 / es2015\r\n\r\n### Description\r\n\r\nAfter upgrading our app to Angular 14, we noticed odd values in our .xlf files when running extract-i18n.  (We actually use the [ng-extract-i18-merge](https://github.com/daniel-sc/ng-extract-i18n-merge) package but it doesn't matter -- I was able to reproduce this with the standard `ng extract-i18n` command).\r\n\r\nIt seems like the change from `\"target\": \"es2015\"` to `\"target\": \"es2020\"` in `tsconfig.json` is causing some messages with interpolated values in them to be parsed incorrectly, resulting in broken/incorrect messages.  **If I change the value back to \"es2015\", everything works as it did before.**\r\n\r\nThere is something weird where having text inside the message with the interpolated value affects it in different ways depending on where that text is.  \r\n\r\n### Minimal Reproduction\r\n\r\nBelow you'll see cases 2 and 4 get broken in es2020:\r\n\r\n_Example HTML:_\r\n```\r\n<span i18n=\"@@something.test1\">Before {{ someVar }}</span>\r\n<span i18n=\"@@something.test2\">{{ someVar }} After</span>\r\n<span i18n=\"@@something.test3\">Before and {{ someVar }} After</span>\r\n<span i18n=\"@@something.test4\">{{ someVar }}</span>\r\n\r\n<p>Next element</p>\r\n```\r\n\r\n_**Working** .xlf output using es2015:_\r\n```\r\n<trans-unit id=\"something.test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n```\r\n\r\n_**Broken** .xlf output using es2020:_\r\n```\r\n<trans-unit id=\"something.test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"After&lt;/span&gt;\r\n&lt;\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"something.test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"&lt;/span&gt;\r\n\r\n&lt;p&gt;Nex\"/></source>\r\n</trans-unit>\r\n```\r\n\r\nNote that test 2 and test 4 are broken.  Rather than having the correct variable, it pulls in an encoded version of the beginning of the next element after the one tagged for i18n.\r\n\r\nWhat's also strange is that is **just changing the length of the IDs** causes it to parse differently...\r\n\r\n_Example HTML 2 with shorter IDs:_\r\n```\r\n<span i18n=\"@@test1\">Before {{ someVar }}</span>\r\n<span i18n=\"@@test2\">{{ someVar }} After</span>\r\n<span i18n=\"@@test3\">Before and {{ someVar }} After</span>\r\n<span i18n=\"@@test4\">{{ someVar }}</span>\r\n\r\n<p>Next element</p>\r\n```\r\n\r\n_**Different broken** .xlf output using es2020:_\r\n```\r\n<trans-unit id=\"test1\" datatype=\"html\">\r\n    <source>Before <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/></source>\r\n</trans-unit>\r\n<trans-unit id=\"test2\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"Afte\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"test3\" datatype=\"html\">\r\n    <source>Before and <x id=\"INTERPOLATION\" equiv-text=\"{{ someVar }}\"/> After</source>\r\n</trans-unit>\r\n<trans-unit id=\"test4\" datatype=\"html\">\r\n    <source><x id=\"INTERPOLATION\" equiv-text=\"&lt;/spa\"/></source>\r\n</trans-unit>\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 14.2.10\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1402.10\r\n@angular-devkit/build-angular     14.2.10\r\n@angular-devkit/core              13.3.7\r\n@angular-devkit/schematics        13.3.7\r\n@angular/cdk                      14.2.7\r\n@angular/cli                      14.2.10\r\n@angular/flex-layout              14.0.0-beta.41\r\n@angular/material                 14.2.7\r\n@angular/material-luxon-adapter   14.2.7\r\n@schematics/angular               13.3.7\r\nrxjs                              7.4.0\r\ntypescript                        4.6.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48985","RelatedDescription":"Open issue \"extract-i18n: Broken parsing of interpolated values with es2020\" (#48985)"},{"Id":"1573073381","IsPullRequest":false,"CreatedAt":"2023-02-06T18:28:31","Actor":"e-oz","Number":"48976","RawContent":null,"Title":"Please report about circular dependencies of standalone components on \"build\" step","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncompiler\r\n\r\n### Description\r\n\r\nIf standalone component A imports standalone component B, and B imports A, then `ReferenceError: Cannot access 'A' before initialization` will be raised. \r\nBut it will be only raised in runtime 🤷‍♂️\r\n\r\n\r\n### Proposed solution\r\n\r\nPlease do not allow to compile components with circular dependencies.\r\n\r\n### Alternatives considered\r\n\r\nOr, allow circular dependencies 😜","Url":"https://github.com/angular/angular/issues/48976","RelatedDescription":"Open issue \"Please report about circular dependencies of standalone components on \"build\" step\" (#48976)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1576874306","IsPullRequest":true,"CreatedAt":"2023-02-08T22:59:33","Actor":"dgp1130","Number":"24681","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24681","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#24681)"},{"Id":"1576761165","IsPullRequest":true,"CreatedAt":"2023-02-08T22:08:58","Actor":"dgp1130","Number":"24680","RawContent":null,"Title":"docs: release notes for the v15.1.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24680","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.5 release\" (#24680)"},{"Id":"1576667868","IsPullRequest":true,"CreatedAt":"2023-02-08T20:29:37","Actor":"dgp1130","Number":"24679","RawContent":null,"Title":"Bump version to \"v15.1.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24679","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.5\" with changelog.\" (#24679)"},{"Id":"1575548799","IsPullRequest":true,"CreatedAt":"2023-02-08T19:11:08","Actor":"angular-robot","Number":"24673","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [open](https://togithub.com/sindresorhus/open) | dependencies | patch | [`8.4.0` -> `8.4.1`](https://renovatebot.com/diffs/npm/open/8.4.0/8.4.1) |\n| [open](https://togithub.com/sindresorhus/open) | devDependencies | patch | [`8.4.0` -> `8.4.1`](https://renovatebot.com/diffs/npm/open/8.4.0/8.4.1) |\n| [rules_pkg](https://togithub.com/bazelbuild/rules_pkg) | http_archive | patch | `0.8.0` -> `0.8.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sindresorhus/open</summary>\n\n### [`v8.4.1`](https://togithub.com/sindresorhus/open/releases/tag/v8.4.1)\n\n[Compare Source](https://togithub.com/sindresorhus/open/compare/v8.4.0...v8.4.1)\n\n-   Fix `allowNonzeroExitCode` option ([#&#8203;296](https://togithub.com/sindresorhus/open/issues/296))  [`051edca`](https://togithub.com/sindresorhus/open/commit/051edca)\n-   Fix the `app` argument with WSL ([#&#8203;295](https://togithub.com/sindresorhus/open/issues/295))  [`4cf1a6d`](https://togithub.com/sindresorhus/open/commit/4cf1a6d)\n\n</details>\n\n<details>\n<summary>bazelbuild/rules_pkg</summary>\n\n### [`v0.8.1`](https://togithub.com/bazelbuild/rules_pkg/releases/tag/0.8.1)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_pkg/compare/0.8.0...0.8.1)\n\n**New Features**\n\n-   Expose tar manifest as an output ([#&#8203;643](https://togithub.com/bazelbuild/rules_pkg/issues/643))\n-   Support license attribute in pkg_deb ([#&#8203;651](https://togithub.com/bazelbuild/rules_pkg/issues/651))\n-   Add support for the txz extension in pkg_tar ([#&#8203;653](https://togithub.com/bazelbuild/rules_pkg/issues/653)) ([#&#8203;654](https://togithub.com/bazelbuild/rules_pkg/issues/654))\n\n**Fixes**\n\n-   Explicitly store implicit parent directories in zip files ([#&#8203;640](https://togithub.com/bazelbuild/rules_pkg/issues/640))\n-   Remove unnecessary `to_list()` calls ([#&#8203;639](https://togithub.com/bazelbuild/rules_pkg/issues/639))\n-   Apply package_dir to pkg_mklink ([#&#8203;637](https://togithub.com/bazelbuild/rules_pkg/issues/637))\n\n**Thanks to**\nAlex Eagle, Nils Semmelrock, Doug Rabson, Fabian Meumertzheim\n\n**WORKSPACE setup**\n\n```\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_pkg\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.8.1/rules_pkg-0.8.1.tar.gz\",\n        \"https://github.com/bazelbuild/rules_pkg/releases/download/0.8.1/rules_pkg-0.8.1.tar.gz\",\n    ],\n    sha256 = \"8c20f74bca25d2d442b327ae26768c02cf3c99e93fad0381f32be9aab1967675\",\n)\nload(\"@&#8203;rules_pkg//:deps.bzl\", \"rules_pkg_dependencies\")\nrules_pkg_dependencies()\n\n```\n\n**Using the rules**\n\nSee [the documentation](https://bazelbuild.github.io/rules_pkg)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24673","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24673)"},{"Id":"1572117577","IsPullRequest":true,"CreatedAt":"2023-02-08T19:10:52","Actor":"angular-robot","Number":"24663","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24663","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24663)"},{"Id":"1576362444","IsPullRequest":true,"CreatedAt":"2023-02-08T19:10:03","Actor":"alan-agius4","Number":"24677","RawContent":null,"Title":"ci: enable HTTP caching for Bazel on Windows","State":"closed","Body":"\r\n\r\nThis commit enables Bazel HTTP caching for Windows runs. \r\n\r\nBefore: \r\n```\r\nbazel-e2e-cli-win: 22m 39s\r\n```\r\n\r\nAfter: \r\n```\r\nbazel-e2e-cli-win: 8m 32s\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/24677","RelatedDescription":"Closed or merged PR \"ci: enable HTTP caching for Bazel on Windows\" (#24677)"},{"Id":"1576231899","IsPullRequest":true,"CreatedAt":"2023-02-08T15:32:56","Actor":"alan-agius4","Number":"24676","RawContent":null,"Title":"ci: enable RBE for Windows CI runs","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24676","RelatedDescription":"Closed or merged PR \"ci: enable RBE for Windows CI runs\" (#24676)"},{"Id":"1574081043","IsPullRequest":true,"CreatedAt":"2023-02-08T14:34:07","Actor":"alan-agius4","Number":"24671","RawContent":null,"Title":"ci: enable RBE for Windows CI runs","State":"closed","Body":"This commit enables RBE for Windows CI runs.\r\n","Url":"https://github.com/angular/angular-cli/pull/24671","RelatedDescription":"Closed or merged PR \"ci: enable RBE for Windows CI runs\" (#24671)"},{"Id":"1575790314","IsPullRequest":false,"CreatedAt":"2023-02-08T10:17:40","Actor":"DilipV2503","Number":"24675","RawContent":null,"Title":"Module build failed Error in compile time","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Hii, \r\nI am getting this error while we connecting web-sdk into our angular project**\r\n\r\n![InkedError](https://user-images.githubusercontent.com/83951998/217490308-6bd473c3-4cbf-49c7-b963-d92fb51854ab.jpg)\r\n\r\nplease help me out to solve this error.\r\n\r\nThank you\n\n### Minimal Reproduction\n\nNA\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 10.0.8\r\nNode: 16.15.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.6\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24675","RelatedDescription":"Closed issue \"Module build failed Error in compile time\" (#24675)"},{"Id":"1576373681","IsPullRequest":false,"CreatedAt":"2023-02-08T08:37:23","Actor":"000panther","Number":"24678","RawContent":null,"Title":"safety-worker.js: same source code as ngsw-worker.js","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe are currently trying to get rid of an old service worker using the safety-worker.js. While writing the corresponding scripts for replacing the ngsw-worker.js with the safety-worker.js I noticed that the contents of the files are the same. \r\n\r\nI checked the source of https://github.com/angular/angular/tree/15.1.x/packages/service-worker to see if this change might be intentional and the safety-worker.js mentioned there is a small file containing few lines of code.\r\n\r\nOut of curiosity i checked the safety-worker.js of angular io - same as the ngsw-worker.js! \r\n\r\nhttps://angular.io/safety-worker.js\r\n\r\nhttps://angular.io/ngsw-worker.js\r\n\r\nThis seems like an issue. If this is the expected behaviour, the documentation does not mention it.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/000panther/service-worker-issue\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 16.15.1\r\nPackage Manager: npm 8.11.0\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\nCan I use the safety-worker.js from the service-worker repository as a workaround for now?","Url":"https://github.com/angular/angular-cli/issues/24678","RelatedDescription":"Open issue \"safety-worker.js: same source code as ngsw-worker.js\" (#24678)"},{"Id":"1575548725","IsPullRequest":true,"CreatedAt":"2023-02-08T06:15:34","Actor":"angular-robot","Number":"24672","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `5ff25fd` -> `b20e1f1` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `ffd5dec` -> `f7d26a0` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `691f7df` -> `70c532c` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.3/15.1.4) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `2e7b49f` -> `6e1df6d` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `225c886` -> `8b6060e` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.3/15.1.4) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `2c2a736` -> `9404367` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.3/15.1.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `e0d805d` -> `38b3c7a` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `90a69d8` -> `c484bd6` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `e21472e` -> `cf07ef5` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `cf718f3` -> `2fed80b` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `91f3ec2` -> `66d3823` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.3/15.1.4) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `83eb507` -> `a1456c8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f4601b6` -> `8aa6041` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `879ef52` -> `eba70fb` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `b60ba49` -> `c0beb2a` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `cfe6cfe` -> `cbf7ba4` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `b2ebd6f` -> `7ca0181` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `82f6062` -> `6765be0` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.2.0-next.3/15.2.0-next.4) |\n| angular/dev-infra | action | digest | `fb077c1` -> `07b0f64` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.2.0-next.4`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1520-next4-2023-02-08)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.2.0-next.3...15.2.0-next.4)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [54b24eb40f](https://togithub.com/angular/angular/commit/54b24eb40fed13c926305ad475202a5608d41c6b) | feat | Add loaderParams attribute to NgOptimizedImage ([#&#8203;48907](https://togithub.com/angular/angular/pull/48907)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0cf11167f1](https://togithub.com/angular/angular/commit/0cf11167f13108992ec781e88ab2a7d1fc7f5a0d) | fix | incorrectly detecting forward refs when symbol already exists in file ([#&#8203;48988](https://togithub.com/angular/angular/pull/48988)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d0145033bd](https://togithub.com/angular/angular/commit/d0145033bd11eccd16fa8b61ba9170037d0c62b3) | fix | generate forwardRef for same file imports ([#&#8203;48898](https://togithub.com/angular/angular/pull/48898)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bdbf21d04b](https://togithub.com/angular/angular/commit/bdbf21d04ba74a6f73469242076d6ce697c57edf) | fix | avoid generating imports with forward slashes ([#&#8203;48993](https://togithub.com/angular/angular/pull/48993)) |\n| [32cf4e5cb9](https://togithub.com/angular/angular/commit/32cf4e5cb989f365296d519dddf72fb38ca47c40) | fix | avoid internal modules when generating imports ([#&#8203;48958](https://togithub.com/angular/angular/pull/48958)) |\n| [1afa6ed322](https://togithub.com/angular/angular/commit/1afa6ed3227e784e3fe2b4b31443961589cb6332) | fix | don't add ModuleWithProviders to standalone test components ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [759db12e0b](https://togithub.com/angular/angular/commit/759db12e0b618fcb51f4cb141adeb49bfa495a60) | fix | duplicated comments on migrated classes ([#&#8203;48966](https://togithub.com/angular/angular/pull/48966)) |\n| [ba38178d19](https://togithub.com/angular/angular/commit/ba38178d1918d413f9c2260c40eb6542eadfddba) | fix | generate forwardRef for same file imports ([#&#8203;48898](https://togithub.com/angular/angular/pull/48898)) |\n| [2de6dae16d](https://togithub.com/angular/angular/commit/2de6dae16d4b0b83f0517a3033cda44ba44154ed) | fix | migrate RouterModule.forRoot with a config object to use features ([#&#8203;48935](https://togithub.com/angular/angular/pull/48935)) |\n| [770191cf1f](https://togithub.com/angular/angular/commit/770191cf1f1254546625dfa7a882b716c3f0aab3) | fix | migrate tests when switching to standalone bootstrap API ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [c7926b5773](https://togithub.com/angular/angular/commit/c7926b57730c23f765a00d3dd9f92079c95e87e0) | fix | move standalone migrations into imports ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [6377487b1a](https://togithub.com/angular/angular/commit/6377487b1ab7679cef9a44f88440fe5e8eb97480) | fix | only exclude bootstrapped declarations from initial standalone migration ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [e9e4449a43](https://togithub.com/angular/angular/commit/e9e4449a43430e026e61b0f05ebd32dd830fa916) | fix | preserve tsconfig in standalone migration ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [ffad1b49d9](https://togithub.com/angular/angular/commit/ffad1b49d95ab90637e7184f92cb5136d490d865) | fix | reduce number of files that need to be checked ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [49a7c9f94a](https://togithub.com/angular/angular/commit/49a7c9f94ae8f89907da8b3620242e62f87ec5a4) | fix | standalone migration incorrectly throwing path error for multi app projects ([#&#8203;48958](https://togithub.com/angular/angular/pull/48958)) |\n\n#### Special Thanks\n\nAlex Castle, Andrew Scott, Dylan Hunn, Jessica Janiuk, Kian Yang Lee, Kristiyan Kostadinov, Matthieu Riegler, Pawel Kozlowski, Redouane Bekkouche, Simona Cotin and Walid Bouguima\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.4`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1514-felt-fern-2023-02-08)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.3...15.1.4)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0526ada2ce](https://togithub.com/angular/components/commit/0526ada2ce5934488d75289ebd1558f9db226caf) | fix | **chips:** unable to add space when editing chip ([#&#8203;26564](https://togithub.com/angular/components/pull/26564)) |\n\n#### Special Thanks\n\nHubert Frei, Kristiyan Kostadinov and Wagner Maciel\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24672","RelatedDescription":"Open PR \"build: update angular\" (#24672)"},{"Id":"1575669230","IsPullRequest":false,"CreatedAt":"2023-02-07T20:16:52","Actor":"Vermilion755","Number":"24674","RawContent":null,"Title":"Update vulnerable packages in devkit","State":"open","Body":"\r\n\r\n\r\n### Description [Feature Request only]\r\n\r\nWe are using Checkmarx to scan our code and it's coming up with high vulnerability alerts for several packages in the @angular-devkit/build-angular@15.1.1 package. For example (vulnerable packages in bold):\r\n  -@angular-devkit/build-angular@15.1.1 -> karma@6.3.2.0 -> body-parser@1.20.1 -> **debug@2.6.9**\r\n  -@angular-devkit/build-angular@15.1.1 -> less@4.1.3 -> needle@3.2.0 -> **debug@3.2.7**\r\n  -@angular-devkit/build-angular@15.1.1 -> protractor@7.0.0 -> browserstack@1.6.0 -> https-proxy-agent@2.2.4 -> **debug@3.2.6**\r\n  -@angular-devkit/build-angular@15.1.1 -> glob@8.0.3 -> **inflight@1.0.6**\r\n  -@angular-devkit/build-angular@15.1.1 -> protractor@7.0.0 -> webdriver-manager@12.1.7 -> request@2.88.0 -> **qs@6.5.2**\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\nI would expect that with each major release, since you're making it a major release after all, you'd update all the packages to ones without security risks.\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\nTo be honest, we're not sure these are really vulnerabilities to be concerned about since they are in the devkit? It's hard to tell if the scan is just detecting packages that would be running on my local box and never published out to production? If that is the case, it'd be nice to know decisively. ","Url":"https://github.com/angular/angular-cli/issues/24674","RelatedDescription":"Open issue \"Update vulnerable packages in devkit\" (#24674)"},{"Id":"1570788865","IsPullRequest":true,"CreatedAt":"2023-02-07T19:30:22","Actor":"angular-robot","Number":"24660","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.50.0/5.51.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.50.0` -> `5.51.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.50.0/5.51.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild/0.17.5/0.17.6) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild/0.17.5/0.17.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.5/0.17.6) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.5` -> `0.17.6`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.5/0.17.6) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`21.0.9` -> `21.0.10`](https://renovatebot.com/diffs/npm/quicktype-core/21.0.9/21.0.10) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.16.2` -> `5.16.3`](https://renovatebot.com/diffs/npm/terser/5.16.2/5.16.3) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.16.2` -> `5.16.3`](https://renovatebot.com/diffs/npm/terser/5.16.2/5.16.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[sort-type-constituents] fixed behavior change ([#&#8203;6384](https://togithub.com/typescript-eslint/typescript-eslint/issues/6384)) ([5bf7f7f](https://togithub.com/typescript-eslint/typescript-eslint/commit/5bf7f7fe48aee61a676dfbe829c2a5e9e44cd552)), closes [#&#8203;6339](https://togithub.com/typescript-eslint/typescript-eslint/issues/6339)\n-   **eslint-plugin:** do not use .at(), Node 14 does not support it ([#&#8203;6402](https://togithub.com/typescript-eslint/typescript-eslint/issues/6402)) ([077ed1b](https://togithub.com/typescript-eslint/typescript-eslint/commit/077ed1b5be844df35b7fba554ddae579b3144787))\n\n##### Features\n\n-   **eslint-plugin:** \\[naming-convention] improve performance by removing unnecessary selectors ([#&#8203;6376](https://togithub.com/typescript-eslint/typescript-eslint/issues/6376)) ([3647a1c](https://togithub.com/typescript-eslint/typescript-eslint/commit/3647a1c1bbcfe6551647632fc2d978fa90881de1))\n-   **eslint-plugin:** \\[no-floating-promises] error on logical expression ([#&#8203;6356](https://togithub.com/typescript-eslint/typescript-eslint/issues/6356)) ([f330e06](https://togithub.com/typescript-eslint/typescript-eslint/commit/f330e0651548d55163ddc3233c90fd3cbe37c9c0))\n-   **eslint-plugin:** \\[no-import-type-side-effects] add rule to warn against runtime side effects with `verbatimModuleSyntax` ([#&#8203;6394](https://togithub.com/typescript-eslint/typescript-eslint/issues/6394)) ([b14d3be](https://togithub.com/typescript-eslint/typescript-eslint/commit/b14d3be0f305d71e0adfc9381e9de993898b2b43))\n-   **eslint-plugin:** \\[strict-boolean-expressions] add allow nullable enum to strict boolean expressions ([#&#8203;6096](https://togithub.com/typescript-eslint/typescript-eslint/issues/6096)) ([d4747cd](https://togithub.com/typescript-eslint/typescript-eslint/commit/d4747cd8cc9dad2bf2cb64e1c0e8980ce34d82c7))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.51.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5510-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5500v5510-2023-02-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.50.0...v5.51.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.6`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0176)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.5...v0.17.6)\n\n-   Fix a CSS parser crash on invalid CSS ([#&#8203;2892](https://togithub.com/evanw/esbuild/issues/2892))\n\n    Previously the following invalid CSS caused esbuild's parser to crash:\n\n    ```css\n    @&#8203;media screen\n    ```\n\n    The crash was caused by trying to construct a helpful error message assuming that there was an opening `{` token, which is not the case here. This release fixes the crash.\n\n-   Inline TypeScript enums that are referenced before their declaration\n\n    Previously esbuild inlined enums within a TypeScript file from top to bottom, which meant that references to TypeScript enum members were only inlined within the same file if they came after the enum declaration. With this release, esbuild will now inline enums even when they are referenced before they are declared:\n\n    ```ts\n    // Original input\n    export const foo = () => Foo.FOO\n    const enum Foo { FOO = 0 }\n\n    // Old output (with --tree-shaking=true)\n    export const foo = () => Foo.FOO;\n    var Foo = /* @&#8203;__PURE__ */ ((Foo2) => {\n      Foo2[Foo2[\"FOO\"] = 0] = \"FOO\";\n      return Foo2;\n    })(Foo || {});\n\n    // New output (with --tree-shaking=true)\n    export const foo = () => 0 /* FOO */;\n    ```\n\n    This makes esbuild's TypeScript output smaller and faster when processing code that does this. I noticed this issue when I ran the TypeScript compiler's source code through esbuild's bundler. Now that the TypeScript compiler is going to be bundled with esbuild in the upcoming TypeScript 5.0 release, improvements like this will also improve the TypeScript compiler itself!\n\n-   Fix esbuild installation on Arch Linux ([#&#8203;2785](https://togithub.com/evanw/esbuild/issues/2785), [#&#8203;2812](https://togithub.com/evanw/esbuild/issues/2812), [#&#8203;2865](https://togithub.com/evanw/esbuild/issues/2865))\n\n    Someone made an unofficial `esbuild` package for Linux that adds the `ESBUILD_BINARY_PATH=/usr/bin/esbuild` environment variable to the user's default environment. This breaks all npm installations of esbuild for users with this unofficial Linux package installed, which has affected many people. Most (all?) people who encounter this problem haven't even installed this unofficial package themselves; instead it was installed for them as a dependency of another Linux package. The problematic change to add the `ESBUILD_BINARY_PATH` environment variable was reverted in the latest version of this unofficial package. However, old versions of this unofficial package are still there and will be around forever. With this release, `ESBUILD_BINARY_PATH` is now ignored by esbuild's install script when it's set to the value `/usr/bin/esbuild`. This should unbreak using npm to install `esbuild` in these problematic Linux environments.\n\n    Note: The `ESBUILD_BINARY_PATH` variable is an undocumented way to override the location of esbuild's binary when esbuild's npm package is installed, which is necessary to substitute your own locally-built esbuild binary when debugging esbuild's npm package. It's only meant for very custom situations and should absolutely not be forced on others by default, especially without their knowledge. I may remove the code in esbuild's installer that reads `ESBUILD_BINARY_PATH` in the future to prevent these kinds of issues. It will unfortunately make debugging esbuild harder. If `ESBUILD_BINARY_PATH` is ever removed, it will be done in a \"breaking change\" release.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v21.0.10`](https://togithub.com/quicktype/quicktype/compare/1e6ed49e9cbec217a0e54383f4bf8ac7c441a0b5...12ea9f506abb3c953afecba5b3477211be2b1099)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/1e6ed49e9cbec217a0e54383f4bf8ac7c441a0b5...12ea9f506abb3c953afecba5b3477211be2b1099)\n\n</details>\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.16.3`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5163)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.16.2...v5.16.3)\n\n-   Ensure function definitions, don't assume the values of variables defined after them.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24660","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24660)"},{"Id":"1573751850","IsPullRequest":true,"CreatedAt":"2023-02-07T19:30:08","Actor":"angular-robot","Number":"24670","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.1` -> `v2.2.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.2`](https://togithub.com/github/codeql-action/compare/v2.2.1...v2.2.2)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.1...v2.2.2)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24670","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.2\" (#24670)"},{"Id":"1569637575","IsPullRequest":false,"CreatedAt":"2023-02-07T19:29:46","Actor":"Coly010","Number":"24656","RawContent":null,"Title":"Angular CLI V15 + TS Target ES2022 - No longer tree shaking unused services correctly","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular v14\n\n### Description\n\nUnused Services are not being tree-shaken correctly from the bundle output with\r\n\r\n`\"target\": \"es2022\"` set in the `tsconfig.json` and Angular v15 installed.\r\n\r\nThis target is set by the Angular v15 migrations!\n\n### Minimal Reproduction\n\nI've created a repository.\r\n\r\n1. Clone https://github.com/Coly010/ng-tree-shaking\r\n\r\n## The Problem\r\n\r\nWith Angular V15, when`\"target\": \"es2022` is set in `tsconfig.json`, `UnusedService` a service that is not used in the application, is not tree shaken from the bundle.\r\n\r\nThis can be reproduced by doing the following\"\r\n\r\n1. Checkout `angular-v15-es2022`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\r\n### This is a regression\r\n\r\nTo prove this is a regression, you can do the following:\r\n\r\n1. Checkout `angular-v14-es2022`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll not see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\r\n### Futhermore\r\n\r\nIf you set the `\"target\": \"es2020` in `tsconfig.json` with Angular v15, the service is tree shaken correctly.\r\n\r\n1. Checkout `angular-v15-es2020`\r\n2. Run `npm install`\r\n3. Run `npm run build`\r\n4. Run `npm run check-tree-shaking`\r\n\r\nYou'll not see a line output stating that `grep` managed to find the `UnusedService` in the bundle.\r\n\n\n### Exception or Error\n\n```text\nUnused Service is being included in the bundle when it should be tree-shaken.\n```\n\n\n### Your Environment\n\n```text\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\r\n\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24656","RelatedDescription":"Closed issue \"Angular CLI V15 + TS Target ES2022 - No longer tree shaking unused services correctly\" (#24656)"},{"Id":"1570302215","IsPullRequest":true,"CreatedAt":"2023-02-07T19:29:44","Actor":"clydin","Number":"24658","RawContent":null,"Title":"fix(@angular-devkit/build-angular): build optimizer support for spec-compliant downlevel class properties","State":"closed","Body":"The build optimizer's static class field pass will now additionally wrap classes that contain side effect free class properties. This allows optimizers and bundlers further along in the build pipeline to downlevel that class properties while still retaining the ability to tree-shake the class if unused. The class properties may need to be downleveled for a variety of reasons such as lack of browser support, browser bugs with certain code structures, or to ensure spec-compliant runtime behavior.\r\n\r\nFixes: #24656","Url":"https://github.com/angular/angular-cli/pull/24658","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): build optimizer support for spec-compliant downlevel class properties\" (#24658)"},{"Id":"1573398361","IsPullRequest":true,"CreatedAt":"2023-02-07T19:29:26","Actor":"clydin","Number":"24669","RawContent":null,"Title":"test(@angular-devkit/build-angular): port several unit tests to esbuild builder","State":"closed","Body":"The following unit tests have been ported over to test the experimental esbuild-based\r\nbrowser application builder:\r\n\r\n* `assets` option\r\n* `outputHashing` option\r\n* browser support behavior (`browserslist`)\r\n\r\nSeveral small modifications were necessary to accommodate output file differences such\r\nas no runtime chunk. Additionally, two tests are temporarily disabled for the `outputHashing`\r\ntests pending implementation in the builder. These tests are the same stylesheet resource handling\r\nfile name test and no hashing of non-injected styles test.","Url":"https://github.com/angular/angular-cli/pull/24669","RelatedDescription":"Closed or merged PR \"test(@angular-devkit/build-angular): port several unit tests to esbuild builder\" (#24669)"},{"Id":"1570788815","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:36","Actor":"angular-robot","Number":"24659","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `26bde56` -> `5ff25fd` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `57ce1b4` -> `ffd5dec` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `00ebcda` -> `691f7df` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `e630e31` -> `2e7b49f` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `b5d6896` -> `225c886` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `25e69a6` -> `2c2a736` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `b3392c5` -> `e0d805d` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `9dadc81` -> `90a69d8` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `d8a32d9` -> `e21472e` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `65e922c` -> `cf718f3` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `27e09d5` -> `91f3ec2` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `c7d5d57` -> `83eb507` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ecad30a` -> `f4601b6` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `17097d0` -> `879ef52` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `422cfaf` -> `b60ba49` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `81b3f8a` -> `cfe6cfe` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `fb0e9fe` -> `b2ebd6f` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `0982a5e` -> `82f6062` |\n| angular/dev-infra | action | digest | `fa428ee` -> `fb077c1` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24659","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24659)"},{"Id":"1571354775","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:20","Actor":"crisbeto","Number":"24662","RawContent":null,"Title":"fix(@angular/cli): error if Angular compiler is used in a schematic","State":"closed","Body":"When a schematic is executed, it is wrapped in a custom Node context. This context doesn't expose the same set of global variables as the default one. This can lead to an error if a schematic is importing the Angular compiler and the app is using i18n, because the `TextEncoder` isn't exposed through the custom context (see https://github.com/angular/angular/issues/48940).\r\n\r\nThese changes add the `TextEncoder` to the context.\r\n\r\nFixes https://github.com/angular/angular/issues/48940.","Url":"https://github.com/angular/angular-cli/pull/24662","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): error if Angular compiler is used in a schematic\" (#24662)"},{"Id":"1572297244","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:07","Actor":"alan-agius4","Number":"24665","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match","State":"closed","Body":"\r\n\r\nPreviously, we failed the compilation when the specified patterns did not match any spec file. This breaks the case were users configure Karma to not fail on empty test suit.\r\n\r\nCloses #24644\r\n","Url":"https://github.com/angular/angular-cli/pull/24665","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match\" (#24665)"},{"Id":"1572597744","IsPullRequest":true,"CreatedAt":"2023-02-07T01:00:51","Actor":"alan-agius4","Number":"24666","RawContent":null,"Title":"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic","State":"closed","Body":"\r\nThe bootstrapping wrapping is no longer necessary as of 15.1.3. See: https://github.com/angular/angular/pull/48868\r\n","Url":"https://github.com/angular/angular-cli/pull/24666","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic\" (#24666)"},{"Id":"1572171585","IsPullRequest":false,"CreatedAt":"2023-02-06T09:14:45","Actor":"yohny","Number":"24664","RawContent":null,"Title":"Global styles linking in angular.json does not work is they come from library assets","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have an library project that includes some assets like icons and some global styles. Those are packaged in `assets` folder of library. Consuming application includes library assets by extending the `assets` section in its `angular.json`:\r\n```json\r\n\"assets\": [\r\n    \"projects/my-app/src/favicon.ico\",\r\n    \"projects/my-app/src/assets\",\r\n    {\r\n      \"input\": \"dist/my-lib/assets\", // with regular install this would go from node_modules instead of dist\r\n      \"glob\": \"**/*\",\r\n      \"output\": \"assets/my-lib\"\r\n    }\r\n  ],\r\n```\r\nwhen build, the library assets are copied into `assest/my-lib` folder of consuming application as expected.\r\nThe issue occurs when I want to use the library style from `assest/my-lib/styles.css`. If I add it to `styles` section of `angular.json` like this:\r\n```json\r\n\"styles\": [\r\n    \"projects/my-app/src/styles.css\",\r\n    \"projects/my-app/src/assets/my-lib/styles.css\" // added\r\n  ],\r\n```\r\nit ends with error:  `Error: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'`\r\nHowever when I add it in `index.html. like this `<link rel=\"stylesheet\" href=\"assets/my-lib/styles.css\">` it works as expected.\r\n\r\nIt looks like `styles` processing happens before `assets`copying, which results in the error. Expectation is that assets are copied before the styles/scripts linking because those can reference assets.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/yohny/assets-demo\n\n### Please provide the exception or error you saw\n\n```true\nError: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24664","RelatedDescription":"Closed issue \"Global styles linking in angular.json does not work is they come from library assets\" (#24664)"},{"Id":"1569859049","IsPullRequest":false,"CreatedAt":"2023-02-06T08:30:54","Actor":"Alessandroinfo","Number":"24657","RawContent":null,"Title":"Issue on building with production app-shell with different outputPath for ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\n**What happen:**\r\nWhen i try to run a build of app-shell production with  `ng run angular15-app-shell:app-shell:production\r\n ` i retrieve this error:\r\n\r\n```\r\n✖ Application shell generation failed.\r\nCould not find server output directory: /Users/user/WebstormProjects/angular15-app-shell/dist/angular15-app-shell/server.\r\n```\r\n\r\nThis happen when i change in `angular.json` the outputPath in `projects.angular15-app-shell.architect.build.outputPath`.\r\nFrom `\"outputPath\": \"dist/angular15-app-shell/browser\"` to `\"outputPath\": \"dist\"`\r\n\r\n\r\n**Step to reproduce:**\r\n1. `npx -p @angular/cli@15.1.4 ng new angular15-app-shell` (with routing and select whatever stylesheet)\r\n2. `cd angular15-app-shell`\r\n3. npx ng g app-shell\r\n4. Change outputPath for the build to `dist` (it will be `\"outputPath\": \"dist\"`)\r\n5. npx ng run angular15-app-shell:app-shell:production\r\n\r\n\r\nI tested on Angular 15.1.4 but it happen also on versione >14.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-huphbj\n\n### Please provide the exception or error you saw\n\n```true\nThe error happens only after changing  to ```dist```\r\n\r\n```\r\n✖ Application shell generation failed.\r\nCould not find server output directory: /Users/user/WebstormProjects/angular15-app-shell/dist/angular15-app-shell/server.\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\nI run it on node v14.21.2.","Url":"https://github.com/angular/angular-cli/issues/24657","RelatedDescription":"Closed issue \"Issue on building with production app-shell with different outputPath for \" (#24657)"},{"Id":"1571105131","IsPullRequest":false,"CreatedAt":"2023-02-05T16:23:16","Actor":"patrickdk77","Number":"24661","RawContent":null,"Title":"angular upgrade to v14 deletes dist folder","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nng build --configuration=prodfast\r\n- Generating browser application bundles (phase: setup)...\r\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\r\n\r\nIn my build case, it's being built in docker like:\r\ndocker run --env-file .env.prod -v \"/export:/project/dist\"\r\n\r\nThis way, the build is done in a clean enviroment, and the output of dist is mapped the the host enviroment and gets pushed to prod systems\r\nBut now it is attempting to do a rmdir of dist, and since that is a mount point and not a folder, it fails and builds no longer happen.\r\n\n\n### Minimal Reproduction\n\nbuild angular while the dist is actually a mountpoint instead of a folder\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\n```\n\n\n### Your Environment\n\n```text\ndocker container inside bitbucket pipeline\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24661","RelatedDescription":"Closed issue \"angular upgrade to v14 deletes dist folder\" (#24661)"},{"Id":"1568553750","IsPullRequest":false,"CreatedAt":"2023-02-03T14:29:15","Actor":"cheng93","Number":"24651","RawContent":null,"Title":"Jasmine's clock mocks can't be used in library specs v2","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI do not believe #14432 was fixed\n\n### Minimal Reproduction\n\n```shell\r\nnpm install -g @angular/cli\r\nng new ngtest1\r\n```\r\n\r\nadded to app.component.spec.ts\r\n```ts\r\nbeforeEach(() => {\r\n    jasmine.clock().install();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jasmine.clock().uninstall();\r\n  });\r\n```\n\n### Exception or Error\n\n```text\nChrome 109.0.0.0 (Windows 10) AppComponent should render title FAILED\r\n        Error: Jasmine Clock was unable to install over custom global timer functions. Is the clock already installed?\r\n            at <Jasmine>\r\n            at UserContext.apply (src/app/app.component.spec.ts:14:21)\r\n            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:375:26)\r\n            at ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:287:39)\r\n            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:374:52)\r\n            at Zone.run (node_modules/zone.js/fesm2015/zone.js:134:43)\r\n            at runInTestZone (node_modules/zone.js/fesm2015/zone-testing.js:582:34)\r\n            at UserContext.<anonymous> (node_modules/zone.js/fesm2015/zone-testing.js:597:20)\r\n            at <Jasmine>\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24651","RelatedDescription":"Closed issue \"Jasmine's clock mocks can't be used in library specs v2\" (#24651)"},{"Id":"1569442258","IsPullRequest":true,"CreatedAt":"2023-02-03T14:29:13","Actor":"alan-agius4","Number":"24655","RawContent":null,"Title":"fix(@angular-devkit/build-angular): load polyfills and runtime as scripts instead of modules","State":"closed","Body":"\r\nThis commit updates changes the way polyfills and runtime are loaded from modules to scripts. This is required as otherwise Jasmine will be loaded prior to Zone.js which causes clock patching not to work.\r\n\r\nCloses #24651\r\n","Url":"https://github.com/angular/angular-cli/pull/24655","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): load polyfills and runtime as scripts instead of modules\" (#24655)"},{"Id":"1569284050","IsPullRequest":true,"CreatedAt":"2023-02-03T10:41:55","Actor":"angular-robot","Number":"24653","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `79142be` -> `26bde56` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `7985b5a` -> `00ebcda` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.2/15.1.3) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b6d4855` -> `e630e31` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `dc2b4e6` -> `b5d6896` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.2/15.1.3) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5ece11d` -> `25e69a6` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.2/15.1.3) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a6eb17c` -> `b3392c5` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `0414e59` -> `9dadc81` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `0484953` -> `d8a32d9` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6499b7a` -> `65e922c` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `fa5b79f` -> `27e09d5` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.2` -> `15.1.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.2/15.1.3) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `f96bf92` -> `c7d5d57` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `65ffa80` -> `17097d0` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `bf271f1` -> `422cfaf` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `c0ebda2` -> `81b3f8a` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `70d4dc7` -> `fb0e9fe` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.2.0-next.2/15.2.0-next.3) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `aac02cd` -> `0982a5e` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.2` -> `15.2.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.2.0-next.2/15.2.0-next.3) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.2.0-next.3`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1520-next3-2023-02-02)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.2.0-next.2...15.2.0-next.3)\n\n##### animations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b4187548ca](https://togithub.com/angular/angular/commit/b4187548cae42f25624bf7ab7ad0cca121242de7) | fix | fix non-animatable warnings for easing ([#&#8203;48583](https://togithub.com/angular/angular/pull/48583)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a055196c55](https://togithub.com/angular/angular/commit/a055196c55c57de281ff7167cd4dfb3df783c337) | fix | warn if using ngSrcset without a configured image loader ([#&#8203;48804](https://togithub.com/angular/angular/pull/48804)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [06e161f2dd](https://togithub.com/angular/angular/commit/06e161f2dd78b42ad1938578f4d730a41404a24f) | fix | incorrect code when non-null assertion is used after a safe access ([#&#8203;48801](https://togithub.com/angular/angular/pull/48801)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [345e737daa](https://togithub.com/angular/angular/commit/345e737daa7b9f635a4c2923358e5e765f716434) | feat | add ng generate schematic to convert to standalone bootstrapping APIs ([#&#8203;48848](https://togithub.com/angular/angular/pull/48848)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2796230e95](https://togithub.com/angular/angular/commit/2796230e953eb8c29d6227a1a3858f5f08a8f200) | fix | add `enum` in `mode` option in `standalone` schema ([#&#8203;48851](https://togithub.com/angular/angular/pull/48851)) |\n| [a40cd47aa7](https://togithub.com/angular/angular/commit/a40cd47aa7ebccfbeeb26e397e03f1372aa10a55) | fix | avoid modifying testing modules without declarations ([#&#8203;48921](https://togithub.com/angular/angular/pull/48921)) |\n| [8389557848](https://togithub.com/angular/angular/commit/83895578488bd35c7e47609f092907eb0f53f435) | fix | don't copy unmigrated declarations into imports array ([#&#8203;48882](https://togithub.com/angular/angular/pull/48882)) |\n| [f82bdc4b01](https://togithub.com/angular/angular/commit/f82bdc4b01f93a7103870449d37da61cc4c4f179) | fix | don't delete classes that may provide dependencies transitively ([#&#8203;48866](https://togithub.com/angular/angular/pull/48866)) |\n| [04e0ac3d7c](https://togithub.com/angular/angular/commit/04e0ac3d7ca89bf38d4d2a38b7ca120d9b7b96ae) | fix | migration host incorrectly reading empty files ([#&#8203;48849](https://togithub.com/angular/angular/pull/48849)) |\n| [65c74ed93e](https://togithub.com/angular/angular/commit/65c74ed93e04cb560c27838d440c6aa7a9859a4e) | fix | normalize paths to posix ([#&#8203;48850](https://togithub.com/angular/angular/pull/48850)) |\n| [584976e6c8](https://togithub.com/angular/angular/commit/584976e6c8a783d40578ab191132673300394a52) | fix | support --defaults in standalone migration ([#&#8203;48921](https://togithub.com/angular/angular/pull/48921)) |\n| [03f47ac901](https://togithub.com/angular/angular/commit/03f47ac9019eddbcb373b50c41bc6f523293ece1) | fix | use consistent quotes in generated imports ([#&#8203;48876](https://togithub.com/angular/angular/pull/48876)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2fc5b70fce](https://togithub.com/angular/angular/commit/2fc5b70fcedb8ac35b825b245c0ae394dc125244) | fix | insert transfer state `script` before other `script` tags ([#&#8203;48868](https://togithub.com/angular/angular/pull/48868)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dedac8d3f7](https://togithub.com/angular/angular/commit/dedac8d3f73ebf4f05b773454e2a22ab5fa4bf7c) | feat | Add test helper for trigger navigations in tests ([#&#8203;48552](https://togithub.com/angular/angular/pull/48552)) |\n| [16ef770db8](https://togithub.com/angular/angular/commit/16ef770db803ce4037a90c72477da412642dfb33) | fix | Handle routerLink directive on svg anchors. ([#&#8203;48857](https://togithub.com/angular/angular/pull/48857)) |\n\n#### Special Thanks\n\nAlan Agius, Andrew Scott, Besim Gürbüz, Brecht Billiet, Dario Piotrowicz, Dylan Hunn, Iván Navarro, Kristiyan Kostadinov, Matthieu Riegler, Onkar Ruikar, Payam Valadkhan, Santosh Yadav, Virginia Dooley and Walid Bouguima\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.3`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1513-obsidian-organism-2023-02-02)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.2...15.1.3)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d9124166a1](https://togithub.com/angular/components/commit/d9124166a1203e43f1d9093db82365cbaf9b70bc) | fix | **collections:** SelectionModel does not always respect the compareWith function ([#&#8203;26447](https://togithub.com/angular/components/pull/26447)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [621d1755df](https://togithub.com/angular/components/commit/621d1755dfb18be44732334d784fa0d65197dca1) | fix | **checkbox:** focus not moved to input when clicking on touch target ([#&#8203;26545](https://togithub.com/angular/components/pull/26545)) |\n| [f1d83f19c9](https://togithub.com/angular/components/commit/f1d83f19c96152fc1cef63a869a7d0c3334be946) | fix | **dialog:** take dialog background from theme palette ([#&#8203;26324](https://togithub.com/angular/components/pull/26324)) |\n| [719cff0c4d](https://togithub.com/angular/components/commit/719cff0c4d4b4ece24919a9e55fefe2f1483de8a) | fix | **tabs:** set color on disabled tabs ([#&#8203;26319](https://togithub.com/angular/components/pull/26319)) |\n| [9efb60f6b4](https://togithub.com/angular/components/commit/9efb60f6b47912897a1e61e21cb64926afeed2d6) | fix | **tabs:** unable to click projected content in tab label ([#&#8203;26527](https://togithub.com/angular/components/pull/26527)) |\n\n##### google-maps\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e48a5af71f](https://togithub.com/angular/components/commit/e48a5af71fdf9057b058c91338f08bb9d9ec3cf2) | fix | error if API is initialized incorrectly ([#&#8203;26520](https://togithub.com/angular/components/pull/26520)) |\n\n#### Special Thanks\n\nAlan Agius, Aurélien Loyer, Kristiyan Kostadinov, MECHERI Akram, Paul Gschwendtner, Pei Wang and Wagner Maciel\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24653","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24653)"},{"Id":"1568754457","IsPullRequest":false,"CreatedAt":"2023-02-03T08:44:05","Actor":"bryanrideshark","Number":"24652","RawContent":null,"Title":"code in isDevMode() block is not removed from production builds.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe following code block and its assorted import statements should be elided during a production build.\r\n\r\n````ts\r\nimport { isDevMode, Injectable } from '@angular/core';\r\nimport { DevCommandService } from '@project/dev-command';\r\n\r\n@Injectable()\r\nexport class CoolService {\r\n\r\n  constructor() {\r\n    if (isDevMode()) {\r\n      import(DevCommandService).addHelperFunctionToConsoleForDevelopersOnly('someSampleCommand', () => {\r\n        console.log('do a backflip');\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n````\r\n\r\nI expect the output to be as follows:\r\n````\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CoolService {\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\n````\r\n\r\nHowever, it is unchanged.\r\n\r\nWhat is the correct way to ensure that during `ng build --prod`, `import {DevCommandService} from '@project/dev-command'; ` and the entire block which uses it are dropped from the output?\r\n\r\nCan we somehow replace `isDevMode()` with `false` during production builds, and have dead code elimination / tree shaking properly apply to the application?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.2\r\nNode: 14.19.0\r\nPackage Manager: yarn <error>\r\nOS: win32 x64\r\n\r\nAngular: 14.2.1\r\n... animations, cdk, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, material\r\n... platform-browser, platform-browser-dynamic, router, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.2\r\n@angular-devkit/build-angular   14.2.2\r\n@angular-devkit/build-webpack   0.1401.3\r\n@angular-devkit/core            14.2.2\r\n@angular-devkit/schematics      14.2.2\r\n@angular/cli                    14.2.2\r\n@angular/flex-layout            14.0.0-beta.40\r\n@schematics/angular             14.2.2\r\n@schematics/schematics          0.1102.12\r\n@schematics/update              0.1102.18\r\nng-packagr                      14.2.2\r\nrxjs                            7.5.6\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\nMaybe `isDevMode()` is not the correct way to handle this. How should we handle tree shakable development only code, in a project that has multiple apps and libraries?","Url":"https://github.com/angular/angular-cli/issues/24652","RelatedDescription":"Closed issue \"code in isDevMode() block is not removed from production builds.\" (#24652)"},{"Id":"1569350051","IsPullRequest":false,"CreatedAt":"2023-02-03T07:21:58","Actor":"JanST123","Number":"24654","RawContent":null,"Title":"Esbuild builder - support TypeScript path mappings","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAs the experimental esbuild does not yet support features like [respecting the `paths` from tsconfig.json](https://github.com/evanw/esbuild/issues/394) that lack of features can be workarounded by custom esbuild plugins ([esbuild-ts-paths](https://www.npmjs.com/package/esbuild-ts-paths) in the case of the missing `paths` transforming).\r\n\r\nBut plugins can't be passed to the `esbuild.build` function yet.\r\n\r\n### Describe the solution you'd like\r\nPass another option `plugins` to `esbuild.build` like it was done for the `external` option in #23322\r\n\r\n### Minimal Reproduction\r\n\r\n* Have paths defined in tsconfig.json\r\n```json\r\n  \"compilerOptions\": {\r\n    \"paths\": {\r\n      \"@shared/*\": [\r\n        \"src/app/@shared/*\"\r\n      ]\r\n    }\r\n  }\r\n```\r\n\r\n* Notice that the compiler can't find the modules imported from that paths\r\n```javascript\r\nimport { MySharedModuled } from '@shared/shared.module';\r\n```\r\n\r\n* Find a plugin that can fix it: https://www.npmjs.com/package/esbuild-ts-paths\r\n* Search a way to pass this plugin to esbuild\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.1.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin x64\r\n\r\nAngular: 15.1.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24654","RelatedDescription":"Open issue \"Esbuild builder - support TypeScript path mappings\" (#24654)"},{"Id":"1568392887","IsPullRequest":false,"CreatedAt":"2023-02-02T16:48:37","Actor":"pashvin","Number":"24650","RawContent":null,"Title":"Bundle size is not enforced if name is not provided","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI am not sure if this is a bug but there is no way to put a limit one limit on all bundle sizes. I assume providing no name should check all bundles but it does not.\r\n\r\nso the following does not work\r\n```\r\n{\r\n  \"type\": \"bundle\",\r\n  \"maximumWarning\": \"150kb\",\r\n  \"maximumError\": \"300kb\"\r\n}\r\n```\r\n\r\nMy goal is to provide a higher threshold for vendors or an initial bundle but all others with lower so I am trying following but not working.\r\n\r\n```\r\n\"budgets\": [\r\n    {\r\n      \"type\": \"bundle\",\r\n      \"name\": \"vendor\",\r\n      \"maximumWarning\": \"340kb\",\r\n      \"maximumError\": \"550kb\"\r\n    },\r\n    {\r\n      \"type\": \"bundle\", // All other remaining bundles\r\n      \"maximumWarning\": \"150kb\",\r\n      \"maximumError\": \"300kb\"\r\n    }\r\n  ],\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nTry any sample Angular project and try to see the current bundle size and set the same limit of the current vendor bundle for vendor bundle but set diff very low limit for the bundle with no name. It should give a warning for any remaining bundle when you run \"npm run build\" command.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.4\r\nNode: 14.21.2\r\nPackage Manager: npm 6.14.17\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@schematics/angular             15.0.4\r\nrxjs                            7.5.4\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24650","RelatedDescription":"Open issue \"Bundle size is not enforced if name is not provided\" (#24650)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1576900522","IsPullRequest":true,"CreatedAt":"2023-02-08T22:58:19","Actor":"amysorto","Number":"26598","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26598","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#26598)"},{"Id":"1576696822","IsPullRequest":true,"CreatedAt":"2023-02-08T22:15:25","Actor":"amysorto","Number":"26597","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26597","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#26597)"},{"Id":"1576692279","IsPullRequest":true,"CreatedAt":"2023-02-08T19:35:29","Actor":"amysorto","Number":"26596","RawContent":null,"Title":"Bump version to \"v15.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26596","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.4\" with changelog.\" (#26596)"},{"Id":"1576531328","IsPullRequest":false,"CreatedAt":"2023-02-08T17:32:02","Actor":"boomdizz","Number":"26595","RawContent":null,"Title":"feat(COMPONENT): MatOptgroup should have programmatic capability","State":"open","Body":"### Feature Description\r\n\r\nI have a need to programatically manipulate the mat-optgroup. My usecase has a cascade/sequence of filters (MatSelects) that is needed to query the backend for 'Automobiles' that match the query. The filters are things like 'Manufacturer', 'Model' etc..... So as the consumer selects a Manufacturer, the downstream filter for Model only shows the Models that correspond to that Manufacturer (or that set of manufacturers, as I am using 'multiple' on the MatSelect). The final set of filters make a graphql query (could well be a REST API instead) to the backend that return some attributes of the selected group of Autos, e.g. mpg, etc.) So pretty straightforward design.\r\nEach filter is a multiple select filter where the end user can select multiple options on the filter. There is an 'All' option group that contains all of the options in the filter/MatSelect. Visually, the option group does what it should. But I need to programatically manipulate the option group. I have rules like - if none of the options are selected in a group, enable all the options in the group. Essentially, none is not a valid option. I need to:\r\n(1) From an option find the parent option group\r\n(2) Check if the option group has no options enabled and/or all options enabled\r\n(3) Enable/Disable the entire option group in one API call.\r\nI can provide additional details as needed.\r\nI am working with Angular material 14.2.6\r\n\r\n### Use Case\r\n\r\nUse cases provided in the Feature Description","Url":"https://github.com/angular/components/issues/26595","RelatedDescription":"Open issue \"feat(COMPONENT): MatOptgroup should have programmatic capability\" (#26595)"},{"Id":"1576378506","IsPullRequest":false,"CreatedAt":"2023-02-08T15:56:13","Actor":"infacto","Number":"26594","RawContent":null,"Title":"docs-bug(datepicker): Improve/Describe type `D`","State":"open","Body":"### Documentation Feedback\r\n\r\nWhat's `D`? Please describe. Also: A single letter type is maybe not the best type. Is it generic? I cannot find type reference. Btw, is `string` also allowed? It seems so... \r\n\r\n![image](https://user-images.githubusercontent.com/60390085/217581608-bb215682-7016-4228-9575-4ca5b3bb44ce.png)\r\n\r\nUpdate: There is also an input type `C`.\r\nUpdate: Ok, as I see, the output is a dayjs instance. Adapter. (A weird uglyfied output on console.)\r\n\r\nAnyway, can we descibe als these types and where they come from (adapter, etc.)?\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/datepicker/api","Url":"https://github.com/angular/components/issues/26594","RelatedDescription":"Open issue \"docs-bug(datepicker): Improve/Describe type `D`\" (#26594)"},{"Id":"1576270837","IsPullRequest":false,"CreatedAt":"2023-02-08T14:58:13","Actor":"michahell","Number":"26593","RawContent":null,"Title":"in v15.1.2, prebuilt-themes seem to be missing :(","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nWe still depend on a prebuilt-theme (for reasons) and so we'd need the 15.1.x version for the prebuilt-theme we use to upgrade from Angular 14 to Angular 15...\n\n### Reproduction\n\ndoes not apply\n\n### Expected Behavior\n\nprebuilt theme CSS files listed in the src/material/prebuilt-themes folder\n\n### Actual Behavior\n\nprebuilt theme CSS files **NOT** present in the src/material/prebuilt-themes folder\n\n### Environment\n\n- Angular: 15.1.2\r\n- CDK/Material: 15.1.2\r\n- Browser(s): chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26593","RelatedDescription":"Open issue \"in v15.1.2, prebuilt-themes seem to be missing :(\" (#26593)"},{"Id":"1575467764","IsPullRequest":false,"CreatedAt":"2023-02-08T04:47:22","Actor":"ajayz09","Number":"26591","RawContent":null,"Title":"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n### Mat Select Trigger Multiple | Angular 14\r\n\r\nMat Select Trigger with chips inside is going outside of the mat-form-field-wrapper when number of selections exceeds a certain value as it tries to populate to a new line.\r\n\r\nThis was working as expected in Angular 10-12\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Use mat-select-trigger with mat-chips\r\n2. Select multiple options from the selection panel expanding the mat-form-field to another line.\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435942-b8e07998-0c32-4293-8937-6c88f3031faf.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435811-5486024c-e915-4e08-a733-61c609ddf1db.png)\r\n\n\n### Environment\n\n- Angular: 14.2.4\r\n- CDK/Material: 12.2.6\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/26591","RelatedDescription":"Open issue \"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper\" (#26591)"},{"Id":"1575205997","IsPullRequest":false,"CreatedAt":"2023-02-07T23:43:00","Actor":"scottg521","Number":"26590","RawContent":null,"Title":"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSee Stackblitz https://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nIn this example:\r\n- if you click on the words or the checkmark, you get the event, but if you click on a part of the chip without text, you do not\r\n- if you click on the currently selected chip, it will deselect (so nothing is selected) which doesn't seem right for a radio-button-style chip set\r\n- using the keyboard, you can arrow up and down in the list and select with space or enter 👍, also you can tab out of the chip set and you can shift-tab to back into the chipset 👍, but you can't shift-tab to back out of it 👎 .\n\n### Reproduction\n\nhttps://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. click on words, and see selection\r\n2. click on chip but not on words, no selection\r\n3. click the words of the selected chip, deselected (and nothing selected)\r\n4. use keyboard arrows to move within chip set\r\n5. use tab to go to link after chipset\r\n6. use shift-tab to go back to chipset\r\n7. shift-tab will not go to link before chipset (or anywhere out of the chipset)\r\n\n\n### Expected Behavior\n\n- click anywhere on chip to select\r\n- prevented from deselecting selected chip (not sure what 'required' means but it doesn't help)\r\n- able to tab in and out of chipset in either direction\n\n### Actual Behavior\n\ndescribed above\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Mac\r\n","Url":"https://github.com/angular/components/issues/26590","RelatedDescription":"Open issue \"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access\" (#26590)"},{"Id":"1575076737","IsPullRequest":false,"CreatedAt":"2023-02-07T21:52:52","Actor":"ChristopherSnay","Number":"26589","RawContent":null,"Title":"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nPage with the defect: https://material.angular.io/components/chips/examples\r\n\r\nThe last example, \"Stacked chips\" shows full-width chips when the mat-chip CSS shows `max-width: 200px`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Go to https://material.angular.io/components/chips/examples\r\n2. Scroll to the bottom and view Stacked chips\r\n\r\n\r\n### Expected Behavior\r\n\r\nmat-chip should obey the CSS that sets max-width to 200px;\r\n\r\n### Actual Behavior\r\n\r\nmat-chips are 100% width of the container. \r\n![stacked-chips](https://user-images.githubusercontent.com/11818687/217375482-341c5dca-df61-469d-bbec-274bd38acfe5.PNG)\r\n\r\nAdditionally, the only clickable area of the chip is the text area. The overflow is not clickable.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome and Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26589","RelatedDescription":"Open issue \"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox\" (#26589)"},{"Id":"1574960283","IsPullRequest":true,"CreatedAt":"2023-02-07T20:13:13","Actor":"BobobUnicorn","Number":"26588","RawContent":null,"Title":"feat(cdk/tree): integrate TreeKeyManager with cdk/tree","State":"open","Body":"This should allow cdk/tree to support keyboard input.\r\n\r\nBased on #26587.","Url":"https://github.com/angular/components/pull/26588","RelatedDescription":"Open PR \"feat(cdk/tree): integrate TreeKeyManager with cdk/tree\" (#26588)"},{"Id":"1574956665","IsPullRequest":true,"CreatedAt":"2023-02-07T20:10:21","Actor":"BobobUnicorn","Number":"26587","RawContent":null,"Title":"feat(cdk/tree): implement typeahead for TreeKeyManager","State":"open","Body":"Based on #26586. Followed by #26588.","Url":"https://github.com/angular/components/pull/26587","RelatedDescription":"Open PR \"feat(cdk/tree): implement typeahead for TreeKeyManager\" (#26587)"},{"Id":"1574955133","IsPullRequest":true,"CreatedAt":"2023-02-07T20:09:06","Actor":"BobobUnicorn","Number":"26586","RawContent":null,"Title":"feat(cdk/tree): implement expansion methods for TreeKeyManager","State":"open","Body":"Based on #24659. Followed by #26587.","Url":"https://github.com/angular/components/pull/26586","RelatedDescription":"Open PR \"feat(cdk/tree): implement expansion methods for TreeKeyManager\" (#26586)"},{"Id":"1570461136","IsPullRequest":false,"CreatedAt":"2023-02-07T18:46:46","Actor":"eLarocque","Number":"26569","RawContent":null,"Title":"bug(mat-icon-button): mat-icon-button ignores density specification","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi,\r\nThere seems to be an issue where `mat-icon-button` is not affected when setting the density option.\r\n\r\nI'm not sure if this is intended, but according to material design spec, the icon buttons should be affected by the density options. \r\nreference: https://m2.material.io/design/layout/applying-density.html#components\r\n(you can see the button icon examples)\r\n![image](https://user-images.githubusercontent.com/8459019/216710371-85aec44a-1512-4969-b4ea-c39359b88832.png)\r\n\r\nIf this is intended, what would be the best way to make the buttons smaller?\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Apply the density option on buttons using the mat-icon-button directive `@include mat.button-density(-3);` \r\n2. The density (size) of the button does not change.\r\n\r\n![image](https://user-images.githubusercontent.com/8459019/217101058-ae6c3a9c-5220-4e84-85e0-646cb43da252.png)\r\n\r\nDemo: https://stackblitz.com/edit/angular-cf7rfy\r\nIn the stackblitz, you can see that although the first set of mat-button-icons are included in the selector that is affected by the `@include mat.button-density(-3);` and the second set is not, both sets are identical.\r\n\r\n### Expected Behavior\r\n\r\nI would expect a size change in the mat-icon-button\r\n\r\n### Actual Behavior\r\n\r\nmat-icon-button ignores density specification\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Chrome Version 109.0.5414.120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26569","RelatedDescription":"Closed issue \"bug(mat-icon-button): mat-icon-button ignores density specification\" (#26569)"},{"Id":"1574845916","IsPullRequest":true,"CreatedAt":"2023-02-07T18:39:45","Actor":"BobobUnicorn","Number":"26585","RawContent":null,"Title":"feat(cdk/tree): deprecate old TreeControl-based APIs","State":"open","Body":"Based on #25899. Followed by #24658.","Url":"https://github.com/angular/components/pull/26585","RelatedDescription":"Open PR \"feat(cdk/tree): deprecate old TreeControl-based APIs\" (#26585)"},{"Id":"1574833176","IsPullRequest":false,"CreatedAt":"2023-02-07T18:28:23","Actor":"MikaStark","Number":"26584","RawContent":null,"Title":"bug(chip): Overflow visible on action chips text break chip design and usability","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThis CSS rule https://github.com/angular/components/blame/01d5a9d12cad72a2c2bb6f71baf145d0ff4af13a/src/material/chips/chip.scss#L131 override MDC chip label overflow hidden to visible.\r\n\r\n@crisbeto put this comment above the rule\r\n\r\n```scss\r\n  // MDC sets `overflow: hidden` on these elements in order to truncate the text. This is\r\n  // unnecessary since our chips don't truncate their text and it makes it difficult to style\r\n  // the strong focus indicators so we need to override it.\r\n  .mdc-evolution-chip__cell--primary,\r\n  .mdc-evolution-chip__action--primary,\r\n  .mat-mdc-chip-action-label {\r\n    overflow: visible;\r\n  }\r\n```\r\n\r\nBut by not truncating chip long text/label, we reduce it usability and get a weird appearance.\r\n\r\nAs you can see, on small devices, the chip is quiet broken and the trailing icon cannot be reached (which is terrible)\r\n\r\n![image](https://user-images.githubusercontent.com/23034761/217331103-52a22bea-a4d4-4658-80cd-fac2a3f89791.png)\r\n\r\nBy just removing the CSS rule, we get the perfect behavior IMO\r\n\r\n![image](https://user-images.githubusercontent.com/23034761/217331433-bd5a50a7-737f-4aa8-932b-71cb0f5794d7.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/chips/examples\r\n2. Reduce your viewport size to 425px (on Chrome it's equivalent to Mobile L)\r\n3. On the first example, focus the input, type \"This is a very long annoying text that break this chip\" and press \"Enter\"\r\n4. See that the text overflow and the trailing icon is not reachable\r\n\n\n### Expected Behavior\n\nRemove the CSS rule here : https://github.com/angular/components/blame/01d5a9d12cad72a2c2bb6f71baf145d0ff4af13a/src/material/chips/chip.scss#L13\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/23034761/217333439-738d6cf7-d071-4ab5-90d0-9c4e7f37c8f4.png)\r\n\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/26584","RelatedDescription":"Open issue \"bug(chip): Overflow visible on action chips text break chip design and usability\" (#26584)"},{"Id":"1574804472","IsPullRequest":false,"CreatedAt":"2023-02-07T18:04:30","Actor":"angelbello87","Number":"26583","RawContent":null,"Title":"bug(mat-select): Screen reader announce selected option twice","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nafter selecting an option from the mat-select dropdown NVDA will announce the selection name twice\r\nThis happens with out of the box component or after adding the matSelectAccessibility class to the mat-select tag\r\n![image](https://user-images.githubusercontent.com/14942214/217325939-1a502921-5b9d-4b21-9f45-a0e6246e2c3d.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/select/overview using Chrome or Edge\r\n2. Open NVDA or Narrator\r\n3. Navigate to the dropdown with the keyboard\r\n4. Activate dropdown with the keyboard\r\n5. Select an element from the dropdown with the keyboard\r\n\r\n\n\n### Expected Behavior\n\nIt should announce the selected component only once\n\n### Actual Behavior\n\nIt announces the selected component 2 times\n\n### Environment\n\n- Angular: 14.1.1\r\n- CDK/Material: versions 13.2.3 and 15.1.3 \r\n- Browser(s): Edge and Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26583","RelatedDescription":"Open issue \"bug(mat-select): Screen reader announce selected option twice\" (#26583)"},{"Id":"1574015836","IsPullRequest":false,"CreatedAt":"2023-02-07T09:53:17","Actor":"phrei","Number":"26582","RawContent":null,"Title":"bug(List): mat-list-items insterted via content projection are not interactive","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nIn a `mat-nav-list` all `mat-list-item`s should be considered \"interactive\" (see [docs](https://material.angular.io/components/list/overview#navigation) and [Code](https://github.com/angular/components/blob/5f0f071ac5bece0ecb7a5b2a196615d420841b3c/src/material/list/nav-list.ts#L38)) but this is not the case with `mat-list-item`s that are inserted into the list with content projection.\n\n### Reproduction\n\nOutline.html\r\n```\r\n<mat-nav-list>\r\n  <ng-content select=\"[menu]\">\r\n  </ng-content>\r\n...\r\n```\r\n\r\nComponent.html\r\n```\r\n<ng-container menu>\r\n        <a mat-list-item [routerLink]=\"myRouterLink\">\r\n            <mat-icon matListItemIcon>note_add</mat-icon>\r\n            <span>Add</span>\r\n        </a>\r\n```\r\n\r\nOther `mat-list-item`s that are directly under the `mat-nav-list` get the correct CSS-Class.\r\n\r\nYou can see it because the cursor doesn't change for non interactive items.\n\n### Expected Behavior\n\nAll `mat-list-item`s should be considered \"interactive\".\n\n### Actual Behavior\n\n`mat-list-item`s that are inserted with content projection are not considered \"interactive\".\n\n### Environment\n\nAngular CLI: 15.1.4\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@angular/flex-layout            15.0.0-beta.42\r\n@schematics/angular             15.1.4\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4","Url":"https://github.com/angular/components/issues/26582","RelatedDescription":"Open issue \"bug(List): mat-list-items insterted via content projection are not interactive\" (#26582)"},{"Id":"1574005065","IsPullRequest":false,"CreatedAt":"2023-02-07T09:45:56","Actor":"mpo-dev","Number":"26581","RawContent":null,"Title":"bug(cdk/dialog): Closed observable not emitting when closed by navigation","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `closed` observable is not emitting when the CDK dialog is being closed by navigation when the `closeOnNavigation: true` property is applied. As a side effect of the dialog not properly closing, the dialog ref is also kept in the `Dialog.openDialogs` list.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open a CDK dialog with `closeOnNavigation: true`\r\n2. Navigate away\r\n\n\n### Expected Behavior\n\nThe dialog to close properly\n\n### Actual Behavior\n\nThe `closed` observable is not emtting and the dialog is being kept in de list with open dialogs\n\n### Environment\n\n- Angular: 15.1.0\r\n- CDK/Material: 15.1.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/26581","RelatedDescription":"Open issue \"bug(cdk/dialog): Closed observable not emitting when closed by navigation\" (#26581)"},{"Id":"1573695269","IsPullRequest":false,"CreatedAt":"2023-02-07T05:07:12","Actor":"PowerKiKi","Number":"26580","RawContent":null,"Title":"bug(paginator-mdc): Paginator form field appearance does not honor `MAT_FORM_FIELD_DEFAULT_OPTIONS`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the new MDC paginator, if setting a global field appearance with `MAT_FORM_FIELD_DEFAULT_OPTIONS`, or not doing anything to use the (new) default of `fill` style, then the new MDC Paginator will not honor any of those. Instead, it will fallback to its own hardcoded default, which is `outline`. That is strikingly different than the global default of `fill`.\r\n\r\nI would be willing to create a PR to implement cascading defaults. If `MatPaginatorDefaultOptions` is defined uses that, else if `MatFormFieldDefaultOptions` is defined use that, or else use the same global default as `MatFormField` which is `DEFAULT_APPEARANCE`. Would this kind of PR has a chance of being merged ?\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://stackblitz.com/edit/components-issue-scusbg?file=src%2Fapp%2Fexample-component.html\r\n2. See that Paginator has different default appearance than select box, but it should not.\r\n\n\n### Expected Behavior\n\nPaginator should honor the global default appearance, which is `fill` or might be user-defined.\n\n### Actual Behavior\n\nIt has a hardcoded default of `outline` and can only be changed via `MatPaginatorDefaultOptions`, and never via `MatFormFieldDefaultOptions`.\n\n### Environment\n\n- Angular: 15.1\r\n- CDK/Material: 15.1\r\n- Browser(s): Chrome 109\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26580","RelatedDescription":"Open issue \"bug(paginator-mdc): Paginator form field appearance does not honor `MAT_FORM_FIELD_DEFAULT_OPTIONS`\" (#26580)"},{"Id":"1573369130","IsPullRequest":false,"CreatedAt":"2023-02-06T22:09:45","Actor":"eLarocque","Number":"26579","RawContent":null,"Title":"bug(form-field): mat-label disappears when density < -1","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nThere seems to be an issue where the mat-labels disappear when the density of form-field is set to lower than -1. I don't think this is as designed...\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Set the density option to anything lower than -1, ex: `@include mat.form-field-density(-2);`\r\n2. Include a mat-form-field with the appearance set to \"fill\", with a mat-label\r\n\r\nnotice the labels do not appear. (Their css is set as \"display:none;\")\r\n\r\nDemo: https://stackblitz.com/edit/angular-wvlwej\r\nIn the stackblitz, you can see that the labels appear fine when density is set at >= -1, but anything lower and the label is hidden.\r\n\r\n![image](https://user-images.githubusercontent.com/8459019/217098883-527e1c7c-71a2-4cb2-8c3e-2dc2c6a1b964.png)\r\n\n\n### Expected Behavior\n\nThe labels should be visible\n\n### Actual Behavior\n\nThe labels are not visible\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s):  Chrome Version 109.0.5414.120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26579","RelatedDescription":"Open issue \"bug(form-field): mat-label disappears when density < -1\" (#26579)"},{"Id":"1576250321","IsPullRequest":false,"CreatedAt":"2023-02-06T19:00:21","Actor":"soujam69","Number":"26592","RawContent":null,"Title":"Angular 15 - Material 'mat-sidenav' breaks page","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm new to Angular and have installed the lastest of everything. I created a new component using the -standalone switch. I've installed Material and imported it in my new component. If I insert mat-sidenav in my html it breaks the page and everything is blank. If i remove the mat-sidenav it works again. Also, 'mat-elevation-z4' does not work either.\r\n <mat-toolbar>\r\n  Header Info\r\n</mat-toolbar>\r\n\r\n  <mat-sidenav-container>\r\n    <mat-sidenav>\r\n        Side Content\r\n    </mat-sidenav>  \r\n    <mat-sidenav-content class=\"content\">\r\n        Main Content\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo errors\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/26592","RelatedDescription":"Open issue \"Angular 15 - Material 'mat-sidenav' breaks page\" (#26592)"},{"Id":"1573060021","IsPullRequest":false,"CreatedAt":"2023-02-06T18:19:07","Actor":"myrddraall","Number":"26578","RawContent":null,"Title":"bug(Style): Enabling `preserveSymlinks` breaks stylesheet","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13\r\n\r\n### Description\r\n\r\nwhen enabling `preserveSymlinks` in angular.json custom stylesheets no longer compile because they cannot find `@material/button/button`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Run `ng new MyProject`\r\n2. Select the default options\r\n3. Run `cd MyProject`\r\n4. `ng add @angular/material`\r\n5. Select the default options, except for the theme, select Custom\r\n6. Set  `preserveSymlinks` to true in angular.json\r\n7.  Run `ng build`\r\n\r\n\r\n### Expected Behavior\r\n\r\nFor the project to build without error\r\n\r\n### Actual Behavior\r\n\r\nThe build fails with the following message:\r\n```\r\n./src/styles.scss - Error: Module build failed (from ./node_modules/.pnpm/sass-loader@13.2.0_sass@1.57.1+webpack@5.75.0/node_modules/sass-loader/dist/cjs.js):\r\nSassError: Can't find stylesheet to import.\r\n  ╷\r\n2 │ @use '@material/button/button' as mdc-button;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  node_modules/@angular/material/button/_button-theme.scss 2:1               @use\r\n  node_modules/@angular/material/core/density/private/_all-density.scss 2:1  @forward\r\n  @angular/_index.scss 18:1                                                  @use\r\n  src/styles.scss 1:1                                                        root stylesheet\r\n\r\n```\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.1.4\r\nNode: 18.13.0\r\nPackage Manager: pnpm 7.26.2\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-date-fns-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4 (cli-only)\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4 (cli-only)\r\n@angular-devkit/schematics      15.1.4 (cli-only)\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4 (cli-only)\r\nrxjs                            7.5.6\r\ntypescript                      4.9.5","Url":"https://github.com/angular/components/issues/26578","RelatedDescription":"Open issue \"bug(Style): Enabling `preserveSymlinks` breaks stylesheet\" (#26578)"},{"Id":"1572775558","IsPullRequest":false,"CreatedAt":"2023-02-06T15:23:35","Actor":"alvaromartmart","Number":"26577","RawContent":null,"Title":"help(ComponentHarness): TestElement.sendKeys() on disabled inputs","State":"open","Body":"### What are you trying to do?\n\nI expect `TestElement.sendKeys` to respect the disabled status of input elements, however they don't seem to. The input is properly disabled on the application, the harness properly detects its disabled status... but `sendKeys` seems to bypass it.\r\n\r\nMaybe I misunderstood something, any help would be appreciated.\n\n### What troubleshooting steps have you tried?\n\nI tried running extra change detection cycles, etc. to no avail.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. In the Stackblitz demo below, the test `CustomInputHarness > should not fill disabled input` should pass\r\n\r\nhttps://stackblitz.com/edit/node-g4jhab?file=harness-sendkeys-demo/src/app/custom-input-component/custom-input-component.harness.ts\n\n### Environment\n\n- Angular: 14.2, 15.1\r\n- CDK/Material: 14.2, 15.1\r\n- Browser(s): Chrome, though doesn't seem relevant\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, though doesn't seem relevant\r\n","Url":"https://github.com/angular/components/issues/26577","RelatedDescription":"Open issue \"help(ComponentHarness): TestElement.sendKeys() on disabled inputs\" (#26577)"},{"Id":"1572457332","IsPullRequest":false,"CreatedAt":"2023-02-06T12:11:21","Actor":"plusnia-pgs","Number":"26576","RawContent":null,"Title":"bug(VIRTUAL_SCROLL): Virtual scroll problem","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nI have weird issue with Angular CDK Virtual Scroll. I have implemented a virtual scroll and during scrolling this below error occurs in random time:\r\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\r\n\r\nIn general the error occurs when eg. I go to the other tab in the browser and then I go back to the app\r\n\r\nLibs versions:\r\n`\"@angular/cdk\": \"15.1.3\"`\r\n`\"@angular/material\": \"15.1.3\"`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Init Virtual Scroll\r\n2. Go to the other tab or just minimize the browser\r\n3. Go back to the app\r\n4. Scroll\r\n\n\n### Expected Behavior\n\nNo errors like in Angular CDK examples \n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Chrome 109.0.5414.119\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26576","RelatedDescription":"Open issue \"bug(VIRTUAL_SCROLL): Virtual scroll problem\" (#26576)"},{"Id":"1572394420","IsPullRequest":false,"CreatedAt":"2023-02-06T11:24:58","Actor":"leomayer","Number":"26575","RawContent":null,"Title":"bug(Button): letter-spacing not consistent in  different buttons","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThe new `mat-button` use a `letter-spacing` which is calculated as `1.25px` with the default settings. To be more precise:\r\n\r\n```\r\nvar(--mdc-typography-button-letter-spacing, .0892857143em)\r\n```\r\n\r\nwhereas  the variable `--mdc-typography-button-letter-spacing` is undefined. \r\n\r\nFor the toggle-button the letter-spacing is used from the `user agent stylesheet` which is set to `normal`. \n\n### Reproduction\n\nSteps to reproduce:\r\n1. Inspect the HTML-code of https://material.angular.io/components/button-toggle/overview\r\n2. https://material.angular.io/components/button/overview\r\n\n\n### Expected Behavior\n\nAt least that the letter-spacing is consistent over the components.\r\n\r\nAdditionally I would have expected the same spacing for similar types. \r\n\r\nAccording to the Material 3 specs there is no additional `letter-spacing` set: https://m3.material.io/components/buttons/specs\n\n### Actual Behavior\n\nWidth is set `1.25px`\n\n### Environment\n\nAngular CLI: 15.1.3\r\nNode: 19.5.0 (Unsupported)\r\nPackage Manager: npm 9.3.1\r\nOS: linux x64\r\n\r\nAngular: 15.1.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.3\r\n@angular-devkit/build-angular   15.1.3\r\n@angular-devkit/core            15.1.3\r\n@angular-devkit/schematics      15.1.3\r\n@angular/cli                    15.1.3\r\n@schematics/angular             15.1.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n","Url":"https://github.com/angular/components/issues/26575","RelatedDescription":"Open issue \"bug(Button): letter-spacing not consistent in  different buttons\" (#26575)"},{"Id":"1572175284","IsPullRequest":false,"CreatedAt":"2023-02-06T09:01:06","Actor":"Zacherl","Number":"26574","RawContent":null,"Title":"bug(ActionList): List items react to clicks even though they are disabled","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIf a mat-action-list is used with a disabled action, the list item is greyed out, but one can still interact with it, e. g. click on it.\n\n### Reproduction\n\nStackBlitz\r\nhttps://stackblitz.com/edit/angular-y6ecj5-wsih76?file=src/app/list-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. Click on the disabled list item\r\n2. See the action\n\n### Expected Behavior\n\nThe list item should not react to clicks (no ripple, no action).\n\n### Actual Behavior\n\nA ripple is shown on the list item and the click action is triggered and executed.\n\n### Environment\n\n- Angular: 15.1.1\r\n- CDK/Material: 15.1.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26574","RelatedDescription":"Open issue \"bug(ActionList): List items react to clicks even though they are disabled\" (#26574)"},{"Id":"1571753330","IsPullRequest":false,"CreatedAt":"2023-02-06T01:54:54","Actor":"fireflysemantics","Number":"26573","RawContent":null,"Title":"docs-bug(COMPONENT): Theming","State":"open","Body":"### Documentation Feedback\r\n\r\nI asked about this on Stackoverflow.  The question is about how to avoid duplicating styles in Angular 15.\r\n\r\n[This is the question](https://stackoverflow.com/questions/75276638/generating-an-angular-theme-for-angular-15).\r\n\r\nThe answer is to only call ` @include mat.all-component-themes($theme);` in the main theme, and then use `@include mat.all-component-colors($theme);` in subsequent themes like this.\r\n\r\nHowever it seems to me that this will then leave out generated CSS code for the scope of that theme.\r\n\r\n```\r\n.dark-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-theme($theme);\r\n    @include mat.all-component-themes($theme);\r\n}\r\n//and this being your secondary theme\r\n.light-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-color($theme);  <---- This is the magic\r\n    @include mat.all-component-colors($theme); <---- This is the magic\r\n}\r\n```\r\n\r\nIIUC with the above type of theme generation the rules generated for the light and dark themes would be mutually exclusive, and so the light theme would only have the color specific CSS declarations, but would be missing CSS declarations generated for the dark theme with `mat.all-component-themes($theme);`.\r\n\r\nSome clarification on this in the documentation would be terrific.\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/26573","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Theming\" (#26573)"},{"Id":"1571308277","IsPullRequest":false,"CreatedAt":"2023-02-05T08:15:26","Actor":"avishome","Number":"26572","RawContent":null,"Title":"bug(mat-sidenav): There is no focus trap when Sidenav position is 'end'","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n11\n\n### Description\n\nWhen you opens the Sidenav in over mode the focus shouldn't leave the Sidenav when it is open. it works in case the Sidenav opens in the left side. but in the right side it is broken.\n\n### Reproduction\n\nSteps to reproduce:\r\n[stackBlitz](https://stackblitz.com/edit/angular-96vr4f?file=src%2Fapp%2Fsidenav-mode-example.html)\r\n1. Open the Stackblitz example\r\n2. choose Mode: Over\r\n3. click on the toggle button\r\n4. In the keyboard, click on the tab several times.\n\n### Expected Behavior\n\nThe focus shouldn't leave the Sidenav.\n\n### Actual Behavior\n\nThe focus leaves the side pane and there is no way to return to Sidenav with the keyboard.\n\n### Environment\n\n- Angular: 14.2.10\r\n- CDK/Material: 14.2.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26572","RelatedDescription":"Open issue \"bug(mat-sidenav): There is no focus trap when Sidenav position is 'end'\" (#26572)"},{"Id":"1570854302","IsPullRequest":true,"CreatedAt":"2023-02-04T09:33:16","Actor":"crisbeto","Number":"26571","RawContent":null,"Title":"fix(material/paginator): not emitting instance of PageEvent","State":"open","Body":"Fixes that the paginator's `page` event is typed to emit a `PageEvent`, however the value is only an event that matches the `PageEvent` interface, it isn't an actual instance of the class which can throw off `instanceof` checks.\r\n\r\nFixes #26546.","Url":"https://github.com/angular/components/pull/26571","RelatedDescription":"Open PR \"fix(material/paginator): not emitting instance of PageEvent\" (#26571)"},{"Id":"1570345556","IsPullRequest":true,"CreatedAt":"2023-02-03T19:37:18","Actor":"wagnermaciel","Number":"26568","RawContent":null,"Title":"feat(material/button): make button ripples lazy","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26568","RelatedDescription":"Open PR \"feat(material/button): make button ripples lazy\" (#26568)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-09T03:30:03.2991498Z","RunDurationInMilliseconds":2204}