{"Data":{"Angular-Issues":{"Issues":[{"Id":"1578686802","IsPullRequest":true,"CreatedAt":"2023-02-09T22:08:19","Actor":"angular-robot","Number":"49019","RawContent":null,"Title":"build: update dependency lighthouse to v10","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [lighthouse](https://togithub.com/GoogleChrome/lighthouse) | devDependencies | major | [`^9.0.0` -> `^10.0.0`](https://renovatebot.com/diffs/npm/lighthouse/9.6.8/10.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChrome/lighthouse</summary>\n\n### [`v10.0.0`](https://togithub.com/GoogleChrome/lighthouse/blob/HEAD/changelog.md#&#8203;1000-2023-02-09)\n\n[Compare Source](https://togithub.com/GoogleChrome/lighthouse/compare/v9.6.8...v10.0.0)\n\n[Full Changelog](https://togithub.com/GoogleChrome/lighthouse/compare/v9.6.8...v10.0.0)\n\nWe expect this release to ship in the DevTools of [Chrome 112](https://chromiumdash.appspot.com/schedule), and to PageSpeed Insights within 2 weeks.\n\n#### New Contributors\n\nThanks to our new contributors 👽🐷🐰🐯🐻!\n\n-   Alex N. Jose [@&#8203;alexnj](https://togithub.com/alexnj)\n-   Alexandra White [@&#8203;heyawhite](https://togithub.com/heyawhite)\n-   Amanda [@&#8203;apettenati](https://togithub.com/apettenati)\n-   Andrew Gutekanst [@&#8203;Andoryuuta](https://togithub.com/Andoryuuta)\n-   Christopher Holder [@&#8203;ChristopherPHolder](https://togithub.com/ChristopherPHolder)\n-   Dongkyun Yu (Steve) [@&#8203;hackurity01](https://togithub.com/hackurity01)\n-   Floris [@&#8203;FMJansen](https://togithub.com/FMJansen)\n-   Gabe [@&#8203;MrBrain295](https://togithub.com/MrBrain295)\n-   ghost\\_32 [@&#8203;k99sharma](https://togithub.com/k99sharma)\n-   Littleton Riggins [@&#8203;TripleEquals](https://togithub.com/TripleEquals)\n-   lowkeyAngry [@&#8203;lowkeyAngry](https://togithub.com/lowkeyAngry)\n-   Michael McMahon [@&#8203;TechnologyClassroom](https://togithub.com/TechnologyClassroom)\n-   Shogo Hida [@&#8203;shogohida](https://togithub.com/shogohida)\n-   Stoyan [@&#8203;stoyan](https://togithub.com/stoyan)\n-   Yang Guo [@&#8203;hashseed](https://togithub.com/hashseed)\n\n#### Notable Changes\n\n##### Performance Score Changes\n\nIn the 8.0 release, we [described TTI's waning role](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/v8-perf-faq.md#whats-the-story-with-tti), and today we have the followup. Time to Interactive (TTI) no longer contributes to the performance score and is not displayed in the report. However, it is still accessible in the Lighthouse result JSON.\n\nWithout TTI, the weighting of Cumulative Layout Shift (CLS) has increased from 15% to 25%. See the docs for a complete breakdown of [how the Performance score is calculated in 10.0](https://developer.chrome.com/docs/lighthouse/performance/performance-scoring/#lighthouse-10), or [play with the scoring calculator](https://googlechrome.github.io/lighthouse/scorecalc/#FCP=3000\\&SI=5800\\&FMP=4000\\&TTI=7300\\&FCI=6500\\&LCP=4000\\&TBT=600\\&CLS=0.25\\&device=mobile\\&version=10\\&version=8).\n\n##### Types for the Node package\n\nLighthouse now includes type declarations! Our [example TypeScript recipe](https://togithub.com/GoogleChrome/lighthouse/tree/main/docs/recipes/type-checking) demonstrates how to achieve proper type safety with Lighthouse.\n\n##### Third-party Entity classification\n\nSince Lighthouse 5.3, the community-driven [`third-party-web`](https://togithub.com/patrickhulce/third-party-web) dataset has been used to summarize how every third-party found on a page contributes to the total JavaScript blocking time, via the `third-party-summary` audit. With Lighthouse 10.0, we are adding a new property to the JSON result (`entities`) to make further use of this dataset. Every origin encountered on a page is now classified as first-party or third-party within `entities`. In 10.0, this classification is used to power the existing third-party filter checkbox.\n\nIn a future version of Lighthouse, this will be used to group the table items of every audit based on the entity it originated from, and aggregate the impact of items from that specific entity.\n\n#### 🆕 New Audits\n\n##### Back/forward cache\n\nThe Back/forward cache (bfcache for short) is a browser optimization that serves pages from fully serialized snapshots when navigating back or forwards in session history. There are over 100 different reasons why a page may not be eligible for this optimization, so to assist developers Lighthouse now attempts to trigger a bfcache response and will list anything that prevented the browser from using the bfcache. [#&#8203;14465](https://togithub.com/GoogleChrome/lighthouse/pull/14465)\n\nFor more on bfcache, see [the web.dev article](https://web.dev/bfcache/).\n\nNote: This audit initially will not be available for PageSpeed Insights.\n\n##### Preventing pasting to inputs\n\nThe audit `password-inputs-can-be-pasted-into` is now `paste-preventing-inputs`. This audit's logic works just as before, but rather than just considering `[type=password]` inputs, it now fails if *any* non-readonly input element prevents the user from pasting. [#&#8203;14313](https://togithub.com/GoogleChrome/lighthouse/pull/14313)\n\n#### Lighthouse documentation is now on developer.chrome.com\n\nOur documentation is no longer hosted on web.dev. For the most up to date audit docs, please go to [developer.chrome.com/docs/lighthouse/](https://developer.chrome.com/docs/lighthouse/)\n\n#### 💥 Breaking changes\n\nUnder the hood, Lighthouse now uses the new user-flow supporting infrastructure by default, even for traditional navigation runs. You can opt out of this by: in the CLI, use `--legacy-navigation`; in DevTools: check “Legacy Navigation” in the settings menu. If you have a use case that necessitates this escape hatch, please file an issue. We plan to remove this legacy path in 11.0.\n\n##### For Lighthouse result JSON (LHR) users\n\n##### Page URLs on the Lighthouse Result\n\nUntil now, there were two URL fields to describe a Lighthouse run:\n\n-   `requestedUrl`: the url given by the users, which Lighthouse instructs Chrome to navigate to\n-   `finalUrl`: the url after any server-initiated HTTP and JS-initiated redirects\n\nThis taxonomy cannot account for more complex scenarios, such as JS-initiated redirects, usage of the History API or soft-navigations. They were also ill-defined for timespan and snapshot modes. To account for that, Lighthouse 10.0 now has these URL fields:\n\n-   (changed) `requestedUrl`: The URL that Lighthouse initially navigated to before redirects. This is the same as it was before for navigation mode, but now it will be `undefined` in timespan/snapshot.\n-   (new) `mainDocumentUrl`: The URL of the last document requested during a navigation. It does not account for soft navigations or history API events made after the page loads. It is only available in navigation mode, and will be undefined in timespan and snapshot modes.\n-   (new) `finalDisplayedUrl`: The URL displayed in the browser combobox at the end of a Lighthouse run. It accounts for soft navigations and history API events. Available in navigation, timespan, and snapshot modes.\n-   (deprecated) `finalUrl`: Same value as `mainDocumentUrl`.\n\n##### Audit changes\n\n-   `password-inputs-can-be-pasted-into` -> `paste-preventing-inputs`\n-   `preload-lcp-image` -> `prioritize-lcp-image`\n-   `third-party-summary` no longer uses a `link` value for `item.entity`, instead uses a raw `text` value\n-   `full-page-screenshot` is no longer an audit, instead it is stored at `lhr.fullPageScreenshot`. To suppress collection of the full-page screenshot in the CLI, you must migrate from `--skip-audits full-page-screenshot` to `--disable-full-page-screenshot`.\n\n##### For Node users\n\n-   Node 14 is no longer supported, the minimum is now Node 16\n-   In case you import paths within the lighthouse node package: `lighthouse-core/` and `lighthouse-cli/` folders are now simply `core/` and `cli/`\n-   Converted from CommonJS to ES modules. You can still use lighthouse in CommonJS by using an dynamic import: `await import('lighthouse')`. For access to just the `lighthouse` function in CommonJS, you can also use `require('lighthouse/core/index.cjs')`\n-   The CSV output for Lighthouse is much more useful now. Consult the PR for [an example of the new format](https://togithub.com/GoogleChrome/lighthouse/pull/13558)\n-   `LHError` is now `LighthouseError`. If you are attempting to catch an error thrown by Lighthouse, be sure to account for this!\n\n##### Node API changes\n\nThe `lighthouse` function now has [better integration with Puppeteer](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/puppeteer.md). Use `lighthouse(url, flags, config, page)` to run Lighthouse, passing an existing `Puppeteer.Page` handle as `page`.\n\nThe user flow api has moved to the top level node entrypoint and can be imported with `import {startFlow} from 'lighthouse'`.\n\nNew `flow.startNavigation()` and `flow.endNavigation()` functions let you define a user triggered navigation without any callback function. See the user flow docs for [an example](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/user-flows.md#triggering-a-navigation-via-user-interactions).\n\nTo change settings for a single user flow step, define the settings overrides on the toplevel flags options `flow.snapshot({skipAduits: ['uses-http2']})` instead of on the `settingsOverride` property.\n\nTo give a flow step a custom name, use `flow.snapshot({name: 'Custom name'})`. Previously this was done via `stepName`.\n\n##### For Lighthouse customization (custom config, gatherers, audits)\n\n-   To work in Lighthouse 10.0, custom gatherers will need to implement the new Gatherer interface ([an example](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/recipes/custom-audit/memory-gatherer.js)). Otherwise, they will only work in [legacy navigation mode](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/configuration.md#using-legacy-configs-in-100) and older versions of Lighthouse\n-   Lighthouse cannot use `passes` to load the page multiple times in navigation mode anymore. If you need to load the page multiple times, we recommend using a user flow. See our config docs for instructions on [how to convert to the new config format](https://togithub.com/GoogleChrome/lighthouse/blob/main/docs/configuration.md#legacy-configs)\n-   The `ScriptElements` artifact is now `Scripts`, with a [slightly different shape](https://togithub.com/GoogleChrome/lighthouse/blob/955586c4e05d501d69a79d4ef0297991b6805690/types/artifacts.d.ts#L317)\n-   `Audit.makeOpportunityDetails` and `Audit.makeTableDetails` now accept an options object as the third parameter. This ends up being a breaking change for just `Audit.makeOpportunityDetails`.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/49019","RelatedDescription":"Open PR \"build: update dependency lighthouse to v10\" (#49019)"},{"Id":"1578244278","IsPullRequest":false,"CreatedAt":"2023-02-09T17:30:06","Actor":"pawansingh00","Number":"49018","RawContent":null,"Title":"Configure custom path to be used by ngcc for files like - .ngcc.lock","State":"closed","Body":"### Is this a bug report or a feature request?\r\n\r\n- [X] Feature Request\r\n\r\n\r\n### Description [Feature Request only]\r\n\r\nHi\r\n\r\nI am having a requirement where node_modules required for a project are already installed and stored somewhere.\r\nAnd we are running multiple instances of the angular project each inside a separate docker container and we mount the node_modules folder to these containers.\r\n\r\nSo basically same node_modules folder is shared among all these running containers.\r\n\r\nEverything works fine, but when we run testcases -> `npm run test` (`jest --json --outputFile=./testOutput.json; node transformJestOutputToMochaStyle.js`)\r\nits failing with the below error, which is obvious as we are mounting the node_modules folder as read only.\r\n\r\nMy Question is is there any way we can specify any custom directory which can be used by ngcc for creating the related temp files like - `.ngcc_lock_file` etc. ?\r\n\r\n```\r\ngxjc5w@84d7538af516:~/project/application$ npm run test\r\n\r\n> angular-interview@0.0.0 test\r\n> jest --json --outputFile=./testOutput.json; node transformJestOutputToMochaStyle.js\r\n\r\nDetermining test suites to run...\r\nngcc-jest-processor: running ngcc\r\nError: EROFS: read-only file system, open '/deps/node_modules/.ngcc_lock_file'\r\n    at Object.openSync (node:fs:585:3)\r\n    at Module.writeFileSync (node:fs:2157:35)\r\n    at NodeJSFileSystem.writeFile (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-TOKOIIBI.js:357:9)\r\n    at LockFileWithChildProcess.write (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-2LU77VSE.js:1730:13)\r\n    at AsyncLocker.create (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-2LU77VSE.js:1682:30)\r\n    at AsyncLocker.lock (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-2LU77VSE.js:1671:16)\r\n    at ClusterExecutor.execute (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-2LU77VSE.js:1566:26)\r\n    at mainNgcc (file:///deps/node_modules/@angular/compiler-cli/bundles/chunk-2LU77VSE.js:2113:19)\r\n    at file:///deps/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:32:11\r\n    at file:///deps/node_modules/@angular/compiler-cli/bundles/ngcc/main-ngcc.js:42:3\r\nError: Jest: Got error running globalSetup - /deps/node_modules/jest-preset-angular/global-setup.js, reason:  NGCC failed .\r\n    at runNgccJestProcessor (/deps/node_modules/jest-preset-angular/build/utils/ngcc-jest-processor.js:42:19)\r\n    at /deps/node_modules/jest-preset-angular/build/config/global-setup.js:10:56\r\n    at Generator.next (<anonymous>)\r\n    at /deps/node_modules/tslib/tslib.js:118:75\r\n    at new Promise (<anonymous>)\r\n    at Object.__awaiter (/deps/node_modules/tslib/tslib.js:114:16)\r\n    at globalSetup (/deps/node_modules/jest-preset-angular/build/config/global-setup.js:6:35)\r\n    at /deps/node_modules/@jest/core/build/runGlobalHook.js:125:19\r\n    at ScriptTransformer.requireAndTranspileModule (/deps/node_modules/@jest/transform/build/ScriptTransformer.js:905:24)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\nnode:internal/fs/utils:344\r\n    throw err;\r\n    ^\r\n\r\nError: ENOENT: no such file or directory, open './testOutput.json'\r\n    at Object.openSync (node:fs:585:3)\r\n    at Object.readFileSync (node:fs:453:35)\r\n    at readTestOutput (/candidate_files/preview/gxjc5w/editablequestions-angular7-q1675409290800/application/transformJestOutputToMochaStyle.js:41:28)\r\n    at Object.<anonymous> (/candidate_files/preview/gxjc5w/editablequestions-angular7-q1675409290800/application/transformJestOutputToMochaStyle.js:50:20)\r\n    at Module._compile (node:internal/modules/cjs/loader:1103:14)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1157:10)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)\r\n    at node:internal/main/run_main_module:17:47 {\r\n  errno: -2,\r\n  syscall: 'open',\r\n  code: 'ENOENT',\r\n  path: './testOutput.json'\r\n}\r\n```\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\n_No response_\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/49018","RelatedDescription":"Closed issue \"Configure custom path to be used by ngcc for files like - .ngcc.lock\" (#49018)"},{"Id":"1578204086","IsPullRequest":true,"CreatedAt":"2023-02-09T16:22:34","Actor":"an-gu99","Number":"49017","RawContent":null,"Title":"dynamic-form example: default type attribute of input element to 'text' instead of '' + CSS","State":"open","Body":"fix(docs-infra): default type attribute of input element to 'text' instead of '' and overshadow global CSS rule for input[type='text']\r\n\r\nmissing value for type attribute seems unintended but only defaulting it to 'text' without changing the CSS would have messed up the style for this example\r\n\r\nFixes #48895\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #48895\r\n\r\n\r\n## What is the new behavior?\r\nbehavior is unchanged but code is safer\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49017","RelatedDescription":"Open PR \"dynamic-form example: default type attribute of input element to 'text' instead of '' + CSS\" (#49017)"},{"Id":"1578136233","IsPullRequest":true,"CreatedAt":"2023-02-09T16:06:39","Actor":"an-gu99","Number":"49016","RawContent":null,"Title":"dynamic-form example: default type attribute of input element to 'text' instead of '' + CSS","State":"closed","Body":"fix(docs-infra): default type attribute of input element to 'text' instead of '' and overshadow global CSS rule for input[type='text']\r\n\r\nmissing value for type attribute seems unintended but only defaulting it to 'text' without changing the CSS would have messed up the style for this example\r\n\r\nFixes #48895\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #48995\r\n\r\n\r\n## What is the new behavior?\r\nbehavior is unchanged but code is safer\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49016","RelatedDescription":"Closed or merged PR \"dynamic-form example: default type attribute of input element to 'text' instead of '' + CSS\" (#49016)"},{"Id":"1578133663","IsPullRequest":true,"CreatedAt":"2023-02-09T15:39:01","Actor":"cexbrayat","Number":"49015","RawContent":null,"Title":"docs(router): fix error handler deprecation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe deprecation mentions `withErrorHandler` whereas the feature is called `withNavigationErrorHandler` since 15eccef4ebf58c889b2a28988ebcc297e3cd2df6.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49015","RelatedDescription":"Open PR \"docs(router): fix error handler deprecation\" (#49015)"},{"Id":"1578086143","IsPullRequest":true,"CreatedAt":"2023-02-09T15:16:39","Actor":"cexbrayat","Number":"49014","RawContent":null,"Title":"test: typos in standalone test names","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: typos\r\n\r\n\r\n## What is the new behavior?\r\nFixes a recurring typo in test names containing `bootstrap`\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49014","RelatedDescription":"Open PR \"test: typos in standalone test names\" (#49014)"},{"Id":"1578072462","IsPullRequest":true,"CreatedAt":"2023-02-09T15:09:15","Actor":"cexbrayat","Number":"49013","RawContent":null,"Title":"docs: missing closing parenthesis in withNavigationErrorHandler() example","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe current example misses a parenthesis\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49013","RelatedDescription":"Open PR \"docs: missing closing parenthesis in withNavigationErrorHandler() example\" (#49013)"},{"Id":"1576281640","IsPullRequest":true,"CreatedAt":"2023-02-09T15:03:36","Actor":"angular-robot","Number":"48998","RawContent":null,"Title":"docs: update events","State":"closed","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.\n\nCloses #48796","Url":"https://github.com/angular/angular/pull/48998","RelatedDescription":"Closed or merged PR \"docs: update events\" (#48998)"},{"Id":"1578059733","IsPullRequest":true,"CreatedAt":"2023-02-09T15:03:32","Actor":"angular-robot","Number":"49012","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.\n\nCloses #48998","Url":"https://github.com/angular/angular/pull/49012","RelatedDescription":"Open PR \"docs: update events\" (#49012)"},{"Id":"1577914777","IsPullRequest":true,"CreatedAt":"2023-02-09T14:37:52","Actor":"crisbeto","Number":"49010","RawContent":null,"Title":"Standalone migration performance improvements","State":"closed","Body":"Includes some performance improvements and fixes to the standalone migration that came up after testing it against a large internal project. The individual commits have more info, but here's a summary:\r\n\r\n1. Significantly speeds up the same-file reference lookups that we have to do for the `bootstrapModule` migration. E.g. previously a single node lookup could take as long as 30s on a large app and now it takes ~30ms.\r\n2. Avoids interrupting the entire migration if the language service throws an error when making a lookup.\r\n3. Avoids having to re-traverse nodes that we've already traversed as a part of the `bootstrapModule` migration. This reduces the migration time even further, because we have to make fewer expensive language service lookups.","Url":"https://github.com/angular/angular/pull/49010","RelatedDescription":"Closed or merged PR \"Standalone migration performance improvements\" (#49010)"},{"Id":"1577950172","IsPullRequest":true,"CreatedAt":"2023-02-09T14:04:09","Actor":"antonellopasella","Number":"49011","RawContent":null,"Title":"docs(router): paramMap.get could be null","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49011","RelatedDescription":"Open PR \"docs(router): paramMap.get could be null\" (#49011)"},{"Id":"1577875712","IsPullRequest":true,"CreatedAt":"2023-02-09T13:15:04","Actor":"devversion","Number":"49009","RawContent":null,"Title":"build: remove unused webdriver-manager code","State":"open","Body":"We no longer need webdriver-manager as everything is tested using Bazel with the Bazel-managed\r\nbrowsers and chrome/gecko drivers.\r\n\r\nThe drivers and browser binaries are managed as part of dev-infra's shared browser/driver\r\nconfiguration in `bazel/browsers`.\r\n\r\nNote: The `zone.js` test is not running on CI and likely is a legacy artifact from `zone.js` being moved\r\ninto this repository. If someone tries to run it locally, outside of Bazel, they can still use webdriver\r\nmanager to fetch drivers using `npx`\r\n\r\nCloses #49007 ","Url":"https://github.com/angular/angular/pull/49009","RelatedDescription":"Open PR \"build: remove unused webdriver-manager code\" (#49009)"},{"Id":"1577071180","IsPullRequest":true,"CreatedAt":"2023-02-09T13:11:23","Actor":"angular-robot","Number":"49007","RawContent":null,"Title":"build: update dependency webdriver-manager to v13","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webdriver-manager](https://togithub.com/angular/webdriver-manager) | resolutions | major | [`12.1.8` -> `13.0.1`](https://renovatebot.com/diffs/npm/webdriver-manager/12.1.8/13.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/webdriver-manager</summary>\n\n### [`v13.0.1`](https://togithub.com/angular/webdriver-manager/compare/13.0.0...13.0.1)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/13.0.0...13.0.1)\n\n### [`v13.0.0`](https://togithub.com/angular/webdriver-manager/compare/12.1.9...13.0.0)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/12.1.9...13.0.0)\n\n### [`v12.1.9`](https://togithub.com/angular/webdriver-manager/blob/HEAD/CHANGELOG.md#&#8203;1219)\n\n[Compare Source](https://togithub.com/angular/webdriver-manager/compare/12.1.8...12.1.9)\n\nUpdates `adm-zip` to version `0.5.2`.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/49007","RelatedDescription":"Closed or merged PR \"build: update dependency webdriver-manager to v13\" (#49007)"},{"Id":"1576854886","IsPullRequest":false,"CreatedAt":"2023-02-08T21:59:40","Actor":"cexbrayat","Number":"49006","RawContent":null,"Title":"`ng g @angular/core:standalone` should prefer `NgFor` instead of `NgForOf`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\n```\r\nng new standalone-migration --defaults\r\ncd standalone-migration\r\nng update @angular/core@next @angular/cli@next --force\r\necho \"<div *ngFor=\"let i of [1, 2]\">Hello world</div>\" > src/app/app.component.html\r\nng g @angular/core:standalone --defaults --mode standalone-bootstrap\r\n```\r\n\r\n`app.component.ts` gets migrated to:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { NgForOf } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    standalone: true,\r\n    imports: [NgForOf]\r\n})\r\nexport class AppComponent {\r\n  title = 'standalone-migration';\r\n}\r\n```\r\n\r\n\n\n### Proposed solution\n\nThe recently introduced alias `NgFor` should be used instead of `NgForOf`\n\n### Alternatives considered\n\nIt can be replaced manually","Url":"https://github.com/angular/angular/issues/49006","RelatedDescription":"Open issue \"`ng g @angular/core:standalone` should prefer `NgFor` instead of `NgForOf`\" (#49006)"},{"Id":"1576839695","IsPullRequest":false,"CreatedAt":"2023-02-08T21:43:55","Actor":"cexbrayat","Number":"49005","RawContent":null,"Title":"`ng g @angular/core:standalone` should migrate test components properly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\n```\r\nng new standalone-migration --defaults\r\ncd standalone-migration\r\nng update @angular/core@next @angular/cli@next --force\r\nng g c hello\r\n```\r\n\r\nUpdate the test of `HelloComponent` with:\r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { HelloComponent } from './hello.component';\r\n\r\n@Component({\r\n  template: '<app-hello></app-hello>'\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('HelloComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    declarations: [TestComponent, HelloComponent]\r\n  }));\r\n\r\n  it('should display hello', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('p').textContent).toContain('hello works!');\r\n  });\r\n});\r\n```\r\n\r\nand run the migration with `ng g @angular/core:standalone --defaults`.\r\n\r\nIt gets migrated to:\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { HelloComponent } from './hello.component';\r\n\r\n@Component({\r\n    template: '<app-hello></app-hello>',\r\n    standalone: true\r\n})\r\nclass TestComponent { }\r\n\r\ndescribe('HelloComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    imports: [TestComponent, HelloComponent]\r\n}));\r\n\r\n  it('should display hello', () => {\r\n    const fixture = TestBed.createComponent(TestComponent);\r\n    expect(fixture.nativeElement.querySelector('p').textContent).toContain('hello works!');\r\n  });\r\n});\r\n```\r\n\r\nNote that `TestComponent` is now standalone, but it does not import `HelloComponent`.\r\n\r\n`ng test` hence throws:\r\n```\r\nChrome 110.0.0.0 (Mac OS 10.15.7) HelloComponent should display hello FAILED\r\n\tError: NG0304: 'app-hello' is not a known element (used in the 'TestComponent' component template):\r\n```\r\n\r\nThis can be fixed by adding `imports: [HelloComponent]` to `TestComponent`\r\n\r\nAlso note that in an ideal scenario `configureTestingModule` could be simplified to:\r\n\r\n```ts\r\n  beforeEach(() => TestBed.configureTestingModule({\r\n    imports: [TestComponent] // no need for HelloComponent\r\n  }));\r\n``` \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.0-next.3\r\nNode: 16.17.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.0-next.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.0-next.3\r\n@angular-devkit/build-angular   15.2.0-next.3\r\n@angular-devkit/core            15.2.0-next.3\r\n@angular-devkit/schematics      15.2.0-next.3\r\n@angular/cli                    15.2.0-next.3\r\n@schematics/angular             15.2.0-next.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49005","RelatedDescription":"Open issue \"`ng g @angular/core:standalone` should migrate test components properly\" (#49005)"},{"Id":"1576601567","IsPullRequest":true,"CreatedAt":"2023-02-08T18:26:46","Actor":"pkozlowski-opensource","Number":"49004","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49004","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#49004)"},{"Id":"1576592083","IsPullRequest":true,"CreatedAt":"2023-02-08T18:20:03","Actor":"pkozlowski-opensource","Number":"49003","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/49003","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#49003)"},{"Id":"1576587213","IsPullRequest":true,"CreatedAt":"2023-02-08T18:15:54","Actor":"pkozlowski-opensource","Number":"49002","RawContent":null,"Title":"Bump version to \"v15.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49002","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.4\" with changelog.\" (#49002)"},{"Id":"1576482521","IsPullRequest":true,"CreatedAt":"2023-02-08T16:59:42","Actor":"AleksanderBodurri","Number":"49001","RawContent":null,"Title":"refactor(devtools): consolidate devtools global styles into 1 file","State":"open","Body":"Previously the DevTools demo app and browser app had duplicated styles in their respective styles.scss files.\r\n\r\nThis commit creates a global styles.scss that is imported with sass @use into the demo and browser app styles.scss files. This will prevent any issues where css changes to one are missed in the other. Also reduces duplication of material css theme definitions by consolidating it in one place. The respective styles.scss files for the demo app and browser app continue to exist incase those need environment specific css. For example the browser app requires that height: 100% is set on a document in order to render properly in a browser's devtools tab.\r\n\r\n","Url":"https://github.com/angular/angular/pull/49001","RelatedDescription":"Open PR \"refactor(devtools): consolidate devtools global styles into 1 file\" (#49001)"},{"Id":"1576416106","IsPullRequest":true,"CreatedAt":"2023-02-08T16:15:52","Actor":"devversion","Number":"49000","RawContent":null,"Title":"build: update dependency terser to 5.16.3 [security] ","State":"open","Body":"See individual commits.\r\n\r\nFixed up version of: #48990 \r\n\r\nFor concrete examples of the Terser diff/investigation:\r\n\r\n**Before**:\r\n\r\n<img width=\"651\" alt=\"Screenshot 2023-02-08 at 16 49 06\" src=\"https://user-images.githubusercontent.com/4987015/217587201-1e92cc86-a023-4f86-959d-d4cc9bfa1cf4.png\">\r\n\r\n<img width=\"775\" alt=\"Screenshot 2023-02-08 at 16 49 15\" src=\"https://user-images.githubusercontent.com/4987015/217587240-c41f691c-e941-41d6-841e-ce592fb12664.png\">\r\n\r\n**After**\r\n\r\n<img width=\"782\" alt=\"Screenshot 2023-02-08 at 16 49 20\" src=\"https://user-images.githubusercontent.com/4987015/217587279-b6381296-f621-41af-9175-8d5b42050083.png\">\r\n\r\n<img width=\"779\" alt=\"Screenshot 2023-02-08 at 16 49 26\" src=\"https://user-images.githubusercontent.com/4987015/217587305-1bb1755c-4e34-409c-bb69-1a47d52733fa.png\">\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/49000","RelatedDescription":"Open PR \"build: update dependency terser to 5.16.3 [security] \" (#49000)"},{"Id":"1576370273","IsPullRequest":true,"CreatedAt":"2023-02-08T15:50:44","Actor":"josephperrott","Number":"48999","RawContent":null,"Title":"Contributors update","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular/pull/48999","RelatedDescription":"Open PR \"Contributors update\" (#48999)"},{"Id":"1576129887","IsPullRequest":false,"CreatedAt":"2023-02-08T14:39:33","Actor":"priyamtheone","Number":"48995","RawContent":null,"Title":"Problem installing @angular-redux/store in Angular application.","State":"closed","Body":"### Describe the problem that you experienced\n\nI'm new into Angular development and learning how to use Redux. While trying to install Redux using `npm install redux @angular-redux/store --save`, the terminal throws up a bunch of error messages mentioned hereunder.\r\n\r\nI tried installing **redux** and **@angular-redux/store** separately. That way, while **redux** is getting installed successfully, **@angular-redux/store** still throws up the same error. I tried checking for solutions, but in most forums, `npm install redux @angular-redux/store --save` is the recommended command to install them. Even [npm](https://www.npmjs.com/package/@angular-redux/store) and the official sites say so.\r\n\r\nEven after force install, I can't use `import { NgReduxModule, NgRedux } from '@angular-redux/store';` in `app.module.ts`, neither can I access `NgReduxModule` and `NgRedux` in the `imports` array of `app.module.ts`.\r\n\r\nI've also mentioned my development environment trivia below.\r\n\r\nSo what's wrong with my system? How do I get rid of the errors and can install Redux successfully? Please help as I'm new into it and finding it difficult to figure it out.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nnpm ERR! code ERESOLVE\r\nnpm ERR! ERESOLVE unable to resolve dependency tree\r\nnpm ERR! \r\nnpm ERR! While resolving: myapp@0.0.0\r\nnpm ERR! Found: @angular/core@14.2.12\r\nnpm ERR! node_modules/@angular/core\r\nnpm ERR!   @angular/core@\"^14.2.0\" from the root project\r\nnpm ERR! \r\nnpm ERR! Could not resolve dependency:\r\nnpm ERR! peer @angular/core@\"^7.0.0\" from @angular-redux/store@10.0.0\r\nnpm ERR! node_modules/@angular-redux/store\r\nnpm ERR!   @angular-redux/store@\"*\" from the root project\r\nnpm ERR! \r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR! \r\nnpm ERR! See C:\\Users\\Admin\\AppData\\Local\\npm-cache\\eresolve-report.txt for a full report.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Admin\\AppData\\Local\\npm-cache\\_logs\\2023-02-08T07_15_27_253Z-debug-0.log\r\n```\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nMy development environment trivia:\r\n\r\n1) Node: 18.12.1\r\n2) Package Manager: npm 8.5.5\r\n3) Angular CLI: 14.2.10\r\n4) Angular: 14.2.12\r\n5) OS: Windows 10 win32 x64\n```\n","Url":"https://github.com/angular/angular/issues/48995","RelatedDescription":"Closed issue \"Problem installing @angular-redux/store in Angular application.\" (#48995)"},{"Id":"1576163645","IsPullRequest":false,"CreatedAt":"2023-02-08T14:31:01","Actor":"GiovaneRobertiTafine","Number":"48997","RawContent":null,"Title":"Error when injecting with token in a library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a library that exports a pipe:\r\n\r\n```typescript\r\n@Pipe({\r\n    name: 'fromToDisplay'\r\n})\r\nexport class FromToDisplayPipe implements PipeTransform {\r\n    public list: { [index: string]: any; } | any;\r\n```\r\n\r\nand in the lib module:\r\n\r\n```typescript\r\n    exports: [\r\n        SdkLibComponent,\r\n        FromToDisplayPipe\r\n    ],\r\n    providers: [],\r\n})\r\nexport class SdkLibModule {\r\n\r\n    static forRoot(\r\n        config?: SdkjConfig\r\n    ): ModuleWithProviders<SdkLibModule> {\r\n        return {\r\n            ngModule: SdkLibModule,\r\n            providers: [{ provide: SDK_CONFIG, useValue: config }],\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nThrough the module I provide an injectable token, with a value received when using the lib:\r\n\r\n```typescript\r\nimport { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface SdkjConfig {\r\n    fromToDisplay?: { [index: string]: any; };\r\n}\r\n\r\nexport const SDK_CONFIG = new InjectionToken<SdkjConfig>(\r\n    \"SDK_CONFIG\"\r\n);\r\n```\r\n\r\nusing the lib:\r\n\r\n```typescript\r\nSdkLibModule.forRoot({\r\n            fromToDisplay: {\r\n                'display-test': {\r\n                    'teste1': 'TESTE 1',\r\n                    0: 'TESTE 0'\r\n                }\r\n            }\r\n        }),\r\n        \r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\n```\r\n\r\nBut when trying to provide the token in the pipe I get an error:\r\n\r\n```typescript\r\nexport class FromToDisplayPipe implements PipeTransform {\r\n    public list: { [index: string]: any; } | any;\r\n\r\n    constructor(\r\n        @Inject(\"SDK_CONFIG\") private SdkService: SdkjConfig\r\n    ) {\r\n    }\r\nmain.ts:7 Error: NG0203: inject() must be called from an injection context such as a \r\n\\n constructor, a factory function, a field initializer, or a function used with \r\n\\n `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\r\n```\r\n\r\nconfig:\r\n\r\n\"@angular/common\": \"^15.1.0\",\r\n\"@angular/core\": \"^15.1.0\",\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nmain.ts:7 Error: NG0203: inject() must be called from an injection context such as a \r\n\\n constructor, a factory function, a field initializer, or a function used with \r\n\\n `EnvironmentInjector#runInContext`. Find more at https://angular.io/errors/NG0203\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: ~15.1.3\r\nNode: 18.13.0\r\nPackage Manager: npm 8.19.3\r\nOS: Windows x64\r\n\r\nAngular: 15\r\n\r\nPackage\t\t\t\tVersion\r\n---------------------------------------\r\n@angular-devkit/build-angular\t15.1.4\r\n@angular-devkit/core\t\t^15.1.0\r\nrxjs\t\t\t\t~7.8.0\r\ntypescript\t\t\t~4.9.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48997","RelatedDescription":"Closed issue \"Error when injecting with token in a library\" (#48997)"},{"Id":"1575843951","IsPullRequest":true,"CreatedAt":"2023-02-08T14:20:05","Actor":"crisbeto","Number":"48993","RawContent":null,"Title":"fix(migrations): avoid generating imports with forward slashes","State":"closed","Body":"We're using Node's `path` utilities to remap existing imports and create new ones which can yield paths with forward slash separators.\r\n\r\nThese changes add some logic to ensure that we only generate forward slashes.","Url":"https://github.com/angular/angular/pull/48993","RelatedDescription":"Closed or merged PR \"fix(migrations): avoid generating imports with forward slashes\" (#48993)"},{"Id":"1574097851","IsPullRequest":true,"CreatedAt":"2023-02-08T14:18:23","Actor":"crisbeto","Number":"48987","RawContent":null,"Title":"Various standalone migrations improvements","State":"closed","Body":"Includes the following improvements to the standalone migration. There is more info in each of the commits:\r\n1. Only excludes bootstrapped declarations from the first step of the migration, rather than all of them.\r\n2. Migrates tests when switching the root module to standalone.\r\n3. Doesn't copy over `ModuleWithProviders` when migrating tests.\r\n4. Preserves the project's tsconfig when constructing the migration program.\r\n5. Reduces the number of files that the migration has to load in order to speed it up.\r\n6. Corrects any standalone declarations that might still be left in the `declarations` array from a previous migration. This is primarily targeted towards tests.\r\n\r\nFixes #48944.\r\nFixes #48971.","Url":"https://github.com/angular/angular/pull/48987","RelatedDescription":"Closed or merged PR \"Various standalone migrations improvements\" (#48987)"},{"Id":"1576131968","IsPullRequest":true,"CreatedAt":"2023-02-08T13:31:35","Actor":"devversion","Number":"48996","RawContent":null,"Title":"build: update cross-repo angular dependencies ","State":"open","Body":"Updates cross deps.","Url":"https://github.com/angular/angular/pull/48996","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies \" (#48996)"},{"Id":"1576005967","IsPullRequest":false,"CreatedAt":"2023-02-08T12:13:06","Actor":"DilipV2503","Number":"48994","RawContent":null,"Title":"Compile time error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\n**Hii,\r\nI am getting this error while I connect a web-sdk into our angular project**\r\n\r\n![InkedError](https://user-images.githubusercontent.com/83951998/217497916-95de5f1a-c066-4e16-9631-baf499f565f0.jpg)\r\n\r\nPlease help me out to fix this error.\r\n\r\nThank you.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 10.0.8\r\nNode: 16.15.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.6\r\n... animations, common, compiler, core, forms, language-service\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1000.8\r\n@angular-devkit/build-angular      0.1000.8\r\n@angular-devkit/build-optimizer    0.1000.8\r\n@angular-devkit/build-webpack      0.1000.8\r\n@angular-devkit/core               10.0.8\r\n@angular-devkit/schematics         10.0.8\r\n@angular/cdk                       10.2.7\r\n@angular/cli                       10.0.8\r\n@angular/compiler-cli              10.2.5\r\n@angular/material                  10.2.7\r\n@angular/material-moment-adapter   11.2.13\r\n@ngtools/webpack                   10.0.8\r\n@schematics/angular                10.0.8\r\n@schematics/update                 0.1000.8\r\nrxjs                               6.6.7\r\ntypescript                         3.9.5\r\nwebpack                            4.43.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48994","RelatedDescription":"Closed issue \"Compile time error\" (#48994)"},{"Id":"1574880425","IsPullRequest":true,"CreatedAt":"2023-02-07T19:07:09","Actor":"angular-robot","Number":"48990","RawContent":null,"Title":"build: update dependency terser to v5.14.2 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.14.1` -> `5.14.2`](https://renovatebot.com/diffs/npm/terser/5.14.1/5.14.2) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2022-25858](https://nvd.nist.gov/vuln/detail/CVE-2022-25858)\n\nThe package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.14.2`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5142)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.14.1...v5.14.2)\n\n-   Security fix for RegExps that should not be evaluated (regexp DDOS)\n-   Source maps improvements ([#&#8203;1211](https://togithub.com/terser/terser/issues/1211))\n-   Performance improvements in long property access evaluation ([#&#8203;1213](https://togithub.com/terser/terser/issues/1213))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/48990","RelatedDescription":"Open PR \"build: update dependency terser to v5.14.2 [security]\" (#48990)"},{"Id":"1574880185","IsPullRequest":true,"CreatedAt":"2023-02-07T19:06:57","Actor":"angular-robot","Number":"48989","RawContent":null,"Title":"build: update dependency json5 to v2.2.2 [security]","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [json5](http://json5.org/) ([source](https://togithub.com/json5/json5)) | devDependencies | patch | [`2.2.1` -> `2.2.2`](https://renovatebot.com/diffs/npm/json5/2.2.1/2.2.2) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2022-46175](https://togithub.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h)\n\nThe `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```\n\n---\n\n### Release Notes\n\n<details>\n<summary>json5/json5</summary>\n\n### [`v2.2.2`](https://togithub.com/json5/json5/blob/HEAD/CHANGELOG.md#v222-code-c222--diff-d222)\n\n[Compare Source](https://togithub.com/json5/json5/compare/v2.2.1...v2.2.2)\n\n[c2.2.2]: https://togithub.com/json5/json5/tree/v2.2.2\n\n[d2.2.2]: https://togithub.com/json5/json5/compare/v2.2.1...v2.2.2\n\n-   Fix: Properties with the name `__proto__` are added to objects and arrays.\n    (\\[[#&#8203;199](https://togithub.com/json5/json5/issues/199)]) This also fixes a prototype pollution vulnerability reported by\n    Jonathan Gregson! (\\[[#&#8203;295](https://togithub.com/json5/json5/issues/295)]).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/48989","RelatedDescription":"Open PR \"build: update dependency json5 to v2.2.2 [security]\" (#48989)"},{"Id":"1574239540","IsPullRequest":true,"CreatedAt":"2023-02-07T17:01:13","Actor":"crisbeto","Number":"48988","RawContent":null,"Title":"fix(compiler-cli): incorrectly detecting forward refs when symbol already exists in file","State":"closed","Body":"In #48898 the `isForwardRef` flag was added to indicate whether a reference should be wrapped in a `forwardRef`. This logic assumed that the node can't be referring to another node within the same file, however from testing it looks like that's not actually the case, because we hit the same code path when an external import to the same symbol exists already.","Url":"https://github.com/angular/angular/pull/48988","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): incorrectly detecting forward refs when symbol already exists in file\" (#48988)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1578313179","IsPullRequest":true,"CreatedAt":"2023-02-09T17:34:10","Actor":"clydin","Number":"24692","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use babel default export helper in build optimizer","State":"open","Body":"Within the build optimizer's static member optimization pass, a class that is directly default exported must be split into two statements: the class declaration and the default export. This is because the pass can wrap classes in a pure annotated IIFE which results in a variable declaration replacement and variable declarations can not be directly default exported. Previously, the pass did this splitting manually but this was causing later babel plugins to fail. In addition to updating the AST in this case, scoping information also needed to be updated. To support this, a babel helper package is now used that handles the details of the statement split operation.\r\n\r\nFixes #24688","Url":"https://github.com/angular/angular-cli/pull/24692","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): use babel default export helper in build optimizer\" (#24692)"},{"Id":"1577704337","IsPullRequest":true,"CreatedAt":"2023-02-09T17:00:11","Actor":"angular-robot","Number":"24689","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [bazel_skylib](https://togithub.com/bazelbuild/bazel-skylib) | http_archive | patch | `1.4.0` -> `1.4.1` |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`15.1.1` -> `15.1.2`](https://renovatebot.com/diffs/npm/ng-packagr/15.1.1/15.1.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazel-skylib</summary>\n\n### [`v1.4.1`](https://togithub.com/bazelbuild/bazel-skylib/releases/tag/1.4.1)\n\n[Compare Source](https://togithub.com/bazelbuild/bazel-skylib/compare/1.4.0...1.4.1)\n\nRelease 1.4.1\n\nBugfix release: fixes gazelle plugin failure with `--incompatible_disallow_empty_glob` ([#&#8203;431](https://togithub.com/bazelbuild/bazel-skylib/issues/431)) and (for released versions) with `--incompatible_disable_starlark_host_transitions` ([#&#8203;433](https://togithub.com/bazelbuild/bazel-skylib/issues/433)).\n\n**Contributors**\nAlexandre Rostovtsev, Chuck Grindel\n\n**WORKSPACE setup**\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"b8a1527901774180afc798aeb28c4634bdccf19c4d98e7bdd1ce79d1fe9aaad7\"\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz\",\n    ],\n)\n\nload(\"@&#8203;bazel_skylib//:workspace.bzl\", \"bazel_skylib_workspace\")\n\nbazel_skylib_workspace()\n```\n\n***Additional WORKSPACE setup for the Gazelle plugin***\n\n```starlark\nhttp_archive(\n    name = \"bazel_skylib_gazelle_plugin\",\n    sha256 = \"0a466b61f331585f06ecdbbf2480b9edf70e067a53f261e0596acd573a7d2dc3\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-gazelle-plugin-1.4.1.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-gazelle-plugin-1.4.1.tar.gz\",\n    ],\n)\n\nload(\"@&#8203;bazel_skylib_gazelle_plugin//:workspace.bzl\", \"bazel_skylib_gazelle_plugin_workspace\")\n\nbazel_skylib_gazelle_plugin_workspace()\n\nload(\"@&#8203;bazel_skylib_gazelle_plugin//:setup.bzl\", \"bazel_skylib_gazelle_plugin_setup\")\n\nbazel_skylib_gazelle_plugin_setup()\n```\n\n**Using the rules**\n\nSee [the source](https://togithub.com/bazelbuild/bazel-skylib/tree/$VERSION).\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr</summary>\n\n### [`v15.1.2`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#&#8203;1512-httpsgithubcomng-packagrng-packagrcompare15111512-2023-02-09)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/15.1.1...15.1.2)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24689","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24689)"},{"Id":"1577308667","IsPullRequest":true,"CreatedAt":"2023-02-09T16:59:58","Actor":"angular-robot","Number":"24682","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.2` -> `v2.2.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.3`](https://togithub.com/github/codeql-action/compare/v2.2.2...v2.2.3)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.2...v2.2.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24682","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.3\" (#24682)"},{"Id":"1575548725","IsPullRequest":true,"CreatedAt":"2023-02-09T16:59:40","Actor":"angular-robot","Number":"24672","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `5ff25fd` -> `b919d8e` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `ffd5dec` -> `f7d26a0` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `691f7df` -> `70c532c` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.3/15.1.4) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `2e7b49f` -> `6900a57` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `225c886` -> `a84f3b7` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.3/15.1.4) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `2c2a736` -> `cc9fd43` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.3/15.1.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `e0d805d` -> `1d70e3f` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `90a69d8` -> `12daf06` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `e21472e` -> `8c0fb39` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `cf718f3` -> `ac762c4` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `91f3ec2` -> `66d3823` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.3` -> `15.1.4`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.3/15.1.4) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `83eb507` -> `a1456c8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f4601b6` -> `8aa6041` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `879ef52` -> `b02757c` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `b60ba49` -> `6709be7` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `cfe6cfe` -> `703d48c` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `b2ebd6f` -> `fa06548` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.2.0-next.3/15.2.0-next.4) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `82f6062` -> `2657adf` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.3` -> `15.2.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.2.0-next.3/15.2.0-next.4) |\n| angular/dev-infra | action | digest | `fb077c1` -> `07b0f64` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.2.0-next.4`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1520-next4-2023-02-08)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.2.0-next.3...15.2.0-next.4)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [54b24eb40f](https://togithub.com/angular/angular/commit/54b24eb40fed13c926305ad475202a5608d41c6b) | feat | Add loaderParams attribute to NgOptimizedImage ([#&#8203;48907](https://togithub.com/angular/angular/pull/48907)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0cf11167f1](https://togithub.com/angular/angular/commit/0cf11167f13108992ec781e88ab2a7d1fc7f5a0d) | fix | incorrectly detecting forward refs when symbol already exists in file ([#&#8203;48988](https://togithub.com/angular/angular/pull/48988)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d0145033bd](https://togithub.com/angular/angular/commit/d0145033bd11eccd16fa8b61ba9170037d0c62b3) | fix | generate forwardRef for same file imports ([#&#8203;48898](https://togithub.com/angular/angular/pull/48898)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bdbf21d04b](https://togithub.com/angular/angular/commit/bdbf21d04ba74a6f73469242076d6ce697c57edf) | fix | avoid generating imports with forward slashes ([#&#8203;48993](https://togithub.com/angular/angular/pull/48993)) |\n| [32cf4e5cb9](https://togithub.com/angular/angular/commit/32cf4e5cb989f365296d519dddf72fb38ca47c40) | fix | avoid internal modules when generating imports ([#&#8203;48958](https://togithub.com/angular/angular/pull/48958)) |\n| [1afa6ed322](https://togithub.com/angular/angular/commit/1afa6ed3227e784e3fe2b4b31443961589cb6332) | fix | don't add ModuleWithProviders to standalone test components ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [759db12e0b](https://togithub.com/angular/angular/commit/759db12e0b618fcb51f4cb141adeb49bfa495a60) | fix | duplicated comments on migrated classes ([#&#8203;48966](https://togithub.com/angular/angular/pull/48966)) |\n| [ba38178d19](https://togithub.com/angular/angular/commit/ba38178d1918d413f9c2260c40eb6542eadfddba) | fix | generate forwardRef for same file imports ([#&#8203;48898](https://togithub.com/angular/angular/pull/48898)) |\n| [2de6dae16d](https://togithub.com/angular/angular/commit/2de6dae16d4b0b83f0517a3033cda44ba44154ed) | fix | migrate RouterModule.forRoot with a config object to use features ([#&#8203;48935](https://togithub.com/angular/angular/pull/48935)) |\n| [770191cf1f](https://togithub.com/angular/angular/commit/770191cf1f1254546625dfa7a882b716c3f0aab3) | fix | migrate tests when switching to standalone bootstrap API ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [c7926b5773](https://togithub.com/angular/angular/commit/c7926b57730c23f765a00d3dd9f92079c95e87e0) | fix | move standalone migrations into imports ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [6377487b1a](https://togithub.com/angular/angular/commit/6377487b1ab7679cef9a44f88440fe5e8eb97480) | fix | only exclude bootstrapped declarations from initial standalone migration ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [e9e4449a43](https://togithub.com/angular/angular/commit/e9e4449a43430e026e61b0f05ebd32dd830fa916) | fix | preserve tsconfig in standalone migration ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [ffad1b49d9](https://togithub.com/angular/angular/commit/ffad1b49d95ab90637e7184f92cb5136d490d865) | fix | reduce number of files that need to be checked ([#&#8203;48987](https://togithub.com/angular/angular/pull/48987)) |\n| [49a7c9f94a](https://togithub.com/angular/angular/commit/49a7c9f94ae8f89907da8b3620242e62f87ec5a4) | fix | standalone migration incorrectly throwing path error for multi app projects ([#&#8203;48958](https://togithub.com/angular/angular/pull/48958)) |\n\n#### Special Thanks\n\nAlex Castle, Andrew Scott, Dylan Hunn, Jessica Janiuk, Kian Yang Lee, Kristiyan Kostadinov, Matthieu Riegler, Pawel Kozlowski, Redouane Bekkouche, Simona Cotin and Walid Bouguima\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.4`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1514-felt-fern-2023-02-08)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.3...15.1.4)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0526ada2ce](https://togithub.com/angular/components/commit/0526ada2ce5934488d75289ebd1558f9db226caf) | fix | **chips:** unable to add space when editing chip ([#&#8203;26564](https://togithub.com/angular/components/pull/26564)) |\n\n#### Special Thanks\n\nHubert Frei, Kristiyan Kostadinov and Wagner Maciel\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24672","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24672)"},{"Id":"1578256203","IsPullRequest":false,"CreatedAt":"2023-02-09T16:57:09","Actor":"Blackbaud-SteveBrush","Number":"24691","RawContent":null,"Title":"SCSS @import/@use not resolving root-relative paths","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.11\n\n### Description\n\nIn Angular 14.2.11 I could `@use` another project's SCSS file using the following format:\r\n```\r\n@use 'projects/theme/src/lib/variables' as *;\r\n```\r\nAfter updating to v.15.1.1, I'm seeing the following error:\r\n```\r\n✖ Compiling with Angular sources in Ivy partial compilation mode.\r\nCan't find stylesheet to import.\r\n  ╷\r\n2 │ @use 'projects/theme/src/lib/variables' as *;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  projects/foobar/src/lib/foobar.component.scss 2:1  root stylesheet\r\n```\n\n### Minimal Reproduction\n\n```\r\nng new my-app\r\nng g library foobar\r\nng g library theme\r\n```\r\nCreate a SCSS file in the \"theme\" project and attempt to `@use` it in the \"foobar\" project.\n\n### Exception or Error\n\n```text\n✖ Compiling with Angular sources in Ivy partial compilation mode.\r\nCan't find stylesheet to import.\r\n  ╷\r\n2 │ @use 'projects/theme/src/lib/variables' as *;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  projects/foobar/src/lib/foobar.component.scss 2:1  root stylesheet\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.5\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nng-packagr                      15.1.2\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24691","RelatedDescription":"Open issue \"SCSS @import/@use not resolving root-relative paths\" (#24691)"},{"Id":"1578124102","IsPullRequest":true,"CreatedAt":"2023-02-09T16:24:21","Actor":"alan-agius4","Number":"24690","RawContent":null,"Title":"ci: replace default shell with bash in Windows","State":"closed","Body":"Most of the steps require bash so we should use bash instead of powershell.\r\n","Url":"https://github.com/angular/angular-cli/pull/24690","RelatedDescription":"Closed or merged PR \"ci: replace default shell with bash in Windows\" (#24690)"},{"Id":"1577582274","IsPullRequest":false,"CreatedAt":"2023-02-09T09:59:39","Actor":"szape89","Number":"24688","RawContent":null,"Title":"Build failure for default exported modules","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.1.4\n\n### Description\n\nI'm using the [router unwrap feature](https://blog.angular.io/angular-v15-is-now-available-df7be7f2f4c8#:~:text=Router%20unwraps%20default%20imports) of Angular 15 when loading lazy loaded modules in the router module.\r\nIn version 15.1.4 it worked, but since version 15.1.5 the build fails for the lazy loaded modules.\n\n### Minimal Reproduction\n\nThis worked before:\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lazy-loaded',\r\n    loadChildren: () => import('./lazy-loaded/lazy-loaded.module')\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n```\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({})\r\nexport default class LazyLoadedModule {}\r\n```\r\n\r\nBut now it breaks, unless I change it back to the \"old\" way:\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lazy-loaded',\r\n    loadChildren: () => import('./lazy-loaded/lazy-loaded.module').then(m => m.LazyLoadedModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n```\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({})\r\nexport class LazyLoadedModule {}\r\n```\n\n### Exception or Error\n\n```text\n./src/app/lazy-loaded/lazy-loaded.module.ts - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js):\r\nError: /ng-app/src/app/lazy-loaded/lazy-loaded.module.ts: We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.5\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: win32 x64\r\n\r\nAngular: 15.1.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24688","RelatedDescription":"Open issue \"Build failure for default exported modules\" (#24688)"},{"Id":"1577527205","IsPullRequest":false,"CreatedAt":"2023-02-09T09:38:14","Actor":"yangjunfocus","Number":"24686","RawContent":null,"Title":"Transform failed with 1 error: ERROR: Unterminated string token","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, compiler-cli, core, zone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\n`ng build`\r\n\r\n`\r\n./src/polyfills.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Transform failed with 1 error:\r\nC:/NodeWeb/UTSOURCE.V3.Node/OverSeas/src/app/login/login.component.scss:17:100: ERROR: Unterminated string token\r\n    at C:\\NodeWeb\\UTSOURCE.V3.Node\\OverSeas\\node_modules\\@ngtools\\webpack\\src\\ivy\\loader.js:81:18\r\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\n\r\n./src/styles.scss.webpack[javascript/auto]!=!./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].rules[0].oneOf[0].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[5].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[5].rules[1].use[1]!./src/styles.scss - Error: Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\r\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.10\r\nNode: 14.17.5\r\nPackage Manager: npm 8.5.0\r\nOS: win32 x64\r\n\r\nAngular: 13.3.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.10\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.3.10\r\n@angular-devkit/schematics      13.3.10\r\n@angular/cli                    13.3.10\r\n@schematics/angular             13.3.10\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24686","RelatedDescription":"Closed issue \"Transform failed with 1 error: ERROR: Unterminated string token\" (#24686)"},{"Id":"1577551032","IsPullRequest":true,"CreatedAt":"2023-02-09T09:37:36","Actor":"alan-agius4","Number":"24687","RawContent":null,"Title":"fix(@angular/cli): convert `before` option in `.npmrc` to Date","State":"open","Body":"Previously, the `before` option in the npmrc was not converted properly to a date.\r\n\r\nSee: https://docs.npmjs.com/cli/v8/using-npm/config#before\r\n\r\nCloses #24685\r\n","Url":"https://github.com/angular/angular-cli/pull/24687","RelatedDescription":"Open PR \"fix(@angular/cli): convert `before` option in `.npmrc` to Date\" (#24687)"},{"Id":"1577483036","IsPullRequest":false,"CreatedAt":"2023-02-09T08:50:48","Actor":"cherezovvv","Number":"24685","RawContent":null,"Title":"`ng add` gives errors with a `before` parameter in the `.npmrc` file","State":"open","Body":"### Command\n\nadd\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFor `before` parameter in npm config, value is of type `string`, for example `before = 2023-02-09T08:45:22.778Z`.\r\n`packument` function of `pacote` package, expects `before` as js Date type.\r\nIt seems to me that it is necessary to add a date type conversion in the `normalizeOptions` function in `packages/angular/cli/src/utilities/package-metadata.ts`\n\n### Minimal Reproduction\n\n1. Add `before` parameter to npm config (`.npmrc` file) - `before = 2023-02-09T08:45:22.778Z`\r\n2. Run script `ng add @angular/material`\n\n### Exception or Error\n\n```text\n`Unable to load package information from registry: this.before.toISOString is not a function`\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 13.2.5\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1\r\nOS: linux x64\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.5\r\n@angular-devkit/build-angular   13.2.5\r\n@angular-devkit/core            13.2.5\r\n@angular-devkit/schematics      13.2.5\r\n@angular/cli                    13.2.5\r\n@schematics/angular             13.2.5\r\nrxjs                            7.5.4\r\ntypescript                      4.5.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24685","RelatedDescription":"Open issue \"`ng add` gives errors with a `before` parameter in the `.npmrc` file\" (#24685)"},{"Id":"1575669230","IsPullRequest":false,"CreatedAt":"2023-02-09T08:37:31","Actor":"Vermilion755","Number":"24674","RawContent":null,"Title":"Update vulnerable packages in devkit","State":"closed","Body":"\r\n\r\n\r\n### Description [Feature Request only]\r\n\r\nWe are using Checkmarx to scan our code and it's coming up with high vulnerability alerts for several packages in the @angular-devkit/build-angular@15.1.1 package. For example (vulnerable packages in bold):\r\n  -@angular-devkit/build-angular@15.1.1 -> karma@6.3.2.0 -> body-parser@1.20.1 -> **debug@2.6.9**\r\n  -@angular-devkit/build-angular@15.1.1 -> less@4.1.3 -> needle@3.2.0 -> **debug@3.2.7**\r\n  -@angular-devkit/build-angular@15.1.1 -> protractor@7.0.0 -> browserstack@1.6.0 -> https-proxy-agent@2.2.4 -> **debug@3.2.6**\r\n  -@angular-devkit/build-angular@15.1.1 -> glob@8.0.3 -> **inflight@1.0.6**\r\n  -@angular-devkit/build-angular@15.1.1 -> protractor@7.0.0 -> webdriver-manager@12.1.7 -> request@2.88.0 -> **qs@6.5.2**\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\nI would expect that with each major release, since you're making it a major release after all, you'd update all the packages to ones without security risks.\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\nTo be honest, we're not sure these are really vulnerabilities to be concerned about since they are in the devkit? It's hard to tell if the scan is just detecting packages that would be running on my local box and never published out to production? If that is the case, it'd be nice to know decisively. ","Url":"https://github.com/angular/angular-cli/issues/24674","RelatedDescription":"Closed issue \"Update vulnerable packages in devkit\" (#24674)"},{"Id":"1577441323","IsPullRequest":true,"CreatedAt":"2023-02-09T08:17:38","Actor":"alan-agius4","Number":"24684","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly copy `safety-worker.js` contents","State":"open","Body":"\r\nPreviously, `safety-worker.js` and `worker-basic.min.js` contained incorrect data due to an incorrect path.\r\n\r\nCloses #24678\r\n","Url":"https://github.com/angular/angular-cli/pull/24684","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): correctly copy `safety-worker.js` contents\" (#24684)"},{"Id":"1577420932","IsPullRequest":false,"CreatedAt":"2023-02-09T08:09:14","Actor":"egonknapen","Number":"24683","RawContent":null,"Title":"ng update (all new package to latest version)","State":"closed","Body":"### Command\n\nupdate\n\n### Description\n\nEvery week I check the packages, and need to ng update every package. \r\n\r\nMeaning, that it first will install a temporary new angular cli, than install the new angular cli and the rest.\r\n\r\nCan't we just have a \r\n\r\nng update all\r\n\r\nWhich just updates everything, to the latest version ?\n\n### Describe the solution you'd like\n\n> ng update all\r\n\r\nor something similar. I'm updating the cli and the core, I wouldn't care about updating the cli alone, without the core. Angular has progressed so far, there is no real use to only update the cli. And I'm using cdk too, so if I update one (the core), I will always update the other (cdk), if available.\r\n\r\nIf only the cli is updated, than a ng update all would only update the @angular/cli package ofcourse.\r\n\r\nJust to make life a little simpler...\n\n### Describe alternatives you've considered\n\nEvery week I type:\r\n\r\n> ng update @angular/cli @angular/core @angular/cdk","Url":"https://github.com/angular/angular-cli/issues/24683","RelatedDescription":"Closed issue \"ng update (all new package to latest version)\" (#24683)"},{"Id":"1576874306","IsPullRequest":true,"CreatedAt":"2023-02-08T22:59:33","Actor":"dgp1130","Number":"24681","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24681","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#24681)"},{"Id":"1576761165","IsPullRequest":true,"CreatedAt":"2023-02-08T22:08:58","Actor":"dgp1130","Number":"24680","RawContent":null,"Title":"docs: release notes for the v15.1.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24680","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.5 release\" (#24680)"},{"Id":"1576667868","IsPullRequest":true,"CreatedAt":"2023-02-08T20:29:37","Actor":"dgp1130","Number":"24679","RawContent":null,"Title":"Bump version to \"v15.1.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24679","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.5\" with changelog.\" (#24679)"},{"Id":"1575548799","IsPullRequest":true,"CreatedAt":"2023-02-08T19:11:08","Actor":"angular-robot","Number":"24673","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [open](https://togithub.com/sindresorhus/open) | dependencies | patch | [`8.4.0` -> `8.4.1`](https://renovatebot.com/diffs/npm/open/8.4.0/8.4.1) |\n| [open](https://togithub.com/sindresorhus/open) | devDependencies | patch | [`8.4.0` -> `8.4.1`](https://renovatebot.com/diffs/npm/open/8.4.0/8.4.1) |\n| [rules_pkg](https://togithub.com/bazelbuild/rules_pkg) | http_archive | patch | `0.8.0` -> `0.8.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sindresorhus/open</summary>\n\n### [`v8.4.1`](https://togithub.com/sindresorhus/open/releases/tag/v8.4.1)\n\n[Compare Source](https://togithub.com/sindresorhus/open/compare/v8.4.0...v8.4.1)\n\n-   Fix `allowNonzeroExitCode` option ([#&#8203;296](https://togithub.com/sindresorhus/open/issues/296))  [`051edca`](https://togithub.com/sindresorhus/open/commit/051edca)\n-   Fix the `app` argument with WSL ([#&#8203;295](https://togithub.com/sindresorhus/open/issues/295))  [`4cf1a6d`](https://togithub.com/sindresorhus/open/commit/4cf1a6d)\n\n</details>\n\n<details>\n<summary>bazelbuild/rules_pkg</summary>\n\n### [`v0.8.1`](https://togithub.com/bazelbuild/rules_pkg/releases/tag/0.8.1)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_pkg/compare/0.8.0...0.8.1)\n\n**New Features**\n\n-   Expose tar manifest as an output ([#&#8203;643](https://togithub.com/bazelbuild/rules_pkg/issues/643))\n-   Support license attribute in pkg_deb ([#&#8203;651](https://togithub.com/bazelbuild/rules_pkg/issues/651))\n-   Add support for the txz extension in pkg_tar ([#&#8203;653](https://togithub.com/bazelbuild/rules_pkg/issues/653)) ([#&#8203;654](https://togithub.com/bazelbuild/rules_pkg/issues/654))\n\n**Fixes**\n\n-   Explicitly store implicit parent directories in zip files ([#&#8203;640](https://togithub.com/bazelbuild/rules_pkg/issues/640))\n-   Remove unnecessary `to_list()` calls ([#&#8203;639](https://togithub.com/bazelbuild/rules_pkg/issues/639))\n-   Apply package_dir to pkg_mklink ([#&#8203;637](https://togithub.com/bazelbuild/rules_pkg/issues/637))\n\n**Thanks to**\nAlex Eagle, Nils Semmelrock, Doug Rabson, Fabian Meumertzheim\n\n**WORKSPACE setup**\n\n```\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nhttp_archive(\n    name = \"rules_pkg\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.8.1/rules_pkg-0.8.1.tar.gz\",\n        \"https://github.com/bazelbuild/rules_pkg/releases/download/0.8.1/rules_pkg-0.8.1.tar.gz\",\n    ],\n    sha256 = \"8c20f74bca25d2d442b327ae26768c02cf3c99e93fad0381f32be9aab1967675\",\n)\nload(\"@&#8203;rules_pkg//:deps.bzl\", \"rules_pkg_dependencies\")\nrules_pkg_dependencies()\n\n```\n\n**Using the rules**\n\nSee [the documentation](https://bazelbuild.github.io/rules_pkg)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24673","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24673)"},{"Id":"1572117577","IsPullRequest":true,"CreatedAt":"2023-02-08T19:10:52","Actor":"angular-robot","Number":"24663","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24663","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24663)"},{"Id":"1576362444","IsPullRequest":true,"CreatedAt":"2023-02-08T19:10:03","Actor":"alan-agius4","Number":"24677","RawContent":null,"Title":"ci: enable HTTP caching for Bazel on Windows","State":"closed","Body":"\r\n\r\nThis commit enables Bazel HTTP caching for Windows runs. \r\n\r\nBefore: \r\n```\r\nbazel-e2e-cli-win: 22m 39s\r\n```\r\n\r\nAfter: \r\n```\r\nbazel-e2e-cli-win: 8m 32s\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/24677","RelatedDescription":"Closed or merged PR \"ci: enable HTTP caching for Bazel on Windows\" (#24677)"},{"Id":"1576231899","IsPullRequest":true,"CreatedAt":"2023-02-08T15:32:56","Actor":"alan-agius4","Number":"24676","RawContent":null,"Title":"ci: enable RBE for Windows CI runs","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24676","RelatedDescription":"Closed or merged PR \"ci: enable RBE for Windows CI runs\" (#24676)"},{"Id":"1574081043","IsPullRequest":true,"CreatedAt":"2023-02-08T14:34:07","Actor":"alan-agius4","Number":"24671","RawContent":null,"Title":"ci: enable RBE for Windows CI runs","State":"closed","Body":"This commit enables RBE for Windows CI runs.\r\n","Url":"https://github.com/angular/angular-cli/pull/24671","RelatedDescription":"Closed or merged PR \"ci: enable RBE for Windows CI runs\" (#24671)"},{"Id":"1575790314","IsPullRequest":false,"CreatedAt":"2023-02-08T10:17:40","Actor":"DilipV2503","Number":"24675","RawContent":null,"Title":"Module build failed Error in compile time","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Hii, \r\nI am getting this error while we connecting web-sdk into our angular project**\r\n\r\n![InkedError](https://user-images.githubusercontent.com/83951998/217490308-6bd473c3-4cbf-49c7-b963-d92fb51854ab.jpg)\r\n\r\nplease help me out to solve this error.\r\n\r\nThank you\n\n### Minimal Reproduction\n\nNA\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 10.0.8\r\nNode: 16.15.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.6\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24675","RelatedDescription":"Closed issue \"Module build failed Error in compile time\" (#24675)"},{"Id":"1576373681","IsPullRequest":false,"CreatedAt":"2023-02-08T08:37:23","Actor":"000panther","Number":"24678","RawContent":null,"Title":"safety-worker.js: same source code as ngsw-worker.js","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe are currently trying to get rid of an old service worker using the safety-worker.js. While writing the corresponding scripts for replacing the ngsw-worker.js with the safety-worker.js I noticed that the contents of the files are the same. \r\n\r\nI checked the source of https://github.com/angular/angular/tree/15.1.x/packages/service-worker to see if this change might be intentional and the safety-worker.js mentioned there is a small file containing few lines of code.\r\n\r\nOut of curiosity i checked the safety-worker.js of angular io - same as the ngsw-worker.js! \r\n\r\nhttps://angular.io/safety-worker.js\r\n\r\nhttps://angular.io/ngsw-worker.js\r\n\r\nThis seems like an issue. If this is the expected behaviour, the documentation does not mention it.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/000panther/service-worker-issue\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 16.15.1\r\nPackage Manager: npm 8.11.0\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\nCan I use the safety-worker.js from the service-worker repository as a workaround for now?","Url":"https://github.com/angular/angular-cli/issues/24678","RelatedDescription":"Open issue \"safety-worker.js: same source code as ngsw-worker.js\" (#24678)"},{"Id":"1573751850","IsPullRequest":true,"CreatedAt":"2023-02-07T19:30:08","Actor":"angular-robot","Number":"24670","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.1` -> `v2.2.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.2`](https://togithub.com/github/codeql-action/compare/v2.2.1...v2.2.2)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.1...v2.2.2)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24670","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.2\" (#24670)"},{"Id":"1573398361","IsPullRequest":true,"CreatedAt":"2023-02-07T19:29:26","Actor":"clydin","Number":"24669","RawContent":null,"Title":"test(@angular-devkit/build-angular): port several unit tests to esbuild builder","State":"closed","Body":"The following unit tests have been ported over to test the experimental esbuild-based\r\nbrowser application builder:\r\n\r\n* `assets` option\r\n* `outputHashing` option\r\n* browser support behavior (`browserslist`)\r\n\r\nSeveral small modifications were necessary to accommodate output file differences such\r\nas no runtime chunk. Additionally, two tests are temporarily disabled for the `outputHashing`\r\ntests pending implementation in the builder. These tests are the same stylesheet resource handling\r\nfile name test and no hashing of non-injected styles test.","Url":"https://github.com/angular/angular-cli/pull/24669","RelatedDescription":"Closed or merged PR \"test(@angular-devkit/build-angular): port several unit tests to esbuild builder\" (#24669)"},{"Id":"1571354775","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:20","Actor":"crisbeto","Number":"24662","RawContent":null,"Title":"fix(@angular/cli): error if Angular compiler is used in a schematic","State":"closed","Body":"When a schematic is executed, it is wrapped in a custom Node context. This context doesn't expose the same set of global variables as the default one. This can lead to an error if a schematic is importing the Angular compiler and the app is using i18n, because the `TextEncoder` isn't exposed through the custom context (see https://github.com/angular/angular/issues/48940).\r\n\r\nThese changes add the `TextEncoder` to the context.\r\n\r\nFixes https://github.com/angular/angular/issues/48940.","Url":"https://github.com/angular/angular-cli/pull/24662","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): error if Angular compiler is used in a schematic\" (#24662)"},{"Id":"1572297244","IsPullRequest":true,"CreatedAt":"2023-02-07T01:01:07","Actor":"alan-agius4","Number":"24665","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match","State":"closed","Body":"\r\n\r\nPreviously, we failed the compilation when the specified patterns did not match any spec file. This breaks the case were users configure Karma to not fail on empty test suit.\r\n\r\nCloses #24644\r\n","Url":"https://github.com/angular/angular-cli/pull/24665","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not fail compilation when spec pattern does not match\" (#24665)"},{"Id":"1572597744","IsPullRequest":true,"CreatedAt":"2023-02-07T01:00:51","Actor":"alan-agius4","Number":"24666","RawContent":null,"Title":"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic","State":"closed","Body":"\r\nThe bootstrapping wrapping is no longer necessary as of 15.1.3. See: https://github.com/angular/angular/pull/48868\r\n","Url":"https://github.com/angular/angular-cli/pull/24666","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove bootstrapping wrapping in universal schematic\" (#24666)"},{"Id":"1572171585","IsPullRequest":false,"CreatedAt":"2023-02-06T09:14:45","Actor":"yohny","Number":"24664","RawContent":null,"Title":"Global styles linking in angular.json does not work is they come from library assets","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have an library project that includes some assets like icons and some global styles. Those are packaged in `assets` folder of library. Consuming application includes library assets by extending the `assets` section in its `angular.json`:\r\n```json\r\n\"assets\": [\r\n    \"projects/my-app/src/favicon.ico\",\r\n    \"projects/my-app/src/assets\",\r\n    {\r\n      \"input\": \"dist/my-lib/assets\", // with regular install this would go from node_modules instead of dist\r\n      \"glob\": \"**/*\",\r\n      \"output\": \"assets/my-lib\"\r\n    }\r\n  ],\r\n```\r\nwhen build, the library assets are copied into `assest/my-lib` folder of consuming application as expected.\r\nThe issue occurs when I want to use the library style from `assest/my-lib/styles.css`. If I add it to `styles` section of `angular.json` like this:\r\n```json\r\n\"styles\": [\r\n    \"projects/my-app/src/styles.css\",\r\n    \"projects/my-app/src/assets/my-lib/styles.css\" // added\r\n  ],\r\n```\r\nit ends with error:  `Error: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'`\r\nHowever when I add it in `index.html. like this `<link rel=\"stylesheet\" href=\"assets/my-lib/styles.css\">` it works as expected.\r\n\r\nIt looks like `styles` processing happens before `assets`copying, which results in the error. Expectation is that assets are copied before the styles/scripts linking because those can reference assets.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/yohny/assets-demo\n\n### Please provide the exception or error you saw\n\n```true\nError: Can't resolve 'projects/my-app/src/assets/my-lib/styles.css'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24664","RelatedDescription":"Closed issue \"Global styles linking in angular.json does not work is they come from library assets\" (#24664)"},{"Id":"1571105131","IsPullRequest":false,"CreatedAt":"2023-02-05T16:23:16","Actor":"patrickdk77","Number":"24661","RawContent":null,"Title":"angular upgrade to v14 deletes dist folder","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nng build --configuration=prodfast\r\n- Generating browser application bundles (phase: setup)...\r\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\r\n\r\nIn my build case, it's being built in docker like:\r\ndocker run --env-file .env.prod -v \"/export:/project/dist\"\r\n\r\nThis way, the build is done in a clean enviroment, and the output of dist is mapped the the host enviroment and gets pushed to prod systems\r\nBut now it is attempting to do a rmdir of dist, and since that is a mount point and not a folder, it fails and builds no longer happen.\r\n\n\n### Minimal Reproduction\n\nbuild angular while the dist is actually a mountpoint instead of a folder\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: EBUSY: resource busy or locked, rmdir '/project/dist'\n```\n\n\n### Your Environment\n\n```text\ndocker container inside bitbucket pipeline\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24661","RelatedDescription":"Closed issue \"angular upgrade to v14 deletes dist folder\" (#24661)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1578642630","IsPullRequest":false,"CreatedAt":"2023-02-09T21:26:30","Actor":"DemeSteve","Number":"26602","RawContent":null,"Title":"bug(mat-menu): mat-menu opens at the bottom of the page on mobile device","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn my angular data table is vertical three dots in a cell in each row. Clicking on this three dots opens a mat-menu. On computer it works fine, but from mobile device it opens at the bottom of the page.\n\n### Reproduction\n\nI have\r\n`<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">`\r\nin my application but when I remove this line, the problem is solved!\n\n### Expected Behavior\n\nFrom mobile devices the mat-menu should open next to the button where I click it.\n\n### Actual Behavior\n\nFrom mobile devices the mat-menu opens at the bottom of the page (with a css bottom: 0 or bottom: 2px generated).\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows","Url":"https://github.com/angular/components/issues/26602","RelatedDescription":"Open issue \"bug(mat-menu): mat-menu opens at the bottom of the page on mobile device\" (#26602)"},{"Id":"1578613958","IsPullRequest":true,"CreatedAt":"2023-02-09T21:00:42","Actor":"y-nut","Number":"26601","RawContent":null,"Title":"Disable toggle for expansion panel ","State":"open","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled\r\n","Url":"https://github.com/angular/components/pull/26601","RelatedDescription":"Open PR \"Disable toggle for expansion panel \" (#26601)"},{"Id":"1578608186","IsPullRequest":true,"CreatedAt":"2023-02-09T21:00:30","Actor":"y-nut","Number":"26600","RawContent":null,"Title":"Disable toggle for expansion panel","State":"closed","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled\r\n","Url":"https://github.com/angular/components/pull/26600","RelatedDescription":"Closed or merged PR \"Disable toggle for expansion panel\" (#26600)"},{"Id":"1578535454","IsPullRequest":true,"CreatedAt":"2023-02-09T20:55:48","Actor":"y-nut","Number":"26599","RawContent":null,"Title":"Disable toggle for expansion panel","State":"closed","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled","Url":"https://github.com/angular/components/pull/26599","RelatedDescription":"Closed or merged PR \"Disable toggle for expansion panel\" (#26599)"},{"Id":"1576900522","IsPullRequest":true,"CreatedAt":"2023-02-08T22:58:19","Actor":"amysorto","Number":"26598","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26598","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#26598)"},{"Id":"1576696822","IsPullRequest":true,"CreatedAt":"2023-02-08T22:15:25","Actor":"amysorto","Number":"26597","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26597","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#26597)"},{"Id":"1576692279","IsPullRequest":true,"CreatedAt":"2023-02-08T19:35:29","Actor":"amysorto","Number":"26596","RawContent":null,"Title":"Bump version to \"v15.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26596","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.4\" with changelog.\" (#26596)"},{"Id":"1576531328","IsPullRequest":false,"CreatedAt":"2023-02-08T17:32:02","Actor":"boomdizz","Number":"26595","RawContent":null,"Title":"feat(COMPONENT): MatOptgroup should have programmatic capability","State":"open","Body":"### Feature Description\r\n\r\nI have a need to programatically manipulate the mat-optgroup. My usecase has a cascade/sequence of filters (MatSelects) that is needed to query the backend for 'Automobiles' that match the query. The filters are things like 'Manufacturer', 'Model' etc..... So as the consumer selects a Manufacturer, the downstream filter for Model only shows the Models that correspond to that Manufacturer (or that set of manufacturers, as I am using 'multiple' on the MatSelect). The final set of filters make a graphql query (could well be a REST API instead) to the backend that return some attributes of the selected group of Autos, e.g. mpg, etc.) So pretty straightforward design.\r\nEach filter is a multiple select filter where the end user can select multiple options on the filter. There is an 'All' option group that contains all of the options in the filter/MatSelect. Visually, the option group does what it should. But I need to programatically manipulate the option group. I have rules like - if none of the options are selected in a group, enable all the options in the group. Essentially, none is not a valid option. I need to:\r\n(1) From an option find the parent option group\r\n(2) Check if the option group has no options enabled and/or all options enabled\r\n(3) Enable/Disable the entire option group in one API call.\r\nI can provide additional details as needed.\r\nI am working with Angular material 14.2.6\r\n\r\n### Use Case\r\n\r\nUse cases provided in the Feature Description","Url":"https://github.com/angular/components/issues/26595","RelatedDescription":"Open issue \"feat(COMPONENT): MatOptgroup should have programmatic capability\" (#26595)"},{"Id":"1576378506","IsPullRequest":false,"CreatedAt":"2023-02-08T15:56:13","Actor":"infacto","Number":"26594","RawContent":null,"Title":"docs-bug(datepicker): Improve/Describe type `D`","State":"open","Body":"### Documentation Feedback\r\n\r\nWhat's `D`? Please describe. Also: A single letter type is maybe not the best type. Is it generic? I cannot find type reference. Btw, is `string` also allowed? It seems so... \r\n\r\n![image](https://user-images.githubusercontent.com/60390085/217581608-bb215682-7016-4228-9575-4ca5b3bb44ce.png)\r\n\r\nUpdate: There is also an input type `C`.\r\nUpdate: Ok, as I see, the output is a dayjs instance. Adapter. (A weird uglyfied output on console.)\r\n\r\nAnyway, can we descibe als these types and where they come from (adapter, etc.)?\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/datepicker/api","Url":"https://github.com/angular/components/issues/26594","RelatedDescription":"Open issue \"docs-bug(datepicker): Improve/Describe type `D`\" (#26594)"},{"Id":"1576270837","IsPullRequest":false,"CreatedAt":"2023-02-08T14:58:13","Actor":"michahell","Number":"26593","RawContent":null,"Title":"in v15.1.2, prebuilt-themes seem to be missing :(","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nWe still depend on a prebuilt-theme (for reasons) and so we'd need the 15.1.x version for the prebuilt-theme we use to upgrade from Angular 14 to Angular 15...\n\n### Reproduction\n\ndoes not apply\n\n### Expected Behavior\n\nprebuilt theme CSS files listed in the src/material/prebuilt-themes folder\n\n### Actual Behavior\n\nprebuilt theme CSS files **NOT** present in the src/material/prebuilt-themes folder\n\n### Environment\n\n- Angular: 15.1.2\r\n- CDK/Material: 15.1.2\r\n- Browser(s): chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26593","RelatedDescription":"Open issue \"in v15.1.2, prebuilt-themes seem to be missing :(\" (#26593)"},{"Id":"1575467764","IsPullRequest":false,"CreatedAt":"2023-02-08T04:47:22","Actor":"ajayz09","Number":"26591","RawContent":null,"Title":"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n### Mat Select Trigger Multiple | Angular 14\r\n\r\nMat Select Trigger with chips inside is going outside of the mat-form-field-wrapper when number of selections exceeds a certain value as it tries to populate to a new line.\r\n\r\nThis was working as expected in Angular 10-12\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Use mat-select-trigger with mat-chips\r\n2. Select multiple options from the selection panel expanding the mat-form-field to another line.\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435942-b8e07998-0c32-4293-8937-6c88f3031faf.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435811-5486024c-e915-4e08-a733-61c609ddf1db.png)\r\n\n\n### Environment\n\n- Angular: 14.2.4\r\n- CDK/Material: 12.2.6\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/26591","RelatedDescription":"Open issue \"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper\" (#26591)"},{"Id":"1575205997","IsPullRequest":false,"CreatedAt":"2023-02-07T23:43:00","Actor":"scottg521","Number":"26590","RawContent":null,"Title":"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSee Stackblitz https://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nIn this example:\r\n- if you click on the words or the checkmark, you get the event, but if you click on a part of the chip without text, you do not\r\n- if you click on the currently selected chip, it will deselect (so nothing is selected) which doesn't seem right for a radio-button-style chip set\r\n- using the keyboard, you can arrow up and down in the list and select with space or enter 👍, also you can tab out of the chip set and you can shift-tab to back into the chipset 👍, but you can't shift-tab to back out of it 👎 .\n\n### Reproduction\n\nhttps://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. click on words, and see selection\r\n2. click on chip but not on words, no selection\r\n3. click the words of the selected chip, deselected (and nothing selected)\r\n4. use keyboard arrows to move within chip set\r\n5. use tab to go to link after chipset\r\n6. use shift-tab to go back to chipset\r\n7. shift-tab will not go to link before chipset (or anywhere out of the chipset)\r\n\n\n### Expected Behavior\n\n- click anywhere on chip to select\r\n- prevented from deselecting selected chip (not sure what 'required' means but it doesn't help)\r\n- able to tab in and out of chipset in either direction\n\n### Actual Behavior\n\ndescribed above\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Mac\r\n","Url":"https://github.com/angular/components/issues/26590","RelatedDescription":"Open issue \"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access\" (#26590)"},{"Id":"1575076737","IsPullRequest":false,"CreatedAt":"2023-02-07T21:52:52","Actor":"ChristopherSnay","Number":"26589","RawContent":null,"Title":"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nPage with the defect: https://material.angular.io/components/chips/examples\r\n\r\nThe last example, \"Stacked chips\" shows full-width chips when the mat-chip CSS shows `max-width: 200px`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Go to https://material.angular.io/components/chips/examples\r\n2. Scroll to the bottom and view Stacked chips\r\n\r\n\r\n### Expected Behavior\r\n\r\nmat-chip should obey the CSS that sets max-width to 200px;\r\n\r\n### Actual Behavior\r\n\r\nmat-chips are 100% width of the container. \r\n![stacked-chips](https://user-images.githubusercontent.com/11818687/217375482-341c5dca-df61-469d-bbec-274bd38acfe5.PNG)\r\n\r\nAdditionally, the only clickable area of the chip is the text area. The overflow is not clickable.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome and Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26589","RelatedDescription":"Open issue \"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox\" (#26589)"},{"Id":"1574960283","IsPullRequest":true,"CreatedAt":"2023-02-07T20:13:13","Actor":"BobobUnicorn","Number":"26588","RawContent":null,"Title":"feat(cdk/tree): integrate TreeKeyManager with cdk/tree","State":"open","Body":"This should allow cdk/tree to support keyboard input.\r\n\r\nBased on #26587.","Url":"https://github.com/angular/components/pull/26588","RelatedDescription":"Open PR \"feat(cdk/tree): integrate TreeKeyManager with cdk/tree\" (#26588)"},{"Id":"1574956665","IsPullRequest":true,"CreatedAt":"2023-02-07T20:10:21","Actor":"BobobUnicorn","Number":"26587","RawContent":null,"Title":"feat(cdk/tree): implement typeahead for TreeKeyManager","State":"open","Body":"Based on #26586. Followed by #26588.","Url":"https://github.com/angular/components/pull/26587","RelatedDescription":"Open PR \"feat(cdk/tree): implement typeahead for TreeKeyManager\" (#26587)"},{"Id":"1574955133","IsPullRequest":true,"CreatedAt":"2023-02-07T20:09:06","Actor":"BobobUnicorn","Number":"26586","RawContent":null,"Title":"feat(cdk/tree): implement expansion methods for TreeKeyManager","State":"open","Body":"Based on #24659. Followed by #26587.","Url":"https://github.com/angular/components/pull/26586","RelatedDescription":"Open PR \"feat(cdk/tree): implement expansion methods for TreeKeyManager\" (#26586)"},{"Id":"1574845916","IsPullRequest":true,"CreatedAt":"2023-02-07T18:39:45","Actor":"BobobUnicorn","Number":"26585","RawContent":null,"Title":"feat(cdk/tree): deprecate old TreeControl-based APIs","State":"open","Body":"Based on #25899. Followed by #24658.","Url":"https://github.com/angular/components/pull/26585","RelatedDescription":"Open PR \"feat(cdk/tree): deprecate old TreeControl-based APIs\" (#26585)"},{"Id":"1574833176","IsPullRequest":false,"CreatedAt":"2023-02-07T18:28:23","Actor":"MikaStark","Number":"26584","RawContent":null,"Title":"bug(chip): Overflow visible on action chips text break chip design and usability","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThis CSS rule https://github.com/angular/components/blame/01d5a9d12cad72a2c2bb6f71baf145d0ff4af13a/src/material/chips/chip.scss#L131 override MDC chip label overflow hidden to visible.\r\n\r\n@crisbeto put this comment above the rule\r\n\r\n```scss\r\n  // MDC sets `overflow: hidden` on these elements in order to truncate the text. This is\r\n  // unnecessary since our chips don't truncate their text and it makes it difficult to style\r\n  // the strong focus indicators so we need to override it.\r\n  .mdc-evolution-chip__cell--primary,\r\n  .mdc-evolution-chip__action--primary,\r\n  .mat-mdc-chip-action-label {\r\n    overflow: visible;\r\n  }\r\n```\r\n\r\nBut by not truncating chip long text/label, we reduce it usability and get a weird appearance.\r\n\r\nAs you can see, on small devices, the chip is quiet broken and the trailing icon cannot be reached (which is terrible)\r\n\r\n![image](https://user-images.githubusercontent.com/23034761/217331103-52a22bea-a4d4-4658-80cd-fac2a3f89791.png)\r\n\r\nBy just removing the CSS rule, we get the perfect behavior IMO\r\n\r\n![image](https://user-images.githubusercontent.com/23034761/217331433-bd5a50a7-737f-4aa8-932b-71cb0f5794d7.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/chips/examples\r\n2. Reduce your viewport size to 425px (on Chrome it's equivalent to Mobile L)\r\n3. On the first example, focus the input, type \"This is a very long annoying text that break this chip\" and press \"Enter\"\r\n4. See that the text overflow and the trailing icon is not reachable\r\n\n\n### Expected Behavior\n\nRemove the CSS rule here : https://github.com/angular/components/blame/01d5a9d12cad72a2c2bb6f71baf145d0ff4af13a/src/material/chips/chip.scss#L13\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/23034761/217333439-738d6cf7-d071-4ab5-90d0-9c4e7f37c8f4.png)\r\n\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/26584","RelatedDescription":"Open issue \"bug(chip): Overflow visible on action chips text break chip design and usability\" (#26584)"},{"Id":"1574804472","IsPullRequest":false,"CreatedAt":"2023-02-07T18:04:30","Actor":"angelbello87","Number":"26583","RawContent":null,"Title":"bug(mat-select): Screen reader announce selected option twice","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nafter selecting an option from the mat-select dropdown NVDA will announce the selection name twice\r\nThis happens with out of the box component or after adding the matSelectAccessibility class to the mat-select tag\r\n![image](https://user-images.githubusercontent.com/14942214/217325939-1a502921-5b9d-4b21-9f45-a0e6246e2c3d.png)\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/select/overview using Chrome or Edge\r\n2. Open NVDA or Narrator\r\n3. Navigate to the dropdown with the keyboard\r\n4. Activate dropdown with the keyboard\r\n5. Select an element from the dropdown with the keyboard\r\n\r\n\n\n### Expected Behavior\n\nIt should announce the selected component only once\n\n### Actual Behavior\n\nIt announces the selected component 2 times\n\n### Environment\n\n- Angular: 14.1.1\r\n- CDK/Material: versions 13.2.3 and 15.1.3 \r\n- Browser(s): Edge and Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26583","RelatedDescription":"Open issue \"bug(mat-select): Screen reader announce selected option twice\" (#26583)"},{"Id":"1574015836","IsPullRequest":false,"CreatedAt":"2023-02-07T09:53:17","Actor":"phrei","Number":"26582","RawContent":null,"Title":"bug(List): mat-list-items insterted via content projection are not interactive","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n13\n\n### Description\n\nIn a `mat-nav-list` all `mat-list-item`s should be considered \"interactive\" (see [docs](https://material.angular.io/components/list/overview#navigation) and [Code](https://github.com/angular/components/blob/5f0f071ac5bece0ecb7a5b2a196615d420841b3c/src/material/list/nav-list.ts#L38)) but this is not the case with `mat-list-item`s that are inserted into the list with content projection.\n\n### Reproduction\n\nOutline.html\r\n```\r\n<mat-nav-list>\r\n  <ng-content select=\"[menu]\">\r\n  </ng-content>\r\n...\r\n```\r\n\r\nComponent.html\r\n```\r\n<ng-container menu>\r\n        <a mat-list-item [routerLink]=\"myRouterLink\">\r\n            <mat-icon matListItemIcon>note_add</mat-icon>\r\n            <span>Add</span>\r\n        </a>\r\n```\r\n\r\nOther `mat-list-item`s that are directly under the `mat-nav-list` get the correct CSS-Class.\r\n\r\nYou can see it because the cursor doesn't change for non interactive items.\n\n### Expected Behavior\n\nAll `mat-list-item`s should be considered \"interactive\".\n\n### Actual Behavior\n\n`mat-list-item`s that are inserted with content projection are not considered \"interactive\".\n\n### Environment\n\nAngular CLI: 15.1.4\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@angular/flex-layout            15.0.0-beta.42\r\n@schematics/angular             15.1.4\r\nrxjs                            6.6.7\r\ntypescript                      4.8.4","Url":"https://github.com/angular/components/issues/26582","RelatedDescription":"Open issue \"bug(List): mat-list-items insterted via content projection are not interactive\" (#26582)"},{"Id":"1574005065","IsPullRequest":false,"CreatedAt":"2023-02-07T09:45:56","Actor":"mpo-dev","Number":"26581","RawContent":null,"Title":"bug(cdk/dialog): Closed observable not emitting when closed by navigation","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `closed` observable is not emitting when the CDK dialog is being closed by navigation when the `closeOnNavigation: true` property is applied. As a side effect of the dialog not properly closing, the dialog ref is also kept in the `Dialog.openDialogs` list.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open a CDK dialog with `closeOnNavigation: true`\r\n2. Navigate away\r\n\n\n### Expected Behavior\n\nThe dialog to close properly\n\n### Actual Behavior\n\nThe `closed` observable is not emtting and the dialog is being kept in de list with open dialogs\n\n### Environment\n\n- Angular: 15.1.0\r\n- CDK/Material: 15.1.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/26581","RelatedDescription":"Open issue \"bug(cdk/dialog): Closed observable not emitting when closed by navigation\" (#26581)"},{"Id":"1573695269","IsPullRequest":false,"CreatedAt":"2023-02-07T05:07:12","Actor":"PowerKiKi","Number":"26580","RawContent":null,"Title":"bug(paginator-mdc): Paginator form field appearance does not honor `MAT_FORM_FIELD_DEFAULT_OPTIONS`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the new MDC paginator, if setting a global field appearance with `MAT_FORM_FIELD_DEFAULT_OPTIONS`, or not doing anything to use the (new) default of `fill` style, then the new MDC Paginator will not honor any of those. Instead, it will fallback to its own hardcoded default, which is `outline`. That is strikingly different than the global default of `fill`.\r\n\r\nI would be willing to create a PR to implement cascading defaults. If `MatPaginatorDefaultOptions` is defined uses that, else if `MatFormFieldDefaultOptions` is defined use that, or else use the same global default as `MatFormField` which is `DEFAULT_APPEARANCE`. Would this kind of PR has a chance of being merged ?\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go to https://stackblitz.com/edit/components-issue-scusbg?file=src%2Fapp%2Fexample-component.html\r\n2. See that Paginator has different default appearance than select box, but it should not.\r\n\n\n### Expected Behavior\n\nPaginator should honor the global default appearance, which is `fill` or might be user-defined.\n\n### Actual Behavior\n\nIt has a hardcoded default of `outline` and can only be changed via `MatPaginatorDefaultOptions`, and never via `MatFormFieldDefaultOptions`.\n\n### Environment\n\n- Angular: 15.1\r\n- CDK/Material: 15.1\r\n- Browser(s): Chrome 109\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26580","RelatedDescription":"Open issue \"bug(paginator-mdc): Paginator form field appearance does not honor `MAT_FORM_FIELD_DEFAULT_OPTIONS`\" (#26580)"},{"Id":"1573369130","IsPullRequest":false,"CreatedAt":"2023-02-06T22:09:45","Actor":"eLarocque","Number":"26579","RawContent":null,"Title":"bug(form-field): mat-label disappears when density < -1","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nThere seems to be an issue where the mat-labels disappear when the density of form-field is set to lower than -1. I don't think this is as designed...\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Set the density option to anything lower than -1, ex: `@include mat.form-field-density(-2);`\r\n2. Include a mat-form-field with the appearance set to \"fill\", with a mat-label\r\n\r\nnotice the labels do not appear. (Their css is set as \"display:none;\")\r\n\r\nDemo: https://stackblitz.com/edit/angular-wvlwej\r\nIn the stackblitz, you can see that the labels appear fine when density is set at >= -1, but anything lower and the label is hidden.\r\n\r\n![image](https://user-images.githubusercontent.com/8459019/217098883-527e1c7c-71a2-4cb2-8c3e-2dc2c6a1b964.png)\r\n\n\n### Expected Behavior\n\nThe labels should be visible\n\n### Actual Behavior\n\nThe labels are not visible\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s):  Chrome Version 109.0.5414.120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26579","RelatedDescription":"Open issue \"bug(form-field): mat-label disappears when density < -1\" (#26579)"},{"Id":"1576250321","IsPullRequest":false,"CreatedAt":"2023-02-06T19:00:21","Actor":"soujam69","Number":"26592","RawContent":null,"Title":"Angular 15 - Material 'mat-sidenav' breaks page","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm new to Angular and have installed the lastest of everything. I created a new component using the -standalone switch. I've installed Material and imported it in my new component. If I insert mat-sidenav in my html it breaks the page and everything is blank. If i remove the mat-sidenav it works again. Also, 'mat-elevation-z4' does not work either.\r\n <mat-toolbar>\r\n  Header Info\r\n</mat-toolbar>\r\n\r\n  <mat-sidenav-container>\r\n    <mat-sidenav>\r\n        Side Content\r\n    </mat-sidenav>  \r\n    <mat-sidenav-content class=\"content\">\r\n        Main Content\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo errors\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4\r\n@angular-devkit/schematics      15.1.4\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/26592","RelatedDescription":"Open issue \"Angular 15 - Material 'mat-sidenav' breaks page\" (#26592)"},{"Id":"1573060021","IsPullRequest":false,"CreatedAt":"2023-02-06T18:19:07","Actor":"myrddraall","Number":"26578","RawContent":null,"Title":"bug(Style): Enabling `preserveSymlinks` breaks stylesheet","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n13\r\n\r\n### Description\r\n\r\nwhen enabling `preserveSymlinks` in angular.json custom stylesheets no longer compile because they cannot find `@material/button/button`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Run `ng new MyProject`\r\n2. Select the default options\r\n3. Run `cd MyProject`\r\n4. `ng add @angular/material`\r\n5. Select the default options, except for the theme, select Custom\r\n6. Set  `preserveSymlinks` to true in angular.json\r\n7.  Run `ng build`\r\n\r\n\r\n### Expected Behavior\r\n\r\nFor the project to build without error\r\n\r\n### Actual Behavior\r\n\r\nThe build fails with the following message:\r\n```\r\n./src/styles.scss - Error: Module build failed (from ./node_modules/.pnpm/sass-loader@13.2.0_sass@1.57.1+webpack@5.75.0/node_modules/sass-loader/dist/cjs.js):\r\nSassError: Can't find stylesheet to import.\r\n  ╷\r\n2 │ @use '@material/button/button' as mdc-button;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  node_modules/@angular/material/button/_button-theme.scss 2:1               @use\r\n  node_modules/@angular/material/core/density/private/_all-density.scss 2:1  @forward\r\n  @angular/_index.scss 18:1                                                  @use\r\n  src/styles.scss 1:1                                                        root stylesheet\r\n\r\n```\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.1.4\r\nNode: 18.13.0\r\nPackage Manager: pnpm 7.26.2\r\nOS: linux x64\r\n\r\nAngular: 15.1.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-date-fns-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.4 (cli-only)\r\n@angular-devkit/build-angular   15.1.4\r\n@angular-devkit/core            15.1.4 (cli-only)\r\n@angular-devkit/schematics      15.1.4 (cli-only)\r\n@angular/cli                    15.1.4\r\n@schematics/angular             15.1.4 (cli-only)\r\nrxjs                            7.5.6\r\ntypescript                      4.9.5","Url":"https://github.com/angular/components/issues/26578","RelatedDescription":"Open issue \"bug(Style): Enabling `preserveSymlinks` breaks stylesheet\" (#26578)"},{"Id":"1572775558","IsPullRequest":false,"CreatedAt":"2023-02-06T15:23:35","Actor":"alvaromartmart","Number":"26577","RawContent":null,"Title":"help(ComponentHarness): TestElement.sendKeys() on disabled inputs","State":"open","Body":"### What are you trying to do?\n\nI expect `TestElement.sendKeys` to respect the disabled status of input elements, however they don't seem to. The input is properly disabled on the application, the harness properly detects its disabled status... but `sendKeys` seems to bypass it.\r\n\r\nMaybe I misunderstood something, any help would be appreciated.\n\n### What troubleshooting steps have you tried?\n\nI tried running extra change detection cycles, etc. to no avail.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. In the Stackblitz demo below, the test `CustomInputHarness > should not fill disabled input` should pass\r\n\r\nhttps://stackblitz.com/edit/node-g4jhab?file=harness-sendkeys-demo/src/app/custom-input-component/custom-input-component.harness.ts\n\n### Environment\n\n- Angular: 14.2, 15.1\r\n- CDK/Material: 14.2, 15.1\r\n- Browser(s): Chrome, though doesn't seem relevant\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, though doesn't seem relevant\r\n","Url":"https://github.com/angular/components/issues/26577","RelatedDescription":"Open issue \"help(ComponentHarness): TestElement.sendKeys() on disabled inputs\" (#26577)"},{"Id":"1572457332","IsPullRequest":false,"CreatedAt":"2023-02-06T12:11:21","Actor":"plusnia-pgs","Number":"26576","RawContent":null,"Title":"bug(VIRTUAL_SCROLL): Virtual scroll problem","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\r\nI have weird issue with Angular CDK Virtual Scroll. I have implemented a virtual scroll and during scrolling this below error occurs in random time:\r\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\r\n\r\nIn general the error occurs when eg. I go to the other tab in the browser and then I go back to the app\r\n\r\nLibs versions:\r\n`\"@angular/cdk\": \"15.1.3\"`\r\n`\"@angular/material\": \"15.1.3\"`\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Init Virtual Scroll\r\n2. Go to the other tab or just minimize the browser\r\n3. Go back to the app\r\n4. Scroll\r\n\n\n### Expected Behavior\n\nNo errors like in Angular CDK examples \n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/53482062/216966044-12a0e3fa-75d1-4014-8ba0-b2f94e3e2204.png)\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Chrome 109.0.5414.119\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26576","RelatedDescription":"Open issue \"bug(VIRTUAL_SCROLL): Virtual scroll problem\" (#26576)"},{"Id":"1572394420","IsPullRequest":false,"CreatedAt":"2023-02-06T11:24:58","Actor":"leomayer","Number":"26575","RawContent":null,"Title":"bug(Button): letter-spacing not consistent in  different buttons","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThe new `mat-button` use a `letter-spacing` which is calculated as `1.25px` with the default settings. To be more precise:\r\n\r\n```\r\nvar(--mdc-typography-button-letter-spacing, .0892857143em)\r\n```\r\n\r\nwhereas  the variable `--mdc-typography-button-letter-spacing` is undefined. \r\n\r\nFor the toggle-button the letter-spacing is used from the `user agent stylesheet` which is set to `normal`. \n\n### Reproduction\n\nSteps to reproduce:\r\n1. Inspect the HTML-code of https://material.angular.io/components/button-toggle/overview\r\n2. https://material.angular.io/components/button/overview\r\n\n\n### Expected Behavior\n\nAt least that the letter-spacing is consistent over the components.\r\n\r\nAdditionally I would have expected the same spacing for similar types. \r\n\r\nAccording to the Material 3 specs there is no additional `letter-spacing` set: https://m3.material.io/components/buttons/specs\n\n### Actual Behavior\n\nWidth is set `1.25px`\n\n### Environment\n\nAngular CLI: 15.1.3\r\nNode: 19.5.0 (Unsupported)\r\nPackage Manager: npm 9.3.1\r\nOS: linux x64\r\n\r\nAngular: 15.1.2\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.3\r\n@angular-devkit/build-angular   15.1.3\r\n@angular-devkit/core            15.1.3\r\n@angular-devkit/schematics      15.1.3\r\n@angular/cli                    15.1.3\r\n@schematics/angular             15.1.3\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n","Url":"https://github.com/angular/components/issues/26575","RelatedDescription":"Open issue \"bug(Button): letter-spacing not consistent in  different buttons\" (#26575)"},{"Id":"1572175284","IsPullRequest":false,"CreatedAt":"2023-02-06T09:01:06","Actor":"Zacherl","Number":"26574","RawContent":null,"Title":"bug(ActionList): List items react to clicks even though they are disabled","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIf a mat-action-list is used with a disabled action, the list item is greyed out, but one can still interact with it, e. g. click on it.\n\n### Reproduction\n\nStackBlitz\r\nhttps://stackblitz.com/edit/angular-y6ecj5-wsih76?file=src/app/list-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. Click on the disabled list item\r\n2. See the action\n\n### Expected Behavior\n\nThe list item should not react to clicks (no ripple, no action).\n\n### Actual Behavior\n\nA ripple is shown on the list item and the click action is triggered and executed.\n\n### Environment\n\n- Angular: 15.1.1\r\n- CDK/Material: 15.1.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26574","RelatedDescription":"Open issue \"bug(ActionList): List items react to clicks even though they are disabled\" (#26574)"},{"Id":"1571753330","IsPullRequest":false,"CreatedAt":"2023-02-06T01:54:54","Actor":"fireflysemantics","Number":"26573","RawContent":null,"Title":"docs-bug(COMPONENT): Theming","State":"open","Body":"### Documentation Feedback\r\n\r\nI asked about this on Stackoverflow.  The question is about how to avoid duplicating styles in Angular 15.\r\n\r\n[This is the question](https://stackoverflow.com/questions/75276638/generating-an-angular-theme-for-angular-15).\r\n\r\nThe answer is to only call ` @include mat.all-component-themes($theme);` in the main theme, and then use `@include mat.all-component-colors($theme);` in subsequent themes like this.\r\n\r\nHowever it seems to me that this will then leave out generated CSS code for the scope of that theme.\r\n\r\n```\r\n.dark-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-theme($theme);\r\n    @include mat.all-component-themes($theme);\r\n}\r\n//and this being your secondary theme\r\n.light-theme {\r\n    //======================================\r\n    // THEME INITIALIZATION\r\n    //======================================\r\n    @include mat.core-color($theme);  <---- This is the magic\r\n    @include mat.all-component-colors($theme); <---- This is the magic\r\n}\r\n```\r\n\r\nIIUC with the above type of theme generation the rules generated for the light and dark themes would be mutually exclusive, and so the light theme would only have the color specific CSS declarations, but would be missing CSS declarations generated for the dark theme with `mat.all-component-themes($theme);`.\r\n\r\nSome clarification on this in the documentation would be terrific.\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/26573","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Theming\" (#26573)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-10T03:30:02.9090939Z","RunDurationInMilliseconds":2100}