{"Data":{"Angular-Issues":{"Issues":[{"Id":"712340081","IsPullRequest":true,"CreatedAt":"2020-09-30T23:13:11","Actor":"josephperrott","Number":"39073","RawContent":null,"Title":"ci: update to latest version of sauce-connect","State":"open","Body":"Update to the latest version of sauce-connect, 4.6.2.\r\n","Url":"https://github.com/angular/angular/pull/39073","RelatedDescription":"Open PR \"ci: update to latest version of sauce-connect\" (#39073)"},{"Id":"712321183","IsPullRequest":true,"CreatedAt":"2020-09-30T22:25:11","Actor":"JoostK","Number":"39072","RawContent":null,"Title":"ICU source spans and type checking","State":"open","Body":"See individual commits.","Url":"https://github.com/angular/angular/pull/39072","RelatedDescription":"Open PR \"ICU source spans and type checking\" (#39072)"},{"Id":"711401032","IsPullRequest":true,"CreatedAt":"2020-09-30T21:58:53","Actor":"zbirkenbuel","Number":"39049","RawContent":null,"Title":"fix(router): update getRouteGuards to check if the context outlet is activated","State":"closed","Body":"In certain circumstances (errors during component constructor) the router outlet may not be activated before redirecting to a new route. If the new route requires running guards and resolvers the current logic will throw when accessing outlet.component due to an isActivated check within the property getter.  This update brings the logic inline with deactivateRouterAndItsChildren, namely checking outlet.isActivated before trying to access outlet.component.\r\n\r\nFixes #39030\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n  - No existing tests for this file\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n  - No doc updates are required\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nWhen navigating to a future route, if the current router outlet is not activated (due to an error during the component constructor) there is a flaw in the runGuardsAndResolvers logic which does not handle an exception thrown in the outlet.component property getter\r\n\r\nIssue Number: 39030\r\n\r\n\r\n## What is the new behavior?\r\nThe runGuardsAndResolvers logic properly checks for outlet.isActivated before trying to access the outlet.component property\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39049","RelatedDescription":"Closed or merged PR \"fix(router): update getRouteGuards to check if the context outlet is activated\" (#39049)"},{"Id":"712262746","IsPullRequest":false,"CreatedAt":"2020-09-30T21:54:52","Actor":"bonnybros","Number":"39069","RawContent":null,"Title":"Microsoft Edge Refreshes while Submission (Angular v7)","State":"closed","Body":"My scenario is creating a draft out of a Questionnaire and when ever you select an answer it calls API and saves to DB. And there is also a button functionality to SUBMIT the Questionnaire and thats it. This works fine in a perfect condition.\r\n\r\nProblem happens when you select answers of 5 or more questions pretty fast(crazy selection) and click the Submit button. Then the browser hangs and refreshes the page. In my scenario it would also create a new draft. So total 2 drafts. And the weird thing is this happens only in Microsoft Edge. its working perfectly fine in Chrome.\r\n\r\nAfter looking at few blogs i tried to add \r\n(window as any).__Zone_enable_cross_context_check = true; \r\n\r\nthis in polyfills.ts. But that didnt help.\r\n\r\nMy Version of Angular is 7.3.10 and Microsoft Edge 41.16299.1480.0, Microsoft EdgeHTML 16.16299\r\n\r\nit would be great to get some insight. Thanks!","Url":"https://github.com/angular/angular/issues/39069","RelatedDescription":"Closed issue \"Microsoft Edge Refreshes while Submission (Angular v7)\" (#39069)"},{"Id":"712298187","IsPullRequest":true,"CreatedAt":"2020-09-30T21:37:59","Actor":"AndrewKushnir","Number":"39071","RawContent":null,"Title":"feat(dev-infra): add a command to verify NgBot YAML config syntax","State":"open","Body":"This commit adds a new command to the `ng-dev` suite, which verifies that the NgBot YAML config is\r\ncorrect. It also adds this command to the `lint` CircleCI job so that we execute this check while\r\nrunning CI.\r\n\r\nThis should help prevent syntax errors similar to the one introduced in:\r\nhttps://github.com/angular/angular/commit/393ce5574b76ad1344554a6aa9e2e8a6c3591ac9\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/39071","RelatedDescription":"Open PR \"feat(dev-infra): add a command to verify NgBot YAML config syntax\" (#39071)"},{"Id":"712288196","IsPullRequest":true,"CreatedAt":"2020-09-30T21:19:22","Actor":"dgp1130","Number":"39070","RawContent":null,"Title":"fix(core): use single quotes for relative link resolution migration to align with style guide","State":"open","Body":"This updates the migration to align with the style guide and work with default lint rules. It avoids a lint error on\r\nnewly migrated projects and fixes a test in the CLI repo.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n\r\n\r\n## What is the current behavior?\r\nProjects using the link resolution migration generate code using double quotes, when the default style guide is to use single quotes. This causes unnecessary lint errors in projects.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe migration now generates single quotes instead of double quotes.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39070","RelatedDescription":"Open PR \"fix(core): use single quotes for relative link resolution migration to align with style guide\" (#39070)"},{"Id":"712241299","IsPullRequest":true,"CreatedAt":"2020-09-30T20:27:44","Actor":"josephperrott","Number":"39066","RawContent":null,"Title":"ci: remove errant comma from angular robot config","State":"closed","Body":"Remove superfluous comma from exclude list for g3 status in the angular\r\nrobot config.\r\n","Url":"https://github.com/angular/angular/pull/39066","RelatedDescription":"Closed or merged PR \"ci: remove errant comma from angular robot config\" (#39066)"},{"Id":"712255847","IsPullRequest":true,"CreatedAt":"2020-09-30T20:25:07","Actor":"josephperrott","Number":"39068","RawContent":null,"Title":"fix(dev-infra): run git fetch in quiet mode","State":"open","Body":"Runs git fetch with the -q flag during fetch while comparing the master and\r\ng3 branches.\r\n","Url":"https://github.com/angular/angular/pull/39068","RelatedDescription":"Open PR \"fix(dev-infra): run git fetch in quiet mode\" (#39068)"},{"Id":"712252406","IsPullRequest":true,"CreatedAt":"2020-09-30T20:19:46","Actor":"josephperrott","Number":"39067","RawContent":null,"Title":"feat(dev-infra): show CI status of all active release trains","State":"open","Body":"As part of the ng-dev caretaker check command, show the status of the\r\nlastest CircleCI run for each active release train.\r\n","Url":"https://github.com/angular/angular/pull/39067","RelatedDescription":"Open PR \"feat(dev-infra): show CI status of all active release trains\" (#39067)"},{"Id":"711717276","IsPullRequest":true,"CreatedAt":"2020-09-30T19:51:38","Actor":"alan-agius4","Number":"39054","RawContent":null,"Title":"docs: update CLI strict mode documentation","State":"closed","Body":"With this change we update the strict mode documentation to reflect the changes done in the CLI. (https://github.com/angular/angular-cli/pull/18931)\r\n\r\nChanges effect\r\n- Removing `no-any` tslint rule\r\n- The special sideEffects  package.json\r\n- Added `strictTemplates` NGC option\r\n\r\n","Url":"https://github.com/angular/angular/pull/39054","RelatedDescription":"Closed or merged PR \"docs: update CLI strict mode documentation\" (#39054)"},{"Id":"712076185","IsPullRequest":true,"CreatedAt":"2020-09-30T19:48:31","Actor":"kyliau","Number":"39062","RawContent":null,"Title":"test(language-service): add test for multiple bound attributes in microsyntax","State":"closed","Body":"It used to be the case that all microsyntax bindings share the same source\r\nspan, so the second bound attribute would overwrite the first.\r\n\r\nThis has been fixed in #39036, this case is added to prevent regression.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39062","RelatedDescription":"Closed or merged PR \"test(language-service): add test for multiple bound attributes in microsyntax\" (#39062)"},{"Id":"712041072","IsPullRequest":true,"CreatedAt":"2020-09-30T19:47:51","Actor":"gkalpak","Number":"39059","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to e526da605","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/568d34cdb...e526da605):\n\n**Modified**\n- help/test.json","Url":"https://github.com/angular/angular/pull/39059","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to e526da605\" (#39059)"},{"Id":"712180752","IsPullRequest":true,"CreatedAt":"2020-09-30T18:36:19","Actor":"kyliau","Number":"39065","RawContent":null,"Title":"feat(language-service): [Ivy] getSemanticDiagnostics for external templates","State":"open","Body":"This PR enables `getSemanticDiagnostics()` to be called on external templates.\r\n\r\nSeveral changes are needed to land this feature:\r\n\r\n1. The \"CompilerHost\" needs to implement two additional methods:\r\n   a. `readResource()`\r\n      Load the template from snapshot instead of reading from disk\r\n   b. `getModifiedResourceFiles()`\r\n      Inform the compiler that external templates have changed so that the\r\n      loader could invalidate its internal cache.\r\n2. Create `ScriptInfo` for external templates in MockHost.\r\n   Prior to this, MockHost only track changes in TypeScript files. Now it\r\n   needs to create `ScriptInfo` for external templates as well.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39065","RelatedDescription":"Open PR \"feat(language-service): [Ivy] getSemanticDiagnostics for external templates\" (#39065)"},{"Id":"712156760","IsPullRequest":false,"CreatedAt":"2020-09-30T18:00:11","Actor":"LastDragon-ru","Number":"39064","RawContent":null,"Title":"Code used inside ICU expressions is not fully type safe/checked.","State":"open","Body":"# 🐞 bug report\r\n\r\n\r\n### Is this a regression?\r\n\r\nNot sure.\r\n\r\n### Description\r\nComponent:\r\n```typescript\r\n@Component({\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.css' ]\r\n})\r\nexport class AppComponent  {\r\n  value: {a?: {v: number}, b?: {v: number}} = {b: {v: 123}};\r\n}\r\n```\r\n\r\nCode\r\n```html\r\n<!-- This will fail: Object is possibly 'undefined'-->\r\n<p *ngIf=\"value.b\">{{value.a.v}}</p>\r\n\r\n<!-- But this will not :( -->\r\n<p *ngIf=\"value.b\">\r\n  {value.a.v, plural, other {...}}.\r\n</p>\r\n```\r\n\r\n### Expected behavior:\r\n\r\nBoth examples must fail with the message \"Object is possibly 'undefined'\".\r\n\r\n\r\n### Actual behavior:\r\n\r\nNo errors for `{value.a.v, plural, other {...}}`.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-kinrts?file=src%2Fapp%2Fapp.component.html\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n```\r\nAngular CLI: 10.1.3\r\nNode: 13.14.0\r\nOS: linux x64\r\n\r\nAngular: 10.1.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1001.3\r\n@angular-devkit/build-angular      0.1001.3\r\n@angular-devkit/build-ng-packagr   0.1001.3\r\n@angular-devkit/core               10.1.3\r\n@angular-devkit/schematics         10.1.3\r\n@schematics/angular                10.1.3\r\n@schematics/update                 0.1001.3\r\nng-packagr                         10.1.2\r\nrxjs                               6.6.3\r\ntypescript                         4.0.3\r\n```\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/39064","RelatedDescription":"Open issue \"Code used inside ICU expressions is not fully type safe/checked.\" (#39064)"},{"Id":"712093880","IsPullRequest":true,"CreatedAt":"2020-09-30T16:26:20","Actor":"sonukapoor","Number":"39063","RawContent":null,"Title":"feat(forms): introduce min and max validators","State":"open","Body":"This commit adds the missing `min` and `max` validators.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/39063","RelatedDescription":"Open PR \"feat(forms): introduce min and max validators\" (#39063)"},{"Id":"712071923","IsPullRequest":true,"CreatedAt":"2020-09-30T15:57:01","Actor":"kyliau","Number":"39061","RawContent":null,"Title":"fix(language-service): [Ivy] hybrid visitor should not locate let keyword","State":"open","Body":"Fixed a boolean logic error that prevented hybrid visitor from returning\r\nundefined when a variable does not have value and cursor is not in the\r\nkey span.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39061","RelatedDescription":"Open PR \"fix(language-service): [Ivy] hybrid visitor should not locate let keyword\" (#39061)"},{"Id":"712059090","IsPullRequest":true,"CreatedAt":"2020-09-30T15:40:35","Actor":"atscott","Number":"39060","RawContent":null,"Title":"feat(language-service): add quick info for inline templates in ivy","State":"open","Body":"Adds implementation for `getQuickInfoAtPosition` to the Ivy Language\r\nService, which now returns `ts.QuickInfo` for inline templates.\r\n","Url":"https://github.com/angular/angular/pull/39060","RelatedDescription":"Open PR \"feat(language-service): add quick info for inline templates in ivy\" (#39060)"},{"Id":"711522475","IsPullRequest":true,"CreatedAt":"2020-09-30T13:36:07","Actor":"josephperrott","Number":"39051","RawContent":null,"Title":"refactor(dev-infra): use common git client for git environment reset","State":"closed","Body":"For rebase tooling, use the `GitClient`'s `checkout` method rather than a custom\r\nfunction doing the same task.\r\n","Url":"https://github.com/angular/angular/pull/39051","RelatedDescription":"Closed or merged PR \"refactor(dev-infra): use common git client for git environment reset\" (#39051)"},{"Id":"711462386","IsPullRequest":true,"CreatedAt":"2020-09-30T13:34:53","Actor":"atscott","Number":"39050","RawContent":null,"Title":"refactor(language-service): create getTypeDefinitionAtPosition stubs","State":"closed","Body":"Create stubs for getTypeDefinitionAtPosition for both VE and Ivy Language Service implementations.\r\nThis will prevent failed requests when it is implemented on the vscode plugin side\r\n","Url":"https://github.com/angular/angular/pull/39050","RelatedDescription":"Closed or merged PR \"refactor(language-service): create getTypeDefinitionAtPosition stubs\" (#39050)"},{"Id":"711300711","IsPullRequest":true,"CreatedAt":"2020-09-30T13:34:30","Actor":"atscott","Number":"39047","RawContent":null,"Title":"refactor(compiler): refactor template symbol builder","State":"closed","Body":"* Add `templateNode` to `ElementSymbol` and `TemplateSymbol` so callers\r\ncan use the information about the attributes on the\r\n`TmplAstElement`/`TmplAstTemplate` for directive matching. Long term, this\r\ncould also be solved by providing `parent` on `TmplAstNode`s.\r\n* Remove helper function `getSymbolOfVariableDeclaration` and favor\r\nmore specific handling for scenarios. The generic function did not\r\neasily handle different scenarios for all types of variable declarations\r\nin the TCB. \r\n","Url":"https://github.com/angular/angular/pull/39047","RelatedDescription":"Closed or merged PR \"refactor(compiler): refactor template symbol builder\" (#39047)"},{"Id":"711218185","IsPullRequest":true,"CreatedAt":"2020-09-30T13:34:05","Actor":"josephperrott","Number":"39046","RawContent":null,"Title":"fix(bazel): clean up outstanding failure message for usages of --define=compile","State":"closed","Body":"Removes the failure message put in place to catch usages of the old --define=compile\r\nmethod of setting which compiler was to be used.","Url":"https://github.com/angular/angular/pull/39046","RelatedDescription":"Closed or merged PR \"fix(bazel): clean up outstanding failure message for usages of --define=compile\" (#39046)"},{"Id":"711899679","IsPullRequest":false,"CreatedAt":"2020-09-30T13:33:50","Actor":"liorkatzdev","Number":"39058","RawContent":null,"Title":"possible Table Design ","State":"closed","Body":"I need to do this design : \r\n\r\n![‏‏צילום מסך (5)](https://user-images.githubusercontent.com/56354154/94684500-d01ff180-0330-11eb-8fd9-a548ea27da47.png)\r\n\r\nIs there any Angular package/framework that makes this similar tables? even pure html will help","Url":"https://github.com/angular/angular/issues/39058","RelatedDescription":"Closed issue \"possible Table Design \" (#39058)"},{"Id":"711215422","IsPullRequest":true,"CreatedAt":"2020-09-30T13:33:41","Actor":"gkalpak","Number":"39045","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 568d34cdb","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/bc6369c68...568d34cdb):\n\n**Modified**\n- help/xi18n.json","Url":"https://github.com/angular/angular/pull/39045","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to 568d34cdb\" (#39045)"},{"Id":"711863330","IsPullRequest":false,"CreatedAt":"2020-09-30T11:24:37","Actor":"felipeissa","Number":"39057","RawContent":null,"Title":"Not possible to override lifecycle hooks in decorators","State":"open","Body":"# 🐞 bug report\r\n\r\nAfter upgrading from angular 7 to angular 10 I noticed the lifecycle hooks cannot be overrided by decorators anymore. \r\n\r\n#30497 had a similar issue reported, but it was fixed on 10.0.5 and on 10.1.0 the issue I'm reporting still happening.\r\n\r\n### Is this a regression?\r\n\r\nYes, worked just fine on 7.2 version\r\n\r\n### Description\r\n\r\nA decorator which changes some lifecycle hook of a angular component seems to have no effect on the original component. On the decorator it seems to override the method, but on execution only the old behavior is applied.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-lifecycle-hooks-demo?file=src/app/app.component.ts\r\n\r\nFirst add some item to the array, it will create a child component. \r\nThen clicks clear, the child will be destroyed (can check on console)\r\nWhen the subject emitts, the child will print it's value because the decorator overriden onDestroy implementation wasn't called (no output on console)\r\n\r\n## 🔥 Exception or Error\r\n\r\nNone\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n\r\nAngular CLI: 10.1.2\r\nNode: 10.16.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1001.2\r\n@angular-devkit/build-angular      0.1001.2\r\n@angular-devkit/build-ng-packagr   0.1001.2\r\n@angular-devkit/core               10.1.2\r\n@angular-devkit/schematics         10.1.2\r\n@angular/cdk                       10.2.1\r\n@angular/material                  10.2.1\r\n@angular/material-moment-adapter   10.2.1\r\n@schematics/angular                10.1.2\r\n@schematics/update                 0.1001.2\r\nng-packagr                         10.1.0\r\nrxjs                               6.6.3\r\ntypescript                         4.0.3\r\n\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/39057","RelatedDescription":"Open issue \"Not possible to override lifecycle hooks in decorators\" (#39057)"},{"Id":"711850779","IsPullRequest":false,"CreatedAt":"2020-09-30T11:04:29","Actor":"Alphish","Number":"39056","RawContent":null,"Title":"ngBeforeChanges/ngOnChanging and preventing further Input processing","State":"open","Body":"# 🚀 feature request\r\n\r\n### Relevant Package\r\nThis feature request is for @angular/core.\r\n\r\n### Description\r\nRight now, the changes detection cycle:\r\n- updates all input bindings, gradually populating `SimpleChanges` object\r\n- fires `ngOnChanges` with the built `SimpleChanges`, allowing to process the changes collectively\r\n\r\nAs far as I can tell, there's no documented order of input bindings update. It means that before I have a chance to process changes as a whole, the change processing fires input updates in an order I don't know - and even if I can figure it out from the sources and control it, I still can't rely on it if it's not documented.\r\n\r\nThis becomes a problem in the following scenario:\r\n- I have one input affecting the list of available items\r\n- I have another input changing the currently selected item, but ignoring the new value if it's outside the range of available items\r\n- in the same change detection cycle, I change available items from collection without item X to a collection with item X *and* change the currently selected item to X\r\n- the input processing system decides to first attempt to choose X as selected item (but X is not among available items), then update the list of available items (only then making X available)\r\n\r\n### Describe the solution you'd like\r\nI'd like to propose a new lifecycle hook: ngBeforeChanges/ngOnChanging. This hook would be called *after* input changes have been determined, but *before* inputs would be processed.\r\n\r\nIn this lifecycle hook, the user could:\r\n- access information about input changes, so that they could process these collectively\r\n- prevent updating certain inputs, usually done when the user handled the input themself\r\n- an additional method for eager processing input would be nice (basically, assign the incoming input to the corresponding value and prevent the input)\r\n\r\nThis allows finer control over input processing order. For example, in the described scenario I could hook to ngOnChanging, I could do something like:\r\n```typescript\r\nngOnChanging(changes: IncomingChanges) {\r\n  const change = changes['availableValues'];\r\n  // I imagine SimpleChange previousValue/currentValue would be IncomingChange currentValue/newValue\r\n  this.availableValues = change.newValue;\r\n  change?.prevent(); // or maybe change?.markAsProcessed() or something\r\n\r\n  // alternative approach, if method for eager input processing is available\r\n  changes['availableValues']?.process();\r\n}\r\n```\r\n\r\nAdditionally, it allows simultaneous processing of inputs *before* they are processed individually. It can be used for optimising updates when some relatively expensive processing is triggered by updating either of several values.\r\n```typescript\r\nngOnChanging(changes: IncomingChanges) {\r\n  if ('value1' in changes || 'value2' in changes || 'value3' in changes) {\r\n    const value1change = changes['value1'];\r\n    const value2change = changes['value2'];\r\n    const value3change = changes['value3'];\r\n\r\n    // expensiveValuesUpdate(...) takes a while\r\n    // so if you change multiple related values at the same time, you better call it once\r\n    this.expensiveValuesUpdate(\r\n      value1change?.newValue ?? this.value1,\r\n      value2change?.newValue ?? this.value2,\r\n      value3change?.newValue ?? this.value3\r\n      );\r\n\r\n    value1change?.prevent();\r\n    value2change?.prevent();\r\n    value3change?.prevent();\r\n  }\r\n}\r\n```\r\n\r\n**Interactions with existing functionality**\r\nWe might want to consider the intended use of input prevention:\r\n- default input processing is meant to be prevented *only* if the user processed the input themselves\r\n- input processing may be prevented because the user processed the input themselves *or* refused to process it altogether\r\n\r\nAs of now, I can only think of reasonable scenarios when default input processing is prevented because user processes it instead. In fact, outright refusing to process inputs might go against the expectations of what inputs are meant to do.\r\n\r\nIf we assume that all inputs are meant to be processed - some just may be pre-processed by users - I'd keep ngOnChanges the way it works now. I.e. SimpleChanges object contains all the changes - user-prevented and default-processed alike - and doesn't differentiate between them. That's the option I lean towards - I intend user pre-processing to enhance the input processing in general, not to make it a completely new thing.\r\n\r\nIf we allow refusing to process inputs, we might want to reflect it in some way or another in SimpleChanges object, whether by adding something like \"isCancelled\" property to SimpleChange or removing the change altogether.\r\n\r\n**Implementation notes**\r\nJudging by the sources I've seen earlier but can't find now (I think the file was called `provider.ts` or something similar, and there are lots of providers), the inputs processing right now interleaves input processing and SimpleChanges building (i.e. there's a method that updates bound input and returns a new simple changes object).\r\n\r\nIf `gather changes + optionally call ngOnChanging + apply non-prevented changes + optionally call ngOnChanges` method is significantly more expensive than current `apply and gather changes + optionally call ngOnChanges`, maybe we could opt for the current input processing for directives that don't implement ngOnChanging. Hopefully, the cost of checking for ngOnChanging implementation is negligible.\r\n\r\n### Describe alternatives you've considered\r\nOne workaround I tried before was a mechanism for buffering changes when receiving input, then processing these changes in ngOnChanges(...). It got pretty messy, however, especially considering the fact that same component value could be changed via external Input or via internal Output (it was bound to inner input value).\r\n\r\nPossibly cleaner workaround I just came up with is having separate dummy Input values - separate from the main values - and process these in ngOnChanges(...). This should allow separating Input()-variables handling (e.g. to control inputs processing orders) and not polluting the processing of core variables.\r\n\r\nSo if I e.g. have `availableValues: any[]` and `selectedValue: any` properties with all their processing, then I'd add `@Input('availableValues') inputAvailableValues: any[];` and `@Input('selectedValue') inputSelectedValue: any;`, then I'd process these inputs in ngOnChanges.\r\n\r\nNot sure how well it works if I have `@Input() someValue;` in a base class then `@Input('someValue') inputSomeValue` in a child class. If the latter declaration completely overrides the former, I guess it would make the workaround relatively clean and effective.\r\n\r\nStill, having an ngBeforeChange/ngOnChanging hook would make the dummy input variables unnecessary and also provide much more intuitive place to handle incoming inputs. I at least wouldn't have wasted hours on trying to find a reasonably clean and properly working solution to the inputs asynchronism problem.\r\n\r\nAnother option could be specifying the order of processing inputs manually, e.g. in the `@Input()` dectorator (with 0 being a default order). However, it's not as flexible and doesn't cover the scenario of one-time expensive processing of simultaneously updated values.","Url":"https://github.com/angular/angular/issues/39056","RelatedDescription":"Open issue \"ngBeforeChanges/ngOnChanging and preventing further Input processing\" (#39056)"},{"Id":"711758799","IsPullRequest":true,"CreatedAt":"2020-09-30T08:49:56","Actor":"AleksanderBodurri","Number":"39055","RawContent":null,"Title":"docs(forms): add section under Validators.pattern detailing use of global and sticky flags gotcha","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #39053\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/39055","RelatedDescription":"Open PR \"docs(forms): add section under Validators.pattern detailing use of global and sticky flags gotcha\" (#39055)"},{"Id":"711600285","IsPullRequest":false,"CreatedAt":"2020-09-30T03:18:57","Actor":"AndrewKushnir","Number":"39053","RawContent":null,"Title":"Update Validators.pattern docs to mention the use of global flag in RegExp","State":"open","Body":"We should update the [Validators.pattern docs](https://angular.io/api/forms/Validators#pattern) to mention possible effects of using the global flag (e.g. `/abc/g`) in a RegExp passed as an argument. If the validator function is invoked multiple times the subsequent calls might produce unexpected results due to the `lastIndex` being preserved. Additional info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test.","Url":"https://github.com/angular/angular/issues/39053","RelatedDescription":"Open issue \"Update Validators.pattern docs to mention the use of global flag in RegExp\" (#39053)"},{"Id":"711131105","IsPullRequest":false,"CreatedAt":"2020-09-30T02:59:12","Actor":"bernatgy","Number":"39044","RawContent":null,"Title":"Breaking change in Ivy data binding!","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n**Ivy** - *I'm not familiar with the exact package / packages.*\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nCould not answer. We went from Angular `7.2.9` to `9.1.12` over a few days, and we used the default \"staticness\" of our `@ViewChild` queries before. Through the updates we had to switch some queries over to `{ static: true }` because errors arose.\r\n\r\n\r\n### Description\r\nAs you know, there are multiple ways to bind to a string Input property. I'll mention two of them;\r\n\r\na.) `someProperty=\"Some static string...\"`\r\n&nbsp;&nbsp;&nbsp;&nbsp;Which will only bind once.\r\nb.) `[someProperty]=\"'Some string...'\"`\r\n&nbsp;&nbsp;&nbsp;&nbsp;Which will participate in change detection as usual, and the string can change.\r\n\r\nWithout Ivy, these two ways pretty much perform the same. Note: We are talking about non-changing (at least through template binding) string values.\r\n\r\nWe have multiple systems in which we may override these provided strings in code, hence why we use the first type of binding (a). These systems seem to silently fail with Ivy on. After lots of debugging I figured that Ivy handles something differently. I'm pretty sure that the issue seems to arise from the combination of static resolution, binding type (a), and the override's timing, however these issues are incredibly hard to detect, and would even require complete redesigns of some of our systems.\r\n\r\nIn my attached [StackBlitz](https://stackblitz.com/edit/angular-huf3xf?devtoolsheight=33&file=src/app/app.component.ts), I've prepared;\r\n1. an example with binding type (a) which seems to have preserved it's inner workings\r\n2. an example with binding type (b) which completely flips on it's head when Ivy is turned on (uncheck / check Enable Ivy, under Settings)\r\n3. a possible workaround (???) which seems so bad... (I'd be interested in opinions on this)\r\n\r\n## 🔬 Minimal Reproduction\r\n[StackBlitz, second example, turn Ivy on / off](https://stackblitz.com/edit/angular-huf3xf?devtoolsheight=33&file=src/app/app.component.ts)\r\n\r\n## 🔥 Exception or Error\r\nNone\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 9.1.12\r\nNode: 12.18.3\r\nOS: win32 x64\r\n\r\nAngular: 9.1.12\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: <error>\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.12\r\n@angular-devkit/build-angular     0.901.12\r\n@angular-devkit/build-optimizer   0.901.12\r\n@angular-devkit/build-webpack     0.901.12\r\n@angular-devkit/core              9.1.12\r\n@angular-devkit/schematics        9.1.12\r\n@ngtools/webpack                  9.1.12\r\n@schematics/angular               9.1.12\r\n@schematics/update                0.901.12\r\nrxjs                              6.6.3\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nTested on Google Chrome 85.0.4183.121 (Official Build) (64-bit)\r\nProduction mode seems not to influence it.\r\n\r\nI realize what we're doing is not recommended, and that the example may not make much sense to you. But I firmly think it should be supported, and that the difference of behaviour should at least be documented (if it's not a bug). Furthermore, the cases in which we do this predominantly make sense, I just can't share much more.\r\n","Url":"https://github.com/angular/angular/issues/39044","RelatedDescription":"Closed issue \"Breaking change in Ivy data binding!\" (#39044)"},{"Id":"711544190","IsPullRequest":false,"CreatedAt":"2020-09-30T00:13:20","Actor":"Splaktar","Number":"39052","RawContent":null,"Title":"docs(strict-mode): add examples and make the guide more robust based on Angular blog post","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 📚 Docs enhancement request\r\n\r\n### Description\r\n\r\nFrom the Angular blog, there is some feedback on the strict mode docs (https://medium.com/@john.crim/this-is-a-very-helpful-post-it-is-clearer-than-the-docs-at-this-page-https-angular-io-guide-str-2c674bc61224):\r\n\r\n> This is a very helpful post - it is clearer than the docs at this page: https://angular.io/guide/strict-mode\r\n\r\nI agree that @mgechev’s [blog post](https://blog.angular.io/angular-cli-strict-mode-c94ba5965f63) includes some useful examples that should be added to the official docs. I would suggest that examples of some of the other rules in action would also be useful for our strict mode docs.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/guide/strict-mode\r\n\r\n### Reproduction Steps**\r\n- Reading the docs page\r\n\r\n### Expected vs Actual Behavior**\r\n\r\n**Expected:** Angular Documentation is more complete than what is found in a single blog post.\r\n**Actual:** https://blog.angular.io/angular-cli-strict-mode-c94ba5965f63 is more complete and includes details missing from https://angular.io/guide/strict-mode\r\n\r\n\r\n## 📷Screenshot\r\n![Screen Shot 2020-09-29 at 20 10 29](https://user-images.githubusercontent.com/3506071/94629132-d9a54d00-028f-11eb-8669-621cb100f499.png)\r\n\r\n\r\n\r\n## 🔥 Exception or Error\r\nN/A\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n### Browser info\r\n- Chrome 85\r\n\r\n### Anything else relevant?\r\nRelated but not the same: https://github.com/angular/angular/issues/38771.\r\n","Url":"https://github.com/angular/angular/issues/39052","RelatedDescription":"Open issue \"docs(strict-mode): add examples and make the guide more robust based on Angular blog post\" (#39052)"},{"Id":"711345835","IsPullRequest":true,"CreatedAt":"2020-09-29T18:22:18","Actor":"alxhub","Number":"39048","RawContent":null,"Title":"Initial support for autocompletion operations in the TemplateTypeChecker","State":"open","Body":"See individual commits for descriptions","Url":"https://github.com/angular/angular/pull/39048","RelatedDescription":"Open PR \"Initial support for autocompletion operations in the TemplateTypeChecker\" (#39048)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"712488856","IsPullRequest":true,"CreatedAt":"2020-10-01T05:12:32","Actor":"renovate[bot]","Number":"18947","RawContent":null,"Title":"build: update symbol-observable to version 2.0.3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [symbol-observable](https://togithub.com/blesh/symbol-observable) | dependencies | patch | [`2.0.2` -> `2.0.3`](https://renovatebot.com/diffs/npm/symbol-observable/2.0.2/2.0.3) |\n| [symbol-observable](https://togithub.com/blesh/symbol-observable) | devDependencies | patch | [`2.0.2` -> `2.0.3`](https://renovatebot.com/diffs/npm/symbol-observable/2.0.2/2.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>blesh/symbol-observable</summary>\n\n### [`v2.0.3`](https://togithub.com/blesh/symbol-observable/blob/master/CHANGELOG.md#&#8203;203-httpsgithubcombleshsymbol-observablecompare202203-2020-09-30)\n\n[Compare Source](https://togithub.com/blesh/symbol-observable/compare/2.0.2...2.0.3)\n\n##### Bug Fixes\n\n-   **package.json** ponyfill.d.ts added to package ([b25f5bf](https://togithub.com/blesh/symbol-observable/commit/b25f5bfe7425ad21f510428795de8b38aee70b2e))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18947","RelatedDescription":"Open PR \"build: update symbol-observable to version 2.0.3\" (#18947)"},{"Id":"712486644","IsPullRequest":true,"CreatedAt":"2020-10-01T05:08:55","Actor":"renovate[bot]","Number":"18946","RawContent":null,"Title":"build: update angular packages","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`8472c9e` -> `9bbc3ad`](https://renovatebot.com/diffs/npm/@angular%2fanimations//) |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | [`58b384c` -> `bb9d6df`](https://renovatebot.com/diffs/npm/@angular%2fcdk//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`784d1df` -> `9735c80`](https://renovatebot.com/diffs/npm/@angular%2fcommon//) |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`1983c5a` -> `ada005b`](https://renovatebot.com/diffs/npm/@angular%2fcompiler//) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`bebf4f9` -> `c621973`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli//) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`a867fcf` -> `f533494`](https://renovatebot.com/diffs/npm/@angular%2fcore//) |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`e82a9d3` -> `166f110`](https://renovatebot.com/diffs/npm/@angular%2fforms//) |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`56f1c42` -> `575074e`](https://renovatebot.com/diffs/npm/@angular%2flanguage-service//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`22fd8c5` -> `e9479c9`](https://renovatebot.com/diffs/npm/@angular%2flocalize//) |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | [`6acc2c5` -> `729ac3a`](https://renovatebot.com/diffs/npm/@angular%2fmaterial//) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | [`fcbb86b` -> `dee144c`](https://renovatebot.com/diffs/npm/@angular%2fmaterial-moment-adapter//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`b5b32ae` -> `bf1a7c7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser//) |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`5cd115f` -> `b94005a`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`781005e` -> `be8211d`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server//) |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`9644935` -> `ec201de`](https://renovatebot.com/diffs/npm/@angular%2frouter//) |\n| [@angular/router](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/11.0.0-next.3/11.0.0-next.4) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`11.0.0-next.3` -> `11.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/11.0.0-next.3/11.0.0-next.4) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v11.0.0-next.4`](https://togithub.com/angular/angular/blob/master/CHANGELOG.md#&#8203;1100-next4-2020-09-30)\n\n[Compare Source](https://togithub.com/angular/angular/compare/11.0.0-next.3...11.0.0-next.4)\n\n##### Bug Fixes\n\n-   **common:** correct and simplify typing of `KeyValuePipe` ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([4dfe0fa](https://togithub.com/angular/angular/commit/4dfe0fa))\n-   **common:** correct and simplify typing of AsyncPipe ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([5f815c0](https://togithub.com/angular/angular/commit/5f815c0))\n-   **common:** correct and simplify typing of I18nPluralPipe ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([3b919ef](https://togithub.com/angular/angular/commit/3b919ef))\n-   **common:** correct typing and implementation of `SlicePipe` ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([4744c22](https://togithub.com/angular/angular/commit/4744c22))\n-   **common:** let case conversion pipes accept type unions with `null` ([#&#8203;36259](https://togithub.com/angular/angular/issues/36259)) ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([c7d5555](https://togithub.com/angular/angular/commit/c7d5555))\n-   **compiler-cli:** perform DOM schema checks even in basic mode in g3 ([#&#8203;38943](https://togithub.com/angular/angular/issues/38943)) ([40975e0](https://togithub.com/angular/angular/commit/40975e0))\n-   **language-service:** hybrid visitor returns parent node of BoundAttribute ([#&#8203;38995](https://togithub.com/angular/angular/issues/38995)) ([323be39](https://togithub.com/angular/angular/commit/323be39))\n-   **packaging:** remove polyfills needed to run tests on IE9 and IE 10 ([#&#8203;38931](https://togithub.com/angular/angular/issues/38931)) ([4ca1c73](https://togithub.com/angular/angular/commit/4ca1c73))\n-   **platform-webworker:** remove platform-webworker and platform-webworker-dynamic ([#&#8203;38846](https://togithub.com/angular/angular/issues/38846)) ([93c3d8f](https://togithub.com/angular/angular/commit/93c3d8f))\n-   **router:** make relativeLinkResolution corrected by default ([#&#8203;25609](https://togithub.com/angular/angular/issues/25609)) ([837889f](https://togithub.com/angular/angular/commit/837889f)), closes [#&#8203;22394](https://togithub.com/angular/angular/issues/22394)\n\n##### Code Refactoring\n\n-   **router:** Adjust type of parameter in navigateByUrl and createUrlTree to be more accurate ([#&#8203;38227](https://togithub.com/angular/angular/issues/38227)) ([e4f4d18](https://togithub.com/angular/angular/commit/e4f4d18)), closes [#&#8203;18798](https://togithub.com/angular/angular/issues/18798)\n\n##### Features\n\n-   **common:** stricter types for DatePipe ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([daf8b7f](https://togithub.com/angular/angular/commit/daf8b7f))\n-   **common:** stricter types for number pipes ([#&#8203;37447](https://togithub.com/angular/angular/issues/37447)) ([7b2aac9](https://togithub.com/angular/angular/commit/7b2aac9))\n-   **compiler:** Add keySpan to Variable Node ([#&#8203;38965](https://togithub.com/angular/angular/issues/38965)) ([239968d](https://togithub.com/angular/angular/commit/239968d))\n-   **router:** Add `relativeLinkResolution` migration to update default value ([#&#8203;38698](https://togithub.com/angular/angular/issues/38698)) ([15ea811](https://togithub.com/angular/angular/commit/15ea811))\n\n##### BREAKING CHANGES\n\n-   **packaging:** In v10, IE 9, 10, and IE mobile support was deprecated. In v11, Angular framework removes IE 9,\n    10, and IE mobile support completely.\n    Supporting outdated browsers like these increases bundle size, code complexity, and test load,\n    and also requires time and effort that could be spent on improvements to the framework.\n    For example, fixing issues can be more difficult, as a straightforward fix for modern browsers\n    could break old ones that have quirks due to not receiving updates from vendors.\n-   **platform-webworker:** [@&#8203;angular/platform-webworker](https://togithub.com/angular/platform-webworker) and [@&#8203;angular/platform-webworker-dynamic](https://togithub.com/angular/platform-webworker-dynamic)\n    have been removed as they were deprecated in v8\n-   **common:** The `slice` pipe now returns `null` for the `undefined` input value,\n    which is consistent with the behavior of most pipes. If you rely on\n    `undefined` being the result in that case, you now need to check for it\n    explicitly.\n-   **common:** The typing of the `keyvalue` pipe has been fixed to report that for\n    input objects that have `number` keys, the result will contain the\n    string representation of the keys. This was already the case and the\n    code has simply been updated to reflect this. Please update the\n    consumers of the pipe output if they were relying on the incorrect\n    types. Note that this does not affect use cases where the input values\n    are `Map`s, so if you need to preserve `number`s, this is an effective\n    way.\n-   **common:** The signatures of the number pipes now explicitly state which types are\n    accepted. This should only cause issues in corner cases, as any other\n    values would result in runtime exceptions.\n-   **common:** The signature of the `date` pipe now explicitly states which types are\n    accepted. This should only cause issues in corner cases, as any other\n    values would result in runtime exceptions.\n-   **common:** The async pipe no longer claims to return `undefined` for an input that\n    was typed as `undefined`. Note that the code actually returned `null` on\n    `undefined` inputs. In the unlikely case you were relying on this,\n    please fix the typing of the consumers of the pipe output.\n-   **common:** The case conversion pipes no longer let falsy values through. They now\n    map both `null` and `undefined` to `null` and raise an exception on\n    invalid input (`0`, `false`, `NaN`) just like most \"common pipes\". If\n    your code required falsy values to pass through, you need to handle them\n    explicitly.\n-   **router:** While the new parameter types allow a variable of type\n    `NavigationExtras` to be passed in, they will not allow object literals,\n    as they may only specify known properties. They will also not accept\n    types that do not have properties in common with the ones in the `Pick`.\n    To fix this error, only specify properties from the `NavigationExtras` which are\n    actually used in the respective function calls or use a type assertion\n    on the object or variable: `as NavigationExtras`.\n-   **router:** This commit changes the default value of\n    `relativeLinkResolution` from `'legacy'` to `'default'`. If your\n    application previously used the default by not specifying a value in the\n    `ExtraOptions` and uses relative links when navigating from children of\n    empty path routes, you will need to update your `RouterModule` to\n    specifically specify `'legacy'` for `relativeLinkResolution`.\n    See <https://angular.io/api/router/ExtraOptions#relativeLinkResolution>\n    for more details.\n\n#### 10.1.4 (2020-09-30)\n\n##### Bug Fixes\n\n-   **compiler-cli:** enable [@&#8203;types](https://togithub.com/types) discovery in incremental rebuilds ([#&#8203;39011](https://togithub.com/angular/angular/issues/39011)) ([6e99427](https://togithub.com/angular/angular/commit/6e99427)), closes [#&#8203;38979](https://togithub.com/angular/angular/issues/38979)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18946","RelatedDescription":"Open PR \"build: update angular packages\" (#18946)"},{"Id":"712390512","IsPullRequest":true,"CreatedAt":"2020-10-01T00:59:02","Actor":"clydin","Number":"18945","RawContent":null,"Title":"Schematics CLI Refactoring","State":"open","Body":"See individual commits for details.","Url":"https://github.com/angular/angular-cli/pull/18945","RelatedDescription":"Open PR \"Schematics CLI Refactoring\" (#18945)"},{"Id":"712373087","IsPullRequest":true,"CreatedAt":"2020-10-01T00:09:48","Actor":"dgp1130","Number":"18944","RawContent":null,"Title":"Revert \"ci: disable lint check in the update test\"","State":"open","Body":"Re-enabling the lint check to merge once `11.0.0-next.4` is released.\r\n\r\nI'll leave this PR in the blocked state until the version is released and https://github.com/angular/angular/pull/39070 is merged. Once those have both happened, it should be safe to merge this as well.","Url":"https://github.com/angular/angular-cli/pull/18944","RelatedDescription":"Open PR \"Revert \"ci: disable lint check in the update test\"\" (#18944)"},{"Id":"712337968","IsPullRequest":true,"CreatedAt":"2020-09-30T23:53:54","Actor":"dgp1130","Number":"18943","RawContent":null,"Title":"ci: disable lint check in the update test","State":"closed","Body":"This is currently failing with FW 11.0.0-next.4 due to a migration using double quotes instead of single quotes. This is\r\nfor a beta release and the impact is relatively minor, so we've decided to just disable the test for now.","Url":"https://github.com/angular/angular-cli/pull/18943","RelatedDescription":"Closed or merged PR \"ci: disable lint check in the update test\" (#18943)"},{"Id":"711930593","IsPullRequest":false,"CreatedAt":"2020-09-30T19:55:23","Actor":"GlauberF","Number":"18939","RawContent":null,"Title":"Module parse failed: Unexpected token (1:0)","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n@angular/....\r\n\r\n### Description\r\nI'm getting an error, which for me has no logic.\r\nSince the form being written for this component is the same as the one written in others, however the error happens only in 1 component\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nhttps://we.tl/t-8aOej6GxM5\r\n\r\n## 🔥 Exception or Error\r\n```\r\nWARNING in ./src/@vimbo/components/dynamic-component/dynamic-component.html 1:0\r\nModule parse failed: Unexpected token (1:0)\r\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\r\n> <ng-container *ngIf=\"_components\">\r\n|     <ng-container *ngFor=\"let component of _components; trackBy: ( '_id' | trackByVimbo )\">\r\n|         <ng-template\r\n: Compiled successfully.\r\n```\r\n![Captura de Tela_selecionar área_20200527085159](https://user-images.githubusercontent.com/11314585/83015784-56c96880-9ff7-11ea-9fb7-26e3af7b1613.png)\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n```\r\nAngular CLI: 9.1.5\r\nNode: 12.16.3\r\nOS: linux x64\r\n\r\nAngular: 9.1.4\r\n... animations, common, compiler, core, forms, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.901.5\r\n@angular-devkit/build-angular      0.901.5\r\n@angular-devkit/build-optimizer    0.901.1\r\n@angular-devkit/build-webpack      0.901.5\r\n@angular-devkit/core               9.1.5\r\n@angular-devkit/schematics         9.1.5\r\n@angular/cdk                       9.2.2\r\n@angular/cli                       9.1.5\r\n@angular/compiler-cli              9.1.6\r\n@angular/flex-layout               9.0.0-beta.29\r\n@angular/language-service          9.1.6\r\n@angular/material                  9.2.2\r\n@angular/material-moment-adapter   9.2.2\r\n@ngtools/webpack                   9.1.5\r\n@nguniversal/builders              9.1.1\r\n@nguniversal/common                9.1.0\r\n@nguniversal/express-engine        9.1.0\r\n@schematics/angular                9.1.5\r\n@schematics/update                 0.901.5\r\nrxjs                               6.5.5\r\ntypescript                         3.8.3\r\nwebpack                            4.42.0\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/18939","RelatedDescription":"Closed issue \"Module parse failed: Unexpected token (1:0)\" (#18939)"},{"Id":"712203006","IsPullRequest":true,"CreatedAt":"2020-09-30T19:05:32","Actor":"clydin","Number":"18942","RawContent":null,"Title":"refactor(@angular-devkit/schematics-cli): remove unused rxjs dependency","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/18942","RelatedDescription":"Open PR \"refactor(@angular-devkit/schematics-cli): remove unused rxjs dependency\" (#18942)"},{"Id":"711709568","IsPullRequest":true,"CreatedAt":"2020-09-30T18:56:06","Actor":"alan-agius4","Number":"18931","RawContent":null,"Title":"feat(@schematics/angular): don't generate  special `package.json` and `no-any` when using `--strict`","State":"closed","Body":"\r\nFollowing feedback from the community, which showed a high number of users found it hard to work with the `no-any` lint rule and also the `sideEffects` package.json file. With DevRel we decided to remove both features when generating a strict workspace and/or application.","Url":"https://github.com/angular/angular-cli/pull/18931","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): don't generate  special `package.json` and `no-any` when using `--strict`\" (#18931)"},{"Id":"712121359","IsPullRequest":true,"CreatedAt":"2020-09-30T17:39:48","Actor":"clydin","Number":"18941","RawContent":null,"Title":"fix(@angular-devkit/build-webpack): avoid deprecation warning with Webpack 5 watch mode","State":"closed","Body":"With Webpack 5, passing the watch configuration option into the `webpack` factory function will cause the Webpack compiler to assume it should immediately start watching which requires a callback to be passed as well.  Since the execution of the compiler is handled later in the process, a callback at the compiler creation stage is undesirable and could result in potentially breaking changes to accomplish.","Url":"https://github.com/angular/angular-cli/pull/18941","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-webpack): avoid deprecation warning with Webpack 5 watch mode\" (#18941)"},{"Id":"711742768","IsPullRequest":true,"CreatedAt":"2020-09-30T17:34:10","Actor":"alan-agius4","Number":"18934","RawContent":null,"Title":"fix(@angular-devkit/build-angular): don't process stylesheets in extraction builder","State":"closed","Body":"\r\nWhen building an application for i18n extraction we are currently redundantly process components stylesheets. With this change we replace the components stylesheets with an empty string which helps reduce the i18n build time.","Url":"https://github.com/angular/angular-cli/pull/18934","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): don't process stylesheets in extraction builder\" (#18934)"},{"Id":"712055107","IsPullRequest":true,"CreatedAt":"2020-09-30T15:35:26","Actor":"clydin","Number":"18940","RawContent":null,"Title":"refactor(@angular/cli): discover/load workspace on startup","State":"open","Body":"Previously, the workspace configuration file was found and loaded by individual commands potentially multiple times.  This change moves the initial workspace location discovery and loading of the workspace to the CLI startup.  It also provides the workspace to each command so that the commands can reuse the already loaded and parsed workspace configuration.\r\nThis change will serve as a base to further refactor and consolidate workspace option usage.","Url":"https://github.com/angular/angular-cli/pull/18940","RelatedDescription":"Open PR \"refactor(@angular/cli): discover/load workspace on startup\" (#18940)"},{"Id":"711800154","IsPullRequest":true,"CreatedAt":"2020-09-30T14:17:07","Actor":"alan-agius4","Number":"18935","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): change errors and warnings messages","State":"closed","Body":"Sometimes the WARNING IN/ERROR IN can lead of ambiguous messages\r\n\r\n - Use `Warning` instead of `WARNING IN`\r\n-  Use `Error` instead of `Error In`","Url":"https://github.com/angular/angular-cli/pull/18935","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): change errors and warnings messages\" (#18935)"},{"Id":"711925870","IsPullRequest":true,"CreatedAt":"2020-09-30T13:00:02","Actor":"alan-agius4","Number":"18938","RawContent":null,"Title":"fix(@angular-devkit/build-angular): improve error message when html, head, body tags are not found","State":"open","Body":"\r\n\r\nCloses: #17019","Url":"https://github.com/angular/angular-cli/pull/18938","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): improve error message when html, head, body tags are not found\" (#18938)"},{"Id":"711805005","IsPullRequest":true,"CreatedAt":"2020-09-30T11:49:14","Actor":"alan-agius4","Number":"18936","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deprecated karma builder `environment` option","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/18936","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove deprecated karma builder `environment` option\" (#18936)"},{"Id":"711841290","IsPullRequest":true,"CreatedAt":"2020-09-30T11:30:14","Actor":"renovate[bot]","Number":"18937","RawContent":null,"Title":"build: update @types/webpack-sources to version ^2.0.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/webpack-sources](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | devDependencies | major | [`^1.4.2` -> `^2.0.0`](https://renovatebot.com/diffs/npm/@types%2fwebpack-sources/1.4.3/2.0.0) |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18937","RelatedDescription":"Closed or merged PR \"build: update @types/webpack-sources to version ^2.0.0\" (#18937)"},{"Id":"711726348","IsPullRequest":true,"CreatedAt":"2020-09-30T08:39:36","Actor":"renovate[bot]","Number":"18933","RawContent":null,"Title":"build: update enhanced-resolve to version 5.2.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [enhanced-resolve](https://togithub.com/webpack/enhanced-resolve) | dependencies | minor | [`5.1.0` -> `5.2.0`](https://renovatebot.com/diffs/npm/enhanced-resolve/5.1.0/5.2.0) |\n| [enhanced-resolve](https://togithub.com/webpack/enhanced-resolve) | devDependencies | minor | [`5.1.0` -> `5.2.0`](https://renovatebot.com/diffs/npm/enhanced-resolve/5.1.0/5.2.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/enhanced-resolve</summary>\n\n### [`v5.2.0`](https://togithub.com/webpack/enhanced-resolve/releases/v5.2.0)\n\n[Compare Source](https://togithub.com/webpack/enhanced-resolve/compare/v5.1.0...v5.2.0)\n\n##### Features\n\n-   add optional `lstat` to filesystem interface and CachedFileSystem\n-   support passing escaped `#` in requests\n-   try to resolve without fragment support to be able to handle `#` in paths\n-   `#` will be escaped in the resulting path\n\n##### Bugfixes\n\n-   fix handling of `options` argument in filesystem methods when using the SyncAsyncFileSystem decorator\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18933","RelatedDescription":"Closed or merged PR \"build: update enhanced-resolve to version 5.2.0\" (#18933)"},{"Id":"711708683","IsPullRequest":true,"CreatedAt":"2020-09-30T08:30:30","Actor":"alan-agius4","Number":"18930","RawContent":null,"Title":"docs: fix incorrect number of test suites","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/18930","RelatedDescription":"Closed or merged PR \"docs: fix incorrect number of test suites\" (#18930)"},{"Id":"711636940","IsPullRequest":true,"CreatedAt":"2020-09-30T07:56:41","Actor":"renovate[bot]","Number":"18929","RawContent":null,"Title":"build: update stylus-loader to version 4.0.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [stylus-loader](https://togithub.com/webpack-contrib/stylus-loader) | dependencies | major | [`3.0.2` -> `4.0.0`](https://renovatebot.com/diffs/npm/stylus-loader/3.0.2/4.0.0) |\n| [stylus-loader](https://togithub.com/webpack-contrib/stylus-loader) | devDependencies | major | [`3.0.2` -> `4.0.0`](https://renovatebot.com/diffs/npm/stylus-loader/3.0.2/4.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/stylus-loader</summary>\n\n### [`v4.0.0`](https://togithub.com/webpack-contrib/stylus-loader/blob/master/CHANGELOG.md#&#8203;400-httpsgithubcomwebpack-contribstylus-loadercomparev302v400-2020-09-29)\n\n[Compare Source](https://togithub.com/webpack-contrib/stylus-loader/compare/v3.0.2...v4.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   minimum require `Node.js` version is `10.13`, minimum require `webpack` version is `4`\n-   `stylus` options were moved to `stylusOptions`\n-   the default value for the `compress` option is `true` in the `production` mode\n-   the `resolveUrl` option is `{ nocheck: true }` by default\n-   sourcemaps contain absolute `sources` by default\n\n##### Features\n\n-   added loader options validation ([#&#8203;234](https://togithub.com/webpack-contrib/stylus-loader/issues/234)) ([6980095](https://togithub.com/webpack-contrib/stylus-loader/commit/6980095a97819a816fb8418d8252b4ee7779eec8))\n-   added webpack resolver ([#&#8203;231](https://togithub.com/webpack-contrib/stylus-loader/issues/231)) ([da566a6](https://togithub.com/webpack-contrib/stylus-loader/commit/da566a6da8047c5ffaae8b97f075f896e0152486))\n-   added `compress` option ([5278fb4](https://togithub.com/webpack-contrib/stylus-loader/commit/5278fb452a7411078839e83a8b045d516683b412))\n-   added `additionalData` option ([#&#8203;248](https://togithub.com/webpack-contrib/stylus-loader/issues/248)) ([9f781b7](https://togithub.com/webpack-contrib/stylus-loader/commit/9f781b706ab971abdf99440ee1b5d8157206638f))\n-   added `hoistAtrules` option ([#&#8203;276](https://togithub.com/webpack-contrib/stylus-loader/issues/276)) ([90ff982](https://togithub.com/webpack-contrib/stylus-loader/commit/90ff9822736943a2c03bdcd0d3a4740cd3811484))\n-   added `lineNumbers` option ([#&#8203;278](https://togithub.com/webpack-contrib/stylus-loader/issues/278)) ([637575c](https://togithub.com/webpack-contrib/stylus-loader/commit/637575c7a7a8e6889df639fa4d0f0255649823dd))\n-   added `webpackImporter` option ([#&#8203;244](https://togithub.com/webpack-contrib/stylus-loader/issues/244)) ([bbe232a](https://togithub.com/webpack-contrib/stylus-loader/commit/bbe232ad8d363f0d2cb7e55f85f10bd3cd8886e4))\n-   allow to pass `stylusOptions` using function ([028a759](https://togithub.com/webpack-contrib/stylus-loader/commit/028a7595e77b2532ee497df52ab8611de69dfd5f))\n-   allow to define raw parameter ([b5c75ed](https://togithub.com/webpack-contrib/stylus-loader/commit/b5c75edab99494cb1d3dfad496e409c2930e8027))\n\n##### Bug Fixes\n\n-   `binop` nodes ([#&#8203;262](https://togithub.com/webpack-contrib/stylus-loader/issues/262)) ([538f4ba](https://togithub.com/webpack-contrib/stylus-loader/commit/538f4ba8d50a97808f6ea97cfcbe569d0b853f46))\n-   sourcemap ([#&#8203;249](https://togithub.com/webpack-contrib/stylus-loader/issues/249)) ([7066583](https://togithub.com/webpack-contrib/stylus-loader/commit/7066583250e37547d2e666939537a48c92767924))\n-   glob ([#&#8203;279](https://togithub.com/webpack-contrib/stylus-loader/issues/279)) ([409877c](https://togithub.com/webpack-contrib/stylus-loader/commit/409877cc5f0ee57d4cc20588b1603539491a7f42))\n-   watching glob\n-   error reporting ([3233f86](https://togithub.com/webpack-contrib/stylus-loader/commit/3233f861d4e935e19fbede34127ca1a4c82997d8))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18929","RelatedDescription":"Closed or merged PR \"build: update stylus-loader to version 4.0.0\" (#18929)"},{"Id":"711723512","IsPullRequest":true,"CreatedAt":"2020-09-30T07:56:35","Actor":"alan-agius4","Number":"18932","RawContent":null,"Title":"build: update stylus-loader to version 4.0.0","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/18932","RelatedDescription":"Open PR \"build: update stylus-loader to version 4.0.0\" (#18932)"},{"Id":"711635606","IsPullRequest":true,"CreatedAt":"2020-09-30T07:08:55","Actor":"renovate[bot]","Number":"18928","RawContent":null,"Title":"build: update symbol-observable to version 2.0.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [symbol-observable](https://togithub.com/blesh/symbol-observable) | dependencies | patch | [`2.0.1` -> `2.0.2`](https://renovatebot.com/diffs/npm/symbol-observable/2.0.1/2.0.2) |\n| [symbol-observable](https://togithub.com/blesh/symbol-observable) | devDependencies | patch | [`2.0.1` -> `2.0.2`](https://renovatebot.com/diffs/npm/symbol-observable/2.0.1/2.0.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>blesh/symbol-observable</summary>\n\n### [`v2.0.2`](https://togithub.com/blesh/symbol-observable/blob/master/CHANGELOG.md#&#8203;202-httpsgithubcombleshsymbol-observablecompare201202-2020-09-29)\n\n[Compare Source](https://togithub.com/blesh/symbol-observable/compare/2.0.1...2.0.2)\n\n##### Bug Fixes\n\n-   **TypeScript** ponyfill types added ([10d2ec8](https://togithub.com/blesh/symbol-observable/commit/10d2ec8f0809ac9134be91378fc45c3578f675d4))\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18928","RelatedDescription":"Closed or merged PR \"build: update symbol-observable to version 2.0.2\" (#18928)"},{"Id":"711156706","IsPullRequest":true,"CreatedAt":"2020-09-29T14:17:08","Actor":"valorkin","Number":"18927","RawContent":null,"Title":"fix(@angular-devkit/build-webpack): fix ng build --watch with webpack 5 WIP","State":"open","Body":"fix ng build --watch with webpack\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/18927","RelatedDescription":"Open PR \"fix(@angular-devkit/build-webpack): fix ng build --watch with webpack 5 WIP\" (#18927)"},{"Id":"711077622","IsPullRequest":true,"CreatedAt":"2020-09-29T12:44:56","Actor":"alan-agius4","Number":"18926","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add font inliner","State":"open","Body":"This is the base functionality needed to inline Google fonts and Icons in HTML.\r\n\r\nThe processor does a couple of things:\r\n1. When support for older devices is needed where woff2 is not supported it will inline definitions for both woff1 and woff2\r\n2. Will remove comments and whitespaces when it's `minifyInlinedCSS` is enabled.\r\n3. Cache responses so to resuse the font response during watch mode.\r\n\r\nNote: this is still an internal implementation which users cannot leverage just yet.","Url":"https://github.com/angular/angular-cli/pull/18926","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): add font inliner\" (#18926)"},{"Id":"711000235","IsPullRequest":true,"CreatedAt":"2020-09-29T11:52:23","Actor":"renovate[bot]","Number":"18924","RawContent":null,"Title":"build: update open to version 7.3.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [open](https://togithub.com/sindresorhus/open) | dependencies | minor | [`7.2.1` -> `7.3.0`](https://renovatebot.com/diffs/npm/open/7.2.1/7.3.0) |\n| [open](https://togithub.com/sindresorhus/open) | devDependencies | minor | [`7.2.1` -> `7.3.0`](https://renovatebot.com/diffs/npm/open/7.2.1/7.3.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>sindresorhus/open</summary>\n\n### [`v7.3.0`](https://togithub.com/sindresorhus/open/releases/v7.3.0)\n\n[Compare Source](https://togithub.com/sindresorhus/open/compare/v7.2.1...v7.3.0)\n\n-   Support WSL configuration where Windows paths are not in PATH ([#&#8203;195](https://togithub.com/sindresorhus/open/issues/195))  [`be0f794`](https://togithub.com/sindresorhus/open/commit/be0f794)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18924","RelatedDescription":"Closed or merged PR \"build: update open to version 7.3.0\" (#18924)"},{"Id":"711006446","IsPullRequest":true,"CreatedAt":"2020-09-29T11:52:01","Actor":"valorkin","Number":"18925","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fix webpack 5 deprecation warning for chunk.push","State":"closed","Body":"should fix 18 webpack 5 deprecation warnings `[DEP_WEBPACK_DEPRECATION_ARRAY_TO_SET_PUSH] DeprecationWarning: chunk.files was changed from Array to Set (using Array method 'push' is deprecated)`","Url":"https://github.com/angular/angular-cli/pull/18925","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fix webpack 5 deprecation warning for chunk.push\" (#18925)"},{"Id":"710846548","IsPullRequest":true,"CreatedAt":"2020-09-29T11:51:38","Actor":"alan-agius4","Number":"18921","RawContent":null,"Title":"[PATCH] fix(@angular-devkit/build-angular): handle undefined descriptionFileData","State":"closed","Body":"Closes #18631\r\n\r\n(cherry picked from commit 09cfb29c0747f82db105acf738246536ce3dc3c3)\r\n\r\nPatch version of https://github.com/angular/angular-cli/pull/18922","Url":"https://github.com/angular/angular-cli/pull/18921","RelatedDescription":"Closed or merged PR \"[PATCH] fix(@angular-devkit/build-angular): handle undefined descriptionFileData\" (#18921)"},{"Id":"710846572","IsPullRequest":true,"CreatedAt":"2020-09-29T11:51:24","Actor":"alan-agius4","Number":"18922","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle undefined descriptionFileData","State":"closed","Body":"Closes #18631","Url":"https://github.com/angular/angular-cli/pull/18922","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): handle undefined descriptionFileData\" (#18922)"},{"Id":"710950819","IsPullRequest":true,"CreatedAt":"2020-09-29T09:54:02","Actor":"valorkin","Number":"18923","RawContent":null,"Title":"test: bump webpack version to rc.1 in e2e tests","State":"open","Body":"test: bump webpack version to rc.1 in e2e tests","Url":"https://github.com/angular/angular-cli/pull/18923","RelatedDescription":"Open PR \"test: bump webpack version to rc.1 in e2e tests\" (#18923)"},{"Id":"710793448","IsPullRequest":true,"CreatedAt":"2020-09-29T07:38:40","Actor":"renovate[bot]","Number":"18919","RawContent":null,"Title":"build: update terser to version 5.3.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.3.2` -> `5.3.3`](https://renovatebot.com/diffs/npm/terser/5.3.2/5.3.3) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.3.2` -> `5.3.3`](https://renovatebot.com/diffs/npm/terser/5.3.2/5.3.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.3.3`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v533)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.3.2...v5.3.3)\n\n-   `source-map` library has been updated, bringing memory usage and CPU time improvements when reading input source maps (the SourceMapConsumer is now WASM based).\n-   The `wrap_func_args` option now also wraps arrow functions, as opposed to only function expressions.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18919","RelatedDescription":"Closed or merged PR \"build: update terser to version 5.3.3\" (#18919)"},{"Id":"710767644","IsPullRequest":true,"CreatedAt":"2020-09-29T06:46:12","Actor":"renovate[bot]","Number":"18918","RawContent":null,"Title":"build: update enhanced-resolve to version 5.1.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [enhanced-resolve](https://togithub.com/webpack/enhanced-resolve) | dependencies | minor | [`5.0.0` -> `5.1.0`](https://renovatebot.com/diffs/npm/enhanced-resolve/5.0.0/5.1.0) |\n| [enhanced-resolve](https://togithub.com/webpack/enhanced-resolve) | devDependencies | minor | [`5.0.0` -> `5.1.0`](https://renovatebot.com/diffs/npm/enhanced-resolve/5.0.0/5.1.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/enhanced-resolve</summary>\n\n### [`v5.1.0`](https://togithub.com/webpack/enhanced-resolve/releases/v5.1.0)\n\n[Compare Source](https://togithub.com/webpack/enhanced-resolve/compare/v5.0.0...v5.1.0)\n\n### Features\n\n-   add `preferRelative` option\n\n### Bugfixes\n\n-   fix stack overflow crash in cached filesystem\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18918","RelatedDescription":"Closed or merged PR \"build: update enhanced-resolve to version 5.1.0\" (#18918)"},{"Id":"710795501","IsPullRequest":true,"CreatedAt":"2020-09-29T06:45:40","Actor":"renovate[bot]","Number":"18920","RawContent":null,"Title":"build: update postcss to version 8.1.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | major | [`7.0.32` -> `8.1.1`](https://renovatebot.com/diffs/npm/postcss/7.0.32/8.1.1) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | major | [`7.0.32` -> `8.1.1`](https://renovatebot.com/diffs/npm/postcss/7.0.32/8.1.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>postcss/postcss</summary>\n\n### [`v8.1.1`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;811)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.1.0...8.1.1)\n\n-   Update funding link.\n\n### [`v8.1.0`](https://togithub.com/postcss/postcss/releases/8.1.0)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.9...8.1.0)\n\n<img src=\"https://user-images.githubusercontent.com/19343/94352064-65b83a00-002e-11eb-9382-6f249a5c7c50.png\" align=\"right\" width=\"200\" height=\"200\" alt=\"Duke Gemory seal\">\n\nPostCSS 8.1 fixed new visitor API from the 8.0 release.\n\nWe fixed `Root` and `RootExit` re-calling on children's changes. And now visitors will visit the parent again if nested children were changed.\n\nWe added `Once` and `OnceExit` events, which will not be called again on node changes. You can use them to lint files or collect statistics:\n\n```js\nmodule.exports = {\n  postcssPlugin: 'postcss-linter',\n  OnceExit (root) {\n    lint(root)\n  }\n}\nmodule.exports.postcss = true\n```\n\nWe updated [**Migration guide**](https://evilmartians.com/chronicles/postcss-8-plugin-migration) according to new changes.\n\n### [`v8.0.9`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;809)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.8...8.0.9)\n\n-   Replace prototype in PostCSS 7 nodes instead of recreating them.\n-   Added missed `Transformer` to exported types (by Pierre-Marie Dartus).\n\n### [`v8.0.8`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;808)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.7...8.0.8)\n\n-   Fix `8.0.7` regression on PostCSS 7 nodes converting (by Adam Wathan).\n\n### [`v8.0.7`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;807)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.6...8.0.7)\n\n-   Fixed compatibility issue with mixin AST with PostCSS 7 and 8 nodes.\n-   Added migration guide translation to Chinese to the warning.\n\n### [`v8.0.6`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;806)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.5...8.0.6)\n\n-   Fixed child adding methods in `Container`.\n\n### [`v8.0.5`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;805)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.4...8.0.5)\n\n-   Update changelog.\n\n### [`v8.0.4`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;804)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.3...8.0.4)\n\n-   Fixed `Cannot read property 'line' of null` error.\n-   Fixed source map support for declarations.\n\n### [`v8.0.3`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;803)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.2...8.0.3)\n\n-   Fixed client-side bundling support.\n\n### [`v8.0.2`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;802)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.1...8.0.2)\n\n-   Fixed plugin packs support.\n\n### [`v8.0.1`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;801)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.0.0...8.0.1)\n\n-   Updated `Processor#version`.\n\n### [`v8.0.0`](https://togithub.com/postcss/postcss/releases/8.0.0)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/7.0.35...8.0.0)\n\n<img src=\"https://user-images.githubusercontent.com/19343/92548424-fb795a00-f224-11ea-80d7-4e8f739ae759.png\" align=\"right\" width=\"200\" height=\"200\" alt=\"President Ose seal\">\n\nPostCSS 8.0 brings new plugin API, `node_modules` size reduction, better source map support, and CSS parser improvements.\n\nCheck out [a day-by-day diary](https://twitter.com/PostCSS/status/1273368785592999936) of PostCSS 8.0 development process.\n\nSee Migration Guides [**for end-users**](https://togithub.com/postcss/postcss/wiki/PostCSS-8-for-end-users) and [**for plugin developers**](https://evilmartians.com/chronicles/postcss-8-plugin-migration).\n\n##### Thanks to Sponsors\n\nWith more than [100 M downloads per month](https://npm-stat.com/charts.html?package=postcss), it becomes hard to support PostCSS in free time. For instance, getting the 8.0 release ready took [4 months of work](https://twitter.com/PostCSS/status/1273368785592999936).\n\nThis release was possible thanks to out community. [**Tailwind CSS**](https://tailwindcss.com/), [**De Voorhoede**](https://www.voorhoede.nl/en/), [**InVision AG**](https://www.ivx.com/), [**Brainbow**](https://opencollective.com/brnbw), and [many individual contributions](https://opencollective.com/postcss#section-contributors).\n\n<a href=\"https://tailwindcss.com/\">\n  <img src=\"https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg\"\n       alt=\"Sponsored by Tailwind CSS\" width=\"273\" height=\"64\">\n</a>\n\nIf your company wants to support the sustainability of front-end infrastructure or just wants to give some love to PostCSS, you can join our supporters by:\n\n-   [**Tidelift**](https://tidelift.com/) with a Spotify-like subscription model and supporting all projects from your lock file.\n-   Direct donations in [**PostCSS & Autoprefixer Open Collective**](https://opencollective.com/postcss#section-contributors).\n\n##### Breaking Changes\n\nWe try to avoid any breaking changes for end-users:\n\n-   PostCSS 8 dropped **Node.js 6.x, 8.x, 11.x, and 13.x** versions support. All these versions have no security updates anymore.\n-   We now serve ES6+ sources in the npm package **without Babel** compilation. If you are creating tools like CodePen and put PostCSS into the client-side JS bundle, you may need to run Babel on `node_modules/postcss` for old browsers.\n-   We removed rarely used `postcss.vendor` API.\n\n##### New Plugin API\n\nThe biggest change in PostCSS 8 is a new plugin API. Thanks to [@&#8203;BondarenkoAlex](https://togithub.com/BondarenkoAlex) for big help in creating a new API.\n\n```js\nmodule.exports = () => {\n  return {\n    postcssPlugin: 'postcss-will-change',\n    Declaration: {\n      'will-change': (decl, { Declaration }) => {\n        decl.cloneBefore(\n          new Declaration({ prop: 'backface-visibility', value: 'hidden' })\n        )\n      }\n    }\n  }\n}\nmodule.exports.postcss = true\n```\n\nWe know that rewriting old plugins will take time, but the new API will improve the end-user’s experience and make life easier for plugin developers:\n\n-   With new API, all plugins can share a single scan of the CSS tree. It makes CSS processing up to **20% faster**.\n-   Because npm often duplicates dependencies, you may have many `postcss` duplicates in your `node_modules`. New API fixes this problem.\n-   Plugins will re-visit changed nodes to **reduce compatibility issues** between plugins. Now the order of plugins in your PostCSS config will be less important.\n-   New API is close to Babel’s visitor API.\n\nThese resources will help plugin developers in API migration:\n\n-   [**The Migration Guide**](https://evilmartians.com/chronicles/postcss-8-plugin-migration)\n-   [**Writing a PostCSS Plugin**](https://togithub.com/postcss/postcss/blob/master/docs/writing-a-plugin.md)\n-   We have a [**Gitter chat**](https://gitter.im/postcss/postcss) open for all questions related to plugin migration.\n\nPostCSS development guidelines were also changed:\n\n-   Now it is prohibited to create own AST on top of PostCSS AST classes since it could lead to [painful bugs](https://togithub.com/postcss/postcss/issues/1305) due to the usage private APIs.\n-   Plugins and runners must have `postcss` in `peerDependencies`.\n\n##### New Website without React\n\nPreviously PostCSS used [a React-based framework](https://togithub.com/phenomic/phenomic) for the project's website. Since we have a static website, we decided to migrate to a React-free framework and got good performance improvements:\n\n-   **360 → 20** ms for Max Potential First Input Delay\n-   **3.3 → 1.5** seconds for First CPU Idle\n-   **3.3 → 1.5** seconds for Time to Interactive\n\nCheck out [**postcss.org**](https://postcss.org/) and [**new API docs**](https://postcss.org/api/) that feature the awesome alchemy-inspired design by [@&#8203;okonet](https://togithub.com/okonet).\n\n<a href=\"https://postcss.org/\">\n<img src=\"https://user-images.githubusercontent.com/19343/92683881-153c9f00-f302-11ea-8355-e61d0f02776e.jpeg\" alt=\"PostCSS website performance results\" />\n</a>\n\nWe also removed Google Analytics tracking scripts and encourage other open source projects to be an example in caring about user’s privacy and performance.\n\n##### Parser Improvments\n\nDid you know that all examples below are valid CSS?\n\n```css\n:root {\n  --empty: ;\n  --JSON: [1, \"2\", {\"three\": {\"a\":1}}, [4]];\n  --javascript: function(rule) { console.log(rule) };\n}\n\n@&#8203;supports (--element(\".minwidth\", { \"minWidth\": 300 })) {\n  [--self] {\n    background: greenyellow;\n  }\n}\n```\n\nNow PostCSS parses even those rare edge cases correctly. Thanks to Tailwind CSS and Prettier teams for adding more cases to our [CSS parser tests collection](https://togithub.com/postcss/postcss-parser-tests/).\n\nNote that now `--roundMixin: { border-radius: 8px }` will be parsed as a `Declaration` with the `{ border-radius: 8px }` value.\n\n##### Better Source Map Support\n\nWe have added support for two new source map formats: [**Index map**](https://sourcemaps.info/spec.html#h.535es3xeprgt) and [**JSON**](https://togithub.com/postcss/postcss/issues/1371) (`data:application/json`).\n\nPostCSS 8 is now much closer to the source map spec. Thanks to the Google team for reports:\n\n-   We now [treat](https://togithub.com/postcss/postcss/issues/1347) `sources` in map **as URLs** instead of file paths.\n-   We now [resolve](https://togithub.com/postcss/postcss/issues/1348) `sources` **relative to map file**, not CSS file.\n\nA few source map APIs were added:\n\n-   `opts.maps.absolute = true` option for [absolute paths](https://togithub.com/postcss/postcss/issues/1352) in source map.\n-   `opts.maps.annotation = (file, root) => url` for a [dynamic path](https://togithub.com/postcss/postcss/issues/1324) to source map.\n-   `Node#origin()` now returns `position.url` in addition to `position.file` for compatibility with absolute URLs in source map’s `sources`.\n\n##### API Changes\n\nWe have added **ES modules** support and now we **export all classes** from the main entry:\n\n```js\nimport { CssSyntaxError, parse } from \"postcss\"\n```\n\n[@&#8203;graberzz](https://togithub.com/graberzz) added [`Node#source.offset`](https://togithub.com/postcss/postcss/issues/1325) in addition to `line` and `column`.\n\nCSS Custom Properties and Sass-like `$`-variables now have a special `Declaration#variable` mark:\n\n```js\nconst root = parse(`\n  :root {\n    --propery: value;\n  }\n  $variable: value\n`)\n\nroot.first.first.variable //=> true\nroot.last.variable //=> true\n```\n\n##### TypeScript\n\nPostCSS now has a first-class TypeScript support:\n\n-   We moved API docs from JSDoc to [**TypeDoc**](https://typedoc.org/). Check out our [**new API docs**](https://postcss.org/api/).\n-   We are using [**check-dts**](https://togithub.com/ai/check-dts) to test types with [special unit tests](https://togithub.com/postcss/postcss/blob/master/test/errors.ts).\n-   We keep types in separate files for better readability.\n-   With the new structure and test system, we fixed many small issues in types.\n\n##### Other Changes\n\n-   [Fixed calling `replaceWith`](https://togithub.com/postcss/postcss/pull/1368) with input replaced node (by [@&#8203;josephkaptur](https://togithub.com/josephkaptur)).\n-   Reduce dependencies by replacing `chalk` to [`colorette`](https://togithub.com/jorgebucaran/colorette).\n-   Added `Declaration#value` [auto-conversion](https://togithub.com/postcss/postcss/issues/1373) to string to prevent plugin’s bugs.\n-   Fixed building PostCSS with Rollup (by [@&#8203;MapGrid](https://togithub.com/MapGrid)) because of [circular dependencies](https://togithub.com/postcss/postcss/pull/1321).\n-   Moved unknown source from counter to random IDs: `<input css 9M4X8l>:10:6`.\n-   Removed docs from the npm package.\n\n### [`v7.0.35`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;7035)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/7.0.34...7.0.35)\n\n-   Add migration guide link to PostCSS 8 error text.\n\n### [`v7.0.34`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;7034)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/7.0.33...7.0.34)\n\n-   Fix compatibility with `postcss-scss` 2.\n\n### [`v7.0.33`](https://togithub.com/postcss/postcss/blob/master/CHANGELOG.md#&#8203;7033)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/7.0.32...7.0.33)\n\n-   Add error message for PostCSS 8 plugins.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/18920","RelatedDescription":"Closed or merged PR \"build: update postcss to version 8.1.1\" (#18920)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"712383629","IsPullRequest":true,"CreatedAt":"2020-10-01T00:38:56","Actor":"jelbourn","Number":"20695","RawContent":null,"Title":"fix(material/select): make VoiceOver read options for selects in dialogs","State":"open","Body":"Fixes #20694\r\n\r\n@zelliott noted that this issue was caused by `aria-modal` preventing\r\nVoiceOver from accessing the select's listbox overlay. He suggested\r\nusing `aria-owns` to re-parent the overlay element to the select\r\ntrigger. I tried this and it works great.","Url":"https://github.com/angular/components/pull/20695","RelatedDescription":"Open PR \"fix(material/select): make VoiceOver read options for selects in dialogs\" (#20695)"},{"Id":"712310551","IsPullRequest":false,"CreatedAt":"2020-09-30T22:02:46","Actor":"jelbourn","Number":"20694","RawContent":null,"Title":"VoiceOver doesn't read MatSelect option inside of a dialog","State":"open","Body":"StackBlitz: https://stackblitz.com/edit/angular-q2ppnn?file=src%2Fapp%2Fdialog-overview-example-dialog.html\r\n\r\nWhile `MatSelect` seems to work fine under normal circumstances, I can't get it to read the options when the select is inside of a dialog. I'm wondering if this might be a bug in VoiceOver, since it's surprising that the interaction would present different based on the dialog context. ","Url":"https://github.com/angular/components/issues/20694","RelatedDescription":"Open issue \"VoiceOver doesn't read MatSelect option inside of a dialog\" (#20694)"},{"Id":"710952608","IsPullRequest":true,"CreatedAt":"2020-09-30T21:05:59","Actor":"crisbeto","Number":"20678","RawContent":null,"Title":"test(material-experimental): add missing test coverage","State":"closed","Body":"Adds tests that were missing from the `mdc-menu`, `mdc-radio`, `mdc-table` and `mdc-tabs` modules.","Url":"https://github.com/angular/components/pull/20678","RelatedDescription":"Closed or merged PR \"test(material-experimental): add missing test coverage\" (#20678)"},{"Id":"710973667","IsPullRequest":true,"CreatedAt":"2020-09-30T21:04:48","Actor":"crisbeto","Number":"20679","RawContent":null,"Title":"fix(material-experimental/mdc-button): align public API with material/button","State":"closed","Body":"Aligns the signature of the `focus` method between the MDC and non-MDC buttons to make updates easier.","Url":"https://github.com/angular/components/pull/20679","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-button): align public API with material/button\" (#20679)"},{"Id":"711888972","IsPullRequest":true,"CreatedAt":"2020-09-30T21:03:16","Actor":"crisbeto","Number":"20690","RawContent":null,"Title":"fix(material-experimental/mdc-snack-bar): not aligned correctly on IE11","State":"closed","Body":"We were hitting a flexbox bug that was causing the snack bar container to collapse on IE11, shifting it off-center when using the `center` alignment and pushing it completely off-screen in the `end` alignment.","Url":"https://github.com/angular/components/pull/20690","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-snack-bar): not aligned correctly on IE11\" (#20690)"},{"Id":"711343673","IsPullRequest":true,"CreatedAt":"2020-09-30T21:02:40","Actor":"mmalerba","Number":"20681","RawContent":null,"Title":"refactor(cdk/schematics): change usages of whitelist in selector interfaces to fileTypeFilter","State":"closed","Body":"Same changes as #20619, but for the patch branch","Url":"https://github.com/angular/components/pull/20681","RelatedDescription":"Closed or merged PR \"refactor(cdk/schematics): change usages of whitelist in selector interfaces to fileTypeFilter\" (#20681)"},{"Id":"711431066","IsPullRequest":true,"CreatedAt":"2020-09-30T21:00:58","Actor":"bochalito","Number":"20683","RawContent":null,"Title":"fix(cdk/tree): collapse child nodes if top level collapses","State":"closed","Body":"Fixes a bug in the Angular CDK Tree examples where the children nodes\r\nare still visible when the top level node is collapsed. This is because\r\nthe `shouldRender()` method of the [cdk-flat-tree-example.ts](https://github.com/angular/components/blob/master/src/components-examples/cdk/tree/cdk-tree-flat/cdk-tree-flat-example.ts) is checking\r\nonly the parent of current node.\r\n\r\nFixes #20665","Url":"https://github.com/angular/components/pull/20683","RelatedDescription":"Closed or merged PR \"fix(cdk/tree): collapse child nodes if top level collapses\" (#20683)"},{"Id":"711738573","IsPullRequest":true,"CreatedAt":"2020-09-30T20:58:18","Actor":"crisbeto","Number":"20686","RawContent":null,"Title":"feat(material-experimental/mdc-paginator): add test harness","State":"closed","Body":"Sets up a test harness for the MDC-based paginator.","Url":"https://github.com/angular/components/pull/20686","RelatedDescription":"Closed or merged PR \"feat(material-experimental/mdc-paginator): add test harness\" (#20686)"},{"Id":"712266781","IsPullRequest":false,"CreatedAt":"2020-09-30T20:43:18","Actor":"ohohoohh","Number":"20693","RawContent":null,"Title":"cdk virtual scroll emit scroll event after visual scroll","State":"open","Body":"Reproduction:\r\nhttps://stackblitz.com/edit/angular-7xvdmw?file=src%2Fapp%2Fcdk-virtual-scroll-context-example.ts\r\n\r\nSteps to reproduce:\r\nPut a breakpoint on the two different console.log (one in normal div and one in elementScrolled())\r\nTry to scroll on the normal div and the one with virtual scroll\r\n\r\nActual Behavior\r\n- The normal div will stop at the breakpoint when you try to scroll, there it no visual scrolling at this time. The visual scrolling is after the scroll event.\r\n- The cdkScrollable emit the scroll event after the visual scrolling. Even I put a (scroll) in the html, I still got the event after the visual scroll.\r\n\r\nThe scroll event should emit before the visual scroll.\r\n\r\nEnvironment\r\nAngular: 10.0.0\r\nCDK/Material: 10.0.0\r\nBrowser(s): chrome\r\nOperating System (e.g. Windows, macOS, Ubuntu): windows","Url":"https://github.com/angular/components/issues/20693","RelatedDescription":"Open issue \"cdk virtual scroll emit scroll event after visual scroll\" (#20693)"},{"Id":"712265088","IsPullRequest":false,"CreatedAt":"2020-09-30T20:40:35","Actor":"guilhermetod","Number":"20692","RawContent":null,"Title":"feat(scroll-paginator): extract tab-header-paginator to a reusable paginator","State":"open","Body":"The tabs paginator is one of the main features in tabs, and its use makes much more sense than allowing an horizontal overflow.\r\n\r\nIt would be really nice to see the paginator available as a container for potentially scrollable content, like a filter chips row, steppers and even custom tab implementations. I googled to see if there was already a solution and found none, but realized that some other people are interested in this feature too at #12166, #15181 (specific to steppers) and [here](https://stackoverflow.com/questions/54345843/how-to-add-mat-tab-pagination-to-a-horizontal-mat-list).","Url":"https://github.com/angular/components/issues/20692","RelatedDescription":"Open issue \"feat(scroll-paginator): extract tab-header-paginator to a reusable paginator\" (#20692)"},{"Id":"712191268","IsPullRequest":false,"CreatedAt":"2020-09-30T20:35:29","Actor":"AdrianBorg","Number":"20691","RawContent":null,"Title":"bug(dateRangePicker): Date range picker minimum date is set one month ahead of value","State":"closed","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-aiay7d?file=src%2Fapp%2Fdate-range-picker-overview-example.ts\r\n\r\nSteps to reproduce:\r\n1. Add min date using base Javascript Date object\r\n2. Try scroll to the min date in the date picker\r\n \r\n#### Expected Behavior\r\n\r\nThe minimum date is from the minimum date specified onwards. \r\nIf a date initialised as `new Date(2020, 1, 10)` is set as the minimum date, the earliest date that can be selected is the 10th of Jan 2020.\r\n\r\n#### Actual Behavior\r\n\r\nThe minimum date is from a month after the date specified. \r\nIf a date initialised as `new Date(2020, 1, 10)` is set as the minimum date, the earliest date that can be selected is the 10th of Feb 2020.\r\n\r\n#### Environment\r\n\r\n- Angular: 10.1.4\r\n- CDK/Material: 10.2.3\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/20691","RelatedDescription":"Closed issue \"bug(dateRangePicker): Date range picker minimum date is set one month ahead of value\" (#20691)"},{"Id":"711864002","IsPullRequest":false,"CreatedAt":"2020-09-30T11:35:39","Actor":"siddhant-dev","Number":"20688","RawContent":null,"Title":"feat(COMPONENT): Time Picker. ","State":"closed","Body":"#### Feature Description\r\n\r\nTo have time picker clock similar what we have for Android library. \r\n\r\n#### Use Case\r\n\r\nTo apply WFH timing on my corporate system. ","Url":"https://github.com/angular/components/issues/20688","RelatedDescription":"Closed issue \"feat(COMPONENT): Time Picker. \" (#20688)"},{"Id":"711866243","IsPullRequest":false,"CreatedAt":"2020-09-30T11:29:27","Actor":"nrone","Number":"20689","RawContent":null,"Title":"bug(select): Unable to update selected items in select with ReactiveForms","State":"open","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-qak45m?file=src%2Fapp%2Fapp.component.ts\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Select multiple items in the MatSelect and see selected items listed below\r\n2. Click on the item/items to remove them from the form\r\n3. As seen, the selected items in the MatSelect are not updated to represent the new values in the form.\r\n\r\n  \r\n#### Expected Behavior\r\n\r\nAs of Angular 10 (i think, might be angular 9) this seems broken - prior to this - this have worked just fine.\r\nI have added a \"normal\" multiple select to show it works without the MatSelect.\r\nUseing setValue to the form works fine for MatInput as illustrated too.\r\n\r\n#### Actual Behavior\r\n\r\nThe MatSelect does not update it's values when the forms values is changed.\r\n\r\n#### Environment\r\n\r\n- @angular/cdk10.2.3\r\n- @angular/common10.1.3\r\n- @angular/core10.1.3\r\n- @angular/forms10.1.3\r\n- @angular/material10.2.3\r\n\r\n- Browser(s): Tested in Chrome@latests\r\n","Url":"https://github.com/angular/components/issues/20689","RelatedDescription":"Open issue \"bug(select): Unable to update selected items in select with ReactiveForms\" (#20689)"},{"Id":"711780439","IsPullRequest":false,"CreatedAt":"2020-09-30T09:19:29","Actor":"zbralex","Number":"20687","RawContent":null,"Title":"docs-bug(table): margins at anchors","State":"open","Body":"#### please, fix css margin property at anchors titles\r\n\r\n.docs-header-link header-link a {\r\ntext-decoration: none;\r\n /* margin-left: -30px; */ this property hide anchors at the page titles\r\n display: inline-block;\r\nvertical-align: middle;\r\n}\r\n\r\nIf margin value -30px I can't see anchor for navigate\r\n[https://material.angular.io/components/table/overview#filtering](url) \r\n\r\n\r\n\r\n**Affected documentation page:** [https://material.angular.io/components/table/overview](url)\r\n","Url":"https://github.com/angular/components/issues/20687","RelatedDescription":"Open issue \"docs-bug(table): margins at anchors\" (#20687)"},{"Id":"711669293","IsPullRequest":true,"CreatedAt":"2020-09-30T06:24:30","Actor":"mhansen","Number":"20685","RawContent":null,"Title":"mat-tooltip: ensure message is converted to string","State":"open","Body":"This ensures that the Closure Compiler doesn't optimise out the format-string stringification.\r\n\r\nI've only changed the setter's argument type, and have left `TooltipComponent.message` to be declared as string, with the reasoning that most users will want a type error if they try to set a non-string type.\r\n\r\nI'm trying to maintain the runtime API of this code in the face of type-based optimisations.\r\n\r\nFixes #20684","Url":"https://github.com/angular/components/pull/20685","RelatedDescription":"Open PR \"mat-tooltip: ensure message is converted to string\" (#20685)"},{"Id":"711663911","IsPullRequest":false,"CreatedAt":"2020-09-30T06:15:08","Actor":"mhansen","Number":"20684","RawContent":null,"Title":"bug(tooltip): Closure-compiled code skips toString() in Tooltip.message setter","State":"open","Body":"#### Background\r\n\r\nIn \r\nhttps://github.com/angular/components/blob/e99ca0ac9b0088d20d5d680092cd7ea5624934c0/src/material/tooltip/tooltip.ts#L212, we see:\r\n\r\n```ts\r\n  set message(value: string) {\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\r\n\r\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\r\n    this._message = value != null ? `${value}`.trim() : '';\r\n```\r\n\r\nThe intention of the code is to convert non-strings, then trim.\r\n\r\n#### Reproduction\r\n\r\nSteps to reproduce:\r\n\r\n1. Compile `MatTooltip` component with Closure Compiler (Google JS Compiler) with `--use_types_for_optimization`.\r\n2. Pass a non-string object to `MatTooltip.message`'s setter. (in the case causing the crash for me, someone was passing an `Error` object)\r\n\r\n#### Expected Behavior\r\n\r\nThe input gets coerced to a string, and the `.trim()` call succeeds.\r\n\r\n#### Actual Behavior\r\n\r\nClosure compiler optimises out the stringification, and the `.trim()` call fails with `trim is not a function`. Closure compiler outputs this code:\r\n\r\n```\r\nthis.mH = null != a ? a.trim() : \"\";\r\n```\r\n\r\nClosure compiler has optimised out the stringify step.\r\n\r\n#### Environment\r\n\r\n- Angular: Latest\r\n- CDK/Material: Latest\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS","Url":"https://github.com/angular/components/issues/20684","RelatedDescription":"Open issue \"bug(tooltip): Closure-compiled code skips toString() in Tooltip.message setter\" (#20684)"},{"Id":"711344041","IsPullRequest":false,"CreatedAt":"2020-09-29T18:19:07","Actor":"mfishma","Number":"20682","RawContent":null,"Title":"docs-bug(Input): email examples don't use email type","State":"open","Body":"#### Documentation Feedback\r\n\r\nThe examples for email input don't use the input `type` of `email`. There's a real opportunity to improve the user experiences of those who tend to copy and paste a lot of code from these examples. Would you add `type=\"email\"` to the `<input>` field in those examples, both in the overview and in the examples pages?\r\n\r\nIf using `type=\"email\"` causes problems, at least please provide at least one code example, or calling out why it doesn't play well with Material Angular.\r\n\r\n**Affected documentation pages:** \r\n* https://material.angular.io/components/input/examples\r\n* https://material.angular.io/components/input/overview","Url":"https://github.com/angular/components/issues/20682","RelatedDescription":"Open issue \"docs-bug(Input): email examples don't use email type\" (#20682)"},{"Id":"710604744","IsPullRequest":true,"CreatedAt":"2020-09-29T16:56:11","Actor":"annieyw","Number":"20674","RawContent":null,"Title":"release: update chagelog","State":"closed","Body":"add changelog from 10.2.1 to 10.2.3","Url":"https://github.com/angular/components/pull/20674","RelatedDescription":"Closed or merged PR \"release: update chagelog\" (#20674)"},{"Id":"711138317","IsPullRequest":false,"CreatedAt":"2020-09-29T13:55:55","Actor":"mik01aj","Number":"20680","RawContent":null,"Title":"mat-expansion-panel keeps contents of collapsed panels in DOM","State":"open","Body":"I found this while debugging rendering performance in my app. I have a large section that initially renders as a big mat-expansion-panel with all panels collapsed, except one. Here is a screenshot of mat-expansion-panel demo that sxhibits the same behavior:\r\n\r\n![4kunmyWShAfRwzA](https://user-images.githubusercontent.com/3027415/94566715-f24f3c00-026a-11eb-9c09-139061cd4181.png)\r\n\r\nI believe that the contents of the collapsed sections should be removed from the DOM to not slow down the application by rendering content that isn't currently visible.\r\n\r\nIf the reason for doing that was animations, then the animations probably need fixing - Angular supports keeping things in DOM while they are animating. Or maybe this was used, but the animation end never gets registered? I'm gussing :) In any case I believe it's a bug.\r\n\r\nCC @jelbourn \r\n\r\nPossilbly related (?): https://github.com/angular/components/issues/8287","Url":"https://github.com/angular/components/issues/20680","RelatedDescription":"Open issue \"mat-expansion-panel keeps contents of collapsed panels in DOM\" (#20680)"},{"Id":"710853730","IsPullRequest":false,"CreatedAt":"2020-09-29T12:26:24","Actor":"mackelito","Number":"20677","RawContent":null,"Title":"bug(mat-form-field): Cannot set property validator of [object Object] which has only a getter","State":"closed","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  see console on https://stackblitz.com/edit/angular-material2-issue-1chnbs?file=app%2Fcustom-input%2Fpostal-code.component.ts\r\n \r\n \r\n#### Expected Behavior\r\n\r\nNot expecting this error message :)","Url":"https://github.com/angular/components/issues/20677","RelatedDescription":"Closed issue \"bug(mat-form-field): Cannot set property validator of [object Object] which has only a getter\" (#20677)"},{"Id":"710808631","IsPullRequest":false,"CreatedAt":"2020-09-29T07:21:00","Actor":"Vladislav-wn","Number":"20676","RawContent":null,"Title":"Сomponent library","State":"closed","Body":"Very weak component library ...\r\nThere are few components, no basic settings, all sites look the same ...\r\n\r\nIt is even indecent to compare: \r\nVue:\r\nhttps://quasar.dev/\r\nhttps://vuetifyjs.com/en/\r\nReact:\r\nhttps://material-ui.com/","Url":"https://github.com/angular/components/issues/20676","RelatedDescription":"Closed issue \"Сomponent library\" (#20676)"},{"Id":"710708461","IsPullRequest":false,"CreatedAt":"2020-09-29T02:51:26","Actor":"troywweber7","Number":"20675","RawContent":null,"Title":"feat(schematics): allow for using @nrwl/nx generate on @angular/material add schematic","State":"open","Body":"#### Feature Description\r\n\r\n`@nrwl/nx` is becoming more popular for managing mono-repos. However, `nx` doesn't have an `nx add` command, only an `nx generate` command. It would be nice to have some sort of schematic alias that would allow the `ng add @angular/material` logic to be run within an `nx` mono-repo.\r\n\r\nThere are some hurdles to overcome. At the moment, you can only run `ng add @angular/material` if you chose angular instead of `nx` as your CLI. If you choose `nx` as your CLI, then it generates a `workspace.json` instead of an `angular.json`. You can kind of get around this by moving `workspace.json` to `angular.json`, installing the angular CLI, and then running the `ng add` command, but it would be nice if there was first-class support for usage in an `nx` mono-repo using the `nx` CLI.","Url":"https://github.com/angular/components/issues/20675","RelatedDescription":"Open issue \"feat(schematics): allow for using @nrwl/nx generate on @angular/material add schematic\" (#20675)"},{"Id":"710553094","IsPullRequest":true,"CreatedAt":"2020-09-28T21:06:47","Actor":"annieyw","Number":"20673","RawContent":null,"Title":"release: bump version to 10.2.3 w/ changelog","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/20673","RelatedDescription":"Closed or merged PR \"release: bump version to 10.2.3 w/ changelog\" (#20673)"},{"Id":"710544652","IsPullRequest":true,"CreatedAt":"2020-09-28T20:10:03","Actor":"bochalito","Number":"20672","RawContent":null,"Title":"fix(cdk/a11y): cdkAriaLive default to 'polite'","State":"open","Body":"Currently if a cdkAriaLive does not have an `Input` specified defaults\r\nto `off` value. Change default behavior to assign `polite` value to the\r\ndirective.\r\n\r\nFixes #11618","Url":"https://github.com/angular/components/pull/20672","RelatedDescription":"Open PR \"fix(cdk/a11y): cdkAriaLive default to 'polite'\" (#20672)"},{"Id":"710455838","IsPullRequest":false,"CreatedAt":"2020-09-28T17:25:01","Actor":"James-Vanguard","Number":"20670","RawContent":null,"Title":"onKeydown(event) requires deprecated attribute event.keyCode.","State":"open","Body":"\r\n<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/cdk/fesm2015/a11y.js\r\n\r\n\r\n### Is this a regression?\r\nNo, but the previous version supported the event.keyCode and event.which attributes, which were not deprecated before but are now\r\n\r\n\r\n### Description\r\nThe onKeydown(event) function \r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: \r\nShared screenshot of event being passed without event.keyCode and event.which, but with correct event.key and event.code values, to remove deprecation from our testing. Also shared file in question so you may example the function i'm referring to. Please advise if you need a more detailed example.\r\n\r\n## 🔥 Exception or Error\r\nIssues only occur when onKeydown() is called without an event.keyCode. No called error, it just returns without any of the expected change. event.KeyCode is deprecated and we do not wish to include it in our testing.\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 9.1.9\r\nNode: 12.3.0\r\nOS: win32 x64\r\n\r\nAngular: 9.1.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.901.9\r\n@angular-devkit/build-angular      0.901.9\r\n@angular-devkit/build-ng-packagr   0.901.9\r\n@angular-devkit/build-optimizer    0.901.9\r\n@angular-devkit/build-webpack      0.901.9\r\n@angular-devkit/core               9.1.9\r\n@angular-devkit/schematics         9.1.9\r\n@angular-devkit/schematics-cli     0.901.9\r\n@angular/cdk                       9.2.4\r\n@angular/material                  9.2.4\r\n@ngtools/webpack                   9.1.9\r\n@schematics/angular                9.1.9\r\n@schematics/schematics             0.901.9\r\n@schematics/update                 0.901.9\r\nng-packagr                         9.1.5\r\nrxjs                               6.5.5\r\ntypescript                         3.8.3\r\nwebpack                            4.42.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nAttachments\r\n\r\n[Enironment.txt](https://github.com/angular/angular/files/5293969/Enironment.txt)\r\n\r\n[a11y.zip](https://github.com/angular/angular/files/5293995/a11y.zip)\r\n![2020-09-28_13-00-44 onKeydown only takes event with deprecated value](https://user-images.githubusercontent.com/72038157/94465707-4fc18b00-018e-11eb-8674-8a96880e1dff.png)\r\n\r\n","Url":"https://github.com/angular/components/issues/20670","RelatedDescription":"Open issue \"onKeydown(event) requires deprecated attribute event.keyCode.\" (#20670)"},{"Id":"710354823","IsPullRequest":false,"CreatedAt":"2020-09-28T15:28:28","Actor":"dvanschepdael","Number":"20669","RawContent":null,"Title":"bug(COMPONENT): Toggle sidenav menu modifies tab-ink position","State":"closed","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-cddatp?file=src/app/app.component.html\r\n\r\nSteps to reproduce:\r\n1. Toggle menu button\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nThe mat-ink-bar in a mat-tab well centered\r\n\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nToggle the mat-drawer menu modifies the mat-ink-bar position in the mat-tab\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: ^10.0.9\r\n- CDK/Material: ^10.0.9\r\n- Browser(s): FireFox, Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/20669","RelatedDescription":"Closed issue \"bug(COMPONENT): Toggle sidenav menu modifies tab-ink position\" (#20669)"},{"Id":"710297382","IsPullRequest":true,"CreatedAt":"2020-09-28T14:07:42","Actor":"crisbeto","Number":"20668","RawContent":null,"Title":"fix(cdk/drag-drop): throw if drop list or handle are set on a non-element node","State":"open","Body":"Currently if a `cdkDropList` or `cdkDragHandle` is attached to a non-element node, a cryptic error is thrown. These changes add a proper error, similar to the one we have on `cdkDrag`.\r\n\r\nFixes #13540.","Url":"https://github.com/angular/components/pull/20668","RelatedDescription":"Open PR \"fix(cdk/drag-drop): throw if drop list or handle are set on a non-element node\" (#20668)"},{"Id":"710216856","IsPullRequest":true,"CreatedAt":"2020-09-28T12:20:26","Actor":"crisbeto","Number":"20667","RawContent":null,"Title":"fix(material/list): emit selectionChange event when selecting with ctrl + a","State":"open","Body":"Fixes that we weren't emitting the `selectionChange` event when the user toggles all options with the ctrl + a shortcut. Also replaces `MatSelectionListChange.option` with `options` which is an array of all options that were changed by the current event.\r\n\r\nFixes #15696.","Url":"https://github.com/angular/components/pull/20667","RelatedDescription":"Open PR \"fix(material/list): emit selectionChange event when selecting with ctrl + a\" (#20667)"},{"Id":"710152112","IsPullRequest":true,"CreatedAt":"2020-09-28T10:40:45","Actor":"crisbeto","Number":"20666","RawContent":null,"Title":"fix(material/datepicker): add close button for screen readers","State":"open","Body":"Adds an invisible close button for screen reader users that becomes visible when the user tabs into it.\r\n\r\n**Note:** there was a PR did was doing this already (#14429), but the feedback on it was never addressed and there hasn't been any activity on it in nearly 2 years.\r\n\r\nFixes #14379.\r\n\r\n![Angular_Material_-_Google_Chrome_2020-09-28_13-28-41](https://user-images.githubusercontent.com/4450522/94422852-5fda6a00-0190-11eb-9f80-db0a367f99d6.png)","Url":"https://github.com/angular/components/pull/20666","RelatedDescription":"Open PR \"fix(material/datepicker): add close button for screen readers\" (#20666)"},{"Id":"710464596","IsPullRequest":false,"CreatedAt":"2020-09-26T15:51:34","Actor":"roberto-github-ctrl","Number":"20671","RawContent":null,"Title":"I have the same issue even I've already imported MatRadioModule into my module","State":"open","Body":"I have the same issue while I've already imported MatRadioModule into my module\r\n\r\n_Originally posted by @meysam-mahmoodi in https://github.com/angular/material.angular.io/issues/308#issuecomment-571456153_","Url":"https://github.com/angular/components/issues/20671","RelatedDescription":"Open issue \"I have the same issue even I've already imported MatRadioModule into my module\" (#20671)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-01T05:30:04.4101304Z","RunDurationInMilliseconds":2307}