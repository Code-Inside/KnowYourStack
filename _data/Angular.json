{"Data":{"Angular-Issues":{"Issues":[{"Id":"1553985443","IsPullRequest":true,"CreatedAt":"2023-01-23T23:16:31","Actor":"JeanMeche","Number":"48815","RawContent":null,"Title":"docs: consistent table width with min-width 100%","State":"open","Body":"Let's have a consistent min-width of the tables across AIO to improve the look of the docs.\r\n\r\nfixes #43840\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/48815","RelatedDescription":"Open PR \"docs: consistent table width with min-width 100%\" (#48815)"},{"Id":"1553755227","IsPullRequest":true,"CreatedAt":"2023-01-23T20:29:11","Actor":"JeanMeche","Number":"48814","RawContent":null,"Title":"feature(common):  Support of optional keys for the KeyValue pipe","State":"open","Body":"This commit is extending the capabilities of the KeyValue pipe by allowing interfaces with optional keys.\r\n\r\nfixes #46867\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No","Url":"https://github.com/angular/angular/pull/48814","RelatedDescription":"Open PR \"feature(common):  Support of optional keys for the KeyValue pipe\" (#48814)"},{"Id":"1553697639","IsPullRequest":true,"CreatedAt":"2023-01-23T20:01:36","Actor":"basti-n","Number":"48813","RawContent":null,"Title":"feat(core): add optional support for typing SimpleChanges keys","State":"open","Body":"Allows consumers to opt-into strongly typing the keys of the SimpleChanges object. Non-breaking change which reverts to type string if no value for the generic is provided.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, implementing `OnChanges` forces us to access properties on the `SimpleChanges` object via square brackets due to the fact that the keys are typed as string. \r\n\r\n```js\r\nngOnChanges(changes: SimpleChanges: void {\r\n  // does not work\r\n  if(changes.age || changes.isLoading) {\r\n  }\r\n\r\n  // works\r\n  if(changes['age'])\r\n\r\n}\r\n```\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nIn order to increase type safety, without introducing a breaking change, implementors of `OnChanges` can now provide a set of keys for the `SimpleChanges` object.\r\n\r\n```js\r\nngOnChanges(changes: SimpleChanges<'age', 'isLoading'>): void {\r\n  // works\r\n  if(changes.age || changes.isLoading) {\r\n  }\r\n\r\n  // typescript complains\r\n  if(changes.test)\r\n}\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/48813","RelatedDescription":"Open PR \"feat(core): add optional support for typing SimpleChanges keys\" (#48813)"},{"Id":"1553689321","IsPullRequest":true,"CreatedAt":"2023-01-23T19:56:43","Actor":"JoostK","Number":"48812","RawContent":null,"Title":"fix(compiler-cli): resolve deprecation warning","State":"open","Body":"This commit updates one usage of the `ts.factory.createMethodDeclaration` API to avoid a deprecated function signature, which avoids logging a warning.","Url":"https://github.com/angular/angular/pull/48812","RelatedDescription":"Open PR \"fix(compiler-cli): resolve deprecation warning\" (#48812)"},{"Id":"1553641933","IsPullRequest":true,"CreatedAt":"2023-01-23T19:28:56","Actor":"red1code","Number":"48811","RawContent":null,"Title":"docs: making footer copyright year dynamic","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nAngular documentation website's footer copyright year is hard coded, so it shows the following `Super-powered by Google ©2010-2022`, but we are in 2023, so the years need to be `2010-2023`\r\n\r\nIssue Number: #48811\r\n\r\n\r\n## What is the new behavior?\r\nNow the footer will display the current copyright year dynamically, it will change every new year dynamically.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48811","RelatedDescription":"Open PR \"docs: making footer copyright year dynamic\" (#48811)"},{"Id":"1553332383","IsPullRequest":false,"CreatedAt":"2023-01-23T15:59:27","Actor":"matthieu-hm","Number":"48810","RawContent":null,"Title":"Can't get queryParams current value in resolver","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAssuming this code:\r\n```ts\r\nexport class GetQueryParamsResolver implements Resolve<any> {\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  resolve(): Observable<any> {\r\n    return this.route.queryParams.pipe(\r\n      tap((params) => console.log(params)),\r\n    );\r\n  }\r\n}\r\n```\r\n- On app init, no matter if there  is or not queryParams in the URL the console.log is always an empty object.\r\n- When navigating with routerLink the console.log is the previous value\r\n\r\nexemple:\r\n```\r\nhttp://localhost:4200/?page=3 // --> {}                 // should be { page: 3 }\r\nhttp://localhost:4200/?page=1 // --> { page: 3 }        // should be { page: 1 }\r\nhttp://localhost:4200/?page=2 // --> { page: 1 }        // should be { page: 2 }\r\nhttp://localhost:4200/?page=3 // --> { page: 2 }        // should be { page: 3 }\r\n```\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-klmdzz?file=src/app/resolvers/get-query-params.resolver.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.2\r\nNode: 18.13.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.2\r\n@angular-devkit/build-angular   15.1.2\r\n@angular-devkit/core            15.1.2\r\n@angular-devkit/schematics      15.1.2\r\n@angular/cli                    15.1.2\r\n@schematics/angular             15.1.2\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48810","RelatedDescription":"Closed issue \"Can't get queryParams current value in resolver\" (#48810)"},{"Id":"1553122586","IsPullRequest":true,"CreatedAt":"2023-01-23T13:42:01","Actor":"alan-agius4","Number":"48809","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"Closes #48437","Url":"https://github.com/angular/angular/pull/48809","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#48809)"},{"Id":"1551068919","IsPullRequest":true,"CreatedAt":"2023-01-23T13:39:36","Actor":"devversion","Number":"48797","RawContent":null,"Title":"build: update lock file to reflect latest `package.json`","State":"closed","Body":"It looks like running `yarn` in the repository results in some lock file changes. Likely due to a rebase\r\nand changes landing in the meanwhile, the lock file became a little outdated.\r\n\r\nThis commit uploads the lock file as `yarn` suggests.","Url":"https://github.com/angular/angular/pull/48797","RelatedDescription":"Closed or merged PR \"build: update lock file to reflect latest `package.json`\" (#48797)"},{"Id":"1553082337","IsPullRequest":false,"CreatedAt":"2023-01-23T13:24:02","Actor":"JeanMeche","Number":"48808","RawContent":null,"Title":"Dependency @angular/build-tooling points on a non-public commit","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Description\r\n\r\nWhile running unit tests of `compiler-cli`, I stumbled upon the following problem : \r\n\r\n```\r\nerror Couldn't find match for \"c70bd1895ed5b95dc97cb57f3ef2a0f045d1700c\" in \"refs/heads/main\" for \"https://github.com/angular/dev-infra-private-build-tooling-builds.git\".\r\n```\r\n\r\nThat's due to the devDependency @angular/build-tooling\" pointing on ` \"https://github.com/angular/dev-infra-private-build-tooling-builds.git#c70bd1895ed5b95dc97cb57f3ef2a0f045d1700c\"` where `c70bd1895ed5b95dc97cb57f3ef2a0f045d1700c` is not a public commit. \r\n\r\nIs there a solution for this ? \r\n","Url":"https://github.com/angular/angular/issues/48808","RelatedDescription":"Closed issue \"Dependency @angular/build-tooling points on a non-public commit\" (#48808)"},{"Id":"1552845999","IsPullRequest":false,"CreatedAt":"2023-01-23T10:24:16","Actor":"Davste93","Number":"48807","RawContent":null,"Title":"Route animation selectors stop working as soon as createComponent + attachView are called","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\n@angular/router@15.1.1 and earlier\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIf createComponent + attachView are called before bootstrap (example use case: to hydrate certain components on prerendered applications & keep performance good without killing TTI),\r\nthe routing animations stop behaving. \r\n\r\nThings I noticed:\r\n- It doesn't matter where the router.navigate is triggered from (hydrated component or not)\r\n- The \":leave\" selector stops working entirely, :enter still seems to work.\r\n- Calling appRef.deattachView(hydratedComponentView), - the routing animations start working again.\r\n\r\n\r\nI have created a repro where you can turn on & off  `simulateHydration` from the `environment.ts`. \r\nHow it works:\r\n\r\n- SimulateHydration = false: There is a simple routing slide animation.\r\n- SimulateHydration = true: The header component is attached using createComponent + attachView. The application can be bootstrapped at any time by clicking somewhere on the window, after which you will notice that the sliding animations when changing routes, no longer work. If you remove the { optional: true }, you will notice the error only with the querySelector not matching any leave elements only happens on this version.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular13-validation-cz7edf?file=src/environments/environment.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nAnimation does not work / behaves differently\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular 15.1.1.\r\nReplicated on Stackblitz.\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48807","RelatedDescription":"Open issue \"Route animation selectors stop working as soon as createComponent + attachView are called\" (#48807)"},{"Id":"1552324114","IsPullRequest":true,"CreatedAt":"2023-01-22T23:12:51","Actor":"Ivnosing","Number":"48804","RawContent":null,"Title":"fix(common): warn if using ngSrcset without a configured image loader","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #48655 \r\n\r\n\r\n## What is the new behavior?\r\n\r\nA warn is logged when the attribute `ngSrcset` is used but no loader is configured.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48804","RelatedDescription":"Open PR \"fix(common): warn if using ngSrcset without a configured image loader\" (#48804)"},{"Id":"1552087438","IsPullRequest":true,"CreatedAt":"2023-01-22T11:40:53","Actor":"yatho","Number":"48803","RawContent":null,"Title":"build: Fix version of image recommended Dockerfile","State":"open","Body":"Change tags used for recommended Dockerfile to permit to use devcontainers as new developper.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [X] Other... Please describe: Devcontainers doesn't work with recommended file currently\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: [48802](https://github.com/angular/angular/issues/48802)\r\n\r\n\r\n## What is the new behavior?\r\nFrom recommended Dockerfile, is it working correctly\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48803","RelatedDescription":"Open PR \"build: Fix version of image recommended Dockerfile\" (#48803)"},{"Id":"1552087227","IsPullRequest":false,"CreatedAt":"2023-01-22T11:40:01","Actor":"yatho","Number":"48802","RawContent":null,"Title":"Dockerfile recommended in .devcontainer folder isn't correct. cim/node:14-browsers isn't available anymore on Dockerhub","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIt is impossible with recommended Dockerfile to use devcontainers as development environnement.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48802","RelatedDescription":"Open issue \"Dockerfile recommended in .devcontainer folder isn't correct. cim/node:14-browsers isn't available anymore on Dockerhub\" (#48802)"},{"Id":"1552036712","IsPullRequest":true,"CreatedAt":"2023-01-22T08:03:24","Actor":"crisbeto","Number":"48801","RawContent":null,"Title":"fix(compiler): incorrect code when non-null assertion is used after a safe access","State":"open","Body":"Fixes that the expression converter was producing code that throws a runtime error if a non-null assertion is used as a part of a safe read, write or call.\r\n\r\nFixes #48742.","Url":"https://github.com/angular/angular/pull/48801","RelatedDescription":"Open PR \"fix(compiler): incorrect code when non-null assertion is used after a safe access\" (#48801)"},{"Id":"1551610425","IsPullRequest":false,"CreatedAt":"2023-01-21T00:12:27","Actor":"exequiel09","Number":"48800","RawContent":null,"Title":"Support passing image transformation via query parameters in Image directive via ImageKit loader","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nCurrently, the ImageKit loader for the `NgOptimizedImage` directive passes transformation in the middle of the URL which is the default way of providing transformation parameters in ImageKit:\r\n\r\nhttps://github.com/angular/angular/blob/b6e3840ed4f52b1fcf564cec642e63ddf358aab8/packages/common/src/directives/ng_optimized_image/image_loaders/imagekit_loader.ts#L43-L49\r\n\r\nBut, ImageKit also supports passing transformation parameters in the query parameters. Reference: https://docs.imagekit.io/features/image-transformations/resize-crop-and-other-transformations#example-all-padding-on-one-side\r\n\r\nI think if we support the query parameter version of ImageKit, developers who use ImageKit would be able to add more transformations via query URL and just add the width by default via the loader function just like what ImgIX loader does.\r\n\r\nhttps://github.com/angular/angular/blob/b6e3840ed4f52b1fcf564cec642e63ddf358aab8/packages/common/src/directives/ng_optimized_image/image_loaders/imgix_loader.ts#L40-L45\r\n\r\n### Proposed solution\r\n\r\nSupport both ways of providing transformation parameters in URL path or query parameter. I also tested, using both query and path part in an image and it doesn't work. So just give the developer the option to use one of the two via configuration options.\r\n\r\n### Alternatives considered\r\n\r\nFor now, just create custom loader for ImageKit that passes transformation via query parameters","Url":"https://github.com/angular/angular/issues/48800","RelatedDescription":"Open issue \"Support passing image transformation via query parameters in Image directive via ImageKit loader\" (#48800)"},{"Id":"1551069751","IsPullRequest":true,"CreatedAt":"2023-01-20T18:39:27","Actor":"devversion","Number":"48798","RawContent":null,"Title":"refactor(bazel): remove unnecessary banner stamping code","State":"closed","Body":"The `ng_package` rule supports replacing `0.0.0-PLACEHOLDER` in license files that are\r\ninserted as part of rollup. This requires additional logic to detect stamping, reading the\r\nstatus files and then replacing the placeholder.\r\n\r\nAll of this already handled as part of normal package substitutions and we can\r\nreplace this unnecessary complexity.\r\n\r\nSee: https://github.com/bazelbuild/rules_nodejs/blob/da50feb23f911b8b6932d31bbff284fb21b44b6c/internal/pkg_npm/pkg_npm.bzl#L195","Url":"https://github.com/angular/angular/pull/48798","RelatedDescription":"Closed or merged PR \"refactor(bazel): remove unnecessary banner stamping code\" (#48798)"},{"Id":"1551198298","IsPullRequest":true,"CreatedAt":"2023-01-20T17:15:41","Actor":"clydin","Number":"48799","RawContent":null,"Title":"refactor(localize): bundle message digest algorithm directly in npm package","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #48163\r\n\r\n\r\n## What is the new behavior?\r\nThe main entry point for the `@angular/localize` package no longer imports the `@angular/compiler` package and now has no external dependencies. This allows the main functionality of the package to be used without requiring any other Angular packages. Only the message digest algorithm implementation from the `@angular/compiler` package was being used and this code is now bundled directly into the final npm package for `@angular/localize`.\r\nThe `tooling` secondary entry point still leverages and requires Angular related packages (`@angular/compiler`/`@angular/compiler-cli`). However, the tooling functionality is not intended to be used and/or bundled in a web application.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48799","RelatedDescription":"Open PR \"refactor(localize): bundle message digest algorithm directly in npm package\" (#48799)"},{"Id":"1549903363","IsPullRequest":false,"CreatedAt":"2023-01-20T17:09:31","Actor":"yohny","Number":"48783","RawContent":null,"Title":"HashLocationStrategy returns empty string for LocationStrategy.getBasePath()","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen an app is build with `--base-href=/subfolder/` the LocationStrategy behaves inconsistent between `PathLocationStrategy` and `HashLocationStrategy`.\r\nI have an app that is build with above base-href configuration. In it there is an `AppComponent` with the following code to log relevant info:\r\n```ts\r\nexport class AppComponent {\r\n  constructor(platformLocation: PlatformLocation, locationStrategy: LocationStrategy) {\r\n    console.log(\"platformLocation.href:\", platformLocation.href);\r\n    console.log(\"platformLocation.getBaseHrefFromDOM():\", platformLocation.getBaseHrefFromDOM());\r\n    console.log(\"platformLocation.pathname:\", platformLocation.pathname);\r\n    console.log(\"locationStrategy.path():\", locationStrategy.path());\r\n    console.log(\"locationStrategy.getBaseHref():\", locationStrategy.getBaseHref());\r\n  }\r\n}\r\n```\r\nIf in `AppModule` the RouterModule is imported as `RouterModule.forRoot([])` and I visit `localhost:4200/subfolder/` the following is logged in console:\r\n```\r\nplatformLocation.href: http://localhost:4200/subfolder/\r\nplatformLocation.getBaseHrefFromDOM(): /subfolder/\r\nplatformLocation.pathname: /subfolder/\r\nlocationStrategy.path(): /subfolder/\r\nlocationStrategy.getBaseHref(): /subfolder/\r\n```\r\nwhich is what is to be expected. However when RouterModule import is changed to `RouterModule.forRoot([], {useHash: true})` and the same URL is visited, the log is as follows:\r\n```\r\nplatformLocation.href: http://localhost:4200/subfolder/\r\nplatformLocation.getBaseHrefFromDOM(): /subfolder/\r\nplatformLocation.pathname: /subfolder/\r\nlocationStrategy.path(): <empty string>\r\nlocationStrategy.getBaseHref(): <empty string>\r\n```\r\nNotice that `locationStrategy.getBaseHref()` returns an empty string, when one would expect that it would be `/subfolder/, same as in previous case as the same base-url is configured\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.1.2\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular packages 15.1.1\r\n```","Url":"https://github.com/angular/angular/issues/48783","RelatedDescription":"Closed issue \"HashLocationStrategy returns empty string for LocationStrategy.getBasePath()\" (#48783)"},{"Id":"1549730093","IsPullRequest":true,"CreatedAt":"2023-01-20T17:07:58","Actor":"alan-agius4","Number":"48782","RawContent":null,"Title":"docs: update supported Chrome version description","State":"closed","Body":"Update Chrome supported version description to match other browsers.\r\n","Url":"https://github.com/angular/angular/pull/48782","RelatedDescription":"Closed or merged PR \"docs: update supported Chrome version description\" (#48782)"},{"Id":"1550998867","IsPullRequest":true,"CreatedAt":"2023-01-20T15:03:34","Actor":"angular-robot","Number":"48796","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.","Url":"https://github.com/angular/angular/pull/48796","RelatedDescription":"Open PR \"docs: update events\" (#48796)"},{"Id":"1550828822","IsPullRequest":false,"CreatedAt":"2023-01-20T13:13:52","Actor":"honboubao","Number":"48794","RawContent":null,"Title":"ReactiveForms: no key check on strictly typed FormGroups when all keys are optional","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nMethods like setControl, addControl and removeControl on FormGroup do not check, if the given name parameter is a valid key in the FormGroup's generic type, when the generic type contains only optional keys.\r\n\r\n\r\nBug when all keys in generic type optional:\r\n```\r\nlet form!: FormGroup<{ a?: FormControl<string | null> }>;\r\nform.setControl(\"b\", new FormControl(\"x\")); // <-- unexpectedly no error\r\n```\r\n\r\nNormal usage/expected behaviour:\r\n\r\n```\r\nlet form!: FormGroup<{ a: FormControl<string | null> }>;\r\nform.setControl(\"b\", new FormControl(\"x\")); // <-- error as expected\r\n// error TS2769: No overload matches this call.\r\n//   Overload 1 of 2, '(name: \"a\", control: FormControl<string | null>, options?: { emitEvent?: boolean | undefined; } | undefined): void', gave the following error.\r\n//     Argument of type '\"b\"' is not assignable to parameter of type '\"a\"'.\r\n//   Overload 2 of 2, '(this: FormGroup<{ [key: string]: AbstractControl<any, any>; }>, name: string, control: AbstractControl<any, any>, options?: { emitEvent?: boolean | undefined; } | undefined): void', gave the following error.\r\n//     The 'this' context of type 'FormGroup<{ a: FormControl<string | null>; }>' is not assignable to method's 'this' of type 'FormGroup<{ [key: string]: AbstractControl<any, any>; }>'.\r\n//       Property 'a' is missing in type '{ [key: string]: AbstractControl<any, any>; }' but required in type '{ a: FormControl<string | null>; }'.\r\n```\r\n\r\n\r\nIt seems that the method signatures intended for untyped FormGroups takes over\r\n\r\n```\r\nremoveControl(this: FormGroup<{\r\n        [key: string]: AbstractControl<any>;\r\n    }>, name: string, options?: {\r\n        emitEvent?: boolean;\r\n    }): void;\r\n```\r\n\r\nas `FormGroup<{ a?: any }>` is assignable to `FormGroup<{ [key: string]: AbstractControl<any>; }` while `FormGroup<{ a: any }>` is not\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-xkdc6n?file=src%2Fapp%2Fapp.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 14.1.3\r\nNode: 16.17.1\r\nPackage Manager: npm 8.15.0\r\nOS: win32 x64\r\n\r\nAngular: 14.1.3\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1401.3\r\n@angular-devkit/build-angular   14.1.3\r\n@angular-devkit/core            14.1.3\r\n@angular-devkit/schematics      14.1.3\r\n@schematics/angular             14.1.3\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/48794","RelatedDescription":"Open issue \"ReactiveForms: no key check on strictly typed FormGroups when all keys are optional\" (#48794)"},{"Id":"1550787323","IsPullRequest":true,"CreatedAt":"2023-01-20T12:41:07","Actor":"JeanMeche","Number":"48793","RawContent":null,"Title":"fix(forms): Return non nullable control when using NonNullableFormBuilder ","State":"open","Body":"`NonNullableFormBuilder` should only return non nullable controls.\r\n\r\nfixes #48631\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/48793","RelatedDescription":"Open PR \"fix(forms): Return non nullable control when using NonNullableFormBuilder \" (#48793)"},{"Id":"1550633919","IsPullRequest":false,"CreatedAt":"2023-01-20T10:47:54","Actor":"anschm","Number":"48792","RawContent":null,"Title":"Component Class is undefined by using any other ClassDecorator on Component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI wrote a method subformComponentProviders which generates the providers for the control value accessor pattern. The method is implemented like:\r\n\r\n```\r\nexport function subformComponentProviders(component: any): {\r\n  provide: InjectionToken<ControlValueAccessor>;\r\n  useExisting: Type<any>;\r\n  multi?: boolean;\r\n}[] {\r\n  return [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => component),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => component),\r\n      multi: true\r\n    }\r\n  ];\r\n}\r\n```\r\nThe method is used like:\r\n```\r\n@Test()\r\n@Component({\r\n  selector: 'chips-autocomplete-input',\r\n  templateUrl: './chips-autocomplete-input.component.html',\r\n  styleUrls: ['./chips-autocomplete-input.component.scss'],\r\n  providers: subformComponentProviders(ChipsAutocompleteInputComponent),\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n```\r\nAfter migrating to angular 15.1.1 in my case the component class parameter from the method subformComponentProviders is undefined if I put another CLassDecorator on my component. Example for class decorator:\r\n```\r\nfunction Test(options: any): ClassDecorator {\r\n  return () => {\r\n    console.log(options);\r\n  };\r\n}\r\n```\r\nIf I delete @Test() the method subformComponentProviders gets the component class.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 15.1.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48792","RelatedDescription":"Closed issue \"Component Class is undefined by using any other ClassDecorator on Component\" (#48792)"},{"Id":"1550467379","IsPullRequest":false,"CreatedAt":"2023-01-20T10:22:28","Actor":"Asphiii","Number":"48788","RawContent":null,"Title":"Radiobox - Attribute 'checked'  is not being displayed properly if using [formControl] instead of formControlName","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThere's something wrong with [formControl] binding. There's two methods of applying formControl to <input> element - via formControlName and [formControl]. I decided to use [formControl] method and I've found weird behavior, where [formControl] marks all radioboxes with the same value. \r\n\r\n![radiobox](https://user-images.githubusercontent.com/32648528/213646478-abe54f9c-19df-485a-b06b-c94aa1ebb58d.png)\r\n\r\nAs you see I clicked once 'false' option inside both of the forms. In formControlName method it works as intended - it marks the option only inside one of the radioboxes. The situation differs in the second one, where it doesn't change the value in reactiveForms(radioBoxFCTwo is null), but still it is marked as checked in the html <input>.\r\n\r\nThe bug can be reproduced in Angular 14(local) and 15(stackblitz); didn't check the rest of the versions.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular-ivy-yaz8gp.stackblitz.io\n\n### Please provide the exception or error you saw\n\n```true\nThere's no error in the console\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.6\r\nNode: 16.15.0\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 14.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.6\r\n@angular-devkit/build-angular   14.2.6\r\n@angular-devkit/core            14.2.6\r\n@angular-devkit/schematics      14.2.6\r\n@angular/cdk                    14.2.5\r\n@angular/cdk-experimental       14.2.5\r\n@angular/cli                    14.2.6\r\n@schematics/angular             14.2.6\r\nrxjs                            6.5.5\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\nTS Code for repro:\r\n\r\n```\r\n    formGroupOne = null;\r\n    formGroupTwo = null;\r\n    subscriptions = {\r\n      formOne: null,\r\n      formTwo: null\r\n    }\r\n  \r\n    ngOnInit() {\r\n      this.formGroupOne = new FormGroup({\r\n        radioBox: new FormControl(null, []),\r\n        radioBoxTwo: new FormControl(null, []),\r\n      });\r\n  \r\n      this.formGroupTwo = new FormGroup({\r\n        radioBoxFC: new FormControl(null, []),\r\n        radioBoxFCTwo: new FormControl(null, []),\r\n      });\r\n  \r\n      this.subscriptions.formOne = this.formGroupOne.valueChanges.subscribe((res) => {\r\n        console.log(`FG1: radioBox: ${res?.radioBox}, radioBoxTwo: ${res?.radioBoxTwo}`)\r\n      });\r\n      this.subscriptions.formTwo = this.formGroupTwo.valueChanges.subscribe((res) => {\r\n        console.log(`FG2: radioBoxFC: ${res?.radioBoxFC}, radioBoxFCTwo: ${res?.radioBoxFCTwo}`)\r\n      })\r\n    }\r\n  \r\n    getFormControl(name) {\r\n      return this.formGroupTwo.get(name);\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n      this.subscriptions.formOne.unsubscribe();\r\n      this.subscriptions.formTwo.unsubscribe();\r\n    }\r\n```\r\n\r\n  \r\n  HTML code:\r\n```\r\n <div [formGroup]=\"formGroupOne\" style=\"display: flex; gap: 12px\">\r\n  <div>\r\n    <p>FieldName: radioBox</p>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"false\" formControlName=\"radioBox\" id=\"radio_one_false\"/>\r\n      <label for=\"radio_one_false\">false</label>\r\n    </div>\r\n    <div>\r\n      \r\n      <input type=\"radio\" [value]=\"true\" formControlName=\"radioBox\" id=\"radio_one_true\"/>\r\n      <label for=\"radio_one_true\">true</label>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <p>FieldName: radioBoxTwo</p>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"false\" formControlName=\"radioBoxTwo\" id=\"radio_two_false\"/>\r\n      <label for=\"radio_two_false\">false</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"true\" formControlName=\"radioBoxTwo\" id=\"radio_two_true\"/>\r\n      <label for=\"radio_two_true\">true</label>\r\n    </div>\r\n  </div>  \r\n</div>\r\n<br>\r\n<div [formGroup]=\"formGroupTwo\" style=\"display: flex; gap: 12px\">\r\n  <div>\r\n    <p>FieldName: radioBoxFC</p>\r\n    <div>\r\n     <input type=\"radio\" [value]=\"false\" [formControl]=\"getFormControl('radioBoxFC')\" id=\"radioBoxFC_one_false\"/>\r\n     <label for=\"radioBoxFC_one_false\">false</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"true\" [formControl]=\"getFormControl('radioBoxFC')\" id=\"radioBoxFC_one_true\"/>\r\n      <label for=\"radioBoxFC_one_true\">true</label>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <p>FieldName: radioBoxFCTwo</p>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"false\" [formControl]=\"getFormControl('radioBoxFCTwo')\" id=\"radioBoxFC_two_false\"/>\r\n      <label for=\"radioBoxFC_two_false\">false</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"radio\" [value]=\"true\" [formControl]=\"getFormControl('radioBoxFCTwo')\" id=\"radioBoxFC_two_true\"/>\r\n      <label for=\"radioBoxFC_two_true\">true</label>\r\n    </div>\r\n  </div>  \r\n</div>\r\n```","Url":"https://github.com/angular/angular/issues/48788","RelatedDescription":"Closed issue \"Radiobox - Attribute 'checked'  is not being displayed properly if using [formControl] instead of formControlName\" (#48788)"},{"Id":"1550511520","IsPullRequest":true,"CreatedAt":"2023-01-20T09:01:44","Actor":"crisbeto","Number":"48790","RawContent":null,"Title":"Standalone ng generate schematic prerequisites and step one","State":"open","Body":"These changes add some of the prerequisites for the first step of the standalone `ng generate` schematic, as well as the first step itself. There's more info in the individual commits, but here's a high-level overview.\r\n\r\n1. Allows aliases to be specified in the `ImportManager`.\r\n2. Some minor improvements to our schematic utilities.\r\n3. Boilerplate for `ng generate` schematics in `core`.\r\n4. First mode of the `ng generate @angular/core:standalone` schematic. There will be two more that are going to be added in follow-up PRs.","Url":"https://github.com/angular/angular/pull/48790","RelatedDescription":"Open PR \"Standalone ng generate schematic prerequisites and step one\" (#48790)"},{"Id":"1550430658","IsPullRequest":false,"CreatedAt":"2023-01-20T07:41:44","Actor":"anjunar","Number":"48787","RawContent":null,"Title":"ViewChild(MyDirective) results in undefined when MyDirective is declared in Sub-Module","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen my-directive is used in app-root and the directive is declared in a sub-module (library) the viewchild is undefined.\r\n\r\nWhen declaring a directive in the same module where the app-root is declared everything works.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://anjunar.github.io/angular-simplicity/dist/documentation-app\r\n(The Console shows undefined and Xr)\r\n\r\nhttps://github.com/anjunar/angular-simplicity/blob/master/projects/documentation-app/src/app/app.component.ts\r\n(Here viewport and test as ViewChild, with console out)\r\n\r\nhttps://github.com/anjunar/angular-simplicity/blob/master/projects/documentation-app/src/app/app.component.html\r\n(the as-viewport and app-test at the end)\r\n\r\nhttps://github.com/anjunar/angular-simplicity/blob/master/projects/angular-simplicity/src/lib/as-viewport/as-\r\nas-viewport.directive.ts\r\n\r\nhttps://github.com/anjunar/angular-simplicity/blob/master/projects/documentation-app/src/app/app-test/app-test.component.ts\r\napp-app-test.directive.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n@ViewChild(MyDirective) directive! : MyDirective is undefined\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\nAngular CLI: 15.1.1\r\nNode: 19.4.0 (Unsupported)\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.1\r\n@angular-devkit/build-angular   15.1.1\r\n@angular-devkit/core            15.1.1\r\n@angular-devkit/schematics      15.1.1\r\n@angular/cli                    15.1.1\r\n@schematics/angular             15.1.1\r\nng-packagr                      15.1.1\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\r\n\r\n\r\n### Anything else?","Url":"https://github.com/angular/angular/issues/48787","RelatedDescription":"Open issue \"ViewChild(MyDirective) results in undefined when MyDirective is declared in Sub-Module\" (#48787)"},{"Id":"1550232892","IsPullRequest":false,"CreatedAt":"2023-01-20T02:41:58","Actor":"Saznatalia","Number":"48786","RawContent":null,"Title":"i18n: No translation found for \"id\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlocalize\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI am trying to implement runtime translations and am encountering warnings for some strings that state \"No translation found for 'id'.\" I am trying to avoid using custom ids for this project as it is large and I would like to rely on built-in message ids.\r\n\r\nI am using the command ng extract-i18n --format=xliff2 --out-file src/assets/i18n/translations.en-us.xlf to generate a translation file, which I then convert to JSON using a similar method described in this Github issue: https://github.com/angular/angular/issues/38953. I then use the loadTranslations() method to load the file.\r\n\r\nMy understanding is that when I run ng extract-i18n, the computeDigest() function generates the message id. When the application starts, loadTranslations() calls computeMsgId(), which generates message id in the same format as that rendered to \"simple JSON\" translation files when extracting messages. However, in my case, the extract generates different ids for the same string in xliff2 vs JSON formats, which is causing the warnings. (Not for all strings, but for some).\r\n\r\nI have created a JSON object from xliff 2 extracted messages and compared it to the one extracted with JSON, and there were a couple of discrepancies: \r\n\r\n1.\r\nFor the next template:\r\n```html\r\n<p>text {{ test1 }}</p>\r\n<p>text {{ test2 }}</p>\r\n```\r\n\r\nxliff2 extractor produced two records, while json extractor created only one record\r\n\r\n2.\r\nxliff 2 generates a different id compared to JSON for the same string in some cases. I have around 300 differences out of approx. 4500 strings. I looked through closed problems and saw that there was a problem with mapping for xliff 1.2 and some legacy id migration, but I am working with Angular 14 and xliff 2 format so I hoped this shouldn't be a problem anymore...\r\n\r\nAt this stage I can only see 2 solutions to my problem:\r\n1. Using simple JSON format during extract, which is not ideal for the translation team as it doesn't have context implemented.\r\n2. Using custom ids, which I am trying to avoid as it would require another pass through the code base.\r\n\r\nCould someone please verify that at this stage there is nothing else that can be done?\r\nIt just seems odd that the ids are different... \r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\ntemplate.html:15 No translation found for \"7324656422629038198\" (\" No results found yet. \").\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.5\r\nNode: 16.18.0\r\nPackage Manager: npm 9.2.0 \r\nOS: win32 x64\r\n\r\nAngular: 14.2.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------       \r\n@angular-devkit/architect       0.1402.5\r\n@angular-devkit/build-angular   14.2.5\r\n@angular-devkit/core            14.2.5\r\n@angular-devkit/schematics      14.2.5\r\n@angular/cdk                    14.2.4\r\n@angular/material               14.2.4\r\n@schematics/angular             14.2.5\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48786","RelatedDescription":"Open issue \"i18n: No translation found for \"id\"\" (#48786)"},{"Id":"1549924507","IsPullRequest":true,"CreatedAt":"2023-01-19T20:49:53","Actor":"JeanMeche","Number":"48785","RawContent":null,"Title":"docs: Use of $any() has no runtime incidence.","State":"open","Body":"Some users are woried about `$any()` as function calls are to be avoided in templates. This sentence clarifies the situation.\r\n\r\nfixes #48781","Url":"https://github.com/angular/angular/pull/48785","RelatedDescription":"Open PR \"docs: Use of $any() has no runtime incidence.\" (#48785)"},{"Id":"1549914039","IsPullRequest":true,"CreatedAt":"2023-01-19T20:48:25","Actor":"JeanMeche","Number":"48784","RawContent":null,"Title":"docs: Use of $any() has no runtime incidence.","State":"closed","Body":"Some users are woried about `$any()` as function calls are to be avoided in templates. This sentence clarifies the situation.\r\n\r\nfixes #48781","Url":"https://github.com/angular/angular/pull/48784","RelatedDescription":"Closed or merged PR \"docs: Use of $any() has no runtime incidence.\" (#48784)"},{"Id":"1549669550","IsPullRequest":false,"CreatedAt":"2023-01-19T17:59:50","Actor":"filipvh","Number":"48781","RawContent":null,"Title":"$any() type cast function","State":"open","Body":"### Describe the problem that you experienced\n\nNormally you try to avoid function/method calls when inside the template (with exception being in the action expression) because angular cannot know for sure the function/method is pure. For that reason it is preferred to use a pipe where one needs to keep it pure or define it is not.\r\n\r\nIn this documentation the $any() function is called. It is not indicated if this will have any effect on performance, as it seems to have the issue I talk about in the paragraph above. OR is this a \"special method\" where angular knows it pure and thus has no impact on performance.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/template-expression-operators#any-type-cast-function\n\n### Describe what you were looking for in the documentation\n\nAn indication if (or not) using this method has impact on performance due to it being a method vs. a pipe.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/48781","RelatedDescription":"Open issue \"$any() type cast function\" (#48781)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1553438541","IsPullRequest":false,"CreatedAt":"2023-01-23T16:58:57","Actor":"tmcconechy","Number":"24592","RawContent":null,"Title":"Add script config for adding scripts as type=\"module\"","State":"open","Body":"### Command\r\n\r\nbuild, config\r\n\r\n### Description\r\n\r\nLooking at the script config https://angular.io/guide/workspace-config#style-script-config there does not seem to be any way to add the scripts as type=\"module\" for esm.\r\n\r\nIf the third party script is delivered as an Es Module it cant be imported in the angular.json.\r\n\r\n![Screenshot 2023-01-23 at 11 30 28 AM](https://user-images.githubusercontent.com/814283/214100400-3b461945-3870-4386-964d-e4c9e70cfaae.png)\r\n\r\nSeems like there is some thought about this https://github.com/angular/angular-cli/blob/d086d170565304f82494745b1dd626f01093a512/packages/angular_devkit/build_angular/src/utils/index-file/augment-index-html.ts#L94\r\n\r\nThis comment may be the one of why it won't add type=\"module\"https://github.com/angular/angular-cli/blob/d086d170565304f82494745b1dd626f01093a512/packages/angular_devkit/build_angular/src/utils/index-file/augment-index-html.ts#L79 -> but still think it should be possible.\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nAdd a new setting to the script config, something like.\r\n\r\n```\r\n\"scripts\": [\r\n  {\r\n    \"input\": \"node_modules/third-party/esm-script.js\", \r\n    \"inject\": true,\r\n    \"scriptType\": \"module\"\r\n   }\r\n],\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\n- can not use angular.json and\r\n- manually add a script tag or\r\n- just import the module in the Angular module code","Url":"https://github.com/angular/angular-cli/issues/24592","RelatedDescription":"Open issue \"Add script config for adding scripts as type=\"module\"\" (#24592)"},{"Id":"1551826291","IsPullRequest":true,"CreatedAt":"2023-01-21T15:12:48","Actor":"angular-robot","Number":"24590","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.20.7` -> `7.20.13`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.20.7/7.20.13) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.20.7` -> `7.20.13`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.20.7/7.20.13) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.48.2` -> `5.49.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.48.2/5.49.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`5.48.2` -> `5.49.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.48.2/5.49.0) |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.3` -> `0.17.4`](https://renovatebot.com/diffs/npm/esbuild/0.17.3/0.17.4) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.3` -> `0.17.4`](https://renovatebot.com/diffs/npm/esbuild/0.17.3/0.17.4) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.3` -> `0.17.4`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.3/0.17.4) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.3` -> `0.17.4`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.3/0.17.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.20.13`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72013-2023-01-21)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.20.7...v7.20.13)\n\n##### :bug: Bug Fix\n\n-   `babel-helpers`, `babel-plugin-proposal-decorators`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15332](https://togithub.com/babel/babel/pull/15332) Ensure class decorators can access decorated non-static members ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15349](https://togithub.com/babel/babel/pull/15349) fix: Preserve `import {type T} from 'x'` when `onlyRemoveTypeImports:true` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n    -   [#&#8203;15344](https://togithub.com/babel/babel/pull/15344) fix: Properties that are `abstract` should not be initialized. ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-parser`\n    -   [#&#8203;15338](https://togithub.com/babel/babel/pull/15338) Allow negative number in ambient const initializer ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :leftwards_arrow_with_hook: Revert\n\n-   `babel-plugin-transform-react-inline-elements`, `babel-plugin-transform-react-jsx-development`, `babel-plugin-transform-react-jsx`\n    -   [#&#8203;15355](https://togithub.com/babel/babel/pull/15355) Reverts \"Re-use common JSX element transform for <>...\\</>\" ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.49.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5490-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5482v5490-2023-01-23)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.2...v5.49.0)\n\n##### Features\n\n-   **eslint-plugin:** \\[naming-convention] add support for `#private` modifier on class members ([#&#8203;6259](https://togithub.com/typescript-eslint/typescript-eslint/issues/6259)) ([c8a6d80](https://togithub.com/typescript-eslint/typescript-eslint/commit/c8a6d8096080228b6d122c861fe140ac97f17cbe))\n\n#### [5.48.2](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.1...v5.48.2) (2023-01-16)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n#### [5.48.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.0...v5.48.1) (2023-01-09)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/eslint-plugin)\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.49.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5490-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5482v5490-2023-01-23)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.2...v5.49.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n#### [5.48.2](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.1...v5.48.2) (2023-01-16)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n#### [5.48.1](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.48.0...v5.48.1) (2023-01-09)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.4`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0174)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.3...v0.17.4)\n\n-   Implement HTTP `HEAD` requests in serve mode ([#&#8203;2851](https://togithub.com/evanw/esbuild/issues/2851))\n\n    Previously esbuild's serve mode only responded to HTTP `GET` requests. With this release, esbuild's serve mode will also respond to HTTP `HEAD` requests, which are just like HTTP `GET` requests except that the body of the response is omitted.\n\n-   Permit top-level await in dead code branches ([#&#8203;2853](https://togithub.com/evanw/esbuild/issues/2853))\n\n    Adding top-level await to a file has a few consequences with esbuild:\n\n    1.  It causes esbuild to assume that the input module format is ESM, since top-level await is only syntactically valid in ESM. That prevents you from using `module` and `exports` for exports and also enables strict mode, which disables certain syntax and changes how function hoisting works (among other things).\n    2.  This will cause esbuild to fail the build if either top-level await isn't supported by your language target (e.g. it's not supported in ES2021) or if top-level await isn't supported by the chosen output format (e.g. it's not supported with CommonJS).\n    3.  Doing this will prevent you from using `require()` on this file or on any file that imports this file (even indirectly), since the `require()` function doesn't return a promise and so can't represent top-level await.\n\n    This release relaxes these rules slightly: rules 2 and 3 will now no longer apply when esbuild has identified the code branch as dead code, such as when it's behind an `if (false)` check. This should make it possible to use esbuild to convert code into different output formats that only uses top-level await conditionally. This release does not relax rule 1. Top-level await will still cause esbuild to unconditionally consider the input module format to be ESM, even when the top-level `await` is in a dead code branch. This is necessary because whether the input format is ESM or not affects the whole file, not just the dead code branch.\n\n-   Fix entry points where the entire file name is the extension ([#&#8203;2861](https://togithub.com/evanw/esbuild/issues/2861))\n\n    Previously if you passed esbuild an entry point where the file extension is the entire file name, esbuild would use the parent directory name to derive the name of the output file. For example, if you passed esbuild a file `./src/.ts` then the output name would be `src.js`. This bug happened because esbuild first strips the file extension to get `./src/` and then joins the path with the working directory to get the absolute path (e.g. `join(\"/working/dir\", \"./src/\")` gives `/working/dir/src`). However, the join operation also canonicalizes the path which strips the trailing `/`. Later esbuild uses the \"base name\" operation to extract the name of the output file. Since there is no trailing `/`, esbuild returns `\"src\"` as the base name instead of `\"\"`, which causes esbuild to incorrectly include the directory name in the output file name. This release fixes this bug by deferring the stripping of the file extension until after all path manipulations have been completed. So now the file `./src/.ts` will generate an output file named `.js`.\n\n-   Support replacing property access expressions with inject\n\n    At a high level, this change means the `inject` feature can now replace all of the same kinds of names as the `define` feature. So `inject` is basically now a more powerful version of `define`, instead of previously only being able to do some of the things that `define` could do.\n\n    Soem background is necessary to understand this change if you aren't already familiar with the `inject` feature. The `inject` feature lets you replace references to global variable with a shim. It works like this:\n\n    1.  Put the shim in its own file\n    2.  Export the shim as the name of the global variable you intend to replace\n    3.  Pass the file to esbuild using the `inject` feature\n\n    For example, if you inject the following file using `--inject:./injected.js`:\n\n    ```js\n    // injected.js\n    let processShim = { cwd: () => '/' }\n    export { processShim as process }\n    ```\n\n    Then esbuild will replace all references to `process` with the `processShim` variable, which will cause `process.cwd()` to return `'/'`. This feature is sort of abusing the ESM export alias syntax to specify the mapping of global variables to shims. But esbuild works this way because using this syntax for that purpose is convenient and terse.\n\n    However, if you wanted to replace a property access expression, the process was more complicated and not as nice. You would have to:\n\n    1.  Put the shim in its own file\n    2.  Export the shim as some random name\n    3.  Pass the file to esbuild using the `inject` feature\n    4.  Use esbuild's `define` feature to map the property access expression to the random name you made in step 2\n\n    For example, if you inject the following file using `--inject:./injected2.js --define:process.cwd=someRandomName`:\n\n    ```js\n    // injected2.js\n    let cwdShim = () => '/'\n    export { cwdShim as someRandomName }\n    ```\n\n    Then esbuild will replace all references to `process.cwd` with the `cwdShim` variable, which will also cause `process.cwd()` to return `'/'` (but which this time will not mess with other references to `process`, which might be desirable).\n\n    With this release, using the inject feature to replace a property access expression is now as simple as using it to replace an identifier. You can now use JavaScript's [\"arbitrary module namespace identifier names\"](https://togithub.com/tc39/ecma262/pull/2154) feature to specify the property access expression directly using a string literal. For example, if you inject the following file using `--inject:./injected3.js`:\n\n    ```js\n    // injected3.js\n    let cwdShim = () => '/'\n    export { cwdShim as 'process.cwd' }\n    ```\n\n    Then esbuild will now replace all references to `process.cwd` with the `cwdShim` variable, which will also cause `process.cwd()` to return `'/'` (but which will also not mess with other references to `process`).\n\n    In addition to inserting a shim for a global variable that doesn't exist, another use case is replacing references to static methods on global objects with cached versions to both minify them better and to make access to them potentially faster. For example:\n\n    ```js\n    // Injected file\n    let cachedMin = Math.min\n    let cachedMax = Math.max\n    export {\n      cachedMin as 'Math.min',\n      cachedMax as 'Math.max',\n    }\n\n    // Original input\n    function clampRGB(r, g, b) {\n      return {\n        r: Math.max(0, Math.min(1, r)),\n        g: Math.max(0, Math.min(1, g)),\n        b: Math.max(0, Math.min(1, b)),\n      }\n    }\n\n    // Old output (with --minify)\n    function clampRGB(a,t,m){return{r:Math.max(0,Math.min(1,a)),g:Math.max(0,Math.min(1,t)),b:Math.max(0,Math.min(1,m))}}\n\n    // New output (with --minify)\n    var a=Math.min,t=Math.max;function clampRGB(h,M,m){return{r:t(0,a(1,h)),g:t(0,a(1,M)),b:t(0,a(1,m))}}\n    ```\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24590","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24590)"},{"Id":"1551710638","IsPullRequest":true,"CreatedAt":"2023-01-21T06:13:33","Actor":"angular-robot","Number":"24589","RawContent":null,"Title":"build: update dependency quicktype-core to v21","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | major | [`20.0.15` -> `21.0.3`](https://renovatebot.com/diffs/npm/quicktype-core/20.0.15/21.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v21.0.3`](https://togithub.com/quicktype/quicktype/compare/35e726a4b59ef2ee3103ef58eb60ada8eed23335...3999d422f132898bd6aeb409dbda897631bfffd6)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/35e726a4b59ef2ee3103ef58eb60ada8eed23335...3999d422f132898bd6aeb409dbda897631bfffd6)\n\n### [`v21.0.2`](https://togithub.com/quicktype/quicktype/compare/c0223f99c330d6103d289fab7204f3136ab22315...35e726a4b59ef2ee3103ef58eb60ada8eed23335)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/c0223f99c330d6103d289fab7204f3136ab22315...35e726a4b59ef2ee3103ef58eb60ada8eed23335)\n\n### [`v21.0.1`](https://togithub.com/quicktype/quicktype/compare/7d1b2998e16234caf1020d5381da9d8334b4d0dc...c0223f99c330d6103d289fab7204f3136ab22315)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/7d1b2998e16234caf1020d5381da9d8334b4d0dc...c0223f99c330d6103d289fab7204f3136ab22315)\n\n### [`v21.0.0`](https://togithub.com/quicktype/quicktype/compare/062ef224869d75acf1cddf2cad7cce8cecf67229...7d1b2998e16234caf1020d5381da9d8334b4d0dc)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/062ef224869d75acf1cddf2cad7cce8cecf67229...7d1b2998e16234caf1020d5381da9d8334b4d0dc)\n\n### [`v20.0.27`](https://togithub.com/quicktype/quicktype/compare/97224b2e122d50d7ced7f0a88df8c92bf938a403...062ef224869d75acf1cddf2cad7cce8cecf67229)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/97224b2e122d50d7ced7f0a88df8c92bf938a403...062ef224869d75acf1cddf2cad7cce8cecf67229)\n\n### [`v20.0.26`](https://togithub.com/quicktype/quicktype/compare/c1dfb67395d394eab976a49deffd91cabb7b504a...97224b2e122d50d7ced7f0a88df8c92bf938a403)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/c1dfb67395d394eab976a49deffd91cabb7b504a...97224b2e122d50d7ced7f0a88df8c92bf938a403)\n\n### [`v20.0.25`](https://togithub.com/quicktype/quicktype/compare/b44d643f2cf956abc86b1c9253e6d190f2f4d39c...c1dfb67395d394eab976a49deffd91cabb7b504a)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/b44d643f2cf956abc86b1c9253e6d190f2f4d39c...c1dfb67395d394eab976a49deffd91cabb7b504a)\n\n### [`v20.0.24`](https://togithub.com/quicktype/quicktype/compare/734a266fd1df09e4e982da08d1ed572a3e73e5a5...b44d643f2cf956abc86b1c9253e6d190f2f4d39c)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/734a266fd1df09e4e982da08d1ed572a3e73e5a5...b44d643f2cf956abc86b1c9253e6d190f2f4d39c)\n\n### [`v20.0.23`](https://togithub.com/quicktype/quicktype/compare/da90766c7a8027ced5e8539a930a55372da4c02a...734a266fd1df09e4e982da08d1ed572a3e73e5a5)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/da90766c7a8027ced5e8539a930a55372da4c02a...734a266fd1df09e4e982da08d1ed572a3e73e5a5)\n\n### [`v20.0.22`](https://togithub.com/quicktype/quicktype/compare/ee56f731dfd8e0e36274b7f49f49507ee7896402...da90766c7a8027ced5e8539a930a55372da4c02a)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/ee56f731dfd8e0e36274b7f49f49507ee7896402...da90766c7a8027ced5e8539a930a55372da4c02a)\n\n### [`v20.0.21`](https://togithub.com/quicktype/quicktype/compare/a059cdf3f0daed14ec5b456386719e395504b6c8...ee56f731dfd8e0e36274b7f49f49507ee7896402)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/a059cdf3f0daed14ec5b456386719e395504b6c8...ee56f731dfd8e0e36274b7f49f49507ee7896402)\n\n### [`v20.0.20`](https://togithub.com/quicktype/quicktype/compare/ebec62fd324da07d9e16da50c83064a8723a4198...a059cdf3f0daed14ec5b456386719e395504b6c8)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/ebec62fd324da07d9e16da50c83064a8723a4198...a059cdf3f0daed14ec5b456386719e395504b6c8)\n\n### [`v20.0.19`](https://togithub.com/quicktype/quicktype/compare/43bed496f506d76e51e3925d665894e6141940bc...ebec62fd324da07d9e16da50c83064a8723a4198)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/43bed496f506d76e51e3925d665894e6141940bc...ebec62fd324da07d9e16da50c83064a8723a4198)\n\n### [`v20.0.18`](https://togithub.com/quicktype/quicktype/compare/32a5873d4baf933ca0eaa164a41f1a4b38ba1293...43bed496f506d76e51e3925d665894e6141940bc)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/32a5873d4baf933ca0eaa164a41f1a4b38ba1293...43bed496f506d76e51e3925d665894e6141940bc)\n\n### [`v20.0.17`](https://togithub.com/quicktype/quicktype/compare/f1436ecd90756811418473c899776bdc78c7abad...32a5873d4baf933ca0eaa164a41f1a4b38ba1293)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/f1436ecd90756811418473c899776bdc78c7abad...32a5873d4baf933ca0eaa164a41f1a4b38ba1293)\n\n### [`v20.0.16`](https://togithub.com/quicktype/quicktype/compare/c994b0d6454bf3e701729f383056bb824240f04a...f1436ecd90756811418473c899776bdc78c7abad)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/c994b0d6454bf3e701729f383056bb824240f04a...f1436ecd90756811418473c899776bdc78c7abad)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24589","RelatedDescription":"Open PR \"build: update dependency quicktype-core to v21\" (#24589)"},{"Id":"1550705420","IsPullRequest":true,"CreatedAt":"2023-01-20T18:37:40","Actor":"alan-agius4","Number":"24583","RawContent":null,"Title":"build: update `@types/yargs` to `^17.0.20`","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24583","RelatedDescription":"Closed or merged PR \"build: update `@types/yargs` to `^17.0.20`\" (#24583)"},{"Id":"1550438383","IsPullRequest":true,"CreatedAt":"2023-01-20T18:37:23","Actor":"alan-agius4","Number":"24580","RawContent":null,"Title":"Update browserslist config to include last 2 Chrome versions","State":"closed","Body":"https://github.com/angular/angular/pull/48669 added support for the last 2 Chrome versions. This commit the proper configuration in the Angular CLI. ","Url":"https://github.com/angular/angular-cli/pull/24580","RelatedDescription":"Closed or merged PR \"Update browserslist config to include last 2 Chrome versions\" (#24580)"},{"Id":"1551080425","IsPullRequest":true,"CreatedAt":"2023-01-20T15:50:39","Actor":"alan-agius4","Number":"24588","RawContent":null,"Title":"docs(@angular/cli): minor updates to `ng run` description","State":"open","Body":"\r\n\r\nMinor improvements of `ng run` docs","Url":"https://github.com/angular/angular-cli/pull/24588","RelatedDescription":"Open PR \"docs(@angular/cli): minor updates to `ng run` description\" (#24588)"},{"Id":"1550992769","IsPullRequest":false,"CreatedAt":"2023-01-20T15:17:39","Actor":"Garbee","Number":"24586","RawContent":null,"Title":"Generation fails after upgrade to 15.1.2","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.1.1\n\n### Description\n\nUpon generating a new component, an exception is thrown from the CLI tool. I traced this to the code touched from: https://github.com/angular/angular-cli/pull/24542. The `app-shell` schematic in particular is what was undefined, thus causing the error.\r\n\r\nThis oddly **does not** present itself on a freshly made application stack. Only from a stack that was upgraded from 15.0. (Could happen when upgrading from older versions as well.)\r\n\r\nFor now, I have rolled `@angular/cli` back by force to `15.1.1` and the problem is resolved since that includes the older version of the devkit.\n\n### Minimal Reproduction\n\n1. Have an application on version 15.0\r\n2. Upgrade to 15.1 using `ng update` on all appropriate dependencies (or just the CLI)\r\n3. Attempt to run `ng g c test`\r\n\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: Cannot destructure property 'aliases' of 'collection.description.schematics[schematicName]' as it is undefined.\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.2\r\nNode: 18.12.1\r\nPackage Manager: npm 9.2.0\r\nOS: darwin x64\r\n\r\nAngular: 15.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.2\r\n@angular-devkit/build-angular   15.1.2\r\n@angular-devkit/core            15.1.2\r\n@angular-devkit/schematics      15.1.2\r\n@angular/cli                    15.1.2\r\n@schematics/angular             15.1.2\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24586","RelatedDescription":"Closed issue \"Generation fails after upgrade to 15.1.2\" (#24586)"},{"Id":"1551059572","IsPullRequest":false,"CreatedAt":"2023-01-20T14:57:29","Actor":"pamanes","Number":"24587","RawContent":null,"Title":"Angular upgrade vendor.*.js include is now needed on v13","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nhi, we just finished upgrading from angular 8 to 13, thanks for https://update.angular.io by the way,\r\n\r\nOur production setup for the rendering of the js files on the main page (where app-root is) was this and it used to work perfectly fine for the production release:\r\n\r\n    <environment exclude=\"Development\">\r\n        <script asp-src-include=\"~/runtime.*.js\"></script>\r\n        <script asp-src-include=\"~/polyfills-es5.*.js\" nomodule></script>\r\n        <script asp-src-include=\"~/polyfills.*.js\"></script>\r\n        <script asp-src-include=\"~/main.*.js\"></script>\r\n    </environment>\r\n\r\nBut now that we moved to 13, the angular UI was not starting at all on page load, so I realized that vendor.*.js was missing and it started working fine after adding it.\r\n\r\nHow is it that it was working fine without vendor.*.js in previous versions and on 13 it breaks? \r\n\r\n\r\ndependencies in v8:\r\n\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~8.0.0\",\r\n    \"@angular/common\": \"~8.0.0\",\r\n    \"@angular/compiler\": \"~8.0.0\",\r\n    \"@angular/core\": \"~8.0.0\",\r\n    \"@angular/forms\": \"~8.0.0\",\r\n    \"@angular/http\": \"^7.2.15\",\r\n    \"@angular/platform-browser\": \"~8.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"~8.0.0\",\r\n    \"@angular/router\": \"~8.0.0\",\r\n    \"@ngx-loading-bar/core\": \"^4.2.0\",\r\n    \"@ngx-loading-bar/router\": \"^4.2.0\",\r\n    \"rxjs\": \"~6.4.0\",\r\n    \"tslib\": \"^1.9.0\",\r\n    \"zone.js\": \"~0.9.1\"\r\n  },\r\n\r\ndependencies in V13:\r\n\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~13.3.11\",\r\n    \"@angular/common\": \"~13.3.11\",\r\n    \"@angular/compiler\": \"~13.3.11\",\r\n    \"@angular/core\": \"~13.3.11\",\r\n    \"@angular/forms\": \"~13.3.11\",\r\n    \"@angular/platform-browser\": \"~13.3.11\",\r\n    \"@angular/platform-browser-dynamic\": \"~13.3.11\",\r\n    \"@angular/router\": \"~13.3.11\",\r\n    \"@ngx-loading-bar/core\": \"^4.2.0\",\r\n    \"@ngx-loading-bar/router\": \"^4.2.0\",\r\n    \"rxjs\": \"~6.6.3\",\r\n    \"tslib\": \"^2.0.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n\r\n\r\nthanks\r\n\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.3.9\r\nNode: 14.17.6\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\nAngular: 13.3.11\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.9\r\n@angular-devkit/build-angular   13.3.9\r\n@angular-devkit/core            13.3.9\r\n@angular-devkit/schematics      13.3.9\r\n@angular/cli                    13.3.9\r\n@schematics/angular             13.3.9\r\nrxjs                            6.6.3\r\ntypescript                      4.6.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24587","RelatedDescription":"Open issue \"Angular upgrade vendor.*.js include is now needed on v13\" (#24587)"},{"Id":"1550854421","IsPullRequest":true,"CreatedAt":"2023-01-20T13:31:20","Actor":"cexbrayat","Number":"24585","RawContent":null,"Title":"feat(@schematics/angular): generate functional resolvers and guards by default","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nAs Angular v15.2 deprecates class-based resolvers and guards, this commit switches the `functional` flag default value to `true`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n`ng g resolver` and `ng g guard` now generate a functional resolver or guard by default. It is still possible to generate a (deprecated) class-based resolver or guard by using `ng g resolver --no-functional` or `ng g guard --no-functional`.\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24585","RelatedDescription":"Open PR \"feat(@schematics/angular): generate functional resolvers and guards by default\" (#24585)"},{"Id":"1550762633","IsPullRequest":false,"CreatedAt":"2023-01-20T12:34:33","Actor":"ivomju","Number":"24584","RawContent":null,"Title":"[ERROR] No loader is configured for \".less\"","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n@angular-devkit/build-angular:browser\n\n### Description\n\nThe team tried the new builder `@angular-devkit/build-angular:browser-esbuild` but face one particular issue with `.less` files. When we build using the previous version that error don't occur.\n\n### Minimal Reproduction\n\nWhat we did was:\r\n- Replace `@angular-devkit/build-angular:browser` by `@angular-devkit/build-angular:browser-esbuild`\r\n- Ran the following `ng build project-name --configuration production`\r\n\r\nWhile running, this error appeared:\r\n\r\n<img width=\"502\" alt=\"Screenshot 2023-01-20 at 12 07 46\" src=\"https://user-images.githubusercontent.com/4333168/213692822-2b5cb9f0-e307-47aa-964c-57b3f8a30b53.png\">\r\n\r\nBut, replacing back the builder to the older one, everything is working fine.\n\n### Exception or Error\n\n```text\n✘ [ERROR] No loader is configured for \".less\" files: src/theme.less\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.0.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@schematics/angular             15.0.4\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\nAnother thing that we notice was that the esbuild doesn't log the result of the build on the console.","Url":"https://github.com/angular/angular-cli/issues/24584","RelatedDescription":"Closed issue \"[ERROR] No loader is configured for \".less\"\" (#24584)"},{"Id":"1550642849","IsPullRequest":false,"CreatedAt":"2023-01-20T10:33:00","Actor":"NCC1701M","Number":"24582","RawContent":null,"Title":"Provide option to disable autocompletion","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIf you developing an angular web app in an dev container every time the container is created or rebuild and you are running the `ng` command for the first time, the angular cli asks:\r\n\r\n> ? Would you like to enable autocompletion? This will set up your terminal so pressing TAB while typing Angular CLI commands will show possible options and autocomplete arguments. (Enabling autocompletion will modify \r\nconfiguration files in your home directory.)\r\n\r\nYou can activate this \"feature\" but there is no way to disable it proactive.\r\n\r\nYou could run the command `ng config -g cli.completion.prompted true`but if this is the first execution of the angular cli this only lead to the question if I want to enable autocompletion. So this isn't a solution.\r\n\r\n### Proposed solution\r\n\r\nBecause the user has the possibility to opt this feature out when the angular cli asks you if you want to enable the autocompletion and because there is an command to enable this without being asked there should also be to possibility to disable this feature with an command like\r\n\r\n`ng completion disable`\r\n\r\n### Alternatives considered\r\n\r\nAs an alternative you could also make the global configuration settings\r\n\r\n```json\r\n{\r\n  \"cli\": {\r\n    \"completion\": {\r\n      \"prompted\": true\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nalso available in the `angular.json` file.","Url":"https://github.com/angular/angular-cli/issues/24582","RelatedDescription":"Open issue \"Provide option to disable autocompletion\" (#24582)"},{"Id":"1550604635","IsPullRequest":false,"CreatedAt":"2023-01-20T10:15:24","Actor":"kaimmrt","Number":"24581","RawContent":null,"Title":"angular 15 how can I avoid long relative paths import","State":"closed","Body":"Angular 15\r\n\r\n\r\nI want to '@import 'variables.scss' like this instead of '@import '../../../assets/scss/variables.scss;'\r\n\r\nmy code in project.json file\r\n```\r\n   \"stylePreprocessorOptions\": {\r\n                    \"includePaths\": [\"apps/client/src/assets/scss\",\"./node_modules\"]\r\n    },\r\n```\r\n\r\nI get an error like this when I defined this short '@import 'variables.scss'\r\n\r\nError: Transform failed with 1 error:\r\nC:/my-project/home.component.scss:17: 100 : ERROR: Unterminated string token","Url":"https://github.com/angular/angular-cli/issues/24581","RelatedDescription":"Closed issue \"angular 15 how can I avoid long relative paths import\" (#24581)"},{"Id":"1550359182","IsPullRequest":true,"CreatedAt":"2023-01-20T06:15:27","Actor":"angular-robot","Number":"24579","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `1a51e19` -> `eb96ac7` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `5854dda` -> `96b7517` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `2bf3551` -> `3987c03` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `f0aec20` -> `50a8ba5` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `22d0880` -> `43547c9` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `693a884` -> `f315ad5` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `f94125e` -> `f61a1e6` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `374f124` -> `11690b5` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `78d703b` -> `786008f` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `755c1da` -> `62bd910` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `b4356c9` -> `a3e553d` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `0e23c03` -> `7537f54` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `9abd9eb` -> `a2c72b2` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `5064969` -> `6d5d416` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `ba881e0` -> `b257045` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `573ba93` -> `f9b395e` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `389b737` -> `6a193f4` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `a31a972` -> `baf60e7` |\n| angular/dev-infra | action | digest | `fa8e18e` -> `c3fdf4a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24579","RelatedDescription":"Open PR \"build: update angular\" (#24579)"},{"Id":"1548575302","IsPullRequest":true,"CreatedAt":"2023-01-19T22:14:31","Actor":"angular-robot","Number":"24573","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `f235c9b` -> `1a51e19` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `a3d08fb` -> `2bf3551` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.0` -> `15.1.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/15.1.0/15.1.1) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `47b7241` -> `f0aec20` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `83e86e9` -> `22d0880` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.1.0` -> `15.1.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.1.0/15.1.1) |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `5c8144f` -> `693a884` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.1.0` -> `15.1.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.1.0/15.1.1) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `70c0a82` -> `f94125e` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `9250d4e` -> `374f124` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a166ad9` -> `78d703b` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6c3b791` -> `755c1da` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `acb199c` -> `b4356c9` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`15.1.0` -> `15.1.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/15.1.0/15.1.1) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `6215bd4` -> `0e23c03` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `cfdfd9c` -> `5064969` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `22113b3` -> `ba881e0` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `4f3fccc` -> `573ba93` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `8f9eda7` -> `389b737` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.2.0-next.0/15.2.0-next.1) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `beae054` -> `a31a972` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.2.0-next.0` -> `15.2.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.2.0-next.0/15.2.0-next.1) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.2.0-next.1`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1520-next1-2023-01-18)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.2.0-next.0...15.2.0-next.1)\n\n#### Deprecations\n\n#####\n\n-   Class and `InjectionToken` guards and resolvers are\n    deprecated. Instead, write guards as plain JavaScript functions and\n    inject dependencies with `inject` from `@angular/core`.\n\n#####\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [926c35f4ac](https://togithub.com/angular/angular/commit/926c35f4ac70f5e4d142e545d6d056dd67aac97b) | docs | Deprecate class and InjectionToken and resolvers ([#&#8203;47924](https://togithub.com/angular/angular/pull/47924)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8802b4aab9](https://togithub.com/angular/angular/commit/8802b4aab9600870f3e09f198c993845587e9622) | fix | Update `Location` to get a normalized URL valid in case a represented URL starts with the substring equals `APP_BASE_HREF` ([#&#8203;48489](https://togithub.com/angular/angular/pull/48489)) |\n| [5f21c6d627](https://togithub.com/angular/angular/commit/5f21c6d627892dfad942b55f13861c213f9c0afb) | perf | avoid excessive DOM mutation in NgClass ([#&#8203;48433](https://togithub.com/angular/angular/pull/48433)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [f00bf71411](https://togithub.com/angular/angular/commit/f00bf714110100549111bd27345943ab8830128c) | fix | makeEnvironmentProviders should accept EnvironmentProviders ([#&#8203;48720](https://togithub.com/angular/angular/pull/48720)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4ae384fd61](https://togithub.com/angular/angular/commit/4ae384fd619a13eaadf737d08a97f07e1f6b273c) | feat | Allow auto-imports of a pipe via quick fix when its selector is used, both directly and via reexports. ([#&#8203;48354](https://togithub.com/angular/angular/pull/48354)) |\n| [141333411e](https://togithub.com/angular/angular/commit/141333411e67769d752c7162e4cb03376022f5e1) | feat | Introduce a new NgModuleIndex, and use it to suggest re-exports. ([#&#8203;48354](https://togithub.com/angular/angular/pull/48354)) |\n\n#### Special Thanks\n\nAlex Rickabaugh, Andrew Kushnir, Andrew Scott, Aristeidis Bampakos, Bob Watson, Dylan Hunn, Jens, Konstantin Kharitonov, Kristiyan Kostadinov, Matthieu Riegler, Paul Gschwendtner, Pawel Kozlowski, Vladyslav Slipchenko, ced, dario-piotrowicz, mgechev and ノウラ\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v15.1.1`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1511-purple-plush-2023-01-18)\n\n[Compare Source](https://togithub.com/angular/components/compare/15.1.0...15.1.1)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0fc52fca6](https://togithub.com/angular/components/commit/0fc52fca68e477588c525d1d2e9ba56415eb27ce) | fix | **schematics:** don't migrate unknown stylesheet formats ([#&#8203;26450](https://togithub.com/angular/components/pull/26450)) |\n| [6bdc2e383](https://togithub.com/angular/components/commit/6bdc2e383f7edba0228eebf3185b38fdf73ed598) | fix | **select:** active class not removed from reset option when new value is assigned through form control ([#&#8203;26414](https://togithub.com/angular/components/pull/26414)) |\n| [072d6d036](https://togithub.com/angular/components/commit/072d6d03605c71def61bb0f249761a79efa9ed5e) | fix | **slider:** Use non-deprecated theme key ([#&#8203;26378](https://togithub.com/angular/components/pull/26378)) |\n\n#### Special Thanks\n\nAlan Agius, Alka Vats, Kevin Vizcarra, Kristiyan Kostadinov and Paul Gschwendtner\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24573","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24573)"},{"Id":"1548575355","IsPullRequest":true,"CreatedAt":"2023-01-19T22:13:56","Actor":"angular-robot","Number":"24574","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.39","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.38` -> `v2.1.39` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.39`](https://togithub.com/github/codeql-action/compare/v2.1.38...v2.1.39)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.38...v2.1.39)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24574","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.39\" (#24574)"},{"Id":"1537969245","IsPullRequest":true,"CreatedAt":"2023-01-19T22:13:20","Actor":"alan-agius4","Number":"24565","RawContent":null,"Title":"feat(@angular/cli): log number of files update during `ng update`","State":"closed","Body":"This commit updates `ng update` to include the number of files updated when a migration is completed.\r\n\r\nCloses #24488\r\n","Url":"https://github.com/angular/angular-cli/pull/24565","RelatedDescription":"Closed or merged PR \"feat(@angular/cli): log number of files update during `ng update`\" (#24565)"},{"Id":"1538616941","IsPullRequest":true,"CreatedAt":"2023-01-19T22:13:02","Actor":"clydin","Number":"24569","RawContent":null,"Title":"fix(@angular-devkit/build-angular): avoid undefined module path for Sass imports in esbuild","State":"closed","Body":"When using Sass with the experimental esbuild-based browser application builder, bare imports without a path segment that were available via included paths but also happen to be a node module could cause an exception. An example of such an import would be `@import \"globals\";`. The deep import node module logic would previously attempt to join an undefined path segment to the resolved path for the `globals` package which would raise a argument type exception. This case has now been fixed by only joining if there is actually a path segment present such as `@import \"globals/x\"`. With this fix in place, the node module case can then continue and if no stylesheet is found, the include paths will then be searched.\r\n","Url":"https://github.com/angular/angular-cli/pull/24569","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): avoid undefined module path for Sass imports in esbuild\" (#24569)"},{"Id":"1548982259","IsPullRequest":true,"CreatedAt":"2023-01-19T22:12:26","Actor":"alan-agius4","Number":"24575","RawContent":null,"Title":"fix(@angular/cli): handle extended schematics when retrieving aliases","State":"closed","Body":"Previously base collections where not being taken into account and the recent changes caused an exception\r\n\r\n```\r\nAn unhandled exception occurred: Cannot destructure property 'aliases' of 'collection.description.schematics[schematicName]' as it is undefined.\r\n```\r\n\r\nSee: https://angular-team.slack.com/archives/CHEEH2LCA/p1674122139247359\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/24575","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): handle extended schematics when retrieving aliases\" (#24575)"},{"Id":"1549503858","IsPullRequest":false,"CreatedAt":"2023-01-19T18:01:35","Actor":"gabrielw007","Number":"24578","RawContent":null,"Title":"Configurable environment settings","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nThere is a nice ability in angular to define multiple environments and have a different build per each of them.\r\nThe only problem is that environment file is NOT configurable on prod but there are settings need that ability for us, \r\nfor example: \"serverApiUrl\" which we need to be configurable on prod.\r\n\r\nSo, in addition to what we have today, we need an ability to define configurable settings according to the environment used.\n\n### Proposed solution\n\nvarious options i can think about:\r\n\r\n- enable defining configurable properties in environment files\r\n- enable creating a config file per environment and using it in code like environment with file replace in angular.json like environment\r\n\n\n### Alternatives considered\n\ncurrently we can create a \"configFile\" property in all environments, but all those files are assets, so all of them are deployed during CI\\CD although a specific environment has been built. ","Url":"https://github.com/angular/angular-cli/issues/24578","RelatedDescription":"Closed issue \"Configurable environment settings\" (#24578)"},{"Id":"1549112553","IsPullRequest":false,"CreatedAt":"2023-01-19T14:31:11","Actor":"legrottagliegionata","Number":"24576","RawContent":null,"Title":"Custom decorators not working using AoT","State":"closed","Body":"              @baluguriajay would you provide a reproduction? Seems like this is still relevant.\r\n\r\n_Originally posted by @mgechev in https://github.com/angular/angular-cli/issues/20714#issuecomment-1235973966_\r\n            \r\nHi, I have the same problem.\r\nThis is mi reproduction https://github.com/legrottagliegionata/TestDecorator-Angular-15\r\n\r\nIt works correctly if the aot = false flag is set, but with the aot=true flag (therefore in development mode) it does not have the expected behavior\r\n","Url":"https://github.com/angular/angular-cli/issues/24576","RelatedDescription":"Closed issue \"Custom decorators not working using AoT\" (#24576)"},{"Id":"1548551628","IsPullRequest":false,"CreatedAt":"2023-01-19T08:37:29","Actor":"alkoval","Number":"24572","RawContent":null,"Title":"Webpack dev server websocket URL get wrong path","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an Asp.Net Core 6 project with two Angular 14 apps. \r\n<img width=\"157\" alt=\"Screenshot_643\" src=\"https://user-images.githubusercontent.com/14341571/213363926-cae04ae0-5703-482e-9046-928fa93398b8.png\">\r\n\r\nThe first client app is available at https://localhost:44313/.\r\nThe second client app is available at https://localhost:44313/clientapp2 and in dev it reloads every time.\r\n<img width=\"695\" alt=\"Screenshot_639\" src=\"https://user-images.githubusercontent.com/14341571/213362690-ba1a6c2b-da22-4558-b28d-50052d678b9f.png\">\r\n\r\nI think this is because the DevServer has created a web socket at \"url wss://localhost:44313/ng-cli-ws\", when need to \"url wss://localhost:44313/clientapp2/ng-cli-ws\".\r\nIn Chrome's dev tools(ClientApp2) i see that webpack-dev-server/client/index.js try to get socketURL:\r\n```\r\nvar socketURL = createSocketURL(parsedResourceQuery);\r\nsocket(socketURL, onSocketMessage, options.reconnect);\r\n```\r\nAnd the hostname is wrong. If i change publicHost in angular.json for ClientApp2\r\n```\r\n\"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"options\": {\r\n            \"publicHost\": \"clientapp2\"\r\n},\r\n```\r\nI get error WebSocket connection to 'wss://clientapp2:44313/ng-cli-ws' failed: Error in connection establishment: net::ERR_NAME_NOT_RESOLVED\r\n<img width=\"713\" alt=\"Screenshot_641\" src=\"https://user-images.githubusercontent.com/14341571/213362398-4e4dc28a-2cba-4a45-aeea-4e8531fc4520.png\">\r\n\r\nI found a temporary solution when I added this to the file webpack-dev-server/client/index.js:\r\n```\r\nvar socketURL = createSocketURL(parsedResourceQuery);\r\nsocketURL = socketURL.replace('ng-cli-ws', 'clientapp2/ng-cli-ws')\r\nsocket(socketURL, onSocketMessage, options.reconnect);\r\n```\r\nIt doesn't look good=)\r\n\r\nSample project https://github.com/alkoval/AspNetCoreMultipleAngular\r\nMy question on [stackoverflow](https://stackoverflow.com/questions/75142793/asp-net-core-and-multiple-angular-apps) \n\n### Minimal Reproduction\n\nI don't know how to reproduce this issue without the asp.net core project.\r\nYou can see an example project https://github.com/alkoval/AspNetCoreMultipleAngular\r\nOr you can do this:\r\n1. Open visual studio;\r\n2. Create a project with ASP.NET Core + Angular template;\r\n3. Add a second client application to the ClientApp2 folder;\r\n4. Add this to Startup.cs\r\n```\r\napp.Map(new PathString(\"/clientapp2\"), client =>\r\n            {\r\n                var path = env.IsDevelopment() ? @\"ClientApp2\" : @\"ClientApp2/dist\";\r\n                var clientAppDist = new StaticFileOptions()\r\n                {\r\n                    FileProvider = new PhysicalFileProvider(Path.Combine(Directory.GetCurrentDirectory(), path))\r\n                };\r\n                client.UseSpaStaticFiles(clientAppDist);\r\n\r\n                if (env.IsDevelopment())\r\n                {\r\n                    client.UseSpa(spa =>\r\n                    {\r\n                        spa.Options.StartupTimeout = new TimeSpan(0, 5, 0);\r\n                        spa.Options.SourcePath = \"ClientApp2\";\r\n                        spa.UseAngularCliServer(npmScript: \"start\");\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    client.UseSpa(spa =>\r\n                    {\r\n                        spa.Options.StartupTimeout = new TimeSpan(0, 5, 0);\r\n                        spa.Options.SourcePath = \"ClientApp2\";\r\n                        spa.Options.DefaultPageStaticFileOptions = clientAppDist;\r\n                    });\r\n                }\r\n            });\r\n\r\n            app.UseSpa(spa =>\r\n            {\r\n                spa.Options.SourcePath = \"ClientApp\";\r\n                spa.Options.DefaultPageStaticFileOptions = new StaticFileOptions()\r\n                {\r\n                    OnPrepareResponse = ctx =>\r\n                    {\r\n                        var headers = ctx.Context.Response.GetTypedHeaders();\r\n                        headers.CacheControl = new CacheControlHeaderValue\r\n                        {\r\n                            NoCache = true,\r\n                            NoStore = true,\r\n                            MustRevalidate = true,\r\n                            MaxAge = TimeSpan.Zero\r\n                        };\r\n                    }\r\n                };\r\n\r\n                if (env.IsDevelopment())\r\n                {\r\n                    spa.UseAngularCliServer(npmScript: \"start\");\r\n                }\r\n            });\r\n```\r\n5. Run project and try to open http://localhost:port_number/clientapp2\n\n### Exception or Error\n\n```text\n[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.\r\nAngular is running in development mode. Call enableProdMode() to enable production mode.\r\nWebSocket connection to 'wss://clientapp2:44333/ng-cli-ws' failed: Error in connection establishment: net::ERR_NAME_NOT_RESOLVED\r\n[webpack-dev-server] Disconnected!\r\n[webpack-dev-server] Trying to reconnect...\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 14.2.10\r\nNode: 18.13.0 (Unsupported)\r\nPackage Manager: npm 8.19.3 \r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cli                    14.2.10\r\n@schematics/angular             14.2.10\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\n```\n\n\n### Anything else relevant?\n\nBackend ASP.NET Core 6\r\nIDE Visual Studio 2022 v17.4.4\r\nOS: Windows_NT x64 10.0.22000","Url":"https://github.com/angular/angular-cli/issues/24572","RelatedDescription":"Closed issue \"Webpack dev server websocket URL get wrong path\" (#24572)"},{"Id":"1538605647","IsPullRequest":true,"CreatedAt":"2023-01-18T23:13:59","Actor":"dgp1130","Number":"24568","RawContent":null,"Title":"Re-enable analytics","State":"closed","Body":"Issue Number: http://b/264671793\r\n\r\nNo privacy concerns right now, but still waiting on formal approval.","Url":"https://github.com/angular/angular-cli/pull/24568","RelatedDescription":"Closed or merged PR \"Re-enable analytics\" (#24568)"},{"Id":"1548096929","IsPullRequest":true,"CreatedAt":"2023-01-18T22:03:19","Actor":"dgp1130","Number":"24571","RawContent":null,"Title":"Bump version to \"v15.2.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24571","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.1\" with changelog.\" (#24571)"},{"Id":"1538664795","IsPullRequest":true,"CreatedAt":"2023-01-18T20:55:07","Actor":"dgp1130","Number":"24570","RawContent":null,"Title":"docs: release notes for the v15.1.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24570","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.2 release\" (#24570)"},{"Id":"1538599924","IsPullRequest":true,"CreatedAt":"2023-01-18T20:22:33","Actor":"dgp1130","Number":"24567","RawContent":null,"Title":"Bump version to \"v15.1.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24567","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.2\" with changelog.\" (#24567)"},{"Id":"1538439125","IsPullRequest":false,"CreatedAt":"2023-01-18T19:13:08","Actor":"RobertVogt","Number":"24566","RawContent":null,"Title":"ng14 Project \"undefined\" does not exist.","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nng 12\n\n### Description\n\nAfter upgrading to ng14 Using the command ng g c some-component results in the error \"Project \"undefined\" does not exist.\"\r\nTrying to add \"defaultProject\": \"someProject\"  gives the error \"value is Deprecated\"\r\n\r\nThis is a vicious cycle of unproductivity?  ...I need to create all files by hand???\n\n### Minimal Reproduction\n\nUpgrade angular project with component library from 12 to 14\r\nTry to generate a new component in component library\n\n### Exception or Error\n\n```text\nProject \"undefined\" does not exist.\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___ \r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | | \r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | | \r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.2.10\r\nNode: 14.21.1\r\nPackage Manager: npm 6.14.17\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    13.3.9\r\n@angular/cli                    14.2.10\r\n@schematics/angular             14.2.10\r\nng-packagr                      14.3.0\r\nrxjs                            6.6.7\r\ntypescript                      4.8.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24566","RelatedDescription":"Closed issue \"ng14 Project \"undefined\" does not exist.\" (#24566)"},{"Id":"1537678365","IsPullRequest":false,"CreatedAt":"2023-01-18T17:13:25","Actor":"Zuluseq","Number":"24563","RawContent":null,"Title":"Universal schematics add double added withServerTransition","State":"closed","Body":"\r\n#### What modules are relevant for this feature request?\r\n\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] builders\r\n- [ ] common\r\n- [x] express-engine\r\n\r\n### Description\r\n\r\nWhen restarting xxx, when some entries were already entered in the configuration files - in the case of app.modules.ts, the CLI detects the BrowserModule and adds .withServerTransition({ appId: 'serverApp' })\r\nIt doesn't check if it was there before and as a result it is created\r\nBrowserModule.withServerTransition({ appId: 'serverApp' }).withServerTransition({ appId: 'serverApp' }),\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nAngular 15  prepare SSR on existing app\r\n\r\nI took over the code from another developer who was trying to add manually. CLI Add corrected all changes correctly except this one.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/24563","RelatedDescription":"Closed issue \"Universal schematics add double added withServerTransition\" (#24563)"},{"Id":"1537893775","IsPullRequest":true,"CreatedAt":"2023-01-18T17:13:23","Actor":"alan-agius4","Number":"24564","RawContent":null,"Title":"fix(@schematics/angular): replace existing `BrowserModule.withServerTransition` calls when running universal schematic","State":"closed","Body":"\r\nThis change fixes an issue where calling the universal schematic on an application with existing `BrowserModule.withServerTransition` will cause an additional `.withServerTransition` call to be added.\r\n\r\nWith this change we now remove the previous `withServerTransition` call to avoid misconfiguration.\r\n\r\nCloses #24563\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/24564","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): replace existing `BrowserModule.withServerTransition` calls when running universal schematic\" (#24564)"},{"Id":"1537015638","IsPullRequest":true,"CreatedAt":"2023-01-18T17:13:10","Actor":"clydin","Number":"24561","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use esbuild 0.17 incremental API in esbuild builder","State":"closed","Body":"Due to the update of the experimental esbuild-based browser application builder to use esbuild 0.17, the watch mode has been changed to use the new incremental API. The previous API has been removed from esbuild. The new API involves creating a build context object that can then be used to perform rebuilds of the configured application bundler as needed. All watch mode usage has been updated to use this new approach. An effort was made to minimize the amount of changes made to support this API update and limit the changeset. However, further refactoring will be possible as additional capabilities are added in the future.","Url":"https://github.com/angular/angular-cli/pull/24561","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use esbuild 0.17 incremental API in esbuild builder\" (#24561)"},{"Id":"1537343962","IsPullRequest":false,"CreatedAt":"2023-01-18T03:19:02","Actor":"Socolin","Number":"24562","RawContent":null,"Title":"Allow ng serve to listen on unix socket","State":"open","Body":"### Command\n\nserve\n\n### Description\n\nI'm working on multiple project and playing around with ports to avoid conflict, or being force to stop a project to start a new one is annoying, I would like to be able to start `ng serve` on an unix socket (Also [available on windows](https://batsov.com/articles/2022/01/20/unix-sockets-are-now-supported-on-windows))\r\nThis would allow me to dispatch through nginx to the expected project based on the domain name (I added domain in my `/etc/hosts` file)\r\n\r\nA nice things is that the ports are not an issue anymore, I only need nginx to listen on 80/443 and then I don't have to find a new unused port for each project.\n\n### Describe the solution you'd like\n\nAllow `--host` syntax like `unix:///var/run/angular-serve.sock`\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24562","RelatedDescription":"Open issue \"Allow ng serve to listen on unix socket\" (#24562)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1553901632","IsPullRequest":true,"CreatedAt":"2023-01-23T22:03:04","Actor":"wagnermaciel","Number":"26475","RawContent":null,"Title":"fix(material/schematics): add string literal check","State":"open","Body":"* related to issue #26038","Url":"https://github.com/angular/components/pull/26475","RelatedDescription":"Open PR \"fix(material/schematics): add string literal check\" (#26475)"},{"Id":"1551764132","IsPullRequest":false,"CreatedAt":"2023-01-23T17:01:23","Actor":"zopagaduanjr","Number":"26467","RawContent":null,"Title":"help(mat-selection-list): mat-list-option selected behavior with pipe","State":"closed","Body":"### What are you trying to do?\n\nI'm trying to implement a search functionality with material selection list. I accomplish this by creating a pipe filter.\r\n\r\nthe pipe is working fine and is updating the mat-list-options that satisfies the query.\r\n\r\nHowever when I select a queried option and clear the query, all the options are selected as well.\r\n\r\nhttps://user-images.githubusercontent.com/38291023/213863074-158742da-2794-43db-839c-cb6be8996f64.mov\r\n\r\n\n\n### What troubleshooting steps have you tried?\n\nI've tried manually updating the [[selected]](https://material.angular.io/components/list/api) field but still same behavior\r\n\r\n<img width=\"979\" alt=\"image\" src=\"https://user-images.githubusercontent.com/38291023/213863381-2d232b8e-8f0f-42ba-8066-644c721cff32.png\">\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. [StackBlitz editor url](https://stackblitz.com/edit/angular-ivy-39ib67?file=src/app/app.component.ts)\r\n2. compile application\r\n3. search in input field \"CBA\"\r\n4. select Bank CBA\r\n5. clear input field\r\n6. All banks are selected\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n","Url":"https://github.com/angular/components/issues/26467","RelatedDescription":"Closed issue \"help(mat-selection-list): mat-list-option selected behavior with pipe\" (#26467)"},{"Id":"1553409344","IsPullRequest":false,"CreatedAt":"2023-01-23T16:37:33","Actor":"djorge-ph","Number":"26474","RawContent":null,"Title":"bug(mat-menu): Mat menu is always lazily loaded - itens are always destroyed upon closing","State":"open","Body":"### Is this a regression?\r\n\r\n- No\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nOn the documentation, it reads:\r\n![image](https://user-images.githubusercontent.com/77790569/214095206-77be9c8e-2472-41f4-8e97-35ed2df44167.png)\r\n\r\nHowever, even when not using the ng-template, the items are always destroyed when the menu is closed.\r\n\r\nI would like to have the items eagerly loaded, and on the menu closed, only hiding the items instead of destroying them.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Got to the documentation page: https://material.angular.io/components/menu/overview\r\n2. On the basic menu \r\n![image](https://user-images.githubusercontent.com/77790569/214095744-29cdf774-5d49-4de0-b12d-5d33b1a28fa9.png) ,\r\nsearch for Item 1 on the page elements. You wont find the element.\r\n3. Open the basic menu and search again. This time you will find the menu item: \r\n![image](https://user-images.githubusercontent.com/77790569/214095976-5507cb01-f283-4b28-a49f-bcdd09eb1aa6.png)\r\n4. Close the menu and search again, the menu item will be gone.\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nI expect to see the mat items eagerly loaded, and only hidden when the mat menu is closed.\r\n\r\n### Actual Behavior\r\n\r\nMat items are always lazy-loaded. Mat items are destroyed when the menu is closed.\r\n\r\n### Environment\r\n\r\n- Angular: 14.2.4\r\n- CDK/Material: 14.1.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26474","RelatedDescription":"Open issue \"bug(mat-menu): Mat menu is always lazily loaded - itens are always destroyed upon closing\" (#26474)"},{"Id":"1553220710","IsPullRequest":false,"CreatedAt":"2023-01-23T14:42:57","Actor":"Wykks","Number":"26473","RawContent":null,"Title":"feat(listbox): Add virtual-scroll support","State":"open","Body":"### Feature Description\n\nRelated to https://github.com/angular/components/issues/10121\r\n\r\nBe able to use a  `cdkListbox` inside a `cdk-virtual-scroll-viewport`\r\n\n\n### Use Case\n\nWe would be able to show a large listbox :)","Url":"https://github.com/angular/components/issues/26473","RelatedDescription":"Open issue \"feat(listbox): Add virtual-scroll support\" (#26473)"},{"Id":"1553101942","IsPullRequest":false,"CreatedAt":"2023-01-23T13:28:13","Actor":"alexander-goncharuk","Number":"26472","RawContent":null,"Title":"bug(MatSlider): Thumb label behaviour is inconsistent across different browsers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn Chrome selecting a value on the slider label stays there until the selected mark is focused (until you click outside). \r\nIn Safari the label shown for a fraction of second (arguably for not long enough to read the content) and disappears. You need to hold the mouse to keep it displayed. \r\n\r\nSlider has changed significantly in version 15 so I'm not sure if this should be considered a regression.\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Just open this example from the Slider Showroom https://material.angular.io/components/slider/overview#formatting-the-thumb-label in both Chrome and Safari\r\n2. Try clicking on the slider marks and observe the difference \n\n### Expected Behavior\n\nLabel behaviour is consistent across popular browsers.\n\n### Actual Behavior\n\nLabel behaviour is inconsistent.\n\n### Environment\n\nAngular: 15.0.4\r\nCDK/Material: 15.1.1\r\nBrowser(s): Chrome 109.0.5414.87, Safari 15.4\r\nOperating System: macOS","Url":"https://github.com/angular/components/issues/26472","RelatedDescription":"Open issue \"bug(MatSlider): Thumb label behaviour is inconsistent across different browsers\" (#26472)"},{"Id":"1536739491","IsPullRequest":false,"CreatedAt":"2023-01-23T11:43:07","Actor":"DzmVasileusky","Number":"26446","RawContent":null,"Title":"bug(mat-datepicker): Custom font not applied to mat-datepicker","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nCustom font-family isn't applied to mat-datepicker\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add the following code\r\n```\r\n$my-typography: mat.define-typography-config(\r\n    $font-family: 'proxima-nova', system, -apple-system, BlinkMacSystemFont, Helvetica Neue, sans-serif\r\n);\r\n$my-theme: mat.define-light-theme((\r\n    typography: $my-typography\r\n));\r\n@include mat.core();\r\n@include mat.all-component-themes($my-theme);\r\n```\r\n2.\r\nAdd `mat-datepicker` on any page\r\n\n\n### Expected Behavior\n\n`mat-datepicker` elements have `font-family: 'proxima-nova', system, -apple-system, BlinkMacSystemFont, Helvetica Neue, sans-serif`\n\n### Actual Behavior\n\n`mat-datepicker` elements have `font-family: Roboto, \"Helvetica Neue\", sans-serif;`\n\n### Environment\n\n- Angular: 15.1.0\r\n- CDK/Material: 15.1.0\r\n- Browser(s): Chrome 107.0.5304.110\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS BigSur 11.2.3\r\n","Url":"https://github.com/angular/components/issues/26446","RelatedDescription":"Closed issue \"bug(mat-datepicker): Custom font not applied to mat-datepicker\" (#26446)"},{"Id":"1552723493","IsPullRequest":true,"CreatedAt":"2023-01-23T11:43:05","Actor":"crisbeto","Number":"26471","RawContent":null,"Title":"fix(material/core): top-level font family not copied when converting between typography formats","State":"closed","Body":"Fixes that our functions for converting between the 2014 and 2018 typography formats weren't copying over the top-level font family.\r\n\r\nFixes #26446.","Url":"https://github.com/angular/components/pull/26471","RelatedDescription":"Closed or merged PR \"fix(material/core): top-level font family not copied when converting between typography formats\" (#26471)"},{"Id":"1552661446","IsPullRequest":true,"CreatedAt":"2023-01-23T08:21:17","Actor":"tchandelle","Number":"26470","RawContent":null,"Title":"docs(theming) Fix densitites > densities typo in theming doc","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26470","RelatedDescription":"Closed or merged PR \"docs(theming) Fix densitites > densities typo in theming doc\" (#26470)"},{"Id":"1538200608","IsPullRequest":false,"CreatedAt":"2023-01-23T07:58:37","Actor":"GregoireLgt","Number":"26452","RawContent":null,"Title":"feat(mat-menu): add an active CSS class for the active (selected) mat-menu-item","State":"closed","Body":"### Feature Description\n\n### For accessibility purposes,\r\n\r\nThe selected mat-menu-item should have a CSS active class to put some border color or something else to clearly state what mat-menu-item is ACTIVE...\r\n\r\nRegards,\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/26452","RelatedDescription":"Closed issue \"feat(mat-menu): add an active CSS class for the active (selected) mat-menu-item\" (#26452)"},{"Id":"1552355454","IsPullRequest":true,"CreatedAt":"2023-01-23T00:39:51","Actor":"Nurech","Number":"26469","RawContent":null,"Title":"Update radio.scss","State":"open","Body":"Fix `.mat-radio-inner-circle` placeholder showing.\r\n\r\n![image](https://user-images.githubusercontent.com/20840114/213949281-fc5ef31f-a7f1-49a7-ba0c-46e5adb09680.png)\r\n","Url":"https://github.com/angular/components/pull/26469","RelatedDescription":"Open PR \"Update radio.scss\" (#26469)"},{"Id":"1552148748","IsPullRequest":false,"CreatedAt":"2023-01-22T14:56:28","Actor":"jwittekind","Number":"26468","RawContent":null,"Title":"\"Could not find Material Core Theme\" during SSR - Angular Universal","State":"open","Body":"### What are you trying to do?\r\n\r\nIn my server.ts logs of my angular universal ssr app a warning gets show on every Request.\r\nIt's not visible on client side chrome devTools logs.\r\n\r\n`Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming`\r\n\r\nThough, the theming still works as expected.\r\n\r\n## How do i get rid of this warning?\r\n\r\n### Troubleshooting\r\n\r\nI followed this guide for angular material theming: https://material.angular.io/guide/theming\r\n\r\nMy styles.scss looks somtheing like this:\r\n\r\n### styles.scss\r\n```\r\n@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n// Import Palettes\r\n@import 'palettes';\r\n\r\n// Import typography css\r\n@import 'typography';\r\n\r\n$ep-light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $ep-primary-palette,\r\n      accent: $ep-accent-palette,\r\n      warn: $ep-warn-palette,\r\n    ),\r\n    typography: $ep-typography,\r\n    density: 0,\r\n  )\r\n);\r\n\r\n@include mat.core-theme($ep-light-theme);\r\n\r\n$ep-dark-theme: mat.define-dark-theme(\r\n  (\r\n    color: (\r\n      primary: $ep-dark-primary-palette,\r\n      accent: $ep-dark-accent-palette,\r\n      warn: $ep-dark-warn-palette,\r\n    ),\r\n    typography: $ep-typography,\r\n    density: 0,\r\n  )\r\n);\r\n\r\n.adm-dark-theme,\r\n.ep-dark-theme {\r\n  @include mat.all-component-themes($ep-dark-theme);\r\n}\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.1\r\n- CDK/Material: 15.1.0\r\n- Browser(s): Chrome and node.js Inspector\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOs\r\n","Url":"https://github.com/angular/components/issues/26468","RelatedDescription":"Open issue \"\"Could not find Material Core Theme\" during SSR - Angular Universal\" (#26468)"},{"Id":"1537333258","IsPullRequest":false,"CreatedAt":"2023-01-21T08:59:26","Actor":"alexdomingues","Number":"26448","RawContent":null,"Title":"After updating to angular material 15 my components stayed ba","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![image](https://user-images.githubusercontent.com/31892337/213072498-870351fa-fe48-4cbb-ac69-2e4658c85014.png)\r\n\n\n### Reproduction\n\n<mat-form-field class=\"\" appearance=\"outline\">\r\n                            <mat-label>First name</mat-label>\r\n                            <input matInput>\r\n                          </mat-form-field>\n\n### Expected Behavior\n\nthe standard\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/31892337/213072600-e367f9b7-c621-4fa0-8fb6-85a1036d52cc.png)\r\n\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26448","RelatedDescription":"Closed issue \"After updating to angular material 15 my components stayed ba\" (#26448)"},{"Id":"1551091984","IsPullRequest":false,"CreatedAt":"2023-01-20T15:59:36","Actor":"mcalmus","Number":"26466","RawContent":null,"Title":"bug(MatSelectionList): MatSelectionListChange options should contain automatically deselected values","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using a MatSelectionList with multiple select mode off, selecting an item deselects the previously-selected item. If listening to changes, the options property of MatSelectionListChange only has the newly-selected value, not the previously selected value. The documentation indicates it should contain \"changed\" items. The one that was deselected should therefore be included.\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/angular-wqdcyq?file=src%2Fapp%2Flist-single-selection-example.ts\r\n2. Select an option - change count increases by one\r\n3. Select a different option - change count (and log) only shows one item rather than two\r\n\n\n### Expected Behavior\n\nChange count after selecting a new item should increase by 2.\n\n### Actual Behavior\n\nChange count only increases by one\n\n### Environment\n\n- Angular: 15 (also occurs in 14)\r\n- CDK/Material: 15 (also occurs in 14)\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all","Url":"https://github.com/angular/components/issues/26466","RelatedDescription":"Open issue \"bug(MatSelectionList): MatSelectionListChange options should contain automatically deselected values\" (#26466)"},{"Id":"1550884061","IsPullRequest":false,"CreatedAt":"2023-01-20T14:03:39","Actor":"rRaDuCaN","Number":"26465","RawContent":null,"Title":"bug(MatDialog): Dialog disappears on opening. ","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n![image](https://user-images.githubusercontent.com/50041412/213711411-9e6c4e32-a627-4b4d-8de8-a598ffd63336.png)\r\n\r\nDialog disappears after it is opened, bug reproduces both on the local project & even in the official docs' examples. To be more specific, **display none** is set dynamically on **mat-dialog-container** host (in a weird way), so my best guess is that it comes from the dialog container animation, but a throughout check is required (angular 15.1 version).\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nTo show the dialog.\r\n\r\n### Actual Behavior\r\n\r\nThe dialog is hidden with **display: none** css prop\r\n\r\n### Environment\r\n\r\n- Angular: 15.1 (latest stable from official docs)\r\n- CDK/Material: 15.1\r\n- Browser(s): Google Chome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26465","RelatedDescription":"Closed issue \"bug(MatDialog): Dialog disappears on opening. \" (#26465)"},{"Id":"1548712231","IsPullRequest":true,"CreatedAt":"2023-01-20T09:11:47","Actor":"crisbeto","Number":"26458","RawContent":null,"Title":"refactor(material/menu): expose MenuCloseReason type","State":"closed","Body":"Exposes the `MenuCloseReason` type since it's used in the `closed` event of `MatMenu` which is a public API.\r\n\r\nFixes #26416.","Url":"https://github.com/angular/components/pull/26458","RelatedDescription":"Closed or merged PR \"refactor(material/menu): expose MenuCloseReason type\" (#26458)"},{"Id":"1550489796","IsPullRequest":false,"CreatedAt":"2023-01-20T08:40:36","Actor":"MGX-CODING","Number":"26464","RawContent":null,"Title":"help(All): Shared Material module still a bad practice ? ","State":"open","Body":"### What are you trying to do?\r\n\r\nFor years, it was advised not to make a shared material module (a module containing all the modules Angular Material offers), and rather import all components required in each module. \r\n\r\nThis was advised because otherwise the size of the final bundle would be humongus. \r\n\r\nBut out of curiosity, I have tested it yesterday, and it seems that now, the issue does not exist anymore : adding a shared material module changes the size of a pristine app by  whooping ... 7kB (out of 100kB). I would assume this is thanks to Ivy ? \r\n\r\n### What troubleshooting steps have you tried?\r\n\r\nI tried building a pristine app with angular material by importing a single module (button module) : main is 99.35kB. \r\n\r\nI then added ALL modules into a shared module that I imported into my app module : main is 106.63kB. \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n```bash\r\nnpx @angular/cli@latest new myapp\r\nnpx ng add @angular/material\r\n```\r\n\r\nCreate a shared module with all modules : \r\n\r\n```\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DialogModule } from '@angular/cdk/dialog';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CdkMenuModule } from '@angular/cdk/menu';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\nconst modules = [\r\n    A11yModule,\r\n    CdkAccordionModule,\r\n    ClipboardModule,\r\n    CdkMenuModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    DialogModule\r\n  ];\r\n\r\n@NgModule({\r\n  imports: modules,\r\n  exports: modules\r\n})\r\nexport class MaterialModule {}\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.0\r\n- CDK/Material: 15.1.0\r\n- Browser(s): Chrome 109.0.5414.74\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11 Family 21H2\r\n","Url":"https://github.com/angular/components/issues/26464","RelatedDescription":"Open issue \"help(All): Shared Material module still a bad practice ? \" (#26464)"},{"Id":"1549596465","IsPullRequest":true,"CreatedAt":"2023-01-19T17:15:58","Actor":"amysorto","Number":"26463","RawContent":null,"Title":"fix(material/schematics): add support for migrating new list directives","State":"open","Body":"Fixes #26061 ","Url":"https://github.com/angular/components/pull/26463","RelatedDescription":"Open PR \"fix(material/schematics): add support for migrating new list directives\" (#26463)"},{"Id":"1549292913","IsPullRequest":false,"CreatedAt":"2023-01-19T14:38:27","Actor":"karlkibus","Number":"26462","RawContent":null,"Title":"docs-bug(MatCellHarness): getColumnName returns the name, but altered","State":"open","Body":"### Documentation Feedback\n\nThe description of `MatCellHarness.getColumnName()` states that it\r\n\r\n> Gets the name of the column that the cell belongs to.\r\n\r\nWhat it DOESN'T say is that if the column name has any symbols in it like dots or backslashes or anything that the [_setNameInput method in CdkColumnDef](https://github.com/angular/components/blob/623b0c94e90f83ba1a91d93137ebad6622e12bdd/src/cdk/table/cell.ts#L139) would consider not CSS friendly, the harness will instead return that column's name with all of the offending characters replaced with dashes\r\n\r\n**Example:** \r\n\r\nLet's say that I've defined row template as [per point 3 in MatTable's Getting Started](https://material.angular.io/components/table/overview#3-define-the-row-templates) section, and one of the columns is called _\"bar.tar\"_\r\n\r\n`columnsToDisplay = ['foo', 'bar.tar'];`\r\n\r\nLater on I'm writing tests and using test harnesses to get a list of that table's columns\r\n\r\n```\r\n// cells is of type MatCellHarness[]\r\nconst columnNames = await parallel(() => cells.map(cell => cell.getColumnName()));\r\n// columnNames is ['foo', 'bar-tar']\r\n```\r\n\r\nAs I understand, it's because the cell harness uses the [cell's own CSS class](https://github.com/angular/components/blob/31a754c90405ac3a21858cdd038d56aa7375fabc/src/material/table/testing/cell-harness.ts#L23) to deduct its column's name, which is fair enough, but I do strongly think that this behaviour should be documented\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/table/api#MatCellHarness","Url":"https://github.com/angular/components/issues/26462","RelatedDescription":"Open issue \"docs-bug(MatCellHarness): getColumnName returns the name, but altered\" (#26462)"},{"Id":"1549247603","IsPullRequest":false,"CreatedAt":"2023-01-19T14:15:24","Actor":"RobinBomkamp","Number":"26461","RawContent":null,"Title":"bug(mat-form-field): Formfield-Label is displayed fuzzy","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.0\n\n### Description\n\nThe label of a MatFormField is displayed fuzzy, after switching between tabs. Before switching the tab the label is displayed sharp. Unfortunately it is difficult to see.\r\n\r\nhttps://stackblitz.com/edit/components-issue-2pmhb4?file=src%2Fapp%2Fexample-component.html\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open the stackblitz.\r\n2. Switch to another tab.\r\n3. Go back to the previous tab. Now the label is shown fuzzy.\n\n### Expected Behavior\n\nI expect the label to be shown sharp.\n\n### Actual Behavior\n\nThe label is displayed fuzzy or blurred.\n\n### Environment\n\nAngular CLI: 15.0.4\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.4\r\n@angular-devkit/build-angular   15.0.4\r\n@angular-devkit/core            15.0.4\r\n@angular-devkit/schematics      15.0.4\r\n@angular/cdk                    15.0.3\r\n@angular/material               15.0.3\r\n@schematics/angular             15.0.4\r\nng-packagr                      15.0.3\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4","Url":"https://github.com/angular/components/issues/26461","RelatedDescription":"Open issue \"bug(mat-form-field): Formfield-Label is displayed fuzzy\" (#26461)"},{"Id":"1549235200","IsPullRequest":false,"CreatedAt":"2023-01-19T14:07:28","Actor":"csisy","Number":"26460","RawContent":null,"Title":"bug(mat-menu): Scrollbar appears for sub-menu at given positions","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nTo reproduce the problem, open the mat-menu [documentation/examples](https://material.angular.io/components/menu/examples).\r\n\r\nSometimes the sub-menu receives a scrollbar instead of positioning it in a way that it does not require any scrolling. It has to do something with the additional 8px padding and translating.\r\n\r\nBy changing the `.mat-menu-panel` height to `fit-content` the issues is solved, however it's not a bullet-proof solution.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Open the mat-menu [documentation/examples](https://material.angular.io/components/menu/examples).\r\n1. \"Restore Down\" the browser so you can change its height easily\r\n2. Open the submenu\r\n3. Decrease the height of the browser in a way that the bottom of the window approaches the bottom of the sub-menu\r\n4. In a given interval the sub-menu has a scrollbar\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe sub-menu should be sized and positioned properly so it does not have a scrollbar.\r\n\r\n### Actual Behavior\r\n\r\nIn a given position/interval the sub-menu has a scrollbar.\r\n\r\n### Environment\r\n\r\nAngular CLI: 14.2.1\r\nNode: 14.17.5\r\nPackage Manager: npm 7.24.2 \r\nOS: win32 x64","Url":"https://github.com/angular/components/issues/26460","RelatedDescription":"Open issue \"bug(mat-menu): Scrollbar appears for sub-menu at given positions\" (#26460)"},{"Id":"1548760225","IsPullRequest":false,"CreatedAt":"2023-01-19T09:06:25","Actor":"alexander-goncharuk","Number":"26459","RawContent":null,"Title":"bug(MatSlider): Slider thumb's center moves depending on the selected value","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSlider thumb's center moves either left or right depending on which edge of the slider the selected value is closer to. \r\n\r\nThe second mark on the left:\r\n![image](https://user-images.githubusercontent.com/115452783/213394851-52907bd5-74ec-4bcf-b226-50541dce0936.png)\r\n\r\nThe second mark on the right:\r\n![image](https://user-images.githubusercontent.com/115452783/213395360-cb7bca79-4d47-480c-946a-ac3a831806bf.png)\r\n\r\nYou can see how thumb's ripple has moved relative to the neighbour marks on the slider track. The closer to the edge of the slider you are, the bigger this shift is. \r\n\r\nSlider has changed significantly in version 15 so I'm not sure if this should be considered a regression.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Open StackBlitz example: https://stackblitz.com/edit/angular-la9j4m?file=src%2Fapp%2Fslider-formatting-example.html\r\n2. Focus the second mark on the left\r\n3. Focus the second mark on the right\r\n4. Compare the thumb ripple positions relative to neighbour marks\r\n\n\n### Expected Behavior\n\nSlider's thumb should be positioned correctly regardless of which value is selected on the slider track.\n\n### Actual Behavior\n\nSlider's thumb moves either left or right depending on which edge of the slider the selected value is closer to. \n\n### Environment\n\n- Angular: 15.0.4\r\n- CDK/Material: 15.1.1\r\n- Browser(s): Chrome\r\n- Operating System: macOS","Url":"https://github.com/angular/components/issues/26459","RelatedDescription":"Open issue \"bug(MatSlider): Slider thumb's center moves depending on the selected value\" (#26459)"},{"Id":"1548308166","IsPullRequest":true,"CreatedAt":"2023-01-19T00:09:04","Actor":"kvizcarra","Number":"26457","RawContent":null,"Title":"refactor(material/chips): Use variant `theme-styles` instead of `chip-theme.theme-styles`","State":"open","Body":"This is Step 1 of the effort to migrate off MDC Chips `chip-theme`.","Url":"https://github.com/angular/components/pull/26457","RelatedDescription":"Open PR \"refactor(material/chips): Use variant `theme-styles` instead of `chip-theme.theme-styles`\" (#26457)"},{"Id":"1548265298","IsPullRequest":true,"CreatedAt":"2023-01-18T23:27:59","Actor":"zarend","Number":"26456","RawContent":null,"Title":"Bump version to \"v15.2.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26456","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.1\" with changelog.\" (#26456)"},{"Id":"1548257789","IsPullRequest":true,"CreatedAt":"2023-01-18T23:11:22","Actor":"zarend","Number":"26455","RawContent":null,"Title":"docs: release notes for the v15.1.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26455","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.1 release\" (#26455)"},{"Id":"1548255776","IsPullRequest":true,"CreatedAt":"2023-01-18T23:06:49","Actor":"zarend","Number":"26454","RawContent":null,"Title":"Bump version to \"v15.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26454","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.1\" with changelog.\" (#26454)"},{"Id":"1538280491","IsPullRequest":false,"CreatedAt":"2023-01-18T16:10:39","Actor":"ParadoxSpiral","Number":"26453","RawContent":null,"Title":"feat(overlay): `hostClass` property that sets a class on the rendered element to allow for CSS encapsulation","State":"open","Body":"### Feature Description\r\n\r\nAdd a `hostClass` property besides the `panelClass` property that sets the classes on the inserted element instead of the overlay pane, e.g\r\n\r\n```html\r\n<div id=\"cdk-overlay-0\" class=\"panel-class\" ...>\r\n  <app-some-overlay class=\"host-class\">...</app-some-overlay>\r\n</div>\r\n```\r\n\r\n### Use Case\r\n\r\nThis allows using proper CSS view encapsulation for the component styles, because then you could do this:\r\n\r\n```scss\r\n:host.host-class {\r\n  // Some property\r\n}\r\n```","Url":"https://github.com/angular/components/issues/26453","RelatedDescription":"Open issue \"feat(overlay): `hostClass` property that sets a class on the rendered element to allow for CSS encapsulation\" (#26453)"},{"Id":"1537706757","IsPullRequest":false,"CreatedAt":"2023-01-18T09:55:03","Actor":"johanndev","Number":"26451","RawContent":null,"Title":"feat(all): Support for CSS Cascade Layers","State":"open","Body":"### Feature Description\r\n\r\nAre there any plans to introduce support for CSS Cascade Layers?\r\n\r\nReferences: \r\nhttps://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_layers\r\nhttps://caniuse.com/css-cascade-layers\r\nhttps://www.smashingmagazine.com/2022/01/introduction-css-cascade-layers/\r\n\r\n### Use Case\r\n\r\nTo meet the demands of our customers, our team often has to override the default styles of angular material components. We'd like to use cascade layers to organize our normalization, override, and custom styles. If the angular components would be wrapped in a dedicated (configurable?) layer, our material overrides could be embedded more conveniently into our overall style logic.\r\n","Url":"https://github.com/angular/components/issues/26451","RelatedDescription":"Open issue \"feat(all): Support for CSS Cascade Layers\" (#26451)"},{"Id":"1537568729","IsPullRequest":true,"CreatedAt":"2023-01-18T09:29:34","Actor":"crisbeto","Number":"26450","RawContent":null,"Title":"fix(material/schematics): don't migrate unknown stylesheet formats","State":"closed","Body":"Fixes that we were trying to parse stylesheets that we don't support (e.g. `.sass`).\r\n\r\nFixes #26396.","Url":"https://github.com/angular/components/pull/26450","RelatedDescription":"Closed or merged PR \"fix(material/schematics): don't migrate unknown stylesheet formats\" (#26450)"},{"Id":"1537401218","IsPullRequest":false,"CreatedAt":"2023-01-18T04:57:04","Actor":"jmars2030","Number":"26449","RawContent":null,"Title":"bug(mat-form-field): mat-form-field appearance outline mat-label text is missing top portion","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nEnvironment:  Angular material 15 mac m1max macOS Ventura 13.1. Chrome version 109.0.5414.87 (Official Build) (arm64) and Safari Version 16.2 (18614.3.7.1.5) browsers experience the same issue. \r\n\r\nWhen you click on a form input field build with mat-from-field appearance \"outline\", the mat-label text misses the top portion of the text. \r\n\r\nCode Snippet: \r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Outline form field</mat-label>\r\n        <input matInput placeholder=\"Placeholder\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n</div>\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/122946246/213086425-77d8931b-672c-4d7d-9350-3c6f7609dbde.mov\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Generate a dialog component and add a mat-form-field with appearance = \"outline\" as below: \r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Outline form field</mat-label>\r\n        <input matInput placeholder=\"Placeholder\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n</div>\r\n2. Open the form in browser and click on the input field and will notice the mat-label text missing the top portion as shown on this screenshot\r\n<img width=\"752\" alt=\"Screenshot 2023-01-17 at 11 51 56 PM\" src=\"https://user-images.githubusercontent.com/122946246/213087276-e642bc61-d9e9-4abb-afcd-f4580496407b.png\">\r\n\n\n### Expected Behavior\n\nI expect to see the label text not chopped off at the top.\n\n### Actual Behavior\n\nThe mat-label text get chopped at the top.\r\n\r\n<img width=\"752\" alt=\"Screenshot 2023-01-17 at 11 51 56 PM\" src=\"https://user-images.githubusercontent.com/122946246/213087360-a6145f22-c406-4f00-815d-94b74aeb5a18.png\">\r\n\n\n### Environment\n\n- Angular:\r\nAngular CLI: 15.0.5\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin arm64\r\n\r\nAngular: 15.1.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.1\r\n@angular-devkit/build-angular   15.1.1\r\n@angular-devkit/core            15.1.1\r\n@angular-devkit/schematics      15.0.5\r\n@angular/cli                    15.0.5\r\n@schematics/angular             15.0.5\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n- CDK/Material:\r\n- Browser(s): Chrome  and Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): masOS M1MAX Ventura 13.1\r\n","Url":"https://github.com/angular/components/issues/26449","RelatedDescription":"Open issue \"bug(mat-form-field): mat-form-field appearance outline mat-label text is missing top portion\" (#26449)"},{"Id":"1536935605","IsPullRequest":true,"CreatedAt":"2023-01-17T19:33:32","Actor":"FrenchTechLead","Number":"26447","RawContent":null,"Title":"fix(cdk/collections): SelectionModel does not always respect the compareWith function","State":"open","Body":"Fixed bug in SelectionModel where compareWith function was not consistently respected in deselect method.\r\n\r\nFixes #25878","Url":"https://github.com/angular/components/pull/26447","RelatedDescription":"Open PR \"fix(cdk/collections): SelectionModel does not always respect the compareWith function\" (#26447)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-01-24T03:30:03.3356599Z","RunDurationInMilliseconds":2256}