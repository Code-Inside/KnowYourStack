{"Data":{"Angular-Issues":{"Issues":[{"Id":"2022307726","IsPullRequest":false,"CreatedAt":"2023-12-03T03:21:52","Actor":"rattrayalex","Number":"53333","RawContent":null,"Title":"Angular Zones break promises in `openai` package (return null)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\n[Users making requests](https://github.com/openai/openai-node/issues/232#issuecomment-1820088056) with the `openai` package while using Zones receive `null` on all requests.\r\n\r\nEg; \r\n\r\n```ts\r\nconst response = await this.openai!.chat.completions.create({\r\n  model: 'gpt-3.5-turbo',\r\n  messages: [\r\n    {role: \"system\", content: \"Explain me the purpose of life\"},\r\n  ],\r\n});\r\n// response === null, but shouldn't be\r\n```\r\n\r\n[Users report](https://github.com/openai/openai-node/issues/232#issuecomment-1806001114) that upgrading zone.js to ^0.14.2 allows things to work with `.then()`, but not with `await`. \r\n\r\nThis is likely related to the `openai` package [subclassing Promise](https://github.com/openai/openai-node/blob/a048174c0e53269a01993a573a10f96c4c9ec79e/src/core.ts#L79) to add helper methods, [like `.asResponse()`](https://github.com/openai/openai-node/blob/a048174c0e53269a01993a573a10f96c4c9ec79e/src/core.ts#L79).\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/openai/openai-node/issues/232#issuecomment-1820088056\n\n### Please provide the exception or error you saw\n\n```true\ncompletion is `null`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nI am a maintainer of `openai`, not an Angular user. Users have reported this with Angular v17 (and earlier) and zone.js@0.14.2 (and earlier).\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53333","RelatedDescription":"Open issue \"Angular Zones break promises in `openai` package (return null)\" (#53333)"},{"Id":"2022304532","IsPullRequest":false,"CreatedAt":"2023-12-03T03:08:03","Actor":"gillius","Number":"53332","RawContent":null,"Title":"Broken link in Angular CLI Docs","State":"closed","Body":"### Describe the problem that you experienced\n\nBroken link\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tools/cli\n\n### Describe what you were looking for in the documentation\n\nLink to CLI command reference\n\n### Describe the actions that led you to experience the problem\n\nClick on Learn More of Command Reference\n\n### Describe what you want to experience that would fix the problem\n\nnavigates to CLI command reference\n\n### Add a screenshot if that helps illustrate the problem\n\n<img width=\"464\" alt=\"image\" src=\"https://github.com/angular/angular/assets/1524332/fc21427d-9e4b-4738-abef-81bafb8088c6\">\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nLink goes to https://angular.dev/cli/commands. It appears that https://angular.dev/cli is the intended target.\n```\n","Url":"https://github.com/angular/angular/issues/53332","RelatedDescription":"Closed issue \"Broken link in Angular CLI Docs\" (#53332)"},{"Id":"2022286472","IsPullRequest":true,"CreatedAt":"2023-12-03T01:47:49","Actor":"arturovt","Number":"53331","RawContent":null,"Title":"fix(core): reset DI debug data once root view is removed","State":"open","Body":"This commit resets the DI debug data when the root view is removed because its weak maps capture service instances that need to be garbage collected when the root view is removed. The debug data may be necessary only during app development but is not required when the app is destroyed.","Url":"https://github.com/angular/angular/pull/53331","RelatedDescription":"Open PR \"fix(core): reset DI debug data once root view is removed\" (#53331)"},{"Id":"2022276344","IsPullRequest":true,"CreatedAt":"2023-12-03T01:30:18","Actor":"emancol","Number":"53330","RawContent":null,"Title":"Emanuele üçâ","State":"closed","Body":"Adding my name to contributor list\r\n","Url":"https://github.com/angular/angular/pull/53330","RelatedDescription":"Closed or merged PR \"Emanuele üçâ\" (#53330)"},{"Id":"2022274295","IsPullRequest":true,"CreatedAt":"2023-12-03T01:03:53","Actor":"emancol","Number":"53329","RawContent":null,"Title":"Emanuele üçâ","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53329","RelatedDescription":"Closed or merged PR \"Emanuele üçâ\" (#53329)"},{"Id":"2022238010","IsPullRequest":false,"CreatedAt":"2023-12-02T22:36:29","Actor":"radvil","Number":"53328","RawContent":null,"Title":"Hot reloading on working on 3 changes to the same file","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter I change for example buttons color with different value let's say\r\n- initial value was `red`\r\n- change to `yellow` (this still works)\r\n- change back to `red` (from here the change not working)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/radvil/angular-repro/tree/v17-hot-reload\n\n### Please provide the exception or error you saw\n\n```true\nThere was no errors nor exception found either in `angular-cli` output or in the `chrome-devtools` console\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n----------------\r\nOS: Arch Linux x86_64\r\nHost: Swift SF314-43 V1.06\r\nKernel: 6.1.64-1-lts\r\nPackages: 1387 (pacman)\r\n\r\n{\r\n  \"name\": \"angular-repro\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^17.0.5\",\r\n    \"@angular/cli\": \"^17.0.5\",\r\n    \"@angular/compiler-cli\": \"^17.0.0\",\r\n    \"typescript\": \"~5.2.2\"\r\n  }\r\n}\n```\n\n\n### Anything else?\n\nmy initial setup\r\n- style=scss\r\n- minimal\r\n- skip-tests\r\n- no ssr/ssg\r\n- routing\r\n\r\nI've been facing this issue since last couple weeks, I tried to search for the similar issue on this repo's issue list but I can't anything helpful, so I started this issue my own. TBH I still don't know whether this is related to my OS, kernel version, angular cli, or anything else.","Url":"https://github.com/angular/angular/issues/53328","RelatedDescription":"Open issue \"Hot reloading on working on 3 changes to the same file\" (#53328)"},{"Id":"2022232294","IsPullRequest":true,"CreatedAt":"2023-12-02T22:20:18","Actor":"mmalerba","Number":"53327","RawContent":null,"Title":"Fix misc i18n issues in template pipeline","State":"open","Body":"Adds additional tests for i18n edge cases and make necessary fixes so they pass. See individual commits for details.","Url":"https://github.com/angular/angular/pull/53327","RelatedDescription":"Open PR \"Fix misc i18n issues in template pipeline\" (#53327)"},{"Id":"2022188668","IsPullRequest":false,"CreatedAt":"2023-12-02T20:15:54","Actor":"ArielGueta","Number":"53326","RawContent":null,"Title":"routerLinkActiveOptions should accept partial object","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using routerLinkActiveOptions we are forced to pass all options:\r\n\r\n```html\r\n              [routerLinkActiveOptions]=\"{\r\n                queryParams: 'ignored',\r\n                matrixParams: 'exact',\r\n                paths: 'exact',\r\n                fragment: 'ignored'\r\n              }\"\r\n```\r\n\r\nIn most cases we want to set one of them, for example queryParams ignored. It should accept partial object.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53326","RelatedDescription":"Open issue \"routerLinkActiveOptions should accept partial object\" (#53326)"},{"Id":"2022172854","IsPullRequest":false,"CreatedAt":"2023-12-02T19:20:50","Actor":"pamartinez-signify","Number":"53325","RawContent":null,"Title":"Add new Provider type that would allow to provide a set of providers dynamically","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nThere might be the case where a configuration parameter can be passed to a provideXXX() function to get an array of providers to register.\r\n\r\nLet's say we provide an AppConfig object like:\r\n```\r\nproviders: [\r\n  {\r\n    provide: AppConfig,\r\n    useFactory: configFactory\r\n  }\r\n]\r\n```\r\n\r\nThen we need to register 3rd party providers with a provideXXX(config) function (that takes a configuration parameter).\r\nIn order to provide for it, we want to use values coming from our registered AppConfig.\r\n\r\n### Proposed solution\r\n\r\nIt would be nice being able to retrieve our provided AppConfig in order to use its values as arguments to provideXXX like:\r\n```\r\nproviders: [\r\n  {\r\n    provide: AppConfig,\r\n    useFactory: configFactory\r\n  },\r\n  {\r\n    providerFactory: (config: AppConfig) => provideXXX(config.someValue),\r\n    deps: [AppConfig]\r\n  }\r\n]\r\n```\r\n\r\nNotice how we would now be able to use our AppConfig values as a parameter to a provideXXX.\r\n\r\n### Alternatives considered\r\n\r\nNot sure if there is currently a different approach to this.","Url":"https://github.com/angular/angular/issues/53325","RelatedDescription":"Open issue \"Add new Provider type that would allow to provide a set of providers dynamically\" (#53325)"},{"Id":"2022158384","IsPullRequest":true,"CreatedAt":"2023-12-02T18:36:24","Actor":"AndrewKushnir","Number":"53324","RawContent":null,"Title":"refactor(core): output an error guide link in prod mode","State":"open","Body":"Currently, the link to an error guide is only included into an error message in dev mode. This change makes the `Find more at https://angular.io/errors/NG0XYZ` appear in the error message even in prod mode. Note: the rest of the error message is still tree-shaken away in prod mode (as it happens today).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53324","RelatedDescription":"Open PR \"refactor(core): output an error guide link in prod mode\" (#53324)"},{"Id":"2021999336","IsPullRequest":false,"CreatedAt":"2023-12-02T18:33:32","Actor":"mpricu","Number":"53320","RawContent":null,"Title":"ng build for angular ssr projects create redundant index.html file for every router link","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI created an angular ssr project with the latest 17.0.5 version. I created some components and some routes for those components. \r\nWhen I run the ng build command the resulted \"dist/browser\" directory contained directories for every route (even for the load-lazy routes).\r\nInside each directory there was an index.html file identical with the index.html file from the main directory \"dist/browser\".\r\nI think these files are redundant.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53320","RelatedDescription":"Closed issue \"ng build for angular ssr projects create redundant index.html file for every router link\" (#53320)"},{"Id":"2022114464","IsPullRequest":false,"CreatedAt":"2023-12-02T16:32:52","Actor":"leonelvsc","Number":"53323","RawContent":null,"Title":"Promise returning function with AsyncPipe in expression binding template","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nCould a template expression binding statement that contains a function call that returns a `new Promise` each time bounded to an AsyncPipe be detected by the expression evaluator and throttle down that expression call avoiding crashes or infinite loops? Of course, emitting console warnings or errors in such cases\r\n\r\nhttps://github.com/angular/angular/blob/acd6100960a17e5425f3895883bc91f1499ecb28/packages/compiler/src/output/output_ast.ts#L1246\r\n\r\nhttps://github.com/angular/angular/blob/acd6100960a17e5425f3895883bc91f1499ecb28/packages/compiler/src/template/pipeline/src/instruction.ts#L317\r\n\r\nI know that Angular is working as expected here as each function call returns a new reference. \r\n\r\n### Proposed solution\r\n\r\nAt least if the expression contains an `AsyncPipe`, it somehow should alert the evaluator that the expression contains a PromiseStrategy somehow injecting the ExpressionContext or similar (I don't know about the internals of Angular )\r\n\r\nIf we can detect that at some point the expression returned a new Promise reference at that point we could throttle down the expression evaluation\r\n\r\n### Alternatives considered\r\n\r\nnone","Url":"https://github.com/angular/angular/issues/53323","RelatedDescription":"Open issue \"Promise returning function with AsyncPipe in expression binding template\" (#53323)"},{"Id":"2022035780","IsPullRequest":false,"CreatedAt":"2023-12-02T13:11:41","Actor":"vneogi199","Number":"53322","RawContent":null,"Title":"Search ordering on Angular.dev is not correct","State":"open","Body":"### Describe the problem that you experienced\n\nOn angular.dev, the search shows irrelevant results at the top for some queries.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n1. Go to [https://angular.dev/](https://angular.dev/)\r\n2. Press search icon on the left\r\n3. In the search popup, type \"Content Projection\"\r\n4. First two suggestions are not the best results\r\n<img width=\"526\" alt=\"image\" src=\"https://github.com/angular/angular/assets/20491952/6b159f00-e1d7-49dd-9d92-6a2fc701b492\">\r\n\r\nSimilar results with search query \"pipe\":\r\n<img width=\"568\" alt=\"image\" src=\"https://github.com/angular/angular/assets/20491952/48afae8e-2f78-4e48-bc09-841db77dce7d\">\r\n\n\n### Describe what you want to experience that would fix the problem\n\nCheck if search query is in the title of the result, if so the result should have higher ranking\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53322","RelatedDescription":"Open issue \"Search ordering on Angular.dev is not correct\" (#53322)"},{"Id":"2022001707","IsPullRequest":false,"CreatedAt":"2023-12-02T11:20:46","Actor":"martinszeltins","Number":"53321","RawContent":null,"Title":"feat(router): Support the new Navigation API","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nrouter\r\n\r\n### Description\r\n\r\nCurrently, most SPA apps on the web implement a fake \"loading\" bar like you can see on GitHub when navigating between pages. In a real MPA app where it performs a full page reload browsers show a native loading indicator. This has been impossible to implement until now with SPA because there was no way to show browser's native loading indicator. But now there is a new browser api called the Navigation API, specifically designed for SPA apps that finally shows a native browser loader when navigating in SPA app. üéâ\r\n\r\n### Proposed solution\r\n\r\nImplement the new Navigation API. Yes, it is a new and bleeding edge feature but for those users with browsers that already support it (like Chrome) I think it adds a really nice UX touch.\r\n\r\n[developer.chrome.com/docs/web-platform/navigation-api](https://developer.chrome.com/docs/web-platform/navigation-api/)\r\n[developer.mozilla.org/en-US/docs/Web/API/Navigation_API](https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API)\r\n\r\nDemo:\r\nhttps://gigantic-honored-octagon.glitch.me/\r\n\r\n_(In the demo, you can activate the `Add an artificial two-second delay to all navigations (should impact the loading spinner/scroll restoration/focus reset/accessibility announcements).` checkbox to see the native loader appearing on the tab when navigating)_\r\n\r\n![image](https://github.com/nuxt/nuxt/assets/34019878/e184690f-e448-4393-9695-3a73692ff12f)\r\n\r\n### Alternatives considered\r\n\r\nNone because this is a new API.","Url":"https://github.com/angular/angular/issues/53321","RelatedDescription":"Open issue \"feat(router): Support the new Navigation API\" (#53321)"},{"Id":"2021942725","IsPullRequest":true,"CreatedAt":"2023-12-02T08:26:11","Actor":"crisbeto","Number":"53319","RawContent":null,"Title":"fix(compiler-cli): avoid conflicts with built-in global variables in for loop blocks","State":"open","Body":"Currently we generate the following TCB for a `@for` loop:\r\n\r\n```ts\r\n// @for (item of items; track item) {...}\r\nfor (const item of this.items) {\r\n  var _t1 = item;\r\n  // Do things with `_t1`\r\n}\r\n```\r\n\r\nThis is problematic if the item name is the same as a global variable (e.g. `document`), because when the TCB has references to that variable (e.g. `document.createElement`), it'll find the loop initializer instead of the global variable.\r\n\r\nThese changes fix the issue by generating the following instead:\r\n\r\n```ts\r\nfor (const _t1 of this.items) {\r\n  // Do things with `_t1`\r\n}\r\n```\r\n\r\nFixes #53293.","Url":"https://github.com/angular/angular/pull/53319","RelatedDescription":"Open PR \"fix(compiler-cli): avoid conflicts with built-in global variables in for loop blocks\" (#53319)"},{"Id":"2021672913","IsPullRequest":false,"CreatedAt":"2023-12-02T00:31:09","Actor":"Eric1243123","Number":"53316","RawContent":null,"Title":"Angular compatibility with node v20.10","State":"closed","Body":"### Describe the problem that you experienced\n\nRecently, node updated to v20.10: https://nodejs.org/en/blog/release/v20.10.0\r\n\r\nI was curious as to if and what versions of Angular it is compatible with. I'd assume anything that worked with node v20.9, however I didn't know if anyone had a definitive answer to this.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/versions\n\n### Describe what you were looking for in the documentation\n\nSpecifications on what versions of Angular node v20.10 is compatible with.\n\n### Describe the actions that led you to experience the problem\n\nUpdating node\n\n### Describe what you want to experience that would fix the problem\n\nI would like to know what versions of Angular are compatible with node v20.10\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53316","RelatedDescription":"Closed issue \"Angular compatibility with node v20.10\" (#53316)"},{"Id":"2021751141","IsPullRequest":true,"CreatedAt":"2023-12-02T00:02:58","Actor":"atscott","Number":"53318","RawContent":null,"Title":"feat(router): Set a different browser URL from the one for route matching","State":"open","Body":"This feature adds a property to the `NavigationBehaviorOptions` that allows developers to define a different path for the browser's address bar than the one used to match routes. This is useful for redirects where you want to keep the browser bar the same as the original attempted navigation but redirect to a different page, such as a 404 or error page.\r\n\r\nfixes #17004\r\n","Url":"https://github.com/angular/angular/pull/53318","RelatedDescription":"Open PR \"feat(router): Set a different browser URL from the one for route matching\" (#53318)"},{"Id":"2021748785","IsPullRequest":true,"CreatedAt":"2023-12-01T23:59:18","Actor":"AndrewKushnir","Number":"53317","RawContent":null,"Title":"refactor(core): skip disconnected nodes while computing node path for hydration","State":"open","Body":"In certain cases Angular hydration logic can not rely on the order in which elements are present in a template (for example, in content-projection use-cases) and there is a need to serialize a path from one node to another, so that hydration can locate an element on a page. The logic attempts to use an immediate parent element as an anchor and compute the path from it. If it fails - the path is computed starting from the <body> (this is a fallback).\r\n\r\nThis commit updates the logic to walk up the parents tree if an immediate parent (from a template) is disconnected from the DOM. This helps to shorten the lookup path and make it more stable.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53317","RelatedDescription":"Open PR \"refactor(core): skip disconnected nodes while computing node path for hydration\" (#53317)"},{"Id":"2021645500","IsPullRequest":true,"CreatedAt":"2023-12-01T22:03:07","Actor":"pmvald","Number":"53315","RawContent":null,"Title":"Lcm extra imports","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53315","RelatedDescription":"Open PR \"Lcm extra imports\" (#53315)"},{"Id":"2021453445","IsPullRequest":false,"CreatedAt":"2023-12-01T19:21:01","Actor":"naveedahmed1","Number":"53314","RawContent":null,"Title":"Add support to return different Http Status Code e.g. 404, 301 Redirect and Custom Headers e.g. NoIndex header in renderApplication","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nplatform-server\r\n\r\n### Description\r\n\r\nReturning different HTTP status codes from the `renderApplication` call is not supported at this moment, it would be really useful to add support for:\r\n\r\n1. Returning custom status codes e.g. 404 status code for not found, 503 e.g. in case an API call returns 503 status code.\r\n2. Returning 301/302 redirect status code, with option to set redirect url as well. \r\n3. Return custom headers e.g. NoIndex headers to let search engines know that this page should not be indexed.\r\n\r\n### Proposed solution\r\n\r\nWhat if the `renderApplication` could return a response object with properties:\r\n\r\n1. Body\r\n2. Status Code\r\n3. Redirect URL (Optional)\r\n4. Headers\r\n\r\n### Use case:\r\n\r\nI tried using Angular App on Cloudflare Pages/Worker. It works for most of the parts, but when it comes to setting the http status code or custom headers it doesnt seem to work.\r\n\r\nI generated a test app using the Cloudflare CLI. The CLI generates an Angular 17 app with below server.ts file:\r\n\r\n```\r\nimport { renderApplication } from \"@angular/platform-server\";\r\nimport bootstrap from \"./src/main.server\";\r\n\r\ninterface Env {\r\n    ASSETS: { fetch: typeof fetch };\r\n}\r\n\r\n// We attach the Cloudflare `fetch()` handler to the global scope\r\n// so that we can export it when we process the Angular output.\r\n// See tools/bundle.mjs\r\nasync function workerFetchHandler(request: Request, env: Env) {\r\n    const url = new URL(request.url);\r\n    console.log(\"render SSR\", url.href);\r\n\r\n    // Get the root `index.html` content.\r\n    const indexUrl = new URL(\"/\", url);\r\n    const indexResponse = await env.ASSETS.fetch(new Request(indexUrl));\r\n    const document = await indexResponse.text();\r\n\r\n    const content = await renderApplication(bootstrap, {\r\n        document,\r\n        url: url.pathname,\r\n    });\r\n\r\n    // console.log(\"rendered SSR\", content);\r\n    return new Response(content, indexResponse);\r\n}\r\n\r\nexport default {\r\n    fetch: (request: Request, env: Env) =>\r\n        (globalThis as any)[\"__zone_symbol__Promise\"].resolve(\r\n            workerFetchHandler(request, env)\r\n        ),\r\n};\r\n```\r\n\r\nSo apparently there's no way to pass the status code or custom headers to the worker `workerFetchHandler` since `renderApplication` just retuns a string.","Url":"https://github.com/angular/angular/issues/53314","RelatedDescription":"Open issue \"Add support to return different Http Status Code e.g. 404, 301 Redirect and Custom Headers e.g. NoIndex header in renderApplication\" (#53314)"},{"Id":"2021326674","IsPullRequest":true,"CreatedAt":"2023-12-01T17:42:52","Actor":"ducin","Number":"53313","RawContent":null,"Title":"refactor(devtools): filtering providers by token within \"injector tree\" tab","State":"open","Body":"In some injectors, there are LOTS of providers, making it slightly inconvenient to search for a certain one. This commit introduces a search-by-token for providers of a specific injector.\r\n\r\n## PR Checklist\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n## PR Type\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nSome injectors within the application might include **_lots_** of providers, making it inconvenient to search for them effectively, like below:\r\n\r\n<img width=\"822\" alt=\"Zrzut ekranu 2023-12-1 o 18 33 55\" src=\"https://github.com/angular/angular/assets/375027/ad7c881d-f044-4ff2-9809-b9d2b6ea8878\">\r\n\r\n(scroll is so long)\r\n\r\n<img width=\"817\" alt=\"Zrzut ekranu 2023-12-1 o 18 35 07\" src=\"https://github.com/angular/angular/assets/375027/5df19285-0096-443a-910f-5922047dc93d\">\r\n\r\n## What is the new behavior?\r\n\r\nThis PR introduces a simple search-by-token, allowing to filter effectively. Clicking the 'close' icon clears the input.\r\n\r\n<img width=\"626\" alt=\"image\" src=\"https://github.com/angular/angular/assets/375027/9ab53aa8-bd86-40b1-a134-fbfee12403d8\">\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/53313","RelatedDescription":"Open PR \"refactor(devtools): filtering providers by token within \"injector tree\" tab\" (#53313)"},{"Id":"2019745335","IsPullRequest":true,"CreatedAt":"2023-12-01T17:13:02","Actor":"AndrewKushnir","Number":"53304","RawContent":null,"Title":"fix(core): support hydration for cases when content is re-projected using ng-template","State":"closed","Body":"This commit fixes an issue with hydration, which happens when a content is projected in a certain way, leaving host elements non-projected, but the child content projected.\r\n\r\nThe fix is to detect such situations and add extra annotations to help runtime logic locate those elements at the right locations.\r\n\r\nResolves #53276.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53304","RelatedDescription":"Closed or merged PR \"fix(core): support hydration for cases when content is re-projected using ng-template\" (#53304)"},{"Id":"2019950412","IsPullRequest":true,"CreatedAt":"2023-12-01T17:12:28","Actor":"AndrewKushnir","Number":"53305","RawContent":null,"Title":"fix(compiler): generate proper code for nullish coalescing in styling host bindings","State":"closed","Body":"This commit fixes an issue where having an expression with nullish coalescing in styling host bindings leads to JS errors due to the fact that a declaration for a temporary variable was not included into the generated code.\r\n\r\nResolves #53295.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/53305","RelatedDescription":"Closed or merged PR \"fix(compiler): generate proper code for nullish coalescing in styling host bindings\" (#53305)"},{"Id":"2020334979","IsPullRequest":false,"CreatedAt":"2023-12-01T17:07:46","Actor":"albahrawy","Number":"53308","RawContent":null,"Title":"firstCreatePass on Directive from a library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI'm facing a weird error with any Directive has Provider if I used it from a library.\r\nbecause my directives are little complex I was thinking it is because something in the directive itself but even when I tried with a simple directive I got the same error.\r\nlet me explain how can re-produce:\r\n1- create a simple directive with any provider in meta data. or even empty \r\nproviders;[]\r\n\r\n```typescript\r\n//test-directive.ts\r\nimport { Directive, InjectionToken, inject } from '@angular/core';\r\nexport const APP_CONFIG = new InjectionToken<string>('app.config');\r\n@Directive({\r\n    selector: '[test-directive]',\r\n    host: {\r\n        '[class]': 'class'\r\n    },\r\n    standalone: true,\r\n    providers: [{ provide: APP_CONFIG, useValue: \"test-provider\" }]\r\n})\r\nexport class TestDirective<T> {\r\n    protected class = inject(APP_CONFIG);\r\n}\r\n```\r\n2- app component:\r\n```html\r\n<div test-directive></div>\r\n```\r\n```typescript\r\nimport { Component } from '@angular/core';\r\nimport { TestDirective } from './test-directive';\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [ TestDirective],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n}\r\n```\r\n\r\n3- it will work as expected.\r\n4- create a new library contains test-directive.ts\r\n5- build the library, publish or use it locally.\r\n6- change   app.component.ts\r\n```typescript\r\nimport { TestDirective } from 'library-path';\r\n```\r\n7- ng serve .\r\nError thrown here.\r\n\r\nI spent long time to figure out the issue but I gave up :)\r\nplease can you help.\r\n\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\ncore.mjs:11751 ERROR TypeError: Cannot read properties of null (reading 'firstCreatePass')\r\n    at providersResolver (core.mjs:26277:15)\r\n    at definition.providersResolver (core.mjs:26538:24)\r\n    at initializeDirectives (core.mjs:12676:17)\r\n    at resolveDirectives (core.mjs:12650:13)\r\n    at elementStartFirstCreatePass (core.mjs:21980:5)\r\n    at …µ…µelementStart (core.mjs:22016:9)\r\n    at Module.…µ…µelement (core.mjs:22097:5)\r\n    at AppComponent_Template (app.component.html:1:1)\r\n    at executeTemplate (core.mjs:12158:9)\r\n    at renderView (core.mjs:15265:13)\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53308","RelatedDescription":"Closed issue \"firstCreatePass on Directive from a library\" (#53308)"},{"Id":"2020490000","IsPullRequest":false,"CreatedAt":"2023-12-01T15:24:04","Actor":"Tramb-dev","Number":"53310","RawContent":null,"Title":"@if syntax does not display projected content","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI am having trouble projecting content with ng-content within the if condition of the template, whether using the new @if syntax or the Angular ngIf directive. However, there is no issue within the else block.\r\n\r\nI want to conditionally display projected content with or without additional elements in a child component.  \r\n\r\nHere's a snippet from my child component's template:\r\n```HTML\r\n@if(test) {\r\nTest\r\n<ng-content></ng-content>\r\nTest 2\r\n} @else {\r\n<ng-content></ng-content>\r\n}\r\n```\r\n\r\nHere's a snippet from my parent component's template:\r\n```HTML\r\n<app-my-child-component [test]=\"true\">\r\n    <h3>Awesome title</h3>\r\n  </app-my-child-component>\r\n```\r\n\r\nI would appreciate any insights or assistance in resolving this discrepancy with the new control flow syntax. Thank you!\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nWhen true is binded, I see: Test Test 2.\r\nWhen false is provided, I see: Awesome title.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.1\r\n@angular/material               17.0.1\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI use Angular SSR.","Url":"https://github.com/angular/angular/issues/53310","RelatedDescription":"Closed issue \"@if syntax does not display projected content\" (#53310)"},{"Id":"2020974476","IsPullRequest":true,"CreatedAt":"2023-12-01T14:18:51","Actor":"eneajaho","Number":"53312","RawContent":null,"Title":"fix(router): add customRouteProcessor wip ","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #31800\r\n\r\n\r\n## What is the new behavior?\r\nThe devs can provide a function that will be called everytime the router processes some routes, either in app startup, or when loadComponent / loadChildren resolves.\r\n\r\n```ts\r\nproviders: [\r\n {\r\n  provide: CUSTOM_ROUTE_PROCESSOR,\r\n  useFactory: () => {\r\n   const routeProcessorService = inject(RouteProcessorService); // user defined service\r\n   return (route: Route) => {\r\n     return routeProcessorService.process(route); // this should return a Route\r\n   }\r\n  },\r\n }\r\n]\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/pull/53312","RelatedDescription":"Open PR \"fix(router): add customRouteProcessor wip \" (#53312)"},{"Id":"2020787041","IsPullRequest":true,"CreatedAt":"2023-12-01T12:27:32","Actor":"crisbeto","Number":"53311","RawContent":null,"Title":"fix(compiler-cli): add compiler option to disable control flow content projection diagnostic","State":"open","Body":"These changes add an option to the `extendedDiagnostics` field that allows the check from #53190 to be disabled. This is a follow-up based on a recent discussion.","Url":"https://github.com/angular/angular/pull/53311","RelatedDescription":"Open PR \"fix(compiler-cli): add compiler option to disable control flow content projection diagnostic\" (#53311)"},{"Id":"2020433189","IsPullRequest":false,"CreatedAt":"2023-12-01T09:07:26","Actor":"bjornharvold","Number":"53309","RawContent":null,"Title":"build: üîß More control over custom image loader","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nHi team Angular,\r\n\r\nI read the docs for NgOptimizedImage; specifically on the customer loader with support for multiple CDNs at the bottom. \r\n\r\nFor my use case, I want to default to a supported provider like Cloudinary but have the option to use the generic or similar.\r\n\r\nRight off the bat, I can no longer use `provideCloudinaryLoader()`. While implementing my customer loader, I have no access to the Cloudinary loader function as it's not being exported from @angular/common.\r\n\r\nWould love to get all supported image loader functions exported so we can pick and choose within IMAGE_LOADER provider.\r\n\r\nThoughts?\r\n\r\nCheers,\r\nBjorn\r\n\r\n### Proposed solution\r\n\r\n```\r\n{\r\n      provide: IMAGE_LOADER,\r\n      useValue: (config: ImageLoaderConfig) => {\r\n        if (config.loaderParams != null && config.loaderParams['loader'] != null) {\r\n          switch (config.loaderParams['loader']) {\r\n            case 'raw': \r\n              return config.src;\r\n            case 'cloudinary':\r\n              return createCloudinaryUrl(CLOUDINARY_BASE_PATH, config)\r\n            case ...\r\n          }\r\n        }\r\n\r\n        return createCloudinaryUrl(CLOUDINARY_BASE_PATH, config);\r\n      },\r\n    },\r\n```\r\n\r\n### Alternatives considered\r\n\r\nNone","Url":"https://github.com/angular/angular/issues/53309","RelatedDescription":"Open issue \"build: üîß More control over custom image loader\" (#53309)"},{"Id":"2019991403","IsPullRequest":true,"CreatedAt":"2023-12-01T03:38:27","Actor":"tieppt","Number":"53306","RawContent":null,"Title":"docs(docs-infra): make code blocks scrollable for the API tab","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: Resolves #53294\r\n\r\n\r\n## What is the new behavior?\r\nMake code blocks scrollable for the API tab\r\n![image](https://github.com/angular/angular/assets/7151365/01acd6fb-0b47-4387-982f-9ef9d317480c)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53306","RelatedDescription":"Open PR \"docs(docs-infra): make code blocks scrollable for the API tab\" (#53306)"},{"Id":"2019713462","IsPullRequest":true,"CreatedAt":"2023-11-30T23:50:43","Actor":"atscott","Number":"53303","RawContent":null,"Title":"feat(router): Add info property to `NavigationExtras`","State":"open","Body":"This commit adds a property to the navigation options to allow developers to provide transient navigation info that is available for the duration of the navigation. This information can be retrieved at any time with `Router.getCurrentNavigation()!.extras.info`. Previously, developers were forced to either create a service to hold information like this or put it on the `state` object, which gets persisted to the session history.\r\n\r\nThis feature was partially motivated by the [Navigation API](https://github.com/WICG/navigation-api#example-using-info) and would be something we would want/need to have feature parity if/when the Router supports managing navigations with that instead of `History`.\r\n","Url":"https://github.com/angular/angular/pull/53303","RelatedDescription":"Open PR \"feat(router): Add info property to `NavigationExtras`\" (#53303)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2022268244","IsPullRequest":false,"CreatedAt":"2023-12-03T00:31:51","Actor":"Carlosamouco","Number":"26562","RawContent":null,"Title":"`ng serve` randomly stops watching for file changes","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe `ng serve` randomly stops watching for file changes using the new builder after rebuilding a library in watch mode. \r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new workspace: `ng new my-app`;\r\n1. Create a library: `ng generate library my-lib`;\r\n2. Run `ng build my-lib --watch`;\r\n3. Run `ng serve`;\r\n4. Save any *.ts file within \"my-lib\";\r\n\r\nResult:\r\nThe application is rebuilt a couple of times in a row and the dev-server stops watching for file changes;\r\nSometimes it still works after saving a file for a couple of times and other times, it stops working just after the first save.\r\n\r\n### Exception or Error\r\n\r\n```text\r\nN.A.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.5\r\nNode: 18.18.0\r\nPackage Manager: npm 10.2.4\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nng-packagr                      17.0.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI am using vs code as IDEE.\r\n\r\nFrom version 7.0.3 onwards, the dev server rebuilds twice in a row for any file change in a library, making the problem easier to reproduce. I think that's also a bug since in version 7.0.2 the application was rebuilding just once as it should. It seams the builder is picking up the *.ts file of the library as a trigger to rebuild.","Url":"https://github.com/angular/angular-cli/issues/26562","RelatedDescription":"Open issue \"`ng serve` randomly stops watching for file changes\" (#26562)"},{"Id":"2022227750","IsPullRequest":false,"CreatedAt":"2023-12-02T22:07:08","Actor":"spock123","Number":"26561","RawContent":null,"Title":"Regression: ng serve does not pick up file changes","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n@angular-devkit/build-angular\": \"17.0.3\"\n\n### Description\n\nAfter installing 17.0.4 or 17.0.5 of @angular-devkit/build-angular , file changes are no longer picked up by ng serve.\r\n\r\nReverting to 17.0.3 makes it work again.\n\n### Minimal Reproduction\n\nHard to replicate but it happened as soon as we upgrade our projects to 17.0.5\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.4\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1700.4\r\n@angular-devkit/build-angular        17.0.5\r\n@angular-devkit/core                 17.0.4\r\n@angular-devkit/schematics           17.0.4\r\n@angular/cdk                         17.0.1\r\n@angular/cli                         17.0.4\r\n@angular/fire                        16.0.0\r\n@angular/google-maps                 17.0.1\r\n@angular/material                    17.0.1\r\n@angular/material-date-fns-adapter   17.0.1\r\n@angular/ssr                         17.0.4\r\n@schematics/angular                  17.0.4\r\nrxjs                                 7.8.1\r\ntypescript                           5.2.2\r\nzone.js                              0.14.0\n```\n\n\n### Anything else relevant?\n\nThe issue is persistent on both esbuild and the old browser-builder.","Url":"https://github.com/angular/angular-cli/issues/26561","RelatedDescription":"Closed issue \"Regression: ng serve does not pick up file changes\" (#26561)"},{"Id":"2021567111","IsPullRequest":true,"CreatedAt":"2023-12-02T21:03:33","Actor":"clydin","Number":"26557","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only enable advanced optimizations with script optimizations","State":"closed","Body":"When using the `application` or `browser-esbuild` builders, the internal advanced optimizations can only be applied when in AOT mode. However, they were previously only checking the AOT mode and not whether the project was configured to use script optimizations. The advanced optimizations are now conditional on both AOT mode and the `optimization.scripts` option. This can greatly improve the performance of builds in development since the Babel related processing can be skipped for all TypeScript application code.","Url":"https://github.com/angular/angular-cli/pull/26557","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): only enable advanced optimizations with script optimizations\" (#26557)"},{"Id":"2021879031","IsPullRequest":true,"CreatedAt":"2023-12-02T06:14:56","Actor":"angular-robot","Number":"26560","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.54.0` -> `8.55.0`](https://renovatebot.com/diffs/npm/eslint/8.54.0/8.55.0) |\n| [eslint-config-prettier](https://togithub.com/prettier/eslint-config-prettier) | devDependencies | minor | [`9.0.0` -> `9.1.0`](https://renovatebot.com/diffs/npm/eslint-config-prettier/9.0.0/9.1.0) |\n| [pacote](https://togithub.com/npm/pacote) | dependencies | patch | [`17.0.4` -> `17.0.5`](https://renovatebot.com/diffs/npm/pacote/17.0.4/17.0.5) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | patch | [`17.0.4` -> `17.0.5`](https://renovatebot.com/diffs/npm/pacote/17.0.4/17.0.5) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.31` -> `8.4.32`](https://renovatebot.com/diffs/npm/postcss/8.4.31/8.4.32) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | patch | [`8.4.31` -> `8.4.32`](https://renovatebot.com/diffs/npm/postcss/8.4.31/8.4.32) |\n| [verdaccio](https://verdaccio.org) ([source](https://togithub.com/verdaccio/verdaccio)) | devDependencies | patch | [`5.27.0` -> `5.27.1`](https://renovatebot.com/diffs/npm/verdaccio/5.27.0/5.27.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>eslint/eslint (eslint)</summary>\n\n### [`v8.55.0`](https://togithub.com/eslint/eslint/releases/tag/v8.55.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.54.0...v8.55.0)\n\n#### Features\n\n-   [`8c9e6c1`](https://togithub.com/eslint/eslint/commit/8c9e6c100a6eb69da292463293b3b48cff911a01) feat: importNamePattern option in no-restricted-imports ([#&#8203;17721](https://togithub.com/eslint/eslint/issues/17721)) (Tanuj Kanti)\n\n#### Documentation\n\n-   [`83ece2a`](https://togithub.com/eslint/eslint/commit/83ece2afc2dc6c49efe82678663fe4cba590c0e5) docs: fix typo `--rules` -> `--rule` ([#&#8203;17806](https://togithub.com/eslint/eslint/issues/17806)) (OKURA Masafumi)\n-   [`fffca5c`](https://togithub.com/eslint/eslint/commit/fffca5c362bcd205dbf79d1bb52834f8a98fc6bd) docs: remove \"Open in Playground\" buttons for removed rules ([#&#8203;17791](https://togithub.com/eslint/eslint/issues/17791)) (Francesco Trotta)\n-   [`a6d9442`](https://togithub.com/eslint/eslint/commit/a6d9442a9ab34d5d19f78d8c8fd0767a1237bfe3) docs: fix correct/incorrect examples of rules ([#&#8203;17789](https://togithub.com/eslint/eslint/issues/17789)) (Tanuj Kanti)\n-   [`383e999`](https://togithub.com/eslint/eslint/commit/383e99928d7ce649ec9030c9856b03fbac0c3501) docs: update and fix examples for `no-unused-vars` ([#&#8203;17788](https://togithub.com/eslint/eslint/issues/17788)) (Tanuj Kanti)\n-   [`5a8efd5`](https://togithub.com/eslint/eslint/commit/5a8efd5b7ad13eb320a1f468d1d4ab3c8ab99214) docs: add specific stylistic rule for each deprecated rule ([#&#8203;17778](https://togithub.com/eslint/eslint/issues/17778)) (Etienne)\n\n#### Chores\n\n-   [`eb8950c`](https://togithub.com/eslint/eslint/commit/eb8950c3b811c9163b9aae23af8b6266ad98b295) chore: upgrade [@&#8203;eslint/js](https://togithub.com/eslint/js)[@&#8203;8](https://togithub.com/8).55.0 ([#&#8203;17811](https://togithub.com/eslint/eslint/issues/17811)) (Milos Djermanovic)\n-   [`93df384`](https://togithub.com/eslint/eslint/commit/93df3849a7a25ebe0502000bf0bfb80a6613a5ae) chore: package.json update for [@&#8203;eslint/js](https://togithub.com/eslint/js) release (Jenkins)\n-   [`fe4b954`](https://togithub.com/eslint/eslint/commit/fe4b9545a83e9aca7ba4bb77bc9c868d57de777f) chore: upgrade [@&#8203;eslint/eslintrc](https://togithub.com/eslint/eslintrc)[@&#8203;2](https://togithub.com/2).1.4 ([#&#8203;17799](https://togithub.com/eslint/eslint/issues/17799)) (Milos Djermanovic)\n-   [`bd8911d`](https://togithub.com/eslint/eslint/commit/bd8911db85c7a1127543c9212c8cea47a5cb687d) ci: pin Node.js 21.2.0 ([#&#8203;17809](https://togithub.com/eslint/eslint/issues/17809)) (Milos Djermanovic)\n-   [`b29a16b`](https://togithub.com/eslint/eslint/commit/b29a16b22f234f6134475efb6c7be5ac946556ee) chore: fix several `cli` tests to run in the intended flat config mode ([#&#8203;17797](https://togithub.com/eslint/eslint/issues/17797)) (Milos Djermanovic)\n-   [`de165c1`](https://togithub.com/eslint/eslint/commit/de165c108203c6703516ac651f5b4cac5b241804) chore: remove unused config-extends fixtures ([#&#8203;17781](https://togithub.com/eslint/eslint/issues/17781)) (Milos Djermanovic)\n-   [`d4304b8`](https://togithub.com/eslint/eslint/commit/d4304b8b66eac870ffbf4840d84add8a123b25fc) chore: remove formatting/stylistic rules from new rule templates ([#&#8203;17780](https://togithub.com/eslint/eslint/issues/17780)) (Francesco Trotta)\n-   [`21024fe`](https://togithub.com/eslint/eslint/commit/21024fe2029420b413bed11d23761c87e9a02a1a) chore: check rule examples for syntax errors ([#&#8203;17718](https://togithub.com/eslint/eslint/issues/17718)) (Francesco Trotta)\n\n</details>\n\n<details>\n<summary>prettier/eslint-config-prettier (eslint-config-prettier)</summary>\n\n### [`v9.1.0`](https://togithub.com/prettier/eslint-config-prettier/blob/HEAD/CHANGELOG.md#Version-910-2023-12-02)\n\n[Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/v9.0.0...v9.1.0)\n\n-   Added: \\[unicorn/template-indent], (as a \\[special rule]\\[unicorn/template-indent-special]). Thanks to G√ºrg√ºn Dayƒ±oƒülu ([@&#8203;gurgunday](https://togithub.com/gurgunday))!\n-   Changed: All the \\[formatting rules that were deprecated in ESLint 8.53.0]\\[deprecated-8.53.0] are now excluded if you set the `ESLINT_CONFIG_PRETTIER_NO_DEPRECATED` environment variable.\n\n</details>\n\n<details>\n<summary>npm/pacote (pacote)</summary>\n\n### [`v17.0.5`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#1705-2023-12-01)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v17.0.4...v17.0.5)\n\n##### Bug Fixes\n\n-   [`0c96b9e`](https://togithub.com/npm/pacote/commit/0c96b9e825806441e043fbf97f167be3e9f5479d) [#&#8203;338](https://togithub.com/npm/pacote/pull/338) bug to support rotated keys in signature/attestation audit ([#&#8203;338](https://togithub.com/npm/pacote/issues/338)) ([@&#8203;feelepxyz](https://togithub.com/feelepxyz))\n\n</details>\n\n<details>\n<summary>postcss/postcss (postcss)</summary>\n\n### [`v8.4.32`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#8432)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.31...8.4.32)\n\n-   Fixed `postcss().process()` types (by Andrew Ferreira).\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio (verdaccio)</summary>\n\n### [`v5.27.1`](https://togithub.com/verdaccio/verdaccio/compare/v5.27.0...v5.27.1)\n\n[Compare Source](https://togithub.com/verdaccio/verdaccio/compare/v5.27.0...v5.27.1)\n\n</details>\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26560","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#26560)"},{"Id":"2021878970","IsPullRequest":true,"CreatedAt":"2023-12-02T06:14:42","Actor":"angular-robot","Number":"26559","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `9bd94a8` -> `3253191` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `d29e65f` -> `fb5ee2c` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `069ea40` -> `3069be8` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `3307c8c` -> `a0aa627` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.1.0-next.0` -> `17.1.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.1.0-next.0/17.1.0-next.1) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `4917a4c` -> `ccfaad5` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `6aef860` -> `f44be31` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `33e5de3` -> `096c828` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `1c2bdc3` -> `e7d1aa6` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `7f599a1` -> `64f26fa` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `8885eab` -> `1063494` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `eb89469` -> `19facae` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `35ef293` -> `7021e06` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.1.0-next.0` -> `17.1.0-next.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.1.0-next.0/17.1.0-next.1) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `e0e89bb` -> `b2a4d15` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f00eb4c` -> `6f2e63f` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `a07af34` -> `b152e78` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `161fbf9` -> `65cc1a9` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `f17ee49` -> `db0f62b` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `8c1e2cb` -> `17e18d9` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `afc0799` -> `e579a1b` |\n| angular/dev-infra | action | digest | `1d3d98f` -> `2113cd7` |\n\nüî° If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.1.0-next.1`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1710-next1-titanium-tortoise-2023-12-01)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.1.0-next.0...17.1.0-next.1)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cf868a508](https://togithub.com/angular/components/commit/cf868a5089a4c9eaddd4a55fd18b952fb96d5c19) | fix | **autocomplete:** clear selected option if it is removed while typing ([#&#8203;28146](https://togithub.com/angular/components/pull/28146)) |\n| [a6582b510](https://togithub.com/angular/components/commit/a6582b51082955cec4c61f04d1407ff02c749c88) | fix | **button:** fix flat button line-height ([#&#8203;28090](https://togithub.com/angular/components/pull/28090)) |\n| [6b2f03be3](https://togithub.com/angular/components/commit/6b2f03be33ed0b2fc3329a14217f18e7a8590b31) | fix | **button:** fix outlined button line-height ([#&#8203;28092](https://togithub.com/angular/components/pull/28092)) |\n| [8fb5b6b41](https://togithub.com/angular/components/commit/8fb5b6b413f7a80d41d3052b7c4703451767d1f1) | fix | **button:** fix text button line-height ([#&#8203;28091](https://togithub.com/angular/components/pull/28091)) |\n| [da692b13c](https://togithub.com/angular/components/commit/da692b13c89b5355068033a1e78a88ce19823b35) | fix | **core:** prevent ng update schematic from checking node_modules ([#&#8203;28152](https://togithub.com/angular/components/pull/28152)) |\n| [9e4389015](https://togithub.com/angular/components/commit/9e438901555eaedc6617dd241ffabe391cba3b64) | fix | **form-field:** work around closure compiler issue ([#&#8203;28185](https://togithub.com/angular/components/pull/28185)) |\n| [96fe7b3f3](https://togithub.com/angular/components/commit/96fe7b3f3fd663560943ddf051b1b160834111e1) | fix | **tooltip:** increase specificity of non-interactive styles ([#&#8203;28180](https://togithub.com/angular/components/pull/28180)) |\n\n##### youtube-player\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e0414b19c](https://togithub.com/angular/components/commit/e0414b19c132ecdd26b49b133e323f80960f1159) | feat | automatically load youtube api |\n| [381a65f33](https://togithub.com/angular/components/commit/381a65f33d87c885235d2076297f092d6c218bae) | feat | coerce inputs |\n| [b7c47c302](https://togithub.com/angular/components/commit/b7c47c3025d430c738175f0e7e84d37c6311d8fd) | feat | improve initial load performance using a placeholder image ([#&#8203;28207](https://togithub.com/angular/components/pull/28207)) |\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [85c658f74](https://togithub.com/angular/components/commit/85c658f7454859903d521b6ececa374227027914) | feat | **theming:** add M3 autocomplete, badge, and bottom-sheet support ([#&#8203;28177](https://togithub.com/angular/components/pull/28177)) |\n| [d12bd7fde](https://togithub.com/angular/components/commit/d12bd7fde6eb5502e200d21a42ecd4acd2bd579b) | feat | **theming:** add M3 button-toggle support ([#&#8203;28179](https://togithub.com/angular/components/pull/28179)) |\n| [02db80dcc](https://togithub.com/angular/components/commit/02db80dcc089fb7767c925b9d93abf98f258488b) | feat | **theming:** add M3 chips support ([#&#8203;28183](https://togithub.com/angular/components/pull/28183)) |\n| [0943eca03](https://togithub.com/angular/components/commit/0943eca0385846f0088e065890b9954e816b9b45) | feat | **theming:** add M3 datepicker support ([#&#8203;28166](https://togithub.com/angular/components/pull/28166)) |\n| [7a1cd4243](https://togithub.com/angular/components/commit/7a1cd4243201c12bd3713c39789785549b6b9a62) | feat | **theming:** add M3 dialog support ([#&#8203;28163](https://togithub.com/angular/components/pull/28163)) |\n| [cf6ab1c1d](https://togithub.com/angular/components/commit/cf6ab1c1d0a30c1a77efe878d1f15bb4207ec31e) | feat | **theming:** add M3 expansion support ([#&#8203;28159](https://togithub.com/angular/components/pull/28159)) |\n| [4d50c3857](https://togithub.com/angular/components/commit/4d50c38579f5a3a8d85b3f192ca6567bbcdcf8de) | feat | **theming:** add M3 icon support ([#&#8203;28126](https://togithub.com/angular/components/pull/28126)) |\n| [2963b7aac](https://togithub.com/angular/components/commit/2963b7aaca3d91fe62f592707ca764f818a5877e) | feat | **theming:** add M3 icon-button & fab support ([#&#8203;28157](https://togithub.com/angular/components/pull/28157)) |\n| [f2d5644f6](https://togithub.com/angular/components/commit/f2d5644f62eef429643850f64657585375a03422) | feat | **theming:** add M3 menu & divider support ([#&#8203;28144](https://togithub.com/angular/components/pull/28144)) |\n| [2cb7adae7](https://togithub.com/angular/components/commit/2cb7adae779ec5a03b27367b3697d726da98dfea) | feat | **theming:** add M3 paginator support ([#&#8203;28164](https://togithub.com/angular/components/pull/28164)) |\n| [0f3a55f47](https://togithub.com/angular/components/commit/0f3a55f479fabc56e361088510ba0a5f987163c3) | feat | **theming:** add M3 select, option, and optgroup support ([#&#8203;28148](https://togithub.com/angular/components/pull/28148)) |\n| [603f5501a](https://togithub.com/angular/components/commit/603f5501a37874d68de199adfc573071628b6424) | feat | **theming:** add M3 sidenav support ([#&#8203;28125](https://togithub.com/angular/components/pull/28125)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26559","RelatedDescription":"Open PR \"build: update angular\" (#26559)"},{"Id":"2021812730","IsPullRequest":true,"CreatedAt":"2023-12-02T02:27:59","Actor":"clydin","Number":"26558","RawContent":null,"Title":"refactor(@angular-devkit/build-webpack): align builders source directory structure with build-angular","State":"open","Body":"The source code for the builders within the `@angular-devkit/build-webpack` package have been moved into a `builders` subdirectory to more closely align with the structure of the builders in the `@angular-devkit/build-angular` package. An initial `package.json` exports field definition has also been added that currently continues to allow deep imports. Public exports remain unchanged.","Url":"https://github.com/angular/angular-cli/pull/26558","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-webpack): align builders source directory structure with build-angular\" (#26558)"},{"Id":"2020851774","IsPullRequest":true,"CreatedAt":"2023-12-02T01:57:57","Actor":"alan-agius4","Number":"26546","RawContent":null,"Title":"fix(@schematics/angular): enable TypeScript `skipLibCheck` in new workspace","State":"closed","Body":"This commit enables `skipLibCheck` in new workspaces which is now recommended by TypeScript.  When enabled, type checking of declaration files is skipped as rather than doing a full check of all `d.ts` files, TypeScript will type check the code you specifically refer to in your app‚Äôs source code.\r\n\r\nSee: https://www.typescriptlang.org/tsconfig#skipLibCheck\r\n\r\n\r\nNote: this option is also enabled by default when running `tsc --init`\r\n\r\n```\r\nnpx tsc --init               \r\n\r\nCreated a new tsconfig.json with: TS \r\n  target: es2016\r\n  module: commonjs\r\n  strict: true\r\n  esModuleInterop: true\r\n  skipLibCheck: true\r\n  forceConsistentCasingInFileNames: true\r\n```\r\n\r\nSome more context: https://github.com/microsoft/TypeScript-Website/pull/970","Url":"https://github.com/angular/angular-cli/pull/26546","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): enable TypeScript `skipLibCheck` in new workspace\" (#26546)"},{"Id":"2020852798","IsPullRequest":true,"CreatedAt":"2023-12-01T20:49:55","Actor":"alan-agius4","Number":"26547","RawContent":null,"Title":"feat(@schematics/angular): enable TypeScript `exactOptionalPropertyTypes` in new strict workspaces","State":"closed","Body":"\r\n\r\nTypeScripts recommanded enabling `exactOptionalPropertyTypes`. From https://www.typescriptlang.org/tsconfig#exactOptionalPropertyTypes\r\n\r\nWith `exactOptionalPropertyTypes` enabled, TypeScript applies stricter rules around how it handles properties on type or interfaces which have a `?` prefix.\r\n\r\nFor example, this interface declares that there is a property which can be one of two strings: ‚Äòdark‚Äô or ‚Äòlight‚Äô or it should not be in the object.\r\n```ts\r\ninterface UserDefaults {\r\n  // The absence of a value represents 'system'\r\n  colorThemeOverride?: \"dark\" | \"light\";\r\n}\r\n```\r\n\r\nWithout this flag enabled, there are three values which you can set `colorThemeOverride` to be: ‚Äúdark‚Äù, ‚Äúlight‚Äù and undefined.\r\n\r\nSetting the value to undefined will allow most JavaScript runtime checks for the existence to fail, which is effectively falsy. However, this isn‚Äôt quite accurate; `colorThemeOverride: undefined` is not the same as `colorThemeOverride` not being defined. For example, \"colorThemeOverride\" in settings would have different behavior with undefined as the key compared to not being defined.\r\n\r\n`exactOptionalPropertyTypes` makes TypeScript truly enforce the definition provided as an optional property.\r\n\r\n```ts\r\nconst settings = getUserSettings();\r\nsettings.colorThemeOverride = \"dark\";\r\nsettings.colorThemeOverride = \"light\";\r\n\r\n// But not:\r\nsettings.colorThemeOverride = undefined;\r\n// Type 'undefined' is not assignable to type '\"dark\" | \"light\"' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/26547","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): enable TypeScript `exactOptionalPropertyTypes` in new strict workspaces\" (#26547)"},{"Id":"2021503654","IsPullRequest":true,"CreatedAt":"2023-12-01T19:58:03","Actor":"clydin","Number":"26556","RawContent":null,"Title":"fix(@angular-devkit/build-angular): normalize asset source locations in Vite-based development server","State":"open","Body":"The Vite-based development server uses an allow list to permit access to configured assets. This list is checked internally to Vite by using its normalized path form. To ensure that assets provided by the build are checked correctly on all platforms, the asset list is now normalized with Vite's path normalization prior to being used.","Url":"https://github.com/angular/angular-cli/pull/26556","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): normalize asset source locations in Vite-based development server\" (#26556)"},{"Id":"2021421310","IsPullRequest":false,"CreatedAt":"2023-12-01T18:55:26","Actor":"LanderBeeuwsaert","Number":"26555","RawContent":null,"Title":"es-build regression 17.1.0-next.0 rebuild causes \"the request url \"...\" is outside of Vite serving allow list.\"","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.5\n\n### Description\n\nWhen having @angular-devkit/build-angular:browser-esbuild on\r\nwith build-angular and angular/cli on 17.1.0-next.0\r\nany dev server rebuild causes:\r\nThe request url \"...\" is outside of Vite serving allow list for all assets\n\n### Minimal Reproduction\n\nI suppose it's down to my configuration somehow, but there's nothing that special to it.\r\nreversing to 17.0.5 immediately solves this\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0-next.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1701.0-next.0\r\n@angular-devkit/build-angular        17.1.0-next.0\r\n@angular-devkit/core                 16.2.6\r\n@angular-devkit/schematics           16.2.6\r\n@angular/cdk                         16.2.12\r\n@angular/cli                         17.1.0-next.0\r\n@angular/fire                        16.0.0\r\n@angular/google-maps                 16.2.12\r\n@angular/material                    16.2.12\r\n@angular/material-date-fns-adapter   16.2.12\r\n@angular/youtube-player              16.2.12\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.2.6\r\nrxjs                                 7.8.1\r\ntypescript                           5.2.2\r\nzone.js                              0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26555","RelatedDescription":"Open issue \"es-build regression 17.1.0-next.0 rebuild causes \"the request url \"...\" is outside of Vite serving allow list.\"\" (#26555)"},{"Id":"2021310616","IsPullRequest":true,"CreatedAt":"2023-12-01T18:39:27","Actor":"alan-agius4","Number":"26554","RawContent":null,"Title":"test(@angular-devkit/build-angular): enable dev-server watch tests for vite","State":"closed","Body":"\r\n\r\nThese tests can now be enabled.\r\n","Url":"https://github.com/angular/angular-cli/pull/26554","RelatedDescription":"Closed or merged PR \"test(@angular-devkit/build-angular): enable dev-server watch tests for vite\" (#26554)"},{"Id":"2021167851","IsPullRequest":true,"CreatedAt":"2023-12-01T17:19:48","Actor":"clydin","Number":"26552","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): add watch builder teardown to application builder","State":"closed","Body":"An AbortController is now automatically linked to the `application` builder's teardown context if one has not been provided. This supports reduced overhead in the unit tests by eliminating the need to manually create and use an AbortController/AbortSignal in each test that uses watch mode. Relevant tests that were previously doing this have also been updated.","Url":"https://github.com/angular/angular-cli/pull/26552","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): add watch builder teardown to application builder\" (#26552)"},{"Id":"2021235998","IsPullRequest":false,"CreatedAt":"2023-12-01T17:12:20","Actor":"sangalao","Number":"26553","RawContent":null,"Title":"Node process for \"Build\" command is taking much more RAM (6GB) than configured \"max_old_space_size\" option (4GB)","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHello,\r\n\r\nThe build command I run for my project is : \r\n\r\n```sh\r\nnode --max_old_space_size=4096 node_modules/@angular/cli/bin/ng build --configuration production\r\n```\r\n\r\nThis commands runs successfully, but however the NodeJS process for building app takes up to 6GB.\r\n\r\nTo be more precise, during beginning-middle of building phase it takes less than 4GB,\r\nand always at the middle-end of building phase, it goes up to 6GB just before end of successful build.\r\n\r\nTo start investigation, I launched build command with \"-trace-gc\" option : \r\n\r\n```sh\r\nnode --trace-gc --max_old_space_size=4096 node_modules/@angular/cli/bin/ng build --configuration production\r\n```\r\n\r\nI saw, with this option, that there are several Node \"V8 isolates\" that are created in the same NodeJS process (\"V8 isolate\" = JS Heap instance, based on [Node GC documentation](https://nodejs.org/en/docs/guides/diagnostics/memory/using-gc-traces)) : \r\n\r\nAmong those \"V8 isolates\", with a proper heap for each, 2 of them have particular high heap amount at the same time : \r\n\r\n- The main one (Instance : 0000017EBED1F120) goes up to 3.6 GB of heap\r\n- A another one (Instance : 0000017FCBC9E030), created at middle-end of build phase, goes up to 2GB\r\n\r\nWhat also have to be noticed is that the second one consumes such a memory ONLY when option \"production > optimization > scripts\" in \"angular.json\" is set to true.\r\nThe \"production > optimization > scripts\" option in \"angular.json\" is required for my production performance requirements (minification, tree-shaking, dead-code elimination).\r\n\r\n\r\nSo my questions/remarks are : \r\n\r\n*  The \"max_old_space_size\" parameter seems to mainly apply to the MAIN V8 isolate, so I'm not able to configure \"global\" memory consumption during build phase. Is there a parameter to configure the GLOBAL heap used by NodeJS process for building phase ? If not, I think it could be useful to have one, and/or be able to fine-tune memory for all V8 isolates with high memory consumption\r\n\r\n* I cannot find any documentation explaning the fact that \"production > optimization > scripts\" option can result in high memory consumption, why it takes such memory, how I could tune it. Is is possible to have such a documentation / explanation ?\r\n\r\n* I also found this issue about memory limits for several \"V8 isolates\" in NodeJS, and was wondering whether it could be linked to my issue : [worker: resourceLimits overridden by --max-old-space-size](https://github.com/nodejs/node/issues/43991)\r\n\r\nThanks\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nCommand run :\r\n\r\n```sh\r\nnode --trace-gc node_modules/@angular/cli/bin/ng build --configuration production\r\n```\r\n\r\n\r\nPackages : \r\n```json\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~14.2.0\",\r\n    \"@angular/cdk\": \"~14.2.0\",\r\n    \"@angular/cdk-experimental\": \"~14.2.0\",\r\n    \"@angular/common\": \"~14.2.0\",\r\n    \"@angular/compiler\": \"~14.2.0\",\r\n    \"@angular/core\": \"~14.2.0\",\r\n    \"@angular/flex-layout\": \"^14.0.0-beta.40\",\r\n    \"@angular/forms\": \"~14.2.0\",\r\n    \"@angular/material\": \"~14.2.0\",\r\n    \"@angular/material-moment-adapter\": \"~14.2.0\",\r\n    \"@angular/platform-browser\": \"~14.2.0\",\r\n    \"@angular/platform-browser-dynamic\": \"~14.2.0\",\r\n    \"@angular/router\": \"~14.2.0\",\r\n    \"@danmarshall/deckgl-typings\": \"4.9.12\",\r\n    \"@dashjoin/json-schema-form\": \"^0.9.0\",\r\n    \"@deck.gl/aggregation-layers\": \"8.7.7\",\r\n    \"@deck.gl/core\": \"8.7.7\",\r\n    \"@deck.gl/extensions\": \"8.7.7\",\r\n    \"@deck.gl/geo-layers\": \"8.7.7\",\r\n    \"@deck.gl/json\": \"8.7.7\",\r\n    \"@deck.gl/layers\": \"8.7.7\",\r\n    \"@deck.gl/mapbox\": \"8.7.7\",\r\n    \"@deck.gl/mesh-layers\": \"8.7.7\",\r\n    \"@loaders.gl/core\": \"3.1.8\",\r\n    \"@loaders.gl/draco\": \"3.1.8\",\r\n    \"@loaders.gl/gltf\": \"3.1.8\",\r\n    \"@loaders.gl/worker-utils\": \"3.1.8\",\r\n    \"@luma.gl/constants\": \"8.5.10\",\r\n    \"@luma.gl/core\": \"8.5.10\",\r\n    \"@mapbox/mapbox-gl-draw\": \"^1.2.0\",\r\n    \"@nebula.gl/layers\": \"npm:@sdp/nebula.gl__layers@^1.0.3-rev-2\",\r\n    \"@nebula.gl/overlays\": \"1.0.4\",\r\n    \"@ngx-translate/core\": \"^14.0.0\",\r\n    \"@ngx-translate/http-loader\": \"^7.0.0\",\r\n    \"@turf/along\": \"6.3.0\",\r\n    \"@turf/destination\": \"6.3.0\",\r\n    \"@turf/distance\": \"6.3.0\",\r\n    \"@turf/helpers\": \"6.3.0\",\r\n    \"@turf/length\": \"6.3.0\",\r\n    \"angular-oauth2-oidc\": \"^13.0.1\",\r\n    \"angular-oauth2-oidc-jwks\": \"^13.0.1\",\r\n    \"angular-resize-event\": \"^3.2.0\",\r\n    \"angular-tag-cloud-module\": \"^13.0.0\",\r\n    \"aws-sdk\": \"^2.1104.0\",\r\n    \"bpmn-js\": \"^11.5.0\",\r\n    \"chroma-js\": \"2.1.0\",\r\n    \"core-js\": \"^3.21.1\",\r\n    \"css-loader\": \"^6.7.1\",\r\n    \"csscolorparser\": \"1.0.3\",\r\n    \"diagram-js\": \"^11.11.0\",\r\n    \"echarts\": \"^5.4.0\",\r\n    \"file-saver\": \"^2.0.2\",\r\n    \"golden-layout\": \"^1.5.9\",\r\n    \"html2canvas\": \"1.3.2\",\r\n    \"ip-address\": \"5.9.0\",\r\n    \"jquery\": \"^3.4.1\",\r\n    \"jsep\": \"0.3.4\",\r\n    \"jsonata\": \"^1.8.5\",\r\n    \"jsoneditor\": \"^9.1.4\",\r\n    \"jspdf\": \"^2.1.1\",\r\n    \"jspdf-autotable\": \"^3.5.14\",\r\n    \"jszip\": \"^3.10.1\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"mapbox-gl\": \"1.13.2\",\r\n    \"moment\": \"^2.29.1\",\r\n    \"mqtt\": \"4.3.7\",\r\n    \"ng5-slider\": \"^1.2.4\",\r\n    \"ngx-color\": \"^5.1.4\",\r\n    \"ngx-echarts\": \"^14.0.0\",\r\n    \"ngx-material-timepicker\": \"^5.5.3\",\r\n    \"ngx-mqtt\": \"9.0.5\",\r\n    \"ngx-papaparse\": \"^4.0.4\",\r\n    \"ngx-quill-upload\": \"^2.0.0\",\r\n    \"ngx-scrollbar\": \"^7.4.1\",\r\n    \"ngx-ui-loader\": \"^13.0.0\",\r\n    \"object-hash\": \"3.0.0\",\r\n    \"primeicons\": \"^6.0.0\",\r\n    \"primeng\": \"^14.2.1\",\r\n    \"quill\": \"npm:@sdp/quill@2.0.0-dev.4-rev-1\",\r\n    \"quill-better-table\": \"npm:@sdp/quill-better-table@1.2.10-rev-1\",\r\n    \"quill-blot-formatter\": \"npm:@sdp/quill-blot-formatter@1.0.5-rev-1\",\r\n    \"quill-delta\": \"npm:@sdp/quill-delta@5.0.0-rev-1\",\r\n    \"roboto-fontface\": \"^0.10.0\",\r\n    \"rxjs\": \"~7.5.0\",\r\n    \"rxjs-compat\": \"^6.6.7\",\r\n    \"stream\": \"0.0.2\",\r\n    \"supercluster\": \"7.1.3\",\r\n    \"three\": \"^0.131.3\",\r\n    \"timers\": \"^0.1.1\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"util\": \"^0.12.4\",\r\n    \"uuid\": \"8.3.2\",\r\n    \"vis-timeline\": \"^7.7.0\",\r\n    \"xml2js\": \"^0.4.23\",\r\n    \"zone.js\": \"~0.11.4\"\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 14.2.11\r\nNode: 16.19.1\r\nPackage Manager: npm 8.19.3\r\nOS: win32 x64\r\n\r\nAngular: 14.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1402.11\r\n@angular-devkit/build-angular      14.2.11\r\n@angular-devkit/core               14.2.11\r\n@angular-devkit/schematics         14.2.11\r\n@angular/cdk                       14.2.7\r\n@angular/cdk-experimental          14.2.7\r\n@angular/cli                       14.2.11\r\n@angular/flex-layout               14.0.0-beta.41\r\n@angular/material                  14.2.7\r\n@angular/material-moment-adapter   14.2.7\r\n@schematics/angular                14.2.11\r\nrxjs                               7.5.7\r\ntypescript                         4.6.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nExtract of \"angular.json\" used for production build : \r\n\r\n```json\r\n\"production\": {\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.prod.ts\"\r\n                }\r\n              ],\r\n              \"optimization\": {\r\n                \"scripts\": true,\r\n                \"styles\": true,\r\n                \"fonts\": true\r\n              },\r\n              \"outputHashing\": \"bundles\",\r\n              \"sourceMap\": false,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": false,\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"8mb\",\r\n                  \"maximumError\": \"30mb\"\r\n                }\r\n              ]\r\n            }\r\n```\r\n\r\nExtract of build logs, with GC events (middle-end of build phase, with 2 V8 isolates having high amount of heap at the same time) : \r\n\r\n```text\r\n[864:0000017FCBC9E030]    76944 ms: Scavenge 1794.3 (2071.8) -> 1790.7 (2071.8) MB, 2.2 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017FCBC9E030]    76950 ms: Scavenge 1794.4 (2071.8) -> 1790.8 (2071.8) MB, 2.2 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017FCBC9E030]    76958 ms: Scavenge 1794.6 (2071.8) -> 1791.0 (2071.8) MB, 2.5 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017FCBC9E030]    76966 ms: Scavenge 1794.8 (2071.8) -> 1791.1 (2071.8) MB, 2.4 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017FCBC9E030]    76972 ms: Scavenge 1794.9 (2071.8) -> 1791.3 (2071.8) MB, 2.3 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017FCBC9E030]    76980 ms: Scavenge 1795.2 (2072.5) -> 1791.8 (2071.8) MB, 2.5 / 0.0 ms  (average mu = 0.983, current mu = 0.982) allocation failure \r\n[864:0000017EBED1F120]   380146 ms: Scavenge 3005.1 (3664.5) -> 3004.9 (3660.5) MB, 3.9 / 0.0 ms  (average mu = 0.932, current mu = 0.883) allocation failure \r\n[864:0000017EC91A0350]    77134 ms: Scavenge 308.7 (524.0) -> 305.4 (520.0) MB, 0.8 / 0.0 ms  (average mu = 0.988, current mu = 0.997) task \r\n[864:0000017FCCAC1060]    77142 ms: Mark-sweep 37.7 (46.9) -> 11.4 (36.8) MB, 4.0 / 0.0 ms  (+ 0.2 ms in 4 steps since start of marking, biggest step 0.2 ms, walltime since start of marking 9 ms) (average mu = 1.000, current mu = 1.000) finalize incremental marking via task GC in old space requested\r\n[864:0000017EBED1F120]   381101 ms: Mark-sweep 3041.4 (3697.1) -> 2541.2 (3408.1) MB, 932.7 / 0.0 ms  (average mu = 0.984, current mu = 0.989) allocation failure scavenge might not succeed\r\n[864:0000017EBED1F120]   381447 ms: Scavenge 2544.0 (3410.0) -> 2543.5 (3410.0) MB, 12.5 / 0.0 ms  (average mu = 0.984, current mu = 0.989) external memory pressure \r\n[864:0000017EBED1F120]   381451 ms: Scavenge 2543.5 (3410.0) -> 2543.6 (3410.0) MB, 3.5 / 0.0 ms  (average mu = 0.984, current mu = 0.989) external memory pressure \r\n[864:0000017EBED1F120]   382769 ms: Mark-sweep (reduce) 2543.7 (3410.0) -> 2538.6 (3096.7) MB, 72.6 / 0.1 ms  (+ 903.8 ms in 923 steps since start of marking, biggest step 2.8 ms, walltime since start of marking 999 ms) (average mu = 0.963, current mu = 0.415) finalize incremental marking via task GC in old space requested\r\n[864:0000017EBED1F120]   395967 ms: Mark-sweep 2538.9 (3096.7) -> 2538.6 (3069.2) MB, 41.2 / 0.1 ms  (+ 789.9 ms in 1294 steps since start of marking, biggest step 19.7 ms, walltime since start of marking 850 ms) (average mu = 0.954, current mu = 0.937) finalize incremental marking via task GC in old space requested\r\n[864:0000017EBED1F120]   414545 ms: Scavenge 2542.9 (3069.4) -> 2540.1 (3069.2) MB, 15.3 / 0.0 ms  (average mu = 0.954, current mu = 0.937) allocation failure \r\n[864:0000017EBED1F120]   414559 ms: Scavenge 2542.7 (3069.2) -> 2539.9 (3069.2) MB, 3.9 / 0.0 ms  (average mu = 0.954, current mu = 0.937) allocation failure \r\n[864:0000017EBED1F120]   414580 ms: Scavenge 2543.6 (3069.2) -> 2540.4 (3069.2) MB, 3.8 / 0.0 ms  (average mu = 0.954, current mu = 0.937) allocation failure \r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/26553","RelatedDescription":"Closed issue \"Node process for \"Build\" command is taking much more RAM (6GB) than configured \"max_old_space_size\" option (4GB)\" (#26553)"},{"Id":"2021162374","IsPullRequest":false,"CreatedAt":"2023-12-01T16:14:53","Actor":"LanderBeeuwsaert","Number":"26551","RawContent":null,"Title":"The new vite dev server cannot handle URLs with a . in them - part 2","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nangular 16\n\n### Description\n\nIf you go to a URL with a . in it:\r\nhttp://localhost:4200/something.somethingelse\r\n\r\nwith the esbuild builder, this will not go to the dev server anymore.\r\n\r\nThis is a re-opening of ticket:\r\nhttps://github.com/angular/angular-cli/issues/26383\r\n\r\nbecause it was closed as solved, but in both 17.0.5 as well as in 17.1.0-next this is still present\n\n### Minimal Reproduction\n\njust do an ng serve and go to an URL with a .\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 18.15.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1700.5\r\n@angular-devkit/build-angular        17.0.5\r\n@angular-devkit/core                 16.2.6\r\n@angular-devkit/schematics           16.2.6\r\n@angular/cdk                         16.2.12\r\n@angular/fire                        16.0.0\r\n@angular/google-maps                 16.2.12\r\n@angular/material                    16.2.12\r\n@angular/material-date-fns-adapter   16.2.12\r\n@angular/youtube-player              16.2.12\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.2.6\r\nrxjs                                 7.8.1\r\ntypescript                           5.2.2\r\nzone.js                              0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26551","RelatedDescription":"Closed issue \"The new vite dev server cannot handle URLs with a . in them - part 2\" (#26551)"},{"Id":"2021130585","IsPullRequest":true,"CreatedAt":"2023-12-01T16:10:03","Actor":"alan-agius4","Number":"26550","RawContent":null,"Title":"build: update TypeScript to 5.3.2","State":"closed","Body":"Update several schematics files to use TypeScript 5.3.2\r\n","Url":"https://github.com/angular/angular-cli/pull/26550","RelatedDescription":"Closed or merged PR \"build: update TypeScript to 5.3.2\" (#26550)"},{"Id":"2020179111","IsPullRequest":true,"CreatedAt":"2023-12-01T15:40:56","Actor":"angular-robot","Number":"26541","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `8eb98bc` -> `9bd94a8` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `2570dc3` -> `d29e65f` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `3b41bc9` -> `069ea40` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `12bfa09` -> `3307c8c` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `c71cc2d` -> `4917a4c` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `eaa5433` -> `6aef860` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `f8b40e4` -> `33e5de3` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `718ab06` -> `1c2bdc3` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `dbd1f5d` -> `7f599a1` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `7b62a5d` -> `8885eab` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `c7687ab` -> `eb89469` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `9017a64` -> `35ef293` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `a0a9704` -> `e0e89bb` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `9bce3bc` -> `f00eb4c` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `7b359ac` -> `a07af34` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `57f4609` -> `161fbf9` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `73514eb` -> `f17ee49` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `cd381a5` -> `8c1e2cb` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `e3026fa` -> `afc0799` |\n| angular/dev-infra | action | digest | `3b93d92` -> `1d3d98f` |\n\nüî° If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26541","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26541)"},{"Id":"2019833788","IsPullRequest":true,"CreatedAt":"2023-12-01T15:40:45","Actor":"clydin","Number":"26540","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly align error/warning messages when spinner is active","State":"closed","Body":"When using the `application` builder with progress enabled (the default), the spinner text will now automatically contain a trailing newline. This ensures that any diagnostic messages are not awkwardly printed on the same line as the spinner.","Url":"https://github.com/angular/angular-cli/pull/26540","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly align error/warning messages when spinner is active\" (#26540)"},{"Id":"2020346162","IsPullRequest":true,"CreatedAt":"2023-12-01T15:40:26","Actor":"angular-robot","Number":"26542","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.79` -> `23.0.80`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.79/23.0.80) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | dependencies | patch | [`5.28.1` -> `5.28.2`](https://renovatebot.com/diffs/npm/undici/5.28.1/5.28.2) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | devDependencies | patch | [`5.28.1` -> `5.28.2`](https://renovatebot.com/diffs/npm/undici/5.28.1/5.28.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.80`](https://togithub.com/quicktype/quicktype/compare/958d199d74b507175d9a49871c5d3770eaaf7873...2a60269d431b392b658e671df2c1fb5479aec855)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/958d199d74b507175d9a49871c5d3770eaaf7873...2a60269d431b392b658e671df2c1fb5479aec855)\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v5.28.2`](https://togithub.com/nodejs/undici/releases/tag/v5.28.2)\n\n[Compare Source](https://togithub.com/nodejs/undici/compare/v5.28.1...v5.28.2)\n\n##### What's Changed\n\n-   fix: remove optional chainning for compatible with Nodejs12 and below by [@&#8203;bugb](https://togithub.com/bugb) in [https://github.com/nodejs/undici/pull/2470](https://togithub.com/nodejs/undici/pull/2470)\n-   fix: remove `node:` prefix by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2471](https://togithub.com/nodejs/undici/pull/2471)\n-   perf: avoid Headers initialization by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2468](https://togithub.com/nodejs/undici/pull/2468)\n-   fix: handle SharedArrayBuffer correctly by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2466](https://togithub.com/nodejs/undici/pull/2466)\n-   fix: Add `null` type to `signal` in `RequestInit` by [@&#8203;gebsh](https://togithub.com/gebsh) in [https://github.com/nodejs/undici/pull/2455](https://togithub.com/nodejs/undici/pull/2455)\n-   fix: correctly handle data URL with hashes. by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2475](https://togithub.com/nodejs/undici/pull/2475)\n-   fix: check response for timinginfo allow flag by [@&#8203;ToshB](https://togithub.com/ToshB) in [https://github.com/nodejs/undici/pull/2477](https://togithub.com/nodejs/undici/pull/2477)\n-   Make call to onBodySent conditional in RetryHandler by [@&#8203;MzUgM](https://togithub.com/MzUgM) in [https://github.com/nodejs/undici/pull/2478](https://togithub.com/nodejs/undici/pull/2478)\n-   refactor: better integrity check by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2462](https://togithub.com/nodejs/undici/pull/2462)\n-   fix: Added support for inline URL username:password proxy auth by [@&#8203;matt-way](https://togithub.com/matt-way) in [https://github.com/nodejs/undici/pull/2473](https://togithub.com/nodejs/undici/pull/2473)\n-   build(deps-dev): bump jsdom from 22.1.0 to 23.0.0 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2472](https://togithub.com/nodejs/undici/pull/2472)\n-   build(deps-dev): bump sinon from 16.1.3 to 17.0.1 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2405](https://togithub.com/nodejs/undici/pull/2405)\n-   build(deps): bump ossf/scorecard-action from 2.2.0 to 2.3.1 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2396](https://togithub.com/nodejs/undici/pull/2396)\n-   build(deps): bump actions/setup-node from 3.8.1 to 4.0.0 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2395](https://togithub.com/nodejs/undici/pull/2395)\n-   build(deps): bump step-security/harden-runner from 2.5.0 to 2.6.0 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2392](https://togithub.com/nodejs/undici/pull/2392)\n-   build(deps-dev): bump formdata-node from 4.4.1 to 6.0.3 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2389](https://togithub.com/nodejs/undici/pull/2389)\n-   build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/nodejs/undici/pull/2302](https://togithub.com/nodejs/undici/pull/2302)\n\n##### New Contributors\n\n-   [@&#8203;bugb](https://togithub.com/bugb) made their first contribution in [https://github.com/nodejs/undici/pull/2470](https://togithub.com/nodejs/undici/pull/2470)\n-   [@&#8203;gebsh](https://togithub.com/gebsh) made their first contribution in [https://github.com/nodejs/undici/pull/2455](https://togithub.com/nodejs/undici/pull/2455)\n-   [@&#8203;ToshB](https://togithub.com/ToshB) made their first contribution in [https://github.com/nodejs/undici/pull/2477](https://togithub.com/nodejs/undici/pull/2477)\n-   [@&#8203;MzUgM](https://togithub.com/MzUgM) made their first contribution in [https://github.com/nodejs/undici/pull/2478](https://togithub.com/nodejs/undici/pull/2478)\n-   [@&#8203;matt-way](https://togithub.com/matt-way) made their first contribution in [https://github.com/nodejs/undici/pull/2473](https://togithub.com/nodejs/undici/pull/2473)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v5.28.1...v5.28.2\n\n</details>\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - \"before 4:00am on the first day of the month\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26542","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26542)"},{"Id":"2021030997","IsPullRequest":false,"CreatedAt":"2023-12-01T15:26:14","Actor":"changhuixu","Number":"26549","RawContent":null,"Title":"`tsconfig.json` template doesn't have the `baseUrl` option","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16\n\n### Description\n\nThe `tsconfig.json` file had an option in v16: `\"baseUrl\" = \"./\"` by default. But now in v17, this option is no longer there.\r\n\r\nWithout it, the `import` statement in TypeScript files would change from \r\n`import { SharedModule } from 'src/app/shared';`\r\nto\r\n`import { SharedModule } from '../../shared';`\r\n\r\nIn some cases, the nested folders will increase the path to be many `../../../` instead of simply `src/app/shared`.\r\nIt becomes a pain to manage the relative path.\r\n\r\nThe `baseUrl` option is removed in this commit https://github.com/angular/angular-cli/commit/419b5c1917c45dc115b107479d5066b9193497fa\r\n\r\nrelated to https://github.com/angular/angular-cli/issues/18834\r\n\r\nThere must be a reason for you to remove it, as the commit message says \"this also enables better auto-import suggestions\". Could you explain it more? \r\n\r\n\r\n\r\nFrom the screenshot below, it only says that \"can be\", which doesn't mean \"should not\".\r\n\r\n\r\n![image](https://github.com/angular/angular-cli/assets/16184464/4b850089-124e-475a-a012-217010736f6f)\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nrelated to https://github.com/angular/angular-cli/issues/18834\n\n### Exception or Error\n\n```text\nref. description session\r\n![image](https://github.com/angular/angular-cli/assets/16184464/3a8541a2-4338-49c0-a5b2-fb3e60a99741)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\n```\n\n\n### Anything else relevant?\n\nd","Url":"https://github.com/angular/angular-cli/issues/26549","RelatedDescription":"Closed issue \"`tsconfig.json` template doesn't have the `baseUrl` option\" (#26549)"},{"Id":"2020913492","IsPullRequest":false,"CreatedAt":"2023-12-01T14:35:13","Actor":"chintankavathia","Number":"26548","RawContent":null,"Title":"`outputHashing` is ignored with lazy chunk files with esbuild angular 17","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nproviding `outputHashing: none` still adds hash values to lazy chunk files with latest angular having `application` builder . \r\nI am not sure if this is an intended behavior.\n\n### Minimal Reproduction\n\n generate the new angular application use angular cli.\r\n\r\ndo some lazy dynamic imports with `import('')`  in application module.\r\n\r\nin angular.json add/update `outputHashing` to `none`.\r\n\r\nRun ng build and see build output.\r\n\r\nThe lazy chunks still adds outputHash.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.1\r\n@angular/material               17.0.1\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26548","RelatedDescription":"Closed issue \"`outputHashing` is ignored with lazy chunk files with esbuild angular 17\" (#26548)"},{"Id":"2020792799","IsPullRequest":true,"CreatedAt":"2023-12-01T12:31:27","Actor":"alan-agius4","Number":"26545","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly set `ngDevMode` and `ngJitMode` when using vite","State":"open","Body":"\r\nPrior to this change `ngDevMode` and `ngJitMode` were not correctly being set when using the vite base dev-server.\r\n","Url":"https://github.com/angular/angular-cli/pull/26545","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): correctly set `ngDevMode` and `ngJitMode` when using vite\" (#26545)"},{"Id":"2020525055","IsPullRequest":false,"CreatedAt":"2023-12-01T09:58:59","Actor":"shashankagarwal1710","Number":"26544","RawContent":null,"Title":"I am facing multiple issues while ng build and working fine with ng build --configuration=production Need help.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen i am doing ng build its giving many errors like\r\n1. Can not read properties of undefined\r\n2. Can not read _rawValidators of undefined\r\nStore null\r\n\r\nsome error in xhr \r\nand its not telling the source path of the error and working fine with ng build --configuration=production\r\n\r\nI have already set sourceMap to true in angular json\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 18.17.1\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26544","RelatedDescription":"Closed issue \"I am facing multiple issues while ng build and working fine with ng build --configuration=production Need help.\" (#26544)"},{"Id":"2020381602","IsPullRequest":true,"CreatedAt":"2023-12-01T08:37:04","Actor":"alan-agius4","Number":"26543","RawContent":null,"Title":"test(@angular-devkit/build-angular): enable vite service worker unit tests","State":"open","Body":"\r\n\r\nEnable service worker tests for vite.\r\n","Url":"https://github.com/angular/angular-cli/pull/26543","RelatedDescription":"Open PR \"test(@angular-devkit/build-angular): enable vite service worker unit tests\" (#26543)"},{"Id":"2018154564","IsPullRequest":true,"CreatedAt":"2023-12-01T07:50:04","Actor":"alan-agius4","Number":"26535","RawContent":null,"Title":"File watching improvements ","State":"closed","Body":"See each commit.","Url":"https://github.com/angular/angular-cli/pull/26535","RelatedDescription":"Closed or merged PR \"File watching improvements \" (#26535)"},{"Id":"2018956173","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:34","Actor":"willi84","Number":"26539","RawContent":null,"Title":"Create a way to customize ng-new","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nfor workshops it would be helpful to have a customized start screen with custom html to make it easier for people to start the workshop and have less friction with updated start view with newer versions  as e.g. with v17 happened\n\n### Describe the solution you'd like\n\na configuration which provides a reference to a custom template of a start screen, e.g.\r\n\r\nng new todo-list --start=@ng-girls/starter\r\n\r\nand for this there need to be a special scheme to configure the start template or other options\n\n### Describe alternatives you've considered\n\nstackblitz, but I would also have it with the CLI","Url":"https://github.com/angular/angular-cli/issues/26539","RelatedDescription":"Open issue \"Create a way to customize ng-new\" (#26539)"},{"Id":"2018763095","IsPullRequest":false,"CreatedAt":"2023-11-30T14:21:34","Actor":"alexciesielski","Number":"26538","RawContent":null,"Title":"browser-esbuild: \"The 'webWorkerTsConfig' option is not yet supported by this builder.\" ","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI just updated to Angular 17 with the hopes of benefiting of the speed improvements of esbuild but unfortunately I am getting the following warning:\r\n\r\n`The 'webWorkerTsConfig' option is not yet supported by this builder.`\r\n\r\nI searched Google for any hints and the only thing I found is [this issue](https://github.com/angular/angular-cli/issues/25101) mentioning the option and saying that it should have landed in 17.0.0-next.6.\r\n\r\nSo my question is, has it landed and should it work? And if yes, what may I be doing wrong?\r\n\r\nIf it matters I am using nx (also v17).\r\n\n\n### Minimal Reproduction\n\n\r\n```json\r\n{\r\n  \"name\": \"app\",\r\n  \"$schema\": \"../../node_modules/nx/schemas/project-schema.json\",\r\n  \"projectType\": \"application\",\r\n  \"sourceRoot\": \"apps/app/src\",\r\n  \"prefix\": \"app\",\r\n  \"targets\": {\r\n    \"build\": {\r\n      \"executor\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n       // ...\r\n     }\r\n  }\r\n}\r\n```\n\n### Exception or Error\n\n```text\nThe 'webWorkerTsConfig' option is not yet supported by this builder.\n```\n\n\n### Your Environment\n\n```text\nnx --version\r\n\r\nNx Version:\r\n- Local: v17.1.3\r\n- Global: v17.0.1\r\n\r\n---\r\n\r\n    \"@angular/animations\": \"17.0.5\",\r\n    \"@angular/cdk\": \"17.0.1\",\r\n    \"@angular/common\": \"17.0.5\",\r\n    \"@angular/compiler\": \"17.0.5\",\r\n    \"@angular/core\": \"17.0.5\",\r\n    \"@angular/forms\": \"17.0.5\",\r\n    \"@angular/material\": \"17.0.1\",\r\n    \"@angular/platform-browser\": \"17.0.5\",\r\n    \"@angular/platform-browser-dynamic\": \"17.0.5\",\r\n    \"@angular/router\": \"17.0.5\",\r\n    \"@angular/service-worker\": \"17.0.5\",\r\n    \"@angular-devkit/build-angular\": \"17.0.5\",\r\n    \"@angular-devkit/core\": \"17.0.5\",\r\n    \"@angular-devkit/schematics\": \"17.0.5\",\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26538","RelatedDescription":"Closed issue \"browser-esbuild: \"The 'webWorkerTsConfig' option is not yet supported by this builder.\" \" (#26538)"},{"Id":"2018302349","IsPullRequest":false,"CreatedAt":"2023-11-30T14:20:14","Actor":"PrinceGupta1999","Number":"26536","RawContent":null,"Title":"Add postcss-preset-env to Angular build process / allow for configuring custom PostCSS plugins","State":"closed","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Description\r\n\r\nThe Angular docs mention [The Angular CLI uses Browserslist to ensure compatibility with different browser versions](https://angular.dev/tools/cli/build#configuring-browser-compatibility:~:text=check-,Configuring%20browser%20compatibility,configuration%20which%20matches%20the%20browsers%20that%20are%20supported%20by%20Angular.,-last%202%20Chrome). And while this story works great in the Javascript side, the CSS story is not as good.\r\n\r\nCurrently for processing CSS PostCSS is used during the build process, and the only plugin used for increasing browser compatibility is the use of the [autoprefixer](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/tools/webpack/configs/styles.ts#L104) plugin.\r\n\r\nThat would be fine if the build process allowed configuration of the postcss plugins being used but not allowing that severely limits the extent of browser support which could have been otherwise extended using plugins like `postcss-preset-env`. For example, in our use case we are required to support Chrome version 80 but since more and more UI libraries like PrimeNg are moving towards use of `@layer` which is not supported by earlier browsers it is proving impossible for us to upgrade to use newer versions of these UI libraries.\r\n\r\n### Describe the solution you'd like\r\n\r\nSimilar to the configuration being done for [Tailwind](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/tools/webpack/configs/styles.ts#L82-L102) it could be possible to add support for loading postCss configuration from the standard `postcss.config.js` file. \r\n\r\nThere may also be need to either merge / override the default configuration in case the postcss config is provided. \r\n\r\n### Describe alternatives you've considered\r\n\r\nThe only alternate that seemed to work for us at the moment was to switch to [angular-builders/custom-webpack](https://www.npmjs.com/package/@angular-builders/custom-webpack) for building / serving the application and loading the postcss.config.js file using the postcss-loader in webpack.\r\n\r\nHowever the drawback of that was that we could no longer take advantage of the faster Vite / ESBuild speeds that the Angular v17 provides by default.","Url":"https://github.com/angular/angular-cli/issues/26536","RelatedDescription":"Closed issue \"Add postcss-preset-env to Angular build process / allow for configuring custom PostCSS plugins\" (#26536)"},{"Id":"2018685166","IsPullRequest":false,"CreatedAt":"2023-11-30T13:34:45","Actor":"Nvveen","Number":"26537","RawContent":null,"Title":"Allow Angular to pass no browsers to Karma","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nKarma has a CLI option `--no-browsers` to allow Karma to open without any connected browsers. This can be achieved in Angular by passing an empty `[]` array in `karma,conf.js`. This is useful when running the dev server in a devcontainer, where no display server and instances of browsers are installed. Manually opening a browser with the ports forwarded then runs the tests like normal.\r\nThe issue starts when using the built-in Karma config, but passing either `\"browsers\": \"\"`, or the CLI flag `\"--browsers=\\\"\"` to `ng test`. The line at https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L103 checks if the browsers option exists, but since the string is empty, the expression is false and the default Karma option of `['Chrome']` is instead used.\n\n### Describe the solution you'd like\n\nChanging [this line](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L103) to `if (options.browsers != null)` and filtering the [split array](https://github.com/angular/angular-cli/blob/e3bb2580871eb0521bee6b2cdc2e092e4be54102/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L104C15-L104C15) by non-empty strings should solve this particular issue.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26537","RelatedDescription":"Open issue \"Allow Angular to pass no browsers to Karma\" (#26537)"},{"Id":"2017614548","IsPullRequest":true,"CreatedAt":"2023-11-29T23:40:50","Actor":"dgp1130","Number":"26534","RawContent":null,"Title":"docs: release notes for the v17.0.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26534","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.5 release\" (#26534)"},{"Id":"2017611649","IsPullRequest":true,"CreatedAt":"2023-11-29T23:36:30","Actor":"dgp1130","Number":"26533","RawContent":null,"Title":"Bump version to \"v17.0.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26533","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.5\" with changelog.\" (#26533)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2022037380","IsPullRequest":false,"CreatedAt":"2023-12-02T13:17:03","Actor":"prasantht96","Number":"28222","RawContent":null,"Title":"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16\r\n\r\n### Description\r\n\r\nUsing @defer causes this error, but without defer block it's working fine.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nyqsqs?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. in main.ts, remove @defer from template, No error. \r\n2. but if you add @defer, the error will come in console.\r\n\r\n\r\n### Expected Behavior\r\n\r\nthis shouldn't cause any error and everything should work.\r\n\r\n### Actual Behavior\r\n\r\n`ERROR\r\nError: R3InjectorError(Environment Injector)[InjectionToken mat-datepicker-scroll-strategy -> InjectionToken mat-datepicker-scroll-strategy]:\r\nNullInjectorError: No provider for InjectionToken mat-datepicker-scroll-strategy!`\r\n\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28222","RelatedDescription":"Open issue \"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error\" (#28222)"},{"Id":"2021636078","IsPullRequest":true,"CreatedAt":"2023-12-01T22:29:26","Actor":"zarend","Number":"28221","RawContent":null,"Title":"docs: release notes for the v17.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28221","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.2 release\" (#28221)"},{"Id":"2021629972","IsPullRequest":true,"CreatedAt":"2023-12-01T21:53:30","Actor":"zarend","Number":"28220","RawContent":null,"Title":"Bump version to \"v17.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28220","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.2\" with changelog.\" (#28220)"},{"Id":"2021618380","IsPullRequest":true,"CreatedAt":"2023-12-01T21:44:49","Actor":"zarend","Number":"28219","RawContent":null,"Title":"Bump version to \"v17.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28219","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.1\" with changelog.\" (#28219)"},{"Id":"2021179352","IsPullRequest":true,"CreatedAt":"2023-12-01T16:13:24","Actor":"angular-robot","Number":"28218","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `069ea40` -> `3069be8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f00eb4c` -> `6f2e63f` |\n| angular/dev-infra | action | digest | `1d3d98f` -> `2113cd7` |\n\nüî° If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28218","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#28218)"},{"Id":"2016941753","IsPullRequest":true,"CreatedAt":"2023-12-01T13:02:43","Actor":"angular-robot","Number":"28205","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `39de01a` -> `069ea40` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `581fbc0` -> `f00eb4c` |\n| angular/dev-infra | action | digest | `f00131a` -> `1d3d98f` |\n\nüî° If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28205","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28205)"},{"Id":"2020812627","IsPullRequest":false,"CreatedAt":"2023-12-01T12:43:49","Actor":"WoMayr","Number":"28217","RawContent":null,"Title":"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen providing services via a route, MatDialog.open is not able to create a component instance that injects this service\r\n\r\nMatDialog.open is called like this\r\n```\r\nthis.matDialog.open(MyServiceConsumerComponent, {\r\n  viewContainerRef: this.viewContainerRef,\r\n});\r\n```\r\n\r\nStructure of the routes and components looks like this:\r\n![image](https://github.com/angular/components/assets/1965557/58fba84c-d769-4f51-8bdf-225ab58266e7)\r\n\r\n\r\nI did try to debug into MatDialog.open but the created Injectors were all able to get the service. So I don't really know what prevents the dialog component to be created.\r\n\r\nIt did correctly work, when declaring the Service in the `providers`-part of the component itself (see comment in my stack-blitz in my-feature.component.ts)\r\n\r\nAlso I'm not sure if this is an issue of Angular Material, CDK or Angular itself.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/angular-standalone-ts-strict-ijt5jr\r\nSteps to reproduce:\r\n1. Use standalone components\r\n2. Create a service (`MyFeatureService`)\r\n3. Create a route with a component (`MyFeatureComponent`) and define the service in the providers\r\n4. Create a component (`MyServiceConsumerComponent`) that consumes the service\r\n5. Open a dialog in `MyFeatureComponent` using `matDialog.open(MyServiceConsumerComponent, { viewContainerRef: this.viewContainerRef })`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe Dialog is able to resolve the requested service\r\n\r\n### Actual Behavior\r\n\r\nThe Dialog failes to resolve the service:\r\n```\r\nERROR NullInjectorError: R3InjectorError(Environment Injector)[MyFeatureService -> MyFeatureService]: \r\n  NullInjectorError: No provider for MyFeatureService!\r\n    at NullInjector.get (injector_token.ts:27:5)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at ChainedInjector.get (component_ref.ts:238:23)\r\n    at lookupTokenUsingModuleInjector (di.ts:372:8)\r\n    at getOrCreateInjectable (di.ts:424:2)\r\n    at Object.…µ…µdirectiveInject (shared.ts:86:5)\r\n    at NodeInjectorFactory.MyServiceConsumerComponent_Factory [as factory] (my-service-consumer.component.ts:8:40)\r\n    at getNodeInjectable (di.ts:661:20)\r\n    at createRootComponent (inherit_definition_feature.ts:43:27)\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 17.0.5\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/28217","RelatedDescription":"Open issue \"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef\" (#28217)"},{"Id":"2020627408","IsPullRequest":false,"CreatedAt":"2023-12-01T10:54:50","Actor":"pawelkondraciuk","Number":"28216","RawContent":null,"Title":"feat(mat-datepicker): Custom day cell template","State":"open","Body":"### Feature Description\n\nAdd ability to provide custom template for the day cell in datepicker with date as template context. Something like\r\n\r\n```\r\n<mat-datepicker>\r\n  <ng-container *matDatepickerCell=\"let date\">\r\n    {{ date | date:\"d\" }}\r\n  <ng-container>\r\n</mat-datepicker>\r\n```\n\n### Use Case\n\nFairy simple use case would be to add name of the holiday below the day number or add the tooltip when you hover over the day with extra content.","Url":"https://github.com/angular/components/issues/28216","RelatedDescription":"Open issue \"feat(mat-datepicker): Custom day cell template\" (#28216)"},{"Id":"2020603628","IsPullRequest":false,"CreatedAt":"2023-12-01T10:40:59","Actor":"XEvansWTW","Number":"28215","RawContent":null,"Title":"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using a custom filter (as shown in the example in the autocomplete documentation https://material.angular.io/components/autocomplete/overview), the valueChanges functionality does not work when requireSelection is added to the component.\r\n\r\n### Reproduction\r\n\r\nStack Blitz\r\nhttps://stackblitz.com/edit/vyil2i?file=src%2Fexample%2Fautocomplete-filter-example.ts,src%2Fexample%2Fautocomplete-filter-example.html\r\n\r\n1. valueChanges pipe does not run when requireSelection is on autocomplete component.\r\n2. Removing requireSelection causes it to work (see output in console).\r\n3. This does not happen on a normal autocomplete component which doesn't have a custom filter.\r\n\r\nNote that this demo uses minimal changes from the example given in the component's documentation.\r\n\r\n### Expected Behavior\r\n\r\nvalueChanges pipe works as it does with a normal autocomplete without a custom filter.\r\n\r\n### Actual Behavior\r\n\r\nvalueChanges pipe does not work at all.\r\n\r\n### Environment\r\n\r\nAngular 17 \r\nAngular 17.0.1 material\r\n","Url":"https://github.com/angular/components/issues/28215","RelatedDescription":"Open issue \"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges\" (#28215)"},{"Id":"2015279692","IsPullRequest":false,"CreatedAt":"2023-12-01T07:54:26","Actor":"simeyla","Number":"28199","RawContent":null,"Title":"bug(MatPaginator): Control flow changes in @angular/core 17.0.4 broke @angular/components 17.0.1","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.1 (of @angular/core)\n\n### Description\n\nThe commit for PR https://github.com/angular/angular/pull/52935 changed the function signature for `…µ…µrepeater` which is used to implement `@for` control flow. It was part of @angular/core 17.0.4.\r\n\r\nThe signature removed a parameter, such that any control flow code present in Material 17.0.1 (such as used by MatPaginator) will break at runtime.\r\n\r\nAll that is needed to fix is a version bump to sync with @angular/core 17.0.4\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Install @angular/core 17.0.4\r\n2. Install @angular/material 17.0.1\r\n3. Add MatPaginator\n\n### Expected Behavior\n\nNo error\n\n### Actual Behavior\n\n```\r\nmain.js:50620 TypeError: newCollection[Symbol.iterator] is not a function\r\nat reconcile (main.js:123167:65)\r\n```\n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.1\r\n- Browser(s): All\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28199","RelatedDescription":"Closed issue \"bug(MatPaginator): Control flow changes in @angular/core 17.0.4 broke @angular/components 17.0.1\" (#28199)"},{"Id":"2018372384","IsPullRequest":false,"CreatedAt":"2023-11-30T19:01:41","Actor":"felhag","Number":"28210","RawContent":null,"Title":"bug(mat-chip-listbox): Harness getChips() does not return mat-chip","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\n\r\nWhen using `MatChipListboxHarness.getChips()` it only returns `mat-chip-option` elements, but not `mat-chip`. Because of this a mat-chip-listbox like [this example](https://material.angular.io/components/chips/examples#chips-avatar) cannot be tested using the listbox harness. Not sure what is the correct solution for this because it can be solved using `mat-chip-set` instead of listbox.\r\n\r\nPossible solutions imho: \r\n1. Change example to use `mat-chip-set` instead of `mat-chip-listbox`.\r\n2. Change `getChips()` signature to return `MatChipHarness[]` which would be a breaking change.\r\n3. Add an additional method like `getStaticChips()`.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/qykqid\n\n### Expected Behavior\n\n`MatChipListboxHarness.getChips()` should include `mat-chip` as well.\n\n### Actual Behavior\n\n`MatChipListboxHarness.getChips()` only returns `mat-chip-option`.\n\n### Environment\n\n- Angular: 17.0.1\r\n- CDK/Material: 17.0.1\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28210","RelatedDescription":"Closed issue \"bug(mat-chip-listbox): Harness getChips() does not return mat-chip\" (#28210)"},{"Id":"2018956425","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:42","Actor":"walberglez","Number":"28214","RawContent":null,"Title":"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe screen reader JAWS version 2023 does not announce a checked option as selected in a multiple selection mat-select. It does announce unchecked options as selected.\r\n\r\nI tried other Windows screen readers, NVDA does not announce it either but Narrator does. So it could be a screen reader implementation issue.\r\n\r\nAlso, this issue has been discussed before: https://github.com/angular/components/issues/21949 and it was considered to be working as expected. But I want to bring this up again because I consider that the mat-option component is not following the WAI ARIA Listbox pattern completely, please see Note 1 in this section https://www.w3.org/WAI/ARIA/apg/patterns/listbox/#roles_states_properties.\r\n\r\n> 1. Some factors to consider when choosing whether to indicate selection with aria-selected or aria-checked are:\r\nSome design systems use aria-selected for single-select widgets and aria-checked for multi-select widgets. In the absence of factors that would make an alternative convention more appropriate, this is a recommended convention.\r\n\r\nMat Option uses aria-select for both single and multiple selection. Based on this recommendation, it should use aria-selected for single selection and aria-checked for multiple selection.\r\n\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Start JAWS in a Windows machine.\r\n2. Go to https://material.angular.io/components/select/overview#select-multiple\r\n3. Select the multiple selection dropdown.\r\n4. Navigate through the options using the arrow keys.\r\n5. Select a few options.\r\n6. Navigate through selected and unselected options and check how the screen reader announces them.\r\n\n\n### Expected Behavior\n\nI expect screen readers to announce if an option is selected or unselected.\n\n### Actual Behavior\n\nJAWS only announces the status of an unselected option.\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Chrome 119.0.6045.199\r\n- Operating System: Windows 10 Enterprise\r\n","Url":"https://github.com/angular/components/issues/28214","RelatedDescription":"Open issue \"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select\" (#28214)"},{"Id":"2018889690","IsPullRequest":false,"CreatedAt":"2023-11-30T15:15:48","Actor":"sonallux","Number":"28213","RawContent":null,"Title":"bug(list): matListItemIcon color is wrong for disabled list items","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe color of `matListItemIcon` is wrong for disabled list items. It is different to the [list component from material-web](https://material-web.dev/components/list)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ir6zfh?file=src%2Fexample%2Flist-overview-example.html\r\nSteps to reproduce:\r\n1. Hover over \"Item 2 (disabled)\"\r\n2. See the `matListItemIcon` changing its color\r\n\n\n### Expected Behavior\n\nThe color of the `matListItemIcon` stays constant if the list item is disabled.\n\n### Actual Behavior\n\nThe color of the `matListItemIcon` is changing.\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router, ssr\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.1\r\n@angular/material                  17.0.1\r\n@angular/material-moment-adapter   17.0.1\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0","Url":"https://github.com/angular/components/issues/28213","RelatedDescription":"Open issue \"bug(list): matListItemIcon color is wrong for disabled list items\" (#28213)"},{"Id":"2018861939","IsPullRequest":false,"CreatedAt":"2023-11-30T15:02:11","Actor":"bmayen","Number":"28212","RawContent":null,"Title":"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nNot sure if this is a regression or not\r\n\r\n### Description\r\n\r\nThe floating label transform is normally applied via the label `.mdc-floating-label--float-above` class. However, when matTextPrefix is used on the mat-form-field, the transform is instead applied to the `label` element itself via inline style attribute. This makes attaching custom styles to the floated label inconsistent since the inline style has higher specificity than `.mdc-floating-label--float-above` class. \r\n\r\n### Reproduction\r\n\r\nApply matTextPrefix to an outline mat-form-field with a mat-label. Observe how transform styling is applied inline to the label.\r\n\r\nhttps://components-issue-da4zuo.stackblitz.io/\r\n\r\n### Expected Behavior\r\n\r\nI would expect transform styling to be applied consistently via `.mdc-floating-label--float-above` class.\r\n\r\n### Actual Behavior\r\n\r\nTransform styling is applied via `.mdc-floating-label--float-above` class when matTextPrefix is not present, but applied via inline styling on the label element when matTextPrefix is present.\r\n\r\n### Environment\r\n\r\n- Angular: 16.x\r\n- CDK/Material: 16.x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28212","RelatedDescription":"Open issue \"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class\" (#28212)"},{"Id":"2018700189","IsPullRequest":false,"CreatedAt":"2023-11-30T13:43:19","Actor":"alex-waverley","Number":"28211","RawContent":null,"Title":"bug(Slider): Tooltip is not showed on thumb hover","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSlider component doesn't work properly in Safari after changing slider's value.\r\n\r\nhttps://github.com/angular/components/assets/84070515/186bb5cc-36bb-47d2-a7c1-8e86f9c5adc3\r\n\r\nReason: mat-slider-visual-thumb element is not getting `mdc-slider__thumb--with-indicator` css class on thumb hover \n\n### Reproduction\n\nSteps to reproduce:\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-2ytten?file=src%2Fapp%2Fexample-component.html\r\n1. hover thumb - tooltop is showed\r\n2. click on slider to change its value\r\n3. hover thumb - now tooltip is not showed\r\n\n\n### Expected Behavior\n\nTooltip must be always showed on thumb hover.\n\n### Actual Behavior\n\nTooltip is not showed on thumb hover after changing slider's value.\r\n\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser: Safari 16.6 (18615.3.12.11.2)\r\n- Operating System: macOS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/28211","RelatedDescription":"Open issue \"bug(Slider): Tooltip is not showed on thumb hover\" (#28211)"},{"Id":"2018108355","IsPullRequest":true,"CreatedAt":"2023-11-30T12:37:28","Actor":"crisbeto","Number":"28207","RawContent":null,"Title":"feat(youtube-player): improve initial load performance using a placeholder image","State":"closed","Body":"Currently the `youtube-player` component loads the YouTube API and sets up the video on initialization. This can slow the page down a lot, because it loads and executes ~150kb of JavaScript, even though the video isn't playing.\r\n\r\nThese changes rework the `youtube-player` component to show the thumbnail of the video and a fake button instead. When the button is clicked, the API will be loaded and the video will be autoplayed, thus moving the YouTube API out of the critical path.\r\n\r\nThere are a few cases where the placeholder won't be shown:\r\n* A video that plays automatically.\r\n* When the `youtube-player` is showing a playlist, rather than a single video.","Url":"https://github.com/angular/components/pull/28207","RelatedDescription":"Closed or merged PR \"feat(youtube-player): improve initial load performance using a placeholder image\" (#28207)"},{"Id":"2018213200","IsPullRequest":false,"CreatedAt":"2023-11-30T09:19:48","Actor":"khobabc","Number":"28209","RawContent":null,"Title":"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI recently upgraded to Angular ~16.2.10, and noticed that cdk-virtual-scroll-viewport is not working in RTL mode for horizontal scroll. Initial data is rendered but then on scroll subsequent records are not rendered.\r\n\r\nOn investigations I came to know that getRtlScrollAxisType is returning 2 (Inverted) instead of 1 (Negated). If I make it return 1 during debug, things start to work fine.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-yehn5j?file=src%2Fapp%2Fcdk-platform-overview-example.html\r\nSteps to reproduce:\r\nNotice that at the bottom of information, getRtlScrollAxisType is 2\r\n![image](https://github.com/angular/components/assets/17024937/4e9b569d-82a9-4d99-b437-d94b9d2faeac)\n\n### Expected Behavior\n\ngetRtlScrollAxisType() should return 1 for chrome.\n\n### Actual Behavior\n\ngetRtlScrollAxisType() returns 2 for chrome\n\n### Environment\n\n- Angular: ~16.2.10\r\n- CDK/Material: ~16.2.10\r\n- Browser(s): Chrome 119.0.6045.160, Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10 Pro\r\n","Url":"https://github.com/angular/components/issues/28209","RelatedDescription":"Open issue \"getRtlScrollAxisType detects incorrect RtlScrollAxisType for chrome\" (#28209)"},{"Id":"2018156008","IsPullRequest":false,"CreatedAt":"2023-11-30T08:47:18","Actor":"Wilt","Number":"28208","RawContent":null,"Title":"Needs improvement: MatTextColumn is calling dataAccessor method inside the template.","State":"open","Body":"### Description\r\n\r\nCall of `dataAccessor` method is against Angular best practices and will be bad for performance in tables with large data sets.\r\n\r\n    <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n    </td>\r\n\r\nSee [line 30 inside `MatTextColumn` for reference](https://github.com/angular/components/blob/main/src/material/table/text-column.ts#L30C11-L30C35).\r\n\r\n### Reproduction\r\n\r\nSee [the Stackblitz and the example for `mat-text-column` inside the documentation here for a working example](https://material.angular.io/components/table/examples#table-text-column).\r\n\r\n### Expected Behavior\r\n\r\nSet the data in a variable inside the component on initialization and bind that to the template instead.\r\n\r\n### Actual Behavior\r\n\r\nIt gets the data inside the template by calling the `dataAccessor` method.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n","Url":"https://github.com/angular/components/issues/28208","RelatedDescription":"Open issue \"Needs improvement: MatTextColumn is calling dataAccessor method inside the template.\" (#28208)"},{"Id":"2017114428","IsPullRequest":false,"CreatedAt":"2023-11-29T17:47:22","Actor":"sdiachenko","Number":"28206","RawContent":null,"Title":"bug(MatSlider): MatSliderRangeThumb input width is not changed if the input value is changed dynamically","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe MatSlider does not changes the width of the input[matSliderStartThumb] and the input[matSliderEndThumb] when a user changes the inputs value dynamically.\r\n\r\n<img width=\"1522\" alt=\"image\" src=\"https://github.com/angular/components/assets/40065298/c7822536-cb06-4eb1-8694-eaea71d69de0\">\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-pkhpjl?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Refresh the page\r\n2. Click on \"next step\" button\r\n3. Drag the slider's right thumb to right. Drop it.\r\n\n\n### Expected Behavior\n\nThe \"end\" thumb has the respective value\n\n### Actual Behavior\n\nThe \"start\" and \"end\" thumb are wrong placed\n\n### Environment\n\n- Angular: 15.2.6 - 16.2.1\r\n- CDK/Material: 15.2.6 - 16.2.1\r\n- Browser: Safari, Chrome\r\n- Operating System: macOS, Windows\r\n","Url":"https://github.com/angular/components/issues/28206","RelatedDescription":"Open issue \"bug(MatSlider): MatSliderRangeThumb input width is not changed if the input value is changed dynamically\" (#28206)"},{"Id":"2016925174","IsPullRequest":false,"CreatedAt":"2023-11-29T16:05:15","Actor":"benelliott","Number":"28204","RawContent":null,"Title":"bug(theming/migration): `@angular/material/theming` SCSS entrypoint removed in v17","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16.2.x\r\n\r\n### Description\r\n\r\nThe `@angular/material/theming` entrypoint is broken in v17.x.\r\n\r\nIt looks like the `src/material/_theming.scss` file was deliberately removed as part of https://github.com/angular/components/commit/86e9e524c3234f44eece21632048cd4290e5f3f4#diff-bfa19b8f86d56d399fc0cb86ac55e1b95d161f081beb123cd2bcf31196eae030\r\n\r\nHowever, I can't seem to find any mention of this breaking change in the release notes, nor is the problem automatically fixed by the migration schematic.\r\n\r\nAdditionally, the entrypoint still appears in the package.json:\r\nhttps://github.com/angular/components/blob/main/src/material/package-base.json#L20\r\n\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nEither the entrypoint should still work, or there should be some documentation as to how to migrate away from it.\r\n\r\nI was previously using it to import public values such as `$light-primary-text` for use in my own palettes.\r\n\r\n### Actual Behavior\r\n\r\nThe entrypoint no longer works, but still appears in the package.json.\r\n\r\n### Environment\r\n\r\n- Angular: 17.x\r\n- CDK/Material: 17.x\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28204","RelatedDescription":"Open issue \"bug(theming/migration): `@angular/material/theming` SCSS entrypoint removed in v17\" (#28204)"},{"Id":"2016050525","IsPullRequest":true,"CreatedAt":"2023-11-29T15:49:48","Actor":"crisbeto","Number":"28202","RawContent":null,"Title":"refactor(multiple): switch remaining directives to standalone.","State":"closed","Body":"Switches all remaining directives to standalone and updates the linter to enforce that all directives and components are standalone.","Url":"https://github.com/angular/components/pull/28202","RelatedDescription":"Closed or merged PR \"refactor(multiple): switch remaining directives to standalone.\" (#28202)"},{"Id":"2016499542","IsPullRequest":false,"CreatedAt":"2023-11-29T13:38:11","Actor":"inorganik","Number":"28203","RawContent":null,"Title":"bug(mat-select): Does not reflect null value","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf a form control is set with a null value, mat-select cannot reflect that by displaying the correct mat-option with value set to null, but it works with a native select.\r\n\r\nThis behavior is important, because for example if you are building form controls for filtering some data displayed in a UI, you must be able to have a state where all controls are empty, and thus nothing is filtered. The null option can display \"All\" or something similar - indicating to the user that nothing is filtered. e.g.:\r\n\r\n```html\r\n<mat-option [value]=\"null\">All</mat-option>\r\n```\r\n\r\nThis issue has existed at least as far back as v 14.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/4mzrpg?file=src%2Fexample%2Fselect-overview-example.html\r\nSteps to reproduce:\r\n1. Witness how the mat-select does not display the null option, but the native select does.\r\n\r\n\n\n### Expected Behavior\n\nMat-select should correctly reflect a null value like a native select\n\n### Actual Behavior\n\nMat-select shows no option selected\n\n### Environment\n\n- Angular: 17.0.0\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28203","RelatedDescription":"Closed issue \"bug(mat-select): Does not reflect null value\" (#28203)"},{"Id":"2015325582","IsPullRequest":true,"CreatedAt":"2023-11-29T13:33:42","Actor":"nikos-moysiadis","Number":"28200","RawContent":null,"Title":"refactor: replace left-over module imports with standalone equivalents","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28200","RelatedDescription":"Closed or merged PR \"refactor: replace left-over module imports with standalone equivalents\" (#28200)"},{"Id":"2014920839","IsPullRequest":true,"CreatedAt":"2023-11-29T12:55:57","Actor":"angular-robot","Number":"28197","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `d6ab8a4` -> `39de01a` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `299c333` -> `581fbc0` |\n| angular/dev-infra | action | digest | `3909682` -> `f00131a` |\n\nüî° If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nüìÖ **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nüö¶ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n‚ôª **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\nüëª **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC4xIiwidXBkYXRlZEluVmVyIjoiMzcuNzQuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28197","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28197)"},{"Id":"2015999018","IsPullRequest":true,"CreatedAt":"2023-11-29T08:14:54","Actor":"crisbeto","Number":"28201","RawContent":null,"Title":"build: update to the latest patch version","State":"closed","Body":"There was a change in the generated code for the new control flow in 17.0.4. These changes update us to it.","Url":"https://github.com/angular/components/pull/28201","RelatedDescription":"Closed or merged PR \"build: update to the latest patch version\" (#28201)"},{"Id":"2015151360","IsPullRequest":false,"CreatedAt":"2023-11-28T19:27:48","Actor":"NachmanBerkowitz","Number":"28198","RawContent":null,"Title":"Using @defer with an inner mat-select causes No provider for InjectionToken mat-select-scroll-strategy! error","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16\r\n\r\n### Description\r\n\r\nUsing `@defer` where the inner component has a mat select causes No provider for InjectionToken mat-select-scroll-strategy! Error. This happens when the component that has the defer block does not import MatSelectModule in its imports array. This happen even if the nested component that has the mat-select does import the MatSelectModule .\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/npjg8f?file=src%2Fexample%2Fselect-overview-example.html\r\nSteps to reproduce:\r\n1. Use `@defer(with condition)` where a nested component has a mat-select.\r\n    Like  `@defer(with condition){<app-a> <app-b/> </app-a>}`  and `<app-b>` has a `mat-select` inside of it.\r\n2. The component that has the `@defer` does not import MatSelectModule in its imports array, `<app-b>` does.\r\n3. When the defer conditon is fuffilled, the error will occur.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo error and everything should work.\r\n\r\n### Actual Behavior\r\n\r\n```\r\nvendor.js:43656  ERROR NullInjectorError: R3InjectorError(Environment Injector)[InjectionToken mat-select-scroll-strategy -> InjectionToken mat-select-scroll-strategy]: \r\n  NullInjectorError: No provider for InjectionToken mat-select-scroll-strategy!\r\n    at NullInjector.get (vendor.js:37713:21)\r\n    at R3Injector.get (vendor.js:38164:27)\r\n    at R3Injector.get (vendor.js:38164:27)\r\n    at ChainedInjector.get (vendor.js:47251:32)\r\n    at lookupTokenUsingModuleInjector (vendor.js:36272:31)\r\n    at getOrCreateInjectable (vendor.js:36318:10)\r\n    at Module.…µ…µdirectiveInject (vendor.js:43878:17)\r\n    at NodeInjectorFactory.MatSelect_Factory [as factory] (src_example_my_ts.js:19241:1454)\r\n    at getNodeInjectable (vendor.js:36512:38)\r\n    at instantiateAllDirectives (vendor.js:44650:23)\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/28198","RelatedDescription":"Open issue \"Using @defer with an inner mat-select causes No provider for InjectionToken mat-select-scroll-strategy! error\" (#28198)"},{"Id":"2013971705","IsPullRequest":true,"CreatedAt":"2023-11-28T11:00:34","Actor":"crisbeto","Number":"28196","RawContent":null,"Title":"Switch experimental packages to standalone","State":"closed","Body":"Reworks all of the experimental packages to use standalone.","Url":"https://github.com/angular/components/pull/28196","RelatedDescription":"Closed or merged PR \"Switch experimental packages to standalone\" (#28196)"},{"Id":"2013577409","IsPullRequest":false,"CreatedAt":"2023-11-28T04:07:51","Actor":"mattiLeBlanc","Number":"28195","RawContent":null,"Title":"feat(Mat-Table): Allow for adding multiple TBODY within Mat-Table","State":"open","Body":"### Feature Description\n\nIn the current cdk Table implementation we can only have on `<TR>` with  a `matRowDef`. This will generate a TBODY element with the TR's inside.\r\nThat works fine for most use case.\r\n\r\nI would like to be able to add a second TBODY with a selection of the rows of the datasource (based on a filter) so that I have 2 groups of rows within the same table.\r\n\r\nI tried using the When option in matRowDef but that doesn't result in 2 TBODY's, but it comes close into what I am looking for.\n\n### Use Case\n\nI am having a list of Categories of which the top 3 can have primary flag. Those are display at the top, then row 4 until X is the non primary Categories.\r\nI enabled drag and drop and I only want to be able to order the Primary rows within their TBODY and the non-primary rows in their TBODY. So you can't accidentally drop a Non primary row into a primary block.\r\n\r\nYou can control if a category is primary or not by editing the Category itself.\r\n\r\nSo to sum up feature request:\r\n\r\n- Allow for multiple TBODYs which can have a filtered collection of the datasource\r\n- Allow Drag and drop within that tbody only\r\n<img width=\"943\" alt=\"image\" src=\"https://github.com/angular/components/assets/5285035/e877f0cd-e523-41b6-8ba5-0714d2a56db2\">\r\n","Url":"https://github.com/angular/components/issues/28195","RelatedDescription":"Open issue \"feat(Mat-Table): Allow for adding multiple TBODY within Mat-Table\" (#28195)"},{"Id":"2012980372","IsPullRequest":true,"CreatedAt":"2023-11-27T20:18:23","Actor":"crisbeto","Number":"28194","RawContent":null,"Title":"refactor(material/core): work around closure issue","State":"closed","Body":"Fixes a runtime error with some configurations of Closure compiler, because the `_ErrorStateTracker.errorState` property name was clashing with the same property in other classes.","Url":"https://github.com/angular/components/pull/28194","RelatedDescription":"Closed or merged PR \"refactor(material/core): work around closure issue\" (#28194)"},{"Id":"2012755951","IsPullRequest":true,"CreatedAt":"2023-11-27T17:26:15","Actor":"wagnermaciel","Number":"28193","RawContent":null,"Title":"fix(material/slider): fix tick mark precision","State":"open","Body":"* Fixes https://github.com/angular/components/issues/26459\r\n* Fixes a bug where the number of tick marks can be miscalculated when the step is a decimal (e.g. 1.5)","Url":"https://github.com/angular/components/pull/28193","RelatedDescription":"Open PR \"fix(material/slider): fix tick mark precision\" (#28193)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-03T03:30:02.5376264Z","RunDurationInMilliseconds":1603}