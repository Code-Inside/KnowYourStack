{"Data":{"Angular-Issues":{"Issues":[{"Id":"1960323396","IsPullRequest":true,"CreatedAt":"2023-10-25T01:06:22","Actor":"tbondwilkinson","Number":"52363","RawContent":null,"Title":"feat(common): `PlatformNavigation` exposing Navigation API methods.","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nIntroduces a new internal common injectable class, `PlatformNavigation`.\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThere is no way to inject a real or fake version of the navigation API.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThere is an injectable class and a fake implementation.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52363","RelatedDescription":"Open PR \"feat(common): `PlatformNavigation` exposing Navigation API methods.\" (#52363)"},{"Id":"1960275286","IsPullRequest":true,"CreatedAt":"2023-10-25T00:02:38","Actor":"jelbourn","Number":"52362","RawContent":null,"Title":"refactor(compiler): extract decorator API docs","State":"open","Body":"This commit adds decorators to the extracted API docs. It makes some very hard-coded assumptions about the pattern used to declare decorators that's extremely specific to what the framework does today.\r\n\r\n(note: the build will fail until I update this PR with updated dev-infra from https://github.com/angular/dev-infra/pull/1467)","Url":"https://github.com/angular/angular/pull/52362","RelatedDescription":"Open PR \"refactor(compiler): extract decorator API docs\" (#52362)"},{"Id":"1960230573","IsPullRequest":true,"CreatedAt":"2023-10-24T23:06:25","Actor":"dgp1130","Number":"52361","RawContent":null,"Title":"Update docs examples to use `application` builder and `buildTarget`","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/52361","RelatedDescription":"Open PR \"Update docs examples to use `application` builder and `buildTarget`\" (#52361)"},{"Id":"1960209224","IsPullRequest":false,"CreatedAt":"2023-10-24T22:47:41","Actor":"naveedahmed1","Number":"52360","RawContent":null,"Title":"Please add an option to skip Client App Initialization for certain cases such as Google/Bing Crawlers/Bots","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHere's a request to please add an option to skip initialization of Client App for certain User Agents for example Google Bot, when using SSR. This will help developers working with Angular-based websites and their interaction with Google's search crawlers.\r\n\r\n**Background:**\r\nWe have been facing challenges related to the crawling and indexing of our Angular-based website by Google's search engine. Despite Google's advanced capabilities to run JavaScript with an evergreen version of Chromium, we have observed issues during the client-side application initialization process that affect the accuracy of indexing and user experience. Specifically, we have encountered problems with Signed Exchanges (SXG) and Google for Jobs Markup, which result in users being redirected to incorrect pages on our website or encountering empty pages with links on Google Jobs box.\r\n\r\nThese issues seem to arise during the client app initialization phase, and we believe that having an option to bypass this step for specific user agents, such as Googlebot, could mitigate these problems. By serving static HTML content to Google's crawlers, we can ensure that Google indexes our content accurately and enhances the user experience for visitors from search results.\r\n\r\nThis will also make it easy to troubleshoot issues.\r\n\r\nFor example in our case, when we check the cached version of the url through Search Console, it had the exact same markup as returned by our server as SSR response, but on clicking on SXG of that page in SERP lead to a completely different page.\r\n\r\nIn most of the cases the client side app initlization for a bot such as Google is not even necessary. And if an issue arrises while initlizing the Client App, when crawled by the a search bot, apparently there doesnt seem to be a way to report and troubleshoot the issue. The Inspect URL feature in Search console shows the markup which Google Bot received from the server.\r\n\r\nRef: https://developers.google.com/search/docs/crawling-indexing/javascript/dynamic-rendering\n\n### Proposed solution\n\nPlease add an option that allows developers to define specific user agents (e.g., Googlebot) for which the client app initialization process can be completely skipped during rendering. Or maybe add an option to conditionally skip client app initilization based on certain conditions.\n\n### Alternatives considered\n\nI tried replacing the type of the server bundles in server rendered markup \r\n\r\n`Replace(\".js\\\" type=\\\"module\\\"\", \".js\\\" type=\\\"text/skip-hydration\\\"\");`\r\n\r\nAnd then conditionally enabling them by changing the type attribute using below code but it didnt work,\r\n\r\n```\r\nIf(!isUserAgentBot()){\r\ndocument.querySelectorAll('script[type=\"text/skip-hydration\"]')\r\n    .forEach(script => script.replaceWith(Object.assign(script.cloneNode(), \r\n       {type: 'module'})));\r\n}\r\n```\r\n\r\nI see the scripts are loaded in Network Tab of Dev Tools but Angular app is not initialized.","Url":"https://github.com/angular/angular/issues/52360","RelatedDescription":"Open issue \"Please add an option to skip Client App Initialization for certain cases such as Google/Bing Crawlers/Bots\" (#52360)"},{"Id":"1959308495","IsPullRequest":true,"CreatedAt":"2023-10-24T21:33:34","Actor":"alan-agius4","Number":"52347","RawContent":null,"Title":"perf(http): reduce data transfer when using HTTP caching","State":"closed","Body":"This commit reduces the property size in the http transfer cache to reduce the page payload.\r\n\r\nBefore\r\n```html\r\n<script id=\"ng-state\" type=\"application/json\">\r\n{\r\n  \"4155228514\": {\r\n    \"body\": \"....\",\r\n    \"headers\": {},\r\n    \"status\": 200,\r\n    \"statusText\": \"OK\",\r\n    \"url\": \"http://foo.com/assets/media.json\",\r\n    \"responseType\": \"json\"\r\n  },\r\n}\r\n</script>\r\n```\r\n\r\nNow\r\n```html\r\n<script id=\"ng-state\" type=\"application/json\">\r\n{\r\n  \"4155228514\": {\r\n    \"b\": \"....\",\r\n    \"h\": {},\r\n    \"s\": 200,\r\n    \"st\": \"OK\",\r\n    \"u\": \"http://foo.com/assets/media.json\",\r\n    \"rt\": \"json\"\r\n  },\r\n}\r\n</script>\r\n```","Url":"https://github.com/angular/angular/pull/52347","RelatedDescription":"Closed or merged PR \"perf(http): reduce data transfer when using HTTP caching\" (#52347)"},{"Id":"1959774718","IsPullRequest":true,"CreatedAt":"2023-10-24T21:29:27","Actor":"josephperrott","Number":"52353","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52353","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#52353)"},{"Id":"1959828726","IsPullRequest":true,"CreatedAt":"2023-10-24T21:22:54","Actor":"jessicajaniuk","Number":"52355","RawContent":null,"Title":"fix(migrations): Fixes the root level template offset in control flow migration","State":"closed","Body":"When migrating an `ng-template` later on in a file, the migrationResult was not being reset to zero and causing offsets to be double applied due to `ng-template` nodes being included in the migration loop.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52355","RelatedDescription":"Closed or merged PR \"fix(migrations): Fixes the root level template offset in control flow migration\" (#52355)"},{"Id":"1960020622","IsPullRequest":true,"CreatedAt":"2023-10-24T20:25:42","Actor":"Yvad60","Number":"52359","RawContent":null,"Title":"docs(docs-infra): fix typo in tap into the observable tutorial example","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\nfixes #52340 \r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52359","RelatedDescription":"Open PR \"docs(docs-infra): fix typo in tap into the observable tutorial example\" (#52359)"},{"Id":"1959997898","IsPullRequest":true,"CreatedAt":"2023-10-24T20:09:22","Actor":"jessicajaniuk","Number":"52358","RawContent":null,"Title":"fix(migrations): Add support for nested structures inside a switch statement","State":"open","Body":"This updates the code to handle switches more elegantly in line with how the other blocks are handled. This allows nesting to be handled just like other blocks.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52358","RelatedDescription":"Open PR \"fix(migrations): Add support for nested structures inside a switch statement\" (#52358)"},{"Id":"1959975695","IsPullRequest":true,"CreatedAt":"2023-10-24T19:54:34","Actor":"atscott","Number":"52357","RawContent":null,"Title":"fix(router): `RouterTestingHarness` should throw if a component is ex…","State":"open","Body":"…pected but navigation fails\r\n\r\nThe `RouterTestingHarness` should throw an error if the call to `navigateByUrl` expects a component to be activated but the navigation failed.\r\n\r\nfixes #52344\r\n","Url":"https://github.com/angular/angular/pull/52357","RelatedDescription":"Open PR \"fix(router): `RouterTestingHarness` should throw if a component is ex…\" (#52357)"},{"Id":"1959865449","IsPullRequest":true,"CreatedAt":"2023-10-24T18:47:15","Actor":"mgechev","Number":"52356","RawContent":null,"Title":"docs: update the roadmap to reflect the progress as of v17","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/52356","RelatedDescription":"Open PR \"docs: update the roadmap to reflect the progress as of v17\" (#52356)"},{"Id":"1959783716","IsPullRequest":true,"CreatedAt":"2023-10-24T17:56:56","Actor":"naaajii","Number":"52354","RawContent":null,"Title":"docs(docs-infra): fix codeblock snippet for APP_INITIALIZER","State":"open","Body":"fixes broken code snippet for standalone application using APP_INITIALIZER\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n![image](https://github.com/angular/angular/assets/54370141/fe96dda7-57e9-4768-a082-5ce5cbe706b5)\r\n\r\n\r\n## What is the new behavior?\r\n\r\n![image](https://github.com/angular/angular/assets/54370141/827e0240-9a23-4e86-8c98-97862052d0cb)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nPage URL: https://angular.io/api/core/APP_INITIALIZER\r\n","Url":"https://github.com/angular/angular/pull/52354","RelatedDescription":"Open PR \"docs(docs-infra): fix codeblock snippet for APP_INITIALIZER\" (#52354)"},{"Id":"1959647800","IsPullRequest":true,"CreatedAt":"2023-10-24T16:31:17","Actor":"JeanMeche","Number":"52352","RawContent":null,"Title":"docs(core): fix the language code","State":"open","Body":"This fixes an issue raised in API extraction ","Url":"https://github.com/angular/angular/pull/52352","RelatedDescription":"Open PR \"docs(core): fix the language code\" (#52352)"},{"Id":"1957988816","IsPullRequest":true,"CreatedAt":"2023-10-24T16:30:21","Actor":"angular-robot","Number":"52335","RawContent":null,"Title":"docs: update Angular CLI help [16.2.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/52335","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [16.2.x]\" (#52335)"},{"Id":"1958652293","IsPullRequest":true,"CreatedAt":"2023-10-24T16:26:57","Actor":"alan-agius4","Number":"52342","RawContent":null,"Title":"refactor(platform-server): remove dependency between `@angular/platform-server` and `@angular/platform-server/init`","State":"closed","Body":"\r\nPreviously, the cross entry-point dependency was created to share the `setDomTypes` function. This however, causes extra transformations \"linking\" during the application build since other Angular code in `@angular/platform-server` is pulled in.\r\n\r\nWith this commit we remove the cross dependency and thus remove the need for extra transformations in the server polyfill bundle with the result of having a slightly faster build.\r\n\r\nSee: https://github.com/angular/angular-cli/pull/26113\r\n","Url":"https://github.com/angular/angular/pull/52342","RelatedDescription":"Closed or merged PR \"refactor(platform-server): remove dependency between `@angular/platform-server` and `@angular/platform-server/init`\" (#52342)"},{"Id":"1958210184","IsPullRequest":true,"CreatedAt":"2023-10-24T16:22:03","Actor":"atscott","Number":"52337","RawContent":null,"Title":"test(core): fix test observing broken OnPush checkNoChanges","State":"closed","Body":"The test is actually observing that OnPush results in a view not being checked when checkNoChanges runs.\r\n","Url":"https://github.com/angular/angular/pull/52337","RelatedDescription":"Closed or merged PR \"test(core): fix test observing broken OnPush checkNoChanges\" (#52337)"},{"Id":"1958306917","IsPullRequest":true,"CreatedAt":"2023-10-24T16:21:22","Actor":"dgp1130","Number":"52339","RawContent":null,"Title":"docs: fix typo","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52339","RelatedDescription":"Closed or merged PR \"docs: fix typo\" (#52339)"},{"Id":"1958799317","IsPullRequest":true,"CreatedAt":"2023-10-24T16:20:56","Actor":"crisbeto","Number":"52343","RawContent":null,"Title":"fix(compiler): account for type-only imports in defer blocks","State":"closed","Body":"Fixes that `@defer` blocks didn't account for type-only imports which could cause the import to be considered as not deferrable.\r\n","Url":"https://github.com/angular/angular/pull/52343","RelatedDescription":"Closed or merged PR \"fix(compiler): account for type-only imports in defer blocks\" (#52343)"},{"Id":"1959496967","IsPullRequest":true,"CreatedAt":"2023-10-24T15:14:13","Actor":"jessicajaniuk","Number":"52351","RawContent":null,"Title":"WIP: Migrate tests","State":"open","Body":"This is just a test run of this migration","Url":"https://github.com/angular/angular/pull/52351","RelatedDescription":"Open PR \"WIP: Migrate tests\" (#52351)"},{"Id":"1959480125","IsPullRequest":true,"CreatedAt":"2023-10-24T15:14:04","Actor":"lazarljubenovic","Number":"52350","RawContent":null,"Title":"feat(common): allow using a string for trackBy in *ngFor","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nCurrently, the only way to customize the tracking algorithm in ngFor is to provide a function. Since functions cannot be defined inline in templates, these must be defined in the class, and must be given a name, which is not always easy.\r\n\r\nMore often than not, these functions are very simple, and usually only pluck the value of a representative property of the object that's being iterated on, e.g. `id`, `name` or `timestamp`, leading to code such as the following.\r\n\r\n```ts\r\nreadonly byId: TrackByFunction<User> = (_, { id }) => id\r\n```\r\n\r\n```html\r\n<user *ngFor=\"let user of users; trackBy: byId\"></user>\r\n```\r\n\r\n## What is the new behavior?\r\n\r\nWith this PR, it's possible to pass in a string which represents a property key, which will automatically “pluck” values from the items. The previous example is now greatly simplified.\r\n\r\n```html\r\n<user *ngFor=\"let user of users; trackBy: 'id'\"></user>\r\n```\r\n\r\nThe value is type safe and will report a readable error if an unexpected string is passed in.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\nIt only expands the API. Any “expected” usage of `ngFor` will not be a breaking change, but as alway with changes of the public API, it's _possible_ to break some unexpected way of using it.\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nI assume that the only reason why this API wasn't like this since the start is that `keyof` was introduced in TS 2.1, and by that time, these common functionalities were finalized and not much thought was given to them again.\r\n","Url":"https://github.com/angular/angular/pull/52350","RelatedDescription":"Closed or merged PR \"feat(common): allow using a string for trackBy in *ngFor\" (#52350)"},{"Id":"1959470514","IsPullRequest":false,"CreatedAt":"2023-10-24T15:01:10","Actor":"angelaki","Number":"52349","RawContent":null,"Title":"feature(service-worker): Store received notifications","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nservice-worker\n\n### Description\n\nIf I'm not mistaken the current service worker only displays / reacts on incoming notifications. There is no chance to list them afterwards.\r\n\r\nSince many users accidentally click them away / want to check them later, I'd like to be able to access old received notifcations.\n\n### Proposed solution\n\nReceived messages could be stored to localStorage. The key and the maximum latest message store count could be set, so with a default value of zero the current SW even wouldn't behave any different.\n\n### Alternatives considered\n\n-","Url":"https://github.com/angular/angular/issues/52349","RelatedDescription":"Open issue \"feature(service-worker): Store received notifications\" (#52349)"},{"Id":"1959324957","IsPullRequest":true,"CreatedAt":"2023-10-24T13:59:08","Actor":"JeanMeche","Number":"52348","RawContent":null,"Title":"refactor(core): remove signal mutate implementation","State":"open","Body":"`signal.mutate` has been removed but the implementation was kept somehow. It's not used. \r\n","Url":"https://github.com/angular/angular/pull/52348","RelatedDescription":"Open PR \"refactor(core): remove signal mutate implementation\" (#52348)"},{"Id":"1959118218","IsPullRequest":false,"CreatedAt":"2023-10-24T12:20:55","Actor":"ArielGueta","Number":"52346","RawContent":null,"Title":"Signals doesn't work with type guards","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using signals **we lost the power of type guards in typescript:**\r\n\r\n```ts\r\nimport { signal } from \"@angular/core\";\r\n\r\ninterface Base {\r\n  type: 'a' | 'b'\r\n}\r\n\r\ninterface A extends Base {\r\n  type: 'a';\r\n  foo: number;\r\n}\r\n\r\ninterface B extends Base {\r\n  type: 'b';\r\n  bar: string;\r\n}\r\n\r\nconst s = signal<A | B>({\r\n  type: 'a',\r\n  foo: 1\r\n})\r\n\r\n\r\nif(s().type === 'a') {\r\n  s().foo // doesn't work\r\n} \r\n\r\n// works fine\r\nconst simple: A | B = {\r\n  type: 'a',\r\n  foo: 1\r\n}\r\n\r\nif(simple.type === 'a') {\r\n  simple.foo = 1\r\n}\r\n```\r\n\r\nThis is a big issue in my opinion. How can we solve it?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52346","RelatedDescription":"Closed issue \"Signals doesn't work with type guards\" (#52346)"},{"Id":"1959020659","IsPullRequest":false,"CreatedAt":"2023-10-24T11:14:28","Actor":"atomicrobokid","Number":"52345","RawContent":null,"Title":"zone-testing is not exported from package with zone.js 0.14.0","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith `zone.js: 0.13.*` karma tests ran absolutely fine, no issue, since upgrading to `0.14.0` they all fail with the following:\r\n\r\n`zone-testing is not exported from package`\r\n\r\nIt is imported as recommended in the docs:\r\n\r\n`import 'zone.js/zone-testing';`\r\n\r\nTesting is missing from `package.json` exports, if this has been removed, where are the docs on how to replicate the functionality needed for things like `fakeAsync()`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n` Error: Module not found: Error: Package path ./zone-testing is not exported from package /Users/**/**/**/node_modules/zone.js (see exports field in /Users/**/**/**/node_modules/zone.js/package.json)\r\n`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.7\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.6\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52345","RelatedDescription":"Closed issue \"zone-testing is not exported from package with zone.js 0.14.0\" (#52345)"},{"Id":"1959002762","IsPullRequest":false,"CreatedAt":"2023-10-24T10:59:54","Actor":"reduckted","Number":"52344","RawContent":null,"Title":"RouterTestingHarness.navigateByUrl does not throw error if navigation is cancelled when the required routed component type is specified","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using `RouterTestingHarness.navigateByUrl`, if you specify the required routed component type, but a route guard cancels navigation, an error should be thrown, but is not.\r\n\r\nThe documentation states:\r\nhttps://github.com/angular/angular/blob/47ab069070c043c54c46f8ef9b37b14a25857939/packages/router/testing/src/router_testing_harness.ts#L130-L132\r\n\r\nSpecifically, this part:\r\n\r\n> If the outlet **is not activated** or a different component is activated, this function **will throw an error.** \r\n\r\nInstead of throwing an error, the function returns null. If the route guard redirects to a different component, then this function does correctly throw an exception.\r\n\r\nThe linked repo has a full reproduction, but here's some code that highlights the problem.\r\n\r\n```ts\r\ndescribe('Bug', () => {\r\n    it(`with incorrect expected component.`, async () => {\r\n        TestBed.configureTestingModule({\r\n            providers: [\r\n                provideRouter([\r\n                    {\r\n                        path: 'delta',\r\n                        component: DeltaComponent,\r\n                        canActivate: [() => false],\r\n                    },\r\n                ]),\r\n                provideLocationMocks(),\r\n            ],\r\n        });\r\n\r\n        let harness = await RouterTestingHarness.create();\r\n\r\n        await expectAsync(\r\n            harness.navigateByUrl('/delta', DeltaComponent) // <-- Doesn't throw. Returns null instead.\r\n        ).toBeRejectedWithError();\r\n    });\r\n});\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/reduckted/repro-router-testing-harness-bug\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.7\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52344","RelatedDescription":"Open issue \"RouterTestingHarness.navigateByUrl does not throw error if navigation is cancelled when the required routed component type is specified\" (#52344)"},{"Id":"1958455184","IsPullRequest":false,"CreatedAt":"2023-10-24T04:38:14","Actor":"leo6104","Number":"52341","RawContent":null,"Title":"new control flow makes `ng-content` not works","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen we render component with @if / @for syntax, it doesn't projection to `ng-content` usage.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-at-xnyger?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nNo error message, just not rendered.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core\r\n... elements, forms, language-service, localize\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, service-worker, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@angular/cdk                    16.2.4\r\n@angular/material               16.2.4\r\n@angular/youtube-player         16.2.0\r\n@schematics/angular             17.0.0-rc.0\r\nng-packagr                      17.0.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52341","RelatedDescription":"Closed issue \"new control flow makes `ng-content` not works\" (#52341)"},{"Id":"1958364754","IsPullRequest":false,"CreatedAt":"2023-10-24T02:35:49","Actor":"syoho","Number":"52340","RawContent":null,"Title":"Docs Bug Report","State":"open","Body":"### Describe the problem that you experienced\n\nHello.\r\n\r\nI'd like to raise a documentation concern. \r\n\r\nIn the provided Angular tutorial page, the original sentence, `The getHeros() method taps into the flow of observable values and sends a message, using the log() method, to the message area at the bottom of the page.` seems to have a typo. \r\n\r\nShould `getHeros()` be corrected to `getHeroes()`? \r\n\r\nBased on the context of the tutorial, the method should be `getHeroes()`.\r\n\r\nI look forward to your response.\r\n\r\nBest regards.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt6\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/52340","RelatedDescription":"Open issue \"Docs Bug Report\" (#52340)"},{"Id":"1958211202","IsPullRequest":true,"CreatedAt":"2023-10-23T23:40:55","Actor":"atscott","Number":"52338","RawContent":null,"Title":"refactor(core): Move booleans in LContainer to flags slot","State":"open","Body":"There are now 2 booleans in the LContainer so this commit moves them to a shared FLAGS slot like the LView.\r\n","Url":"https://github.com/angular/angular/pull/52338","RelatedDescription":"Open PR \"refactor(core): Move booleans in LContainer to flags slot\" (#52338)"},{"Id":"1958051517","IsPullRequest":true,"CreatedAt":"2023-10-23T21:26:46","Actor":"jessicajaniuk","Number":"52336","RawContent":null,"Title":"docs: Add @defer API reference documentation","State":"open","Body":"This adds the initial API reference documentation for the new defer blocks.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52336","RelatedDescription":"Open PR \"docs: Add @defer API reference documentation\" (#52336)"},{"Id":"1957670052","IsPullRequest":true,"CreatedAt":"2023-10-23T20:40:13","Actor":"twerske","Number":"52334","RawContent":null,"Title":"docs: add event banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52334","RelatedDescription":"Closed or merged PR \"docs: add event banner\" (#52334)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1960330604","IsPullRequest":true,"CreatedAt":"2023-10-25T01:16:07","Actor":"I-A-S","Number":"26120","RawContent":null,"Title":"Feat custom postcss plugin support","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently users cannot include custom postcss plugins into the build process (easily at least)\r\n\r\n## What is the new behavior?\r\n\r\nWith this PR, adding a postcss plugin will be as easy and seamless as\r\n\r\n1) Installing the plugin package (e.g. npm install postcss-nested)\r\n2) Adding package name to angular.json\r\n\r\n    e.g.\r\n        .\r\n        .\r\n        .\r\n        \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/angular-clitest\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"polyfills\": [\r\n              \"zone.js\"\r\n            ],\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"src/styles.scss\"\r\n            ],\r\n            \"postcssPlugins\": [\r\n              {\r\n                \"packageName\": \"postcss-nested\",\r\n                \"options\": {\r\n                  \"bubble\": []\r\n                }\r\n              }\r\n            ],\r\n        .\r\n        .\r\n        .\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n\r\nChanges in files,\r\n\r\n1) packages/angular_devkit/build_angular/src/tools/esbuild/bundler-context.ts\r\n2) packages/angular_devkit/build_angular/src/tools/esbuild/javascript-transformer.ts\r\n\r\nare not relevant to this commit. They are there as I reverted the last commit from main when I forked (due to that commit failing the automated tests)","Url":"https://github.com/angular/angular-cli/pull/26120","RelatedDescription":"Open PR \"Feat custom postcss plugin support\" (#26120)"},{"Id":"1959928176","IsPullRequest":true,"CreatedAt":"2023-10-24T19:23:40","Actor":"josephperrott","Number":"26119","RawContent":null,"Title":"ci: move saucelabs browser testing to GHA","State":"open","Body":"[Successful run](https://github.com/angular/angular-cli/actions/runs/6631491159/job/18015109371)","Url":"https://github.com/angular/angular-cli/pull/26119","RelatedDescription":"Open PR \"ci: move saucelabs browser testing to GHA\" (#26119)"},{"Id":"1958270948","IsPullRequest":true,"CreatedAt":"2023-10-24T15:51:37","Actor":"clydin","Number":"26112","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): increase JS transformer worker pool idle timeout to 1 second","State":"closed","Body":"The idle timeout for threads in the JavaScript transformer worker pool for the esbuild-based builders (`application`/`browser-esbuild`) is now set at 1 second. This prevents the default of immediate shutdown of an idle worker from occurring. The immediate shutdown causes additional worker threads to be created due to the variable time between bundler requests for node module JavaScript files. The shutdown and subsequent recreation of the threads during the build causes unneeded extra processing that can now be avoided.","Url":"https://github.com/angular/angular-cli/pull/26112","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): increase JS transformer worker pool idle timeout to 1 second\" (#26112)"},{"Id":"1958240313","IsPullRequest":true,"CreatedAt":"2023-10-24T15:51:22","Actor":"clydin","Number":"26111","RawContent":null,"Title":"perf(@angular-devkit/build-angular): fully avoid rebuild of component stylesheets when unchanged","State":"closed","Body":"With the full set of dependencies and watch files tracked within the bundler context object for component stylesheets, the entire bundler output can be cached in memory and reused when none of the relevant files have changed since the last rebuild. This is particularly useful for scenarios when a large tree of components are considered affected and must be recompiled by the AOT compiler.","Url":"https://github.com/angular/angular-cli/pull/26111","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): fully avoid rebuild of component stylesheets when unchanged\" (#26111)"},{"Id":"1959566775","IsPullRequest":true,"CreatedAt":"2023-10-24T15:49:18","Actor":"clydin","Number":"26118","RawContent":null,"Title":"build: disable inline sourcemap generation","State":"open","Body":"The built packages that will be published on npm previously contained inlined sourcemaps for every JavaScript file. This caused a significant increase in the overall package size of over two times larger. This has a negative effect on developer experience especially the new project experience due to the increased time to download and setup a new project. The sourcemaps are also rarely used as debugging the CLI code itself is typically done with development builds. The generated code is also very close to the original source due to it being emitted as ES2022 code and with the eventual switch to ESM output this will become even closer.\r\nAs an example of the size difference, the `@angular/cli` compressed package size was reduced from ~352Kb to ~115Kb with this change.","Url":"https://github.com/angular/angular-cli/pull/26118","RelatedDescription":"Open PR \"build: disable inline sourcemap generation\" (#26118)"},{"Id":"1956626724","IsPullRequest":false,"CreatedAt":"2023-10-24T15:40:39","Actor":"AnaA95","Number":"26095","RawContent":null,"Title":"[browser-esbuild] Trying to use partial ivy compilationMode doesn't work","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nUsing browser-esbuild with partial compilation mode throws an error when trying to serve or build the application. The error is not present when using the default builder.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new Angular application using the \"ng new\" command.\r\n2. npm i\r\n3. Switch to partial ivy in tsconfig.app.json by adding this code:\r\n```\r\n\"angularCompilerOptions\": { \r\n    \"compilationMode\": \"partial\" \r\n}\r\n```\r\n4. Make the changes in `angular.json` to move to esbuild as mentioned in the [docs](https://angular.io/guide/esbuild):\r\n```...\r\n\"architect\": {\r\n  \"build\": {\r\n    \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n...\r\n```\r\n5. Run `ng serve` (or try to build the app, it throws the same error).\r\n\r\n### Exception or Error\r\n\r\n```text\r\n✘ [ERROR] File 'src/main.ts' is missing from the TypeScript compilation. [plugin angular-compiler]\r\n\r\n  Ensure the file is part of the TypeScript program via the 'files' or 'include' property.\r\n\r\n\r\n✘ [ERROR] TestBed support (\"supportTestBed\" option) cannot be disabled in partial compilation mode. [plugin angular-compiler]\r\n\r\n    node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:88:\r\n      72 │ ...sync)('NG_ANALYZE_PROGRAM', () => angularCompiler.analyzeAsync());\r\n         ╵                                                      ^\r\n\r\n    at NgCompiler.makeCompilation (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:7065:13)\r\n    at file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:6758:31\r\n    at ActivePerfRecorder.inPhase (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-HJOPJLIM.js:134:14)\r\n    at NgCompiler.analyzeAsync (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:6757:29)\r\n    at /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:89\r\n    at profileAsync (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/profiling.js:55:16)\r\n    at AotCompilation.initialize (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:44)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n    at async /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:168:76\r\n    at async /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/esbuild/lib/main.js:1349:22\r\n\r\n  This error came from the \"onStart\" callback registered here:\r\n\r\n    node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:136:18:\r\n      136 │             build.onStart(async () => {\r\n          ╵                   ~~~~~~~\r\n\r\n    at setup (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:136:19)\r\n    at async handlePlugins (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/esbuild/lib/main.js:1339:9)\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.7\r\nNode: 16.20.2\r\nPackage Manager: npm 8.19.4\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26095","RelatedDescription":"Closed issue \"[browser-esbuild] Trying to use partial ivy compilationMode doesn't work\" (#26095)"},{"Id":"1958985547","IsPullRequest":true,"CreatedAt":"2023-10-24T14:12:09","Actor":"alan-agius4","Number":"26116","RawContent":null,"Title":"fix(@angular/cli): remove Node.js 16 from supported checks","State":"closed","Body":"Node.js support was removed, but it appears that this got through the cracks.\r\n","Url":"https://github.com/angular/angular-cli/pull/26116","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): remove Node.js 16 from supported checks\" (#26116)"},{"Id":"1958981831","IsPullRequest":true,"CreatedAt":"2023-10-24T14:11:57","Actor":"alan-agius4","Number":"26115","RawContent":null,"Title":"fix(@angular-devkit/build-angular): silence xhr2 not ESM module warning","State":"closed","Body":"This is used inernally by '@angular/platform-server' and is in a seperate chunk that is unused when using `provideHttpClient(withFetch())`.\r\n","Url":"https://github.com/angular/angular-cli/pull/26115","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): silence xhr2 not ESM module warning\" (#26115)"},{"Id":"1956761580","IsPullRequest":true,"CreatedAt":"2023-10-24T14:11:45","Actor":"alan-agius4","Number":"26098","RawContent":null,"Title":"fix(@angular/ssr): correctly set config URL","State":"closed","Body":"When calling `renderApplication` or `renderModule` the URL would be overridden to undefined as the `url` option was not provided as an option.\r\n","Url":"https://github.com/angular/angular-cli/pull/26098","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): correctly set config URL\" (#26098)"},{"Id":"1959312264","IsPullRequest":true,"CreatedAt":"2023-10-24T13:55:30","Actor":"alan-agius4","Number":"26117","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle HTTP requests to assets during prerendering","State":"open","Body":"\r\nThis commit fixes an issue were during prerendering (SSG) http requests to assets causes prerendering to fail.\r\n\r\nCloses #25720\r\n","Url":"https://github.com/angular/angular-cli/pull/26117","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): handle HTTP requests to assets during prerendering\" (#26117)"},{"Id":"1958827797","IsPullRequest":false,"CreatedAt":"2023-10-24T09:09:58","Actor":"JeanMeche","Number":"26114","RawContent":null,"Title":"Node 20 support","State":"open","Body":"Mostly to help outsiders tracking the support of Node20. \r\n\r\nCurrently it's not supported : \r\n\r\nhttps://github.com/angular/angular-cli/blob/65a26609d3c27d24dbccebba494e0869be915f12/packages/angular/cli/src/commands/version/cli.ts#L26","Url":"https://github.com/angular/angular-cli/issues/26114","RelatedDescription":"Open issue \"Node 20 support\" (#26114)"},{"Id":"1958612899","IsPullRequest":true,"CreatedAt":"2023-10-24T06:40:38","Actor":"alan-agius4","Number":"26113","RawContent":null,"Title":"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling","State":"open","Body":"\r\nThis is no longer needed as the server polyfills file there are no longer Angular deps that require to be \"linked\".\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/26113","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling\" (#26113)"},{"Id":"1957408914","IsPullRequest":true,"CreatedAt":"2023-10-23T23:30:49","Actor":"clydin","Number":"26104","RawContent":null,"Title":"fix(@angular-devkit/build-angular): warn if using partial mode with application builder","State":"closed","Body":"The Angular compiler's partial compilation mode is only intended for use when building libraries. If attempting to use the mode while building an application, the application would fail. A warning is now issued if partial mode is configured for the application and the mode is switched to full compilation mode to prevent the build from failing due to the option value.","Url":"https://github.com/angular/angular-cli/pull/26104","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): warn if using partial mode with application builder\" (#26104)"},{"Id":"1957695520","IsPullRequest":false,"CreatedAt":"2023-10-23T23:01:39","Actor":"pumano","Number":"26106","RawContent":null,"Title":"[esbuild] Incorrect error handling while processing background images","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI create issue #25089 not so long ago about problem when using tilde \"~\" syntax when processing css resources, and looks like in issue #25089 it should be fixed and error message should be displayed, but it not displayed. Today I debugging some other issue, trying to debug this issue too, and found that code in `css-resource-plugin` not correctly works.\r\n\r\n\r\nis looks like: \r\n\r\n```js\r\n  if (result.errors.length && args.path[0] === '~') {\r\n    result.errors[0].notes = [\r\n      {\r\n        location: null,\r\n        text: 'You can remove the tilde and use a relative path to reference it, which should remove this error.',\r\n      },\r\n   ];\r\n  }\r\n\r\n```\r\n\r\nbut interface `Message` from `esbuild` don't know about \"notes\" property.\r\n\r\n```js\r\ninterface Message {\r\n  text: string;\r\n  location: Location | null;\r\n  detail: any; // The original error from a JavaScript plugin, if applicable\r\n}\r\n```\r\n\r\nLooks like it should looks like:\r\n\r\n```js\r\n   if (result.errors.length && args.path[0] === '~') {\r\n     result.errors[0] = {\r\n        location: null,\r\n        text: 'You can remove the tilde and use a relative path to reference it, which should remove this error.',\r\n     };\r\n   }\r\n```\r\n\r\nAfter it I see proper error message\r\n\r\n\r\nAlso I would suggest to add ^ sign too and both old \"webpack\" syntax properly error handled with tailored error messages. \r\n\r\n### Minimal Reproduction\r\n\r\nadd background-image url with tilde\r\n\r\n```css\r\nbackground-image: url('~assets/dashboard/products.jpg')\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.16.1\r\nPackage Manager: yarn 3.6.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             16.2.7\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI can prepare PR if needed","Url":"https://github.com/angular/angular-cli/issues/26106","RelatedDescription":"Closed issue \"[esbuild] Incorrect error handling while processing background images\" (#26106)"},{"Id":"1957884557","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:44","Actor":"clydin","Number":"26108","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure css url() prefix warnings support Sass rebasing","State":"closed","Body":"The stylesheet url() resource plugin will now correctly issue warnings for the usage of Webpack specific prefixes such as the tilde when used in an imported Sass file. Previously, these URLs would be rebased by the Sass processing step which would cause the tilde prefix to no longer be a prefix. This would then no longer be considered a warning due to the tilde no longer being the first character of the URL value. Additionally, a warning is also now issued for the previously unsupported but available caret prefix. Removing the caret prefix and adding the path to the `externalDependencies` build option should provide equivalent behavior.","Url":"https://github.com/angular/angular-cli/pull/26108","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure css url() prefix warnings support Sass rebasing\" (#26108)"},{"Id":"1957370946","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:26","Actor":"clydin","Number":"26103","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): show build time on failures with application builder","State":"closed","Body":"The build time is now shown when bundling fails. Previously only the errors were shown. This provides additional information that the build did indeed fail and how long it took to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/26103","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): show build time on failures with application builder\" (#26103)"},{"Id":"1957309019","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:13","Actor":"clydin","Number":"26102","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove Sass module resolve workarounds","State":"closed","Body":"The recent version of the Sass compiler (`dart-sass@1.68.0`) now provides additional information within an importer that allows more accurate resolution of node modules packages without several existing workarounds. Previously, the Sass files needed to be pre-processed to extract all `@import` and `@use` paths so that information regarding the containing Sass file could be used to fully resolve the paths. The Sass compiler now provides this information directly.","Url":"https://github.com/angular/angular-cli/pull/26102","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove Sass module resolve workarounds\" (#26102)"},{"Id":"1957938651","IsPullRequest":true,"CreatedAt":"2023-10-23T20:06:32","Actor":"michaelfaith","Number":"26109","RawContent":null,"Title":"fix(@angular-devkit/schematics): running external schematics with yarn pnp","State":"open","Body":"This change addresses an issue encountered when running external schematics from a yarn pnp workspace.  The function used to resolve a collection json using node used recursion in a way that it effectively walked itself into an exception. Then if the exception is the type it expected, it would keep going.  This was flawed in that yarn with pnp throws a different type of error when it failed to load the mis-constructed collection path (e.g. `/node_modules/@schematics/angular/collection.json/package.json`).  `ENOTDIR` instead of `MODULE_NOT_FOUND`.\r\n\r\nThis process of intentionally / knowingly walking into an exception seems problematic in general.  So, I addressed it by removing the recursion that was used mainly because there's a similar need to construct the collection path from a relative path in the package.json as there is to construct the collection path from a relative path that's passed in.  Rather than leaning on the recursion to do this, I added the logic at the time we pull the schematics path from the package, and move on.\r\n\r\nSince the recursion was removed, the infinite recursion safety check at the start wasn't needed anymore.\r\n\r\nI've tested this in both yarn pnp and non-pnp environments.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25648\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\nFixes: #25648","Url":"https://github.com/angular/angular-cli/pull/26109","RelatedDescription":"Open PR \"fix(@angular-devkit/schematics): running external schematics with yarn pnp\" (#26109)"},{"Id":"1957752276","IsPullRequest":true,"CreatedAt":"2023-10-23T18:20:26","Actor":"clydin","Number":"26107","RawContent":null,"Title":"fix(@angular-devkit/build-angular): automatically include known packages in vite prebundling","State":"open","Body":"When using the Vite-based development server, the application build step already contains the list of known packages that would need to be prebundled. This information can be passed to Vite directly to avoid Vite needing to perform discovery on every output file that will be requested. This also avoids the Vite server behavior where Vite forces a reload of the page when it discovers a new dependency. This behavior can result in lost state during lazy loading of a route.","Url":"https://github.com/angular/angular-cli/pull/26107","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): automatically include known packages in vite prebundling\" (#26107)"},{"Id":"1958000382","IsPullRequest":false,"CreatedAt":"2023-10-23T17:20:01","Actor":"sonallux","Number":"26110","RawContent":null,"Title":"New `@angular/ssr` is missing `REQUEST` and `RESPONSE` tokens","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server, Don't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAngular Universal exposed two injection tokens `REQUEST` and `RESPONSE` from `@nguniversal/express-engine/tokens`. Also mentioned [here](https://github.com/angular/universal/blob/main/modules/express-engine/README.md#using-the-request-and-response) in the `ngExpressEngine` documentation. `\r\n\r\nUnfortunately the new SSR solution with `@angular/ssr` does not expose these anymore. Can you add them back or how should I handle use cases where I need access to the raw request object to read headers and/or cookies? \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26110","RelatedDescription":"Open issue \"New `@angular/ssr` is missing `REQUEST` and `RESPONSE` tokens\" (#26110)"},{"Id":"1957496849","IsPullRequest":false,"CreatedAt":"2023-10-23T15:57:37","Actor":"pumano","Number":"26105","RawContent":null,"Title":"[esbuild] background-urls processed with errors while process .css files from node_modules without files","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen I use `.css` from `node_modules` (from my library) with background urls that is could not be resolved. When I use webpack, I have no errors about it (also not have warnings - I think it's not good also) but that not stop me with errors in node_modules css background urls which could not be resolved.\r\n\r\n### Minimal Reproduction\r\n\r\nJust add `some.css` file to any node_module library, and import it into `project.json` for processing. That .css should contain\r\n\r\n```css\r\n.something {\r\n    background-image:url(assets/somefolder/my-header.jpg);\r\n}\r\n```\r\n\r\nbut we have no image in library. That's no problem for webpack. Webpack ignore it, but esbuild angular `css-resource-plugin` can't ignore it.\r\n\r\n\r\nI'm trying to fix that by my own via to check `css-resource-plugin.js` and add some code to build.onResolve\r\n\r\n```js\r\nif (result.errors.length && kind === 'url-token' && importer.includes('node_modules') && result.errors[0].text.includes('Could not resolve') ) {\r\n   result.warnings.push(result.errors[0])\r\n\r\n   result.errors[0] = undefined;\r\n   return {\r\n       warnings: result.warnings,\r\n       path: args.path,\r\n       external: true,\r\n   };\r\n}\r\n```\r\nand that solve my problem but when `tailwindcss` process my in app background-image urls that importer is node_modules too via `node_modules/tailwindcss`. That leads to all errors processed by `tailwindcss` also been marked as warnings. That's not a good idea.\r\n\r\nI'm add tailwindcss explicitly. Not the best way, but works)\r\n\r\n```js\r\nif (result.errors.length && kind === 'url-token' && (importer.includes('node_modules') && !importer.includes('tailwindcss')) && result.errors[0].text.includes('Could not resolve') ) {\r\n   result.warnings.push(result.errors[0])\r\n\r\n   result.errors[0] = undefined;\r\n   return {\r\n       warnings: result.warnings,\r\n       path: args.path,\r\n       external: true,\r\n   };\r\n}\r\n```\r\n\r\nThat fixes problems and mark all `node_modules` css imports as warnings, and only process properly `tailwindcss`\r\n\r\n### Exception or Error\r\n\r\n```text\r\nCould not resolve \"assets/somefolder/my-header.jpg\" [plugin angular-css-resource]\r\n\r\n    node_modules/@org/ui-lib/some.css:1:63459:\r\n      1 │ ...ound-image:url(assets/somefolder/my-header....\r\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"assets/somefolder/my-header.jpg\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.16.1\r\nPackage Manager: yarn 3.6.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             16.2.7\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI can prepare PR if this solution is accepted by angular team.","Url":"https://github.com/angular/angular-cli/issues/26105","RelatedDescription":"Open issue \"[esbuild] background-urls processed with errors while process .css files from node_modules without files\" (#26105)"},{"Id":"1957042889","IsPullRequest":true,"CreatedAt":"2023-10-23T15:35:29","Actor":"alan-agius4","Number":"26100","RawContent":null,"Title":"docs(@angular-devkit/build-angular): update prendering options descriptions","State":"closed","Body":"\r\nThis commit updates several option descriptions\r\n","Url":"https://github.com/angular/angular-cli/pull/26100","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): update prendering options descriptions\" (#26100)"},{"Id":"1957148363","IsPullRequest":false,"CreatedAt":"2023-10-23T14:34:54","Actor":"Casimodo72","Number":"26101","RawContent":null,"Title":"Library - share source code?","State":"closed","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\nHi, I'm relatively new to Angular and would like to reuse some standalone components, services and just some other code in multiple projects (in a single workspace).\r\nI learned that one can generate a \"library\" which needs to be build separately (lands in dist/lib) and is intended to be published (npm).\r\nBut what I'm envisioning is a library where I can just share the source code (like a .NET project or shared-code reference) without the hassle of building and publishing it (the latter not being possible for us anyway). Is this possible? Will this be supported someday?\r\nFrom what I read Angular has issues when files located outside of the app folder are referenced.\r\n\r\nCurrently I'm thinking of putting my library code anywhere and creating a symlink to it so the CLI will treat it as part of the project. Is this the preferred handling of such a scenario?\r\n(Hmm, now I'm wondering if symlinks could be a problem when using git) \r\n\r\n### Describe the solution you'd like\r\n\r\nA library for sharing of source code (without the need to build it separately or publish it)\r\n\r\n### Describe alternatives you've considered\r\n\r\nSymlink to the shared code folder","Url":"https://github.com/angular/angular-cli/issues/26101","RelatedDescription":"Closed issue \"Library - share source code?\" (#26101)"},{"Id":"1956874713","IsPullRequest":true,"CreatedAt":"2023-10-23T13:17:21","Actor":"alan-agius4","Number":"26099","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unused imports","State":"closed","Body":"Remove several unused imports\r\n","Url":"https://github.com/angular/angular-cli/pull/26099","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unused imports\" (#26099)"},{"Id":"1956673526","IsPullRequest":true,"CreatedAt":"2023-10-23T13:17:08","Actor":"alan-agius4","Number":"26096","RawContent":null,"Title":"fix(@schematics/angular): do not add unnecessary dependency on `@angular/ssr` during migration","State":"closed","Body":"\r\n\r\nPrior to this change the Universal migration ran and added `@angular/ssr` even the workspace did not depend on `@nguniversal/` packages.\r\n\r\nCloses #26083","Url":"https://github.com/angular/angular-cli/pull/26096","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): do not add unnecessary dependency on `@angular/ssr` during migration\" (#26096)"},{"Id":"1956686030","IsPullRequest":true,"CreatedAt":"2023-10-23T10:43:19","Actor":"alan-agius4","Number":"26097","RawContent":null,"Title":"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling","State":"closed","Body":"\r\nThis is no longer needed as the server polyfills file there are no longer Angular deps that require to be \"linked\".\r\n","Url":"https://github.com/angular/angular-cli/pull/26097","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling\" (#26097)"},{"Id":"1956511486","IsPullRequest":true,"CreatedAt":"2023-10-23T07:16:39","Actor":"angular-robot","Number":"26094","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMzEuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26094","RelatedDescription":"Open PR \"build: lock file maintenance\" (#26094)"},{"Id":"1956268564","IsPullRequest":false,"CreatedAt":"2023-10-23T03:11:55","Actor":"d9j","Number":"26093","RawContent":null,"Title":"[browser-esbuild] in live reload mode background images included in saas styles not displaying upon code change","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n[browser-esbuild] in live reload mode background images included in saas styles not displaying upon live reload.\r\nupon start of live server background images are displayed on the web page. however upon next server live reload due to project code change the background images no longer loaded. in the logs showing 404 error\r\n\r\n### Minimal Reproduction\r\n\r\nplace  background image in saas file (scss) :\r\n\r\n.some-element{\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n\r\n   background-image: url(\"src/assets/images/some-image.png\");\r\n  \r\n  }\r\n  \r\n  start live  dev server\r\n  `\r\n   ng serve\r\n  `\r\n  upon start the background image is displayed. however if you make any change in the project code . for example edit html in component / ts file etc . the background image no longer loaded upon live reload. the behavior not consistent. some times  the  background image gets loaded. then upon live reload the image disappearing again. \r\n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nhttps://github.com/angular/angular-cli/issues/25943","Url":"https://github.com/angular/angular-cli/issues/26093","RelatedDescription":"Open issue \"[browser-esbuild] in live reload mode background images included in saas styles not displaying upon code change\" (#26093)"},{"Id":"1956008033","IsPullRequest":false,"CreatedAt":"2023-10-22T19:36:22","Actor":"JeanMeche","Number":"26092","RawContent":null,"Title":"Sub-optimal optimizations with ESBuild","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n\r\n### Description\r\n\r\nI've written a demo App which is mostly this: \r\n\r\n```\r\nexport class AppComponent {\r\n  constructor() {\r\n    isDevMode() ? console.log('devMode') : console.log('prodMode');\r\n  }\r\n}\r\n```\r\n\r\nWith Webpack, the first `console.log` is stripped out by optimization on `build` but with esbuild it isn't. \r\n\r\nJust for the sake of testing, I did try to  set `optimization: false` and then using the online REPL pass it through esbuild (just setting  `define: { ngDevMode: 'false'})`& terser : the 1st `console.log` is correctly removed. \r\n\r\nAre we missing some optimization here ? Or is that usecase far too simple to be relevant ? \r\n\r\n### Minimal Reproduction\r\n\r\nhttps://github.com/jeanmeche/my-lib/tree/optim \r\n\r\n* `ng build demo`\r\n* check the main.js in `dist`\r\n* check the `console.log`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: darwin x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nng-packagr                      17.0.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26092","RelatedDescription":"Closed issue \"Sub-optimal optimizations with ESBuild\" (#26092)"},{"Id":"1955914293","IsPullRequest":false,"CreatedAt":"2023-10-22T15:01:08","Actor":"jasonrichdarmawan","Number":"26091","RawContent":null,"Title":"fileReplacements for @angular-devkit/build-angular:ng-packagr","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nMy goal is to compile Angular application as a library.\r\n\r\nThe problem is `app1-lib` do not have `fileReplacements`, so when `app1-lib` is compiled. It always use `environment.ts` instead of `environment.prod.ts`.\r\n\r\nIs there a way to replace file in angular library?\r\n\r\nangular.json\r\n```\r\n    \"app1\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {\r\n        \"@schematics/angular:component\": {\r\n          \"style\": \"scss\"\r\n        },\r\n        \"@schematics/angular:application\": {\r\n          \"strict\": true\r\n        }\r\n      },\r\n      \"root\": \"projects/app1\",\r\n      \"sourceRoot\": \"projects/app1/src\",\r\n      \"prefix\": \"app\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/app1\",\r\n            \"index\": \"projects/app1/src/index.html\",\r\n            \"main\": \"projects/app1/src/main.ts\",\r\n            \"polyfills\": \"projects/app1/src/polyfills.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.app.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"projects/app1/src/favicon.ico\",\r\n              \"projects/app1/src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"projects/app1/src/styles.scss\"\r\n            ],\r\n            \"scripts\": []\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"500kb\",\r\n                  \"maximumError\": \"1mb\"\r\n                },\r\n                {\r\n                  \"type\": \"anyComponentStyle\",\r\n                  \"maximumWarning\": \"2kb\",\r\n                  \"maximumError\": \"4kb\"\r\n                }\r\n              ],\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"projects/app1/src/environments/environment.ts\",\r\n                  \"with\": \"projects/app1/src/environments/environment.prod.ts\"\r\n                }\r\n              ],\r\n              \"outputHashing\": \"all\"\r\n            },\r\n            \"development\": {\r\n              \"buildOptimizer\": false,\r\n              \"optimization\": false,\r\n              \"vendorChunk\": true,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true,\r\n              \"namedChunks\": true\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"browserTarget\": \"app1:build:production\"\r\n            },\r\n            \"development\": {\r\n              \"browserTarget\": \"app1:build:development\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"development\"\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"browserTarget\": \"app1:build\"\r\n          }\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"main\": \"projects/app1/src/test.ts\",\r\n            \"polyfills\": \"projects/app1/src/polyfills.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.spec.json\",\r\n            \"karmaConfig\": \"projects/app1/karma.conf.js\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"projects/app1/src/favicon.ico\",\r\n              \"projects/app1/src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"projects/app1/src/styles.scss\"\r\n            ],\r\n            \"scripts\": []\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"app1-lib\": {\r\n      \"projectType\": \"library\",\r\n      \"root\": \"projects/app1\",\r\n      \"sourceRoot\": \"projects/app1/src\",\r\n      \"prefix\": \"lib\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:ng-packagr\",\r\n          \"options\": {\r\n            \"project\": \"projects/app1/ng-package.json\"\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"tsConfig\": \"projects/app1/tsconfig.app.json\"\r\n            },\r\n            \"development\": {\r\n              \"tsConfig\": \"projects/app1/tsconfig.app.json\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"main\": \"projects/app1/src/test.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.spec.json\",\r\n            \"karmaConfig\": \"projects/app1/karma.conf.js\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n```\n\n### Describe the solution you'd like\n\nI would like to have the `fileReplacements` key just like when I use `@angular-devkit/build-angular:browser`.\n\n### Describe alternatives you've considered\n\nEvery app will import `environment.prod.ts` instead of `environment.ts`. So when `npx ng build:ssr`, the environment used is the production environment. But this is not a solution since now I do not have access to the development `environment.ts`.","Url":"https://github.com/angular/angular-cli/issues/26091","RelatedDescription":"Closed issue \"fileReplacements for @angular-devkit/build-angular:ng-packagr\" (#26091)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1960080409","IsPullRequest":false,"CreatedAt":"2023-10-24T21:10:01","Actor":"zarend","Number":"27993","RawContent":null,"Title":"bug(material/select): when linear navigating to combobox element with voiceover, screen reader focus is lost when opening popup menu","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis issue is about when navigating to the select element a specific way, screen reader focus is lost when opening the popup menu. When linear navigating to the combobox element with VoiceOver, opening the popup causes screen reader focus to stay on the trigger\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1.  with VoiceOver enabled, open https://material.angular.io/components/select/overview\r\n2. Navigate to \"Basic Select\" demo\r\n3. Tab to \"Favorite Food\"\r\n4. (AT announces that it's the favorite food popup combobox)\r\n5. CTRL + OPTION + SPACE + RIGHT\r\n6. CTRL + OPTION + SPACE + LEFT\r\n7. (AT gives same or very similar announcement to step 4)\r\n8. \"Click\" or press space or CTRL + OPTION + SPACE to open menu\r\n\r\n\r\nIf unable to reproduce, try navigating using different methods with voiceover. Try navigating from before the popup to the popup and also try navigating pass the popup then back to it.\n\n### Expected Behavior\n\nPopup menu opens and focus is on the popup menu\n\n### Actual Behavior\n\nPopup menu visual opens but screen reader focus stays on the trigger. No communication made to screen reader.\r\n\r\nThis is confusing for Voice Over users. Expecting information to be communicated with two or more senses. Expecting focus to be handled correctly.\n\n### Environment\n\nN/A","Url":"https://github.com/angular/components/issues/27993","RelatedDescription":"Open issue \"bug(material/select): when linear navigating to combobox element with voiceover, screen reader focus is lost when opening popup menu\" (#27993)"},{"Id":"1959908834","IsPullRequest":true,"CreatedAt":"2023-10-24T19:10:24","Actor":"mmalerba","Number":"27992","RawContent":null,"Title":"docs(material/theming): Add docs for the new base theming dimension","State":"open","Body":"Demo: https://mmalerba-demo.web.app/guide/theming","Url":"https://github.com/angular/components/pull/27992","RelatedDescription":"Open PR \"docs(material/theming): Add docs for the new base theming dimension\" (#27992)"},{"Id":"1959686349","IsPullRequest":true,"CreatedAt":"2023-10-24T17:40:52","Actor":"josephperrott","Number":"27991","RawContent":null,"Title":"ci: provide environment variables to the right step","State":"closed","Body":"Include the env variables for the step for deploying docs","Url":"https://github.com/angular/components/pull/27991","RelatedDescription":"Closed or merged PR \"ci: provide environment variables to the right step\" (#27991)"},{"Id":"1959637536","IsPullRequest":false,"CreatedAt":"2023-10-24T16:48:21","Actor":"Mradmedamine","Number":"27989","RawContent":null,"Title":"bug(MatFormField): layout glitch on long mat-label","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nThe mat label text is not shown correctly. it exceeds the limit of the field.\r\n![image](https://github.com/angular/components/assets/12666919/9afb9e5d-5565-4a91-a033-22fd56811052)\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Set a long mat label text\r\n2.\r\n\n\n### Expected Behavior\n\nform field label is shown correctly and ellipsis is shown if text is too long. no interference with mat-icon suffix or date-picker toggle.\n\n### Actual Behavior\n\nText reachs the field end\n\n### Environment\n\n- Angular: 16.2.10\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27989","RelatedDescription":"Closed issue \"bug(MatFormField): layout glitch on long mat-label\" (#27989)"},{"Id":"1959647024","IsPullRequest":true,"CreatedAt":"2023-10-24T16:48:09","Actor":"crisbeto","Number":"27990","RawContent":null,"Title":"refactor(material/button): handle disabled state of icon buttons through tokens","State":"closed","Body":"* Fixes that icon buttons weren't using the right token for disabled state.\r\n* Fixes that the specificity of the icon button disabled styles was really high.\r\n* Moves the logic for generating the palette tokens into the icon button tokens file.\r\n* Fixes one place where we were referencing a token directly instead of using the API to generate the name.","Url":"https://github.com/angular/components/pull/27990","RelatedDescription":"Closed or merged PR \"refactor(material/button): handle disabled state of icon buttons through tokens\" (#27990)"},{"Id":"1958880154","IsPullRequest":true,"CreatedAt":"2023-10-24T16:26:51","Actor":"crisbeto","Number":"27988","RawContent":null,"Title":"refactor(material/button): handle disabled state of icon buttons through tokens","State":"closed","Body":"* Fixes that icon buttons weren't using the right token for disabled state.\r\n* Fixes that the specificity of the icon button disabled styles was really high.\r\n* Moves the logic for generating the palette tokens into the icon button tokens file.\r\n* Fixes one place where we were referencing a token directly instead of using the API to generate the name.","Url":"https://github.com/angular/components/pull/27988","RelatedDescription":"Closed or merged PR \"refactor(material/button): handle disabled state of icon buttons through tokens\" (#27988)"},{"Id":"1958539697","IsPullRequest":true,"CreatedAt":"2023-10-24T15:38:18","Actor":"crisbeto","Number":"27987","RawContent":null,"Title":"perf(multiple): switch to built-in control flow","State":"closed","Body":"Reworks the component internals to use the new built-in control flow instead of `ngIf`, `ngSwitch` and `ngFor`. This has the advantage of not requiring directives to be imported and instantiated.","Url":"https://github.com/angular/components/pull/27987","RelatedDescription":"Closed or merged PR \"perf(multiple): switch to built-in control flow\" (#27987)"},{"Id":"1956010147","IsPullRequest":false,"CreatedAt":"2023-10-24T12:24:54","Actor":"GeorgeKnap","Number":"27978","RawContent":null,"Title":"bug(mat-chip-listbox): vertical orientation not working","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`<mat-chip-listbox aria-orientation=\"vertical\">`\r\n![image](https://github.com/angular/components/assets/11920691/47b0397b-ddd7-43f0-80dc-ca0952666ad9)\r\nthis input seems to be broken as it stays horizontal...\r\n![image](https://github.com/angular/components/assets/11920691/7c3bdbd2-a6fd-49f2-a043-ac3ac087503e)\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://stackblitz.com/edit/kup7ap?file=src%2Fexample%2Fchips-avatar-example.html](https://stackblitz.com/edit/kup7ap?file=src%2Fexample%2Fchips-avatar-example.html)\r\n\r\n\r\n### Expected Behavior\r\n\r\nvertical layout\r\n\r\n### Actual Behavior\r\n\r\nhorizontal layout\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27978","RelatedDescription":"Closed issue \"bug(mat-chip-listbox): vertical orientation not working\" (#27978)"},{"Id":"1958329550","IsPullRequest":true,"CreatedAt":"2023-10-24T02:01:31","Actor":"wagnermaciel","Number":"27986","RawContent":null,"Title":"refactor(material/button): switch outlined-button to density tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27986","RelatedDescription":"Open PR \"refactor(material/button): switch outlined-button to density tokens\" (#27986)"},{"Id":"1958310246","IsPullRequest":true,"CreatedAt":"2023-10-24T01:42:04","Actor":"zarend","Number":"27985","RawContent":null,"Title":"fix(cdk/tree): first attempt at injecting tree key manager","State":"open","Body":"This commit message will be squashed away.","Url":"https://github.com/angular/components/pull/27985","RelatedDescription":"Open PR \"fix(cdk/tree): first attempt at injecting tree key manager\" (#27985)"},{"Id":"1954187406","IsPullRequest":true,"CreatedAt":"2023-10-23T17:10:49","Actor":"andrewseguin","Number":"27970","RawContent":null,"Title":"fix(material/checkbox): add aria-checked","State":"closed","Body":"Adding aria-checked to the checkbox input. Technically this is redundant but Material Web's new styling requires indeterminate mode to have aria-checked=mixed when enabled.","Url":"https://github.com/angular/components/pull/27970","RelatedDescription":"Closed or merged PR \"fix(material/checkbox): add aria-checked\" (#27970)"},{"Id":"1957181097","IsPullRequest":true,"CreatedAt":"2023-10-23T13:32:13","Actor":"amysorto","Number":"27984","RawContent":null,"Title":"fix(material/button): Emit icon button tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27984","RelatedDescription":"Open PR \"fix(material/button): Emit icon button tokens under mixin root selector\" (#27984)"},{"Id":"1956631972","IsPullRequest":true,"CreatedAt":"2023-10-23T11:36:21","Actor":"crisbeto","Number":"27980","RawContent":null,"Title":"refactor(material/tree): switch to tokens theming API","State":"closed","Body":"Reworks the tree to use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27980","RelatedDescription":"Closed or merged PR \"refactor(material/tree): switch to tokens theming API\" (#27980)"},{"Id":"1956929793","IsPullRequest":false,"CreatedAt":"2023-10-23T11:17:28","Actor":"dana-c0914","Number":"27983","RawContent":null,"Title":"bug(Datepicker): setting value inside valueChanges doesn't update the UI","State":"open","Body":"### Is this a regression?\r\n\r\nI don't know if this was working at some point or not\r\n\r\n### Description\r\n\r\nI am using reactive forms to get/set values from a datepicker and I noticed that if I set a date manually, inside the valueChanges event based on some condition, the value of the form control updates, but not the UI.\r\n\r\nThe UI changes however if you remove the input and manually set a value inside valueChanges.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/qpu5ns\r\nSteps to reproduce (1):\r\n(1*. Select any date - optional)\r\n1. Select the 10th of any month\r\n2. Check date displayed in input vs date printed under the input\r\n\r\n\r\n### Expected Behavior\r\n\r\nWe have the same date in the input as printed below the input\r\n\r\n### Actual Behavior\r\n\r\nThe date in the input is the date selected using the datepicker, the date below the input is the date set inside valueChanges\r\n\r\n### Environment\r\n\r\nBrowser: Chrome\r\n(From the stackblitz environment)\r\nAngular CLI: 16.1.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\n| Package | Version |\r\n|--------|--------|\r\n| @angular-devkit/architect | 0.1601.0 |\r\n| @angular-devkit/build-angular | 16.1.0 |\r\n| @angular-devkit/core | 16.1.0 |\r\n| @angular-devkit/schematics | 16.1.0 |\r\n| @angular/cdk | 16.2.9 |\r\n| @angular/cli | 16.1.0 | \r\n| @angular/material | 16.2.9 |\r\n| @angular/material-moment-adapter | 16.2.9 |\r\n| @schematics/angular | 16.1.0 | \r\n| rxjs | 7.4.0 | \r\n| typescript | 5.0.3 | ","Url":"https://github.com/angular/components/issues/27983","RelatedDescription":"Open issue \"bug(Datepicker): setting value inside valueChanges doesn't update the UI\" (#27983)"},{"Id":"1956657433","IsPullRequest":false,"CreatedAt":"2023-10-23T08:44:19","Actor":"Mradmedamine","Number":"27982","RawContent":null,"Title":"bug(MatFormField): layout glitch on long mat-error text","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWhen having a long error text on a mat-form-field the text overlaps with any thing under the field.\r\n\r\n![image](https://github.com/angular/components/assets/12666919/bdb6b3d7-4c38-4d69-8a66-85e40cbd42f1)\r\n\r\nNOTE: This happens on outlined mat-form-field. For filled mat-form-field the text is cut and not fully shown. As picture below :\r\n\r\n![image](https://github.com/angular/components/assets/12666919/f63046da-b399-4308-9053-819bbf299467)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://stackblitz.com/run?file=src%2Fapp%2Fform-field-error-example.ts](https://stackblitz.com/run?file=src%2Fapp%2Fform-field-error-example.ts)\r\nSteps to reproduce:\r\n1.  Put a long error text.\r\n2. Put another input field under\r\n\r\n\r\n### Expected Behavior\r\n\r\nthe error should be shown properly and not overlaps with the element on the bottom.\r\n\r\n\r\n\r\n### Actual Behavior\r\n\r\nThe error text is is being hidden by text under the mat-form-field.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.10\r\n- CDK/Material: 16.2.9\r\n- Browser(s):  Chrome Version 118.0.5993.88\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27982","RelatedDescription":"Open issue \"bug(MatFormField): layout glitch on long mat-error text\" (#27982)"},{"Id":"1956640072","IsPullRequest":true,"CreatedAt":"2023-10-23T08:35:12","Actor":"Almost-Infinity","Number":"27981","RawContent":null,"Title":"fix(cdk/accordion): add `CDK_ACCORDION` export","State":"open","Body":"Fixes an issue in the Angular CDK `accordion` component where `CDK_ACCORDION` injection token cannot be imported from `@angular/cdk/accordion`. This is because `public-api.ts` did not contain `CDK_ACCORDION` export.","Url":"https://github.com/angular/components/pull/27981","RelatedDescription":"Open PR \"fix(cdk/accordion): add `CDK_ACCORDION` export\" (#27981)"},{"Id":"1956573937","IsPullRequest":true,"CreatedAt":"2023-10-23T08:28:40","Actor":"Almost-Infinity","Number":"27979","RawContent":null,"Title":"fix(cdk/accordion): add `CDK_ACCORDION` export","State":"closed","Body":"Fixes an issue in the Angular CDK `accordion` component where `CDK_ACCORDION` injection token cannot be imported from `@angular/cdk/accordion`. This is because `public-api.ts` did not contain `CDK_ACCORDION` export.","Url":"https://github.com/angular/components/pull/27979","RelatedDescription":"Closed or merged PR \"fix(cdk/accordion): add `CDK_ACCORDION` export\" (#27979)"},{"Id":"1955815942","IsPullRequest":true,"CreatedAt":"2023-10-22T20:50:49","Actor":"crisbeto","Number":"27977","RawContent":null,"Title":"build: update to Angular v17 RC","State":"closed","Body":"Updates us to the release candidate of Angular v17.","Url":"https://github.com/angular/components/pull/27977","RelatedDescription":"Closed or merged PR \"build: update to Angular v17 RC\" (#27977)"},{"Id":"1955334088","IsPullRequest":true,"CreatedAt":"2023-10-21T05:35:03","Actor":"DaxChen","Number":"27976","RawContent":null,"Title":"fix(material/button): Use `raised-button` theme color instead of `card` for raised-button","State":"open","Body":"We use map-merge to customize the theme config ([based on this comment](https://github.com/angular/components/issues/6244#issuecomment-1017629612)) but during MDC migration the default (un-themed) color changes for raised buttons because `_button-theme.scss` is reading the `card` field in the theme color map instead of the old `raised-button` field.","Url":"https://github.com/angular/components/pull/27976","RelatedDescription":"Open PR \"fix(material/button): Use `raised-button` theme color instead of `card` for raised-button\" (#27976)"},{"Id":"1953816471","IsPullRequest":false,"CreatedAt":"2023-10-20T22:14:48","Actor":"TomTomB","Number":"27968","RawContent":null,"Title":"bug(cdk-dialog): Unable to inject providers provided via route config into dialog","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nInjecting providers into a dialog that are provided via route config currently always results in a R3InjectorError. Adding the view container ref or injector of the current component to the dialog's config does not fix this problem.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-x5794s?file=src%2Fmain.ts\n\n### Expected Behavior\n\nInjecting providers provided via route config should work.\n\n### Actual Behavior\n\nInjecting providers provided via route config always results in a R3InjectorError\n\n### Environment\n\n- Angular: 16.2.10\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows \r\n","Url":"https://github.com/angular/components/issues/27968","RelatedDescription":"Closed issue \"bug(cdk-dialog): Unable to inject providers provided via route config into dialog\" (#27968)"},{"Id":"1954516263","IsPullRequest":false,"CreatedAt":"2023-10-20T22:08:04","Actor":"Mradmedamine","Number":"27972","RawContent":null,"Title":"bug(MatFormField): layout glitch on long hint text","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen having a long hint text on a mat-form-field  the text overlaps with any text under the field.\r\n\r\n![image](https://github.com/angular/components/assets/12666919/ffc5f4d2-b97f-41f2-a1d4-e6df881e7794)\r\n\r\n\r\nhttps://stackblitz.com/run?file=src%2Fexample%2Fform-field-appearance-example.html\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1.  Put a a long hint text of 3 sentences at least\r\n2.  See the changes on the UI.\r\n\n\n### Expected Behavior\n\nthe hint text should be shown properly and not overlaps with the element on the bottom.\n\n### Actual Behavior\n\nThe hint text is is being hidden by text under the mat-form-field.\n\n### Environment\n\n- Angular: 16.2.10\r\n- CDK/Material:16.2.9\r\n- Browser(s): Chrome Version 118.0.5993.88\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27972","RelatedDescription":"Closed issue \"bug(MatFormField): layout glitch on long hint text\" (#27972)"},{"Id":"1954840565","IsPullRequest":false,"CreatedAt":"2023-10-20T22:01:46","Actor":"andrewalderson","Number":"27974","RawContent":null,"Title":"feat(MatToolbar): media query for size change should include orientation","State":"closed","Body":"### Feature Description\r\n\r\nThe following is presented for your condieration.\r\n\r\nCurrently the media query for the MatToolbar that changes its height for mobile is:\r\n```\r\n@media (max-width: 599px)\r\n\t.mat-toolbar-row, .mat-toolbar-single-row {\r\n\t\theight: var(--mat-toolbar-mobile-height);\r\n\t}\r\n}\r\n```\r\n\r\nWhy doesn't it take orientation and media type into consideration?\r\n\r\nShouldn't the media query be something like (haven't actually thought this through but you get the drift):\r\n```\r\n@media only screen and (max-width: 599px) and (orientation: portrait),\r\n  only screen and (max-height: 599px) and (orientation: landscape) {\r\n\t.mat-toolbar-row, .mat-toolbar-single-row {\r\n\t\theight: var(--mat-toolbar-mobile-height);\r\n\t}\r\n}\r\n```\r\n\r\n\r\nI will get into the whole think with the css variables in another issue :)\r\n","Url":"https://github.com/angular/components/issues/27974","RelatedDescription":"Closed issue \"feat(MatToolbar): media query for size change should include orientation\" (#27974)"},{"Id":"1952554882","IsPullRequest":true,"CreatedAt":"2023-10-20T20:35:04","Actor":"mmalerba","Number":"27964","RawContent":null,"Title":"fix(material/schematics): Create a schematic to add the base theme dimension","State":"closed","Body":"As of v17, users need to include the new \"base\" theme dimension for the components they use. For users that are using the \"theme\" mixins now, the base dimension will be pulled in automatically. However, for users using the \"color\", \"typography\", and \"density\" mixins only, they will need to include the \"base\" mixin as well.\r\n\r\nThis schematic works by scanning all of the app's Sass to determine which components had their \"color\", \"typography\", or \"density\" mixins included, but did *not* have their \"theme\" mixin included. It then locates all of the calls to \"mat.core()\" and inserts calls to the \"base\" mixins for the identified compoennts, immediately following. It makes sense to use \"mat.core()\" as a signal for when to insert them, because the \"base\" mixins should be used once-per-app, like \"mat.core()\". We can't guarantee that a \"$theme\" will be available at the insertion point, so we create a \"$dummy-theme\" to pass to the base mixins.\r\n\r\nWe also insert a comment above the new mixins explaining why they were added and a TODO to clean up the \"$dummy-theme\". Once we have the documentation updated to cover the base dimension, we should follow-up by linking to it from the inserted comment.","Url":"https://github.com/angular/components/pull/27964","RelatedDescription":"Closed or merged PR \"fix(material/schematics): Create a schematic to add the base theme dimension\" (#27964)"},{"Id":"1954894254","IsPullRequest":false,"CreatedAt":"2023-10-20T19:16:54","Actor":"andrewalderson","Number":"27975","RawContent":null,"Title":"feat(MatToolbar): css variables for the actual height of the toolbar should be exposed","State":"open","Body":"### Feature Description\r\n\r\nThe following is presented for your consideration and it related to #27974\r\n\r\nI don't think the whole idea of changing the height of the MatToolbar on mobile and its implications has been totally thought through. In the past there was no really good way to change the styles in my application to accommodate this without knowing the media query that is used. I will present as an example your own code. This is the code from the last example on this [page ](https://material.angular.io/components/sidenav/examples)\r\n\r\nHtml\r\n```\r\n<div class=\"example-container\" [class.example-is-mobile]=\"mobileQuery.matches\" *ngIf=\"shouldRun\">\r\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\r\n    <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\r\n    <h1 class=\"example-app-name\">Responsive App</h1>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav-container class=\"example-sidenav-container\"\r\n                         [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\r\n    <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\r\n                 [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\r\n      <mat-nav-list>\r\n        <a mat-list-item routerLink=\".\" *ngFor=\"let nav of fillerNav\">{{nav}}</a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p *ngFor=\"let content of fillerContent\">{{content}}</p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n```\r\nAnd css\r\n```\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-is-mobile .example-toolbar {\r\n  position: fixed;\r\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\r\n  z-index: 2;\r\n}\r\n\r\nh1.example-app-name {\r\n  margin-left: 8px;\r\n}\r\n\r\n.example-sidenav-container {\r\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\r\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\r\n  flex: 1;\r\n}\r\n\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n}\r\n```\r\n\r\nThe problem with this code is that on mobile the content in the sidenav container will be under the toolbar so a ``padding-top`` or a ```margin-top``` needs to be added. This forces me to know the breakpoint that the height of the toolbar changes and which variable to use.\r\n\r\nWhy can't you just expose one variable that tells me the height of the toolbar regardless of the screen size, something like ```--mat-toolbar-height```? At the end of the day, as a developer that is all I care about. Regardless of what my determination of a 'mobile' screen is I should just have to add something like this:\r\n```\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n margin-top: var(--mat-toolbar-height);\r\n}\r\n```\r\ninstead of having to do something like this (this may be wrong but you get the point):\r\n```\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n margin-top: var(--mat-toolbar-standard-height);\r\n}\r\n@media {what ever the toolbar media query is} {\r\n  .example-is-mobile .example-sidenav-container {\r\n   margin-top: var(--mat-toolbar-mobile-height);\r\n  }\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/27975","RelatedDescription":"Open issue \"feat(MatToolbar): css variables for the actual height of the toolbar should be exposed\" (#27975)"},{"Id":"1954656824","IsPullRequest":true,"CreatedAt":"2023-10-20T16:31:53","Actor":"devknoll","Number":"27973","RawContent":null,"Title":"refactor(multiple): use Renderer2 for theming instead of direct DOM manipulation","State":"open","Body":"Instead of directly manipulating the DOM via ElementRef (which requires DOM emulation), this change makes it use the Renderer2 interface instead.","Url":"https://github.com/angular/components/pull/27973","RelatedDescription":"Open PR \"refactor(multiple): use Renderer2 for theming instead of direct DOM manipulation\" (#27973)"},{"Id":"1954307972","IsPullRequest":false,"CreatedAt":"2023-10-20T13:34:48","Actor":"Nikami","Number":"27971","RawContent":null,"Title":"bug(MatChipList): chip list disabled should respect each chip item disabled state","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nChiplist [disabled] toggling from disable to enable doesn't respect each chip item [disabled] state. Chip items, which are actually disabled become visually enabled.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vdefsz?file=src%2Fexample%2Fchips-input-example.html,src%2Fexample%2Fchips-input-example.ts\r\n\r\n\r\nSteps to reproduce:\r\n1. The chip item is disabled and has properly disabled styles in initialization\r\n![2023-10-20_15h12_54](https://github.com/angular/components/assets/12629525/a8ca53f3-a9ee-44a7-8e4b-f8f20f74b469)\r\n2. Click 'Disable chiplist'\r\n3. Click 'Enable chiplist'\r\n\n\n### Expected Behavior\n\nThe chip item is visually disabled \n\n### Actual Behavior\n\nThe chip item ignores its disabled state and looks like enabled\n\n### Environment\n\n- Angular: 16.2.9\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Google Chrome, Version 118.0.5993.88 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27971","RelatedDescription":"Open issue \"bug(MatChipList): chip list disabled should respect each chip item disabled state\" (#27971)"},{"Id":"1954170764","IsPullRequest":true,"CreatedAt":"2023-10-20T12:21:06","Actor":"andrewseguin","Number":"27969","RawContent":null,"Title":"fix(material/checkbox): add aria-checked","State":"closed","Body":"Adding `aria-checked` to the checkbox input. Technically this is redundant but Material Web's new styling requires indeterminate mode to have `aria-checked=mixed` when enabled.","Url":"https://github.com/angular/components/pull/27969","RelatedDescription":"Closed or merged PR \"fix(material/checkbox): add aria-checked\" (#27969)"},{"Id":"1953566735","IsPullRequest":false,"CreatedAt":"2023-10-20T05:37:02","Actor":"cusher","Number":"27967","RawContent":null,"Title":"bug(MatFormField): getConnectedOverlayOrigin includes form field hint area","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14 (works w/ Legacy)\n\n### Description\n\nWhen migrating to the MDC-based components, the `getConnectedOverlayOrigin()` method on `MatFormField` now seems to point to the bottom of entire form field div (i.e. including the hint area) rather than the bottom edge of the input box. This makes it difficult to attach overlays to the bottom of custom form fields in a clean non-hacky way.\r\n\r\nBasic example that demonstrates the problem:\r\n\r\n1. Create a basic component that implements `MatFormFieldControl` (just directly copying the example [from the guide here](https://material.angular.io/guide/creating-a-custom-form-field-control) works for this).\r\n2. Add a simple `mat-autocomplete` and wire it up to the input on the component.\r\n3. Add a `MatAutocompleteOrigin` field to the component which points to the `MatFormField`'s `getConnectedOverlayOrigin()` (also may need to update this on ngOnInit to be safe).\r\n4. Set the `matAutocompleteConnectedTo` in the template to the `MatAutocompleteOrigin` field.\r\n\r\nPreviously this would make the autocomplete overlay open lined up below the bottom edge of the form field, now there is an unsightly gap.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/6vnpqz\r\n\r\nSteps to reproduce:\r\n1. Click the form field\n\n### Expected Behavior\n\nAttached overlay should appear directly below the form field's underline\n\n### Actual Behavior\n\nAttached overlay appears below the form field's hint area\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Ubuntu","Url":"https://github.com/angular/components/issues/27967","RelatedDescription":"Open issue \"bug(MatFormField): getConnectedOverlayOrigin includes form field hint area\" (#27967)"},{"Id":"1952745059","IsPullRequest":true,"CreatedAt":"2023-10-19T21:41:43","Actor":"srikumar03","Number":"27965","RawContent":null,"Title":"Do not consoder it index.html","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27965","RelatedDescription":"Closed or merged PR \"Do not consoder it index.html\" (#27965)"},{"Id":"1952926628","IsPullRequest":true,"CreatedAt":"2023-10-19T19:38:10","Actor":"josephperrott","Number":"27966","RawContent":null,"Title":"ci: fix environment variables","State":"closed","Body":"Provide environment variables for deploying docs site","Url":"https://github.com/angular/components/pull/27966","RelatedDescription":"Closed or merged PR \"ci: fix environment variables\" (#27966)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-25T03:30:02.5125254Z","RunDurationInMilliseconds":1634}