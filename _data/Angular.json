{"Data":{"Angular-Issues":{"Issues":[{"Id":"2754445727","IsPullRequest":false,"CreatedAt":"2024-12-22T02:11:00","Actor":"daiscog","Number":"59279","RawContent":null,"Title":"Typing of request property of ResourceLoaderParams will incorrectly include undefined when a request function is given","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using the `resource` function with a `request` function given in the `ResourceOptions`, the returned `Resource` will be in the Idle state if the given `request` function returns `undefined` and will not call the given `loader` function.\n\nTherefore, the `request` property of the `ResourceLoaderParams` object passed to the `loader` function will **never** be `undefined` in cases where a `request` function is provided.\n\n**Expected behaviour**\n\nWhen providing a `request` function in the `ResourceOptions` param when calling the `resource` function, the engineer should not have to handle the possibility of an `undefined` value for the `request` property of the `ResourceLoaderParams` object passed to the `loader` function.\n\n**Actual behaviour** \n\nThe `request` property of the `ResourceLoaderParams` object passed to the `loader` function is typed as being possibly `undefined`.\n\n**Reproduction**\n\n```ts\nimport {Component, resource, signal} from '@angular/core';\nimport {JsonPipe} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  imports: [JsonPipe],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  readonly someSignal = signal<number | undefined>(undefined);\n\n  readonly something = resource({\n    request: (): {requiredVal: number} | undefined => {\n      const requiredVal = this.someSignal();\n      return requiredVal ? { requiredVal } : undefined;\n    },\n    loader: ({request}) => \n      Promise.resolve(request.requiredVal  * 2)\n//                    ^ Error: request is possibly undefined\n//                       However, it never is\n  })\n}\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59279","RelatedDescription":"Open issue \"Typing of request property of ResourceLoaderParams will incorrectly include undefined when a request function is given\" (#59279)"},{"Id":"2754280336","IsPullRequest":false,"CreatedAt":"2024-12-21T17:32:59","Actor":"hmoazzem","Number":"59278","RawContent":null,"Title":"grpc-web works in dev mode and localhost only; fails when dev server (or built dist) accessed using addresses other than localhost","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nUsing `grpc-web`, I'm accessing from Angular a gRPC server running behind Envoy gRPC gateway. Though there are a couple of higher level libraries for the web, I want to stick to the rather proven stack using Envoy (which we're using in other apps anyway).\n\nI've started with https://github.com/grpc/grpc-web/tree/master/net/grpc/gateway/examples/helloworld example client. I then load into app the built client via `angular.json`\n\n```json\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            \"scripts\": [\n              \"public/grpc-web-client.js\"\n            ],\n          },\n```\nThe gRCP client connects to the server and sends the gRPC data stream using  `postMessage`  for a Service Worker to consume. The Service Worker is registered in Angular `main.ts` like\n\n```ts\n if ('serviceWorker' in navigator) {\n  navigator.serviceWorker\n    .register('/grpc-service-worker.js')\n    .then((registration) => {\n      console.log('Service Worker registered:', registration);\n      navigator.serviceWorker.ready.then((sw) => {\n        sw.active?.postMessage({ type: 'INIT', ready: true }); // Initial message to the service worker\n      });\n    })\n    .catch((error) => console.error('Service Worker registration failed:', error));\n}\n```\n\nAnd here's generated, untouched `ngsw-config.json` just in case it's useful\n\n```json\n{\n  \"$schema\": \"./node_modules/@angular/service-worker/config/schema.json\",\n  \"index\": \"/index.html\",\n  \"assetGroups\": [\n    {\n      \"name\": \"app\",\n      \"installMode\": \"prefetch\",\n      \"resources\": {\n        \"files\": [\n          \"/favicon.ico\",\n          \"/index.csr.html\",\n          \"/index.html\",\n          \"/manifest.webmanifest\",\n          \"/*.css\",\n          \"/*.js\"\n        ]\n      }\n    },\n    {\n      \"name\": \"assets\",\n      \"installMode\": \"lazy\",\n      \"updateMode\": \"prefetch\",\n      \"resources\": {\n        \"files\": [\n          \"/**/*.(svg|cur|jpg|jpeg|png|apng|webp|avif|gif|otf|ttf|woff|woff2)\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/hmoazzem/guardian/tree/main/gui\n\n### Please provide the exception or error you saw\n\n```true\nI'm displaying the received data stream using `ngx-echarts`. Everything works fine with `ng serve`, and when accessed `localhost:4200` only; doesn't work when accessed 127.0.0.1, LAN IP even with `ng serve --host 0.0.0.0`. Built UI doesn't render charts even on `localhost`.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.5\nNode: v22.12.0\nPackage Manager: npm\nOS: Linux x64\n\npackage.json\n\n\n{\n  \"name\": \"gui\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.0\",\n    \"@angular/cdk\": \"^19.0.3\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/material\": \"^19.0.3\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"@angular/service-worker\": \"^19.0.0\",\n    \"@electric-sql/pglite\": \"^0.2.15\",\n    \"ace-builds\": \"^1.37.0\",\n    \"echarts\": \"^5.5.1\",\n    \"grpc-web\": \"^1.5.0\",\n    \"ngx-echarts\": \"^19.0.0\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.5\",\n    \"@angular/cli\": \"^19.0.5\",\n    \"@angular/compiler-cli\": \"^19.0.0\",\n    \"@grpc/grpc-js\": \"^1.12.4\",\n    \"@grpc/proto-loader\": \"^0.7.13\",\n    \"@types/google-protobuf\": \"^3.15.12\",\n    \"@types/jasmine\": \"~5.1.0\",\n    \"async\": \"^3.2.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"google-protobuf\": \"^3.21.4\",\n    \"jasmine-core\": \"~5.4.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"lodash\": \"^4.17.21\",\n    \"ng-packagr\": \"^19.0.0\",\n    \"postcss\": \"^8.4.49\",\n    \"protoc-gen-js\": \"^3.21.4\",\n    \"protoc-gen-ts\": \"^0.8.7\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"ts-loader\": \"^9.5.1\",\n    \"typescript\": \"~5.6.2\",\n    \"webpack\": \"^5.97.1\",\n    \"webpack-cli\": \"^5.1.4\"\n  }\n}\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59278","RelatedDescription":"Open issue \"grpc-web works in dev mode and localhost only; fails when dev server (or built dist) accessed using addresses other than localhost\" (#59278)"},{"Id":"2753636495","IsPullRequest":true,"CreatedAt":"2024-12-21T15:36:02","Actor":"josephperrott","Number":"59271","RawContent":null,"Title":"fix(platform-browser): avoid circular DI error in async renderer","State":"closed","Body":"Patch version of #59256","Url":"https://github.com/angular/angular/pull/59271","RelatedDescription":"Closed or merged PR \"fix(platform-browser): avoid circular DI error in async renderer\" (#59271)"},{"Id":"2754085507","IsPullRequest":true,"CreatedAt":"2024-12-21T14:26:24","Actor":"shairez","Number":"59277","RawContent":null,"Title":"docs: fix wrong link to `whenStable`","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nFixed wrong link\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59277","RelatedDescription":"Open PR \"docs: fix wrong link to `whenStable`\" (#59277)"},{"Id":"2754070109","IsPullRequest":true,"CreatedAt":"2024-12-21T14:10:15","Actor":"crisbeto","Number":"59276","RawContent":null,"Title":"fix(compiler): handle :host-context with comma-separated child selector","State":"open","Body":"Both `:host` and `:host-context` work by looking for a specific character sequence that is terminated by `,` or `{` and replacing selectors inside of it with scoped versions. This is implemented as a regex which isn't aware of things like nested selectors. Normally this is fine for `:host`, because each `:host` produces one scoped selector which doesn't affect any child selectors, however it breaks down with `:host-context` which replaces each instance with two selectors. For example, if we have a selector in the form of `:host-context(.foo) a:not(.a, .b)`, the compiler ends up determining that `.a,` is the end selector and produces `.foo[a-host] a[contenta]:not(.a, .foo [a-host] a[contenta]:not(.a, .b) {}`.\r\n\r\nThese changes resolve the issue by splitting the CSS alogn top-level commas, processing the `:host-context` in them individually, and stiching the CSS back together.","Url":"https://github.com/angular/angular/pull/59276","RelatedDescription":"Open PR \"fix(compiler): handle :host-context with comma-separated child selector\" (#59276)"},{"Id":"2753687761","IsPullRequest":true,"CreatedAt":"2024-12-21T01:26:22","Actor":"AndrewKushnir","Number":"59275","RawContent":null,"Title":"refactor(platform-server): reduce timeout used in tests","State":"open","Body":"This commit updates the timeout used in the incremental hydration tests from `101` -> `10` ms, which allows to speed up tests by ~20% (12.5 -> 10 seconds locally).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59275","RelatedDescription":"Open PR \"refactor(platform-server): reduce timeout used in tests\" (#59275)"},{"Id":"2753681702","IsPullRequest":true,"CreatedAt":"2024-12-21T01:11:09","Actor":"AndrewKushnir","Number":"59274","RawContent":null,"Title":"refactor(core): store hydrate trigger info only on the server","State":"open","Body":"This commit updates the code related to hydrate triggers to collect extra info needed for SSR only on the server (currently we do it on the client as well).\r\n\r\nNote: an update to the spec file was moving things around to cleanup console logs/warnings, which were making tests unstable.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59274","RelatedDescription":"Open PR \"refactor(core): store hydrate trigger info only on the server\" (#59274)"},{"Id":"2753648831","IsPullRequest":true,"CreatedAt":"2024-12-21T00:03:12","Actor":"JeanMeche","Number":"59273","RawContent":null,"Title":"docs: remove data attributes from api-item-label","State":"open","Body":"Perf measurments have revealed that `data-*` attributes are slower to set than classes.\r\n\r\n#59264\r\n","Url":"https://github.com/angular/angular/pull/59273","RelatedDescription":"Open PR \"docs: remove data attributes from api-item-label\" (#59273)"},{"Id":"2753644022","IsPullRequest":false,"CreatedAt":"2024-12-20T23:54:12","Actor":"daiscog","Number":"59272","RawContent":null,"Title":"Calling resource.set(value) does not abort in-progress loaders if the given value is equal to the value before the resource was reloaded","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm not sure whether this is a bug or whether this is intended, but it feels unintuitive to me.  Therefore \"expected\" below is what _I_ would have expected.\n\n**Expected behaviour**\n\nCalling `resouce.set(value)` should always abort in-progress async loading\n\n**Actual behaviour**\n\nCalling `resouce.reload()` then calling `resouce.set(value)` _before_ the async reload is complete, with the same `value` that was set for the resource before reload was called, does not abort the reload operation.\n\nThis creates an inconsistent behaviour.  E.g.:\n\n```ts\nresource.set({});\nresources.reload();\nresource.set(undefined); // cancels the reload\n\n\nresource.set(undefined);\nresources.reload();\nresource.set(undefined); // does not cancel the reload\n```\n\n**Example reproduction**\n\nIn the following component, click the \"Load it\" button to trigger the reload, then click the \"Cancel it\" button to set the resource explicitly to `undefined` before the async load operation has completed.\n\n```ts\nimport {Component, resource, ResourceStatus} from '@angular/core';\nimport {JsonPipe} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  imports: [JsonPipe],\n  template: `\n    <p>\n      @if (something.value()) {\n        {{something.value() | json}}\n      } @else if (something.isLoading()) {\n        Loading...\n      } @else {\n        Load it?\n      }\n    </p>\n    @if (something.isLoading()) {\n      <p><button type=\"button\" (click)=\"cancelIt()\">Cancel it</button></p>\n    } @else {\n      <p><button type=\"button\" (click)=\"loadIt()\">Load it</button></p>\n    }\n  `\n})\nexport class AppComponent {\n  readonly something = resource({\n    loader: async ({previous, abortSignal}) => {\n      if (previous.status === ResourceStatus.Idle) {\n        return undefined;\n      }\n      return await someLongRunningTask(abortSignal);\n    }\n  });\n\n  loadIt() {\n    this.something.reload();\n  }\n\n  cancelIt() {\n    // Setting a value after reload is called that is the same as the value\n    // which was set before reload was called does not cancel the reload action\n    this.something.set(undefined);\n\n    // whereas setting a different value to the previous one always aborts in-progress reload operations\n    // this.something.set({});\n  }\n}\n\nfunction someLongRunningTask(abortSignal: AbortSignal) {\n  return new Promise<unknown>((resolve, reject) => {\n    if (abortSignal.aborted) {\n      reject(abortSignal.reason);\n      return;\n    }\n\n    let timeout: number | undefined = undefined;\n    const abort = () => {\n      clearTimeout(timeout);\n      reject(abortSignal.reason);\n    };\n    abortSignal.addEventListener('abort', abort);\n    timeout = setTimeout(() => {\n      abortSignal.removeEventListener('abort', abort);\n      resolve({success: true});\n    }, 2_000)\n  })\n}\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59272","RelatedDescription":"Open issue \"Calling resource.set(value) does not abort in-progress loaders if the given value is equal to the value before the resource was reloaded\" (#59272)"},{"Id":"2752353703","IsPullRequest":false,"CreatedAt":"2024-12-20T23:36:49","Actor":"atsjo","Number":"59255","RawContent":null,"Title":"Circular dependency in DI detected for ChangeDetectionScheduler in 19.0.4","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.3\n\n### Description\n\nI use provideAnimationsAsync(), and with the the latest 19.0.4, the app breaks with Circular dependency in DI detected error... If I switch to using provideAnimations() it works fine...\n\n### Reproduction\n\nRun/debug project with angular 19.0.5, angular-cli 19.0.6 and cdk/material 19.0.4, while using provideAnimationsAsync()\n\n\n### Expected Behavior\n\nWorks as in 19.0.3\n\n### Actual Behavior\n\nErrors with:\n    at throwCyclicDependencyError (core.mjs:969:9)\n    at R3Injector.hydrate (core.mjs:2277:9)\n    at R3Injector.get (core.mjs:2160:23)\n    at injectInjectorOnly (core.mjs:1100:36)\n    at ɵɵinject (core.mjs:1106:40)\n    at inject (core.mjs:1191:10)\n    at <instance_members_initializer> (async.mjs:19:15)\n    at new _AsyncAnimationRendererFactory (async.mjs:30:3)\n    at Object.useFactory (async.mjs:285:14)\n    at Object.factory (core.mjs:2377:32)\n\n### Environment\n\nnx 20.2.2\nangular 19.0.5\nangular cli 19.0.6\ncdk/material 19.0.4\n","Url":"https://github.com/angular/angular/issues/59255","RelatedDescription":"Closed issue \"Circular dependency in DI detected for ChangeDetectionScheduler in 19.0.4\" (#59255)"},{"Id":"2752364785","IsPullRequest":true,"CreatedAt":"2024-12-20T23:36:48","Actor":"crisbeto","Number":"59256","RawContent":null,"Title":"fix(platform-browser): avoid circular DI error in async renderer","State":"closed","Body":"In https://github.com/angular/components/pull/30179 the CDK overlay started depending on the `Renderer2Factory`. Since the overlay is used in the `MatSnackbar` which is commonly used in error handlers, `Overlay` can end up being injected as a part of the app initialization. Because `AsyncAnimationRendererFactory` depends on the `ChangeDetectionScheduler`, it may cause a circular dependency.\r\n\r\nThese changes inject the `ChangeDetectionScheduler` lazily to avoid the error.\r\n\r\nNote: this will also be resolved by #58984, but I decided to send it out, because:\r\n1. #58984 seems to be stuck on some internal cleanup.\r\n2. The `AsyncAnimationRendererFactory` doesn't need the `scheduler` eagerly anyway so the change is fairly safe.\r\n\r\nFixes #59255.","Url":"https://github.com/angular/angular/pull/59256","RelatedDescription":"Closed or merged PR \"fix(platform-browser): avoid circular DI error in async renderer\" (#59256)"},{"Id":"2753591884","IsPullRequest":false,"CreatedAt":"2024-12-20T23:14:34","Actor":"qbr-dude","Number":"59270","RawContent":null,"Title":"Adjusting the `ProviderToken` to `contentChildren`","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI wanted to do **general form management**: there is a component where it is pushed. Controls (**CVA**) are inserted through **`ng-content`** (marked through a directive), automatic button processing is immediately performed, etc. So I decided to get the components through **`contentChildren`** to link to the form, but it didn't work out. I tried different ways, but nothing.\n\n**In general, the idea is to access all the components through a directive search.**\n\nIf search only through the directive, then the result will be only the directive. Searching through the base class does not work (more on this below). In general, I had to look at the source code:\n\n1) I decided to take a look at why there is _no search through the base class_. [**I got to here**](https://github.com/angular/angular/blob/main/packages/core/src/render3/di.ts#L700-L707), the tokens are compared here, and the values are really the ones I need. But the class token is compared with the inherited one (which is the target here), so the verification fails. Maybe there is an idea to add an additional basic check?\n\n2) And then I started going back up, and I got to ([**first here**](https://github.com/angular/angular/blob/main/packages/core/src/render3/query.ts#L257-L268), [**then here**](https://github.com/angular/angular/blob/main/packages/core/src/render3/query.ts#L503)], and I thought, why not pass **the `ProviderToken` array**. But **`contentChildren`** expects a single token, so I made a type cast via unknown. **And it worked**. [**Here is an example**](https://stackblitz.com/edit/stackblitz-starters-vzdztjvv?file=src%2Fapp%2Fform%2Fform.component.ts).\n\nTherefore, it looks like **the type needs to be adjusted**. \nOr there is some other way, but I've tried, probably everything. Maybe you didn't think of such a thing, but I do not know why.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-vzdztjvv?file=src%2Fapp%2Fform%2Fform.component.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59270","RelatedDescription":"Closed issue \"Adjusting the `ProviderToken` to `contentChildren`\" (#59270)"},{"Id":"2753528496","IsPullRequest":true,"CreatedAt":"2024-12-20T21:51:03","Actor":"arturovt","Number":"59269","RawContent":null,"Title":"refactor(core): tree-shake `ApplicationRef.warnIfDestroyed`","State":"open","Body":"In this commit, we replace `private warnIfDestroyed` with a `warnIfDestroyed` function that can be completely removed in production. This change is necessary because, with `private warnIfDestroyed`, the empty method is still retained in production, even though it has no body.","Url":"https://github.com/angular/angular/pull/59269","RelatedDescription":"Open PR \"refactor(core): tree-shake `ApplicationRef.warnIfDestroyed`\" (#59269)"},{"Id":"2753509197","IsPullRequest":true,"CreatedAt":"2024-12-20T21:30:29","Actor":"RafaelJCamara","Number":"59268","RawContent":null,"Title":"refactor: initialize headers map directly in HttpHeaders class","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nIssue Number: #24571 (_**partially**_)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No","Url":"https://github.com/angular/angular/pull/59268","RelatedDescription":"Open PR \"refactor: initialize headers map directly in HttpHeaders class\" (#59268)"},{"Id":"2753393227","IsPullRequest":true,"CreatedAt":"2024-12-20T19:46:44","Actor":"Ahmed-Hakeem","Number":"59266","RawContent":null,"Title":"docs: add a note about styles collision resolution","State":"open","Body":"look how global styles could affect a component with shadowDom option\r\n\r\n```ts\r\n\r\nimport {Component, ViewEncapsulation} from '@angular/core';\r\n\r\nimport {bootstrapApplication} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-shadow-dom-encapsulation',\r\n  template: `\r\n    <h2>ShadowDom</h2>\r\n    <div class=\"shadow-message\" shadowDirective>Shadow DOM encapsulation</div>\r\n  `,\r\n  styles: ['h2, .shadow-message { color: blue; }'],\r\n  encapsulation: ViewEncapsulation.ShadowDom,\r\n})\r\nexport class ShadowDomEncapsulationComponent {}\r\n\r\n\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-root',\r\n  template: `\r\n   \r\n    <app-shadow-dom-encapsulation></app-shadow-dom-encapsulation>\r\n  `,\r\n  styles: [\r\n    `\r\n      app-shadow-dom-encapsulation {\r\n        display: block;\r\n        max-width: 500px;\r\n        padding: 5px;\r\n        margin: 5px 0;\r\n      }\r\n    `,\r\n    'app-shadow-dom-encapsulation { border: solid 2px blue; }',\r\n      'div.shadow-message[shadowDirective] { color: black; }'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  imports: [\r\n    ShadowDomEncapsulationComponent,\r\n  ],\r\n})\r\nexport class AppComponent {}\r\n\r\n\r\nbootstrapApplication(AppComponent);\r\n\r\n\r\n```\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/59266","RelatedDescription":"Open PR \"docs: add a note about styles collision resolution\" (#59266)"},{"Id":"2753170944","IsPullRequest":true,"CreatedAt":"2024-12-20T17:31:46","Actor":"Gitrhyme","Number":"59265","RawContent":null,"Title":"docs: Add NG0750 to errors list","State":"open","Body":"This PR adds error NG0750 to Error Encyclopedia.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #59218\r\n\r\n\r\n## What is the new behavior?\r\nError code NG0750 is now visible in Error Encyclopedia.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nNA\r\n","Url":"https://github.com/angular/angular/pull/59265","RelatedDescription":"Open PR \"docs: Add NG0750 to errors list\" (#59265)"},{"Id":"2753146037","IsPullRequest":false,"CreatedAt":"2024-12-20T17:18:33","Actor":"pkozlowski-opensource","Number":"59264","RawContent":null,"Title":"adev: binding to data-* is slow and results in 2x change detection slowdown on the https://angular.dev/api page","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nProfiling https://angular.dev/api reveals that the most of expensive part of the UI creation is due to the expensive `setAttribute` operation. Around 100ms (out of 200ms total) is spend setting attributes in the ApiItemLabel host bindings:\n\n![Image](https://github.com/user-attachments/assets/b2dd1ab0-8fd3-4edc-a60c-82a158e02d11)\n\nThose host bindings set the data-* attributes and it seems like this is a very slow process (there must be some special processing associated with setting data-). Changing this host binding from `[attr.data-x]` to `[class.x]` results in 2x speedup and the problematic setAttribute disappears from the profiler's hot-spot list:\n\n![Image](https://github.com/user-attachments/assets/0227329f-2e30-4467-bcaa-f1c28cc6b3e8)\n\nNote that `[attr.data-x]` bindings are there _only_ for the styling purposes (!) so we should be able to replace those by class bindings.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular.dev/api\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59264","RelatedDescription":"Open issue \"adev: binding to data-* is slow and results in 2x change detection slowdown on the https://angular.dev/api page\" (#59264)"},{"Id":"2752398110","IsPullRequest":false,"CreatedAt":"2024-12-20T17:14:05","Actor":"moodyVlad","Number":"59257","RawContent":null,"Title":"TypeError: Cannot read properties of undefined (reading 'ɵcmp') after updating from 18 to 19","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, forms, platform-browser, router, zone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter updating from Angular 18 to 19, using the ng update command I am getting the following error:\n<img width=\"1351\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4955a8cc-ddce-4a71-b00d-cd1d9fc8d71a\" />\n\nThis error did not happen on Angular 18. \nPlease note that I have no circular dependencies and I checked using madge.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.5\nNode: 22.1.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1900.5\n@angular-devkit/build-angular     19.0.5\n@angular-devkit/core              19.0.5\n@angular-devkit/schematics        19.0.5\n@angular/cdk                      19.0.4\n@angular/google-maps              18.1.3\n@angular/material                 19.0.4\n@angular/material-luxon-adapter   19.0.4\n@schematics/angular               19.0.5\nrxjs                              7.8.1\ntypescript                        5.5.4\nzone.js                           0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59257","RelatedDescription":"Closed issue \"TypeError: Cannot read properties of undefined (reading 'ɵcmp') after updating from 18 to 19\" (#59257)"},{"Id":"2753116349","IsPullRequest":true,"CreatedAt":"2024-12-20T17:01:39","Actor":"Shrinivassab","Number":"59263","RawContent":null,"Title":"i created a fix for the note, what can ia dd itn the cmmt message Whe…","State":"closed","Body":"fix(docs): add clarification note for styleUrl in component styling\r\nAdded a note to the Styling Components guide explaining the distinction between styleUrl and styleUrls, along with the appropriate usage of styleUrl for single CSS file scenarios in Angular 17+.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe documentation does not provide clear guidance on the usage of styleUrl introduced in Angular 17, potentially causing confusion for developers.\r\n\r\nIssue Number: https://github.com/angular/angular/issues/59262\r\n\r\n\r\n## What is the new behavior?\r\nThe documentation now includes a note about styleUrl in the Styling Components section, clarifying its use and compatibility with Angular 17+.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nAdded a descriptive note to enhance developer understanding.\r\nVerified the changes for alignment with Angular documentation standards.\r\n","Url":"https://github.com/angular/angular/pull/59263","RelatedDescription":"Closed or merged PR \"i created a fix for the note, what can ia dd itn the cmmt message Whe…\" (#59263)"},{"Id":"2753107283","IsPullRequest":false,"CreatedAt":"2024-12-20T16:59:44","Actor":"Shrinivassab","Number":"59262","RawContent":null,"Title":"Add a Note for styleUrl Usage in Angular 17+ in the Styling Documentation","State":"closed","Body":"### Describe the problem that you experienced\n\nThe documentation for [Styling Components](https://angular.dev/guide/components/styling) demonstrates the use of the styleUrl property for referencing an external CSS file. While this is correct for Angular 17+, it is not backward-compatible with earlier versions of Angular. Developers using Angular versions prior to 17 may encounter errors if they attempt to use styleUrl without knowing it is a feature introduced in Angular 17.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/styling\n\n### Describe what you were looking for in the documentation\n\nI was looking for information on how to correctly use the styleUrls or styleUrl attributes in Angular components to apply external CSS styles, along with guidance on version compatibility.\n\n### Describe the actions that led you to experience the problem\n\nWhile working with an Angular project, I referred to the documentation to understand how to apply external stylesheets. The example used styleUrl, but when applied in an older Angular version, it caused an error. It wasn’t clear from the documentation that styleUrl is only supported in Angular 17 and later.\n\n### Describe what you want to experience that would fix the problem\n\nI would like the documentation to include a note clarifying that:\n\n1. The styleUrl property is available only in Angular 17 and later.\n2. Developers using earlier versions should use the styleUrls property instead\n`\nNote: The `styleUrl` property is supported in Angular 17 and later. For earlier versions, use the `styleUrls` property to specify external stylesheets.  `\n\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nError: Cannot find property 'styleUrl' in Component decorator. Did you mean 'styleUrls'?\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n(Not applicable for this issue.)\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nThis clarification will help avoid confusion for developers using earlier versions of Angular while still supporting those using Angular 17+. Let me know if you’d like me to create a PR with this update.\n```","Url":"https://github.com/angular/angular/issues/59262","RelatedDescription":"Closed issue \"Add a Note for styleUrl Usage in Angular 17+ in the Styling Documentation\" (#59262)"},{"Id":"2752995767","IsPullRequest":false,"CreatedAt":"2024-12-20T15:47:55","Actor":"arturovt","Number":"59261","RawContent":null,"Title":"Event replay memory leak","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nElements are not being garbage collected properly when the app is destroyed because they are captured inside the early event contract event info list. When calling `appRef.destroy()`, we can capture the heap snapshot and observe the detached `<app-root />`, which cannot be garbage collected:\n\n![Image](https://github.com/user-attachments/assets/c0c211e7-d5bc-4468-80be-2e727855285c)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/arturovt/ng-issue-event-replay-leak\n\n### Please provide the exception or error you saw\n\nElements are captured in that part of the code:\n\nhttps://github.com/angular/angular/blob/2c3630aafdf0f375e1e5fc45f9068a274b46b7c7/packages/core/primitives/event-dispatch/src/earlyeventcontract.ts#L69-L83\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.11.1\nPackage Manager: yarn 1.22.22\nOS: linux x64\n\nAngular: 19.0.4\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59261","RelatedDescription":"Open issue \"Event replay memory leak\" (#59261)"},{"Id":"2752976174","IsPullRequest":false,"CreatedAt":"2024-12-20T15:37:33","Actor":"arturovt","Number":"59260","RawContent":null,"Title":"The `load` event on image elements is triggered twice with event replay","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using `withEventReplay()`, the `(load)` event listener is called twice: once by `invokeRegisteredReplayListeners -> invokeListeners`, and again by the `listener` instruction, which also sets up the `load` event listener.\n\n![Image](https://github.com/user-attachments/assets/45a51021-de2c-4f4a-9c5d-c855d43cfcf8)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/arturovt/ng-issue-event-replay-twice\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.11.1\nPackage Manager: yarn 1.22.22\nOS: linux x64\n\nAngular: 19.0.4\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59260","RelatedDescription":"Open issue \"The `load` event on image elements is triggered twice with event replay\" (#59260)"},{"Id":"2752830963","IsPullRequest":false,"CreatedAt":"2024-12-20T14:16:13","Actor":"NateRadebaugh","Number":"59259","RawContent":null,"Title":"Export @defer typescript primitives for use in component codebehind","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nThe `@defer` syntax is great, but the some of the triggers would also be useful in typescript, such as via a decorator to call a typescript function.\n\nI have a lazy-loaded component that is fetched via the `async import` in my typescript, which is fed into a dynamic dialog service. This should follow the same logic/heuristics as the template-based defer, and I would love to be able to reuse:\n* [`IdleScheduler`](https://github.com/angular/angular/blob/main/packages/core/src/defer/idle_scheduler.ts)\n* [`TimerScheduler`](https://github.com/angular/angular/blob/main/packages/core/src/defer/timer_scheduler.ts)\n\nIt'd be great if somehow the dom triggers could also be considered.\n\n### Proposed solution\n\nMinimal: export `IdleScheduler` and `TimerScheduler` from `@angular/core`\nBest: create and provide a `@defer` decorator that can be used from TypeScript code that works with all the same functionality as the `@defer` block in templates\n\n### Alternatives considered\n\nI can re-implement what I need in user-land, but would prefer to reuse Angular internals for consistency.","Url":"https://github.com/angular/angular/issues/59259","RelatedDescription":"Open issue \"Export @defer typescript primitives for use in component codebehind\" (#59259)"},{"Id":"2752625846","IsPullRequest":false,"CreatedAt":"2024-12-20T12:47:13","Actor":"SeanDemps","Number":"59258","RawContent":null,"Title":"Nullish coalescing broken in @for track expression","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nUsing nullish coalescence directly in the track expression of @for appears to be broken, throwing a “tmp_3_0 is not defined” error. \n\nMoving the expression to a method on the component class works.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-qcb1fhgc?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\ntmp_3_0 is not defined\n\nOr other tmp_num_num is not defined errors\n\nThe @for fails to iterate due to the error\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n \nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n \nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59258","RelatedDescription":"Closed issue \"Nullish coalescing broken in @for track expression\" (#59258)"},{"Id":"2752323638","IsPullRequest":false,"CreatedAt":"2024-12-20T09:49:03","Actor":"dmitry-stepanenko","Number":"59254","RawContent":null,"Title":"effect is not triggered when created outside of a component in tests","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading to Angular 19, I noticed a regression in test behavior involving toObservable and effect from signals. These do not trigger as expected when invoked outside the component's lifecycle (e.g., in a test). This worked correctly in Angular 18.\n\nBelow there's a simple test with a reproduction. When `_createSubscription` or `_createEffect` are called inside the component (e.g., in the constructor or ngOnInit), the values are logged as expected. However, invoking the same methods from the test (outside the component's lifecycle) results in empty arrays in logs.\n\n```typescript\nimport {\n    Component,\n    effect,\n    inject,\n    Injector,\n    OnInit,\n    signal,\n  } from '@angular/core';\n  import { toObservable } from '@angular/core/rxjs-interop';\n  import { TestBed } from '@angular/core/testing';\n  \n  @Component({\n    template: '',\n    standalone: true,\n  })\n  class TestComponent implements OnInit {\n    readonly mySignal = signal('1');\n    readonly injector = inject(Injector);\n  \n    constructor() {\n      this._createSubscription('constructor');\n      this._createEffect('constructor');\n    }\n  \n    ngOnInit() {\n      this._createSubscription('onInit');\n      this._createEffect('onInit');\n    }\n  \n    async _createSubscription(label: string) {\n      const m = toObservable(this.mySignal, { injector: this.injector });\n      const values: any[] = [];\n      m.subscribe((v) => {\n        values.push(v);\n      });\n  \n      await new Promise((r) => setTimeout(r, 1000));\n      console.log('result__' + label, values);\n    }\n  \n    async _createEffect(label: string) {\n      const values: any[] = [];\n      effect(\n        () => {\n          values.push(this.mySignal());\n        },\n        { injector: this.injector }\n      );\n      await new Promise((r) => setTimeout(r, 1000));\n      console.log('EFFECT result__' + label, values);\n    }\n  }\n  \n  describe('TestComponent', () => {\n    let component: TestComponent;\n  \n    beforeEach(() => {\n      TestBed.configureTestingModule({\n        imports: [TestComponent],\n      });\n  \n      const fixture = TestBed.createComponent(TestComponent);\n      component = fixture.componentInstance;\n      fixture.detectChanges();\n    });\n  \n    it('should run subscriptions and effects', async () => {\n      await component._createSubscription('test');\n      await component._createEffect('test');\n      expect('a').toBe('a');\n    });\n  });\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59254","RelatedDescription":"Closed issue \"effect is not triggered when created outside of a component in tests\" (#59254)"},{"Id":"2751618613","IsPullRequest":true,"CreatedAt":"2024-12-19T23:41:19","Actor":"JeanMeche","Number":"59252","RawContent":null,"Title":"docs(docs-infra): remove unused examples","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59252","RelatedDescription":"Open PR \"docs(docs-infra): remove unused examples\" (#59252)"},{"Id":"2751608381","IsPullRequest":true,"CreatedAt":"2024-12-19T23:29:43","Actor":"JeanMeche","Number":"59251","RawContent":null,"Title":"refactor(animations): deprecate `BrowserAnimationsModule`","State":"open","Body":"The official recommendation is now to use one of the following provider functions :\r\n* `provideAnimations`,\r\n* `provideAnimationsAsync`\r\n* `provideNoopAnimations` Depending on the wanted feature.\r\n\r\nDEPRECATE: `BrowserAnimationsModule` & `BrowserAnimationsModuleConfig`\r\n","Url":"https://github.com/angular/angular/pull/59251","RelatedDescription":"Open PR \"refactor(animations): deprecate `BrowserAnimationsModule`\" (#59251)"},{"Id":"2751440471","IsPullRequest":false,"CreatedAt":"2024-12-19T21:12:02","Actor":"Will-at-FreedomDev","Number":"59250","RawContent":null,"Title":"Add support for overriding built-in formats for DatePipe through the use of injection","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n`CommonModule`?\n\n### Description\n\nDifferent clients of ours have different ways that they prefer date formats, however it is not trivial to come up with a simple way to standardize on a custom format outside of the pre-defined options. We would like to always be able to use a predefined option like `shortDate` throughout our projects for any client where we want to show a \"short date\" at a global location with minimal effort.\n\nJust as we can do with various Angular Material components and services, I'd like the ability to both change and extend the \"Pre-defined format options\" of the DatePipe using injection. Found here: https://angular.dev/api/common/DatePipe?tab=usage-notes which includes, `short`, `long`, `mediumDate`, etc.\n\nExisting similar example with the `MatSnackbar`:\n```ts\nproviders: [\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: {\n        horizontalPosition: \"right\",\n        verticalPosition: \"bottom\",\n      },\n    },\n]\n```\n\n### Proposed solution\n\nI think it makes a lot of sense to extend the the `DATE_PIPE_DEFAULT_OPTIONS` to support this: https://angular.dev/api/common/DATE_PIPE_DEFAULT_OPTIONS?tab=usage-notes\n\n```ts\n// configured in app.module.ts\nproviders: [\n  {\n    provide: DATE_PIPE_DEFAULT_OPTIONS,\n    useValue: {\n      formats: {\n        shortDate: \"MM/dd/yyyy\", // overrides the built-in \"short\" format which is \"M/d/yy\"\n        hour12: \"hh a\",          // adds a custom format option \"by string token\" for a 0-12 hour\n        hour24: \"HH\",            // adds another example of a custom hour format but for a 0-23 hour\n      }\n    }\n  }\n]\n```\n\n```html\n<!-- implementation -->\nThis is my custom short date: {{ myDate | date: \"shortDate\" }} <br>\nThis is my custom 12 hour format: {{ myDate | date: \"hour12\" }} <br>\nThis is my custom 24 hour format: {{ myDate | date: \"hour24\" }}\n```\n\n### Alternatives considered\n\n\n\nAlternatives:\n1. Create a constant and export the constant into every component that will use the date pipe.\n2. Create a pipe and use the custom pipe rather than using the built-in Angular pipe.\n3. Always use the custom format for every implementation of the date pipe but then run risk of inconsistencies.\n\nNone of these alternatives are \"clean\" as they require the developer to consider either the tool they are using or what variation of how the tool must be used at an **implementation level**. By having a global location (injection via `DATE_PIPE_FORMATS` for example) this issue is addressed cleanly and promotes consistency throughout the project without having to compromise development efficiency.\n\nFor the majority of work that we do (we think it is a great philosophy), we prefer to use as much as the built-in standards, documentation, and tools that the frameworks that we use provide and that is a huge selling point of Angular as a framework.\n\nI tried to do some research into this topic and maybe there are alternatives that already exist for this purpose, but my search may not have cast a wide enough net to find them. I'd love to hear them if you have them.","Url":"https://github.com/angular/angular/issues/59250","RelatedDescription":"Open issue \"Add support for overriding built-in formats for DatePipe through the use of injection\" (#59250)"},{"Id":"2750979116","IsPullRequest":true,"CreatedAt":"2024-12-19T17:11:55","Actor":"angular-robot","Number":"59249","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `0850ed7` -> `2dba82d` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `d300539` -> `e4435cc` |\n| angular/dev-infra | action | digest | `289aa64` -> `e8ee8c5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59249","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#59249)"},{"Id":"2750932221","IsPullRequest":false,"CreatedAt":"2024-12-19T16:54:35","Actor":"blogcraft","Number":"59248","RawContent":null,"Title":"output-migration Removes types from output","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen running a migration `ng generate @angular/core:output-migration`\n\nMy @outputs when migrating to output lose the type causing errors everywhere.\n\n![Image](https://github.com/user-attachments/assets/47caa339-7178-44f0-a313-2b3f8c005554)\n\nInstead of turning this\n`@Output() EventMoveMovimientos: EventEmitter<resupuesta> = new EventEmitter();`\ninto\n`readonly EventMoveMovimientos = output();`\n \nIt should be into this\n`readonly EventMoveMovimientos = output<resupuesta>();`\n\n\nBy the way the event emit is this:\n```\nthis.EventMoveMovimientos.emit({\n  idInstrumento: nemo.idNemotecnico,\n  idCuenta: nemo.idCuenta,\n});\n```\n\nAnd the interface is this:\n```\nexport interface resupuesta {\n  idInstrumento: number;\n  idCuenta: number;\n}\n```\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nX [ERROR] TS2345: Argument of type '{ idInstrumento: any; idCuenta: any; }' is not assignable to parameter of type 'void'. [plugin angular-compiler]\n\n    src/app/modules/shared-module/tabla-instrumento/forward/forward.component.ts:97:35:\n      97 │     this.EventMoveMovimientos.emit({\n         ╵                                    ^\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 20.13.1\nPackage Manager: npm 10.5.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/flex-layout            15.0.0-beta.42\n@angular/material               19.0.4\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.5.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59248","RelatedDescription":"Open issue \"output-migration Removes types from output\" (#59248)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2754157186","IsPullRequest":false,"CreatedAt":"2024-12-21T19:14:53","Actor":"draylegend","Number":"29209","RawContent":null,"Title":"SSR support for elysiajs","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nexpress/hono/h3/fastify-like server implementation using [elysiajs](https://elysiajs.com)\n\nI'm getting the error when opening https://localhos:4000\n\n```js\nFailed to load module script: Expected a JavaScript module script but the server responded with a MIME type of \"\". Strict MIME type checking is enforced for module scripts per HTML spec.\n```\n\n### Proposed solution\n\n```ts\nimport { AngularAppEngine, createRequestHandler } from '@angular/ssr';\nimport { isMainModule } from '@angular/ssr/node';\nimport { Elysia } from 'elysia';\n\nconst engine = new AngularAppEngine();\nconst server = new Elysia();\n\nserver.get('/*', c => engine.handle(c.request));\n\nif (isMainModule(import.meta.url)) {\n  const port = process.env['PORT'] || 4000;\n\n  server.listen(port, ({ url }) => console.log(`🦊 ${url.href}`));\n}\n\nexport const reqHandler = createRequestHandler(server.fetch);\n```\n\n[Credits](https://github.com/JeanMeche/ssr-v19/blob/main/server-elysia.ts)\n\n### Alternatives considered\n\nNo alternatives","Url":"https://github.com/angular/angular-cli/issues/29209","RelatedDescription":"Closed issue \"SSR support for elysiajs\" (#29209)"},{"Id":"2753364810","IsPullRequest":true,"CreatedAt":"2024-12-21T17:58:54","Actor":"clydin","Number":"29204","RawContent":null,"Title":"build: migrate `@angular-devkit/build-webpack` to `ts_project`","State":"closed","Body":"The `@angular-devkit/build-webpack` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29204","RelatedDescription":"Closed or merged PR \"build: migrate `@angular-devkit/build-webpack` to `ts_project`\" (#29204)"},{"Id":"2754076160","IsPullRequest":true,"CreatedAt":"2024-12-21T14:16:28","Actor":"clydin","Number":"29208","RawContent":null,"Title":"ci: ensure passing build before rest of PR jobs","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/29208","RelatedDescription":"Open PR \"ci: ensure passing build before rest of PR jobs\" (#29208)"},{"Id":"2752013634","IsPullRequest":true,"CreatedAt":"2024-12-21T13:46:17","Actor":"angular-robot","Number":"29195","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `ad8c43e` -> `0e6c3f5` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `5c693d4` -> `722eb51` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `0dbf7e9` -> `3c51fee` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `85adb68` -> `44ce460` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `4402782` -> `195d16a` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `a1a89da` -> `e1b18f5` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `b9cb5ce` -> `dcf469f` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `e9d846b` -> `1ba071c` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `1e52082` -> `ca17908` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `b3a2219` -> `8e43647` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `5c81604` -> `8b8e8e6` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `5afad37` -> `42a6548` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `457bddb` -> `20a349f` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `588f356` -> `566f6f3` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a08e274` -> `6cd4d80` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `99ca0eb` -> `5e82f42` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `8779277` -> `8c47503` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29195","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29195)"},{"Id":"2753788759","IsPullRequest":true,"CreatedAt":"2024-12-21T13:45:48","Actor":"angular-robot","Number":"29207","RawContent":null,"Title":"build: update github/codeql-action action to v3.28.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | minor | `v3.27.9` -> `v3.28.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.0`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.0)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.9...v3.28.0)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.28.0 - 20 Dec 2024\n\n-   Bump the minimum CodeQL bundle version to 2.15.5. [#&#8203;2655](https://redirect.github.com/github/codeql-action/pull/2655)\n-   Don't fail in the unusual case that a file is on the search path. [#&#8203;2660](https://redirect.github.com/github/codeql-action/pull/2660).\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.0/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29207","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.28.0\" (#29207)"},{"Id":"2752899010","IsPullRequest":true,"CreatedAt":"2024-12-21T13:39:35","Actor":"clydin","Number":"29199","RawContent":null,"Title":"build: migrate `@ngtools/webpack` to `ts_project`","State":"closed","Body":"The `@ngtools/webpack` package has been migrated to the `rules_js` ts_project rule.\r\n\r\nOther than the `index.ts` addition, no code changes were needed.","Url":"https://github.com/angular/angular-cli/pull/29199","RelatedDescription":"Closed or merged PR \"build: migrate `@ngtools/webpack` to `ts_project`\" (#29199)"},{"Id":"2753788445","IsPullRequest":true,"CreatedAt":"2024-12-21T06:05:23","Actor":"angular-robot","Number":"29206","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`5.1.0` -> `5.1.1`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.0/5.1.1) |\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`5.1.0` -> `5.1.1`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.0/5.1.1) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`7.2.0` -> `7.2.1`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.2.0/7.2.1) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`7.2.0` -> `7.2.1`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.2.0/7.2.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | minor | [`4.28.1` -> `4.29.1`](https://renovatebot.com/diffs/npm/rollup/4.28.1/4.29.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | minor | [`4.28.1` -> `4.29.1`](https://renovatebot.com/diffs/npm/rollup/4.28.1/4.29.1) |\n| [verdaccio](https://verdaccio.org) ([source](https://redirect.github.com/verdaccio/verdaccio)) | devDependencies | patch | [`6.0.4` -> `6.0.5`](https://renovatebot.com/diffs/npm/verdaccio/6.0.4/6.0.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.1`](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.0...@inquirer/confirm@5.1.1)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.0...@inquirer/confirm@5.1.1)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.29.1`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4291)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.29.0...v4.29.1)\n\n*2024-12-21*\n\n##### Bug Fixes\n\n-   Fix crash from deoptimized logical expressions ([#&#8203;5771](https://redirect.github.com/rollup/rollup/issues/5771))\n\n##### Pull Requests\n\n-   [#&#8203;5769](https://redirect.github.com/rollup/rollup/pull/5769): Remove unnecessary lifetimes ([@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5771](https://redirect.github.com/rollup/rollup/pull/5771): fix: do not optimize the literal value if the cache is deoptimized ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n\n### [`v4.29.0`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4290)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.28.1...v4.29.0)\n\n*2024-12-20*\n\n##### Features\n\n-   Treat objects as truthy and always check second argument to better simplify logical expressions ([#&#8203;5763](https://redirect.github.com/rollup/rollup/issues/5763))\n\n##### Pull Requests\n\n-   [#&#8203;5759](https://redirect.github.com/rollup/rollup/pull/5759): docs: add utf-8 encoding to JSON file reading ([@&#8203;chouchouji](https://redirect.github.com/chouchouji))\n-   [#&#8203;5760](https://redirect.github.com/rollup/rollup/pull/5760): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5763](https://redirect.github.com/rollup/rollup/pull/5763): fix: introduce UnknownFalsyValue for enhancing if statement tree-shaking ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n-   [#&#8203;5766](https://redirect.github.com/rollup/rollup/pull/5766): chore(deps): update dependency [@&#8203;rollup/plugin-node-resolve](https://redirect.github.com/rollup/plugin-node-resolve) to v16 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5767](https://redirect.github.com/rollup/rollup/pull/5767): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio (verdaccio)</summary>\n\n### [`v6.0.5`](https://redirect.github.com/verdaccio/verdaccio/releases/tag/v6.0.5)\n\n[Compare Source](https://redirect.github.com/verdaccio/verdaccio/compare/v6.0.4...v6.0.5)\n\n#### Release /n TBA\n\n#### What's Changed\n\n-   fix(deps): update core verdaccio dependencies (6.x) by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/verdaccio/verdaccio/pull/5014](https://redirect.github.com/verdaccio/verdaccio/pull/5014)\n    -   [feat(ui-components): support packages with multiple module types (](https://redirect.github.com/verdaccio/verdaccio/commit/5a91448653bc2e68dbd5bb6f2c15317ef3c0d4e3)[https://github.com/verdaccio/verdaccio/pull/5008](https://redirect.github.com/verdaccio/verdaccio/pull/5008)[)](https://redirect.github.com/verdaccio/verdaccio/commit/5a91448653bc2e68dbd5bb6f2c15317ef3c0d4e3) [@&#8203;kuoruan](https://redirect.github.com/kuoruan)\n    -   [fix](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21) [https://github.com/verdaccio/verdaccio/issues/4984](https://redirect.github.com/verdaccio/verdaccio/issues/4984) [crashes with path-to-regexp v0.1.12 (](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21)[https://github.com/verdaccio/verdaccio/pull/5011](https://redirect.github.com/verdaccio/verdaccio/pull/5011)[)](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21) [@&#8203;juanpicado](https://redirect.github.com/juanpicado)\n    -\n\n**Full Changelog**: https://github.com/verdaccio/verdaccio/compare/v6.0.4...v6.0.5\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29206","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29206)"},{"Id":"2753694362","IsPullRequest":false,"CreatedAt":"2024-12-21T01:43:58","Actor":"NateRadebaugh","Number":"29205","RawContent":null,"Title":"Add first-class support for bun:test","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nThe Angular Roadmap calls out that modern testing library integration is a theme of angular.\n> https://angular.dev/roadmap#improve-tooling\n\nCurrently, angular's components are not able to be tested using bun:\nhttps://bun.sh/docs/cli/test\n\n### Describe the solution you'd like\n\nWould be great to support bun:test out of the box.\n\nCurrently, see this type of error when running:\n\n```\nerror: Component 'CreateNoteDialogComponent' is not resolved:\n - templateUrl: ./note-dialog.component.html\nDid you run and wait for 'resolveComponentResources()'?\n```\n\n### Describe alternatives you've considered\n\n_No response_\n","Url":"https://github.com/angular/angular-cli/issues/29205","RelatedDescription":"Open issue \"Add first-class support for bun:test\" (#29205)"},{"Id":"2752174959","IsPullRequest":true,"CreatedAt":"2024-12-20T19:01:47","Actor":"angular-robot","Number":"29196","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [esbuild](https://redirect.github.com/evanw/esbuild) | optionalDependencies | patch | [`0.24.0` -> `0.24.2`](https://renovatebot.com/diffs/npm/esbuild/0.24.0/0.24.2) |\n| [esbuild](https://redirect.github.com/evanw/esbuild) | dependencies | patch | [`0.24.0` -> `0.24.2`](https://renovatebot.com/diffs/npm/esbuild/0.24.0/0.24.2) |\n| [esbuild](https://redirect.github.com/evanw/esbuild) | devDependencies | patch | [`0.24.0` -> `0.24.2`](https://renovatebot.com/diffs/npm/esbuild/0.24.0/0.24.2) |\n| [esbuild-wasm](https://redirect.github.com/evanw/esbuild) | dependencies | patch | [`0.24.0` -> `0.24.2`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.24.0/0.24.2) |\n| [esbuild-wasm](https://redirect.github.com/evanw/esbuild) | devDependencies | patch | [`0.24.0` -> `0.24.2`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.24.0/0.24.2) |\n| [resolve](https://redirect.github.com/browserify/resolve) | dependencies | patch | [`1.22.9` -> `1.22.10`](https://renovatebot.com/diffs/npm/resolve/1.22.9/1.22.10) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.4` -> `6.0.5`](https://renovatebot.com/diffs/npm/vite/6.0.4/6.0.5) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.4` -> `6.0.5`](https://renovatebot.com/diffs/npm/vite/6.0.4/6.0.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.24.2`](https://redirect.github.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0242)\n\n[Compare Source](https://redirect.github.com/evanw/esbuild/compare/v0.24.1...v0.24.2)\n\n-   Fix regression with `--define` and `import.meta` ([#&#8203;4010](https://redirect.github.com/evanw/esbuild/issues/4010), [#&#8203;4012](https://redirect.github.com/evanw/esbuild/issues/4012), [#&#8203;4013](https://redirect.github.com/evanw/esbuild/pull/4013))\n\n    The previous change in version 0.24.1 to use a more expression-like parser for `define` values to allow quoted property names introduced a regression that removed the ability to use `--define:import.meta=...`. Even though `import` is normally a keyword that can't be used as an identifier, ES modules special-case the `import.meta` expression to behave like an identifier anyway. This change fixes the regression.\n\n    This fix was contributed by [@&#8203;sapphi-red](https://redirect.github.com/sapphi-red).\n\n### [`v0.24.1`](https://redirect.github.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0241)\n\n[Compare Source](https://redirect.github.com/evanw/esbuild/compare/v0.24.0...v0.24.1)\n\n-   Allow `es2024` as a target in `tsconfig.json` ([#&#8203;4004](https://redirect.github.com/evanw/esbuild/issues/4004))\n\n    TypeScript recently [added `es2024`](https://devblogs.microsoft.com/typescript/announcing-typescript-5-7/#support-for---target-es2024-and---lib-es2024) as a compilation target, so esbuild now supports this in the `target` field of `tsconfig.json` files, such as in the following configuration file:\n\n    ```json\n    {\n      \"compilerOptions\": {\n        \"target\": \"ES2024\"\n      }\n    }\n    ```\n\n    As a reminder, the only thing that esbuild uses this field for is determining whether or not to use legacy TypeScript behavior for class fields. You can read more in [the documentation](https://esbuild.github.io/content-types/#tsconfig-json).\n\n    This fix was contributed by [@&#8203;billyjanitsch](https://redirect.github.com/billyjanitsch).\n\n-   Allow automatic semicolon insertion after `get`/`set`\n\n    This change fixes a grammar bug in the parser that incorrectly treated the following code as a syntax error:\n\n    ```ts\n    class Foo {\n      get\n      *x() {}\n      set\n      *y() {}\n    }\n    ```\n\n    The above code will be considered valid starting with this release. This change to esbuild follows a [similar change to TypeScript](https://redirect.github.com/microsoft/TypeScript/pull/60225) which will allow this syntax starting with TypeScript 5.7.\n\n-   Allow quoted property names in `--define` and `--pure` ([#&#8203;4008](https://redirect.github.com/evanw/esbuild/issues/4008))\n\n    The `define` and `pure` API options now accept identifier expressions containing quoted property names. Previously all identifiers in the identifier expression had to be bare identifiers. This change now makes `--define` and `--pure` consistent with `--global-name`, which already supported quoted property names. For example, the following is now possible:\n\n    ```js\n    // The following code now transforms to \"return true;\\n\"\n    console.log(esbuild.transformSync(\n      `return process.env['SOME-TEST-VAR']`,\n      { define: { 'process.env[\"SOME-TEST-VAR\"]': 'true' } },\n    ))\n    ```\n\n    Note that if you're passing values like this on the command line using esbuild's `--define` flag, then you'll need to know how to escape quote characters for your shell. You may find esbuild's JavaScript API more ergonomic and portable than writing shell code.\n\n-   Minify empty `try`/`catch`/`finally` blocks ([#&#8203;4003](https://redirect.github.com/evanw/esbuild/issues/4003))\n\n    With this release, esbuild will now attempt to minify empty `try` blocks:\n\n    ```js\n    // Original code\n    try {} catch { foo() } finally { bar() }\n\n    // Old output (with --minify)\n    try{}catch{foo()}finally{bar()}\n\n    // New output (with --minify)\n    bar();\n    ```\n\n    This can sometimes expose additional minification opportunities.\n\n-   Include `entryPoint` metadata for the `copy` loader ([#&#8203;3985](https://redirect.github.com/evanw/esbuild/issues/3985))\n\n    Almost all entry points already include a `entryPoint` field in the `outputs` map in esbuild's build metadata. However, this wasn't the case for the `copy` loader as that loader is a special-case that doesn't behave like other loaders. This release adds the `entryPoint` field in this case.\n\n-   Source mappings may now contain `null` entries ([#&#8203;3310](https://redirect.github.com/evanw/esbuild/issues/3310), [#&#8203;3878](https://redirect.github.com/evanw/esbuild/issues/3878))\n\n    With this change, sources that result in an empty source map may now emit a `null` source mapping (i.e. one with a generated position but without a source index or original position). This change improves source map accuracy by fixing a problem where minified code from a source without any source mappings could potentially still be associated with a mapping from another source file earlier in the generated output on the same minified line. It manifests as nonsensical files in source mapped stack traces. Now the `null` mapping \"resets\" the source map so that any lookups into the minified code without any mappings resolves to `null` (which appears as the output file in stack traces) instead of the incorrect source file.\n\n    This change shouldn't affect anything in most situations. I'm only mentioning it in the release notes in case it introduces a bug with source mapping. It's part of a work-in-progress future feature that will let you omit certain unimportant files from the generated source map to reduce source map size.\n\n-   Avoid using the parent directory name for determinism ([#&#8203;3998](https://redirect.github.com/evanw/esbuild/issues/3998))\n\n    To make generated code more readable, esbuild includes the name of the source file when generating certain variable names within the file. Specifically bundling a CommonJS file generates a variable to store the lazily-evaluated module initializer. However, if a file is named `index.js` (or with a different extension), esbuild will use the name of the parent directory instead for a better name (since many packages have files all named `index.js` but have unique directory names).\n\n    This is problematic when the bundle entry point is named `index.js` and the parent directory name is non-deterministic (e.g. a temporary directory created by a build script). To avoid non-determinism in esbuild's output, esbuild will now use `index` instead of the parent directory in this case. Specifically this will happen if the parent directory is equal to esbuild's `outbase` API option, which defaults to the [lowest common ancestor](https://en.wikipedia.org/wiki/Lowest_common_ancestor) of all user-specified entry point paths.\n\n-   Experimental support for esbuild on NetBSD ([#&#8203;3974](https://redirect.github.com/evanw/esbuild/pull/3974))\n\n    With this release, esbuild now has a published binary executable for [NetBSD](https://www.netbsd.org/) in the [`@esbuild/netbsd-arm64`](https://www.npmjs.com/package/@&#8203;esbuild/netbsd-arm64) npm package, and esbuild's installer has been modified to attempt to use it when on NetBSD. Hopefully this makes installing esbuild via npm work on NetBSD. This change was contributed by [@&#8203;bsiegert](https://redirect.github.com/bsiegert).\n\n    ⚠️ Note: NetBSD is not one of [Node's supported platforms](https://nodejs.org/api/process.html#process_process_platform), so installing esbuild may or may not work on NetBSD depending on how Node has been patched. This is not a problem with esbuild. ⚠️\n\n</details>\n\n<details>\n<summary>browserify/resolve (resolve)</summary>\n\n### [`v1.22.10`](https://redirect.github.com/browserify/resolve/compare/v1.22.9...v1.22.10)\n\n[Compare Source](https://redirect.github.com/browserify/resolve/compare/v1.22.9...v1.22.10)\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.5`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small605-2024-12-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.4...v6.0.5)\n\n-   fix: esbuild regression (pin to 0.24.0) ([#&#8203;19027](https://redirect.github.com/vitejs/vite/issues/19027)) ([4359e0d](https://redirect.github.com/vitejs/vite/commit/4359e0d5b33afd6259a4dcef787cc2670e963126)), closes [#&#8203;19027](https://redirect.github.com/vitejs/vite/issues/19027)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29196","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29196)"},{"Id":"2753183843","IsPullRequest":true,"CreatedAt":"2024-12-20T18:44:54","Actor":"clydin","Number":"29203","RawContent":null,"Title":"ci: ensure passing test job before E2E jobs","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29203","RelatedDescription":"Closed or merged PR \"ci: ensure passing test job before E2E jobs\" (#29203)"},{"Id":"2750850928","IsPullRequest":false,"CreatedAt":"2024-12-20T17:36:28","Actor":"hamfastgamgee","Number":"29190","RawContent":null,"Title":"Angular 19.0.6 breaks karma/jasmine on our build server by trying to load jasmine.css as a script module","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.5\n\n### Description\n\nAfter the 19.0.6 release (and presumably 19.1.0-next.2, although I have not tested that), our build server cannot execute tests appropriately because the new AngularPolyfillsPlugin executed to fix jasmine.clock turns the <link> tag that is supposed to load jasmine.css into a <script type=\"module\"> tag, which is clearly inappropriate for CSS.  Interestingly, \"ng test\" executes fine on my local workstation (although the styles in karma if you load it up in the browser are broken) even with this change, but on our build server this results in the following error:\n\nChrome Headless 131.0.0.0 (Windows 10) ERROR\nUncaught Error loading node_modules/jasmine-core/lib/jasmine-core/jasmine.css\n   at http://localhost:9876/context.html:255:289\n\nRolling back to a pinned 19.0.5 works; obviously the bug that was addressed would be broken, but we don't use jasmine.clock in our tests.  As far as I can tell, adding some additional logic around line 151 to ignore CSS files in application_builder.ts should do the trick.\n\n### Minimal Reproduction\n\nRun \"ng test\" and observe the source code generated in the karma server, noting that the CSS file is improperly referenced as <script type=\"module\">.\n\n(I do not know why our build server fails here and my workstation succeeds, even running the same commands on the same Chrome version.)\n\n### Exception or Error\n\n```text\nChrome Headless 131.0.0.0 (Windows 10) ERROR\nUncaught Error loading node_modules/jasmine-core/lib/jasmine-core/jasmine.css\n   at http://localhost:9876/context.html:255:289\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___ \n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 20.11.1\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/material               19.0.4\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29190","RelatedDescription":"Closed issue \"Angular 19.0.6 breaks karma/jasmine on our build server by trying to load jasmine.css as a script module\" (#29190)"},{"Id":"2751291561","IsPullRequest":true,"CreatedAt":"2024-12-20T17:36:27","Actor":"jkrems","Number":"29193","RawContent":null,"Title":"fix(@angular-devkit/build-angular): preserve css type for jasmine.css","State":"closed","Body":"We should only force the type for files that we know are JavaScript. Otherwise we risk breaking the magic type detection done by Karma.\r\n\r\nThe previous code broke for `jasmine.css`.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/29190","Url":"https://github.com/angular/angular-cli/pull/29193","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): preserve css type for jasmine.css\" (#29193)"},{"Id":"2753138110","IsPullRequest":true,"CreatedAt":"2024-12-20T17:36:06","Actor":"josephperrott","Number":"29202","RawContent":null,"Title":"Revert mnemonic test idea","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29202","RelatedDescription":"Closed or merged PR \"Revert mnemonic test idea\" (#29202)"},{"Id":"2753134740","IsPullRequest":true,"CreatedAt":"2024-12-20T17:15:44","Actor":"clydin","Number":"29201","RawContent":null,"Title":"ci: ensure passing build before rest of CI jobs","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29201","RelatedDescription":"Closed or merged PR \"ci: ensure passing build before rest of CI jobs\" (#29201)"},{"Id":"2753080187","IsPullRequest":true,"CreatedAt":"2024-12-20T16:57:16","Actor":"josephperrott","Number":"29200","RawContent":null,"Title":"build: set a mnemonic for template expand and file write","State":"closed","Body":"Set the mnemonic to determine if it allows us to reduce the number of RBE queries executed\r\n","Url":"https://github.com/angular/angular-cli/pull/29200","RelatedDescription":"Closed or merged PR \"build: set a mnemonic for template expand and file write\" (#29200)"},{"Id":"2752829865","IsPullRequest":false,"CreatedAt":"2024-12-20T14:15:35","Actor":"minijus","Number":"29198","RawContent":null,"Title":"Make early fail when application has $localize/i18n texts but no config for localize","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nToday applications that have `$localize` and no localize config (or localize/init polyfill) fail at runtime with ![Image](https://github.com/user-attachments/assets/47200d2b-c171-43f3-a569-d72f9b845b63).\n\nThis might be not a big problem for single-app repositories, but it quickly becomes a bigger issue for monorepositories with multiple buildable apps.\n\n\n### Describe the solution you'd like\n\nInstead of runtime error application build could fail. This would allow easier/earlier detection of the issue.\n\nThis would be very helpful change for monorepos as internal libraries with $localize/i18n would be identified in build time.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29198","RelatedDescription":"Open issue \"Make early fail when application has $localize/i18n texts but no config for localize\" (#29198)"},{"Id":"2752807946","IsPullRequest":false,"CreatedAt":"2024-12-20T14:05:06","Actor":"dmitry-stepanenko","Number":"29197","RawContent":null,"Title":"Usage of the APP_INITIALIZER with SSR causes the new REQUEST token to be null","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen `APP_INITIALIZER` is used, it appears that rendering is happening twice. \n\nI can observe this behavior with both `CommonEngine` and the new `AngularNodeAppEngine` in angular 19 and it is not reproducible in angular 18.\n\nThe real problem is that with `AngularNodeAppEngine` it is now possible to use the new `REQUEST` token. When APP_INITIALIZER is being used, I see that rendering is happening twice with `REQUEST` being `null` during the first of the two renders.\n\nTo reproduce, simply create a new repo with Server Routing and App Engine APIs enabled, then add APP_INITIALIZER to the `app.config.ts`, change server routing from `Prerender` to `Server` and add a log in AppComponent's constructor\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/dmitry-stepanenko/ng-ssr-duplicated-rendering\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29197","RelatedDescription":"Closed issue \"Usage of the APP_INITIALIZER with SSR causes the new REQUEST token to be null\" (#29197)"},{"Id":"2751691457","IsPullRequest":true,"CreatedAt":"2024-12-20T12:26:43","Actor":"clydin","Number":"29194","RawContent":null,"Title":"fix(@angular/build): mitigate JS transformer worker `execArgv` errors","State":"closed","Body":"Node.js workers will currently fail to initialize if the `execArgv` option is used and it contains v8 specific options. This is currently problematic for the JS transformer worker because it contains a workaround to remove the SSR `--import` argument that is used to add a loader hook for SSR purposes. The filtering of the argument and subsequent use of the `execArgv` array had the potential to pass custom Node.js options to the worker and cause it to fail. These options can be passed by developers on the command line when invoking the Angular CLI.\r\nTo mitigate this problem, the `execArgv` option is now only filtered and used if the SSR import argument is present in the array. Otherwise, no value is passed which allows the default Node.js behavior to be used. While this does not fully solve the problem for all projects, it does remove the problem from non-SSR projects.","Url":"https://github.com/angular/angular-cli/pull/29194","RelatedDescription":"Closed or merged PR \"fix(@angular/build): mitigate JS transformer worker `execArgv` errors\" (#29194)"},{"Id":"2749438260","IsPullRequest":true,"CreatedAt":"2024-12-19T19:01:12","Actor":"angular-robot","Number":"29184","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `a0f4330` -> `ad8c43e` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `c79da6c` -> `5c693d4` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `23a3f5d` -> `2dba82d` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `ac8ee6a` -> `0dbf7e9` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `39012f5` -> `85adb68` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `0f5063f` -> `4402782` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `e40a52b` -> `a1a89da` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `19ec33d` -> `b9cb5ce` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `358b705` -> `e9d846b` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `5876f7b` -> `1e52082` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `c6ab4c1` -> `b3a2219` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `dc2b42b` -> `5c81604` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `ecacecb` -> `5afad37` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a7f5e0c` -> `e4435cc` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `b4b7dc9` -> `457bddb` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `e348b5e` -> `588f356` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `0dff9a1` -> `a08e274` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `9365ce2` -> `99ca0eb` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `226269e` -> `8779277` |\n| angular/dev-infra | action | digest | `36b7540` -> `e8ee8c5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29184","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29184)"},{"Id":"2751004961","IsPullRequest":true,"CreatedAt":"2024-12-19T17:51:21","Actor":"josephperrott","Number":"29192","RawContent":null,"Title":"[Patch version for #29189] build: migrate build_angular to ts_project","State":"closed","Body":"Patch version for #29189","Url":"https://github.com/angular/angular-cli/pull/29192","RelatedDescription":"Closed or merged PR \"[Patch version for #29189] build: migrate build_angular to ts_project\" (#29192)"},{"Id":"2750459560","IsPullRequest":true,"CreatedAt":"2024-12-19T17:21:37","Actor":"devversion","Number":"29189","RawContent":null,"Title":"build: migrate build_angular to ts_project ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29189","RelatedDescription":"Closed or merged PR \"build: migrate build_angular to ts_project \" (#29189)"},{"Id":"2750964230","IsPullRequest":true,"CreatedAt":"2024-12-19T17:06:01","Actor":"clydin","Number":"29191","RawContent":null,"Title":"fix(@angular/build): support incremental build file results in watch mode","State":"open","Body":"When the application build is in watch mode, incremental build results will now be generated. This allows fine-grained updates of the files in the output directory and supports removal of stale application code files. Note that stale assets will not currently be removed from the output directory. More complex asset change analysis will be evaluated for inclusion in the future to address this asset output behavior.\r\n\r\nCloses #26595","Url":"https://github.com/angular/angular-cli/pull/29191","RelatedDescription":"Open PR \"fix(@angular/build): support incremental build file results in watch mode\" (#29191)"},{"Id":"2749425448","IsPullRequest":true,"CreatedAt":"2024-12-19T16:39:24","Actor":"alan-agius4","Number":"29183","RawContent":null,"Title":"fix(@angular/ssr): disable component boostrapping when running route extraction","State":"closed","Body":"\r\nThis commit fixes an issue where the components where still being bootstrapping when using `provideAppInitializer`\r\n\r\nCloses #29131\r\n","Url":"https://github.com/angular/angular-cli/pull/29183","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): disable component boostrapping when running route extraction\" (#29183)"},{"Id":"2750284566","IsPullRequest":true,"CreatedAt":"2024-12-19T14:21:52","Actor":"alan-agius4","Number":"29187","RawContent":null,"Title":"test: add false positive postinstall script","State":"closed","Body":"`resolve/test/list-exports/packages/tests/fixtures/resolve-2/project/test/resolver/multirepo/package.json` is not a true postinstall script\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29187","RelatedDescription":"Closed or merged PR \"test: add false positive postinstall script\" (#29187)"},{"Id":"2750414860","IsPullRequest":false,"CreatedAt":"2024-12-19T13:55:50","Actor":"DibyodyutiMondal","Number":"29188","RawContent":null,"Title":"allow proxy config during ng build when using `outputMode: server`","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nI am facing a separate, but similar issue to #29005 \n@alan-agius4, in my case, the 30-sec timeout occurs because I am making api calls.\n\nMy setup is pretty standard: \n- 2 angular 'client' apps (ssr with fastify)\n- one 'server' api (fastify)\n\nThe '/api' route on both clients are expected to point to the same api instance\n\nIn production, '/api' on both client apps are routed the api via nginx and docker configuration \nIn development, I serve both the api and client locally, and use ng serve's proxy config \n\nThis means I can avoid having to stream my api data through my client's container. This is especially a win for production environment.\n\nBecause of this setup, I do not need to have a separate 'api' route in my client application. \n\nBUT...\n\nWhen angular tries to build my app, to extract the routes, \n- it makes request to the angular engine\n- in order to render the app, angular engine needs to make some api calls. Those api calls go to '/api'.\n- but there is no nginx config, or proxy config, so it passes the request to the client's fastify instance.\n- the client fastify instance does not have a handler for '/api' so it passes the request to the '*' route \n- '*' route is handled by.... angular engine\n\nAnd so it loops and loops.\n\nA. It was not immediately obvious that is a problem of recursion, and not a problem of route not able to render.\nB. This is probably behaving as intended. But it forces developers to implement a fallback for api routes, or any other route that is expected on the same origin, just to build in peace. This was not needed before. We did not need to have runtime things available at build-time. \nC. Yes, api route example was there in the initial generated server.ts. But it did not tell me \"DO NOT DELETE THIS - YOU WILL NEED THIS LATER\". Basically, maybe a more thorough documention is in order\nD. Alternatively, would it not be great if we configure the build action to pick up proxy information, just like `ng serve`?\n\n----\n\n### Following are the relevant files for the server setup\n\n##### server.ts\n```typescript\nimport { createNodeRequestHandler, isMainModule } from '@angular/ssr/node';\nimport { serveAngularSSR } from '@easworks/app-shell/utilities/angular-ssr';\nimport { fastifyCors } from '@fastify/cors';\nimport { fastify, FastifyInstance } from 'fastify';\nimport * as path from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { parseEnv } from 'server-side/environment';\nimport { useProblemDetailsGlobally } from 'server-side/utils/fastify-problem-details';\nimport { getLoggerOptions } from 'server-side/utils/logging';\nimport { printRoutes } from 'server-side/utils/print-routes.plugin';\n\nconst envId = parseEnv.nodeEnv();\n\nasync function initServer() {\n  // const options = development ? {} : { http2: true };\n  const options = {};\n\n  const server = fastify({\n    ...options,\n    logger: getLoggerOptions(envId)\n  });\n\n  return server;\n}\n\nasync function configureServer(server: FastifyInstance) {\n\n  server.register(useProblemDetailsGlobally);\n  server.register(printRoutes);\n\n  server.register(serveAngularSSR, {\n    directory: path.resolve(fileURLToPath(import.meta.url), '../..'),\n  });\n\n  await server.register(fastifyCors, {\n    origin: true\n  });\n}\n\nconst server = await initServer();\nawait configureServer(server);\n\nasync function closeServer(server: FastifyInstance) {\n  await server.close();\n  process.exit();\n}\n\n/**\n * Start the server if this module is the main entry point.\n * The server listens on the port defined by the `PORT` environment variable, or defaults to 4000.\n */\nif (isMainModule(import.meta.url)) {\n  const host = '0.0.0.0';\n  const port = Number.parseInt(process.env['PORT'] as string);\n\n  try {\n    await server.listen({ host, port });\n    process.on('SIGTERM', () => closeServer(server));\n    process.on('SIGINT', () => closeServer(server));\n  }\n  catch (e) {\n    server.log.fatal(e);\n    closeServer(server);\n  }\n}\n\n/**\n * The request handler used by the Angular CLI (dev-server and during build).\n */\nexport const reqHandler = createNodeRequestHandler(async (req, res) => {\n  await server.ready();\n  server.server.emit('request', req, res);\n});\n\n\n```\n#### serve-angular-ssr.ts\n```typescript\nimport { AngularNodeAppEngine, writeResponseToNodeResponse } from '@angular/ssr/node';\nimport { fastifyStatic } from '@fastify/static';\nimport { FastifyPluginAsync } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport mime from 'mime';\nimport * as path from 'path';\n\ninterface ServeAngularSSROptions {\n  directory: string;\n}\n\nconst pluginImpl: FastifyPluginAsync<\n  ServeAngularSSROptions\n> = async (server, options) => {\n  const engine = new AngularNodeAppEngine();\n  const browserDirectory = path.resolve(options.directory, 'browser');\n\n  server.register(fastifyStatic, {\n    root: browserDirectory,\n    serve: false,\n    index: false,\n    redirect: false,\n    maxAge: '1y',\n  });\n\n  const htmlMime = mime.getType('html');\n  if (!htmlMime) throw new Error('invalid operation');\n\n  server.get('*', async (req, reply) => {\n\n    const extension = mime.getType(req.url);\n\n    if (extension && req.url !== '/index.html') {\n      return reply.sendFile(req.url);\n    } else {\n      reply.type(htmlMime);\n      const response = await engine.handle(req.raw);\n      if (response) return writeResponseToNodeResponse(response, reply.raw);\n      else return reply.send();\n    }\n\n  });\n};\n\nexport const serveAngularSSR = fastifyPlugin(pluginImpl, { name: 'serveAngularSSR' });\n```\n\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29188","RelatedDescription":"Open issue \"allow proxy config during ng build when using `outputMode: server`\" (#29188)"},{"Id":"2749409684","IsPullRequest":true,"CreatedAt":"2024-12-19T12:22:54","Actor":"alan-agius4","Number":"29182","RawContent":null,"Title":"test: add `resolve/test/list-exports` to false positive in postinstall scripts check","State":"closed","Body":"\r\n\r\nAdded `resolve/test/list-exports/packages/tests/fixtures/resolve-1/project/test/resolver/multirepo/package.json as a false positive`\r\nSee: https://github.com/angular/angular-cli/actions/runs/12402554909/job/34638018185?pr=29134","Url":"https://github.com/angular/angular-cli/pull/29182","RelatedDescription":"Closed or merged PR \"test: add `resolve/test/list-exports` to false positive in postinstall scripts check\" (#29182)"},{"Id":"2749670230","IsPullRequest":true,"CreatedAt":"2024-12-19T09:20:54","Actor":"alan-agius4","Number":"29186","RawContent":null,"Title":"test: add `--disable-dev-shm-usage` to address `WebDriverError: unknown error: Chrome failed to start: crashed`","State":"closed","Body":"\r\n\r\nThis fixes an issue where protractor integration tests are failing with\r\n\r\n```\r\n[07:38:37] I/direct - Using ChromeDriver directly...\r\n[07:38:39] E/launcher - unknown error: Chrome failed to start: crashed.\r\n  (unknown error: DevToolsActivePort file doesn't exist)\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/29186","RelatedDescription":"Closed or merged PR \"test: add `--disable-dev-shm-usage` to address `WebDriverError: unknown error: Chrome failed to start: crashed`\" (#29186)"},{"Id":"2749527198","IsPullRequest":false,"CreatedAt":"2024-12-19T07:54:36","Actor":"cexbrayat","Number":"29185","RawContent":null,"Title":"Karma builder: support `sass` in `stylePreprocessorOptions` with \"builderMode: application\"","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nIt is currently impossible to define the `sass` option in `stylePreprocessorOptions` for the Karma builder, which makes it impossible to silence Sass deprecations with \"builderMode: application.\"\n\n```json\n\"test\": {\n  \"builder\": \"@angular-devkit/build-angular:karma\",\n  \"options\": {\n  \"builderMode\": \"application\",\n  \"stylePreprocessorOptions\": {\n    \"sass\": {\n      \"silenceDeprecations\": [\"import\"]\n    }\n  },\n```\n\nthrows:\n```\nError: Schema validation failed with the following errors:\n  Data path \"/stylePreprocessorOptions\" must NOT have additional properties(sass).\n```\n\n### Describe the solution you'd like\n\n`stylePreprocessorOptions` allows to set `includePaths` but it would be great to handle `sass` options as well, like the `application` builder does.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29185","RelatedDescription":"Open issue \"Karma builder: support `sass` in `stylePreprocessorOptions` with \"builderMode: application\"\" (#29185)"},{"Id":"2749388834","IsPullRequest":true,"CreatedAt":"2024-12-19T07:15:18","Actor":"alan-agius4","Number":"29181","RawContent":null,"Title":"test: disable WTR e2e test","State":"closed","Body":"Temporary disable this test due to\r\n\r\n```\r\nFailed to launch local browser installed at /home/runner/.cache/bazel/_bazel_runner/f47b8283cc0f5922f9455b06771398a1/sandbox/processwrapper-sandbox/410/execroot/angular_cli/bazel-out/k8-fastbuild/bin/tests/legacy-cli/e2e.npm_node22.sh.runfiles/org_chromium_chromium_linux_x64/chrome-linux/chrome.\r\nThis could be because of a mismatch between the version of puppeteer and Chrome or Chromium.\r\nTry updating either of them, or adjust the executablePath option to point to another browser installation. Use the --puppeteer flag to run tests with bundled compatible version of Chromium.\r\n\r\ndist/test-out/c48222bb-ca34-455e-bc1b-122521e1e71e/app.component.spec.js:\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/29181","RelatedDescription":"Closed or merged PR \"test: disable WTR e2e test\" (#29181)"},{"Id":"2749351607","IsPullRequest":true,"CreatedAt":"2024-12-19T06:38:40","Actor":"angular-robot","Number":"29180","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `d4b71a8` -> `a0f4330` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `d9b105a` -> `c79da6c` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `e0607f3` -> `ac8ee6a` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.2` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.1.0-next.2/19.1.0-next.3) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `4fd8f79` -> `39012f5` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `b6b767f` -> `0f5063f` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `1facaa9` -> `e40a52b` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `78ebc73` -> `19ec33d` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `38ebd42` -> `358b705` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `bc37dd1` -> `5876f7b` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `9a35ccc` -> `c6ab4c1` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `3b0f5ad` -> `dc2b42b` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.1.0-next.2` -> `19.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.1.0-next.2/19.1.0-next.3) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `aec9602` -> `ecacecb` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `99d2afc` -> `b4b7dc9` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `dbafd8c` -> `e348b5e` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `069232c` -> `0dff9a1` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `baaa39c` -> `9365ce2` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.1.0-next.3/19.1.0-next.4) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `cb927ff` -> `226269e` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.1.0-next.3` -> `19.1.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.1.0-next.3/19.1.0-next.4) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.1.0-next.4`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1910-next4-2024-12-18)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.1.0-next.3...19.1.0-next.4)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [57f3550219](https://redirect.github.com/angular/angular/commit/57f3550219f2a57c7c26c9183e48ee66845e0439) | feat | add utility for resolving defer block information to ng global ([#&#8203;59184](https://redirect.github.com/angular/angular/pull/59184)) |\n| [22f191f763](https://redirect.github.com/angular/angular/commit/22f191f76339a08bb8f0f2dfbc60dde0f2e38e73) | feat | extend the set of profiler events ([#&#8203;59183](https://redirect.github.com/angular/angular/pull/59183)) |\n| [1f4ff2fa36](https://redirect.github.com/angular/angular/commit/1f4ff2fa36f5d6240cbc4a40839d3d89501519d8) | fix | avoid triggering `on timer` and `on idle` on the server ([#&#8203;59177](https://redirect.github.com/angular/angular/pull/59177)) |\n| [cf89f14766](https://redirect.github.com/angular/angular/commit/cf89f14766b0ed0204f7012d44a4732fccb35398) | fix | Fix nested timer serialization ([#&#8203;59173](https://redirect.github.com/angular/angular/pull/59173)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [300b141cc8](https://redirect.github.com/angular/angular/commit/300b141cc8652fd714b02f05c943cb79167ea844) | fix | Warn user when transfer state happens more than once ([#&#8203;58935](https://redirect.github.com/angular/angular/pull/58935)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.1.0-next.3`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1910-next3-cotton-curtains-2024-12-18)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.1.0-next.2...19.1.0-next.3)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [62a672af0d](https://redirect.github.com/angular/components/commit/62a672af0d6cb2195633a1cbf6c39472104767f9) | feat | **dialog:** expose cdk dialog docs ([#&#8203;1144](https://redirect.github.com/angular/components/pull/1144)) |\n| [a0a16fc70e](https://redirect.github.com/angular/components/commit/a0a16fc70e1fed7fbb9177c83cf3f670022a321a) | feat | **menu:** expose cdk menu docs ([#&#8203;1142](https://redirect.github.com/angular/components/pull/1142)) |\n| [a141c22e99](https://redirect.github.com/angular/components/commit/a141c22e99467174225f74b6ccac730df92c46c8) | fix | **drag-drop:** resolve projected handles |\n| [454d9f9c09](https://redirect.github.com/angular/components/commit/454d9f9c0937e9e70d018be13a7f452bec776620) | fix | **drag-drop:** stop dragging on touchcancel ([#&#8203;30184](https://redirect.github.com/angular/components/pull/30184)) |\n| [d34d2a2ca3](https://redirect.github.com/angular/components/commit/d34d2a2ca33834a18ca169040f2d81e353c355c5) | fix | **testing:** add code to keyboard events ([#&#8203;30188](https://redirect.github.com/angular/components/pull/30188)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [057ed370aa](https://redirect.github.com/angular/components/commit/057ed370aa1e5ec5c5ffde535d536a19c327e8ef) | fix | **api-theme:** fix nav items hover/focus contrast ([#&#8203;1004](https://redirect.github.com/angular/components/pull/1004)) |\n| [3163040850](https://redirect.github.com/angular/components/commit/3163040850fbb23959dd3ef97de2242e779d5de3) | fix | **docs:** change twitter logo ([#&#8203;1245](https://redirect.github.com/angular/components/pull/1245)) |\n| [4697d8e180](https://redirect.github.com/angular/components/commit/4697d8e18046540ed7b632bc8c94c74d980d7e02) | fix | **list:** enable MacOS select all with command+a ([#&#8203;30183](https://redirect.github.com/angular/components/pull/30183)) |\n| [4620df14f7](https://redirect.github.com/angular/components/commit/4620df14f77d807fe444a11045e61e8de28b4c9b) | fix | **menu:** remove dependency on animations module ([#&#8203;30163](https://redirect.github.com/angular/components/pull/30163)) |\n| [c12b73ee66](https://redirect.github.com/angular/components/commit/c12b73ee6648723fb900607ff8c8095163957e92) | fix | **table:** improve filter predicate efficiency ([#&#8203;30172](https://redirect.github.com/angular/components/pull/30172)) |\n| [04a7652dca](https://redirect.github.com/angular/components/commit/04a7652dcaeffa36d27cb9f61d04bd9772fcab09) | fix | **table:** set border none for header cells on last row ([#&#8203;30193](https://redirect.github.com/angular/components/pull/30193)) |\n| [a0b5546111](https://redirect.github.com/angular/components/commit/a0b5546111a2d28e45e1bc031c0a1b1edc109c23) | fix | **theme:** unselected theme picker |\n| [b924e869c5](https://redirect.github.com/angular/components/commit/b924e869c548850caf9d511a5fa56ab402d435bb) | fix | **theming:** fix not found error in the guide duplicate theming styles document ([#&#8203;30108](https://redirect.github.com/angular/components/pull/30108)) |\n| [c04f84fd3b](https://redirect.github.com/angular/components/commit/c04f84fd3b81dbf5e1e76304845f51d16f365ab3) | fix | **tooltip:** body line height affecting gap ([#&#8203;30164](https://redirect.github.com/angular/components/pull/30164)) |\n\n##### cdk-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [50d906b3e3](https://redirect.github.com/angular/components/commit/50d906b3e3bb841917bafc05bc65ae7c01a57705) | fix | **column-resize:** Previous size was being sent for persistance rather than newly updated size in non-live resize mode. ([#&#8203;30161](https://redirect.github.com/angular/components/pull/30161)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS42Mi42IiwidXBkYXRlZEluVmVyIjoiMzkuNjIuNiIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29180","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29180)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2753598549","IsPullRequest":false,"CreatedAt":"2024-12-21T10:27:38","Actor":"wsacha","Number":"30225","RawContent":null,"Title":"bug(MatDatepicker): Overriding MatDatepickerIntl texts","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello, I'd like to override the closeCalendarLabel for all places in the application where the Material Datepicker is used.\nAccording to the documentation: https://material.angular.io/components/datepicker/overview#localizing-labels-and-messages,\nI've provided my values, but it doesn't seem to work. The new texts are applied only if I provide a custom MatDatepickerIntl in the child component where the MatDatepicker is used. Am I doing something wrong that prevents me from overriding it globally?\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-6vdvpgxv?file=src%2Fmain.ts\nSteps to reproduce:\n1. Override `MatDatepickerIntl` globally  \n2. Use the material datepicker in the child component\n3. Open the datepicker and press TAB to show the close button.\n\n\n### Expected Behavior\n\nOverriding `MatDatepickerIntl` globally applies new labels to all MatDatepicker instances.\n\n### Actual Behavior\n\nOverriding `MatDatepickerIntl` globally does not applies new labels to all MatDatepicker instances.\n\n### Environment\n\n- Angular: 18\n- CDK/Material: 18\n- Browser(s): Firefox, Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, macOS\n","Url":"https://github.com/angular/components/issues/30225","RelatedDescription":"Closed issue \"bug(MatDatepicker): Overriding MatDatepickerIntl texts\" (#30225)"},{"Id":"2753878827","IsPullRequest":true,"CreatedAt":"2024-12-21T10:21:38","Actor":"crisbeto","Number":"30226","RawContent":null,"Title":"fix(cdk/tree): expandAll not expanding all nodes","State":"open","Body":"Fixes that the tree wasn't recursing down and expanding all child nodes when calling `expandAll`.\r\n\r\nFixes #29865.","Url":"https://github.com/angular/components/pull/30226","RelatedDescription":"Open PR \"fix(cdk/tree): expandAll not expanding all nodes\" (#30226)"},{"Id":"2748609492","IsPullRequest":true,"CreatedAt":"2024-12-20T20:12:26","Actor":"kseamon","Number":"30214","RawContent":null,"Title":"perf(material/tooltip): Tiny but measurable optimization to MatToolti…","State":"closed","Body":"…p construction. Defer hooking up to directionality changes until overlay is created.","Url":"https://github.com/angular/components/pull/30214","RelatedDescription":"Closed or merged PR \"perf(material/tooltip): Tiny but measurable optimization to MatToolti…\" (#30214)"},{"Id":"2752870479","IsPullRequest":true,"CreatedAt":"2024-12-20T14:38:05","Actor":"giri3sg","Number":"30224","RawContent":null,"Title":"Fixed displaying external link in component-category-list.html","State":"open","Body":"Before\r\n![image](https://github.com/user-attachments/assets/07fb2ec4-57a5-474f-add2-71dd63e112d7)\r\n\r\nAfter\r\n\r\n![image](https://github.com/user-attachments/assets/1ab36f4f-094a-45a5-8be4-2825bd1da69e)","Url":"https://github.com/angular/components/pull/30224","RelatedDescription":"Open PR \"Fixed displaying external link in component-category-list.html\" (#30224)"},{"Id":"2746735150","IsPullRequest":false,"CreatedAt":"2024-12-20T11:13:29","Actor":"diegoquirino","Number":"30200","RawContent":null,"Title":"bug(COMPONENT): MatSnackBar padding to the box shadow rendering a container with a custom background color","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nMatSnackBar padding to the box shadow rendering a container with a custom background color issue\n\n### Description\n\nThe MatSnackBar component in Angular Material 19 appears to have visual rendering issues related to adding padding to the box shadow with a container with a custom background color style.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ryes6wpj?file=src%2Fnotification%2Fnotification.component.ts\nSteps to reproduce:\n1. Trigger a MatSnackBar with a container with a custom background color style.\n2. Observe the component's visual rendering (as shown in the StackBlitz).\n\n\n### Expected Behavior\n\nThe MatSnackBar should render consistent shadow without visual padding from the message container with a custom background color style.\n\n### Actual Behavior\n\n- The snack bar's box shadow appears with padding from the message container with a custom background color style.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.3\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30200","RelatedDescription":"Closed issue \"bug(COMPONENT): MatSnackBar padding to the box shadow rendering a container with a custom background color\" (#30200)"},{"Id":"2752361306","IsPullRequest":false,"CreatedAt":"2024-12-20T09:52:31","Actor":"RafalSzczuka","Number":"30223","RawContent":null,"Title":"bug(Timepicker): timepicker control error state too early","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nTimepicker dropdown marks touched state differently than regular select dropdown or datepicker select. It displays an error state too early - just after dropdown time option click. It marks control as invalid for just a blink of a second and then it's valid again. It's unexpected behavior.\nAlso - when I subscribe to `statusChanges` stream - timepicker control starts with initial value. It's not how other form controls behave - other controls emits status change.\nI'm using the default `ErrorStateMatcher` and `Validators.required` validator.\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/6sygygc8-fabhxjua](url)\nSteps to reproduce:\n1. Click on timepicker input\n2. Click (and hold) any option\n3. See that input is marked as invalid (error border)\n4. Release mouse click - error goes away\n\n\n### Expected Behavior\n\nIt should mark input error state the same way as it works for other material form controls\n\n### Actual Behavior\n\nIt's marking an error state too early, even if a valid option is selected.\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30223","RelatedDescription":"Open issue \"bug(Timepicker): timepicker control error state too early\" (#30223)"},{"Id":"2752273550","IsPullRequest":false,"CreatedAt":"2024-12-20T09:06:15","Actor":"GuidoHermans","Number":"30222","RawContent":null,"Title":"bug(CDK/Menu): MenuItems as Content projection loos keyboard actions","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWe are incorporating the CDK Menu in our app.\nWith use of content projection we try to extract the cdk references to a 'dropdown component', so the developer doesn't need to know of the CDK.\n\nWhen we use content projection, it looks like the cdkMenuItemDirective is not completely activating the keyboard gestures.\nWithout content projection everything works (as expected)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ybcawwsc?\nSteps to reproduce:\n1. Klik on the site\n2. Use Tab to active the main button\n3. Use arrow keys to navigate to the submenu\n4. See that Test 1 & Test 2 are not navigateble and Test 3 and Test 4 are.\n\n\n### Expected Behavior\n\nTest 1 and Test 2 should be navigatable with keyboard.\n\n### Actual Behavior\n\nNo keyboard navigation on content projected in the `<ng-template></ng-template>`\n\n### Environment\n\n```\nAngular CLI: 19.0.5\nNode: 20.17.0\nPackage Manager: npm 8.19.2\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.5\n@angular-devkit/build-angular   19.0.5\n@angular-devkit/core            19.0.5\n@angular-devkit/schematics      19.0.5\n@angular/cli                    19.0.5\n@schematics/angular             19.0.5\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```","Url":"https://github.com/angular/components/issues/30222","RelatedDescription":"Open issue \"bug(CDK/Menu): MenuItems as Content projection loos keyboard actions\" (#30222)"},{"Id":"2752070966","IsPullRequest":false,"CreatedAt":"2024-12-20T06:52:52","Actor":"VILLAN3LL3","Number":"30221","RawContent":null,"Title":"bug(angular material): css variables get lost when using multiple themes in angular material","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nusing light and dark theme leads to lost styles and css variables\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ajqpjxrh?file=src%2Fmain.ts\nSteps to reproduce:\n1. press \"change theme\".\n2. check the stylings (tool tip submit button +  click on menu button + styling of mat card header, ...)\n\n\n### Expected Behavior\n\neverything is styled properly in light or dark mode\n\n### Actual Behavior\n\nsome styles don't seem to be set correctly. See for example the menu overlay or the submit button tooltip. It seems that css variables have been lost, for example --mat-menu-container-shape.\n\n### Environment\n\n- Angular: ^18.2\n- CDK/Material: ^18.2\n- Browser(s): n/a\n- Operating System (e.g. Windows, macOS, Ubuntu): n/a\n","Url":"https://github.com/angular/components/issues/30221","RelatedDescription":"Open issue \"bug(angular material): css variables get lost when using multiple themes in angular material\" (#30221)"},{"Id":"2750955970","IsPullRequest":true,"CreatedAt":"2024-12-19T17:02:47","Actor":"angular-robot","Number":"30219","RawContent":null,"Title":"build: update angular shared dev-infra code to e8ee8c5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| angular/dev-infra | action | digest | `db91da4` -> `e8ee8c5` |\n| dev-infra | http_archive | digest | `9bc16c6` -> `e8ee8c5` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/components/pull/30219","RelatedDescription":"Open PR \"build: update angular shared dev-infra code to e8ee8c5\" (#30219)"},{"Id":"2748753661","IsPullRequest":true,"CreatedAt":"2024-12-19T16:49:04","Actor":"kseamon","Number":"30215","RawContent":null,"Title":"perf(cdk-experimental/column-resize): Use ResizeObserver to avoid lay…","State":"closed","Body":"…out thrashing","Url":"https://github.com/angular/components/pull/30215","RelatedDescription":"Closed or merged PR \"perf(cdk-experimental/column-resize): Use ResizeObserver to avoid lay…\" (#30215)"},{"Id":"2750668994","IsPullRequest":true,"CreatedAt":"2024-12-19T15:28:36","Actor":"andrewseguin","Number":"30218","RawContent":null,"Title":"Sync missing commits","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30218","RelatedDescription":"Closed or merged PR \"Sync missing commits\" (#30218)"},{"Id":"2744996031","IsPullRequest":false,"CreatedAt":"2024-12-19T15:10:44","Actor":"smil-thakur","Number":"30196","RawContent":null,"Title":"bug(COMPONENT): Sort Header","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nWhen focusing on sort header using \"tab\" key previously on version 18 the sort headers were visible with less opacity but on version 19 the header icons are not visible\n\nold;:\n![Image](https://github.com/user-attachments/assets/a430931f-32d9-4327-a772-d9f8676c6578)\n\nnew:\n![Image](https://github.com/user-attachments/assets/b0b26a2c-8fd0-4c64-b653-160396472beb)\n\nas you can see on new one the header icons not visible on focus\n\n\n\n### Reproduction\n\nhttps://material.angular.io/components/sort/overview\n\ncheck over here and compare with\n\nhttps://v18.material.angular.io/components/sort/overview\n\n### Expected Behavior\n\nexpected behavior should be sort icon should be visible with some opacity on focus and on click or enter press it should be visible with full opacity\n\n### Actual Behavior\n\nsort icon is not at all visible on focus\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\n","Url":"https://github.com/angular/components/issues/30196","RelatedDescription":"Closed issue \"bug(COMPONENT): Sort Header\" (#30196)"},{"Id":"2749593182","IsPullRequest":true,"CreatedAt":"2024-12-19T15:10:42","Actor":"crisbeto","Number":"30217","RawContent":null,"Title":"fix(material/sort): show arrow on focus","State":"closed","Body":"Fixes that the sort header wasn't showing the arrow when it's focused.\r\n\r\nFixes #30196.","Url":"https://github.com/angular/components/pull/30217","RelatedDescription":"Closed or merged PR \"fix(material/sort): show arrow on focus\" (#30217)"},{"Id":"2749400489","IsPullRequest":false,"CreatedAt":"2024-12-19T08:23:14","Actor":"smil-thakur","Number":"30216","RawContent":null,"Title":"bug(Paginator): disabled paginator icon focues","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nif the button for pagination is disabled it should not be focused using \"tab\" key, on material 19 upgrade disabled pagination button is focusable which is not expected\n\nv19:\n![Image](https://github.com/user-attachments/assets/618eb5a8-a73c-4ae0-a6d0-9fcf5f526b7d)\n\nv18:\n\n![Image](https://github.com/user-attachments/assets/52fd008c-1643-4691-bf4f-35c4a66b6f54)\n\n\n### Reproduction\n\nSteps to reproduce:\n1. https://material.angular.io/components/paginator/overview go here press tab key and see disabled pagination button is focusable\n2.\n\n\n### Expected Behavior\n\nit should be focusable and should be skipped like on\nhttps://v18.material.angular.io/components/paginator/overview\n\n### Actual Behavior\n\nthe disabled button of pagination is not skipped and is focused\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System: windows\n","Url":"https://github.com/angular/components/issues/30216","RelatedDescription":"Closed issue \"bug(Paginator): disabled paginator icon focues\" (#30216)"},{"Id":"2748521612","IsPullRequest":true,"CreatedAt":"2024-12-19T06:34:28","Actor":"alexeagle","Number":"30213","RawContent":null,"Title":"build: point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for #30208","Url":"https://github.com/angular/components/pull/30213","RelatedDescription":"Closed or merged PR \"build: point to the new material.angular.io workspace\" (#30213)"},{"Id":"2748511957","IsPullRequest":true,"CreatedAt":"2024-12-18T19:09:17","Actor":"crisbeto","Number":"30212","RawContent":null,"Title":"Roll back event changes","State":"closed","Body":"Rolls back the changes from https://github.com/angular/components/pull/30195, because it broke some internal clients.","Url":"https://github.com/angular/components/pull/30212","RelatedDescription":"Closed or merged PR \"Roll back event changes\" (#30212)"},{"Id":"2748509832","IsPullRequest":true,"CreatedAt":"2024-12-18T18:53:39","Actor":"amysorto","Number":"30211","RawContent":null,"Title":"Bump version to \"v19.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30211","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.3\" with changelog.\" (#30211)"},{"Id":"2748493114","IsPullRequest":true,"CreatedAt":"2024-12-18T18:48:49","Actor":"alexeagle","Number":"30210","RawContent":null,"Title":"build(bazel): point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for #30208","Url":"https://github.com/angular/components/pull/30210","RelatedDescription":"Closed or merged PR \"build(bazel): point to the new material.angular.io workspace\" (#30210)"},{"Id":"2748445847","IsPullRequest":true,"CreatedAt":"2024-12-18T18:36:11","Actor":"alexeagle","Number":"30209","RawContent":null,"Title":"build(bazel): point to the new material.angular.io workspace","State":"closed","Body":"Bazel needs to be told about the nested workspace, to avoid descending into that folder.\r\n\r\nFollowup for https://github.com/angular/components/pull/30208","Url":"https://github.com/angular/components/pull/30209","RelatedDescription":"Closed or merged PR \"build(bazel): point to the new material.angular.io workspace\" (#30209)"},{"Id":"2748399370","IsPullRequest":true,"CreatedAt":"2024-12-18T17:44:06","Actor":"alexeagle","Number":"30208","RawContent":null,"Title":"chore: merge material.angular.io","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30208","RelatedDescription":"Closed or merged PR \"chore: merge material.angular.io\" (#30208)"},{"Id":"2748365433","IsPullRequest":true,"CreatedAt":"2024-12-18T17:21:00","Actor":"amysorto","Number":"30207","RawContent":null,"Title":"docs: release notes for the v19.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30207","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.4 release\" (#30207)"},{"Id":"2748362757","IsPullRequest":true,"CreatedAt":"2024-12-18T17:19:06","Actor":"amysorto","Number":"30206","RawContent":null,"Title":"Bump version to \"v19.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30206","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.4\" with changelog.\" (#30206)"},{"Id":"2747797277","IsPullRequest":true,"CreatedAt":"2024-12-18T17:11:00","Actor":"singhimalaya","Number":"30204","RawContent":null,"Title":"docs(material/components): fix typos in material components","State":"closed","Body":"This pr fixes a similar typo in below material components:\r\n\r\n1. `autocomplete`\r\n2. `chips`\r\n3. `list`\r\n4. `select`\r\n\r\n### Issue\r\nA typo \"**Wheter**\" in above mentioned components.\r\n\r\n### Fix\r\n\r\nUpdated \"**Wheter**\" to \"**Whether**\".","Url":"https://github.com/angular/components/pull/30204","RelatedDescription":"Closed or merged PR \"docs(material/components): fix typos in material components\" (#30204)"},{"Id":"2745529081","IsPullRequest":true,"CreatedAt":"2024-12-18T17:03:26","Actor":"andrewseguin","Number":"30198","RawContent":null,"Title":"fix(material/sort): avoid center align for sort header","State":"closed","Body":"Copied with #27494 which has failing CLA","Url":"https://github.com/angular/components/pull/30198","RelatedDescription":"Closed or merged PR \"fix(material/sort): avoid center align for sort header\" (#30198)"},{"Id":"2746974827","IsPullRequest":true,"CreatedAt":"2024-12-18T15:18:25","Actor":"crisbeto","Number":"30201","RawContent":null,"Title":"refactor(multiple): replace fromEvent usages","State":"closed","Body":"Replaces all of our usages of the rxjs `fromEvent` with direct event listeners going through the renderer. This has a few benefits:\r\n* In most cases it made our code simpler and easier to follow.\r\n* By going through the renderer, other tooling can hook into it (e.g. the tracing service).\r\n* It reduces our reliance on rxjs.\r\n\r\nI also ended up cleaning up the fragile testing setup in `cdk/menu` which would've broken any time we introduce a new `inject` call.","Url":"https://github.com/angular/components/pull/30201","RelatedDescription":"Closed or merged PR \"refactor(multiple): replace fromEvent usages\" (#30201)"},{"Id":"2747499110","IsPullRequest":true,"CreatedAt":"2024-12-18T14:06:26","Actor":"num13ru","Number":"30202","RawContent":null,"Title":"docs(material/theming): fix typo in custom theme guide","State":"closed","Body":"#### Summary:\r\nThis PR fixes a syntax error in the usage of the `mat.theme` mixin in the SCSS files of the project. The error occurred due to incorrect wrapping of the Sass map passed as an argument to the `mat.theme` mixin. Specifically, the map was not correctly enclosed in an additional pair of parentheses, leading to a compilation error.\r\n\r\n```\r\n✘ [ERROR] expected \")\".\r\n   ╷\r\n36 │         color: (\r\n```\r\n\r\n#### Fix:\r\n- Wrapped the theme configuration map inside an additional set of parentheses for proper syntax in the `@include mat.theme()` function.","Url":"https://github.com/angular/components/pull/30202","RelatedDescription":"Closed or merged PR \"docs(material/theming): fix typo in custom theme guide\" (#30202)"},{"Id":"2747850020","IsPullRequest":false,"CreatedAt":"2024-12-18T13:39:21","Actor":"sdedieu","Number":"30205","RawContent":null,"Title":"bug(table): Specifying max-width with % on a table column doesn't work","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello 👋\n\nIt might be a duplicated issue, but I couldn't find the exact same in the previous ones....\n\nI'd like to specify a `max-width: 20%` on a table column. However it does not seems work.\n\nWhat I'm I missing ? \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/eqepaugy-ht92gcfb?file=src%2Fexample%2Ftable-basic-example.html\nSteps to reproduce:\n1. Open the StackBlitz\n2. Resize the Symbol column (it is not supposed to be wider than 5%, yet it can)\n\n\n### Expected Behavior\n\nBeing able to specify a `max-width` in `%` for some columns.\n\n### Actual Behavior\n\n`max-width` in `%` on `<table mat-table>` columns are not taken into account.\n\n### Environment\n\n- Angular: 19, 18, 17, 16, 15\n- CDK/Material: 19, 18, 17, 16, 15\n- Browser(s): Chrome, Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac\n","Url":"https://github.com/angular/components/issues/30205","RelatedDescription":"Open issue \"bug(table): Specifying max-width with % on a table column doesn't work\" (#30205)"},{"Id":"2747607622","IsPullRequest":false,"CreatedAt":"2024-12-18T11:52:43","Actor":"reuse-ay","Number":"30203","RawContent":null,"Title":"bug(COMPONENT): Inconsistency in behavior of a[mat-button] and a[mat-menu-item] when disabled","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis may be a feature request.\n\n\nWhen a[mat-button] is disabled, if you right-click it, the menu will be the normal one, but if you right-click a[mat-menu-item], the options for clicking a link will be displayed, and you can actually navigate to the page.\n\n\n\n### Reproduction\n\nhttps://github.com/reuse-ay/angular-mat-a.git\n\n### Expected Behavior\n\nWhen a[mat-menu-item] is disabled, I don’t want the option for the link to be displayed.\n\n### Actual Behavior\n\noption for the link to be displayed.\n\n### Environment\n\n- Angular:19\n- CDK/Material:19\n- Browser(s):chrome\n- Operating System (e.g. Windows, macOS, Ubuntu):windows\n","Url":"https://github.com/angular/components/issues/30203","RelatedDescription":"Open issue \"bug(COMPONENT): Inconsistency in behavior of a[mat-button] and a[mat-menu-item] when disabled\" (#30203)"},{"Id":"2745659309","IsPullRequest":true,"CreatedAt":"2024-12-17T18:20:37","Actor":"andrewseguin","Number":"30199","RawContent":null,"Title":"docs: update system var prefix","State":"closed","Body":"System variables are prefixed with \"mat-sys\", not \"sys\" (this was the case in v18)\r\n\r\nCurrently the docs use the old prefix\r\n\r\n![image](https://github.com/user-attachments/assets/a0eda868-eb14-4d5e-83d5-32bf3467a825)\r\n","Url":"https://github.com/angular/components/pull/30199","RelatedDescription":"Closed or merged PR \"docs: update system var prefix\" (#30199)"},{"Id":"2745015894","IsPullRequest":false,"CreatedAt":"2024-12-17T13:57:28","Actor":"goyaltushar92","Number":"30197","RawContent":null,"Title":"feat(mat-menu): Add content menu trigger for mat menu","State":"open","Body":"### Feature Description\n\nCurrently there is not directive to open mat-menu using context menu, I think we should add `MatCotextMenuTriggerFor` directive.\n\n### Use Case\n\nit will provide inbuilt functionality for enabling context menu","Url":"https://github.com/angular/components/issues/30197","RelatedDescription":"Open issue \"feat(mat-menu): Add content menu trigger for mat menu\" (#30197)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-22T03:30:02.764651Z","RunDurationInMilliseconds":1798}