{"Data":{"Angular-Issues":{"Issues":[{"Id":"2639625681","IsPullRequest":false,"CreatedAt":"2024-11-07T00:56:00","Actor":"pishchela","Number":"58536","RawContent":null,"Title":"Angular 18 migration issue: Replace deprecated Http modules doesn't work correctly","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning `ng update` on an Angular 17 project with unit tests containing both `HttpClientModule` and `HttpClientTestingModule`. Result of the \"Replace deprecated HTTP modules with provider functions\" schematics is invalid.\n\nBefore:\n\n```\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\n\ndescribe('AppComponent', () => {\n\n  beforeEach(async (): void => {\n    await TestBed.configureTestingModule({\n      imports: [\n        HttpClientModule,\n        HttpClientTestingModule,\n        AppComponent,\n      ],\n      providers: [\n      ],\n    }).compileComponents();\n  });\n});\n```\n\nAfter:\n\n\n```\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { provideHttpClientTesting } from '@angular/common/http/testing';\n\ndescribe('AppComponent', () => {\n\n  beforeEach(async (): void => {\n    await TestBed.configureTestingModule({\n    imports: [HttpClientModule,\n        AppComponent],\n    providers: [\n        provideHttpClient(withInterceptorsFromDi()),\n        provideHttpClientTesting()\n    ]\n}{\n    imports: [HttpClientTestingModule,\n        AppComponent],\n    providers: [\n        provideHttpClient(withInterceptorsFromDi())\n    ]\n}).compileComponents();\n  });\n}\n});\n```\n\nExpected result would be TestBed.configureTestingModule with single object inside and replaced deprecated modules with provider functions\n\n\n\n### Minimal Reproduction\n\n1. command run:  `npx @angular/cli@17 new angular-18-migration-issues`\n2. Use both `HttpClientModule` and `HttpClientTestingModule` in `TestBed.configureTestingModule`\n3. command run: `ng update @angular/core@18 @angular/cli@18`\n\n[Example commit](https://github.com/pishchela/angular-18-migration-issues/commit/468ca798497402665db1f68762f6664cf237b0d2#diff-002e1a20416b0120fbe06390465dd02fb2d00c771c5ae171766211daef759308)\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nAngular CLI: 18.2.8\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.8\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58536","RelatedDescription":"Open issue \"Angular 18 migration issue: Replace deprecated Http modules doesn't work correctly\" (#58536)"},{"Id":"2638873889","IsPullRequest":true,"CreatedAt":"2024-11-06T18:20:28","Actor":"thePunderWoman","Number":"58535","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/58535","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#58535)"},{"Id":"2638870142","IsPullRequest":true,"CreatedAt":"2024-11-06T18:18:43","Actor":"thePunderWoman","Number":"58534","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58534","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#58534)"},{"Id":"2638827614","IsPullRequest":true,"CreatedAt":"2024-11-06T17:56:13","Actor":"thePunderWoman","Number":"58533","RawContent":null,"Title":"docs: release notes for the v18.2.11 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/58533","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.11 release\" (#58533)"},{"Id":"2638819130","IsPullRequest":true,"CreatedAt":"2024-11-06T17:53:34","Actor":"thePunderWoman","Number":"58532","RawContent":null,"Title":"Bump version to \"v18.2.11\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58532","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.11\" with changelog.\" (#58532)"},{"Id":"2638618678","IsPullRequest":true,"CreatedAt":"2024-11-06T16:46:40","Actor":"josephperrott","Number":"58530","RawContent":null,"Title":"fix(core): this is a test","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58530","RelatedDescription":"Closed or merged PR \"fix(core): this is a test\" (#58530)"},{"Id":"2638632092","IsPullRequest":false,"CreatedAt":"2024-11-06T16:35:47","Actor":"naveedahmed1","Number":"58531","RawContent":null,"Title":"Gracefully Handle Duplicate Server Provider Imports in SSR Configuration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nYes\n\n### Description\n\n**Description**: \n\nI have an older Angular application that I’ve kept updated to the latest Angular versions. Recently, I encountered an issue related to server-side rendering (SSR) when updating my server configuration.\n\n**Problem**\nBefore the introduction of `provideServerRendering()`, I used the following providers in my app's server configuration file for SSR:\n\n```\nproviders: [\n  provideAnimationsAsync(\"noop\"),\n  importProvidersFrom(\n    ServerModule\n  )\n]\n```\n\nWith the introduction of `provideServerRendering()` in recent versions,  I updated my providers array to include `provideServerRendering()`, following the new SSR support practices. However, the [SSR documentation](https://angular.dev/guide/ssr) currently doesn’t provide any details about provideServerRendering().\n\nMy updated configuration looked like this:\n\n```\nproviders: [\n  provideServerRendering(),\n  provideAnimationsAsync(\"noop\"),\n  importProvidersFrom(\n    ServerModule\n  )\n]\n```\n\nAfter making this update, I noticed that Angular SSR was adding two `<script id=\"app-state\" type=\"application/json\">` tags to the HTML returned from the server:\n\n```\n<script id=\"app-state\" type=\"application/json\">...</script>\n<script id=\"app-state\" type=\"application/json\">...</script>\n```\n\n\n**Investigation**\nAfter some debugging, I discovered that the duplication was due to both provideServerRendering() and importProvidersFrom(ServerModule) setting up the same SSR-related providers.\n\nIn reviewing the Angular source code, I found that provideServerRendering() internally imports several providers, including:\n\n- provideNoopAnimations(), whereas my configuration used provideAnimationsAsync(\"noop\")\n- TRANSFER_STATE_SERIALIZATION_PROVIDERS\n- SERVER_RENDER_PROVIDERS\n- SERVER_HTTP_PROVIDERS\n\n**Source links:**\n\n[provideServerRendering() implementation](https://github.com/angular/angular/blob/4ef11c987de2c155f711af04d1650719f00a204d/packages/platform-server/src/provide_server.ts#L34)\n[Additional server providers](https://github.com/angular/angular/blob/4ef11c987de2c155f711af04d1650719f00a204d/packages/platform-server/src/server.ts#L77)\n\n**Solution**\nTo resolve the issue, I removed `importProvidersFrom(ServerModule)` from my providers array:\n\n```\nproviders: [\n  provideServerRendering()\n]\n\n```\n\nThis change resolved the duplication issue, and only one `<script id=\"app-state\" type=\"application/json\">` tag was rendered.\n\n**Suggested Improvement**\nIt would be beneficial if Angular handled duplicate SSR providers more gracefully, perhaps by:\n\n- Making subsequent instances of the same server-related provider a noop, or\n- Displaying a warning to notify developers about potential duplication issues, enhancing the developer experience.\n\nAdditionally, an updated SSR guide would be extremely helpful. A guide that explains how provideServerRendering() works behind the scenes, detailing what it imports and how it should be used in conjunction with (or in place of) ServerModule, would clear up any confusion around required SSR configurations.\n\nThanks for considering this request to improve SSR configuration clarity and developer experience!\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\nI noticed that Angular SSR was adding two `<script id=\"app-state\" type=\"application/json\">` tags to the HTML returned from the server:\n\n```\n<script id=\"app-state\" type=\"application/json\">...</script>\n<script id=\"app-state\" type=\"application/json\">...</script>\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-rc.0\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.0-rc.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, google-maps, material, platform-browser\n... platform-browser-dynamic, platform-server, pwa, router\n... service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0\n@angular-devkit/schematics      19.0.0-rc.0\n@angular/fire                   18.0.1\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58531","RelatedDescription":"Open issue \"Gracefully Handle Duplicate Server Provider Imports in SSR Configuration\" (#58531)"},{"Id":"2638540059","IsPullRequest":true,"CreatedAt":"2024-11-06T16:03:53","Actor":"clydin","Number":"58528","RawContent":null,"Title":"docs: add component HMR information to application build system","State":"open","Body":"Add background and usage information for the new component HMR features available in v19.","Url":"https://github.com/angular/angular/pull/58528","RelatedDescription":"Open PR \"docs: add component HMR information to application build system\" (#58528)"},{"Id":"2638035220","IsPullRequest":true,"CreatedAt":"2024-11-06T15:30:21","Actor":"devversion","Number":"58525","RawContent":null,"Title":"refactor(migrations): speed up code refactoring action for queries","State":"closed","Body":"We were not properly passing around the TCB full program optimization, so TCB generation was done per individual file. This significantly slowed down reference resolution.","Url":"https://github.com/angular/angular/pull/58525","RelatedDescription":"Closed or merged PR \"refactor(migrations): speed up code refactoring action for queries\" (#58525)"},{"Id":"2638334180","IsPullRequest":true,"CreatedAt":"2024-11-06T14:57:19","Actor":"clydin","Number":"58527","RawContent":null,"Title":"refactor(core): always create new renderer when applying HMR metadata update","State":"open","Body":"The DOM renderer classes perform initialization that captures state from the component definition during construction. To ensure that the state is kept synchronized with any newly applied metadata from an HMR `applyMetadata` call, each renderer is now recreated during the apply process. This also allows inline component styles to be updated in cases where external component stylesheets may not be viable.","Url":"https://github.com/angular/angular/pull/58527","RelatedDescription":"Open PR \"refactor(core): always create new renderer when applying HMR metadata update\" (#58527)"},{"Id":"2638208958","IsPullRequest":false,"CreatedAt":"2024-11-06T14:12:09","Actor":"kinkaz","Number":"58526","RawContent":null,"Title":"Issue with SSR: intermittent errors under load","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using SSR in my app, we intermittently encounter error pages under load. Here are two examples of errors observed:\n\n- TypeError: this._platformLocation.getBaseHrefFromDOM is not a function\n- ReferenceError: document is not defined\n\nI think it's related to the SSR failing (crash).\n\n**Steps to Reproduce**\n\nOpen the [website](https://test.particip.swiss/passer-mon-permis/permis-de-conduire-voiture-b) and hit the refresh button ~10 times quickly. This reliably triggers the errors, simulating the load scenario.\n\n**Background**\n- Before updating Angular from 18.2.4 to 18.2.10, SSR would fail under load, and restarting the server (`pm2 restart`) was required to resolve it.\n- After updating to 18.2.10 (following this [Angular PR](https://github.com/angular/angular/pull/58112)), the error still occurs, but now a single page refresh is enough to resolve it, so a server restart is no longer needed. It still a big issue as I guess users won't necessarily try to refresh the page on their own.\n\n**Additional Information**\n\nThe application uses Nx and pm2 to start the server on the hosting service.\n\nAny insights on what could be causing this intermittent error would be greatly appreciated.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://test.particip.swiss/passer-mon-permis/permis-de-conduire-voiture-b\n\n### Please provide the exception or error you saw\n\nReferenceError: document is not defined\n    at Object.Mx [as useFactory] (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:35:29288)\n    at Object.r [as factory] (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:12430)\n    at Ks.hydrate (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:11571)\n    at Ks.get (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:10685)\n    at hT (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2448)\n    at re (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2527)\n    at Z (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:5:2571)\n    at new e (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:34:80191)\n    at Object.factory (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:34:81271)\n    at Ks.hydrate (file:///home/clients/xyz/sites/test.particip.swiss/server/chunk-3O22WMVP.mjs:8:11571)\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.10\nNode: 20.10.0\nPackage Manager: npm 10.2.3\nOS: darwin arm64\n\nAngular: 18.2.10\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... elements, forms, language-service, localize\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.6\n@angular-devkit/build-angular   18.2.10\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/fire                   18.0.1\n@schematics/angular             18.2.10\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\nI'm using Nx and pm2 the start the server on the hosting service.\n\nHere's my server.ts : \n\n```typescript\nimport 'zone.js/node';\nimport { CommonEngine } from '@angular/ssr';\nimport express from 'express';\nimport { dirname, join, resolve } from 'node:path';\nimport bootstrap from './src/main.server';\nimport { environment } from './src/environments/environment';\nimport { fileURLToPath } from 'node:url';\nimport { APP_BASE_HREF } from '@angular/common';\n\n// The Express app is exported so that it can be used by serverless Functions.\nexport function app(): express.Express {\n  const server = express();\n  const serverDistFolder = dirname(fileURLToPath(import.meta.url));\n  const browserDistFolder = resolve(serverDistFolder, '../browser');\n  const indexHtml = join(serverDistFolder, 'index.server.html');\n\n  const commonEngine = new CommonEngine();\n\n  server.set('view engine', 'html');\n  server.set('views', browserDistFolder);\n\n  // Example Express Rest API endpoints\n  // server.get('/api/**', (req, res) => { });\n  // Serve static files from /browser\n  server.get(\n    '*.*',\n    express.static(browserDistFolder, {\n      maxAge: '1y',\n      index: 'index.html',\n    }),\n  );\n\n  // All regular routes use the Angular engine\n  server.get('*', (req, res, next) => {\n    const { protocol, originalUrl, baseUrl, headers } = req;\n\n    commonEngine\n      .render({\n        bootstrap,\n        documentFilePath: indexHtml,\n        url: `${protocol}://${headers.host}${originalUrl}`,\n        publicPath: browserDistFolder,\n        providers: [{ provide: APP_BASE_HREF, useValue: baseUrl }],\n      })\n      .then((html) => res.send(html))\n      .catch((err) => next(err));\n  });\n\n  return server;\n}\n\nfunction run(): void {\n  const port = environment.ssrPort;\n\n  // Start up the Node server\n  const server = app();\n  server.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\n\nrun();\n``` ","Url":"https://github.com/angular/angular/issues/58526","RelatedDescription":"Open issue \"Issue with SSR: intermittent errors under load\" (#58526)"},{"Id":"2635540578","IsPullRequest":true,"CreatedAt":"2024-11-06T12:04:34","Actor":"devversion","Number":"58515","RawContent":null,"Title":"fix(migrations): properly bundle shared compiler code into migrations","State":"closed","Body":"See individual commits\r\n\r\nRelated to #58455 ","Url":"https://github.com/angular/angular/pull/58515","RelatedDescription":"Closed or merged PR \"fix(migrations): properly bundle shared compiler code into migrations\" (#58515)"},{"Id":"2634688987","IsPullRequest":false,"CreatedAt":"2024-11-06T12:02:41","Actor":"web-dave","Number":"58509","RawContent":null,"Title":"@for with dublicate entries and filter pipe kills browser","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI accidentally choose the wrong key for track in a @for, then my browser dies.\n\nThe problem get worse if the list of elements gets longer.\n\nHow to reproduce:\n\nGo to the input.\nStart typing (to filter the list)\nBrowser freeze.\n\nIf the list of user is about 150 ist freeze fo a few secunds.\nif it is longer than 300 users, it gets worse.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-humfi8\n\n### Please provide the exception or error you saw\n\n`NG0955`\n\nBrowser freeze for few seconds or stops working at all\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.10\nNode: 18.19.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.9\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.10\n@angular-devkit/build-angular   18.2.10\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/cli                    18.2.10\n@schematics/angular             18.2.10\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58509","RelatedDescription":"Closed issue \"@for with dublicate entries and filter pipe kills browser\" (#58509)"},{"Id":"2637526766","IsPullRequest":true,"CreatedAt":"2024-11-06T12:02:40","Actor":"crisbeto","Number":"58521","RawContent":null,"Title":"fix(core): avoid slow stringification when checking for duplicates in dev mode","State":"closed","Body":"When we check for duplicates in dev mode, we end up stringifying an `LView` even if we don't report an error. This can be expensive in large views.\r\n\r\nThese changes work around the issue by only generating the string when we have an error to throw.\r\n\r\nFixes #58509.","Url":"https://github.com/angular/angular/pull/58521","RelatedDescription":"Closed or merged PR \"fix(core): avoid slow stringification when checking for duplicates in dev mode\" (#58521)"},{"Id":"2637768982","IsPullRequest":false,"CreatedAt":"2024-11-06T11:05:29","Actor":"alan-agius4","Number":"58524","RawContent":null,"Title":"External links are excluded from API reference descriptions","State":"closed","Body":"### Describe the problem that you experienced\n\nExternal links are excluded from API reference descriptions\n\n**Example**\n```ts\n/**\n * Injection token for response initialization options.\n *\n * Use this token to provide response options for configuring or initializing\n * HTTP responses in server-side rendering or API endpoints.\n * \n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response | `ResponseInit` on MDN}\n * \n * @developerPreview\n */\nexport declare const RESPONSE_INIT: InjectionToken<ResponseInit>;\n```\n\n**Results**\n![Image](https://github.com/user-attachments/assets/0655e5d5-9019-4db3-b22a-0b2b65228e5a)\n","Url":"https://github.com/angular/angular/issues/58524","RelatedDescription":"Closed issue \"External links are excluded from API reference descriptions\" (#58524)"},{"Id":"2637653874","IsPullRequest":true,"CreatedAt":"2024-11-06T10:26:38","Actor":"alan-agius4","Number":"58523","RawContent":null,"Title":"docs(docs-infra): add support for `@remarks`","State":"open","Body":"In TSDoc, we currently handle the `@usageNotes` annotation, but this is not a standard TSDoc tag. Instead, the `@remarks` annotation is the correct standard, which is used in the Angular CLI repo and on the SSR package.\r\n\r\nThis change ensures that `@remarks` is treated the same as `@usageNotes` during the transform process.\r\n","Url":"https://github.com/angular/angular/pull/58523","RelatedDescription":"Open PR \"docs(docs-infra): add support for `@remarks`\" (#58523)"},{"Id":"2637631879","IsPullRequest":false,"CreatedAt":"2024-11-06T08:58:32","Actor":"Totati","Number":"58522","RawContent":null,"Title":"bug(timepicker): Timepicker integration with datepicker does not work when Reactive forms are used","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe new timepicker component does not integrate well with datepicker when Reactive forms are used because of Angular's bad support of binding a FormControl to multiple inputs.\n\nRelated issues:\nhttps://github.com/angular/angular/issues/58300\nhttps://github.com/angular/angular/issues/51239\nhttps://github.com/angular/angular/issues/50957\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/7zqfws)\nSteps to reproduce:\n1. Set time input in the \"Reactive\" fieldset and blur it.\n2. Date does not update\n\n\n### Expected Behavior\n\nShould behave like the `[(ngModel)]` version. \n\n### Actual Behavior\n\nDate input does not update.\n\n### Environment\n\nAngular CLI: 19.0.0-rc.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0-rc.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, localize, material, material-moment-adapter\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0 (cli-only)\n@angular-devkit/schematics      19.0.0-rc.0\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.4.0\ntypescript                      5.5.4\nzone.js                         0.15.0","Url":"https://github.com/angular/angular/issues/58522","RelatedDescription":"Open issue \"bug(timepicker): Timepicker integration with datepicker does not work when Reactive forms are used\" (#58522)"},{"Id":"2637426238","IsPullRequest":true,"CreatedAt":"2024-11-06T08:51:36","Actor":"crisbeto","Number":"58520","RawContent":null,"Title":"fix(compiler): handle tracking expressions requiring temporary variables","State":"open","Body":"Currently when we generate the tracking expression for a `@for` block, we process its expression in the context of the creation block. This is incorrect, because the expression may require ops of its own for cases like nullish coalescing or safe reads. The result is that while we do generate the correct variables, they're added to the creation block rather than the tracking function which causes an error at runtime.\r\n\r\nThese changes address the issue by keeping track of a separate set of ops for the `track` expression that are prepended to the generated function, similarly to how we handle event listeners.\r\n\r\nFixes #56256.","Url":"https://github.com/angular/angular/pull/58520","RelatedDescription":"Open PR \"fix(compiler): handle tracking expressions requiring temporary variables\" (#58520)"},{"Id":"2637239233","IsPullRequest":false,"CreatedAt":"2024-11-06T07:21:57","Actor":"reuse-ay","Number":"58519","RawContent":null,"Title":"No error occurs if required input has no value.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThis may be a feature request.\n\n\nThere is a directive with two required input.\n```\nimport { Directive, Input, numberAttribute } from '@angular/core';\n\n@Directive({\n  selector: '[appAbc]',\n  standalone: true,\n})\nexport class AbcDirective {\n  @Input({ required: true }) strInput!: string;\n\n  @Input({ required: true, transform: numberAttribute }) numInput!: number;\n}\n\n```\n\nThere is a template using the directive.\n```\n<h1>Hello from {{ name }}!</h1>\n    <a target=\"_blank\" href=\"https://angular.dev/overview\">\n      Learn more about Angular\n    </a>\n\n    <div appAbc strInput numInput>\n```\n\nThe template doesn't have errors. \n\nThis looks strange for me. On the div element in template, the two attributes corresponding to the inputs doesn't have values, but there is no error. In fact I get an empty string or NaN, which is not what I would expect.\n\nIn my opinion, required inputs should throw an error if values are not set, but this is not necessary for boolean inputs.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-fbym5w?file=src%2Fmain.ts,src%2Fabc.directive.tshttps://stackblitz.com/edit/stackblitz-starters-fbym5w?file=src%2Fmain.ts,src%2Fabc.directive.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58519","RelatedDescription":"Closed issue \"No error occurs if required input has no value.\" (#58519)"},{"Id":"2636794449","IsPullRequest":true,"CreatedAt":"2024-11-06T00:55:29","Actor":"yjaaidi","Number":"58518","RawContent":null,"Title":"refactor(migration): fix provide initializer migration when using useFactory","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThis PR fixes the issue described here: https://github.com/angular/angular/pull/58493#issuecomment-2458013604\r\n\r\nCurrently, `APP_INITIALIZER` providers are transformed into:\r\n```ts\r\nprovideAppInitializer((service: Service) => {\r\n  return () => service.init();\r\n})(inject(Service)));\r\n```\r\n\r\n## What is the new behavior?\r\n\r\n```ts\r\nprovideAppInitializer(() => {\r\n  const initializerFn = ((service: Service) => {\r\n    return () => service.init();\r\n  })(inject(Service));\r\n  return initializerFn();\r\n});\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nThis PR also adds support to the `useFactory() {}` method shorthand.\r\nLet me know if you want me to separate this into a distinct PR.","Url":"https://github.com/angular/angular/pull/58518","RelatedDescription":"Open PR \"refactor(migration): fix provide initializer migration when using useFactory\" (#58518)"},{"Id":"2636618340","IsPullRequest":true,"CreatedAt":"2024-11-05T22:38:32","Actor":"BobobUnicorn","Number":"58517","RawContent":null,"Title":"fix(core): correct type narrowing on Signal<T>","State":"open","Body":"TypeScript considers an intersection of two function types to be an overloaded function containing both signatures. The implication of this is that `Signal<T|undefined> & Signal<T>` is just\r\n`Signal<T|undefined>`, instead of `Signal<T>` as would be expected.\r\n\r\nThis PR introduces a new symbol that holds the type information for `Signal`, so that intersection types will calculate the type intersection correctly, allowing for `WritableResource#hasValue` to correctly narrow the type of `WritableResource#value`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58517","RelatedDescription":"Open PR \"fix(core): correct type narrowing on Signal<T>\" (#58517)"},{"Id":"2636137354","IsPullRequest":false,"CreatedAt":"2024-11-05T18:03:45","Actor":"abdes","Number":"58516","RawContent":null,"Title":"Invalid check in router/url_tree/parseParens","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `parseParens` method in url_tree.ts has a sanity check that checks if segment group is properly closed or not.\nhttps://github.com/angular/angular/blob/c22b5accdd083f3bdc4141431cece196f0e33112/packages/router/src/url_tree.ts#L711-L718\n\nThis check does not pass when the segment group is defining an outlet with a path and children. For example:\n```\n/Home(app:Welcome//dock:left(1:One;pinned//2:Two;below=1//3:Three;pinned;above=2//4:Four))\n```\nIn this case, after matching the outlet and its segments (`dock:left`), the next character is a `(` to specify the children.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58516","RelatedDescription":"Open issue \"Invalid check in router/url_tree/parseParens\" (#58516)"},{"Id":"2635047587","IsPullRequest":true,"CreatedAt":"2024-11-05T15:38:15","Actor":"JeanMeche","Number":"58510","RawContent":null,"Title":"build: update dependency angular-split to v18","State":"closed","Body":"Taking over #58498","Url":"https://github.com/angular/angular/pull/58510","RelatedDescription":"Closed or merged PR \"build: update dependency angular-split to v18\" (#58510)"},{"Id":"2635456949","IsPullRequest":true,"CreatedAt":"2024-11-05T15:36:21","Actor":"alan-agius4","Number":"58514","RawContent":null,"Title":"ci: exclude `packages/ssr/BUILD.bazel` from requiring a G3 sync","State":"closed","Body":"Internal CL http://cl/693309493","Url":"https://github.com/angular/angular/pull/58514","RelatedDescription":"Closed or merged PR \"ci: exclude `packages/ssr/BUILD.bazel` from requiring a G3 sync\" (#58514)"},{"Id":"2635061776","IsPullRequest":true,"CreatedAt":"2024-11-05T13:11:47","Actor":"angular-robot","Number":"58512","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/58512","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#58512)"},{"Id":"2635061770","IsPullRequest":true,"CreatedAt":"2024-11-05T13:10:31","Actor":"angular-robot","Number":"58511","RawContent":null,"Title":"docs: update Angular CLI help [19.0.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/58511","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [19.0.x]\" (#58511)"},{"Id":"2635111132","IsPullRequest":false,"CreatedAt":"2024-11-05T10:53:16","Actor":"SebastianPodgajny","Number":"58513","RawContent":null,"Title":"detectChanges on ActivationEnd breaks signal change detection","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCalling detectChanges after router event ActivationEnd or NavigationEnd breaks change detection in embedded views. Uncomment `this.cdRef.detectChanges();` in stackblitz to see problem.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-dd6me9?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58513","RelatedDescription":"Open issue \"detectChanges on ActivationEnd breaks signal change detection\" (#58513)"},{"Id":"2634680485","IsPullRequest":false,"CreatedAt":"2024-11-05T07:44:29","Actor":"Yogu","Number":"58508","RawContent":null,"Title":"Input setter coercion docs should mention input signals with value tranforms","State":"open","Body":"### Describe the problem that you experienced\n\nThe [Input setter coercion section of the Template type checking page](https://angular.dev/tools/cli/template-typecheck#input-setter-coercion) explains the typechecking problem of boolean attributes like `disabled`. However, the solutions it provides are outdated\n\n- they first mention `ngAcceptInputType_` prefix\n- then they mention that it is deprecated in favor of getter/setter pairs with correct types\n\nHowever, they do not mention how to fix it with a [value transform on a signal input](https://angular.dev/guide/signals/inputs#value-transforms).\n\nIt would also be nice to mention the [booleanAttribute](https://angular.dev/api/core/booleanAttribute) helper somewhere. The Value transforms section basically repeats that helper without mentioning that you can just import it.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tools/cli/template-typecheck#input-setter-coercion\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/58508","RelatedDescription":"Open issue \"Input setter coercion docs should mention input signals with value tranforms\" (#58508)"},{"Id":"2634520305","IsPullRequest":true,"CreatedAt":"2024-11-05T07:14:56","Actor":"angular-robot","Number":"58506","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/chrome](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/chrome) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/chrome)) | dependencies | patch | [`^0.0.276` -> `^0.0.280`](https://renovatebot.com/diffs/npm/@types%2fchrome/0.0.276/0.0.280) |\n| [@types/hammerjs](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/hammerjs) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/hammerjs)) | dependencies | patch | [`2.0.45` -> `2.0.46`](https://renovatebot.com/diffs/npm/@types%2fhammerjs/2.0.45/2.0.46) |\n| [@types/selenium-webdriver4](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/selenium-webdriver) ([source](https://redirect.github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/selenium-webdriver)) | dependencies | patch | [`4.1.26` -> `4.1.27`](https://renovatebot.com/diffs/npm/@types%2fselenium-webdriver4/4.1.26/4.1.27) |\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.2` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.3` |\n| [cldr](https://redirect.github.com/papandreou/node-cldr) | devDependencies | minor | [`7.5.0` -> `7.6.0`](https://renovatebot.com/diffs/npm/cldr/7.5.0/7.6.0) |\n| [jasmine](http://jasmine.github.io/) ([source](https://redirect.github.com/jasmine/jasmine-npm)) | dependencies | minor | [`~5.3.0` -> `~5.4.0`](https://renovatebot.com/diffs/npm/jasmine/5.3.1/5.4.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://redirect.github.com/jasmine/jasmine)) | devDependencies | minor | [`~5.3.0` -> `~5.4.0`](https://renovatebot.com/diffs/npm/jasmine-core/5.3.0/5.4.0) |\n| [selenium-webdriver4](https://redirect.github.com/SeleniumHQ/selenium/tree/trunk/javascript/node/selenium-webdriver#readme) ([source](https://redirect.github.com/SeleniumHQ/selenium)) | dependencies | minor | [`4.25.0` -> `4.26.0`](https://renovatebot.com/diffs/npm/selenium-webdriver4/4.25.0/4.26.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.2`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v422)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.1...v4.2.2)\n\n-   `url-helper.ts` now leverages well-known environment variables by [@&#8203;jww3](https://redirect.github.com/jww3) in [https://github.com/actions/checkout/pull/1941](https://redirect.github.com/actions/checkout/pull/1941)\n-   Expand unit test coverage for `isGhes` by [@&#8203;jww3](https://redirect.github.com/jww3) in [https://github.com/actions/checkout/pull/1946](https://redirect.github.com/actions/checkout/pull/1946)\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n<details>\n<summary>papandreou/node-cldr (cldr)</summary>\n\n### [`v7.6.0`](https://redirect.github.com/papandreou/node-cldr/blob/HEAD/CHANGELOG.md#v760)\n\n[Compare Source](https://redirect.github.com/papandreou/node-cldr/compare/7.5.0...7.6.0)\n\n##### Pull requests\n\n-   [#&#8203;177](https://redirect.github.com/papandreou/node-cldr/pull/177) Update xpath → 0.0.34 (unknown) ([depfu\\[bot\\]](mailto:23717796+depfu\\[bot]@&#8203;users.noreply.github.com))\n\n##### Commits to master\n\n-   [CLDR 45](https://cldr.unicode.org/downloads/cldr-45), with no major changes ([rotsee](mailto:mejl@leowallentin.se))\n-   [updated dev dependencies](https://redirect.github.com/papandreou/node-cldr/commit/f8af258798597e00ab9121b9dbf9e7d8320b5545) ([rotsee](mailto:mejl@leowallentin.se))\n\n</details>\n\n<details>\n<summary>jasmine/jasmine-npm (jasmine)</summary>\n\n### [`v5.4.0`](https://redirect.github.com/jasmine/jasmine-npm/releases/tag/v5.4.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine-npm/compare/v5.3.1...v5.4.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine-npm/blob/main/release_notes/5.4.0.md).\n\n</details>\n\n<details>\n<summary>jasmine/jasmine (jasmine-core)</summary>\n\n### [`v5.4.0`](https://redirect.github.com/jasmine/jasmine/releases/tag/v5.4.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine/compare/v5.3.0...v5.4.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine/blob/main/release_notes/5.4.0.md).\n\n</details>\n\n<details>\n<summary>SeleniumHQ/selenium (selenium-webdriver4)</summary>\n\n### [`v4.26.0`](https://redirect.github.com/SeleniumHQ/selenium/compare/8a8aea2337281d1824e9fa6b784fc269b59d768e...8ccf0219d77a3144923d79e76e2b8fddd85b3e8f)\n\n[Compare Source](https://redirect.github.com/SeleniumHQ/selenium/compare/8a8aea2337281d1824e9fa6b784fc269b59d768e...8ccf0219d77a3144923d79e76e2b8fddd85b3e8f)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuNiIsInVwZGF0ZWRJblZlciI6IjM4LjE0Mi42IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58506","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#58506)"},{"Id":"2634575232","IsPullRequest":false,"CreatedAt":"2024-11-05T06:46:00","Actor":"abdes","Number":"58507","RawContent":null,"Title":"Route.path documentation is confusing/misleading","State":"open","Body":"The documentation states that the `path` \"Cannot be used together with a custom `matcher` function.\", but in reality the implementation does use the `path` and quite extensively.\n\n1. If the path is `\"\"`, we don't even call the custom matcher.\n2. The custom matcher gets called with the full route, which has the `path` property, and it is confusing to say that the `path` cannot be used together with a custom `matcher`.\n\nhttps://github.com/angular/angular/blob/ca9998c6cf43642881c55d35d934f0c1a275d776/packages/router/src/models.ts#L569-L576\n\nIt would be great if this statement gets clarified, so that the documentation is not confusing.","Url":"https://github.com/angular/angular/issues/58507","RelatedDescription":"Open issue \"Route.path documentation is confusing/misleading\" (#58507)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2638841801","IsPullRequest":false,"CreatedAt":"2024-11-06T20:26:03","Actor":"emily-mikl-fcb-com","Number":"28804","RawContent":null,"Title":"Compatibility with Dart Sass >=1.79","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSince Dart Sass 1.79 the functions `color.red()`, `color.green()`, and `color.blue()` have been deprecated in favor of using `color.channel()`. (See [official Sass docs](https://sass-lang.com/documentation/modules/color/).) However, when making that update in our Angular 18 project we get an error:\n![Image](https://github.com/user-attachments/assets/d1e3d45a-c30f-4882-9c89-bd05eea9bdd8)\n\nBut Dart Sass will give an error if we use the old way:\n![Image](https://github.com/user-attachments/assets/b379b93a-2560-4566-b418-46c317cf9ca9)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.0\nNode: 20.18.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 18.2.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.0\n@angular-devkit/build-angular   18.2.0\n@angular-devkit/core            18.2.0\n@angular-devkit/schematics      18.2.0\n@angular/cdk                    18.2.3\n@schematics/angular             18.2.0\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28804","RelatedDescription":"Closed issue \"Compatibility with Dart Sass >=1.79\" (#28804)"},{"Id":"2638586255","IsPullRequest":true,"CreatedAt":"2024-11-06T16:20:33","Actor":"alan-agius4","Number":"28803","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28803","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#28803)"},{"Id":"2638578495","IsPullRequest":true,"CreatedAt":"2024-11-06T16:17:11","Actor":"alan-agius4","Number":"28802","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28802","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#28802)"},{"Id":"2637274345","IsPullRequest":true,"CreatedAt":"2024-11-06T16:13:19","Actor":"alan-agius4","Number":"28799","RawContent":null,"Title":"fix(@angular/ssr): initialize the DI tokens with `null` to avoid requiring them to be set to optional","State":"closed","Body":"\r\n\r\nThis commit initializes the `REQUEST`, `RESPONSE_INIT`, and `REQUEST_CONTEXT` DI tokens with `null` values by default.\r\n\r\nPreviously, these tokens lacked default values, which meant that developers had to explicitly mark them as optional when injecting them in constructors. This was necessary to avoid errors when these tokens were not provided, particularly in scenarios like client-side rendering or during development.\r\n\r\nBy initializing these tokens with `null`, we eliminate the need for developers to mark them as optional, simplifying the code and improving the developer experience.\r\n","Url":"https://github.com/angular/angular-cli/pull/28799","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): initialize the DI tokens with `null` to avoid requiring them to be set to optional\" (#28799)"},{"Id":"2636619801","IsPullRequest":true,"CreatedAt":"2024-11-06T15:19:43","Actor":"jkrems","Number":"28797","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle basename collisions","State":"closed","Body":"Generates unique names for each test entry point and also creates a nice & consistent name for the main (\"init test bed\") chunk. All specs are now `spec-*.js` files.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28756\r\n\r\n~~P.S.: Current based on https://github.com/angular/angular-cli/pull/28795, will rebase post-merge.~~","Url":"https://github.com/angular/angular-cli/pull/28797","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): handle basename collisions\" (#28797)"},{"Id":"2638106477","IsPullRequest":false,"CreatedAt":"2024-11-06T13:31:01","Actor":"MitjaCH","Number":"28801","RawContent":null,"Title":"Add TailwindCSS as a Stylesheet Format Option in Angular CLI","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nCurrently, Angular CLI provides the option to select between various CSS preprocessors like CSS, SCSS, and LESS when creating a new project. However, TailwindCSS, a popular utility-first CSS framework, is not included as an option. With TailwindCSS being increasingly adopted, adding it as a stylesheet option would streamline the setup process for developers who use it with Angular.\n\n### Describe the solution you'd like\n\nAdd TailwindCSS as an option in the ng new command alongside the existing options (CSS, SCSS, LESS, etc.). This would enable developers to choose TailwindCSS as the default stylesheet framework during project creation, allowing for automatic setup and configuration of Tailwind in the generated project.\n\n### Describe alternatives you've considered\n\n**Alternatives Considered:**  \n\n1. **Installing TailwindCSS Manually After Initializing the Project**  \n   The current workaround for using TailwindCSS with Angular involves initializing a new project with `ng new` and then following these steps manually:\n   \n   - Install TailwindCSS and required PostCSS plugins:\n     ```bash\n     npm install -D tailwindcss postcss autoprefixer\n     ```\n   - Generate the Tailwind configuration file:\n     ```bash\n     npx tailwindcss init\n     ```\n   - Update `tailwind.config.js` to define the content paths, like so:\n     ```javascript\n     module.exports = {\n       content: [\n         \"./src/**/*.{html,ts}\",\n       ],\n       theme: {\n         extend: {},\n       },\n       plugins: [],\n     }\n     ```\n   - Configure `styles.css` (or `styles.scss`) with Tailwind directives:\n     ```css\n     @tailwind base;\n     @tailwind components;\n     @tailwind utilities;\n     ```\n   - Optionally, create a `postcss.config.js` file if not already present to ensure compatibility with Angular's build.\n\n   While these steps are not overly complex, they add additional configuration overhead, especially for developers who are setting up multiple projects or who are new to Angular or TailwindCSS. This manual process can also introduce errors if configuration steps are missed or misconfigured.\n\n2. **Using a Third-Party TailwindCSS Integration**  \n   Some developers have created community guides and packages that streamline the Tailwind setup for Angular, but these are not officially supported and may lack the stability or compatibility assurance that comes with a native CLI integration. Additionally, relying on third-party solutions can introduce maintenance challenges if the third-party solution is no longer actively maintained.\n\n3. **Creating a Custom Schematic for TailwindCSS Setup**  \n   Angular allows developers to create custom schematics, which could automate the setup of TailwindCSS after project initialization. However, creating and maintaining a custom schematic requires extra knowledge and effort, and it adds another layer of customization that developers need to maintain across projects. This approach is often impractical for teams who need a simple, standard setup.\n\n**Conclusion:**  \nAdding TailwindCSS as an option in the Angular CLI would remove the need for these workarounds, allowing developers to select TailwindCSS during project initialization and have it configured automatically. This native support would reduce setup time, avoid common configuration errors, and enhance the developer experience by aligning Angular with modern CSS practices.","Url":"https://github.com/angular/angular-cli/issues/28801","RelatedDescription":"Open issue \"Add TailwindCSS as a Stylesheet Format Option in Angular CLI\" (#28801)"},{"Id":"2637565326","IsPullRequest":true,"CreatedAt":"2024-11-06T12:39:29","Actor":"alan-agius4","Number":"28800","RawContent":null,"Title":"fix(@angular/build): skip wildcard routes from being listed as prerendered routes","State":"closed","Body":"\r\nThis fix ensures that the wildcard routes are not included in the prerendered list, improving the accuracy of prerendered route generation.","Url":"https://github.com/angular/angular-cli/pull/28800","RelatedDescription":"Closed or merged PR \"fix(@angular/build): skip wildcard routes from being listed as prerendered routes\" (#28800)"},{"Id":"2635816460","IsPullRequest":false,"CreatedAt":"2024-11-06T12:10:41","Actor":"i11010520","Number":"28793","RawContent":null,"Title":"Failed to import wasm, even after enabling zoneless","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAs [doc](https://angular.dev/guide/experimental/zoneless#enabling-zoneless-in-an-application) guided, `app.module.ts` modified:\n```\nimport { NgModule, provideExperimentalZonelessChangeDetection } from \"@angular/core\";\n\n@NgModule({\n  providers: [CurrencyPipe, provideExperimentalZonelessChangeDetection()],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n```\n\nBut the error with zoneless reminding still thrown.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n✘ [ERROR] WASM/ES module integration imports are not supported with Zone.js applications [plugin angular-wasm]\n\n    apps/demo/src/pack/wasm.ts:2:22:\n      2 │ ... wasm from \"wasmfile.w...\n        ╵               ~~~~~~~~~~~~~~\n\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.11\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.2.10\n... animations, cdk, common, compiler, compiler-cli, core\n... elements, forms, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            16.2.14\n@angular-devkit/schematics      16.2.14\n@angular/cli                    18.2.11\n@schematics/angular             16.2.14\nrxjs                            7.8.1\ntypescript                      5.5.4\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28793","RelatedDescription":"Closed issue \"Failed to import wasm, even after enabling zoneless\" (#28793)"},{"Id":"2634531139","IsPullRequest":true,"CreatedAt":"2024-11-06T09:30:34","Actor":"angular-robot","Number":"28785","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.22.1` -> `1.23.0`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.22.1/1.23.0) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.12.2` -> `8.13.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.12.2/8.13.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.12.2` -> `8.13.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.12.2/8.13.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.23.0`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.23.0)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.22.1...v1.23.0)\n\nBazelisk v1.23.0 comes with several improvements related to downloads:\n\n### Bug Fixes & Improvements\n\n-   Improved download error messages ([https://github.com/bazelbuild/bazelisk/pull/624](https://redirect.github.com/bazelbuild/bazelisk/pull/624))\n-   Fixed `INTERNAL_ERROR` problems caused by improper handling of HTTP responses during retries ([https://github.com/bazelbuild/bazelisk/pull/627](https://redirect.github.com/bazelbuild/bazelisk/pull/627))\n\nWe’d like to thank our amazing contributors [@&#8203;jjmaestro](https://redirect.github.com/jjmaestro) and [@&#8203;jwnimmer-tri](https://redirect.github.com/jwnimmer-tri)!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.13.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8130-2024-11-04)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.12.2...v8.13.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[only-throw-error] add allow option ([#&#8203;10221](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10221))\n-   **eslint-plugin:** \\[prefer-nullish-coalescing] add option `ignoreBooleanCoercion` ([#&#8203;9924](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/9924))\n-   **eslint-plugin:** disable `no-class-assign` rule in `eslint-recommended` config ([#&#8203;10250](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10250))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[switch-exhaustiveness-check] add support for covering a missing property with `undefined` ([#&#8203;10232](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10232))\n-   **eslint-plugin:** \\[consistent-type-definitions] don't leave trailing parens when fixing type to interface ([#&#8203;10235](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10235))\n-   **eslint-plugin:** \\[no-deprecated] report when exported class implements/extends deprecated entity ([#&#8203;10259](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10259))\n-   **eslint-plugin:** \\[no-deprecated] report on deprecated variables used inside dynamic imports ([#&#8203;10261](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10261))\n-   **eslint-plugin:** \\[no-unnecessary-condition] falsey bigint should be falsey ([#&#8203;10205](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10205))\n\n##### ❤️  Thank You\n\n-   auvred [@&#8203;auvred](https://redirect.github.com/auvred)\n-   Kim Sang Du [@&#8203;developer-bandi](https://redirect.github.com/developer-bandi)\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   Mark de Dios [@&#8203;peanutenthusiast](https://redirect.github.com/peanutenthusiast)\n-   Ronen Amiel\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.13.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8130-2024-11-04)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.12.2...v8.13.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuNiIsInVwZGF0ZWRJblZlciI6IjM4LjE0Mi42IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28785","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28785)"},{"Id":"2636584761","IsPullRequest":true,"CreatedAt":"2024-11-06T09:26:56","Actor":"clydin","Number":"28796","RawContent":null,"Title":"refactor(@angular/build): use structured component stylesheet tracking for hot replacement","State":"closed","Body":"When using the development server with the application builder, the internal state of any external component stylesheets is now more comprehensively tracked. This allows for more flexibility in both debugging potential problems as well as supporting additional stylesheet preprocessing steps including deferred component stylesheet processing.","Url":"https://github.com/angular/angular-cli/pull/28796","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): use structured component stylesheet tracking for hot replacement\" (#28796)"},{"Id":"2636925940","IsPullRequest":false,"CreatedAt":"2024-11-06T07:18:28","Actor":"leo6104","Number":"28798","RawContent":null,"Title":"REQUEST, RESPONSE_INIT deps not resolved in RenderMode.Server","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen i inject REQUEST / RESPONSE_INIT token in app.config.server.ts, it raise R3InjectorError. \n\nhttps://github.com/leo6104/ssr-token-issue/blob/master/src/app/app.config.server.ts \n\n```\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering(),\n    provideServerRoutesConfig(serverRoutes),\n    {\n      provide: TOKEN_IN_SSR,\n      useFactory: (req: Request, res: ResponseInit) => {\n        return req.headers.get('host');\n      },\n      deps: [REQUEST, RESPONSE_INIT]\n    }\n  ]\n};\n```\n\nhttps://github.com/angular/angular-cli/blob/127811203ac73803c53f7412c0b0880c004f455f/packages/angular/ssr/src/app.ts#L292C9-L309C31 \n\nAccording to this code, as i expected, it should be available to use REQUEST / RESPONSE_INIT token in server side render. \n\n### Minimal Reproduction\n\n```\ngit clone https://github.com/leo6104/ssr-token-issue \nng serve \n\n// visit localhost:4200 \n```\n\n### Exception or Error\n\n```\nERROR Error [NullInjectorError]: R3InjectorError(Environment Injector)[InjectionToken TOKEN_IN_SSR -> InjectionToken REQUEST -> InjectionToken REQUEST]: \n  NullInjectorError: No provider for InjectionToken REQUEST!\n```\n\n\n\n### Your Environment\n\nAngular CLI: 19.0.0-rc.0\nNode: 23.1.0 (Unsupported)\nPackage Manager: npm 10.9.0\nOS: darwin x64\n\nAngular: 19.0.0-rc.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0\n@angular-devkit/schematics      19.0.0-rc.0\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28798","RelatedDescription":"Closed issue \"REQUEST, RESPONSE_INIT deps not resolved in RenderMode.Server\" (#28798)"},{"Id":"2636535938","IsPullRequest":true,"CreatedAt":"2024-11-05T23:59:06","Actor":"jkrems","Number":"28795","RawContent":null,"Title":"fix(@angular-devkit/build-angular): serve assets","State":"closed","Body":"Turns out the test for asset serving didn't actually test asset serving because of a missing `whenStable()` - it always succeeded, even with random filenames. This change adds a custom middleware to serve our static files since it seemed easier (and more predictable) than to try to map the `assets` concept to Karma's `files`+`proxy` logic.\r\n\r\nOne side effect of adding the middleware is that we don't actually need the Karma `files` anymore with the exception of any files that we'd want to include on page load. I don't touch that part here because it will be cleaner to change it when also addressing the naming collisions between spec files.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28754\r\n\r\n~~P.S.: Currently the first commit is from a different PR (https://github.com/angular/angular-cli/pull/28794), I'm planning to rebase after landing it.~~","Url":"https://github.com/angular/angular-cli/pull/28795","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): serve assets\" (#28795)"},{"Id":"2635953557","IsPullRequest":true,"CreatedAt":"2024-11-05T22:36:01","Actor":"jkrems","Number":"28794","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove double-watch in karma","State":"closed","Body":"The Karma file watching was racing with the file writes done by the application builder. Since we already tell Karma when to reun via `.refeshFiles()`, disabling Karma's own file watcher should make things more reliable.\r\n\r\nThis allows removing a weird special-case in the test case and removes the noisy \"File chaned\" logs generated by Karma.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28755","Url":"https://github.com/angular/angular-cli/pull/28794","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): remove double-watch in karma\" (#28794)"},{"Id":"2635540850","IsPullRequest":true,"CreatedAt":"2024-11-05T18:39:14","Actor":"alan-agius4","Number":"28792","RawContent":null,"Title":"refactor(@angular/ssr): Add `RequestHandlerFunction` and `NodeRequestHandlerFunction` to public API","State":"closed","Body":"\r\nThese additions are necessary to ensure their inclusion in adev.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/28792","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): Add `RequestHandlerFunction` and `NodeRequestHandlerFunction` to public API\" (#28792)"},{"Id":"2635411005","IsPullRequest":true,"CreatedAt":"2024-11-05T18:39:02","Actor":"alan-agius4","Number":"28791","RawContent":null,"Title":"docs: enhance documentation by adding `@see` references","State":"closed","Body":"Improve the documentation `adev` API reference by incorporating `@see` references. This addition enhances cross-referencing within the documentation, making it easier for users to navigate related content and gain better context.\r\n","Url":"https://github.com/angular/angular-cli/pull/28791","RelatedDescription":"Closed or merged PR \"docs: enhance documentation by adding `@see` references\" (#28791)"},{"Id":"2634964144","IsPullRequest":true,"CreatedAt":"2024-11-05T18:38:40","Actor":"alan-agius4","Number":"28787","RawContent":null,"Title":"fix(@angular/ssr): add validation to prevent use of `provideServerRoutesConfig` in browser context","State":"closed","Body":"\r\nIntroduced an error check to ensure that 'provideServerRoutesConfig' is not utilized in the browser part of the application. This helps avoid unintended behavior.\r\n","Url":"https://github.com/angular/angular-cli/pull/28787","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): add validation to prevent use of `provideServerRoutesConfig` in browser context\" (#28787)"},{"Id":"2633289298","IsPullRequest":true,"CreatedAt":"2024-11-05T16:27:50","Actor":"clydin","Number":"28780","RawContent":null,"Title":"fix(@angular/build): workaround Vite CSS ShadowDOM hot replacement","State":"closed","Body":"When using the development server with the application builder (default for new projects), Angular components using ShadowDOM view encapsulation will now cause a full page reload. This ensures that these components styles are correctly updated during watch mode. Vite's CSS hot replacement client code currently does not support searching and replacing `<link>` elements inside shadow roots. When support is available within Vite, an HMR based update for ShadowDOM components can be supported as other view encapsulation modes are now.","Url":"https://github.com/angular/angular-cli/pull/28780","RelatedDescription":"Closed or merged PR \"fix(@angular/build): workaround Vite CSS ShadowDOM hot replacement\" (#28780)"},{"Id":"2631477076","IsPullRequest":false,"CreatedAt":"2024-11-05T16:19:39","Actor":"json-derulo","Number":"28775","RawContent":null,"Title":"Wrong path to prerendered html page with APP_BASE_HREF set","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nIn an Angular 19 SSR + i18n project, I am setting a base href in my app config:\n\n```ts\n{\n    provide: APP_BASE_HREF,\n    useValue: '/'\n  }\n```\n\nHowever, in the path to my prerendered html page parts are being removed.\n\n### Minimal Reproduction\n\nRepro: https://github.com/json-derulo/ng19-prerendering-path-issue-repro\n \n- Generate a fresh Angular 19 project\n- Add i18n\n- Add the above snippet to the app config\n- Add routing\n- Build the project with `ng build`\n\n### Exception or Error\n\nThere is no error. However on prerender during the build, parts from the router paths are being removed. For example, I have defined `speakers/xyz` in my router. But the path to the respective html file in the `dist` folder is like the following: `en-US/ers/xyz/index.html`. Expected behavior would be `en-US/speakers/xyz/index.html`.\n\n### Your Environment\n\nAngular CLI: 19.0.0-rc.0\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: darwin x64\n\nAngular: 19.0.0-rc.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0-rc.0\n@angular-devkit/build-angular   19.0.0-rc.0\n@angular-devkit/core            19.0.0-rc.0 (cli-only)\n@angular-devkit/schematics      19.0.0-rc.0\n@schematics/angular             19.0.0-rc.0\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n### Anything else relevant?\n\nIn Angular v18 the issue is not reproducible.","Url":"https://github.com/angular/angular-cli/issues/28775","RelatedDescription":"Closed issue \"Wrong path to prerendered html page with APP_BASE_HREF set\" (#28775)"},{"Id":"2632093046","IsPullRequest":true,"CreatedAt":"2024-11-05T16:19:38","Actor":"alan-agius4","Number":"28776","RawContent":null,"Title":"fix(@angular/build): handle `APP_BASE_HREF` correctly in prerendered routes","State":"closed","Body":"\r\nThis commit resolves path stripping issues when `APP_BASE_HREF` does not align with the expected value.\r\n\r\nCloses #28775","Url":"https://github.com/angular/angular-cli/pull/28776","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle `APP_BASE_HREF` correctly in prerendered routes\" (#28776)"},{"Id":"2635366648","IsPullRequest":true,"CreatedAt":"2024-11-05T14:00:05","Actor":"alan-agius4","Number":"28790","RawContent":null,"Title":"docs: replace `@note` with `@remarks`","State":"closed","Body":"Updated TSDoc comments by replacing @note with @remarks across the codebase. This aligns with TSDoc's preferred conventions, where @remarks is used for supplementary explanations and additional context.\r\n","Url":"https://github.com/angular/angular-cli/pull/28790","RelatedDescription":"Closed or merged PR \"docs: replace `@note` with `@remarks`\" (#28790)"},{"Id":"2635085166","IsPullRequest":true,"CreatedAt":"2024-11-05T13:52:32","Actor":"alan-agius4","Number":"28789","RawContent":null,"Title":"fix(@angular/ssr): include `requestContext` in `RequestHandlerFunction`","State":"closed","Body":"Added the missing `requestContext` parameter to the `RequestHandlerFunction`.\r\n","Url":"https://github.com/angular/angular-cli/pull/28789","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): include `requestContext` in `RequestHandlerFunction`\" (#28789)"},{"Id":"2635008050","IsPullRequest":true,"CreatedAt":"2024-11-05T10:10:11","Actor":"angular-robot","Number":"28788","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0cde73b` -> `45213e9` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `0386111` -> `9f63e93` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `a65486f` -> `ad62cdc` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `8c817e0` -> `093376b` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `54afbf4` -> `b48887c` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `fe363f7` -> `e8da1be` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c6d05b5` -> `dbb3596` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `f5f71de` -> `7a5fff6` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `c61ad3a` -> `fc682f9` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `5186966` -> `92fa436` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `a1a8fe9` -> `811fc92` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `0899cd8` -> `190edce` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1357f6a` -> `f7a60f3` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `a5fb25d` -> `a22f3b5` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `2a124b5` -> `ac65f0b` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `f6e82e5` -> `e23977c` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `bb9441e` -> `caa52ec` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.0.0-rc.0/19.0.0-rc.1) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `9c34a1e` -> `39255c4` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.0.0-rc.0` -> `19.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.0.0-rc.0/19.0.0-rc.1) |\n| angular/dev-infra | action | digest | `c8e09d0` -> `933dcd4` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.0.0-rc.1`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1900-rc1-2024-11-06)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.0.0-rc.0...19.0.0-rc.1)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b25121ee4a](https://redirect.github.com/angular/angular/commit/b25121ee4aba427954fef074a967b9332654be84) | fix | avoid having to duplicate core environment ([#&#8203;58444](https://redirect.github.com/angular/angular/pull/58444)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d4d76ead80](https://redirect.github.com/angular/angular/commit/d4d76ead802837bc6cc7908bc9ebfefa73eb9969) | fix | do not fail fatal when references to non-existent module are discovered ([#&#8203;58515](https://redirect.github.com/angular/angular/pull/58515)) |\n| [22cd6869ef](https://redirect.github.com/angular/angular/commit/22cd6869ef453c342b206f84e857ef6c34922fa5) | fix | make the unused imports diagnostic easier to read ([#&#8203;58468](https://redirect.github.com/angular/angular/pull/58468)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8ae84be3df](https://redirect.github.com/angular/angular/commit/8ae84be3df4e1393c6f00e2d28ccacd5b2159a0f) | fix | avoid slow stringification when checking for duplicates in dev mode ([#&#8203;58521](https://redirect.github.com/angular/angular/pull/58521)) |\n| [6e0af6dbbb](https://redirect.github.com/angular/angular/commit/6e0af6dbbbe5e9a9e2e5809ada0b7b5a7e456402) | fix | resolve forward-referenced host directives during directive matching ([#&#8203;58492](https://redirect.github.com/angular/angular/pull/58492)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c5e676bb87](https://redirect.github.com/angular/angular/commit/c5e676bb8715bcde42e56eb08a41cc1ba5c95f91) | fix | flip the default standalone flag in route-lazy-loading migration ([#&#8203;58474](https://redirect.github.com/angular/angular/pull/58474)) |\n| [e85ac5c7cb](https://redirect.github.com/angular/angular/commit/e85ac5c7cb06dc0fba757a9b931e79e07978f2a9) | fix | properly bundle shared compiler code into migrations ([#&#8203;58515](https://redirect.github.com/angular/angular/pull/58515)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c36a1c023b](https://redirect.github.com/angular/angular/commit/c36a1c023b34f9b2056e1bef6364787e8495bfad) | fix | correctly add external stylesheets to ShadowDOM components ([#&#8203;58482](https://redirect.github.com/angular/angular/pull/58482)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-rc.1`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-rc1-lolite-lollipop-2024-11-06)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-rc.0...19.0.0-rc.1)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d8dedc9b7](https://redirect.github.com/angular/components/commit/d8dedc9b7d1ea85e9e3b7a1256a6ad60d4a8a36b) | fix | **datepicker:** use SVG icons for calendar ([#&#8203;29957](https://redirect.github.com/angular/components/pull/29957)) |\n| [a2cd04902](https://redirect.github.com/angular/components/commit/a2cd0490260e99ec0a9a23d0837177f99fc81425) | fix | **form-field:** incorrect form field border radius with system-level themes ([#&#8203;29966](https://redirect.github.com/angular/components/pull/29966)) |\n| [de5e57ad1](https://redirect.github.com/angular/components/commit/de5e57ad1d9a76922091ca3adbab35bb9843b5fd) | fix | **menu:** use static elevation ([#&#8203;29968](https://redirect.github.com/angular/components/pull/29968)) |\n| [9b5ee9d55](https://redirect.github.com/angular/components/commit/9b5ee9d551f09f606cb0e92f6288cf3edd76a1da) | fix | **timepicker:** value considered as invalid by default |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d1d53f51a](https://redirect.github.com/angular/components/commit/d1d53f51ad9c565275c4916cf8e107dd994b7fc3) | fix | remove usages of Sass globals ([#&#8203;29972](https://redirect.github.com/angular/components/pull/29972)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuNiIsInVwZGF0ZWRJblZlciI6IjM5LjYuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28788","RelatedDescription":"Open PR \"build: update angular\" (#28788)"},{"Id":"2633795846","IsPullRequest":true,"CreatedAt":"2024-11-05T09:30:58","Actor":"clydin","Number":"28782","RawContent":null,"Title":"refactor(@angular/build): integrate template update function generation with builder results","State":"closed","Body":"When using the development server with the application builder (default for new projects), experimental support for component template hot replacement is now available for use. To enable support, the `NG_HMR_TEMPLATES=1` environment variable must present when executing the development server (for example, `NG_HMR_TEMPLATES=1 ng serve`). Once support has become stable, template hot replacement will be enabled by default.","Url":"https://github.com/angular/angular-cli/pull/28782","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): integrate template update function generation with builder results\" (#28782)"},{"Id":"2633840177","IsPullRequest":true,"CreatedAt":"2024-11-05T07:25:00","Actor":"angular-robot","Number":"28783","RawContent":null,"Title":"build(config): migrate renovate config","State":"closed","Body":"The Renovate config in this repository needs migrating. Typically this is because one or more configuration options you are using have been renamed.\n\n  You don't need to merge this PR right away, because Renovate will continue to migrate these fields internally each time it runs. But later some of these fields may be fully deprecated and the migrations removed. So it's a good idea to merge this migration PR soon. \n\n\n\n\n\n🔕 **Ignore**: Close this PR and you won't be reminded about config migration again, but one day your current config may no longer be valid.\n\n❓ Got questions? Does something look wrong to you? Please don't hesitate to [request help here](https://redirect.github.com/angular/dev-infra).\n\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n","Url":"https://github.com/angular/angular-cli/pull/28783","RelatedDescription":"Closed or merged PR \"build(config): migrate renovate config\" (#28783)"},{"Id":"2632123959","IsPullRequest":true,"CreatedAt":"2024-11-05T07:23:36","Actor":"angular-robot","Number":"28777","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xNDIuMSIsInVwZGF0ZWRJblZlciI6IjM4LjE0Mi42IiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28777","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#28777)"},{"Id":"2634201586","IsPullRequest":true,"CreatedAt":"2024-11-05T07:23:17","Actor":"clydin","Number":"28784","RawContent":null,"Title":"fix(@angular/build): always clear dev-server error overlay on non-error result","State":"closed","Body":"Now that additional result object types can be returned from the build system, the error overlay must be cleared on all non-error results. The introduction of component update results and eventual incremental results will now properly clear the error overlay after a successful build.","Url":"https://github.com/angular/angular-cli/pull/28784","RelatedDescription":"Closed or merged PR \"fix(@angular/build): always clear dev-server error overlay on non-error result\" (#28784)"},{"Id":"2634544636","IsPullRequest":false,"CreatedAt":"2024-11-04T22:00:53","Actor":"alexus85","Number":"28786","RawContent":null,"Title":"main.js ends up in Lazy loaded Chunks","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nsetting the **bundleName** for one of the styles to \"main\" results in main.js end up in **Lazy Loaded Chunks** category  \nThat also means the main.js doesn't have any hash at the end of it's filename.\n\n```\n      {\n        \"input\": \"styles/main.scss\",\n        \"bundleName\": \"main\",\n        \"inject\": false\n      },\n```\n\n```\nInitial chunk files           | Names         |  Raw size | Estimated transfer size\npolyfills.45732861e6a6851d.js | polyfills     |  34.19 kB |                11.03 kB\n\n                              | Initial total |  34.19 kB |                11.03 kB\n\nLazy chunk files              | Names         |  Raw size | Estimated transfer size\nmain.css, main.js             | main          | 277.90 kB |                49.44 kB\nruntime.a9fc7548b14f6ea7.js   | runtime       |   1.06 kB |               587 bytes\n```\n\nProposed solution\n\nAngular should report this collision as a warning. I spent hours figuring this out. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular: 18.1.4\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1801.4\n@angular-devkit/build-angular   18.1.4\n@angular-devkit/core            18.1.4\n@angular-devkit/schematics      18.1.4\n@schematics/angular             18.1.4\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.4\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28786","RelatedDescription":"Open issue \"main.js ends up in Lazy loaded Chunks\" (#28786)"},{"Id":"2633533233","IsPullRequest":false,"CreatedAt":"2024-11-04T18:22:06","Actor":"adumesny","Number":"28781","RawContent":null,"Title":"ng18 esbuild-based browser doesn't support .node loading unlike webpack","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nng18 + webpack\n\n### Description\n\nwent from ng16 to 18.2.8 and manually converting (nx workspace) to new esbuild remain not possible due to 1 blocking issue. can't load .node file\n\nI used this doc which make it sound like a liner changeto use browser-esbuild  https://angular.dev/tools/cli/build-system-migration, which is NOT the case. lots of file changed to fix\n* .scss files not found (had to add \"stylePreprocessorOptions\": { \"includePaths\": [\".\", ...] }\n* some .js on module not found. had to add .js extensions to includes\n* path not found (yarn add path). similar issue to #27425  ?\n* import * as moment from 'moment'; issues\n* and more...\n\n\n\n### Minimal Reproduction\n\n* manually converted existing app to use \n\"builder\": \"@angular-devkit/build-angular:browser-esbuild\"\n(I also tried \"builder\": \"@angular-devkit/build-angular:application\" and that only required a few more stting, but no behavior change)\n* yarn add @node-rs/jieba@1.9.0\nwhich is used indirectly by 2 level above\n* yarn add path\n(apparently webpack must incude it, but even compatibility browser-esbuild does not ?\n\n### Exception or Error\n\nX [ERROR] No loader is configured for \".node\" files: node_modules/@node-rs/jieba-win32-x64-msvc/jieba.win32-x64-msvc.node\n\n    node_modules/@node-rs/jieba/index.js:104:36:\n      104 │ ...        nativeBinding = require('@node-rs/jieba-win32-x64-msvc');\n\n\n### Your Environment\n\nAngular CLI: 18.2.9\nNode: 20.15.0\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 18.2.8\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.9\n@angular-devkit/build-angular   18.2.9\n@angular-devkit/core            18.2.9\n@angular-devkit/schematics      18.2.9\n@angular/cdk                    18.2.9\n@angular/cli                    18.2.9\n@angular/material               18.2.9\n@schematics/angular             18.2.9\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.4.5\nwebpack                         5.90.3\nzone.js                         0.14.10\n\n### Anything else relevant?\n\nusing the latest version of @node-rs/jieba@1.10.4 which sounds like it made the switch to WASM, which forces install and not suitable alternative\n`> yarn add @node-rs/jieba-wasm32-wasi --ignore-platform` as it uses cpu=wasm32\n\nI now get a different error about loading that, which maybe is related to #25102 and require futher code change/re-org which I'm not sure is feasible. having `.node` support like webpack would make life SO much easier like webpack did out of the box ?\n","Url":"https://github.com/angular/angular-cli/issues/28781","RelatedDescription":"Open issue \"ng18 esbuild-based browser doesn't support .node loading unlike webpack\" (#28781)"},{"Id":"2632214954","IsPullRequest":true,"CreatedAt":"2024-11-04T14:28:03","Actor":"alan-agius4","Number":"28778","RawContent":null,"Title":"test: add `@parcel/watcher` to allowed postinstall checks","State":"closed","Body":"Included `@parcel/watcher` in the list of packages allowed in the postinstall checks test.\r\n","Url":"https://github.com/angular/angular-cli/pull/28778","RelatedDescription":"Closed or merged PR \"test: add `@parcel/watcher` to allowed postinstall checks\" (#28778)"},{"Id":"2632443252","IsPullRequest":false,"CreatedAt":"2024-11-04T10:42:13","Actor":"shaheedac","Number":"28779","RawContent":null,"Title":"Clarification regarding the use of control flow in Angular 17.3.9","State":"closed","Body":"### Command\n\nhelp\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular standalone and control flow were used to migrate the application.\nIt's functioning properly.\nIs it okay to move production build?\n\n### Minimal Reproduction\n\nAngular standalone and control flow were used to migrate the application.\nIt's functioning properly.\nIs it okay to move production build?\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n17.3.9\n\n### Anything else relevant?\n\nAngular standalone and control flow were used to migrate the application.\nIt's functioning properly.\nIs it okay to move production build?","Url":"https://github.com/angular/angular-cli/issues/28779","RelatedDescription":"Closed issue \"Clarification regarding the use of control flow in Angular 17.3.9\" (#28779)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2639262712","IsPullRequest":false,"CreatedAt":"2024-11-06T21:26:05","Actor":"sjadamek","Number":"29978","RawContent":null,"Title":"bug(MatIcon): MatIcon within a MatMenuItem button does not show color when overridden","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a MatIcon is displayed within a MatMenuItem it does not honor its color override as it is overridden by another internal style and icon color styles are declared in the styles.scss.\n\n![Image](https://github.com/user-attachments/assets/35d94610-f15f-48c2-aa35-61be2f543ede)\n\n![Image](https://github.com/user-attachments/assets/3550ce7e-2098-4747-a318-47e1436b09b9)\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ywkkhy\n\nSteps to reproduce:\n1. Add icon to menu\n2. Set color of icon via class (M3 way)\n3. Icon does not honor color due to override of .mat-icon-no-color\n\n### Expected Behavior\n\nExplicit user color class should override internal color class.\n\n### Actual Behavior\n\nInternal color class overrides user color class.\n\n### Environment\n\n- Angular: ^18.2.0 to ^19.0.0-next.2\n- CDK/Material: ^18.2.0 to ^19.0.0-next.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\n","Url":"https://github.com/angular/components/issues/29978","RelatedDescription":"Open issue \"bug(MatIcon): MatIcon within a MatMenuItem button does not show color when overridden\" (#29978)"},{"Id":"2638748762","IsPullRequest":true,"CreatedAt":"2024-11-06T17:26:51","Actor":"wagnermaciel","Number":"29977","RawContent":null,"Title":"docs: release notes for the v18.2.12 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29977","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.12 release\" (#29977)"},{"Id":"2638743631","IsPullRequest":true,"CreatedAt":"2024-11-06T17:24:50","Actor":"wagnermaciel","Number":"29976","RawContent":null,"Title":"Bump version to \"v18.2.12\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29976","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.12\" with changelog.\" (#29976)"},{"Id":"2638726150","IsPullRequest":true,"CreatedAt":"2024-11-06T17:17:11","Actor":"wagnermaciel","Number":"29975","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29975","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.1 release\" (#29975)"},{"Id":"2638716717","IsPullRequest":true,"CreatedAt":"2024-11-06T17:13:02","Actor":"wagnermaciel","Number":"29974","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29974","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.1\" with changelog.\" (#29974)"},{"Id":"2638086950","IsPullRequest":false,"CreatedAt":"2024-11-06T13:22:20","Actor":"enesyalcin","Number":"29973","RawContent":null,"Title":"feat(ALL): provide Tokens in a Type Safe way","State":"open","Body":"### Feature Description\n\n## Syntax Sugarcoat Providers\n\nThe Angular Framework moved and is still moving to the new `provider` syntax approach, latest example is the `provideAppInitializer()` feature which comes with `angular@19`.  \n\nIn Angular Material we have the `provideNativeAdapter()` but besides that we don't have many providers. E.g. `LOCALE_ID` ist frequently used and provided but has no such provider and must be done with the old syntax.\n\n```ts\nconst appConfig = [\n   ...,\n   // existing new Syntax\n   provideNativeDateAdapter(),\n\n   // existing old Syntax\n   {\n    provide: LOCALE_ID,\n    useValue:'de-AT',\n  },\n];\n```\n\n## The Benefit\n\nYou have auto-complete and type safety out of the Box, so in this case you don't have to check which Properties the provider expects.\n\n## Implementation Example\nThere would be no breaking Change introduced by this change.\n\n```ts\n// Type Safety included\nexport function provideMatPaginatorDefaultOptions(options: MatPaginatorDefaultOptions,): ValueProvider {\n  return {\n    provide: MAT_PAGINATOR_DEFAULT_OPTIONS,\n    useValue: options,\n  };\n}\n```\n\n## Potential Providers\n\n| Token | Provider |\n|--------|--------|\n| `LOCALE_ID` | `provideLocaleId` |\n| `MAT_DIALOG_DEFAULT_OPTIONS` | `provideMatDialogDefaultOptions` |\n| `DATE_PIPE_DEFAULT_OPTIONS` | `provideDatePipeDefaultOptions` |\n| `MAT_FORM_FIELD_DEFAULT_OPTIONS` | `provideMatFormFieldDefaultOptions` |\n| `MAT_PAGINATOR_DEFAULT_OPTIONS` | `provideMatPaginatorDefaultOptions` |\n| `MAT_DATE_LOCALE` |  `provideMatDateLocale` | \n| `MAT_PROGRESS_BAR_DEFAULT_OPTIONS` | `provideMatProgressBarDefaultOptions` |\n\n\n\n\n### Use Case\n\nIt would be easier to **provide** Angular Material specific **Tokens in a Type Safe way** without having to check in the Source Code which Options the Token expects.\n\n```ts\n  // Current Syntax\n  {\n    provide: MAT_PAGINATOR_DEFAULT_OPTIONS,\n    useValue: {\n      pageSizeOptions: [5, 10, 20, 50, 100],\n      showFirstLastButtons: true,\n    } as MatPaginatorDefaultOptions,\n  },\n\n  // Proposed Syntax\n  provideMatPaginatorDefaultsOptions({\n    pageSizeOptions: [5, 10, 20, 50, 100],\n    showFirstLastButtons: true,\n  }),\n```","Url":"https://github.com/angular/components/issues/29973","RelatedDescription":"Open issue \"feat(ALL): provide Tokens in a Type Safe way\" (#29973)"},{"Id":"2637598964","IsPullRequest":true,"CreatedAt":"2024-11-06T13:10:14","Actor":"crisbeto","Number":"29972","RawContent":null,"Title":"fix(multiple): remove usages of Sass globals","State":"closed","Body":"In the latest version of Sass, the compiler logs a warning for usages of global functions. These changes switch our code to import the functions instead.","Url":"https://github.com/angular/components/pull/29972","RelatedDescription":"Closed or merged PR \"fix(multiple): remove usages of Sass globals\" (#29972)"},{"Id":"2636599873","IsPullRequest":true,"CreatedAt":"2024-11-05T22:32:04","Actor":"mmalerba","Number":"29970","RawContent":null,"Title":"fix(cdk/listbox): make tabindex zoneless compatible","State":"open","Body":"fixes #29953 ","Url":"https://github.com/angular/components/pull/29970","RelatedDescription":"Open PR \"fix(cdk/listbox): make tabindex zoneless compatible\" (#29970)"},{"Id":"2636464774","IsPullRequest":false,"CreatedAt":"2024-11-05T21:01:13","Actor":"AnkitaSood","Number":"29969","RawContent":null,"Title":"bug(theme): schematic doesn't ask for error hex color","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs of v18.2, a theme can be generated with a custom color with the following schematic:\n`ng generate @angular/material:m3-theme`\n\nThe schematic then prompts for hex codes for primary, secondary, tertiary, neutral colors. \n\nIt auto generates an error code palette based on the primary hex provided. It doesn't prompt the user to enter their own error color.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1.  Ensure app and material are on latest stable version - v18.2\n2. Run the schematic ng generate @angular/material:m3-theme to generate a custom theme.\n3. Notice that the schematic doesn't prompt to enter hex color to be used to represent the error color palette. \n\n\n### Expected Behavior\n\nThe schematic should prompt user to enter hex code that is used to represent the error color palette. \n\n### Actual Behavior\n\nSchematic doesn't prompt to enter hex color to be used to represent the error color palette. \n\n### Environment\n\n- Angular: 18.2\n- CDK/Material: 18.2\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29969","RelatedDescription":"Open issue \"bug(theme): schematic doesn't ask for error hex color\" (#29969)"},{"Id":"2631418538","IsPullRequest":false,"CreatedAt":"2024-11-05T16:28:32","Actor":"johnerickbs","Number":"29961","RawContent":null,"Title":"bug(mat-select): Mat-Select does not have background with custom theme","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to use a custom theme palette with the \"Color match\" from the Material theme builder (https://github.com/material-foundation/material-color-utilities), but I have the following errors:\n\n1- The material 3 theme builder generates a palette colors with HUE 5 and 15, these tone are not recognized by angular material, so I have to remove them in order to fix it.\n2- The mat-select doesn't have background.\n\nIs this a bug or what am I missing?\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-segeqm?file=src%2Fstyles%2Fm3-theme.scss\n\nSteps to reproduce:\n\n1. Open the material 3 theme builder (https://material-foundation.github.io/material-theme-builder/)\n2. Select the option \"Color match\"\n3. Put the colors for my palette (primary #034737 and tertiary #A9FF9B in my case)\n4. export the json\n5. Put the colors from the json in the **src/styles/m3-theme.scss**\n6. You will get an error:\n\n`Expected $config.color.primary to be a valid M3 palette. Got: (0: #000000, 5: #00150e, 10: #002118, 15: #002c21, 20: #00382b, 25: #004435, 30: #125040, 35: #215c4b, 40: #2f6857, 50: #49826f, 60: #639c88, 70: #7db7a2, 80: #98d3bd, 90: #b3efd8, 95: #c1fde6, 98: #e6fff3, 99: #f3fff8, 100: #ffffff, secondary: (0: #000000, 5: #08130f, 10: #121e1a, 15: #1c2824, 20: #27332e, 25: #323e39, 30: #3d4944, 35: #495550, 40: #55615c, 50: #6d7a74, 60: #87948d, 70: #a1aea8, 80: #bccac3, 90: #d8e6de, 95: #e6f4ec, 98: #effdf5, 99: #f3fff8, 100: #ffffff), neutral: (0: #000000, 5: #101110, 10: #1a1c1b, 15: #242625, 20: #2f3130, 25: #3a3c3a, 30: #464746, 35: #515351, 40: #5d5f5d, 50: #767776, 60: #90918f, 70: #ababa9, 80: #c6c6c4, 90: #e3e2e0, 95: #f1f1ee, 98: #faf9f7, 99: #fdfcfa, 100: #ffffff), neutral-variant: (0: #000000, 5: #0d1210, 10: #181d1a, 15: #222725, 20: #2d312f, 25: #383c3a, 30: #434845, 35: #4f5351, 40: #5b5f5d, 50: #737875, 60: #8d928f, 70: #a8aca9, 80: #c3c7c4, 90: #dfe3e0, 95: #eef2ee, 98: #f6faf6, 99: #f9fdf9, 100: #ffffff), error: (0: #000000, 10: #410002, 20: #690005, 25: #7e0007, 30: #93000a, 35: #a80710, 40: #ba1a1a, 50: #de3730, 60: #ff5449, 70: #ff897d, 80: #ffb4ab, 90: #ffdad6, 95: #ffedea, 98: #fff8f7, 99: #fffbff, 100: #ffffff))\n    ╷\n135 │   $light-theme: mat.define-theme(\n    │ ┌───────────────^\n136 │ │   (\n137 │ │     color: (\n138 │ │       theme-type: light,\n139 │ │       primary: $_primary,\n140 │ │       tertiary: $_tertiary,\n141 │ │     ),\n142 │ │   )\n143 │ │ );\n    │ └─^\n    ╵\n  src/styles/m3-theme.scss 135:15  @import\n  src/global-styles.scss 2:9       root stylesheet\nangular:styles/global:styles:1:8`\n\n7. Remove the HUE 5 and 15 from each palette and now it is fixed\n8. Select something from the mat-select and you will notice that it does not have a background\n\n### Expected Behavior\n\nA mat-select with a \"normal\" background\n\n### Actual Behavior\n\nThe mat-select does not have background\n\n### Environment\n\n- Angular: 18.2.10\n- CDK/Material: 18.2.11\n","Url":"https://github.com/angular/components/issues/29961","RelatedDescription":"Closed issue \"bug(mat-select): Mat-Select does not have background with custom theme\" (#29961)"},{"Id":"2633836698","IsPullRequest":true,"CreatedAt":"2024-11-05T13:23:27","Actor":"angular-robot","Number":"29967","RawContent":null,"Title":"build(config): migrate renovate config","State":"closed","Body":"The Renovate config in this repository needs migrating. Typically this is because one or more configuration options you are using have been renamed.\n\n  You don't need to merge this PR right away, because Renovate will continue to migrate these fields internally each time it runs. But later some of these fields may be fully deprecated and the migrations removed. So it's a good idea to merge this migration PR soon. \n\n\n\n\n\n🔕 **Ignore**: Close this PR and you won't be reminded about config migration again, but one day your current config may no longer be valid.\n\n❓ Got questions? Does something look wrong to you? Please don't hesitate to [request help here](https://redirect.github.com/angular/dev-infra).\n\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n","Url":"https://github.com/angular/components/pull/29967","RelatedDescription":"Closed or merged PR \"build(config): migrate renovate config\" (#29967)"},{"Id":"2634720316","IsPullRequest":true,"CreatedAt":"2024-11-05T12:57:21","Actor":"crisbeto","Number":"29968","RawContent":null,"Title":"fix(material/menu): use static elevation","State":"closed","Body":"Currently the menu's elevation is set using elevation classes, because earlier versions of the Material spec called for the elevation to increase for each level in a nested menu. That's no longer part of the spec and in v19 we won't include the elevation classes by default anymore. These changes remove the code that was handling the dynamic elevation and set the elevation using a token instead.","Url":"https://github.com/angular/components/pull/29968","RelatedDescription":"Closed or merged PR \"fix(material/menu): use static elevation\" (#29968)"},{"Id":"2632857046","IsPullRequest":true,"CreatedAt":"2024-11-04T16:03:18","Actor":"crisbeto","Number":"29966","RawContent":null,"Title":"fix(material/form-field): incorrect form field border radius with system-level themes","State":"closed","Body":"Fixes that the form field had the wrong border radius when using a system-level theme in M3.","Url":"https://github.com/angular/components/pull/29966","RelatedDescription":"Closed or merged PR \"fix(material/form-field): incorrect form field border radius with system-level themes\" (#29966)"},{"Id":"2628220560","IsPullRequest":false,"CreatedAt":"2024-11-04T14:03:49","Actor":"koumoua01","Number":"29956","RawContent":null,"Title":"bug(COMPONENT): mat-datepicker does not render the previous < and  next > icon correctly when set theme density: (scale: -2) and beyond","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/d1e83fff-ce3d-41bd-a571-1a7060bb3d41)\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nrender the button icon correctly\n\n### Actual Behavior\n\ndoes not render the button icon correctly\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29956","RelatedDescription":"Closed issue \"bug(COMPONENT): mat-datepicker does not render the previous < and  next > icon correctly when set theme density: (scale: -2) and beyond\" (#29956)"},{"Id":"2629140250","IsPullRequest":true,"CreatedAt":"2024-11-04T14:03:48","Actor":"crisbeto","Number":"29957","RawContent":null,"Title":"fix(material/datepicker): use SVG icons for calendar","State":"closed","Body":"The calendar's next/previous icons are currently rendered using an `:after` element, borders and a transform. This makes them hard to position accurately and fragile to changes in the container size. These changes switch to using SVG which is more robust.\r\n\r\nFixes #29956.","Url":"https://github.com/angular/components/pull/29957","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): use SVG icons for calendar\" (#29957)"},{"Id":"2632653087","IsPullRequest":false,"CreatedAt":"2024-11-04T13:28:46","Actor":"json-derulo","Number":"29965","RawContent":null,"Title":"docs-bug: styling tab broken","State":"closed","Body":"### Documentation Feedback\n\nThe newly added \"Styling\" tab is broken currently. A few hours ago it worked fine, but now when navigating to the \"Styling\" tab of any component, instead of the content only the following text is displayed:\n\n> This component does not support style overrides\n\nIn the browser console, the following error is printed once the \"Styling\" tab is opened:\n\n```\nmain.690dc78a22be8e65.js:1 ERROR TypeError: g.find is not a function\n    at 5862.c72688d4f30e63c6.js:1:21144\n    at main.690dc78a22be8e65.js:1:112617\n    at R._next (main.690dc78a22be8e65.js:1:109247)\n    at R.next (main.690dc78a22be8e65.js:1:98554)\n    at subscribe.H (main.690dc78a22be8e65.js:1:116016)\n    at R._next (main.690dc78a22be8e65.js:1:109247)\n    at R.next (main.690dc78a22be8e65.js:1:98554)\n    at R._subscribe (main.690dc78a22be8e65.js:1:95468)\n    at R._trySubscribe (main.690dc78a22be8e65.js:1:94215)\n    at R._trySubscribe (main.690dc78a22be8e65.js:1:97001)\n```\n\nLooks like #29964 might have broken it.\n\n### Affected documentation page\n\nhttps://rc.material.angular.io/components/checkbox/styling","Url":"https://github.com/angular/components/issues/29965","RelatedDescription":"Closed issue \"docs-bug: styling tab broken\" (#29965)"},{"Id":"2626807974","IsPullRequest":true,"CreatedAt":"2024-11-04T13:13:18","Actor":"crisbeto","Number":"29948","RawContent":null,"Title":"Distinguish unique IDs per app","State":"closed","Body":"Currently we generate unique IDs by declaring a file-level variable and incrementing it. The problem is that if there are multiple versions of Angular on the page at the same time, the IDs may collide. These changes switch to generating the variables through a common service that add the `APP_ID` to the ID.","Url":"https://github.com/angular/components/pull/29948","RelatedDescription":"Closed or merged PR \"Distinguish unique IDs per app\" (#29948)"},{"Id":"2629893229","IsPullRequest":false,"CreatedAt":"2024-11-04T13:12:38","Actor":"AndrewKushnir","Number":"29958","RawContent":null,"Title":"docs-bug: cookies popup doesn't have a shadow at next.material.angular.io","State":"closed","Body":"### Documentation Feedback\n\nExample page (open in incognito mode to make the cookies popup appear): https://next.material.angular.io/components/button/styling.\n\n![Image](https://github.com/user-attachments/assets/ea8e433c-defa-4112-854e-c2804f080bcf)\n\n\n### Affected documentation page\n\nhttps://next.material.angular.io/components/button/styling","Url":"https://github.com/angular/components/issues/29958","RelatedDescription":"Closed issue \"docs-bug: cookies popup doesn't have a shadow at next.material.angular.io\" (#29958)"},{"Id":"2632337628","IsPullRequest":true,"CreatedAt":"2024-11-04T11:52:01","Actor":"crisbeto","Number":"29964","RawContent":null,"Title":"build: generate styling example during the build","State":"closed","Body":"Currently the example in the styling pages on the docs site is generated at runtime which doesn't allow us to highlight it as code correctly. These changes move the generation of the example into the main repo and add syntax highlighting.","Url":"https://github.com/angular/components/pull/29964","RelatedDescription":"Closed or merged PR \"build: generate styling example during the build\" (#29964)"},{"Id":"2631302968","IsPullRequest":true,"CreatedAt":"2024-11-04T10:46:44","Actor":"crisbeto","Number":"29960","RawContent":null,"Title":"build: update to the Angular v19 RC","State":"closed","Body":"Updates all the Angular dependencies to the v19 release candidate.","Url":"https://github.com/angular/components/pull/29960","RelatedDescription":"Closed or merged PR \"build: update to the Angular v19 RC\" (#29960)"},{"Id":"2628111221","IsPullRequest":true,"CreatedAt":"2024-11-04T10:46:13","Actor":"jacksondearing96","Number":"29955","RawContent":null,"Title":"[Angular] Fix typo in documentation.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29955","RelatedDescription":"Closed or merged PR \"[Angular] Fix typo in documentation.\" (#29955)"},{"Id":"2632280879","IsPullRequest":false,"CreatedAt":"2024-11-04T10:07:12","Actor":"boszormenyip","Number":"29963","RawContent":null,"Title":"bug(MatAutoComplete): NG0301 error if the component under test is not a standalone component","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an an angular component that use the Autocomplete component from Angular Material. The component is not a standalone component. If I write a component test for my angular component, I get this error (The MatAutocompleteModule is imported in the AppModule and in the TestBed):\n```\nerror properties: Object({ code: -301 })\nError: NG0301: Export of name 'matAutocomplete' not found! Find more at https://angular.dev/errors/NG0301\n    at cacheMatchingLocalNames (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82705:32)\n    at resolveDirectives (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82463:21)\n    at elementStartFirstCreatePass (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93638:3)\n    at ɵɵelementStart (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93672:41)\n    at AutocompleteHarnessExample_Template (ng:///AutocompleteHarnessExample.js:21:9)\n    at executeTemplate (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:81970:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83132:7)\n    at renderComponent (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83078:3)\n    at renderChildComponents (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83178:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83160:7)\n```\n\nThe StackBlitz example is a modification of the 'Testing with MatAutocompleteHarness' example from the documentation of the Autocomplete example. The only change is the removal of the standalone: true flag from the component, and additional bolierplate (adding of angular.module.ts, changing the main.ts) to make the test running.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-autocomplete-bug?file=src%2Fexample%2Fautocomplete-harness-example.spec.ts\nSteps to reproduce:\n1. Open StackBlitz.\n2. Wait until the build and the test execution is done.\n\n\n### Expected Behavior\n\nGreen test\n\n### Actual Behavior\n\nNG0301: Export of name 'matAutocomplete' not found error:\n```\nerror properties: Object({ code: -301 })\nError: NG0301: Export of name 'matAutocomplete' not found! Find more at https://angular.dev/errors/NG0301\n    at cacheMatchingLocalNames (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82705:32)\n    at resolveDirectives (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:82463:21)\n    at elementStartFirstCreatePass (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93638:3)\n    at ɵɵelementStart (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:93672:41)\n    at AutocompleteHarnessExample_Template (ng:///AutocompleteHarnessExample.js:21:9)\n    at executeTemplate (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:81970:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83132:7)\n    at renderComponent (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83078:3)\n    at renderChildComponents (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83178:5)\n    at renderView (https://angularautocompletebug-jdtb--9876--34c588ed.local-credentialless.webcontainer.io/_karma_webpack_/vendor.js:83160:7)\n```\n\n### Environment\n\n- Angular: I tried with two version: 19.0.0-next.2 and 18.1.4. The version 19.0.0-next.2 is in the StackBlitz.\n- CDK/Material: I tried with two version: 19.0.0-next.2 and 18.1.4. The version 19.0.0-next.2 is in the StackBlitz.\n- Browser(s): Firefox 132.0, Google Chrome 130.0.6723.69\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.10\n","Url":"https://github.com/angular/components/issues/29963","RelatedDescription":"Closed issue \"bug(MatAutoComplete): NG0301 error if the component under test is not a standalone component\" (#29963)"},{"Id":"2632245968","IsPullRequest":false,"CreatedAt":"2024-11-04T09:19:20","Actor":"Muqhees","Number":"29962","RawContent":null,"Title":"Angular material components don't show tooltips if they are in disabled state","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nTooltips for some Angular components like mat-button and mat-checkbox do not work if they are in a disabled state whereas it works for other components like mat-menu-item\n\nAlso tooltips work for basic html elements like button work even if they are in disabled state. Wanted to get more insight on this If this is a bug or expected behavior. In latest versions tooltip behavior for disabled elements is inconsistent for different components and it use to work for all components in version 14\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-kmkdyn\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nTooltips should work for disabled state components like mat-button and mat-checkbox\n\n### Actual Behavior\n\nTooltips don't work for disabled state components like mat-button and mat-checkbox\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29962","RelatedDescription":"Closed issue \"Angular material components don't show tooltips if they are in disabled state\" (#29962)"},{"Id":"2631260356","IsPullRequest":false,"CreatedAt":"2024-11-03T14:56:55","Actor":"poirierlouis","Number":"29959","RawContent":null,"Title":"bug(MatTree): padding is not recomputed when moving a node inside/outside an expandable node","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs `TreeControl` is deprecated, I started migrating to the latest API using `childrenAccessor`. So far so good, except for one case not working any more.\n\nI'm using `matTreeNodePadding` and `matTreeNodePaddingIndent` on `<mat-tree-node>`. When I move a node inside/outside of an expandable node, padding is not recomputed as-is.\n\nExpanding/collapsing the parent node in which the node was moved, will recompute its padding though.\n\n### Reproduction\n\nI'm working on an open-source project, so I don't have a small example to share for now.\n\nSteps to reproduce:\n1. Clone branch `https://github.com/poirierlouis/FellowImGui/tree/refactor/mat-tree`\n2. `npm install`\n3. `npm run start`\n4. Open browser in `localhost:4200/editor`\n5. Replicate actions like in video below:\n\n![https://github.com/user-attachments/assets/8a0b04bd-d488-4164-90bc-4acac70324af](https://github.com/user-attachments/assets/8a0b04bd-d488-4164-90bc-4acac70324af)\n\nYou can find code related to `<mat-tree>` in:\n- fig-tree: [component](https://github.com/poirierlouis/FellowImGui/blob/refactor/mat-tree/src/app/pages/editor/tree/tree.component.ts) + [template](https://github.com/poirierlouis/FellowImGui/blob/refactor/mat-tree/src/app/pages/editor/tree/tree.component.html)\n\n`dataSource` is set with a [plain array](https://github.com/poirierlouis/FellowImGui/blob/056ef433f1001dd4df6a288d577a3ef8ac47b6d8/src/app/pages/editor/tree/tree.component.ts#L84).\nWhen changed, `dataSource` is set with a [new array](https://github.com/poirierlouis/FellowImGui/blob/056ef433f1001dd4df6a288d577a3ef8ac47b6d8/src/app/pages/editor/tree/tree.component.ts#L99). That is, only the root of `dataSource` is changed with a new array reference. It doesn't cascade down through children.\n\nMaybe it is related? Should the entire tree be cloned somehow, to trigger changes detection?\n\n### Expected Behavior\n\nWhen a node is moved inside/outside of an expandable node (level is changed), padding should be recomputed based on the new level of the node.\n\n### Actual Behavior\n\nPadding of the node is not updated when moving the node inside/outside of an expandable node.\n\n### Environment\n\n- Angular: 18.2.10\n- CDK/Material: 18.2.11\n- Browser(s): Firefox / Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/29959","RelatedDescription":"Open issue \"bug(MatTree): padding is not recomputed when moving a node inside/outside an expandable node\" (#29959)"},{"Id":"2627892705","IsPullRequest":false,"CreatedAt":"2024-10-31T21:00:01","Actor":"tp1906","Number":"29954","RawContent":null,"Title":"Unable to resize radio button to smaller version","State":"open","Body":"Is it possible to resize the radio button including the ripple/outline?  I was able to resize the circle; however, the outline/ripple is not centered.\n\n\n .small-radio-button {\n    .mdc-radio {\n     padding: 2px;\n      --mdc-radio-state-layer-size: 32px;\n      height: 16px;\n      width: 16px;\n    }\n\n    .mat-mdc-radio-touch-target {\n      height: 16px;\n      width: 16px;\n    }\n\n    .mdc-radio__background {\n      height: 16px;\n      width: 16px;\n    }\n\n    .mdc-radio__inner-circle {\n      border-width: 8px;\n    }\n\n    .mdc-radio__outer-circle {\n        border-width: 1px;\n    }\n\n  }","Url":"https://github.com/angular/components/issues/29954","RelatedDescription":"Open issue \"Unable to resize radio button to smaller version\" (#29954)"},{"Id":"2627632718","IsPullRequest":false,"CreatedAt":"2024-10-31T19:08:57","Actor":"andgdk","Number":"29953","RawContent":null,"Title":"bug(CdkOption): CdkListbox/CdkOption - expression changed after checked error | experimental zoneless change detection","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am preparing for zoneless change detection and configured my app with those providers:\n\n```typescript\nprovideExperimentalZonelessChangeDetection(),\nprovideExperimentalCheckNoChangesForDebug({\n    interval: 10000,\n    exhaustive: true,\n    // useNgZoneOnStable: true,\n}),\n```\n\nAn expression changed after it has been checked error is thron w/ `CdkOption_HostBindings (listbox.mjs:165:59)` in the stack trace.\n\n### Reproduction\n\n[StackBlitz reproduction](https://stackblitz.com/edit/components-issue-starter-xraama?file=src%2Fmain.ts)\n\nRun in StackBlitz and open the developer console.\n- As long as the user does **not interact w/ any button**, the expression has changed after it has been checked **error is thrown** in each interval.\n- **As soon as any button is pressed, the error is not thrown any more.**\n\n### Expected Behavior\n\nThe error not being thrown - given that I did not make a mistake while providing the initial value.\n\n### Actual Behavior\n\n```shell\nERROR RuntimeError: NG0100: ExpressionChangedAfterItHasBeenCheckedError:\nExpression has changed after it was checked. Previous value for 'attr.tabindex': '-1'. Current value: '0'.\nExpression location: _SomeOnPushComponent component. Find more at https://angular.dev/errors/NG0100\n    at throwErrorIfNoChangesMode (core.mjs:10493:9)\n    at bindingUpdated (core.mjs:18604:9)\n    at ɵɵattribute (core.mjs:20540:7)\n    at CdkOption_HostBindings (listbox.mjs:165:59)\n    at processHostBindingOpCodes (core.mjs:11662:9)\n    at refreshView (core.mjs:13392:5)\n    at detectChangesInView (core.mjs:13552:5)\n    at detectChangesInViewIfAttached (core.mjs:13514:3)\n    at detectChangesInEmbeddedViews (core.mjs:13474:7)\n    at refreshView (core.mjs:13371:5)\n``` \n\n### Environment\n\n- Angular: 18.2.9\n- CDK/Material: 18.2.10\n- Browser(s): Edge 128.0.2739.54\n- Operating System: Windows 11\n- Node: 22.10.0\n- OS: win32-x64\n- Native Target: x86_64-windows\n- yarn: 4.5.1\n","Url":"https://github.com/angular/components/issues/29953","RelatedDescription":"Open issue \"bug(CdkOption): CdkListbox/CdkOption - expression changed after checked error | experimental zoneless change detection\" (#29953)"},{"Id":"2626990896","IsPullRequest":true,"CreatedAt":"2024-10-31T14:33:38","Actor":"amysorto","Number":"29952","RawContent":null,"Title":"docs: release notes for the v19.0.0-rc.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29952","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.0-rc.0 release\" (#29952)"},{"Id":"2626986279","IsPullRequest":true,"CreatedAt":"2024-10-31T14:21:46","Actor":"amysorto","Number":"29951","RawContent":null,"Title":"Bump version to \"v19.0.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29951","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-rc.0\" with changelog.\" (#29951)"},{"Id":"2626962834","IsPullRequest":true,"CreatedAt":"2024-10-31T14:15:08","Actor":"amysorto","Number":"29950","RawContent":null,"Title":"docs: release notes for the v18.2.11 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29950","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.11 release\" (#29950)"},{"Id":"2626954224","IsPullRequest":true,"CreatedAt":"2024-10-31T14:09:27","Actor":"amysorto","Number":"29949","RawContent":null,"Title":"Bump version to \"v18.2.11\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29949","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.11\" with changelog.\" (#29949)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-07T03:30:02.45212Z","RunDurationInMilliseconds":1705}