{"Data":{"Angular-Issues":{"Issues":[{"Id":"2580195550","IsPullRequest":true,"CreatedAt":"2024-10-11T01:31:34","Actor":"angular-robot","Number":"58155","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to 583fc8c","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `7bceee9` -> `583fc8c` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTYuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58155","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to 583fc8c\" (#58155)"},{"Id":"2580105312","IsPullRequest":true,"CreatedAt":"2024-10-11T00:11:05","Actor":"dgp1130","Number":"58154","RawContent":null,"Title":"fix(compiler): ignore placeholder-only i18n messages","State":"open","Body":"Message which only contain a single placeholder cannot be translated, there is no static text to be translated. Therefore these messages can be skipped and shouldn't be extracted at all.\r\n\r\nIdeally, Angular would throw an error if a message is only a placeholder, since it should not contain an `i18n` attribute at all. However this would be a breaking change and require a migration which isn't in scope right now. We can explore converting this to a hard error sometime in the future.\r\n\r\nNote that this change is not gated on any flag and is currently targeting `patch`. I think this is reasonable because placeholder-only messages are useless to extract, but it is an observable behavior change. If we think that's too risky, I can put it behind a flag or target `major`.","Url":"https://github.com/angular/angular/pull/58154","RelatedDescription":"Open PR \"fix(compiler): ignore placeholder-only i18n messages\" (#58154)"},{"Id":"2579868226","IsPullRequest":false,"CreatedAt":"2024-10-10T21:22:21","Actor":"Blackbaud-PaulCrowder","Number":"58153","RawContent":null,"Title":"View encapsulation no longer handles `:is()` and `:not()` consistently","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAs of [this change](https://github.com/angular/angular/commit/7a6fd427d5ad70ad4c50693f54a6e77bf51eea86) that was released in Angular 18.2.8, inner selectors of `:is()` are now scoped for view encapsulation. This broke a Sass mixin my team wrote that worked regardless of whether view encapsulation was enabled. We added branching logic to our mixin to work around this, but while troubleshooting we noticed that `:not()` still does not scope inner selectors, leading to inconsistencies between the two otherwise very similar pseudo-classes.\n\nThis Stackblitz exhibits the [old behavior](https://stackblitz.com/edit/angular-vnauyk-4tulmw?file=src%2Fapp%2Fdemo.component.ts) and this Stackblitz exhibits the [new behavior](https://stackblitz.com/edit/angular-vnauyk-98uu1x?file=src%2Fapp%2Fdemo.component.ts).\n\nMy main concern is less about whether the change to `:is()` is appropriate and more about whether `:not()` is going to change at a later date, especially in a patch release which will result in another breaking change for my team.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-vnauyk-98uu1x?file=src%2Fapp%2Fdemo.component.ts\n\n### Please provide the exception or error you saw\n\nN/A\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.8\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.8\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58153","RelatedDescription":"Open issue \"View encapsulation no longer handles `:is()` and `:not()` consistently\" (#58153)"},{"Id":"2579362297","IsPullRequest":true,"CreatedAt":"2024-10-10T16:47:37","Actor":"devversion","Number":"58152","RawContent":null,"Title":"refactor(migrations): assign incompatibility reasons for query migration","State":"open","Body":"Instead of skipping queries without any reasoning, we should categorize fields that couldn't be migrated. This is also important for the VSCode integrationâ€” similar to how it's done with the inputs migration.\r\n\r\nWe are fully sharing the problematic pattern detection etc. This means we are also sharing the enum. Not super ideal, but enables the best sharing of code.","Url":"https://github.com/angular/angular/pull/58152","RelatedDescription":"Open PR \"refactor(migrations): assign incompatibility reasons for query migration\" (#58152)"},{"Id":"2579152506","IsPullRequest":false,"CreatedAt":"2024-10-10T15:56:14","Actor":"aguskov1987","Number":"58151","RawContent":null,"Title":"Unable to resolve dependency tree during NPM install","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nTHIS ERROR HAPPENS WHEN INSTALLING DEPS FOR THE ACTUAL ANGULAR FRAMEWORK, NOT ANGULAR APPLICATION\nWhen installing the npm dependencies for the latest main branch (19.0.0-next-8) I encounter the following error:\n\nnpm error code ERESOLVE\nnpm error ERESOLVE unable to resolve dependency tree\nnpm error\nnpm error While resolving: angular-srcs@19.0.0-next.8\nnpm error Found: @angular/core@19.0.0-next.5\nnpm error node_modules/@angular/core\nnpm error   dev @angular/core@\"^19.0.0-next\" from the root project\nnpm error   peer @angular/core@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/material@19.0.0-next.4\nnpm error   node_modules/@angular/material\nnpm error     @angular/material@\"19.0.0-next.4\" from the root project\nnpm error   2 more (@angular/animations, @angular/cdk)\nnpm error\nnpm error Could not resolve dependency:\nnpm error peer @angular/core@\"19.0.0-next.9\" from @angular/common@19.0.0-next.9\nnpm error node_modules/@angular/common\nnpm error   peer @angular/common@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/material@19.0.0-next.4\nnpm error   node_modules/@angular/material\nnpm error     @angular/material@\"19.0.0-next.4\" from the root project\nnpm error   peer @angular/common@\"^19.0.0-0 || ^19.1.0-0 || ^19.2.0-0 || ^19.3.0-0 || ^20.0.0-0\" from @angular/cdk@19.0.0-next.4\nnpm error   node_modules/@angular/cdk\nnpm error     @angular/cdk@\"19.0.0-next.4\" from the root project\nnpm error     1 more (@angular/material)\nnpm error\nnpm error Fix the upstream dependency conflict, or retry\nnpm error this command with --force or --legacy-peer-deps\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\nnpm error\nnpm error\nnpm error For a full report see:\nnpm error ---\nnpm verbose cwd ---\nnpm verbose os Windows_NT 10.0.22631\nnpm verbose node v20.18.0\nnpm verbose npm  v10.8.2\nnpm verbose exit 1\nnpm verbose code 1\nnpm error A complete log of this run can be found in: ---\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.8\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.8 (cli-only)\n@angular-devkit/core         18.2.8 (cli-only)\n@angular-devkit/schematics   18.2.8 (cli-only)\n@schematics/angular          18.2.8 (cli-only)\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58151","RelatedDescription":"Closed issue \"Unable to resolve dependency tree during NPM install\" (#58151)"},{"Id":"2578983291","IsPullRequest":true,"CreatedAt":"2024-10-10T14:08:33","Actor":"crisbeto","Number":"58150","RawContent":null,"Title":"Generate HMR initializer code","State":"open","Body":"Includes a couple of commits that enable the compiler to output calls that will enable HMR for component classes, as well as fix for file paths in `setClassDebugInfo`.\r\n\r\n### refactor(compiler): add logic to generate the HMR initializer\r\nAdds the logic that will generate the `import` expression that will initializer HMR for a specific component.\r\n\r\n### refactor(compiler-cli): output HMR initializer code\r\nAdds the logic to the compiler that will output the HMR initializer code for each component, if enabled.\r\n\r\n### fix(compiler-cli): incorrectly generating relative file paths on case-insensitive platforms\r\n\r\nWe're using `path.relative` to compute a relative path between a `SourceFile` and the one of the `rootDirs`. The problem is that the `rootDirs` get passed through `getCanonicalFileName` which lowercases the path in some platforms, while `SourceFile.fileName` is always case-insensitive. This yields a path outside of the project which we were ignoring.\r\n\r\nThis change passes the `SourceFile.fileName` before passing it through `path.relative` to ensure that we get a valid result.","Url":"https://github.com/angular/angular/pull/58150","RelatedDescription":"Open PR \"Generate HMR initializer code\" (#58150)"},{"Id":"2578770267","IsPullRequest":false,"CreatedAt":"2024-10-10T12:57:01","Actor":"vz-tl","Number":"58149","RawContent":null,"Title":"origin entry in HTTP_TRANSFER_CACHE_ORIGIN_MAP doesn't allow empty value","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhile trying to use  `HTTP_TRANSFER_CACHE_ORIGIN_MAP` InjectionToken for providing different endpoint origins on server and client side, we faced and issue where the client endpoint (the value of a map's property) has to stay empty. \n\nExample:\n```\n{\n  provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n  useValue: {\n    'https://internal.endpoint:8000': ''\n  }\n}\n```\nOn server side, Angular should request from a network-internal endpoint origin, whereas the endpoint is mapped to the root when accessing it publicly on client-side, so only the pathname without any origin has to be used.\n\nBUT, the above configuration unfortunately won't work with emtpy values, as those are considered invalid, because of just doing a falsy check instead of checking against null/undefined. See https://github.com/angular/angular/blob/main/packages/common/http/src/transfer_cache.ts#L401\n\nSo, in our case we aren't able to use this very handy functionality, forcing us to continue using our existing custom transfer-cache interceptor, we actually planned to get rid of after migrating to NG18.\n\nHighly appreciating a fix that also allows empty origins for the client-side.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.0\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.7\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... google-maps, language-service, platform-browser\n... platform-browser-dynamic, platform-server, router, ssr\n... youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@angular/cli                    18.2.0\n@schematics/angular             18.2.7\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58149","RelatedDescription":"Open issue \"origin entry in HTTP_TRANSFER_CACHE_ORIGIN_MAP doesn't allow empty value\" (#58149)"},{"Id":"2578609182","IsPullRequest":true,"CreatedAt":"2024-10-10T11:47:48","Actor":"crisbeto","Number":"58148","RawContent":null,"Title":"refactor(core): add internal utility to resolve the component name of a node","State":"open","Body":"Adds a utility, meant for internal consumption, that will return the class name of the closest component node to an element.","Url":"https://github.com/angular/angular/pull/58148","RelatedDescription":"Open PR \"refactor(core): add internal utility to resolve the component name of a node\" (#58148)"},{"Id":"2578326221","IsPullRequest":true,"CreatedAt":"2024-10-10T10:16:52","Actor":"devversion","Number":"58147","RawContent":null,"Title":"Bump version to \"v19.0.0-next.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58147","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.9\" with changelog.\" (#58147)"},{"Id":"2578305201","IsPullRequest":true,"CreatedAt":"2024-10-10T10:06:32","Actor":"devversion","Number":"58146","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/58146","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#58146)"},{"Id":"2578295440","IsPullRequest":true,"CreatedAt":"2024-10-10T09:59:47","Actor":"devversion","Number":"58145","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/58145","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#58145)"},{"Id":"2578223827","IsPullRequest":false,"CreatedAt":"2024-10-10T09:31:54","Actor":"simonhellweger","Number":"58144","RawContent":null,"Title":"Image Link for the Tutorial doesn't work.","State":"open","Body":"### Describe the problem that you experienced\n\nI was doing the Angular Tutorial. I wondered why the images won't appear. I checked the code multiple times. After some time i checked the url. Then I saw the link was invalid.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/assets/images/tutorials/common\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\nFix the link.\n\n### Add a screenshot if that helps illustrate the problem\n\n![Image](https://github.com/user-attachments/assets/0e385e57-62f1-4d58-8c6c-68b0f4a916b1)\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/58144","RelatedDescription":"Open issue \"Image Link for the Tutorial doesn't work.\" (#58144)"},{"Id":"2578093837","IsPullRequest":true,"CreatedAt":"2024-10-10T08:39:08","Actor":"dzhavat","Number":"58143","RawContent":null,"Title":"docs(language-service): fix link URLs","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58143","RelatedDescription":"Open PR \"docs(language-service): fix link URLs\" (#58143)"},{"Id":"2575998761","IsPullRequest":true,"CreatedAt":"2024-10-10T08:12:23","Actor":"devversion","Number":"58136","RawContent":null,"Title":"refactor(migrations): detect ternary narrowing in input and query migrations","State":"closed","Body":"\r\nWe should skip inputs/queries that are part of ternary narrowing expressions. Those would break builds and we can quickly avoid this in the safe mode as detection is rather easy with the existing analysis data we have.","Url":"https://github.com/angular/angular/pull/58136","RelatedDescription":"Closed or merged PR \"refactor(migrations): detect ternary narrowing in input and query migrations\" (#58136)"},{"Id":"2576596340","IsPullRequest":false,"CreatedAt":"2024-10-09T18:40:59","Actor":"superamadeus","Number":"58142","RawContent":null,"Title":"Allow Pipes (or Similar) in Action Expressions (Event Bindings)","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, compiler\n\n### Description\n\nPipes are forbidden in action expressions (event bindings) according to the parser. \nThere are times that it would be convenient and (IMO) a huge productivity and organization boost if they were allowed.\n\nExample:\n```html\n<button (click)=\"count.set(count() | contrivedIncrementPipe)\">Count: {{count()}}</button>\n// NG5002: Parser Error: Cannot have a pipe in an action expression at column 21 in [count.set(count() | contrivedIncrementPipe)] \n// in /home/projects/stackblitz-starters-p3ug7s/src/main.ts@18:21\n```\n\nI imagine that this use case does not map directly to the other semantics of pipes as they exist in Angular today (re: change detection mostly). \n\nMy motivating use case is emulating Vue's _[Event Modifiers](https://vuejs.org/guide/essentials/event-handling#event-modifiers)_ for `Event.stopPropagation()` and `Event.preventDefault()`.\n\n```html\n<button (click)=\"handleClickRun($event | $stop | $prevent)\">Run!</button>\n// NG5002: Parser Error: Cannot have a pipe in an action expression at column 25 in [handleClickRun($event | $stop | $prevent)] \n// in /home/projects/stackblitz-starters-p3ug7s/src/main.ts@32:21\n```\n\n```typescript\n@Pipe({\n  name: '$prevent',\n  standalone: true,\n  // idempotent: true,\n})\nexport class EventPreventDefaultPipe implements PipeTransform {\n  transform<T extends Event>(event: T): T {\n    event.preventDefault();\n    return event;\n  }\n}\n\n@Pipe({\n  name: '$stop',\n  standalone: true,\n  // idempotent: true,\n})\nexport class EventStopPropagationPipe implements PipeTransform {\n  transform<T extends Event>(event: T): T {\n    event.stopPropagation();\n    return event;\n  }\n}\n```\n\n### Proposed solution\n\nEnd the prohibition of pipes in action expressions.\n\n**or**\n\nProvide a new thing (i.e. new decorator instead of `@Pipe`) to achieve the same goal: make it easier to share certain functionality in action expressions.\n\n### Alternatives considered\n\n**Dependency Injection / Local Member Declaration**\nThis could also be resolved by explicitly injecting a service object or otherwise manually providing the functionality to your component.\nThis is the status quo, but it is often excessively cumbersome and error prone-- for what I imagine to be the precise reasons pipes exist in the first place. \n\nKeywords I used to try to find existing discussion/issues (with no luck): pipes, NG5002, action expression, event binding, event modifier\n\nEdit: removed `pure: true` from my example pipes, because they are not pure :)","Url":"https://github.com/angular/angular/issues/58142","RelatedDescription":"Closed issue \"Allow Pipes (or Similar) in Action Expressions (Event Bindings)\" (#58142)"},{"Id":"2576249667","IsPullRequest":true,"CreatedAt":"2024-10-09T16:23:35","Actor":"devversion","Number":"58139","RawContent":null,"Title":"refactor(migrations): allow reuse of input incompatibility categorization in query migration","State":"closed","Body":"This commit moves the incompatibility categorization into a more common place, and renames it from Input incompatibilities to \"field incompatibilities\". This construct can then be used in the queries migration as well to give insight into why certain fields weren't migrated.","Url":"https://github.com/angular/angular/pull/58139","RelatedDescription":"Closed or merged PR \"refactor(migrations): allow reuse of input incompatibility categorization in query migration\" (#58139)"},{"Id":"2576279346","IsPullRequest":false,"CreatedAt":"2024-10-09T15:56:59","Actor":"taylorwaddell","Number":"58140","RawContent":null,"Title":"HEAD TO ANGULAR.DEV button does lead to correct page for @defer","State":"closed","Body":"### Describe the problem that you experienced\n\nThe old documentation page for `@defer`, [angular.io/api/core/defer](https://angular.io/api/core/defer), has the standard \"HEAD TO ANGULAR.DEV\" button in the header of the pagee. This button brings the user to [angular.dev/api/core/defer](https://angular.dev/api/core/defer) which is not a valid page. The new angular.dev page for `@defer` is [angular.dev/api/core/@defer](https://angular.dev/api/core/@defer).\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/api/core/defer\n\n### Describe what you were looking for in the documentation\n\nI was looking for the updated docs page for `@defer`.\n\n### Describe the actions that led you to experience the problem\n\nClicking the \"HEAD TO ANGULAR.DEV\" button in the header on the [angular.dev/api/core/defer](https://angular.dev/api/core/defer) page.\n\n### Describe what you want to experience that would fix the problem\n\nI want this button to bring me to [angular.dev/api/core/@defer](https://angular.dev/api/core/@defer).\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/58140","RelatedDescription":"Closed issue \"HEAD TO ANGULAR.DEV button does lead to correct page for @defer\" (#58140)"},{"Id":"2576337225","IsPullRequest":true,"CreatedAt":"2024-10-09T15:55:46","Actor":"JeanMeche","Number":"58141","RawContent":null,"Title":"docs(docs-infra): fix redirect for `@defer`","State":"open","Body":"fixes #58140\r\n","Url":"https://github.com/angular/angular/pull/58141","RelatedDescription":"Open PR \"docs(docs-infra): fix redirect for `@defer`\" (#58141)"},{"Id":"2575349819","IsPullRequest":false,"CreatedAt":"2024-10-09T15:23:37","Actor":"jsaguet","Number":"58132","RawContent":null,"Title":"Signal input/queries migrations fail on Windows","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nOn Windows systems, the signal/queries migrations fail with the following error.\n```\nError: File does not exist for \"lstat\": /C/tsconfig.app.json\n    at DevkitMigrationFilesystem.lstat (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:31333:19)\n    at calcProjectFileAndBasePath (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:144:31)\n    at readConfiguration (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:176:43)\n    at createNgtscProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:331:22)\n    at SignalQueriesMigration.createProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:367:16)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:861:40\n    at Array.map (<anonymous>)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:859:60\n    at async callRuleAsync (C:\\angular-project\\node_modules\\@angular-devkit\\schematics\\src\\rules\\call.js:77:18)\n```\n\nThis is reproducible with a new angular project generated by the CLI and updated to ng 19.\nCommands run: `ng g @angular/core:signal-input-migration` or `ng g @angular/core:signal-queries-migration` with default options.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/jsaguet/angular-signal-migration\n\n### Please provide the exception or error you saw\n\n```\nError: File does not exist for \"lstat\": /C/tsconfig.app.json\n    at DevkitMigrationFilesystem.lstat (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:31333:19)\n    at calcProjectFileAndBasePath (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:144:31)\n    at readConfiguration (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:176:43)\n    at createNgtscProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:331:22)\n    at SignalQueriesMigration.createProgram (C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\group_replacements-472b2387.js:367:16)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:861:40\n    at Array.map (<anonymous>)\n    at C:\\angular-project\\node_modules\\@angular\\core\\schematics\\bundles\\signal-queries-migration.js:859:60\n    at async callRuleAsync (C:\\angular-project\\node_modules\\@angular-devkit\\schematics\\src\\rules\\call.js:77:18)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 19.0.0-next.8\nAngular Core: 19.0.0-next.8\n\nPlatform: Windows 10 64bits\n\n### Anything else?\n\nFrom what I've seen while debugging, it looks like this line behaves differently on macOS and Windows:\nhttps://github.com/angular/angular/blob/306443dc7c7987da1d22a9ae65b0becfd31f9781/packages/core/schematics/utils/tsurge/helpers/angular_devkit/devkit_filesystem.ts#L79\n\nOn MacOS it returns `/tsconfig.app.json` which is working and on windows it returns `/C/tsconfig.app.json` which doesn't resolve to anything.","Url":"https://github.com/angular/angular/issues/58132","RelatedDescription":"Closed issue \"Signal input/queries migrations fail on Windows\" (#58132)"},{"Id":"2576095247","IsPullRequest":true,"CreatedAt":"2024-10-09T15:23:35","Actor":"devversion","Number":"58137","RawContent":null,"Title":"fix(migrations): properly resolve tsconfig paths on windows","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/58137","RelatedDescription":"Closed or merged PR \"fix(migrations): properly resolve tsconfig paths on windows\" (#58137)"},{"Id":"2576228233","IsPullRequest":true,"CreatedAt":"2024-10-09T15:12:59","Actor":"josephperrott","Number":"58138","RawContent":null,"Title":"build: migrate to use yarn v4","State":"open","Body":"Building on top of @clydin's work in #56442\r\n","Url":"https://github.com/angular/angular/pull/58138","RelatedDescription":"Open PR \"build: migrate to use yarn v4\" (#58138)"},{"Id":"2575779749","IsPullRequest":true,"CreatedAt":"2024-10-09T13:50:04","Actor":"JeanMeche","Number":"58135","RawContent":null,"Title":"fix(platform-server): destroy `PlatformRef` when error happens duringthe `bootstrap()` phase","State":"closed","Body":"The `bootstrap()` phase might fail e.g. due to an rejected promise in some `APP_INIIALIZER`. If `PlatformRef` is not destroyed, then the main app's injector is not destroyed and therefore `ngOnDestroy` hooks of singleton services is not called on the end (failure) of SSR.\r\n\r\nThis could lead to possible memory leaks in custom SSR apps, if their singleton services' `ngOnDestroy` hooks contained an important teardown logic (e.g. unsubscribing from RxJS observable).\r\n\r\nNote: I needed to fix by the way another thing too: now we destroy `moduleRef` when `platformInjector` is destroyed - by setting a `PLATFORM_DESTROY_LISTENER`\r\n\r\nPatch port of #58112\r\n","Url":"https://github.com/angular/angular/pull/58135","RelatedDescription":"Closed or merged PR \"fix(platform-server): destroy `PlatformRef` when error happens duringthe `bootstrap()` phase\" (#58135)"},{"Id":"2575672709","IsPullRequest":false,"CreatedAt":"2024-10-09T11:44:13","Actor":"kaisnb","Number":"58134","RawContent":null,"Title":"Inconsistent recommendation for HostBinding vs host in styleguide and docs","State":"closed","Body":"### Describe the problem that you experienced\n\nThe Angular docs say [\"Always prefer using the host property over @HostBinding and @HostListener. These decorators exist exclusively for backwards compatibility.\"](https://angular.dev/guide/components/host-elements#the-hostbinding-and-hostlistener-decorators:~:text=Always%20prefer%20using,for%20backwards%20compatibility.) but the Angular style guide says [\"Consider preferring the @HostListener and @HostBinding to the host property of the @Directive and @Component decorators.\"](https://angular.dev/style-guide#style-06-03:~:text=Consider%20preferring%20the,decorators.).\n\nThis sounds contradictive to me and I wonder what the official recommendation is.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/host-elements#the-hostbinding-and-hostlistener-decorators:~:text=Always%20prefer%20using,for%20backwards%20compatibility.\n\nhttps://angular.dev/style-guide#style-06-03:~:text=Consider%20preferring%20the,decorators.","Url":"https://github.com/angular/angular/issues/58134","RelatedDescription":"Closed issue \"Inconsistent recommendation for HostBinding vs host in styleguide and docs\" (#58134)"},{"Id":"2574114728","IsPullRequest":true,"CreatedAt":"2024-10-09T08:57:59","Actor":"devversion","Number":"58126","RawContent":null,"Title":"refactor(migrations): fix unique name generation not marking generated identifiers","State":"closed","Body":"The unique name generator did not properly work to avoid collisions with previously generated unique names. This commit fixes this and also improves type safety of the logic.","Url":"https://github.com/angular/angular/pull/58126","RelatedDescription":"Closed or merged PR \"refactor(migrations): fix unique name generation not marking generated identifiers\" (#58126)"},{"Id":"2575159750","IsPullRequest":true,"CreatedAt":"2024-10-09T08:12:45","Actor":"rozpuszczalny","Number":"58131","RawContent":null,"Title":"fix(service-worker): assign initializing client's app version, when aâ€¦","State":"open","Body":"â€¦ request is for worker script\r\n\r\nWhen a new version of app is available in a service worker, and a client with old version exists, web workers initialized from a client with old version will now be properly assigned with the same version.\r\n\r\nBefore this change, a web worker was assigned with the newest version.\r\n\r\nFixes #57971\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #57971 \r\n\r\n\r\n## What is the new behavior?\r\n\r\nWhen a web worker script request is made to a service worker, it gets assigned the same version as the tab that created it.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n_Not sure if it's a breaking change_\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58131","RelatedDescription":"Open PR \"fix(service-worker): assign initializing client's app version, when aâ€¦\" (#58131)"},{"Id":"2574486494","IsPullRequest":false,"CreatedAt":"2024-10-09T06:45:21","Actor":"johncrim","Number":"58129","RawContent":null,"Title":"model() input binding does not emit changes","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo - `model()` is relatively new and in developer preview\n\n### Description\n\nA `model()` property provides an input and an output binding; but when the input is bound to a normal object (not a signal) no change is emitted.\n\nGiven a component:\n\n```ts\n@Component({\n  selector: 'test-model',\n  template: '<ng-content></ng-content>'\n})\nclass ModelEmitComponent {\n\n  readonly model = model<number | null>(null);\n\n  // Set of all non-null emitted values.\n  readonly emitted: number[] = [];\n\n  @Input()\n  set setModelValue(v: number) {\n    this.model.set(v);\n  }\n\n  constructor() {\n    this.model.subscribe(v => {\n      if (v !== null) {\n        this.emitted.push(v);\n      }\n    })\n  }\n}\n```\n\nwhen the `model` object is set via the old-school `@Input` and `WritableSignal.set()`, like:\n\n```html\n<test-model [setModelValue]=\"3\" />\n```\n\nThe value change is emitted, so a change listener can see it.\n\nWhen the `model` object is set using `model` input binding:\n\n```html\n<test-model [model]=\"3\" />\n```\n\nThe value change is _not_ emitted, so there is no way to know that a change occurred. I'm pretty confident in saying that developers will expect all `model` changes to be emitted, not just those caused by `WriteableSignal.set()`.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/johncrim/ng18-tests/blob/main/projects/output-emit/src/app/model-emit.spec.ts\n\n### Please provide the exception or error you saw\n\nNo exception; the error is that the change event is not emitted.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 22.6.0\nPackage Manager: yarn 4.5.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\n### Anything else?\n\nTest cases show that the model binding failing to emit occurs both for initial binding, and for input changes after the component is created.\n\n```ts\ndescribe('model() emit', () => {\n  let spectator: SpectatorHost<ModelEmitComponent>;\n  const createHost = createHostFactory(ModelEmitComponent);\n\n  it('@Input model.set() is emitted', () => {\n    spectator = createHost(`<test-model [setModelValue]=\"3\" />`);\n    expect(spectator.component.model()).toBe(3);\n    expect(spectator.component.emitted).toEqual([3]);\n  });\n\n  it('model input is emitted (fails)', () => {\n    spectator = createHost(`<test-model [model]=\"3\" />`);\n    expect(spectator.component.model()).toBe(3);\n    expect(spectator.component.emitted).toEqual([3]); // fails b/c model binding to regular object doesn't emit\n  });\n\n  it('@Input model.set() emits when changed after create', () => {\n    spectator = createHost(`<test-model [setModelValue]=\"initialValue\" />`, {\n      hostProps: {\n        initialValue: null\n      }\n    });\n    expect(spectator.component.model()).toBe(null);\n    expect(spectator.component.emitted).toEqual([]);\n\n    spectator.setHostInput('initialValue', 2);\n    expect(spectator.component.model()).toBe(2);\n    expect(spectator.component.emitted).toEqual([2]);\n  });\n\n  it('model input emits when changed after create (fails)', () => {\n    spectator = createHost(`<test-model [model]=\"initialValue\" />`, {\n      hostProps: {\n        initialValue: null\n      }\n    });\n    expect(spectator.component.model()).toBe(null);\n    expect(spectator.component.emitted).toEqual([]);\n\n    spectator.setHostInput('initialValue', 2);\n    expect(spectator.component.model()).toBe(2);\n    expect(spectator.component.emitted).toEqual([2]); // fails b/c model binding to regular object doesn't emit\n  });\n\n});\n```","Url":"https://github.com/angular/angular/issues/58129","RelatedDescription":"Closed issue \"model() input binding does not emit changes\" (#58129)"},{"Id":"2574867563","IsPullRequest":false,"CreatedAt":"2024-10-09T06:26:06","Actor":"hkashlan","Number":"58130","RawContent":null,"Title":"how to serve from  server.ts","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI am trying to include the trpc in angular server.ts like https://trpc.io/docs/server/adapters/express\n\nthe issue the application is not starting from server.ts\n\n\n### Proposed solution\n\nwe have several options:\n\n- have a flag in serve to start from server.ts\n- have a new command to server from sever.ts\n\n### Alternatives considered\n\nrunning from server.ts may improve the angular Fullstack for ssr, especially if we can debug it.\nin this way Angular can move from only client framework to full stack\nBTW I tried analogjs and it is not mature enough like nextjs","Url":"https://github.com/angular/angular/issues/58130","RelatedDescription":"Closed issue \"how to serve from  server.ts\" (#58130)"},{"Id":"2574354063","IsPullRequest":false,"CreatedAt":"2024-10-08T22:43:30","Actor":"paulirwin","Number":"58128","RawContent":null,"Title":"Signal for TransferState data","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nWhen creating an app that uses Signals and TransferState, it was found that we had to do a fair amount of boilerplate for this to work with persisting the signal state to TransferState and then loading it again on the browser: \n\n- Create a state key with `makeStateKey` that requires a new constant with duplicated type and string key\n- Inject TransferState\n- Create a signal property\n- Set the signal on the server once data is loaded\n- Set the TransferState data keys for each signal\n- Set the signal on the browser from TransferState data\n\nIt would be handy if there is a signal that wraps TransferState and can remove some of this boilerplate to just:\n\n- Create a `transferStateSignal` property, giving it the key and initial value\n- Set the signal on the server once data is loaded\n- (Signal is automatically loaded on the browser from TransferState data)\n\nNo state key, TransferState injection, or setting/loading TransferState is needed.\n\n### Proposed solution\n\nHere is a quick example of a prototype of what this could look like:\n\n```ts\nimport { inject, makeStateKey, signal, TransferState, WritableSignal } from \"@angular/core\";\n\nexport function transferStateSignal<T>(key: string, initialValue: T): WritableSignal<T> {\n    const stateKey = makeStateKey<T>(key);\n    const transferState = inject(TransferState);\n\n    const value = transferState.hasKey(stateKey)\n        ? transferState.get(stateKey, initialValue)\n        : initialValue;\n\n    const signalValue = signal(value);\n\n    const signalProxy = new Proxy(signalValue, {\n        // override `set` method of signalValue to set on TransferState\n        get: (target, prop, receiver) => {\n            if (prop === 'set') {\n                return (newValue: T) => {\n                    transferState.set(stateKey, newValue);\n                    target.set(newValue);\n                };\n            }\n            return Reflect.get(target, prop, receiver);\n        }\n    });\n\n    return signalProxy;\n}\n```\n\nExample usage:\n```ts\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, Inject, PLATFORM_ID } from '@angular/core';\nimport { transferStateSignal } from '../transferStateSignal';\n\n@Component({\n    selector: 'app-transfer-state-signal',\n    standalone: true,\n    imports: [],\n    template: `\n    <h1>TransferStateSignal Example</h1>\n    <p>String: {{dataString()}}</p>\n    <p>Number: {{dataNumber()}}</p>\n    <p>Boolean: {{dataBoolean()}}</p>\n    <p>Object.key: {{dataObject().key}}</p>\n    <p>Computed: {{computedNumber()}}</p>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransferStateSignalComponent {\n    readonly dataString = transferStateSignal<string>('dataString', 'Hello, World!');\n    readonly dataNumber = transferStateSignal<number>('dataNumber', 42);\n    readonly dataBoolean = transferStateSignal<boolean>('dataBoolean', true);\n    readonly dataObject = transferStateSignal<{ key: string }>('dataObject', { key: 'value' });\n\n    readonly computedNumber = computed<number>(() => this.dataNumber() * 100);\n\n    constructor(\n        @Inject(PLATFORM_ID) private readonly platformId: Object\n    ) { }\n\n    ngOnInit(): void {\n        if (isPlatformServer(this.platformId)) {\n            // pretend we load data on the server here, then set in signals for SSR,\n            // and no need to set on TransferState as it's done in transferStateSignal\n            this.dataString.set('Hello, Server!');\n            this.dataNumber.set(24);\n            this.dataBoolean.set(false);\n            this.dataObject.set({ key: 'server' });\n        } else if (isPlatformBrowser(this.platformId)) {\n            setInterval(() => {\n                this.dataNumber.set(this.dataNumber() + 1);\n            }, 1000);\n        }\n    }\n}\n```\n\nCompare this to what is required to do this without `transferStateSignal`:\n\n```ts\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, Inject, makeStateKey, PLATFORM_ID, signal, TransferState } from '@angular/core';\n\n// duplicated effort of having to make a state key for each and ensure data types match\nconst dataStringKey = makeStateKey<string>('dataStringCurrent');\nconst dataNumberKey = makeStateKey<number>('dataNumberCurrent');\nconst dataBooleanKey = makeStateKey<boolean>('dataBooleanCurrent');\nconst dataObjectKey = makeStateKey<{ key: string }>('dataObjectCurrent');\n\n@Component({\n    selector: 'app-current',\n    standalone: true,\n    imports: [],\n    template: `\n    <h1>Current Example</h1>\n    <p>String: {{dataString()}}</p>\n    <p>Number: {{dataNumber()}}</p>\n    <p>Boolean: {{dataBoolean()}}</p>\n    <p>Object.key: {{dataObject().key}}</p>\n    <p>Computed: {{computedNumber()}}</p>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CurrentComponent {\n    readonly dataString = signal<string>('Hello, World!');\n    readonly dataNumber = signal<number>(42);\n    readonly dataBoolean = signal<boolean>(true);\n    readonly dataObject = signal<{ key: string }>({ key: 'value' });\n\n    readonly computedNumber = computed<number>(() => this.dataNumber() * 100);\n\n    constructor(\n        @Inject(PLATFORM_ID) private readonly platformId: Object,\n        private readonly transferState: TransferState, // extra import\n    ) { }\n\n    ngOnInit(): void {\n        if (isPlatformServer(this.platformId)) {\n            // pretend we load data on the server here, then set in signals for SSR\n            this.dataString.set('Hello, Server!');\n            this.dataNumber.set(24);\n            this.dataBoolean.set(false);\n            this.dataObject.set({ key: 'server' });\n\n            // duplicated effort of setting on TransferState\n            this.transferState.set(dataStringKey, this.dataString());\n            this.transferState.set(dataNumberKey, this.dataNumber());\n            this.transferState.set(dataBooleanKey, this.dataBoolean());\n            this.transferState.set(dataObjectKey, this.dataObject());\n        } else if (isPlatformBrowser(this.platformId)) {\n            // duplicated effort of getting from TransferState\n            this.dataString.set(this.transferState.get(dataStringKey, this.dataString()));\n            this.dataNumber.set(this.transferState.get(dataNumberKey, this.dataNumber()));\n            this.dataBoolean.set(this.transferState.get(dataBooleanKey, this.dataBoolean()));\n            this.dataObject.set(this.transferState.get(dataObjectKey, this.dataObject()));\n\n            setInterval(() => {\n                this.dataNumber.set(this.dataNumber() + 1);\n            }, 1000);\n        }\n    }\n}\n```\n\n### Alternatives considered\n\nWill consider creating this as a third-party OSS library if the Angular team is not interested in adding something like this to the framework.","Url":"https://github.com/angular/angular/issues/58128","RelatedDescription":"Open issue \"Signal for TransferState data\" (#58128)"},{"Id":"2573869046","IsPullRequest":true,"CreatedAt":"2024-10-08T20:28:01","Actor":"angular-robot","Number":"58125","RawContent":null,"Title":"build: update actions/cache digest to 3624ceb","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | digest | `2cdf405` -> `3624ceb` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/58125","RelatedDescription":"Closed or merged PR \"build: update actions/cache digest to 3624ceb\" (#58125)"},{"Id":"2574127080","IsPullRequest":false,"CreatedAt":"2024-10-08T20:21:19","Actor":"DAVIAMERICO242","Number":"58127","RawContent":null,"Title":"Css Intellisense for inline styles ([style] binding) ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIs there no way to get intellisense in [style] binding?\n\n![Image](https://github.com/user-attachments/assets/7fc3014a-922b-46a2-8be7-eeb9a064d82b)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58127","RelatedDescription":"Open issue \"Css Intellisense for inline styles ([style] binding) \" (#58127)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2579824929","IsPullRequest":true,"CreatedAt":"2024-10-10T20:55:04","Actor":"angular-robot","Number":"28615","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [critters](https://redirect.github.com/GoogleChromeLabs/critters) ([source](https://redirect.github.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | dependencies | patch | [`0.0.24` -> `0.0.25`](https://renovatebot.com/diffs/npm/critters/0.0.24/0.0.25) |\n| [critters](https://redirect.github.com/GoogleChromeLabs/critters) ([source](https://redirect.github.com/GoogleChromeLabs/critters/tree/HEAD/packages/critters)) | devDependencies | patch | [`0.0.24` -> `0.0.25`](https://renovatebot.com/diffs/npm/critters/0.0.24/0.0.25) |\n| [sass](https://redirect.github.com/sass/dart-sass) | dependencies | patch | [`1.79.4` -> `1.79.5`](https://renovatebot.com/diffs/npm/sass/1.79.4/1.79.5) |\n| [sass](https://redirect.github.com/sass/dart-sass) | devDependencies | patch | [`1.79.4` -> `1.79.5`](https://renovatebot.com/diffs/npm/sass/1.79.4/1.79.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChromeLabs/critters (critters)</summary>\n\n### [`v0.0.25`](https://redirect.github.com/GoogleChromeLabs/critters/compare/0.0.24...c5702fcddb1da57fe403b8089a94fefdac806292)\n\n[Compare Source](https://redirect.github.com/GoogleChromeLabs/critters/compare/0.0.24...c5702fcddb1da57fe403b8089a94fefdac806292)\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.79.5`](https://redirect.github.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1795)\n\n[Compare Source](https://redirect.github.com/sass/dart-sass/compare/1.79.4...1.79.5)\n\n-   Changes to how `selector.unify()` and `@extend` combine selectors:\n\n    -   The relative order of pseudo-classes (like `:hover`) and pseudo-elements\n        (like `::before`) within each original selector is now preserved when\n        they're combined.\n\n    -   Pseudo selectors are now consistently placed at the end of the combined\n        selector, regardless of which selector they came from. Previously, this\n        reordering only applied to pseudo-selectors in the second selector.\n\n-   Tweak the color transformation matrices for OKLab and OKLCH to match the\n    newer, more accurate values in the CSS spec.\n\n-   Fix a slight inaccuracy case when converting to `srgb-linear` and\n    `display-p3`.\n\n-   **Potentially breaking bug fix:** `math.unit()` now wraps multiple denominator\n    units in parentheses. For example, `px/(em*em)` instead of `px/em*em`.\n\n##### Command-Line Interface\n\n-   Use `@parcel/watcher` to watch the filesystem when running from JavaScript and\n    not using `--poll`. This should mitigate more frequent failures users have\n    been seeing since version 4.0.0 of Chokidar, our previous watching tool, was\n    released.\n\n##### JS API\n\n-   Fix `SassColor.interpolate()` to allow an undefined `options` parameter, as\n    the types indicate.\n\n##### Embedded Sass\n\n-   Properly pass missing color channel values to and from custom functions.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTYuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28615","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#28615)"},{"Id":"2578353225","IsPullRequest":true,"CreatedAt":"2024-10-10T20:20:57","Actor":"alan-agius4","Number":"28614","RawContent":null,"Title":"fix(@angular/build): use named export `reqHandler` for server.ts request handling","State":"closed","Body":"\r\nSome cloud providers, such as Cloudflare, expect the default export to follow a specific structure (e.g., an object with a `fetch` property). To prevent the need for creating a separate `server.ts` file for production builds, the request handler is now exported as `reqHandler` instead of a default export.\r\n","Url":"https://github.com/angular/angular-cli/pull/28614","RelatedDescription":"Closed or merged PR \"fix(@angular/build): use named export `reqHandler` for server.ts request handling\" (#28614)"},{"Id":"2577630715","IsPullRequest":true,"CreatedAt":"2024-10-10T17:23:05","Actor":"angular-robot","Number":"28613","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.4.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.2` -> `v4.4.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28613","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.4.3\" (#28613)"},{"Id":"2577630662","IsPullRequest":true,"CreatedAt":"2024-10-10T17:21:39","Actor":"angular-robot","Number":"28612","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.25.7/7.25.8) |\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-core)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.25.7/7.25.8) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.25.7/7.25.8) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-async-generator-functions)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.25.7/7.25.8) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | dependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.25.7/7.25.8) |\n| [@babel/preset-env](https://babel.dev/docs/en/next/babel-preset-env) ([source](https://redirect.github.com/babel/babel/tree/HEAD/packages/babel-preset-env)) | devDependencies | patch | [`7.25.7` -> `7.25.8`](https://renovatebot.com/diffs/npm/@babel%2fpreset-env/7.25.7/7.25.8) |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.2` -> `v4.4.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/core)</summary>\n\n### [`v7.25.8`](https://redirect.github.com/babel/babel/blob/HEAD/CHANGELOG.md#v7258-2024-10-10)\n\n[Compare Source](https://redirect.github.com/babel/babel/compare/v7.25.7...v7.25.8)\n\n##### :bug: Bug Fix\n\n-   `babel-core`\n    -   [#&#8203;16888](https://redirect.github.com/babel/babel/pull/16888) Restore public API of `resolvePlugin`/`resolvePreset` ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-parser`, `babel-plugin-proposal-async-do-expressions`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-proposal-do-expressions`, `babel-plugin-proposal-explicit-resource-management`, `babel-plugin-proposal-export-default-from`, `babel-plugin-proposal-function-bind`, `babel-plugin-proposal-function-sent`, `babel-plugin-proposal-import-defer`, `babel-plugin-proposal-partial-application`, `babel-plugin-proposal-throw-expressions`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-dynamic-import`, `babel-plugin-transform-export-namespace-from`, `babel-plugin-transform-json-strings`, `babel-plugin-transform-logical-assignment-operators`, `babel-plugin-transform-nullish-coalescing-operator`, `babel-plugin-transform-numeric-separator`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-catch-binding`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-private-property-in-object`, `babel-preset-env`\n    -   [#&#8203;16824](https://redirect.github.com/babel/babel/pull/16824) Inline one-line syntax plugins ([@&#8203;nicolo-ribaudo](https://redirect.github.com/nicolo-ribaudo))\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.3`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.3)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3)\n\n#### What's Changed\n\n-   Undo indirect dependency updates from [#&#8203;627](https://redirect.github.com/actions/upload-artifact/issues/627) by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/632](https://redirect.github.com/actions/upload-artifact/pull/632)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.2...v4.4.3\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28612","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28612)"},{"Id":"2576890744","IsPullRequest":true,"CreatedAt":"2024-10-10T11:12:28","Actor":"clydin","Number":"28611","RawContent":null,"Title":"refactor(@angular/build): reduce inline style language value per call usage","State":"closed","Body":"The configured inline style language for Angular components is now set during the construction of the component stylesheet bundler. This avoids needing to repeatedly pass the value into each inline bundling call. The ability to customize the language per call is retained to allow individual style control if needed.","Url":"https://github.com/angular/angular-cli/pull/28611","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): reduce inline style language value per call usage\" (#28611)"},{"Id":"2573099933","IsPullRequest":true,"CreatedAt":"2024-10-09T18:31:00","Actor":"alan-agius4","Number":"28598","RawContent":null,"Title":"feat(@angular/build): introduce `ssr.experimentalPlatform` option","State":"closed","Body":"\r\n\r\nThis commit introduces a new option called `experimentalPlatform` to the Angular SSR configuration. \r\n\r\nThe `experimentalPlatform` option allows developers to specify the target platform for the server bundle, enabling the generation of platform-neutral bundles suitable for deployment in environments like edge workers and other serverless platforms that do not rely on Node.js APIs.\r\n\r\nThis change enhances the portability of Angular SSR applications and expands their deployment possibilities.\r\n\r\n**Note:** that this feature does not include polyfills for Node.js modules and is experimental, subject to future changes.","Url":"https://github.com/angular/angular-cli/pull/28598","RelatedDescription":"Closed or merged PR \"feat(@angular/build): introduce `ssr.experimentalPlatform` option\" (#28598)"},{"Id":"2576566747","IsPullRequest":true,"CreatedAt":"2024-10-09T18:06:55","Actor":"dgp1130","Number":"28610","RawContent":null,"Title":"Bump version to \"v19.0.0-next.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28610","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.10\" with changelog.\" (#28610)"},{"Id":"2576555646","IsPullRequest":true,"CreatedAt":"2024-10-09T17:47:17","Actor":"dgp1130","Number":"28609","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28609","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#28609)"},{"Id":"2576519100","IsPullRequest":true,"CreatedAt":"2024-10-09T17:44:36","Actor":"dgp1130","Number":"28608","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28608","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#28608)"},{"Id":"2574869436","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:39","Actor":"angular-robot","Number":"28603","RawContent":null,"Title":"build: update dependency typescript to v5.6.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | devDependencies | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n| [typescript](https://www.typescriptlang.org/) ([source](https://redirect.github.com/microsoft/TypeScript)) | resolutions | patch | [`5.6.2` -> `5.6.3`](https://renovatebot.com/diffs/npm/typescript/5.6.2/5.6.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>microsoft/TypeScript (typescript)</summary>\n\n### [`v5.6.3`](https://redirect.github.com/microsoft/TypeScript/releases/tag/v5.6.3): TypeScript 5.6.3\n\n[Compare Source](https://redirect.github.com/microsoft/TypeScript/compare/v5.6.2...v5.6.3)\n\nFor release notes, check out the [release announcement](https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/).\n\nFor the complete list of fixed issues, check out the\n\n-   [fixed issues query for Typescript 5.6.0 (Beta)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.0%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.1 (RC)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.1%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.2 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.2%22+is%3Aclosed+).\n-   [fixed issues query for Typescript 5.6.3 (Stable)](https://redirect.github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93\\&q=milestone%3A%22TypeScript+5.6.3%22+is%3Aclosed+).\n\nDownloads are available on:\n\n-   [npm](https://www.npmjs.com/package/typescript)\n-   [NuGet package](https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28603","RelatedDescription":"Closed or merged PR \"build: update dependency typescript to v5.6.3\" (#28603)"},{"Id":"2574781042","IsPullRequest":true,"CreatedAt":"2024-10-09T17:20:17","Actor":"angular-robot","Number":"28601","RawContent":null,"Title":"build: update actions/upload-artifact action to v4.4.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28601","RelatedDescription":"Closed or merged PR \"build: update actions/upload-artifact action to v4.4.2\" (#28601)"},{"Id":"2572631644","IsPullRequest":true,"CreatedAt":"2024-10-09T13:57:27","Actor":"alan-agius4","Number":"28596","RawContent":null,"Title":"fix(@angular/build): move lmdb to optionalDependencies","State":"closed","Body":"A warning mechanism has been implemented to notify users when lmdb is unavailable. On Windows ARM64 systems, however, installing this package with pnpm appears to cause installation failures.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/27882#issuecomment-2395029997\r\n\r\nCloses #27882\r\n","Url":"https://github.com/angular/angular-cli/pull/28596","RelatedDescription":"Closed or merged PR \"fix(@angular/build): move lmdb to optionalDependencies\" (#28596)"},{"Id":"2575683653","IsPullRequest":true,"CreatedAt":"2024-10-09T13:11:29","Actor":"alan-agius4","Number":"28606","RawContent":null,"Title":"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/28604","Url":"https://github.com/angular/angular-cli/pull/28606","RelatedDescription":"Closed or merged PR \"[backport] fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28606)"},{"Id":"2575786495","IsPullRequest":false,"CreatedAt":"2024-10-09T12:27:48","Actor":"zip-fa","Number":"28607","RawContent":null,"Title":"Feature request: add indexHtmlTransformer and plugins options to application builder","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nHi. This feature exists for a long time in angular-builders and nx custom builders' code.\n`plugins` allows adding vite plugins; we use this option to use custom plugin with .env file parsing, adding ENVIRONMENT_NAME and __APP_VERSION__ global variables and much more. I guess there are plenty of other use-cases for this.\n`indexHtmlTransformer` allows to replace some placeholders in index.html while building or serving an app. Useful to make similar DX when building or developing locally my app. \n\nThere is [not much to do](https://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts) with these two, but i think this will boost DX many times.\nThanks for your time!\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\nhttps://github.com/nrwl/nx/blob/master/packages/angular/src/executors/application/application.impl.ts","Url":"https://github.com/angular/angular-cli/issues/28607","RelatedDescription":"Open issue \"Feature request: add indexHtmlTransformer and plugins options to application builder\" (#28607)"},{"Id":"2575591269","IsPullRequest":false,"CreatedAt":"2024-10-09T11:39:59","Actor":"mrwiora","Number":"28605","RawContent":null,"Title":"angular-devkit/build-angular esbuild dependency issues","State":"closed","Body":"### Description\n\nMy run of \"npm install @angular-devkit/build-angular\" failed with the following error:\n```\nnpm error code 1\nnpm error path /home/xxx/project/node_modules/@angular/build/node_modules/esbuild\nnpm error command failed\nnpm error command sh -c node install.js\nnpm error /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134\nnpm error     throw new Error(`Expected ${JSON.stringify(versionFromPackageJSON)} but got ${JSON.stringify(stdout)}`);\nnpm error           ^\nnpm error\nnpm error Error: Expected \"0.23.0\" but got \"0.21.5\"\nnpm error     at validateBinaryVersion (/home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:134:11)\nnpm error     at /home/xxx/project/node_modules/@angular/build/node_modules/esbuild/install.js:284:5\nnpm error\nnpm error Node.js v20.18.0\n```\n\nwhich I resolved by adding the following overrides section to my package.json:\n```\n{\n  \"dependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.6\",\n    \"@angular/core\": \"^18.2.6\",\n  },\n  \"overrides\": {\n    \"esbuild\": \"^0.23.0\"\n  }\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.6\n... core\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.6\n@angular-devkit/build-angular   18.2.6\n@angular-devkit/core            18.2.6\n@angular-devkit/schematics      18.2.7 (cli-only)\n@schematics/angular             18.2.7 (cli-only)\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28605","RelatedDescription":"Closed issue \"angular-devkit/build-angular esbuild dependency issues\" (#28605)"},{"Id":"2575294158","IsPullRequest":true,"CreatedAt":"2024-10-09T11:33:56","Actor":"alan-agius4","Number":"28604","RawContent":null,"Title":"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR","State":"closed","Body":"This commit provides a workaround for https://github.com/angular/angular-cli/issues/28336, which occurs due to the interaction between `zone.js` and `listr2`. The issue prevents proper termination of the development server using Ctrl + C when dev-server.\r\n\r\nCloses: #28336","Url":"https://github.com/angular/angular-cli/pull/28604","RelatedDescription":"Closed or merged PR \"fix(@angular/build): `Ctrl + C` not terminating dev-server with SSR\" (#28604)"},{"Id":"2574781174","IsPullRequest":true,"CreatedAt":"2024-10-09T09:28:57","Actor":"angular-robot","Number":"28602","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | patch | `v4.1.0` -> `v4.1.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.1` -> `v4.4.2` |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.0` -> `4.21.1`](https://renovatebot.com/diffs/npm/express/4.21.0/4.21.1) |\n| [undici](https://undici.nodejs.org) ([source](https://redirect.github.com/nodejs/undici)) | devDependencies | minor | [`6.19.8` -> `6.20.0`](https://renovatebot.com/diffs/npm/undici/6.19.8/6.20.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.1.1`](https://redirect.github.com/actions/cache/releases/tag/v4.1.1)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.0...v4.1.1)\n\n##### What's Changed\n\n-   Restore original behavior of `cache-hit` output by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/cache/pull/1467](https://redirect.github.com/actions/cache/pull/1467)\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4.1.0...v4.1.1\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.2`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.2)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.1...v4.4.2)\n\n#### What's Changed\n\n-   Bump `@actions/artifact` to 2.1.11 by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/627](https://redirect.github.com/actions/upload-artifact/pull/627)\n    -   Includes fix for relative symlinks not resolving properly\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4...v4.4.2\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.1`](https://redirect.github.com/expressjs/express/releases/tag/4.21.1)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.0...4.21.1)\n\n#### What's Changed\n\n-   Backport a fix for CVE-2024-47764 to the 4.x branch by [@&#8203;joshbuker](https://redirect.github.com/joshbuker) in [https://github.com/expressjs/express/pull/6029](https://redirect.github.com/expressjs/express/pull/6029)\n-   Release: 4.21.1 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6031](https://redirect.github.com/expressjs/express/pull/6031)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.0...4.21.1\n\n</details>\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.20.0`](https://redirect.github.com/nodejs/undici/releases/tag/v6.20.0)\n\n[Compare Source](https://redirect.github.com/nodejs/undici/compare/v6.19.8...v6.20.0)\n\n#### What's Changed\n\n-   Remove patched dom types (`v6.x` branch) by [@&#8203;eXhumer](https://redirect.github.com/eXhumer) in [https://github.com/nodejs/undici/pull/3531](https://redirect.github.com/nodejs/undici/pull/3531)\n-   docs(Backport v6.x): Fix signature of RetryHandler by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3594](https://redirect.github.com/nodejs/undici/pull/3594)\n-   deps(dev): update [@&#8203;types/node](https://redirect.github.com/types/node) by [@&#8203;metcoder95](https://redirect.github.com/metcoder95) in [https://github.com/nodejs/undici/pull/3618](https://redirect.github.com/nodejs/undici/pull/3618)\n-   fix: throw on retry when payload is consume by downstream by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3596](https://redirect.github.com/nodejs/undici/pull/3596)\n-   feat(Backport v6.x): move throwOnError to interceptor by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3595](https://redirect.github.com/nodejs/undici/pull/3595)\n-   \\[Backport v6.x] fix: reduce memory usage in client-h1 by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3672](https://redirect.github.com/nodejs/undici/pull/3672)\n-   \\[Backport v6.x] fix: refactor fast timers, fix UND_ERR_CONNECT_TIMEOUT on event loop blocking by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3673](https://redirect.github.com/nodejs/undici/pull/3673)\n-   \\[Backport v6.x] fix: run asserts first if possible by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3674](https://redirect.github.com/nodejs/undici/pull/3674)\n-   \\[Backport v6.x] fix: use fasttimers for all connection timeouts by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3675](https://redirect.github.com/nodejs/undici/pull/3675)\n-   \\[Backport v6.x] ci: less flaky test/request-timeout.js test by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3678](https://redirect.github.com/nodejs/undici/pull/3678)\n-   \\[Backport v6.x] test: less flaky timers acceptance test, rework fast timer tests to pass them faster by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3679](https://redirect.github.com/nodejs/undici/pull/3679)\n-   \\[Backport v6.x] ignore leading and trailing crlfs in formdata body by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3681](https://redirect.github.com/nodejs/undici/pull/3681)\n-   \\[Backport v6.x] mock: fix mocking of Uint8Array and ArrayBuffers as provided mock-responses by [@&#8203;github-actions](https://redirect.github.com/github-actions) in [https://github.com/nodejs/undici/pull/3689](https://redirect.github.com/nodejs/undici/pull/3689)\n-   \\[Backport v6.x] handle body errors by [@&#8203;Uzlopak](https://redirect.github.com/Uzlopak) in [https://github.com/nodejs/undici/pull/3700](https://redirect.github.com/nodejs/undici/pull/3700)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v6.19.8...v6.20.0\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTQuMCIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28602","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28602)"},{"Id":"2569576182","IsPullRequest":true,"CreatedAt":"2024-10-09T09:28:47","Actor":"angular-robot","Number":"28586","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\nðŸ”§ This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMDkuMSIsInVwZGF0ZWRJblZlciI6IjM4LjExNC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28586","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#28586)"},{"Id":"2572353411","IsPullRequest":true,"CreatedAt":"2024-10-09T08:29:13","Actor":"alan-agius4","Number":"28594","RawContent":null,"Title":"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled","State":"closed","Body":"\r\n\r\nThis commit addresses an issue where `index.csr.html` was not being generated when SSR was disabled and prerendering was enabled.\r\n\r\nCloses #28580\r\n","Url":"https://github.com/angular/angular-cli/pull/28594","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure `index.csr.html` is always generated when prerendering or SSR are enabled\" (#28594)"},{"Id":"2574388558","IsPullRequest":false,"CreatedAt":"2024-10-08T23:10:01","Actor":"lekhmanrus","Number":"28600","RawContent":null,"Title":"Injecting Custom Template Loading Logic","State":"open","Body":"### Command\n\nbuild, serve\n\n### Description\n\nIn previous Angular versions, when using webpack-based builders, we had the ability to customize how component templates were processed (e.g., using third-party loaders like [ngx-pug-builders](https://github.com/lekhmanrus/ngx-pug-builders) to support Pug templates). With ESBuild, template loading logic to be managed internally by the `AdapterResourceLoader`.\nIt looks, like currently there appears to be no way to inject custom logic into the template loading process. This limits the ability for third-party libraries to provide support for alternative template formats or to apply custom modifications during the build.\n\n### Describe the solution you'd like\n\nIt would be beneficial for Angular to expose a mechanism for developers to hook into or modify the HTML loading logic. This would enable third-party libraries to support template engines like Pug or apply other transformations.\n\nWhile Angular CLI may not want to handle all possible template engines directly, allowing developers to customize the HTML loading process would open the door for greater flexibility and extensibility within the ecosystem.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28600","RelatedDescription":"Open issue \"Injecting Custom Template Loading Logic\" (#28600)"},{"Id":"2572093827","IsPullRequest":true,"CreatedAt":"2024-10-08T17:11:46","Actor":"angular-robot","Number":"28593","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://redirect.github.com/actions/checkout) | action | patch | `v4.2.0` -> `v4.2.1` |\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | patch | `v4.4.0` -> `v4.4.1` |\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.26.11` -> `v3.26.12` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/actions/checkout/blob/HEAD/CHANGELOG.md#v421)\n\n[Compare Source](https://redirect.github.com/actions/checkout/compare/v4.2.0...v4.2.1)\n\n-   Check out other refs/\\* by commit if provided, fall back to ref by [@&#8203;orhantoy](https://redirect.github.com/orhantoy) in [https://github.com/actions/checkout/pull/1924](https://redirect.github.com/actions/checkout/pull/1924)\n\n</details>\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.4.1`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.4.1)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1)\n\n#### What's Changed\n\n-   Add a section about hidden files by [@&#8203;joshmgross](https://redirect.github.com/joshmgross) in [https://github.com/actions/upload-artifact/pull/607](https://redirect.github.com/actions/upload-artifact/pull/607)\n-   Add workflow file for publishing releases to immutable action package by [@&#8203;Jcambass](https://redirect.github.com/Jcambass) in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n-   Update [@&#8203;actions/artifact](https://redirect.github.com/actions/artifact) to latest version, includes symlink and timeout fixes by [@&#8203;robherley](https://redirect.github.com/robherley) in [https://github.com/actions/upload-artifact/pull/625](https://redirect.github.com/actions/upload-artifact/pull/625)\n\n#### New Contributors\n\n-   [@&#8203;Jcambass](https://redirect.github.com/Jcambass) made their first contribution in [https://github.com/actions/upload-artifact/pull/621](https://redirect.github.com/actions/upload-artifact/pull/621)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.0...v4.4.1\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.26.12`](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.26.11...v3.26.12)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExMC4yIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28593","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#28593)"},{"Id":"2571124808","IsPullRequest":false,"CreatedAt":"2024-10-08T15:28:50","Actor":"zip-fa","Number":"28590","RawContent":null,"Title":"\"prerender\": false is ignored with \"outputMode\": \"server\"","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi.\n\"prerender\": false is ignored with \"outputMode\": \"server\": angular tries to prerender all my routes and i receive \"undefined\" message on routes extraction step:\n\n![Image](https://github.com/user-attachments/assets/a2e8e9dc-a706-4c4c-a5dd-869036d95e2c)\n\n\nng build command now only reacts to \"export NG_BUILD_PARTIAL_SSR=true && ng build\" - build does not fail with this setup\n\n### Minimal Reproduction\n\nng build\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\nv19.0.0-next.8\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28590","RelatedDescription":"Closed issue \"\"prerender\": false is ignored with \"outputMode\": \"server\"\" (#28590)"},{"Id":"2572361742","IsPullRequest":true,"CreatedAt":"2024-10-08T15:28:49","Actor":"alan-agius4","Number":"28595","RawContent":null,"Title":"fix(@angular/build): show error message when error stack is undefined","State":"closed","Body":"Handle cases where the error stack is missing by displaying a relevant message.\r\n\r\nCloses #28590\r\n","Url":"https://github.com/angular/angular-cli/pull/28595","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error message when error stack is undefined\" (#28595)"},{"Id":"2573067411","IsPullRequest":false,"CreatedAt":"2024-10-08T15:06:26","Actor":"Carlosamouco","Number":"28597","RawContent":null,"Title":"extract-i18n performance issues","State":"closed","Body":"### Command\n\nextract-i18n\n\n### Description\n\nAfter installing https://www.npmjs.com/package/stimulsoft-reports-js, I noticed that `ng extract-i18n` became very slow, from approx. 1 minute to almost 4 minutes. This package is very large, and I suspect that it is taking so long because the extract-i18n command is trying to look for messages in the whole chunk that contains this dependency.\n\n### Describe the solution you'd like\n\nCould there be a way to make the tool skip analyzing third-party dependencies that have nothing to do with angular? For example, create a list of dependencies to skip?\n\n### Describe alternatives you've considered\n\nSince I am not using any third party angular libraries, I am considering extracting the messages directly from the source code using a ts parser.","Url":"https://github.com/angular/angular-cli/issues/28597","RelatedDescription":"Closed issue \"extract-i18n performance issues\" (#28597)"},{"Id":"2573450085","IsPullRequest":false,"CreatedAt":"2024-10-08T14:53:47","Actor":"sureshkumarsendrayan","Number":"28599","RawContent":null,"Title":"CSS Skipped selector issue while using SSR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm using Angular Server Side Rendering with Ionic. While building the basic application even without any project code using Server Side Rendering I'm getting the below issue for styles.\n\n`20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir`\n\nI tried setting the below build configuration in angular.json. But it's not resolving the issue.\n\n`\"optimization\": {\n      \"styles\": {\n          \"inlineCritical\": false\n        }\n   }`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n20 rules skipped due to selector errors:\n  :host-context([dir=rtl]) .ion-float-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-sm-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-sm-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-md-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-md-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-lg-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-lg-end:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-start -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-start:dir(rtl) -> Unknown pseudo-class :dir\n  :host-context([dir=rtl]) .ion-float-xl-end -> Unknown pseudo-class :host-context([object Object])\n  .ion-float-xl-end:dir(rtl) -> Unknown pseudo-class :dir\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\nAngular CLI: 18.2.7\nNode: 20.15.0\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 18.2.7\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.7\n@angular-devkit/build-angular   18.2.7\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      18.2.7\n@schematics/angular             18.2.7\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\n--------------\nIonic version: \n\n    \"@ionic/angular\": \"^8.0.0\",\n    \"@ionic/angular-server\": \"^8.3.2\",\n    \"@ionic/angular-toolkit\": \"^11.0.1\"\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28599","RelatedDescription":"Closed issue \"CSS Skipped selector issue while using SSR\" (#28599)"},{"Id":"2570574858","IsPullRequest":true,"CreatedAt":"2024-10-08T11:49:03","Actor":"clydin","Number":"28588","RawContent":null,"Title":"refactor(@angular/build): only ignore watching node modules when watching root","State":"closed","Body":"The application builder performs fine-grained file watching now which removes the need to watch the project root by default as it did in early implementations. As a result, the need to ignore the `node_modules` directory is not longer necessary by default and is only needed when the `NG_BUILD_WATCH_ROOT` environment variable is enabled.","Url":"https://github.com/angular/angular-cli/pull/28588","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): only ignore watching node modules when watching root\" (#28588)"},{"Id":"2572093588","IsPullRequest":true,"CreatedAt":"2024-10-08T05:14:00","Actor":"angular-robot","Number":"28592","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `058af75` -> `08a9266` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fanimations/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `e9e110c` -> `2c85a2a` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `fc538e2` -> `e7f847f` |\n| [@angular/cdk](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fcdk/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `81d7211` -> `0e7fe58` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcommon/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `f3e2e8d` -> `0a53834` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `77056c0` -> `33198c1` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `491c7b5` -> `ffbc709` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fcore/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `d937ed4` -> `82280ed` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fforms/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `944f1ef` -> `ac6e650` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `d0839df` -> `2b91097` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2flocalize/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `81ad26b` -> `2d35158` |\n| [@angular/material](https://redirect.github.com/angular/components) | devDependencies | patch | [`19.0.0-next.7` -> `19.0.0-next.8`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/19.0.0-next.7/19.0.0-next.8) |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `94b328a` -> `cb58529` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8c60ac2` -> `68eca4f` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `79fb271` -> `fc05805` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `5ba3367` -> `26cfc9d` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser-dynamic)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `a5bb449` -> `114dcc8` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `a55009d` -> `7809c50` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2frouter/19.0.0-next.8/19.0.0-next.9) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `28cc0e8` -> `f3f0d2e` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`19.0.0-next.8` -> `19.0.0-next.9`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/19.0.0-next.8/19.0.0-next.9) |\n| angular/dev-infra | action | digest | `46771fc` -> `7dcf69e` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v19.0.0-next.9`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#1900-next9-2024-10-10)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/19.0.0-next.8...19.0.0-next.9)\n\n#### Breaking Changes\n\n##### compiler\n\n-   `this.foo` property reads no longer refer to template context variables. If you intended to read the template variable, do not use `this.`.\n\n##### core\n\n-   The deprecated `factories` property in `KeyValueDiffers` has been removed.\n\n##### localize\n\n-   The `name` option in the ` ng add  `@localize\\`\\` schematic has been removed in favor of the `project` option.\n\n##### platform-browser\n\n-   The deprecated `BrowserModule.withServerTransition` method has been removed. Please use the `APP_ID` DI token to set the application id instead.\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [09f589f000](https://redirect.github.com/angular/angular/commit/09f589f0006f4b428b675b83c12c0dc8ebb7e45f) | fix | `this.a` should always refer to class property `a` ([#&#8203;55183](https://redirect.github.com/angular/angular/pull/55183)) |\n| [e8d1944999](https://redirect.github.com/angular/angular/commit/e8d1944999e1fdfbd67630d475334c0d7f41a0eb) | fix | add multiple :host and nested selectors support ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [82144b6d63](https://redirect.github.com/angular/angular/commit/82144b6d63d072d112d1a7f4dcc018a1d64bb994) | fix | allow combinators inside pseudo selectors ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [292ea4714f](https://redirect.github.com/angular/angular/commit/292ea4714fb7e76cf1748d2f9059991e05c42574) | fix | fix comment typo ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [69529d8873](https://redirect.github.com/angular/angular/commit/69529d8873fbd7888ab68fddc6e7c654c5065764) | fix | fix parsing of the :host-context with pseudo selectors ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [2374b87b64](https://redirect.github.com/angular/angular/commit/2374b87b643e0373f85cf126d4b01b2fff785f64) | fix | preserve attributes attached to :host selector ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [46a6324c82](https://redirect.github.com/angular/angular/commit/46a6324c82a41b69c16a4c8c9f3fc52d1ecf6917) | fix | scope :host-context inside pseudo selectors, do not decrease specificity ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n| [bc5f1175e9](https://redirect.github.com/angular/angular/commit/bc5f1175e9f39dfa2699c4de19ee9af4ce4b50d1) | fix | transform pseudo selectors correctly for the encapsulated view ([#&#8203;57796](https://redirect.github.com/angular/angular/pull/57796)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8d8c03abc4](https://redirect.github.com/angular/angular/commit/8d8c03abc40099da268d7301f029954f3e3f1c90) | fix | defer symbols only used in types ([#&#8203;58104](https://redirect.github.com/angular/angular/pull/58104)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [ee426c62f0](https://redirect.github.com/angular/angular/commit/ee426c62f07579ec7dc89ce9582972cc1e3471d4) | fix | allow signal write error ([#&#8203;57973](https://redirect.github.com/angular/angular/pull/57973)) |\n| [67db4305c2](https://redirect.github.com/angular/angular/commit/67db4305c2261625fd54d284c29e94e26cb19488) | fix | clean up afterRender after it is executed ([#&#8203;58119](https://redirect.github.com/angular/angular/pull/58119)) |\n| [656b5d3e78](https://redirect.github.com/angular/angular/commit/656b5d3e78004229a76488e0de1eb1d3508d8f6d) | fix | Re-assign error codes to be within core bounds (<1000) ([#&#8203;53455](https://redirect.github.com/angular/angular/pull/53455)) |\n| [97fb86d331](https://redirect.github.com/angular/angular/commit/97fb86d3310ae891ba4d894a8d3479eda08bd4c2) | perf | set encapsulation to `None` for empty component styles ([#&#8203;57130](https://redirect.github.com/angular/angular/pull/57130)) |\n| [c15ec36bd1](https://redirect.github.com/angular/angular/commit/c15ec36bd1dcff4c7c387337a5bcfd928994db2f) | refactor | remove deprecated `factories` Property in `KeyValueDiffers` ([#&#8203;58064](https://redirect.github.com/angular/angular/pull/58064)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [bc83fc1e2e](https://redirect.github.com/angular/angular/commit/bc83fc1e2ebac1a99b6e8ed63cea48f48dd7c863) | feat | support converting to signal queries in VSCode extension ([#&#8203;58106](https://redirect.github.com/angular/angular/pull/58106)) |\n\n##### localize\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9c3bd1b5d1](https://redirect.github.com/angular/angular/commit/9c3bd1b5d119bdcd4818892deae7f8a17861da42) | refactor | remove deprecated `name` option. ([#&#8203;58063](https://redirect.github.com/angular/angular/pull/58063)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c1aa411cf1](https://redirect.github.com/angular/angular/commit/c1aa411cf13259d991c8f224a2bafc3e9763fe8d) | fix | properly resolve tsconfig paths on windows ([#&#8203;58137](https://redirect.github.com/angular/angular/pull/58137)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5c61f46409](https://redirect.github.com/angular/angular/commit/5c61f46409855bb8fe66d71a9c16c00753032987) | refactor | remove deprecated `BrowserModule.withServerTransition` method ([#&#8203;58062](https://redirect.github.com/angular/angular/pull/58062)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9e82559de4](https://redirect.github.com/angular/angular/commit/9e82559de4e99a1aedf645a05b01fc08d3f4b1b1) | fix | destroy `PlatformRef` when error happens during the `bootstrap()` phase ([#&#8203;58112](https://redirect.github.com/angular/angular/pull/58112)) |\n\n##### service-worker\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [1479af978c](https://redirect.github.com/angular/angular/commit/1479af978cd2bbe4ee9f1ca9682684b8e5135fa7) | feat | finish implementation of refreshAhead feature ([#&#8203;53356](https://redirect.github.com/angular/angular/pull/53356)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v19.0.0-next.8`](https://redirect.github.com/angular/components/blob/HEAD/CHANGELOG.md#1900-next8-thulium-trumpet-2024-10-09)\n\n[Compare Source](https://redirect.github.com/angular/components/compare/19.0.0-next.7...19.0.0-next.8)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9eb1f867d](https://redirect.github.com/angular/components/commit/9eb1f867d8b45bbc9771062e6a6c40fdd2ca24d1) | fix | **stepper:** remove mock of forms type |\n| [02823c080](https://redirect.github.com/angular/components/commit/02823c080be730d3c8cb7900b2449b660a5b0e08) | fix | **stepper:** reset submitted state when resetting stepper |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b777c2df0](https://redirect.github.com/angular/components/commit/b777c2df0052232cc304e20c46b0d0572d1f9894) | feat | **core:** expose styling information to the docs site |\n| [9546fe77e](https://redirect.github.com/angular/components/commit/9546fe77ef7322276bddf25ed826b2ab73e5ee20) | feat | **timepicker:** add test harnesses |\n| [2646e0885](https://redirect.github.com/angular/components/commit/2646e088510f00ca2ae885d42acae9c7fcd8656e) | feat | **timepicker:** add timepicker component |\n| [0fb4247ce](https://redirect.github.com/angular/components/commit/0fb4247ce834c475556a17e116e20f1ec0fd5a5a) | fix | **core:** avoid browser inconsistencies when parsing time |\n| [984723e10](https://redirect.github.com/angular/components/commit/984723e10bf3cf412058f20c57a4c8117024b0c0) | fix | **schematics:** treat lower dependency builder as default builder ([#&#8203;29833](https://redirect.github.com/angular/components/pull/29833)) |\n| [14e9ec7cc](https://redirect.github.com/angular/components/commit/14e9ec7ccb0956f54604ee9f19c6dbee6b496fcd) | fix | **timepicker:** always re-focus input |\n| [1eda48604](https://redirect.github.com/angular/components/commit/1eda4860400fbb08c76b7760bb0eba3234f0c707) | fix | **timepicker:** hide toggle icon from assistive technology |\n| [490bcfe38](https://redirect.github.com/angular/components/commit/490bcfe38c1f640beefdf537d2af46467f07a4c7) | fix | **timepicker:** more flexible interval parsing |\n| [fb6e20290](https://redirect.github.com/angular/components/commit/fb6e20290ba6842c5190217de55d13044169eebf) | fix | **timepicker:** text field in parse error not up to date |\n\n##### mat\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8f0369a27](https://redirect.github.com/angular/components/commit/8f0369a27faa7cd6758d78a0a4e1c40811747e49) | fix | **paginator:** fix focus issues with paginator buttons ([#&#8203;29379](https://redirect.github.com/angular/components/pull/29379)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [be342289c](https://redirect.github.com/angular/components/commit/be342289c2cc720af31edf1ce98eee08e2bf9235) | fix | remove final references to ComponentFactoryResolver ([#&#8203;29832](https://redirect.github.com/angular/components/pull/29832)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMTAuMiIsInVwZGF0ZWRJblZlciI6IjM4LjExNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/28592","RelatedDescription":"Open PR \"build: update angular\" (#28592)"},{"Id":"2571974031","IsPullRequest":false,"CreatedAt":"2024-10-08T03:47:00","Actor":"sonnyk22","Number":"28591","RawContent":null,"Title":"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nBased on the feedback in this link [#28346](https://github.com/angular/angular-cli/pull/28346), `Angular v19` will provide a much better and easier way to handle the prerendering when it comes to the routes that starts with `\"id\"`.  But this version will not be released until Nov 19th or so.\n\nUsing the below section in the `angular.json` file:\n```\n\"prerender\": {\n    \"routesFile\": \"routes.txt\",\n    \"discoverRoutes\": false\n},\n\"ssr\": {\n    \"entry\": \"server.ts\"\n}\n```\n\nIn `Angular v18.x`, it is is really easy to get prerendered for such basic routes as below:\n```\n   /auth\n   /contact  \n   /info/:id\n```\n\nHowever, is there a way to prerender when the \"id\" is right at the beginning of the route? For example:\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\nThis is a unique request to prerender that I have not found any solution to on search engines.  \n\n\n### Describe the solution you'd like\n\nWhile waiting for `Angular v19` to be released, it would be nice to be able to prerender in `v18.x` via the `routesFile` `routes.txt` for the example routes below:\n\n```\n   /:userId/profile\n   /:userId/home\n   /:userId/account\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28591","RelatedDescription":"Open issue \"Angular v18 SSR - Prerendering routesFile routes.txt when route starts with \"id\". Ex: \"/:userId/home\"\" (#28591)"},{"Id":"2570630485","IsPullRequest":false,"CreatedAt":"2024-10-07T16:55:09","Actor":"eneajaho","Number":"28589","RawContent":null,"Title":"feat: do full-rebuild when angular.json changes","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nWhen running ng serve and then changing angular.json nothing happens. \n\n\n\n### Describe the solution you'd like\n\nCan we at least expect a full app rebuild. \n\nInstead of killing the dev server and running the command again, ng serve would just refresh on its own? \n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28589","RelatedDescription":"Closed issue \"feat: do full-rebuild when angular.json changes\" (#28589)"},{"Id":"2569847883","IsPullRequest":false,"CreatedAt":"2024-10-07T09:19:03","Actor":"sod","Number":"28587","RawContent":null,"Title":"Allow to configure sass `fatalDeprecations` and `silenceDeprecations` options","State":"open","Body":"### Command\n\nserve, build\n\n### Description\n\nPlease allow to configure [fatalDeprecations](https://sass-lang.com/documentation/js-api/interfaces/options/#fatalDeprecations) and [silenceDeprecations](https://sass-lang.com/documentation/js-api/interfaces/options/#silenceDeprecations).\n\n* `fatalDeprecations` can be used to prevent already deprecated features or syntax be added to the code - by failing the build - in a code base where a lot of people are working on.\n* `silenceDeprecations` can be used, so you don't have to [downgrade sass](https://github.com/angular/angular-cli/pull/28234) anymore.\n\n### Describe the solution you'd like\n\nperhaps in the angular.json:\n\n```\n\"stylePreprocessorOptions\": {\n    \"fatalDeprecations\": [\"color-functions\", \"1.70.0\"],\n    \"silenceDeprecations\": [\"1.77.0\"],\n}\n```\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28587","RelatedDescription":"Open issue \"Allow to configure sass `fatalDeprecations` and `silenceDeprecations` options\" (#28587)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2576911515","IsPullRequest":true,"CreatedAt":"2024-10-10T22:29:32","Actor":"essjay05","Number":"29853","RawContent":null,"Title":"fix(material/dialog): updates dialog max-height in landscape","State":"closed","Body":"Updates Angular Component Dialog component to have a max-height of 95vh which gives it a calculable height for its contents to adjust on smaller screens or in landscape mode so that the action buttons are able to be accessed by scrolling rather than the dialog window cutting them off.\r\n\r\n[Before screencast](https://screencast.googleplex.com/cast/NDYwNTM5NjIzNTg0NTYzMnxkNTBkMzBmYS1mZQ)\r\n[After screencast](https://screencast.googleplex.com/cast/NTI3OTgxMDMwNDYwNjIwOHw0YTkxYjc3ZS04Yw)\r\n\r\nFixes b/323588333","Url":"https://github.com/angular/components/pull/29853","RelatedDescription":"Closed or merged PR \"fix(material/dialog): updates dialog max-height in landscape\" (#29853)"},{"Id":"2579946317","IsPullRequest":false,"CreatedAt":"2024-10-10T22:11:02","Actor":"bgotink","Number":"29860","RawContent":null,"Title":"feat(cdk/testing): be more lenient in HarnessQuery","State":"open","Body":"### Feature Description\n\nWe find the TestElement/ComponentHarness API exposed in `@angular/cdk/testing` very useful, especially because it decouples much of the test code from the actual environment the test runs in.\n\nWe want to use this for non-Angular projects, where pulling in `@angular/cdk` is a no-go. More specifically, we want to use this to create harnesses for web components, some of which will then end up being used in Angular applications.\nWe've created our own implementation of these types and we're trying to make these compatible with Angular types so that the web component library can use the non-Angular version but these harnesses can then still be used in Angular ComponentHarnesses.\n\nWe've nearly gotten to the point where everything works, there's only one thing we cannot resolve: the `HarnessQuery` used in the `LocatorFactory` interface's functions references the `HarnessPredicate` class which has private properties.\nThis makes \"our\" version of HarnessQuery and the Angular version inherently incompatible according to typescript.\n\nThis could be a small change, e.g. limiting the type in `HarnessQuery` to only the required properties:\n\n```diff\n export type HarnessQuery<T extends ComponentHarness> =\n   | ComponentHarnessConstructor<T>\n-  | HarnessPredicate<T>;\n+  | Pick<HarnessPredicate<T>, 'getDescription' | 'getSelector' | 'harnessType'>\n```\n\nand in the `harness-environment.ts` file use a new function instead of `query instanceof HarnessPredicate`\n\n```ts\nfunction isHarnessPredicate<T extends ComponentHarness>(value: HarnessQuery<T>): value is Pick<HarnessPredicate<T>, 'getDescription' | 'getSelector' | 'harnessType'> {\n  return 'harnessType' in value;\n}\n```\n\n### Use Case\n\nAs mentioned above, we want to use the component harness concept in a non-Angular context and we want those harnesses to be compatible with harnesses written using the CDK and the CDK's harness environments.\n\nAn alternative solution could be to extract part of `@angular/cdk/testing` into a separate package that doesn't have any dependencies to the Angular framework. That way we wouldn't have to maintain our own copy of these types/classes.","Url":"https://github.com/angular/components/issues/29860","RelatedDescription":"Open issue \"feat(cdk/testing): be more lenient in HarnessQuery\" (#29860)"},{"Id":"2579942608","IsPullRequest":true,"CreatedAt":"2024-10-10T22:07:58","Actor":"mmalerba","Number":"29859","RawContent":null,"Title":"feat(material/theming): Disambiguate token names in theme overrides","State":"open","Body":"Prior to this change a single key in the theme overrides map sometimes resulted in mutliple tokens being overridden. This change gives every token a unique name, by prefixing when necessary. The old ambiguous keys are still allowed for compatibility, but will now log a warning when they're used.","Url":"https://github.com/angular/components/pull/29859","RelatedDescription":"Open PR \"feat(material/theming): Disambiguate token names in theme overrides\" (#29859)"},{"Id":"2579439379","IsPullRequest":true,"CreatedAt":"2024-10-10T17:32:27","Actor":"andrewseguin","Number":"29858","RawContent":null,"Title":"feat(material/core): add theme-overrides mixin","State":"open","Body":"Adds a new Sass mixin API to let clients change specific system-level tokens. Similar to the overrides API provided by component theme files","Url":"https://github.com/angular/components/pull/29858","RelatedDescription":"Open PR \"feat(material/core): add theme-overrides mixin\" (#29858)"},{"Id":"2579310664","IsPullRequest":true,"CreatedAt":"2024-10-10T17:25:23","Actor":"andrewseguin","Number":"29857","RawContent":null,"Title":"feat(material/core): rename theme mixin","State":"closed","Body":"Renamed `mat.private-experimental-theme` to just `mat.theme`","Url":"https://github.com/angular/components/pull/29857","RelatedDescription":"Closed or merged PR \"feat(material/core): rename theme mixin\" (#29857)"},{"Id":"2568717125","IsPullRequest":true,"CreatedAt":"2024-10-10T16:46:46","Actor":"naaajii","Number":"29836","RawContent":null,"Title":"fix(material/form-field): account in `cols` attribute on textarea","State":"closed","Body":"previously we were setting width of 180px on our input field however this also made that textarea width stays the same if they are used with `cols` attribute, this commit ensures we dont do that if we have a textarea with `cols` attribute allowing it to grow in width as much as the attribute wants it to\r\n\r\nfixes #29459","Url":"https://github.com/angular/components/pull/29836","RelatedDescription":"Closed or merged PR \"fix(material/form-field): account in `cols` attribute on textarea\" (#29836)"},{"Id":"2578802619","IsPullRequest":false,"CreatedAt":"2024-10-10T15:28:28","Actor":"naiduraa","Number":"29855","RawContent":null,"Title":"Chips: disabled chips is receiving focus","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n<mat-chip-listbox aria-label=\"Fish selection\">\n  <mat-chip-option>One fish</mat-chip-option>\n  <mat-chip-option>Two fish</mat-chip-option>\n  <mat-chip-option>Three fish</mat-chip-option>\n  <mat-chip-option disabled>Four fish</mat-chip-option>\n</mat-chip-listbox>\n\nThe disabled chips receives focus\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/xbnwf3?file=src%2Fexample%2Fchips-overview-example.html\nSteps to reproduce:\n1. Focus using tabs and see the disabled chips receives focus\n\n\n### Expected Behavior\n\nDisabled chips should not receives any focus\n\n### Actual Behavior\n\nDisabled chips receives any focus\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/29855","RelatedDescription":"Closed issue \"Chips: disabled chips is receiving focus\" (#29855)"},{"Id":"2579024875","IsPullRequest":false,"CreatedAt":"2024-10-10T14:24:44","Actor":"ronlawrence3","Number":"29856","RawContent":null,"Title":"bug(mat-tree): How to control a tree expansion state if treeControl is deprecated?","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmat-tree has [treeControl] (and many other related classes and parts) deprecated. How are we supposed to control the expansion state of the tree from our component if there is to no treeControl? Was this an oversight in documentation? even your own examples in the documentation use the deprecated features!\n\n\n### Reproduction\n\nN/A\n\n\n### Expected Behavior\n\nI expect deprecated features / componenets / classes to have a new replacement or documentation on HOW to use the new way of doing things that accounts for the deprecated feature.\n\n### Actual Behavior\n\n In this case (CdkTree):\n\n```\n    /**\n     * The tree controller\n     *\n     * @deprecated Use one of `levelAccessor` or `childrenAccessor` instead. To be removed in a\n     * future version.\n     * @breaking-change 21.0.0\n     */\n    treeControl?: TreeControl<T, K>;\n```\nlevelAccessor and childrenAccessor have nothing to do with expansion state. Please tell us what we are supposed to use in place of treeControl!\n\n\n### Environment\n\n- Angular: 18.2.2\n- CDK/Material: 18.2.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): N/A\n","Url":"https://github.com/angular/components/issues/29856","RelatedDescription":"Open issue \"bug(mat-tree): How to control a tree expansion state if treeControl is deprecated?\" (#29856)"},{"Id":"2577922860","IsPullRequest":true,"CreatedAt":"2024-10-10T12:50:28","Actor":"crisbeto","Number":"29854","RawContent":null,"Title":"fix(material/badge): content incorrectly truncated in M3","State":"closed","Body":"Fixes that at some point the M3 badge regressed to where the content was always being truncated. The regression was likely, because the previous setup was very fragile and it was relying on some tokens never being emitted.\r\n\r\nThese changes remove the need to rely on fallbacks and resolve the issue by setting the correct token values.\r\n\r\nFixes #29788.","Url":"https://github.com/angular/components/pull/29854","RelatedDescription":"Closed or merged PR \"fix(material/badge): content incorrectly truncated in M3\" (#29854)"},{"Id":"2575712502","IsPullRequest":false,"CreatedAt":"2024-10-10T06:51:33","Actor":"BackwardsMan","Number":"29847","RawContent":null,"Title":"bug(Badge): position and size on page is off","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe position of the Badge on the Angular Material webpage is off and the wrong size for some badges. \nDon't know if this is a bug in the component itself or strictly how it is displayed on the webpage\nSee image:\n\n![Image](https://github.com/user-attachments/assets/6ba2b982-92c4-4e13-b2ed-1cd08a4ab37b)\n\n\n### Reproduction\n\nLink: https://material.angular.io/components/badge/overview \n\nSteps to reproduce:\n1. Go to webpage\n2. Look at examples for the Badge\n\n\n\n### Expected Behavior\n\n1. Expect a small badge to be smaller than default\n2. Expect a large badge to be larger than default\n3. Expect no badges to overlap text\n4. Expect no badges to overlap icons\n5. Expect badge with icon to show number 15 \n\n### Actual Behavior\n\n1. Small badge is not smaller than default badge\n2. Large badge is nog bigger than default badge\n3. Large badge overlaps with text\n4. Icon with a badge overlaps the icon\n5. Icon with a badge shows \"1 and ellipsis\"\n\n### Environment\n\n- Browser(s): Chrome Version 129.0.6668.90 (Official Build) (arm64)\n- Operating System: macOS\n","Url":"https://github.com/angular/components/issues/29847","RelatedDescription":"Closed issue \"bug(Badge): position and size on page is off\" (#29847)"},{"Id":"2575971596","IsPullRequest":true,"CreatedAt":"2024-10-09T13:40:18","Actor":"crisbeto","Number":"29852","RawContent":null,"Title":"Bump version to \"v19.0.0-next.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29852","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.0-next.8\" with changelog.\" (#29852)"},{"Id":"2575948684","IsPullRequest":true,"CreatedAt":"2024-10-09T13:32:15","Actor":"crisbeto","Number":"29851","RawContent":null,"Title":"docs: release notes for the v18.2.8 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/29851","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.8 release\" (#29851)"},{"Id":"2575943880","IsPullRequest":true,"CreatedAt":"2024-10-09T13:28:18","Actor":"crisbeto","Number":"29850","RawContent":null,"Title":"Bump version to \"v18.2.8\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/29850","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.8\" with changelog.\" (#29850)"},{"Id":"2568899974","IsPullRequest":false,"CreatedAt":"2024-10-09T12:51:36","Actor":"Cfun1","Number":"29838","RawContent":null,"Title":"docs-bug(icon): The link to","State":"closed","Body":"### Documentation Feedback\n\nThe website https://fortawesome.github.io/Font-Awesome/examples/ mentioned in the documentation below is incorret https://github.com/angular/components/blob/76ada37dfb0a9cfade1157684b74e61e68a5cc13/src/material/icon/icon.ts#L130\n\nsuggestion: https://fontawesome-v4.github.io/examples/index.html\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/icon/api","Url":"https://github.com/angular/components/issues/29838","RelatedDescription":"Closed issue \"docs-bug(icon): The link to\" (#29838)"},{"Id":"2575822668","IsPullRequest":true,"CreatedAt":"2024-10-09T12:51:35","Actor":"miguelcsx","Number":"29849","RawContent":null,"Title":"docs(material/icon): #29838 update broken link in icon documentation","State":"closed","Body":"This pull request fixes a broken link in the documentation for the Angular Material `icon` component. \r\n\r\n**Changes:**\r\n- The incorrect link in `components/src/material/icon/icon.ts` has been updated to the correct one.\r\n  \r\n**Motivation:**\r\n- A broken link can lead to confusion and a poor user experience when reading the documentation.\r\n\r\n**No functionality or API was modified.**\r\n\r\n- closes #29838 \r\n\r\nPlease review and merge if everything looks good. Let me know if any further changes are needed.\r\n","Url":"https://github.com/angular/components/pull/29849","RelatedDescription":"Closed or merged PR \"docs(material/icon): #29838 update broken link in icon documentation\" (#29849)"},{"Id":"2575738364","IsPullRequest":true,"CreatedAt":"2024-10-09T12:48:08","Actor":"crisbeto","Number":"29848","RawContent":null,"Title":"build: account for absolute paths in token extraction","State":"closed","Body":"Fixes an error that is currently breaking the patch branch, because we didn't have a resolver for imports like `@use '@angular/cdk';`.","Url":"https://github.com/angular/components/pull/29848","RelatedDescription":"Closed or merged PR \"build: account for absolute paths in token extraction\" (#29848)"},{"Id":"2572086016","IsPullRequest":false,"CreatedAt":"2024-10-09T09:40:40","Actor":"reuse-ay","Number":"29843","RawContent":null,"Title":"docs-bug(COMPONENT): MatListItem activated type is not shown","State":"closed","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/list/api#MatListItem\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/list/api#MatListItem","Url":"https://github.com/angular/components/issues/29843","RelatedDescription":"Closed issue \"docs-bug(COMPONENT): MatListItem activated type is not shown\" (#29843)"},{"Id":"2573667019","IsPullRequest":true,"CreatedAt":"2024-10-09T09:40:39","Actor":"ChinoUkaegbu","Number":"29845","RawContent":null,"Title":"docs: show MatListItem activated type","State":"closed","Body":"Closes #29843 ","Url":"https://github.com/angular/components/pull/29845","RelatedDescription":"Closed or merged PR \"docs: show MatListItem activated type\" (#29845)"},{"Id":"2575272016","IsPullRequest":true,"CreatedAt":"2024-10-09T09:38:40","Actor":"crisbeto","Number":"29846","RawContent":null,"Title":"Token extraction updates","State":"closed","Body":"Includes a couple of changes (see individual commits) to ensure that we extract tokens correctly from the `core-theme` and that we correctly reflect tokens whose names overlap between different prefixes.","Url":"https://github.com/angular/components/pull/29846","RelatedDescription":"Closed or merged PR \"Token extraction updates\" (#29846)"},{"Id":"2572704535","IsPullRequest":false,"CreatedAt":"2024-10-08T09:56:20","Actor":"valentyna-sidorova-simpligov","Number":"29844","RawContent":null,"Title":"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus","State":"open","Body":"### Description\n\nWhen using screen readers and lazy load menu, the menu closes faster than the state (aria-expanded) updates so when the trigger refocuses it has an expanded state. Then it changes to collapsed state, which causes reading 2 states.\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/2tyoy4?file=src%2Fexample%2Fmenu-overview-example.html\nSteps to reproduce:\nUse any menu with matMenuContent\n\n### Expected Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **collapsed**  subMenu \n\n\n### Actual Behavior\n\nNVDA log:\n  Menu\n  menu  clickable    Item 1  menu item  \n  Menu  menu button  **expanded**  subMenu  \n  **collapsed**\n\n\n### Environment\n\n- Angular: 18.2.6\n- CDK/Material: 18.2.6\n- Browser(s): Chrome Version 129.0.6668.72\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/29844","RelatedDescription":"Open issue \"bug(mat-menu-trigger): screen reader reads 2 states (expanded and then collapsed) on menu close for lazy load menus\" (#29844)"},{"Id":"2571264712","IsPullRequest":true,"CreatedAt":"2024-10-08T06:58:13","Actor":"crisbeto","Number":"29842","RawContent":null,"Title":"build: rework tokens extraction","State":"closed","Body":"Reworks how we extract the tokens so we can output `override` calls instead of the full CSS variables.","Url":"https://github.com/angular/components/pull/29842","RelatedDescription":"Closed or merged PR \"build: rework tokens extraction\" (#29842)"},{"Id":"2568844696","IsPullRequest":true,"CreatedAt":"2024-10-07T15:24:31","Actor":"naaajii","Number":"29837","RawContent":null,"Title":"ci: `form-field` was added twice to commit scopes array","State":"closed","Body":"`form-field` scope was repeated twice in in commit message config","Url":"https://github.com/angular/components/pull/29837","RelatedDescription":"Closed or merged PR \"ci: `form-field` was added twice to commit scopes array\" (#29837)"},{"Id":"2569913669","IsPullRequest":false,"CreatedAt":"2024-10-07T09:46:14","Actor":"MikaStark","Number":"29841","RawContent":null,"Title":"bug(buttons): align button types with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for buttons mention 5 differents kind of buttons :\n\n- [Elevated](https://m3.material.io/components/buttons/specs#0eea2a85-b4d7-4c74-b08e-98410b9412c7) : currently named `raised` but wrong background color is applied (should be `surface-container-low`)\n- [Filled](https://m3.material.io/components/buttons/specs#0b1b7bd2-3de8-431a-afa1-d692e2e18b0d) : currently named `flat`\n- [Filled tonal](https://m3.material.io/components/buttons/specs#158f0a18-67fb-4ac4-9d22-cc4d1adc4579) : not supported\n- [Outlined](https://m3.material.io/components/buttons/specs#de72d8b1-ba16-4cd7-989e-e2ad3293cf63) : currently named `flat`\n- [Text](https://m3.material.io/components/buttons/specs#899b9107-0127-4a01-8f4c-87f19323a1b4) : not supported\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\nFuthermore, a appreciable enhancement whould be to regroup all css selectors for `MatButton` and `MatAnchor` directives into one `mat-button` and add an extra `appearance` input like cards does. Acceptable values would be `elevated`, `filled`, `filled-tonal`, `outlined` and `text` (default one)\n\n### Reproduction\n\nIf really needed, tell me...\n\n### Expected Behavior\n\n- Rename `mat-raised-button` to `mat-elevated-button`\n- Rename `mat-flat-button` to `mat-filled-button`\n- Add missing `mat-filled-tonal-button`\n- Rename `mat-flat-button` to `mat-outlined-button`\n- Add missing `mat-text-button`\n\n### Actual Behavior\n\n*cf. Expected Behavior*\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29841","RelatedDescription":"Open issue \"bug(buttons): align button types with m3 specs\" (#29841)"},{"Id":"2569839813","IsPullRequest":false,"CreatedAt":"2024-10-07T09:15:30","Actor":"MikaStark","Number":"29840","RawContent":null,"Title":"bug(card): align card appearance with m3 specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi Angular Material Team !\nThanks for all your hard work on this project.\nToday I want to pointout the Material 3 specification for cards mention 3 differents appearance :\n- [Elevated](https://m3.material.io/components/cards/specs#a012d40d-7a5c-4b07-8740-491dec79d58b) : currently corresponds to `raised`\n- [Filled](https://m3.material.io/components/cards/specs#0f55bf62-edf2-4619-b00d-b9ed462f2c5a) : currently missing \n- [Outlined](https://m3.material.io/components/cards/specs#9ad208b3-3d37-475c-a0eb-68cf845718f8) : fully supported\n\nThat's why I proposed to add a new `filled` appearance to the existing ones and rename `raised` into `elevated`.\n\nI understand this is a very small and easy-to-workaround issue but it would be nice to have a better alignement with Material 3 specs and prevent developers to add extra (yet tiny) style code to get the expected appearance.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/zkkqyi?file=src%2Fexample%2Fcard-footer-example.css\n\n\n### Expected Behavior\n\nHaving 3 appearance for cards : `outlined`, `elevated` and `filled`\n\n### Actual Behavior\n\n- Missing `filled` appearance\n- `elevated` appearance is instead named `raised`\n\n### Environment\n\n- Angular: 18.2.7\n- CDK/Material: 18.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu 24.04\n","Url":"https://github.com/angular/components/issues/29840","RelatedDescription":"Open issue \"bug(card): align card appearance with m3 specs\" (#29840)"},{"Id":"2568906688","IsPullRequest":false,"CreatedAt":"2024-10-06T21:20:21","Actor":"moniuch","Number":"29839","RawContent":null,"Title":"docs-bug(common): The way deprecated symbols are rendered","State":"open","Body":"### Documentation Feedback\n\nThe docs for material have a general problem with deprecated symbols.\nHere is just an example of *TreeControl\n\n1. The word **Deprecated** on hover suggests through the question mark that there is some explanation behind it (which there is when you look into the TS code), but nothing happens either on hover or on click [it was impossible to capture that cursor in the screenshot]\n2. I think for the sake of clarity, the name of a deprecated symbol should be style using strikethrough, and the explanation + suggestions what to use should immediately follow it, even before the old description. Currently the styling of the Deprecated word doesn't really stand out as much as it should, blends into the body text, IMO. \n\n![Image](https://github.com/user-attachments/assets/bd2fcfde-a218-4c57-ae08-b0f923bb7308)\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/api#BaseTreeControl","Url":"https://github.com/angular/components/issues/29839","RelatedDescription":"Open issue \"docs-bug(common): The way deprecated symbols are rendered\" (#29839)"},{"Id":"2568522070","IsPullRequest":true,"CreatedAt":"2024-10-06T18:13:46","Actor":"crisbeto","Number":"29834","RawContent":null,"Title":"build: update to latest next versions","State":"closed","Body":"We were running behind on the `next` releases. These changes update us to the latest version so we can catch upcoming issues early.","Url":"https://github.com/angular/components/pull/29834","RelatedDescription":"Closed or merged PR \"build: update to latest next versions\" (#29834)"},{"Id":"2567708153","IsPullRequest":true,"CreatedAt":"2024-10-06T18:13:16","Actor":"crisbeto","Number":"29832","RawContent":null,"Title":"fix(multiple): remove final references to ComponentFactoryResolver","State":"closed","Body":"Removes the final places where we were referring to `ComponentFactoryResolver` in our code.","Url":"https://github.com/angular/components/pull/29832","RelatedDescription":"Closed or merged PR \"fix(multiple): remove final references to ComponentFactoryResolver\" (#29832)"},{"Id":"2568659592","IsPullRequest":true,"CreatedAt":"2024-10-06T13:21:26","Actor":"naaajii","Number":"29835","RawContent":null,"Title":"fix(material/card): elevated card container color","State":"open","Body":"update elevated card container color from `surface` to  `surface-container-low` matching the M3 specification\r\n\r\nfixes #29163\r\n\r\n---\r\nbefore:\r\n![image](https://github.com/user-attachments/assets/24bb0bbb-c95a-470e-8d58-7001a59e6ed8)\r\n![image](https://github.com/user-attachments/assets/732c2062-28e1-4c70-b490-2048776b8691)\r\n\r\nafter:\r\n![image](https://github.com/user-attachments/assets/fbd0ec5b-a097-4c4a-843d-4122d96099a8)\r\n![image](https://github.com/user-attachments/assets/61d27cb4-226d-4fb0-8065-dc11a26a1067)\r\n\r\n\r\n","Url":"https://github.com/angular/components/pull/29835","RelatedDescription":"Open PR \"fix(material/card): elevated card container color\" (#29835)"},{"Id":"2568329621","IsPullRequest":true,"CreatedAt":"2024-10-06T07:54:09","Actor":"floxay","Number":"29833","RawContent":null,"Title":"fix(material/schematics): treat lower dependency builder as default bâ€¦","State":"closed","Body":"â€¦uilder","Url":"https://github.com/angular/components/pull/29833","RelatedDescription":"Closed or merged PR \"fix(material/schematics): treat lower dependency builder as default bâ€¦\" (#29833)"},{"Id":"2567464523","IsPullRequest":true,"CreatedAt":"2024-10-04T21:56:09","Actor":"essjay05","Number":"29831","RawContent":null,"Title":"fix(material/form-field): changes show/hide mechanism of mat-error for screenreaders","State":"open","Body":"Attempts to fix a bug with Angular Components Form-field component where the mat-error and mat-hint component are just visually hidden in the DOM, but visibility is toggled depending on the form field state. Also updates the .mat-mdc-form-field-subscript-wrapper to have aria-live=assertive in order to prioritize the error/hint being read when it appears.\r\n\r\nFixes b/370743693","Url":"https://github.com/angular/components/pull/29831","RelatedDescription":"Open PR \"fix(material/form-field): changes show/hide mechanism of mat-error for screenreaders\" (#29831)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-11T03:30:02.6391649Z","RunDurationInMilliseconds":1897}