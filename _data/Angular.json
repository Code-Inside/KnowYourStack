{"Data":{"Angular-Issues":{"Issues":[{"Id":"2724200559","IsPullRequest":false,"CreatedAt":"2024-12-07T00:32:55","Actor":"newmankyle","Number":"59097","RawContent":null,"Title":"Child Form Groups Don't Receive Updated _onCollectionChange() When FormGroupDirective Seeds Parent with Callback","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe rely on `_onCollectionChange()` to notify its FormGroupDirective to re-bind its FormControlName directives, and FormGroup is smart enough to propagate its `_onCollectionChange()` callback so that Child FormGroups can notify too. This happens in two scenarios\n1. [When we first initialize the FormGroup](https://github.com/angular/angular/blob/4a030f7308b1e9c0fe6164f4533107f79004891c/packages/forms/src/model/form_group.ts#L598-L603) (the constructor calls `_setupControl()` which binds `_onCollectionChange()` to the children\n2. [When we call](https://github.com/angular/angular/blob/4a030f7308b1e9c0fe6164f4533107f79004891c/packages/forms/src/model/form_group.ts#L233-L239) `registerControl` (and associated methods)\n\nThe problem is with scenario 1: we may seed each child control with a default callback (an empty function) on init, but we don't propagate a *new* callback when we eventually bind the FormGroup to a FormGroupDirective. The child FormGroups are still working with the 'default' one. Furthermore the api is private so I don't see any way to fix this on the user side.\n\nIf we have a scenario where a child form group adds controls dynamically, and some of those controls are FormControlName directives (see stackblitz), then we fail to trigger `_updateDOMValue()` on the parent FormGroupDirective. The FormControlName directives are left with orphaned form controls.\n\nIdeally, `_registerOnCollectionChange()`  would cascade to its children (or maybe just call `_setupControls()` again).\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-iatn8h?file=src%2Fbroken-form.ts \n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.0\nNode: 20.11.1\nPackage Manager: yarn 4.4.0\nOS: linux x64\n\nAngular: 18.2.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, material, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.0\n@angular-devkit/build-angular   18.2.0\n@angular-devkit/core            18.2.0\n@angular-devkit/schematics      18.2.0\n@angular/flex-layout            14.0.0-beta.41\n@schematics/angular             18.2.0\nng-packagr                      18.2.0\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59097","RelatedDescription":"Open issue \"Child Form Groups Don't Receive Updated _onCollectionChange() When FormGroupDirective Seeds Parent with Callback\" (#59097)"},{"Id":"2720977260","IsPullRequest":true,"CreatedAt":"2024-12-06T22:38:31","Actor":"angular-robot","Number":"59077","RawContent":null,"Title":"build: update actions/cache digest to 1bd1e32","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | digest | `6849a64` -> `1bd1e32` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59077","RelatedDescription":"Closed or merged PR \"build: update actions/cache digest to 1bd1e32\" (#59077)"},{"Id":"2723510085","IsPullRequest":false,"CreatedAt":"2024-12-06T20:42:49","Actor":"UchihaYuki","Number":"59091","RawContent":null,"Title":"The execution of NgModule constructor and ENVIRONMENT_INITIALIZER is not stable in standalone component.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nYou can switch between standalone and NgModule versions in main.ts, by commenting out the corresponding line:\n![Image](https://github.com/user-attachments/assets/1fd9d728-1a72-431b-938d-6e73e51475df)\n\nYou should add \"/1\" to address bar to preview.\n\nWhen you use standalone version, the SharedModule will be instantiated 3 times, but when you use NgModule version, it will be instantiated only twice. You can observe that in console:\n\nstandalone:\n![Image](https://github.com/user-attachments/assets/6addd910-014d-4b41-b4f8-644888ca368c)\n\nNgModule:\n![Image](https://github.com/user-attachments/assets/f763b803-bf54-40b6-892d-e63f7c61464c)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-fjempp?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nPlease see the description above\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPlease take look at the mini repo to find out.\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59091","RelatedDescription":"Closed issue \"The execution of NgModule constructor and ENVIRONMENT_INITIALIZER is not stable in standalone component.\" (#59091)"},{"Id":"2723862577","IsPullRequest":false,"CreatedAt":"2024-12-06T20:29:21","Actor":"jvh-centric","Number":"59096","RawContent":null,"Title":"Typo in NgModules documentation","State":"open","Body":"### Describe the problem that you experienced\n\nhttps://github.com/angular/angular/blob/30e676098d72e9e11a6628b9716668df08f18c62/adev/src/content/guide/ngmodules/overview.md?plain=1#L155\n\nThis sentence seems wrong ? \n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/ngmodules/overview\n\n### Describe what you were looking for in the documentation\n\nI'm not 100% what it is meant to say ...\n\nMaybe:\n\nSimilarly, some NgModules may **have** a static `forChild` that indicates the providers are intended to be added to components within your application hierarchy.\n\n?\n\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59096","RelatedDescription":"Open issue \"Typo in NgModules documentation\" (#59096)"},{"Id":"2723847024","IsPullRequest":true,"CreatedAt":"2024-12-06T20:19:38","Actor":"thePunderWoman","Number":"59095","RawContent":null,"Title":"ci: Update caretaker config for merge queue","State":"open","Body":"This updates the caretaker query for merge queue\r\nto remove status: success, since skipped workflows are considered failed by Github and omitted from\r\nthe query results.\r\n","Url":"https://github.com/angular/angular/pull/59095","RelatedDescription":"Open PR \"ci: Update caretaker config for merge queue\" (#59095)"},{"Id":"2723794834","IsPullRequest":false,"CreatedAt":"2024-12-06T19:44:02","Actor":"nickregeda","Number":"59094","RawContent":null,"Title":"Mistake in the description of equality comparison for linked signal","State":"open","Body":"### Describe the problem that you experienced\n\nPlease check this section\n[https://angular.dev/guide/signals/linked-signal#custom-equality-comparison](url)\n\nThere is an error in this code because the parameters for the callback in equal are strings, i.e. the email value itself, not the activeUser value\nError: Property id does not exist on type string\n```\nconst activeUser = signal({id: 123, name: 'Morgan'});\nconst email = linkedSignal(() => `${activeUser().name}@example.com`, {\n  // Consider the user as the same if it's the same `id`.\n  equal: (a, b) => a.id === b.id,\n});\n```\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/signals/linked-signal#custom-equality-comparison\n\n### Describe what you were looking for in the documentation\n\nI'm familiarizing myself with the updates that were introduced in Angular version 19.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59094","RelatedDescription":"Open issue \"Mistake in the description of equality comparison for linked signal\" (#59094)"},{"Id":"2723745320","IsPullRequest":false,"CreatedAt":"2024-12-06T19:10:28","Actor":"olfek","Number":"59093","RawContent":null,"Title":"`/index.html` WITH query parameters/params does not match any routes","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\n`/index.html` resolves to `/`\n`/index.html?foo=bar` throws an error:\n```\nERROR Error: NG04002: Cannot match any routes. URL Segment: 'index.html'\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/user-attachments/files/18042548/angular-index.html-with-query-params-bug.zip\n\n### Please provide the exception or error you saw\n\n```true\nERROR Error: NG04002: Cannot match any routes. URL Segment: 'index.html'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nSame thing seen by someone else in 2020 - https://stackoverflow.com/q/62259234","Url":"https://github.com/angular/angular/issues/59093","RelatedDescription":"Open issue \"`/index.html` WITH query parameters/params does not match any routes\" (#59093)"},{"Id":"2723547937","IsPullRequest":true,"CreatedAt":"2024-12-06T17:14:31","Actor":"crisbeto","Number":"59092","RawContent":null,"Title":"feat(core): add event listener options to renderer","State":"open","Body":"Updates the `Renderer2.listen` signature to accept event options, as well as all adjacent types to it.\r\n","Url":"https://github.com/angular/angular/pull/59092","RelatedDescription":"Open PR \"feat(core): add event listener options to renderer\" (#59092)"},{"Id":"2723480180","IsPullRequest":false,"CreatedAt":"2024-12-06T16:44:36","Actor":"saikorthivada","Number":"59090","RawContent":null,"Title":"Clarification Needed: Key Differences Between `linkedSignals` and `computed` in Dynamic Scenarios","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAs per my understanding on linkedSignals and computedSignals both can be used based some specific scenarios. Here is what i understand about\n\n`linkedSignals`: For scenarios with dynamic or evolving dependency graphs, especially when conditions influence which signals are accessed.\n`computed`: For scenarios with static and predictable dependencies, where simplicity and performance optimisation are key.\n\nBut as per these the computed signals and linkedSignals gives the same output.\n\nExample code:\n\n```\nimport { CommonModule } from '@angular/common';\nimport { Component, computed, linkedSignal, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  imports: [CommonModule],\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'v-19';\n  isDynamic = signal(true);\n  signalA = signal(10);\n  signalB = signal(20);\n\n  // Using linkedSignal\n  dynamicResult = linkedSignal(() => {\n    return this.isDynamic() ? this.signalA() : this.signalB();\n  });\n\n  // Using computed\n  staticResult = computed(() => {\n    return this.isDynamic() ? this.signalA() : this.signalB();\n  });\n\n  constructor() {\n\n    setTimeout(() => {\n      this.isDynamic.set(false);\n    }, 5000);\n  }\n}\n\n```\n### Code Explanation:  \nThe above code demonstrates the dynamic behavior of `linkedSignals` and `computed` signals. It uses a boolean signal called `isDynamic`, along with two integer signals, `signalA` and `signalB`. The goal is to dynamically determine the result:  \n- When `isDynamic` is `true`, `linkedSignal` should dynamically provide `signalA` as the result.  \n- The expectation is that `linkedSignals` can handle dynamic and complex signals more effectively, whereas `computed` should not behave the same way.\n\n### Expected Outcome:  \nOnly the `linkedSignal` (i.e., `dynamicResult`) should update when there is a change in the value of `isDynamic`.\n\n### Actual Outcome:  \nBoth `linkedSignals` and `computed` behave identically in this scenario, and the result updates for both when `isDynamic` changes.\n\n### Question:  \nIf both `linkedSignals` and `computed` behave the same way in this case, what is the key difference between them? When should each be used effectively?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yambyv?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n### Expected Outcome:  \nOnly the `linkedSignal` should update when there is a change in the value of dynamic value.\n\n### Actual Outcome:  \nBoth `linkedSignals` and `computed` behave identically in this scenario, and the result updates for both when dynamic value changes.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.14.0\nPackage Manager: npm 10.7.0\nOS: darwin arm64\n\nAngular: 18.0.3\n... core\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.2 (cli-only)\n@angular-devkit/core         19.0.2 (cli-only)\n@angular-devkit/schematics   19.0.2 (cli-only)\n@schematics/angular          19.0.2 (cli-only)\n```\n\n### Anything else?\n\nPlease let me know if I am missing something or misunderstanding the concept.","Url":"https://github.com/angular/angular/issues/59090","RelatedDescription":"Closed issue \"Clarification Needed: Key Differences Between `linkedSignals` and `computed` in Dynamic Scenarios\" (#59090)"},{"Id":"2723389799","IsPullRequest":false,"CreatedAt":"2024-12-06T15:59:00","Actor":"saikorthivada","Number":"59089","RawContent":null,"Title":"Unexpected Invocation of `linkedSignal` Computation Despite Unchanged Source","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhile working with `linkedSignals` in the developer preview mode, I encountered some issues when comparing `linkedSignals` with `computed` signals.\n\nAccording to the documentation, when the `source` property is specified, the `computation` property should only execute when there is a change in the `source` value. However, this expected behavior is not being observed in practice.\n\nHere is the code sample\n\n```\nimport { CommonModule } from '@angular/common';\nimport { Component, linkedSignal, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  imports: [CommonModule],\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'v-19';\n\n  signalA = signal(10);\n  signalB = signal(20);\n\n  linkedAB = linkedSignal({\n    source: this.signalA,\n    computation: () => {\n      console.log('Updated');\n      return this.signalA() + this.signalB()\n    }\n  })\n\n  constructor() {\n    setInterval(() => {\n      this.signalB.update((previous) => previous + 10);\n    }, 5000);\n  }\n}\n```\n\n### Code Explanation:\n\nI have created two signals, `signalA` and `signalB`. After the component loads, I used a `setInterval` in the constructor to update the value of `signalB` by adding 10 to its previous value every 5 seconds.\n\n### Expected Outcome:\n\nThe `console.log('Updated');` statement inside the `linkedSignal` computation should not execute because only `signalA` is defined as the `source`, and I am not updating `signalA`.\n\n### Actual Outcome:\n\nDespite only updating `signalB` through the interval, the `linkedSignal` computation callback is still being executed, logging `'Updated'` to the console and recalculating the value of `linkedAB`.\n\n### Concern:\n\nIf this behavior occurs, I am unclear about the purpose of the `source` property in `linkedSignals`, as it seems to be ineffective in preventing recomputation when only `signalB` is updated.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-ns6muo?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n### Expected Behavior:  \nThe `linkedSignals` computation should only be invoked when the `source` value is updated. If the `source` remains unchanged, the computation should not execute.\n\n### Actual Behavior:  \nCurrently, the computation is being invoked regardless of whether the `source` value is updated, indicating that it is not depending on the `source` property as intended.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.14.0\nPackage Manager: npm 10.7.0\nOS: darwin arm64\n\nAngular: 18.0.3\n... core\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.2 (cli-only)\n@angular-devkit/core         19.0.2 (cli-only)\n@angular-devkit/schematics   19.0.2 (cli-only)\n@schematics/angular          19.0.2 (cli-only)\n```\n\n### Anything else?\n\nKindly let me know if there is any issue with my code or if I have misunderstood something.","Url":"https://github.com/angular/angular/issues/59089","RelatedDescription":"Open issue \"Unexpected Invocation of `linkedSignal` Computation Despite Unchanged Source\" (#59089)"},{"Id":"2723026078","IsPullRequest":true,"CreatedAt":"2024-12-06T13:08:47","Actor":"hawkgs","Number":"59088","RawContent":null,"Title":"docs: set syntax highlighting to the remaining Markdown code examples blocks","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere are still some code block that are missing syntax highlighting.\r\n\r\n## What is the new behavior?\r\n\r\nThere are some code blocks that slipped through the initial regular expressions that I had used due to white space + some broken blocks.\r\n\r\nUnfortunately, there is a chance that there are still some blocks without highlighting but I assume they will be a limited number given they'll most likely deviate in some way (e.g. will include an unusual content or a typo).\r\n \r\nRelated to #59026\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59088","RelatedDescription":"Open PR \"docs: set syntax highlighting to the remaining Markdown code examples blocks\" (#59088)"},{"Id":"2722946374","IsPullRequest":true,"CreatedAt":"2024-12-06T12:28:19","Actor":"crisbeto","Number":"59087","RawContent":null,"Title":"fix(compiler-cli): preserve non-null assertions in event side of two-way bindings","State":"open","Body":"Follow-up to #59002. If a two-way binding is non-null asserted, only the property side was getting the assertion since the `$event` is synthetic. In practice this means that there's no way to non-null assert a two-way binding. These changes fix the issue by checking if the handler is asserted and applying it to the `$event` assignment.\r\n","Url":"https://github.com/angular/angular/pull/59087","RelatedDescription":"Open PR \"fix(compiler-cli): preserve non-null assertions in event side of two-way bindings\" (#59087)"},{"Id":"2722479223","IsPullRequest":true,"CreatedAt":"2024-12-06T09:07:17","Actor":"ColinJolivet","Number":"59086","RawContent":null,"Title":"Refactor/dont show expand button when there is no hidden line","State":"open","Body":"Remove the expand button of an example viewer when there is no hidden lines in it, in order not to confuse people\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #53279\r\n\r\n\r\n## What is the new behavior?\r\n\r\nNo more expand button when there is no hidden lines in the example viewer\r\n\r\n![image](https://github.com/user-attachments/assets/49fb3ed8-7875-4f62-af03-0db513d049f0)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nInitially there was a test on the operation of the expand button in the doc-viewer.componenent.spec.ts, but I moved it to the example-viewer.component.spec.ts as it seemed more appropriate.\r\n","Url":"https://github.com/angular/angular/pull/59086","RelatedDescription":"Open PR \"Refactor/dont show expand button when there is no hidden line\" (#59086)"},{"Id":"2721971529","IsPullRequest":false,"CreatedAt":"2024-12-06T03:37:24","Actor":"Shrinivassab","Number":"59085","RawContent":null,"Title":"Improve Lifecycle Hooks Documentation with Expanded Examples and Error Handling","State":"open","Body":"### Describe the problem that you experienced\n\nThe documentation provides good insights into lifecycle hooks but lacks depth in certain areas. Key concerns include:\n\n1. Insufficient examples for real-world scenarios (e.g., combining hooks effectively).\n2. Limited guidance on debugging errors such as `ExpressionChangedAfterItHasBeenCheckedError`.\n3. No recommendations for testing lifecycle hooks.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/lifecycle\n\n### Describe what you were looking for in the documentation\n\nI was looking for:\n\n1. Clear examples of how to use lifecycle hooks in realistic scenarios.\n2. Debugging strategies for common errors (e.g., `ExpressionChangedAfterItHasBeenCheckedError`).\n3. A section on testing lifecycle hooks for developers writing unit tests.\n\n### Describe the actions that led you to experience the problem\n\n1. Navigated to the Lifecycle Hooks documentation to understand ngOnChanges and ngOnInit.\n2. Attempted to find guidance on debugging `ExpressionChangedAfterItHasBeenCheckedError`.\n3. Looked for examples of testing hooks but found none.\n\n### Describe what you want to experience that would fix the problem\n\nTo address the gaps, I propose the following:\n\n1. Add detailed examples demonstrating real-world usage for hooks like `ngOnChanges `and `ngAfterViewInit`.\n2. Introduce a debugging section for common lifecycle-related errors.\n3. Include a section with sample unit tests for lifecycle hooks.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nNo direct error was caused by this problem, but the lack of debugging guidance for `ExpressionChangedAfterItHasBeenCheckedError` is a significant gap.\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nNot applicable for this documentation issue.\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nAdding examples and debugging guidance will significantly improve the usability of this documentation, helping both novice and advanced developers. Suggestions for debugging errors can also include practical tips like isolating changes to earlier hooks or deferring state changes to subsequent lifecycle phases.\n```","Url":"https://github.com/angular/angular/issues/59085","RelatedDescription":"Open issue \"Improve Lifecycle Hooks Documentation with Expanded Examples and Error Handling\" (#59085)"},{"Id":"2720699862","IsPullRequest":true,"CreatedAt":"2024-12-06T00:16:52","Actor":"arielbackenroth","Number":"59073","RawContent":null,"Title":"fix(core): Snapshots can return nullish values; don't run the snapsho…","State":"closed","Body":"fix(core): Snapshots can return nullish values; don't run the snapshotted function twice if it does.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ X] Tests for the changes have been added (for bug fixes / features)\r\n- [ X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59073","RelatedDescription":"Closed or merged PR \"fix(core): Snapshots can return nullish values; don't run the snapsho…\" (#59073)"},{"Id":"2721464839","IsPullRequest":true,"CreatedAt":"2024-12-06T00:01:18","Actor":"alxhub","Number":"59083","RawContent":null,"Title":"Empty the circular dependencies golden","State":"closed","Body":"Collection of commits which use `import type` to remove every existing circular dependency exception.","Url":"https://github.com/angular/angular/pull/59083","RelatedDescription":"Closed or merged PR \"Empty the circular dependencies golden\" (#59083)"},{"Id":"2721391448","IsPullRequest":false,"CreatedAt":"2024-12-05T20:59:09","Actor":"jnizet","Number":"59082","RawContent":null,"Title":"ComponentFixture.detectChanges causes NG0100 in zoneless mode","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn zoneless mode, calling `ComponentFixture.detectChanges()` throws an NG0100 error.\n\nLet's take the following component as an example:\n\n```ts\n@Component({\n  selector: 'app-root',\n  template: '{{ value }}',\n})\nexport class AppComponent {\n  value = 0;\n}\n```\n \nI am well aware that in real life, since we use zoneless change detection, changing the value of the component should not trigger a change detection, because no signal is being modified.\n\nLet's run the following (bad) test for it:\n\n```ts\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent],\n      providers: [provideExperimentalZonelessChangeDetection()],\n    }).compileComponents();\n  });\n\n  it('should detect changes', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    \n    fixture.detectChanges();\n    expect(fixture.nativeElement.textContent).toBe('0');\n\n    fixture.componentInstance.value = 1;\n    fixture.detectChanges();\n    \n    expect(fixture.nativeElement.textContent).toBe('1');\n  });\n});\n```\n\nWhen executed, I expect this test to pass, because we imperatively launch a change detection instead of letting Angular autodetect the changes.\n\nBut the test neither passes nor properly fails. Instead, it throws an NG0100 error.\n\nThe better test, letting Angular auto-detect the changes, fails correctly:\n\n```ts\nimport { ComponentFixtureAutoDetect, TestBed } from '@angular/core/testing';\nimport { AppComponent } from './app.component';\nimport { provideExperimentalZonelessChangeDetection } from '@angular/core';\n\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent],\n      providers: [\n        provideExperimentalZonelessChangeDetection(),\n        { provide: ComponentFixtureAutoDetect, useValue: true },\n      ],\n    }).compileComponents();\n  });\n\n  it('should detect changes', async () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    await fixture.whenStable();\n\n    expect(fixture.nativeElement.textContent).toBe('0');\n\n    fixture.componentInstance.value = 1;\n    await fixture.whenStable();\n\n    expect(fixture.nativeElement.textContent).toBe('1');\n  });\n});\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-ah4pxu?file=demo%2Fsrc%2Fapp%2Fapp.component.spec.ts,demo%2Fsrc%2Fapp%2Fapp.component.better.spec.ts\n\n### Please provide the exception or error you saw\n\n```true\nError: NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '0'. Current value: '1'. Expression location: AppComponent component. Find more at https://angular.dev/errors/NG0100\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nTo run the tests in the stackblitz:\n\n- `cd demo`\n- `npm i`\n- `ng test`\n","Url":"https://github.com/angular/angular/issues/59082","RelatedDescription":"Open issue \"ComponentFixture.detectChanges causes NG0100 in zoneless mode\" (#59082)"},{"Id":"2721380134","IsPullRequest":false,"CreatedAt":"2024-12-05T20:55:03","Actor":"alexprudhomme","Number":"59081","RawContent":null,"Title":"Angular is decoding reserved characters from fragments","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe use fragments (`#`) in the url to manage the search part of the state in our [redux based library](https://github.com/coveo/ui-kit/blob/master/packages/headless/README.md). When we encounter reserved characters in the state such as `&`, we use [encoreURIComponent](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent) to encode them. \n\nThis works fine in most contexts. In the context of Angular we are encountering a problem where angular decodes those reserved characters and changes the url with the decoded part. \n\n\nHere is an example where `%26` is wrongfully changed into `&`.\nhttps://kathleenwest.github.io/sample-angular-app/#q=This%26That\nturns into \nhttps://kathleenwest.github.io/sample-angular-app/#q=This&That\n\nThis does not happen if we use query parameters (`?`)\nhttps://kathleenwest.github.io/sample-angular-app/?q=This%26That\nstays \nhttps://kathleenwest.github.io/sample-angular-app/?q=This%26That\n\nIs this intended ? Why is angular decoding reserved characters in fragments ?\n\n### Please provide a link to a minimal reproduction of the bug\n\nAny new angular project\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59081","RelatedDescription":"Open issue \"Angular is decoding reserved characters from fragments\" (#59081)"},{"Id":"2721114649","IsPullRequest":true,"CreatedAt":"2024-12-05T18:26:19","Actor":"thePunderWoman","Number":"59080","RawContent":null,"Title":"ci: consolidate pullapprove groups","State":"open","Body":"This change was originally proposed by @alxhub. We should all be comfortable reviewing and approving any and all code in the repo. This consolidation removes the barriers for that to happen.\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59080","RelatedDescription":"Open PR \"ci: consolidate pullapprove groups\" (#59080)"},{"Id":"2721076983","IsPullRequest":true,"CreatedAt":"2024-12-05T18:04:25","Actor":"BreadInvasion","Number":"59079","RawContent":null,"Title":"Update Dependency Injection Guide Preferring inject()","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrently the Dependency Injection in-depth guide uses the constructor approach for injecting a dependency into a component, but inject() is now the preferred approach.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWhen demonstrating injection into a component, the guide now uses inject() instead of constructor().\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59079","RelatedDescription":"Open PR \"Update Dependency Injection Guide Preferring inject()\" (#59079)"},{"Id":"2721023488","IsPullRequest":true,"CreatedAt":"2024-12-05T17:35:59","Actor":"amysorto","Number":"59078","RawContent":null,"Title":"docs: add component harnesses guides","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59078","RelatedDescription":"Open PR \"docs: add component harnesses guides\" (#59078)"},{"Id":"2720914414","IsPullRequest":false,"CreatedAt":"2024-12-05T16:42:51","Actor":"wysssa","Number":"59076","RawContent":null,"Title":"Styling in Angular Elements Angular 18","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nYes\n\n### Description\n\nStyling of Angular Material ist not applied in our Web Component if we don't import the style sheet. However, if we add the style sheet it overwrites the style from other Website-Components.\n\nThis was not a problem before we updated to Angular 17 respectively 18 and it was also not necessary to import the style sheet of the Web Component in order to have the proper styling.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/wysssa/angular18-elements\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.3\nNode: 18.17.0\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.3\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... elements, forms, material, material-moment-adapter\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.3\n@angular-devkit/build-angular   18.2.3\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/fire                   18.0.1\n@schematics/angular             18.2.3\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59076","RelatedDescription":"Open issue \"Styling in Angular Elements Angular 18\" (#59076)"},{"Id":"2720906527","IsPullRequest":false,"CreatedAt":"2024-12-05T16:40:26","Actor":"NikNeutron1","Number":"59075","RawContent":null,"Title":"DOM independency","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nangular-core\n\n### Description\n\nI use Angulars Dependency Injection within a WebWorker Scope. \n\nAngular Core references Types Window, Document, HTMLElement, Elementand Node, which are only visible within Window Scope. However I can import and use { Injectable, Injector } from '@angular/core' if i hack following lines into index.d.ts.\n\n`/**\n * @license Angular v16.2.10\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscribable } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\n/*NEW LINES ADDED*/\ntype Window = any;\ntype Document = any;\ntype HTMLElement = any;\ntype Element = any;\ntype Node = any;\n\n/**\n * @description\n *\n * Represents an abstract class `T`, if applied to a concrete class it would stop being\n * instantiable.\n *\n * @publicApi\n */\nexport declare interface AbstractType<T>...\n`\n\nI will try publishing this change as \"neutron-angular-core\" and see if I can clean up my setup this way. However I love that rxjs can be used in any context and angular-core, also doesn't really depend on anything other then rxjs. So i think finding an official way to decouple angular core from DOM would be a great feature.\n\n### Proposed solution\n\nProposal 1)\nMove ɵɵresolveBody and other method from angular-core to angular-documents or something.\n\nProposal 2)\nDeclare the problematic types they same way I did, but with the constraints in mind, that the respective methods need instead of = any.\n\n### Alternatives considered\n\nMy workaround with a seperate package could be sufficient, but if the licence changes I would have a problem.","Url":"https://github.com/angular/angular/issues/59075","RelatedDescription":"Open issue \"DOM independency\" (#59075)"},{"Id":"2720889876","IsPullRequest":false,"CreatedAt":"2024-12-05T16:34:38","Actor":"mgechev","Number":"59074","RawContent":null,"Title":"Precache JavaScript in SW to speed up incremental hydration","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nTo speed up responding to user interaction when using incremental hydration we can precache the JavaScript chunks we extract at build time.\n\n### Proposed solution\n\nThe angular service worker could be a good candidate for precaching chunks. Ideally, we can create a mapping of JavaScript per page, start precaching the JavaScript for the current page with higher priority and after that precache the rest.\n\n### Alternatives considered\n\nWe can compare this approach to simply inlining link[rel=prefetch] in the page header.","Url":"https://github.com/angular/angular/issues/59074","RelatedDescription":"Open issue \"Precache JavaScript in SW to speed up incremental hydration\" (#59074)"},{"Id":"2720659715","IsPullRequest":true,"CreatedAt":"2024-12-05T15:18:29","Actor":"josephperrott","Number":"59071","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59071","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#59071)"},{"Id":"2720649479","IsPullRequest":true,"CreatedAt":"2024-12-05T15:17:32","Actor":"josephperrott","Number":"59070","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59070","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#59070)"},{"Id":"2720660140","IsPullRequest":true,"CreatedAt":"2024-12-05T15:05:14","Actor":"hawkgs","Number":"59072","RawContent":null,"Title":"docs(docs-infra): make font styles consistent in the API code ToC","State":"open","Body":"\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nSince code lines are wrapped in `<button>`-s, the native font styles overrides the parent's one which results in the font-family and font-size (esp. Safari) difference.\r\n\r\n<img width=\"774\" alt=\"Screenshot 2024-12-05 at 16 33 48\" src=\"https://github.com/user-attachments/assets/d6d581f6-6c54-4d0c-947b-d832331aaba6\">\r\n\r\n## What is the new behavior?\r\n\r\nThis is a bug fix of the described issue.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59072","RelatedDescription":"Open PR \"docs(docs-infra): make font styles consistent in the API code ToC\" (#59072)"},{"Id":"2720628572","IsPullRequest":false,"CreatedAt":"2024-12-05T14:52:18","Actor":"pkozlowski-opensource","Number":"59069","RawContent":null,"Title":"adev: getApiNavigationItems contains expensive sorting and delays application's bootstrap","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nProfiling https://angular.dev/api shows that there is (relatively) expensive `getApiNavigationItems` executed well before application bootstrap. This delays initial rendering. As far as I can tell the culprit is in the sorting of the navigation items.\n\n![Image](https://github.com/user-attachments/assets/d1ef9fe4-7864-4e66-9700-2880c22849ab)\n\nMaybe we could sort those entries at the build time? \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59069","RelatedDescription":"Open issue \"adev: getApiNavigationItems contains expensive sorting and delays application's bootstrap\" (#59069)"},{"Id":"2720537242","IsPullRequest":true,"CreatedAt":"2024-12-05T14:15:45","Actor":"hawkgs","Number":"59068","RawContent":null,"Title":"docs(docs-infra): drop tabs layout from the API reference details page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nThe contents of the API reference details page are separated by tabs (Material).\r\n\r\n## What is the new behavior?\r\n\r\nThe tabs layout is removed in favor of a single page separated by sections. This resulted in the following major changes:\r\n\r\n- Removal of Material tabs\r\n- Refactoring of the API gen pipeline rendering templates to match the new tabless layout, i.e. the `tab-*.tsx` templates had been updated to `section-*.tsx`. There are some other minor changes like removal of redundant wrapping elements, etc.\r\n- Reducing the template of the API and CLI reference details page to a single `docs-viewer` call\r\n- Clean up of the scroll services (no longer needed code)\r\n- Refactoring of the reference details styles – now they reside in a `shared-docs/styles` since they are applied to `docs-viewer`\r\n- Added handler for legacy `?tab=<TAB>` URL-s that scroll you to the section that represents the tab\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59068","RelatedDescription":"Open PR \"docs(docs-infra): drop tabs layout from the API reference details page\" (#59068)"},{"Id":"2720477957","IsPullRequest":false,"CreatedAt":"2024-12-05T13:51:03","Actor":"csisy-bt4w","Number":"59067","RawContent":null,"Title":"\"Input is required but no value is available yet\" with toObservable if the content is dynamic","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nJust updated to Angular v19 and started to experience an error. Created an example with as minimal code as possible. Unfortunately it doesn't make too much sense without additional context, but it is what it is.\n\nSo the setup is the following:\n- We have a directive that has a required input (`ModelDirective`)\n- We have a component that queries a `ModelDirective` and uses its required input (`FormFieldComponent`)\n- We also need to turn that input signal into an rxjs observable (for reasons that is not obvious by the example)\n\nThe problem is observed within the `toObservable` but only if the queried directive is created dynamically within a dynamically created component. If you run the example, you can see that the input is actually set properly - if we directly use the computed signal, its value is successfully displayed. However, once we try to read the observable's value, an error is thrown.\n\nIf, however, the directive or the owning component is available without any condition, everything works fine (there is a commented line in the example template).\n\nThis setup was working fine in Angular v18.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-vjskep?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nERROR RuntimeError: NG0950: Input is required but no value is available yet.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1800.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            18.0.3\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    19.0.2\n@schematics/angular             18.2.11\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59067","RelatedDescription":"Open issue \"\"Input is required but no value is available yet\" with toObservable if the content is dynamic\" (#59067)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2723703884","IsPullRequest":false,"CreatedAt":"2024-12-06T18:44:13","Actor":"Deku-nattsu","Number":"29077","RawContent":null,"Title":"Inconsistency between ng serve and ng build when using Node.js built-ins","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nAfter updating the angular cli to 19.0.4, i can no longer serve my project, the issue comes from the usage of pdfjs-dist that includes usage of nodejs build-ins. however i am able to build successfully which contradicts with the goal fc41f50\n\nMy expecation is a workaround this build blocking error (probably through the compiler configuration) and the consistency of errors between serving and build.\n\n### Minimal Reproduction\n\n1. create a new angular project\n2. install any library that uses nodejs build-ins in my case pdfjs-dist@4.6.82\n3. try to serve/build\n\nhere's the repo to reproduce it: https://github.com/Deku-nattsu/nodejs-build-ins-error\nstackblitz: https://stackblitz.com/~/github.com/Deku-nattsu/nodejs-build-ins-error\n\n### Exception or Error\n\n```text\nwhen serving:\n\n [ERROR] The package \"url\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5666:48:\n      5666 │       url = await import(/*webpackIgnore: true*/\"url\");\n           ╵                                                 ~~~~~\n\n✘ [ERROR] The package \"fs\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5663:51:\n      5663 │     const fs = await import(/*webpackIgnore: true*/\"fs\"),\n           ╵                                                    ~~~~\n\n✘ [ERROR] The package \"http\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5664:49:\n      5664 │       http = await import(/*webpackIgnore: true*/\"http\"),\n           ╵                                                  ~~~~~~\n\n✘ [ERROR] The package \"https\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5665:50:\n      5665 │       https = await import(/*webpackIgnore: true*/\"https\"),\n           ╵                                                   ~~~~~~~\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.4\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29077","RelatedDescription":"Open issue \"Inconsistency between ng serve and ng build when using Node.js built-ins\" (#29077)"},{"Id":"2723656620","IsPullRequest":false,"CreatedAt":"2024-12-06T18:18:44","Actor":"Char2sGu","Number":"29076","RawContent":null,"Title":"View Transition Selectors Produce Warnings","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen view transition selectors are present in `styles.scss`, the following warnings are produced.\n\n```\n▲ [WARNING] 10 rules skipped due to selector errors:\n  ::view-transition-group(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-group(root) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(landing-image) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(landing-image) -> Pseudo-elements are not supported by css-select\n```\n\n### Minimal Reproduction\n\n1. Add any view transition selectors to `styles.scss`\n2. Run `ng build`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core\n... elements, forms, google-maps, localize, material\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/build                  19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29076","RelatedDescription":"Closed issue \"View Transition Selectors Produce Warnings\" (#29076)"},{"Id":"2723210348","IsPullRequest":false,"CreatedAt":"2024-12-06T14:43:44","Actor":"viceice","Number":"29075","RawContent":null,"Title":"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.13\n\n### Description\n\nThe `@angular/build` is passing all node args to the `Worker` via `piscina` which is invalid. Angular should filter some args like `--use-openssl-ca`\n\nhttps://github.com/angular/angular-cli/blob/120f088778fa0023291781afb5199933d4ac69f7/packages/angular/build/src/tools/esbuild/javascript-transformer.ts#L63\n\n### Minimal Reproduction\n\ncreate a simple shell wrapper for node and add to path, then run nx build for an esbuild enabled project.\n\n```sh\n#!/bin/sh\n\nnode --use-openssl-ca \"$@\"\n```\n\n### Exception or Error\n\n```text\n15:01:04  ✘ [ERROR] Initiated Worker with invalid execArgv flags: --use-openssl-ca [plugin angular-compiler]\n15:01:04  \n15:01:04      node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:23:\n15:01:04        130 │         const worker = new node_worker_threads_1.Worker((0, node_...\n15:01:04            ╵                        ^\n15:01:04  \n15:01:04      at new Worker (node:internal/worker:222:13)\n15:01:04      at ThreadPool._addNewWorker (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:24)\n15:01:04      at ThreadPool._ensureMinimumWorkers (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:125:18)\n15:01:04      at new ThreadPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:116:14)\n15:01:04      at new Piscina (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:566:53)\n15:01:04      at new WorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/utils/worker-pool.js:40:9)\n15:01:04      at #ensureWorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:42:30)\n15:01:04      at JavaScriptTransformer.transformFile (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:80:51)\n15:01:04      at async /var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:381:38\n15:01:04      at async requestCallbacks.on-load (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/esbuild@0.24.0/node_modules/esbuild/lib/main.js:1276:22)\n15:01:04  \n15:01:04    This error came from the \"onLoad\" callback registered here:\n15:01:04  \n15:01:04      node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:371:18:\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: pnpm 9.14.4\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nI'm using nx but it shouldn't matter as the mentioned code uses `process.execArgv` directly","Url":"https://github.com/angular/angular-cli/issues/29075","RelatedDescription":"Closed issue \"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler\" (#29075)"},{"Id":"2722159043","IsPullRequest":true,"CreatedAt":"2024-12-06T13:49:30","Actor":"angular-robot","Number":"29071","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0814af9` -> `9c8bf57` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `92f078f` -> `9e15b9d` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1775861` -> `84f9bf8` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `d07917b` -> `b9b1686` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `ec5244f` -> `1922bc7` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c0fc889` -> `c86076f` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `db0436c` -> `cdccd3e` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `383f66b` -> `17be159` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `4f79d46` -> `b870cc6` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `8824a4d` -> `1cd7565` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `590855b` -> `0a80b38` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `981b6a6` -> `5e1ba41` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `a2a65fd` -> `233ef1c` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `d94b352` -> `3d6e0e1` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `ccf3d50` -> `fde3dc3` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `75eda80` -> `e9f6144` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29071","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29071)"},{"Id":"2723002499","IsPullRequest":true,"CreatedAt":"2024-12-06T12:57:04","Actor":"alan-agius4","Number":"29073","RawContent":null,"Title":"fix(@angular/ssr):  include `Content-Language` header when locale is set","State":"open","Body":"The server now includes the `Content-Language` HTTP header in responses whenever a locale is explicitly set.\r\n","Url":"https://github.com/angular/angular-cli/pull/29073","RelatedDescription":"Open PR \"fix(@angular/ssr):  include `Content-Language` header when locale is set\" (#29073)"},{"Id":"2722159427","IsPullRequest":true,"CreatedAt":"2024-12-06T09:14:31","Actor":"angular-robot","Number":"29072","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | minor | `v4.1.2` -> `v4.2.0` |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | dependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | devDependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.1` -> `4.21.2`](https://renovatebot.com/diffs/npm/express/4.21.1/4.21.2) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | dependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | devDependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [webpack](https://redirect.github.com/webpack/webpack) | devDependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n| [webpack](https://redirect.github.com/webpack/webpack) | dependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.2.0`](https://redirect.github.com/actions/cache/releases/tag/v4.2.0)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.2...v4.2.0)\n\n##### ⚠️ Important Changes\n\nThe cache backend service has been rewritten from the ground up for improved performance and reliability. [actions/cache](https://redirect.github.com/actions/cache) now integrates with the new cache service (v2) APIs.\n\nThe new service will gradually roll out as of **February 1st, 2025**. The legacy service will also be sunset on the same date. Changes in these release are **fully backward compatible**.\n\n**We are deprecating some versions of this action**. We recommend upgrading to version `v4` or `v3` as soon as possible before **February 1st, 2025.** (Upgrade instructions below).\n\nIf you are using pinned SHAs, please use the SHAs of versions `v4.2.0` or `v3.4.0`\n\nIf you do not upgrade, all workflow runs using any of the deprecated [actions/cache](https://redirect.github.com/actions/cache) will fail.\n\nUpgrading to the recommended versions will not break your workflows.\n\nRead more about the change & access the migration guide: [reference to the announcement](https://redirect.github.com/actions/cache/discussions/1510).\n\n##### Minor changes\n\nMinor and patch version updates for these dependencies:\n\n-   [@&#8203;actions/core](https://redirect.github.com/actions/core): `1.11.1`\n-   [@&#8203;actions/io](https://redirect.github.com/actions/io): `1.1.3`\n-   [@&#8203;vercel/ncc](https://redirect.github.com/vercel/ncc): `0.38.3`\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4...v4.2.0\n\n</details>\n\n<details>\n<summary>danielroe/beasties (beasties)</summary>\n\n### [`v0.2.0`](https://redirect.github.com/danielroe/beasties/releases/tag/v0.2.0)\n\n[Compare Source](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n[compare changes](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n##### 🔥 Performance\n\n-   Avoid repetitive string concatenation in favor of .push() for better performance ([#&#8203;48](https://redirect.github.com/danielroe/beasties/pull/48))\n-   Cache selector query ([#&#8203;49](https://redirect.github.com/danielroe/beasties/pull/49))\n-   Cache selector normalization ([#&#8203;47](https://redirect.github.com/danielroe/beasties/pull/47))\n\n##### 🩹 Fixes\n\n-   **beasties-webpack-plugin:** Only pass filename to readFile ([#&#8203;30](https://redirect.github.com/danielroe/beasties/pull/30))\n-   Update preload option with swap-high ([#&#8203;46](https://redirect.github.com/danielroe/beasties/pull/46))\n-   Improve handling of pseudo classes and elements ([#&#8203;58](https://redirect.github.com/danielroe/beasties/pull/58))\n\n##### 💅 Refactors\n\n-   Add missing await + remove redundant async keywords ([#&#8203;25](https://redirect.github.com/danielroe/beasties/pull/25))\n\n##### 📖 Documentation\n\n-   Remove reference to includeSelectors ([dbb12f8](https://redirect.github.com/danielroe/beasties/commit/dbb12f8))\n\n##### 🏡 Chore\n\n-   Run publish command recursively ([46c0329](https://redirect.github.com/danielroe/beasties/commit/46c0329))\n-   Set log level to error in benchmarks to reduce log noise ([#&#8203;26](https://redirect.github.com/danielroe/beasties/pull/26))\n-   Update tests to work on windows ([#&#8203;35](https://redirect.github.com/danielroe/beasties/pull/35))\n-   Bump dependencies ([b8d4c7e](https://redirect.github.com/danielroe/beasties/commit/b8d4c7e))\n-   Add engines.node and tidy workspace deps ([bff7d61](https://redirect.github.com/danielroe/beasties/commit/bff7d61))\n\n##### ❤️ Contributors\n\n-   Daniel Roe ([@&#8203;danielroe](https://redirect.github.com/danielroe))\n-   Alan Agius ([@&#8203;alan-agius4](https://redirect.github.com/alan-agius4))\n-   Ivan Demchuk ([@&#8203;Demivan](https://redirect.github.com/Demivan))\n-   ([@&#8203;xpdota](https://redirect.github.com/xpdota))\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.2`](https://redirect.github.com/expressjs/express/releases/tag/4.21.2)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.1...4.21.2)\n\n#### What's Changed\n\n-   Add funding field (v4) by [@&#8203;bjohansebas](https://redirect.github.com/bjohansebas) in [https://github.com/expressjs/express/pull/6065](https://redirect.github.com/expressjs/express/pull/6065)\n-   deps: path-to-regexp@0.1.11 by [@&#8203;blakeembrey](https://redirect.github.com/blakeembrey) in [https://github.com/expressjs/express/pull/5956](https://redirect.github.com/expressjs/express/pull/5956)\n-   deps: bump path-to-regexp@0.1.12 by [@&#8203;jonchurch](https://redirect.github.com/jonchurch) in [https://github.com/expressjs/express/pull/6209](https://redirect.github.com/expressjs/express/pull/6209)\n-   Release: 4.21.2 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6094](https://redirect.github.com/expressjs/express/pull/6094)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.1...4.21.2\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.37.0`](https://redirect.github.com/terser/terser/blob/HEAD/CHANGELOG.md#v5370)\n\n[Compare Source](https://redirect.github.com/terser/terser/compare/v5.36.0...v5.37.0)\n\n-   Reserved object properties from chrome extensions (domprops)\n-   Fix semicolon insertion between a class property without a semicolon `a` and a computed class property `[\"prop\"]`\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.3`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small603-2024-12-05-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.2...v6.0.3)\n\n-   fix: handle postcss load unhandled rejections ([#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)) ([d5fb653](https://redirect.github.com/vitejs/vite/commit/d5fb653c15903ccf84a093f212da86f0327a9a6f)), closes [#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)\n-   fix: make handleInvoke interface compatible with invoke ([#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)) ([a1dd396](https://redirect.github.com/vitejs/vite/commit/a1dd396da856401a12c921d0cd2c4e97cb63f1b5)), closes [#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)\n-   fix: make result interfaces for `ModuleRunnerTransport#invoke` more explicit ([#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)) ([a75fc31](https://redirect.github.com/vitejs/vite/commit/a75fc3193d5e8d8756dfb3a046873e9c222bb6c8)), closes [#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)\n-   fix: merge `environments.ssr.resolve` with root `ssr` config ([#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)) ([3104331](https://redirect.github.com/vitejs/vite/commit/310433106e1e8a0c39dc397e3eace8a71a2416c2)), closes [#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)\n-   fix: no permission to create vite config file ([#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)) ([ff47778](https://redirect.github.com/vitejs/vite/commit/ff47778004d609dbeef7f192783e6f253dd66237)), closes [#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)\n-   fix: remove CSS import in CJS correctly in some cases ([#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)) ([690a36f](https://redirect.github.com/vitejs/vite/commit/690a36ffdb7d6f6568f35a304b4904e7aa475f17)), closes [#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)\n-   fix(config): bundle files referenced with imports field ([#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)) ([2b5926a](https://redirect.github.com/vitejs/vite/commit/2b5926a0e79ce47d22536d38eed2629d326caca0)), closes [#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)\n-   fix(config): make stacktrace path correct when sourcemap is enabled ([#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)) ([20fdf21](https://redirect.github.com/vitejs/vite/commit/20fdf210ee0ac0824b2db74876527cb7f378a9e8)), closes [#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)\n-   fix(css): rewrite url when image-set and url exist at the same time ([#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)) ([d59efd8](https://redirect.github.com/vitejs/vite/commit/d59efd8dfd1c5bf2e7c45c7cdb1c0abc2a05ba02)), closes [#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)\n-   fix(deps): update all non-major dependencies ([#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)) ([5c02236](https://redirect.github.com/vitejs/vite/commit/5c0223636fa277d5daeb4d93c3f32d9f3cd69fc5)), closes [#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)\n-   fix(html): allow unexpected question mark in tag name ([#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)) ([1b54e50](https://redirect.github.com/vitejs/vite/commit/1b54e506a44420d0c8a9e000cf45b1c4f5e33026)), closes [#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)\n-   fix(module-runner): decode uri for file url passed to import ([#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)) ([88e49aa](https://redirect.github.com/vitejs/vite/commit/88e49aa0418cb3f6b579b744ba59daeda68432f3)), closes [#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)\n-   refactor: fix logic errors found by no-unnecessary-condition rule ([#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)) ([ea802f8](https://redirect.github.com/vitejs/vite/commit/ea802f8f8bcf3771a35c1eaf687378613fbabb24)), closes [#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)\n-   chore: fix duplicate attributes issue number in comment ([#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)) ([ffee618](https://redirect.github.com/vitejs/vite/commit/ffee61893cfe9f2b0db4aecf9ddb62ca79c80458)), closes [#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n### [`v5.97.1`](https://redirect.github.com/webpack/webpack/releases/tag/v5.97.1)\n\n[Compare Source](https://redirect.github.com/webpack/webpack/compare/v5.97.0...v5.97.1)\n\n##### Bug Fixes\n\n-   Performance regression\n-   Sub define key should't be renamed when it's a defined variable\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29072","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29072)"},{"Id":"2721541487","IsPullRequest":false,"CreatedAt":"2024-12-06T09:14:07","Actor":"erikgiovani","Number":"29070","RawContent":null,"Title":"Improve the default angular template and I want to add it to the cli.","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nI think the current design can be improved, This is how it currently looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/29bbe795-404a-4215-ac2b-1788d15c268f)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/fe5718a4-4adc-4bce-be85-8d5f1ad8b613)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/21ae9a7a-ade2-47c3-b5f7-fb5d878ac6e6)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/6671b1fc-6ea2-4680-adeb-06c4daca09e4)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/3876c386-833c-4be6-b42c-4fb4f2fe24b9)\n\n\n\n### Describe the solution you'd like\n\nI made a design with 27 lines of code less than the current one and it still uses svg, This is how it looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/76af5e77-c238-4323-8017-1120ccf21a57)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/a98ec057-34da-4c0f-8356-322eb2eecf0d)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/e08bee47-ab86-46a0-bd57-72161e6822de)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/a0ec1753-6b78-4641-a0bd-1f5cee402aae)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/83a806e1-f9ca-4875-b999-02cdb7222202)\n\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29070","RelatedDescription":"Closed issue \"Improve the default angular template and I want to add it to the cli.\" (#29070)"},{"Id":"2720299228","IsPullRequest":true,"CreatedAt":"2024-12-06T07:24:12","Actor":"alan-agius4","Number":"29058","RawContent":null,"Title":"test(@angular/ssr): refine spec setup to resolve component ID collision warnings","State":"closed","Body":"\r\n\r\nThis update addresses excessive log noise caused by the following warning: `NG0912: Component ID generation collision detected. Components 'AppComponent' and 'AppComponent' with selector 'app-root' generated the same component ID. To fix this, you can change the selector of one of those components or add an extra host attribute to force a different ID. Find more at https://angular.dev/errors/NG0912`.\r\n","Url":"https://github.com/angular/angular-cli/pull/29058","RelatedDescription":"Closed or merged PR \"test(@angular/ssr): refine spec setup to resolve component ID collision warnings\" (#29058)"},{"Id":"2723082183","IsPullRequest":false,"CreatedAt":"2024-12-05T21:37:26","Actor":"naveedahmed1","Number":"29074","RawContent":null,"Title":"Enhance renderMode Configuration for Angular Router","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe introduction of the `renderMode` option in Angular Router is a fantastic feature, allowing developers to configure whether a route should be server-rendered, pre-rendered, or client-side rendered. However, the current implementation requires adding a separate configuration in the application's providers list, specifying which routes require SSR.\n\n```\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: '**',\n    renderMode: RenderMode.Server\n  }\n];\n```\n\n`provideServerRoutesConfig(serverRoutes)`\n\nThis approach, while functional, introduces redundancy and makes the configuration less intuitive.\n\n**Proposal**:\n\nAllow specifying the renderMode directly within the route definition itself. This would streamline the configuration, making it more straightforward and easier to understand. Developers could define the rendering mode for each route without needing a separate list in the providers.\n\n**Example**:\n\n```\nimport { Routes, RenderMode } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    renderMode: RenderMode.Server\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n    renderMode: RenderMode.Prerender\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    renderMode: RenderMode.Client // Default\n  }\n];\n```\n\n**Benefits**:\n\n- Simplified Configuration: No need for a separate provider configuration. The renderMode is specified where routes are defined.\n- Better Readability: The rendering mode is directly associated with the route, making it easier to understand at a glance.\n- Reduced Redundancy: Avoids the need to maintain a separate list of server-rendered routes, reducing the risk of mismatch or errors.\n- Backward Compatibility:\n\nIf the renderMode property is not specified in the route, it would default to RenderMode.Client, ensuring backward compatibility.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29074","RelatedDescription":"Open issue \"Enhance renderMode Configuration for Angular Router\" (#29074)"},{"Id":"2720910532","IsPullRequest":true,"CreatedAt":"2024-12-05T19:24:30","Actor":"jkrems","Number":"29066","RawContent":null,"Title":"fix(@angular-devkit/build-angular): webpack config transform for karma","State":"closed","Body":"This PR is 10% passing an argument that got dropped during refactoring and 90% finding a way to test the behavior.\r\n\r\nI'm making up a new concept for the harness (`additionalExecuteArguments`) which is pretty ugly but I couldn't think of a cleaner way of doing it. There might be a way to capture rest arguments of the `execute` function signature inside of the harness to make the cast go away. But I'm not 100% convinced that the more complicated types leaking throughout the harness code would really be worth it for this edge case.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/29003","Url":"https://github.com/angular/angular-cli/pull/29066","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): webpack config transform for karma\" (#29066)"},{"Id":"2721166801","IsPullRequest":true,"CreatedAt":"2024-12-05T19:18:35","Actor":"alan-agius4","Number":"29069","RawContent":null,"Title":"refactor(@angular/build): move `getDepOptimizationConfig` into utils file","State":"closed","Body":"\r\nReduce the amount of code in vite-server.ts\r\n","Url":"https://github.com/angular/angular-cli/pull/29069","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): move `getDepOptimizationConfig` into utils file\" (#29069)"},{"Id":"2721034857","IsPullRequest":true,"CreatedAt":"2024-12-05T17:48:55","Actor":"alan-agius4","Number":"29068","RawContent":null,"Title":"docs: release notes for the v19.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29068","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.4 release\" (#29068)"},{"Id":"2721029076","IsPullRequest":true,"CreatedAt":"2024-12-05T17:41:03","Actor":"alan-agius4","Number":"29067","RawContent":null,"Title":"Bump version to \"v19.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29067","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.4\" with changelog.\" (#29067)"},{"Id":"2720884918","IsPullRequest":true,"CreatedAt":"2024-12-05T17:30:57","Actor":"alan-agius4","Number":"29065","RawContent":null,"Title":"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`","State":"closed","Body":"\r\n\r\nThis commit ensures consistent behavior between `ng build` and `ng serve`. Previously, `ng serve` did not display an error message when Node.js built-in modules were included in browser bundles. By default, Vite replaces Node.js built-ins with empty modules, which can lead to unexpected runtime issues. This update addresses the problem by surfacing clear error messages, providing better developer feedback and alignment between the two commands.\r\n\r\nCloses: #27425\r\n(cherry picked from commit 06f478bc18d3e0daa8902d0fef94e55a5d052348)\r\n","Url":"https://github.com/angular/angular-cli/pull/29065","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`\" (#29065)"},{"Id":"2720499429","IsPullRequest":true,"CreatedAt":"2024-12-05T16:44:44","Actor":"alan-agius4","Number":"29059","RawContent":null,"Title":"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`","State":"closed","Body":"\r\nThis commit ensures consistent behavior between `ng build` and `ng serve`. Previously, `ng serve` did not display an error message when Node.js built-in modules were included in browser bundles. By default, Vite replaces Node.js built-ins with empty modules, which can lead to unexpected runtime issues. This update addresses the problem by surfacing clear error messages, providing better developer feedback and alignment between the two commands.\r\n\r\nCloses: #27425","Url":"https://github.com/angular/angular-cli/pull/29059","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`\" (#29059)"},{"Id":"2720293960","IsPullRequest":true,"CreatedAt":"2024-12-05T15:31:25","Actor":"clydin","Number":"29057","RawContent":null,"Title":"perf(@angular/build): reuse TS package.json cache when rebuilding","State":"closed","Body":"TypeScript 5.6 and higher added functionality that will search for a `package.json` file for source files that are part of the program (e.g., `.d.ts`) and within a node modules directory. This can be an expensive tasks especially considering the large amount of `.d.ts` files within packages. TypeScript supports using a cache of known `package.json` files to improve the performance of this task. The Angular CLI will now provide and reuse this cache across rebuilds during watch mode. This includes the use of `ng serve`.\r\n\r\nThe performance difference is most apparent for the Angular template diagnostic step of the build. Internally the Angular compiler creates a new template typechecking program which causes the `package.json` search process to occur. By leveraging the cache, this process becomes a series of cache hits. In the event that files are modified within the node modules directory, the cache is invalidated and the following rebuild may be longer as a result.\r\n\r\n(cherry picked from commit 75998ebabb041f60aab40bf5a11979e8f3615537)","Url":"https://github.com/angular/angular-cli/pull/29057","RelatedDescription":"Closed or merged PR \"perf(@angular/build): reuse TS package.json cache when rebuilding\" (#29057)"},{"Id":"2720241424","IsPullRequest":true,"CreatedAt":"2024-12-05T15:21:37","Actor":"alan-agius4","Number":"29056","RawContent":null,"Title":"docs(@angular/ssr): remove duplicate `@return` comment","State":"closed","Body":"Remove duplicate `@return` tsdoc comment.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29056","RelatedDescription":"Closed or merged PR \"docs(@angular/ssr): remove duplicate `@return` comment\" (#29056)"},{"Id":"2720674973","IsPullRequest":true,"CreatedAt":"2024-12-05T15:21:13","Actor":"alan-agius4","Number":"29064","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29064","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29064)"},{"Id":"2720663050","IsPullRequest":true,"CreatedAt":"2024-12-05T15:20:52","Actor":"alan-agius4","Number":"29062","RawContent":null,"Title":"ci: update dev-infra sha to use latest Bazel keys","State":"closed","Body":"This commit consumes the latest version of dev-infra to fix CI.\r\n\r\nSee: angular/dev-infra@40b2cbd\r\n","Url":"https://github.com/angular/angular-cli/pull/29062","RelatedDescription":"Closed or merged PR \"ci: update dev-infra sha to use latest Bazel keys\" (#29062)"},{"Id":"2720665449","IsPullRequest":true,"CreatedAt":"2024-12-05T15:13:14","Actor":"josephperrott","Number":"29063","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29063","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29063)"},{"Id":"2720647849","IsPullRequest":true,"CreatedAt":"2024-12-05T15:12:59","Actor":"josephperrott","Number":"29060","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29060","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29060)"},{"Id":"2720658740","IsPullRequest":true,"CreatedAt":"2024-12-05T15:08:55","Actor":"alan-agius4","Number":"29061","RawContent":null,"Title":"ci: update dev-infra sha to use latest Bazel keys","State":"closed","Body":"This commit consumes the latest version of dev-infra to fix CI.\r\n\r\nSee: https://github.com/angular/dev-infra/commit/40b2cbdbcc40f36f125d721c4e8decd3bb607ea4\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29061","RelatedDescription":"Closed or merged PR \"ci: update dev-infra sha to use latest Bazel keys\" (#29061)"},{"Id":"2718817524","IsPullRequest":true,"CreatedAt":"2024-12-05T08:40:09","Actor":"clydin","Number":"29053","RawContent":null,"Title":"perf(@angular/build): reuse TS package.json cache when rebuilding","State":"closed","Body":"TypeScript 5.6 and higher added functionality that will search for a `package.json` file for source files that are part of the program (e.g., `.d.ts`) and within a node modules directory. This can be an expensive task especially considering the large amount of `.d.ts` files within packages. TypeScript supports using a cache of known `package.json` files to improve the performance of this task. The Angular CLI will now provide and reuse this cache across rebuilds during watch mode. This includes the use of `ng serve`.\r\n\r\nThe performance difference is most apparent for the Angular template diagnostic step of the build. Internally the Angular compiler creates a new template typechecking program which causes the `package.json` search process to occur. By leveraging the cache, this process becomes a series of cache hits. In the event that files are modified within the node modules directory, the cache is invalidated and the following rebuild may be longer as a result.\r\n\r\nPrevious:\r\n```\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.040498750s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.000079378s [count: 265; avg: 0.000000300s; min: 0.000000166s; max: 0.000003042s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.000095121s [count: 265; avg: 0.000000359s; min: 0.000000250s; max: 0.000004500s]\r\nDURATION[NG_DIAGNOSTICS_TEMPLATE]: 0.040161625s [count: 1; avg: 0.040161625s; min: 0.040161625s; max: 0.040161625s]\r\n```\r\n\r\nNow:\r\n```\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.007495333s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.000082327s [count: 265; avg: 0.000000311s; min: 0.000000208s; max: 0.000002750s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.000109290s [count: 265; avg: 0.000000412s; min: 0.000000291s; max: 0.000003875s]\r\nDURATION[NG_DIAGNOSTICS_TEMPLATE]: 0.007141042s [count: 1; avg: 0.007141042s; min: 0.007141042s; max: 0.007141042s]\r\n```","Url":"https://github.com/angular/angular-cli/pull/29053","RelatedDescription":"Closed or merged PR \"perf(@angular/build): reuse TS package.json cache when rebuilding\" (#29053)"},{"Id":"2718563625","IsPullRequest":true,"CreatedAt":"2024-12-05T06:12:04","Actor":"alan-agius4","Number":"29052","RawContent":null,"Title":"build: pin `@angular/` deps","State":"closed","Body":"This would enable renovate to auto update when there is a new version.\r\n","Url":"https://github.com/angular/angular-cli/pull/29052","RelatedDescription":"Closed or merged PR \"build: pin `@angular/` deps\" (#29052)"},{"Id":"2718973810","IsPullRequest":true,"CreatedAt":"2024-12-04T23:18:48","Actor":"aaronshim","Number":"29055","RawContent":null,"Title":"fix(@angular/build): Fixing auto-csp edge cases","State":"open","Body":"- <script> is the last tag before </head> close\r\n- .appendChild is called before </head> (because document.body is undefined then)\r\n- <script> tags with a src attribute and no specified type attribute should not write <script type=\"undefined\" ...>\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nAuto-CSP creates non-loading loader scripts\r\n\r\nIssue Number: #29054 \r\n\r\n## What is the new behavior?\r\n\r\nAuto-CSP generates loading loader scripts\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29055","RelatedDescription":"Open PR \"fix(@angular/build): Fixing auto-csp edge cases\" (#29055)"},{"Id":"2718970766","IsPullRequest":false,"CreatedAt":"2024-12-04T23:15:44","Actor":"aaronshim","Number":"29054","RawContent":null,"Title":"Auto-CSP generates invalid loader scripts for some <script> tags","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAuto-CSP relies on rewriting scripts of the form `<script src=\"...\"></script>` into an inline loader script that will dynamically re-create these tags and add them to the DOM.\n\nThere are some `<script src=\"...\">` configurations that generate inline loader scripts that will not run on the transformed page, such as\n\n- Having your `<script src=\"...\">` tag appear in the `<head>` rather than the `<body>` of the document.\n- Having your `<script src=\"...\">` tag interpreted as something that will create a `type=\"undefined\"` attribute on the generated node added to the DOM\n\n### Minimal Reproduction\n\nThe `index.html` should have the following:\n\n```\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <base href=\"/\">\n  <script src='script1.js'></script>\n</head>\n<body>\n  <app-root></app-root>  \n  <script src='script2.js'></script>\n  </body>\n</html>\n```\n\n### Exception or Error\n\n```text\n`script1.js` and `script2.js` do not run.\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.3\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: linux x64\n\nAngular: \n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.3 (cli-only)\n@angular-devkit/core         19.0.3 (cli-only)\n@angular-devkit/schematics   19.0.3 (cli-only)\n@schematics/angular          19.0.3 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29054","RelatedDescription":"Open issue \"Auto-CSP generates invalid loader scripts for some <script> tags\" (#29054)"},{"Id":"2718479806","IsPullRequest":true,"CreatedAt":"2024-12-04T18:36:53","Actor":"alan-agius4","Number":"29051","RawContent":null,"Title":"test: disable colors in vite tests","State":"closed","Body":"This forcefully removes the colors.\r\n","Url":"https://github.com/angular/angular-cli/pull/29051","RelatedDescription":"Closed or merged PR \"test: disable colors in vite tests\" (#29051)"},{"Id":"2718444312","IsPullRequest":true,"CreatedAt":"2024-12-04T18:12:02","Actor":"alan-agius4","Number":"29050","RawContent":null,"Title":"test: Introduce delay for file write to minimize flakiness","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29050","RelatedDescription":"Closed or merged PR \"test: Introduce delay for file write to minimize flakiness\" (#29050)"},{"Id":"2718031059","IsPullRequest":true,"CreatedAt":"2024-12-04T15:09:12","Actor":"alan-agius4","Number":"29048","RawContent":null,"Title":"Bump version to \"v19.1.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29048","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.0\" with changelog.\" (#29048)"},{"Id":"2718020221","IsPullRequest":true,"CreatedAt":"2024-12-04T15:03:24","Actor":"alan-agius4","Number":"29047","RawContent":null,"Title":"Bump version to \"v19.1.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29047","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.0\" with changelog.\" (#29047)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2723181191","IsPullRequest":false,"CreatedAt":"2024-12-06T14:22:46","Actor":"russelporosky","Number":"30143","RawContent":null,"Title":"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is simply a quality of life improvement request.\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\nI've overridden `on-surface` and `surface` in [the recommended manner](https://material.angular.io/guide/theming#system-tokens), but the IDE (IntelliJ in this screenshot) won't pick those modifications up.\n\nThe rendered page in the browser shows the correct colour, this is strictly an issue within the IDE.\n\nThe concern is that deeper into the project, when a developer is using Material CSS variables, the colour hints will not match what they are expecting (and needing) which will cause confusion and potentially result in additional variables being created by the developer that aren't actually needed, just so the IDE hints match their expectations.\n\n### Reproduction\n\nSteps to reproduce:\n1. add Material to an Angular project\n2. override a theme variable such as `surface`\n3. use the matching CSS property in a rule (`--mat-sys-on-surface` in this example)\n4. observe that the IDE colour hint does not match the overridden value\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\n\n### Expected Behavior\n\nThe colour hints in the sidebar should show the overridden colour(s) instead of the defaults.\n\n### Actual Behavior\n\nWhat I see in the sidebar are the defaults for the current theme.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n- IDE: IntelliJ IDEA 2024.3 (Ultimate Edition)","Url":"https://github.com/angular/components/issues/30143","RelatedDescription":"Open issue \"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints\" (#30143)"},{"Id":"2723064933","IsPullRequest":true,"CreatedAt":"2024-12-06T13:28:15","Actor":"crisbeto","Number":"30142","RawContent":null,"Title":"fix(material/select): add opt-in input that allows selection of nullable options","State":"open","Body":"By default `mat-select` treats options with nullable values as \"reset options\", meaning that they can't be selected, but rather they clear the select's value. This behavior is based on how the native `select` works, however in some cases it's not desirable. These changes add an input that users can use to opt out of the default behavior.\r\n\r\nFixes #25120.","Url":"https://github.com/angular/components/pull/30142","RelatedDescription":"Open PR \"fix(material/select): add opt-in input that allows selection of nullable options\" (#30142)"},{"Id":"2723035715","IsPullRequest":false,"CreatedAt":"2024-12-06T13:14:07","Actor":"jfduhamel","Number":"30141","RawContent":null,"Title":"M3 material custom theme (doc+ howto)","State":"open","Body":"### Documentation Feedback\n\nhello angular / material / m3,\nwhere is the official doc of material 3 for angular material ?\nit's a nightmare to construct my CUSTOM scss theme since i moved from angular 17 to 19\nprimary secondary tertiary neutral ...\ni only need a primary why it seems i need to give the others secondary .....\nnowhere i can find a real example !\nhttps://material.angular.io/ its only about components\n\noh yeah using a prebuilt theme no souci but the other way...\n\nam i the only one in this situation ?\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/30141","RelatedDescription":"Open issue \"M3 material custom theme (doc+ howto)\" (#30141)"},{"Id":"2722983802","IsPullRequest":false,"CreatedAt":"2024-12-06T12:48:51","Actor":"horesse","Number":"30140","RawContent":null,"Title":"bug(Timepicker): Luxon provider does not display date if it exists","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf there is an initial value in formControl, then when using provideLuxonDateAdapter(), the date will not be displayed when the page is loaded, but if we select the time, it will be displayed correctly.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/8xbgfc-eqfhl1?file=src%2Fexample%2Ftimepicker-forms-example.ts\nSteps to reproduce:\n1. Open Page\n2. Check value in formControl\n3. Timepicker input is empty\n\n\n### Expected Behavior\n\nTimepicker value is empty when component is initialized even if formControl has value\n\n### Actual Behavior\n\nDisplay time\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30140","RelatedDescription":"Open issue \"bug(Timepicker): Luxon provider does not display date if it exists\" (#30140)"},{"Id":"2722982455","IsPullRequest":false,"CreatedAt":"2024-12-06T12:48:06","Actor":"SeraphCoding","Number":"30139","RawContent":null,"Title":"bug(Menu): fix menu panels not closing when no trigger is present","State":"open","Body":"### Is this a regression?\nNo.\n\n### The previous version in which this bug was not present was\n\nUnknown.\n\n### Description\n\nMenuPanels cannot be closed when they do not have an active trigger set.\nA scenario where unsetting the trigger during runtime may be wanted is when the button is meant to open a context menu or a bottom sheet depending on the size of the viewport and so needs to switch between a click handler (that opens a bottom sheet) or a matMenu Trigger that opens a menu panel during runtime. An example application has been setup for such a scenario (see StackBlitz Link)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ku1ehf?file=src%2Fexample%2Fmenu-icons-example.html\nSteps to reproduce:\n1. Downsize the window width until the button text says \"has Trigger\" (less than 600px)\n2. Hit the button\n3. The MatMenuPanel should be open now showing some dummy options - do not click anything\n4. Now upsize the window width until the button says \"no Trigger\" - ensure that the menu panel remains open during that time\n5. Try clicking a menu option or anywhere in the app window that would normally close the MatMenuPanel\n\n### Expected Behavior\n\nThe menu panel closes when an option is selected or anywhere within the app window outside the menu panel is clicked.\n\n### Actual Behavior\n\nWhen the trigger to open the menu is lost - the menu panel can no longer close until it regains a trigger.\n\n### Environment\n\n- Angular: 19.0.1\n- CDK/Material: 19.0.1\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Unrelated.","Url":"https://github.com/angular/components/issues/30139","RelatedDescription":"Open issue \"bug(Menu): fix menu panels not closing when no trigger is present\" (#30139)"},{"Id":"2722566709","IsPullRequest":true,"CreatedAt":"2024-12-06T09:50:40","Actor":"crisbeto","Number":"30138","RawContent":null,"Title":"fix(material/paginator): ignore clicks on disabled buttons","State":"open","Body":"The changes in #29379 made the paginator interactive while they're disabled in order to improve accessibility, but as a result it also allows for the buttons to navigate while they're disabled.\r\n\r\nThese changes add internal checks to ensure that the buttons don't navigate while disabled. I've also cleaned up the logic a bit so we don't have four different places that deal with navigations.\r\n\r\nFixes #30124.","Url":"https://github.com/angular/components/pull/30138","RelatedDescription":"Open PR \"fix(material/paginator): ignore clicks on disabled buttons\" (#30138)"},{"Id":"2722467646","IsPullRequest":true,"CreatedAt":"2024-12-06T09:02:52","Actor":"crisbeto","Number":"30137","RawContent":null,"Title":"fix(material/timepicker): disable toggle if timepicker is disabled","State":"open","Body":"Fixes that the timepicker toggle wasn't considered as disabled automatically when the timepicker is disabled.\r\n\r\nFixes #30134.","Url":"https://github.com/angular/components/pull/30137","RelatedDescription":"Open PR \"fix(material/timepicker): disable toggle if timepicker is disabled\" (#30137)"},{"Id":"2721329785","IsPullRequest":false,"CreatedAt":"2024-12-06T06:00:10","Actor":"horesse","Number":"30135","RawContent":null,"Title":"bug(Timepicker): With changing the time, date is changing too","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn FormControl, when the time changes, the date also changes\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/czbajk-h7xm7v?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.ts\nSteps to reproduce:\n1. Add FormControl\n2. Add DatePicker and TimePicker\n3. Change Date\n4. Change Time\n5. See formControl value and value in DatePicker\n\n\n### Expected Behavior\n\nChange only time in value\n\n### Actual Behavior\n\nChange date\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome \n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30135","RelatedDescription":"Closed issue \"bug(Timepicker): With changing the time, date is changing too\" (#30135)"},{"Id":"2721519823","IsPullRequest":true,"CreatedAt":"2024-12-05T21:58:49","Actor":"kseamon","Number":"30136","RawContent":null,"Title":"feat(cdk-experimental/column-resize): Support column size persistance…","State":"open","Body":"… hooks","Url":"https://github.com/angular/components/pull/30136","RelatedDescription":"Open PR \"feat(cdk-experimental/column-resize): Support column size persistance…\" (#30136)"},{"Id":"2721322153","IsPullRequest":false,"CreatedAt":"2024-12-05T20:25:58","Actor":"horesse","Number":"30134","RawContent":null,"Title":"bug(Timepicker): Disabled not working in FormControl","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe disabled property does not work correctly in timepicker. It blocks the time selection, but the selection from the menu is available\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/czbajk?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.html\nSteps to reproduce: \n1. Use FormControl\n2. Disable input\n3. U can change time\n\n\n### Expected Behavior\n\nLock time selector\n\n### Actual Behavior\n\nTime selection is available\n\n### Environment\n\n- Angular: 19.0.0 - 19.0.2\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30134","RelatedDescription":"Open issue \"bug(Timepicker): Disabled not working in FormControl\" (#30134)"},{"Id":"2720316470","IsPullRequest":true,"CreatedAt":"2024-12-05T19:27:21","Actor":"crisbeto","Number":"30131","RawContent":null,"Title":"build: update to TypeScript 5.7","State":"closed","Body":"Updates the repo to the latest version of TypeScript.","Url":"https://github.com/angular/components/pull/30131","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.7\" (#30131)"},{"Id":"2720654296","IsPullRequest":true,"CreatedAt":"2024-12-05T15:19:26","Actor":"josephperrott","Number":"30133","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30133","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#30133)"},{"Id":"2720353149","IsPullRequest":false,"CreatedAt":"2024-12-05T12:58:45","Actor":"keatkeat87","Number":"30132","RawContent":null,"Title":"bug(MatTooltip): body line-height will affect tooltip gap","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\napp.component.html\n\n`<button mat-button #matTooltip=\"matTooltip\" matTooltip=\"Info about the action\" style=\"background-color: pink;\">Action</button>`\n\nstyles.scss\n```\nbody {\n  line-height: 24px;\n}\n```\n\nThe problems:\nthere is a 1px gap between button and tooltip.\n![Image](https://github.com/user-attachments/assets/ba665f90-a94b-41f8-ac20-7916249ee868)\nif line-height 28px, the gap will become 2px.\n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/github/keatkeat87/ng-mat-tooltips-gap-issue\nSteps to reproduce:\n1. ng serve --open\n2. hover to button\n\n\n### Expected Behavior\n\nno extra 1px gap.\n\n### Actual Behavior\n\nthere is a 1px extra gap\n\n### Environment\n\nAngular CLI: 19.0.3\nNode: 20.18.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@angular/cdk                    19.0.2\n@angular/material               19.0.2\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0","Url":"https://github.com/angular/components/issues/30132","RelatedDescription":"Open issue \"bug(MatTooltip): body line-height will affect tooltip gap\" (#30132)"},{"Id":"2712614827","IsPullRequest":true,"CreatedAt":"2024-12-05T12:53:16","Actor":"crisbeto","Number":"30119","RawContent":null,"Title":"fix(material/expansion): switch away from animations module","State":"closed","Body":"Reworks the expansion panel to animate purely with CSS, rather than going through the `@angular/animations` module. This simplifies the setup and allows us to resolve several long-standing bug reports.\r\n\r\nFixes #27946.\r\nFixes #22715.\r\nFixes #21434.\r\nFixes #20517.\r\nFixes #17177.\r\nFixes #16534.\r\nFixes #16503.\r\nFixes #14952.\r\nFixes #14759.\r\nFixes #14075.\r\nFixes #11765.","Url":"https://github.com/angular/components/pull/30119","RelatedDescription":"Closed or merged PR \"fix(material/expansion): switch away from animations module\" (#30119)"},{"Id":"2719800037","IsPullRequest":false,"CreatedAt":"2024-12-05T09:04:24","Actor":"ptu14","Number":"30130","RawContent":null,"Title":"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the `@angular/cdk/menu` directive is applied to a scrollable element, it causes scroll behavior abnormalities. Clicking in the empty space within the scrollable area causes the content to unexpectedly scroll to the top. Additionally, general mouse scrolling behavior becomes erratic and unpredictable.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gwxbpu?file=src%2Fexample%2Fcdk-menu-inline-example.css,src%2Fexample%2Fcdk-menu-inline-example.html\nSteps to reproduce:\n- [x] 1. Create a scrollable container with some content that exceeds the container height\n- [x] 2. Apply the @angular/cdk/menu directive to this container\n- [ ] 3. Try to scroll using the mouse:\n- [ ] 4. Click in the empty space within the scrollable area\n\nvideo:\nhttps://github.com/user-attachments/assets/1604a8f4-06b6-4bbf-809d-de0ecb2bb2f6\n\n\n### Expected Behavior\n\nClicking in empty space of the scrollbar should behave like natively, i.e. actually scroll down\n\n### Actual Behavior\n\nClicking in empty space within the scrollable area causes the content to immediately scroll to the top\n\n### Environment\n\n- Angular: 19.0.2\n- CDK/Material: 19.0.2\n- Browser(s): Chrome Version 131.0.6778.85 (Official Build) (arm64), Safari Version 18.1 (18619.2.8.111.5, 18619), Probably all browsers\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, probably all systems\n","Url":"https://github.com/angular/components/issues/30130","RelatedDescription":"Open issue \"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior\" (#30130)"},{"Id":"2713492722","IsPullRequest":true,"CreatedAt":"2024-12-04T20:12:48","Actor":"kseamon","Number":"30120","RawContent":null,"Title":"feat(material-experimental/column-resize): Add support for \"lazy\" rat…","State":"closed","Body":"…her than live updating during resizing.\r\n\r\nFor complex tables, live resizing is laggy and difficult to use. Keeping the current behavior as default, but we may want to revisit that going forward.","Url":"https://github.com/angular/components/pull/30120","RelatedDescription":"Closed or merged PR \"feat(material-experimental/column-resize): Add support for \"lazy\" rat…\" (#30120)"},{"Id":"2718638817","IsPullRequest":true,"CreatedAt":"2024-12-04T19:49:11","Actor":"andrewseguin","Number":"30129","RawContent":null,"Title":"Bump version to \"v19.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30129","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.1\" with changelog.\" (#30129)"},{"Id":"2718548520","IsPullRequest":true,"CreatedAt":"2024-12-04T19:36:25","Actor":"andrewseguin","Number":"30128","RawContent":null,"Title":"docs: release notes for the v19.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30128","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.2 release\" (#30128)"},{"Id":"2718540835","IsPullRequest":true,"CreatedAt":"2024-12-04T18:49:20","Actor":"andrewseguin","Number":"30127","RawContent":null,"Title":"Bump version to \"v19.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30127","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.2\" with changelog.\" (#30127)"},{"Id":"2714304616","IsPullRequest":true,"CreatedAt":"2024-12-04T15:25:35","Actor":"crisbeto","Number":"30121","RawContent":null,"Title":"fix(material/tabs): ink bar not showing when same tab is re-selected","State":"closed","Body":"Fixes that if a tab is active, it gets cleared and the re-selected, the ink bar wasn't showing up.\r\n\r\nFixes #30036.","Url":"https://github.com/angular/components/pull/30121","RelatedDescription":"Closed or merged PR \"fix(material/tabs): ink bar not showing when same tab is re-selected\" (#30121)"},{"Id":"2716936456","IsPullRequest":true,"CreatedAt":"2024-12-04T13:25:52","Actor":"crisbeto","Number":"30126","RawContent":null,"Title":"fix(youtube-player): update to latest typings","State":"closed","Body":"Updates the YouTube player to the latest typings to account for a breaking change.","Url":"https://github.com/angular/components/pull/30126","RelatedDescription":"Closed or merged PR \"fix(youtube-player): update to latest typings\" (#30126)"},{"Id":"2716826551","IsPullRequest":false,"CreatedAt":"2024-12-04T07:50:16","Actor":"xylplm","Number":"30125","RawContent":null,"Title":"bug(COMPONENT): docs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ndocs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated \n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nNew Example Method\n\n### Actual Behavior\n\n FlatTreeControl  is  deprecated \n\nFlat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n\n@deprecated\nUse one of levelAccessor or childrenAccessor instead. To be removed in a future version.\n\n@breaking-change — 21.0.0\n\n### Environment\n\n- Angular: 18\n- CDK/Material:18\n- Browser(s): edge\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\n","Url":"https://github.com/angular/components/issues/30125","RelatedDescription":"Open issue \"bug(COMPONENT): docs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated\" (#30125)"},{"Id":"2716236072","IsPullRequest":false,"CreatedAt":"2024-12-03T23:48:14","Actor":"erikrestificar","Number":"30124","RawContent":null,"Title":"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatPaginator should not be able to move to previous or next pages if disabled\n\nBreaking change: https://github.com/angular/components/pull/29379\n\n### Reproduction\n\n1) Go to [MatPaginator Demo](https://material.angular.io/components/paginator/examples)\n2) Select disabled\n3) Click next page button\n\n### Expected Behavior\n\nClicking next page should have no effect because its disabled\n\n### Actual Behavior\n\nUser is able to go to next page\n\n### Environment\n\nAny environment","Url":"https://github.com/angular/components/issues/30124","RelatedDescription":"Open issue \"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled\" (#30124)"},{"Id":"2715554931","IsPullRequest":false,"CreatedAt":"2024-12-03T17:03:11","Actor":"Ktojan","Number":"30123","RawContent":null,"Title":"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version","State":"open","Body":"### Documentation Feedback\n\nJust found a bug on 19v due to the newly added tab Styling.\n\n**STR:**\n\n1. Open version 19.0.1. (or >19 in future)\n2. Go to any component's page --> Styling tab (e.g. https://material.angular.io/components/grid-list/styling )\n3. Toggle to any previous version of doc\n\nBUG: 404 error \"Page Not Found\" \n\nProposition: Implement switching to Overview Tab\n\n### Affected documentation page\n\nhttps://material.angular.io/components/grid-list/styling","Url":"https://github.com/angular/components/issues/30123","RelatedDescription":"Open issue \"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version\" (#30123)"},{"Id":"2715312411","IsPullRequest":false,"CreatedAt":"2024-12-03T15:18:10","Actor":"marjoleinveenendaal","Number":"30122","RawContent":null,"Title":"docs-bug(Form Field): Section references deprecated object","State":"open","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol\n\nThis section references `mat-chip-list`, that has been deprecated since v17: https://v17.material.angular.io/guide/mdc-migration#chips\n\n### Affected documentation page\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol","Url":"https://github.com/angular/components/issues/30122","RelatedDescription":"Open issue \"docs-bug(Form Field): Section references deprecated object\" (#30122)"},{"Id":"2711341115","IsPullRequest":false,"CreatedAt":"2024-12-02T18:20:39","Actor":"Raphyyy","Number":"30115","RawContent":null,"Title":"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nWhile performing the update migration from Angular Material v18 to v19 I am running through an error that I am not capable to debug : \n```\n> ng update @angular/material --from 18 --to 19 --migrate-only\nUsing package manager: npm\nCollecting installed dependencies...\nFound 97 dependencies.\n** Executing migrations of package '@angular/material' **\n\n❯ Updates Angular Material to v19.\n✖ Migration failed: <css input>:73:2: Unclosed string\n  See \"C:\\Users\\Raphael\\AppData\\Local\\Temp\\ng-ZlQfqb\\angular-errors.log\" for further details.\n```\n\nThe `angular-errors.log` file :\n```\n[error] CssSyntaxError: <css input>:73:2: Unclosed string\n    at Input.error (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:4080:20)\n    at unclosed (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6770:21)\n    at Object.nextToken (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6883:17)\n    at ScssParser.other (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5625:34)\n    at ScssParser.parse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5669:20)\n    at scssParse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7199:14)\n    at new LazyResult (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5952:20)\n    at Processor.process (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6487:18)\n    at MatCoreMigration2.visitStylesheet (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7242:19)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:51\n    at Array.forEach (<anonymous>)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:36\n    at Array.forEach (<anonymous>)\n    at UpdateProject.migrate (\\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:124:39)\n    at runMigrations (\\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:121:42)\n    at \\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:84:17\n```\n\nI removed any sass deprecated usage\n\n### Minimal Reproduction\n\nng update @angular/material --from 18 --to 19 --migrate-only\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: npm 8.18.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, material\n... material-date-fns-adapter, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            6.5.5\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n`ng build` doesn't produce any error.","Url":"https://github.com/angular/components/issues/30115","RelatedDescription":"Closed issue \"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19\" (#30115)"},{"Id":"2711434029","IsPullRequest":true,"CreatedAt":"2024-12-02T18:20:37","Actor":"crisbeto","Number":"30116","RawContent":null,"Title":"mat.core migration fixes","State":"closed","Body":"Includes the following fixes for the `mat.core` migration:\r\n\r\n### fix(material/schematics): error if stylesheet contains syntax errors \r\nFixes that the `mat.core` migration was breaking the whole update process if a stylesheet has syntax errors.\r\n\r\n### fix(material/schematics): avoid parsing stylesheets that don't include Material\r\n\r\nAdds a check in the `mat.core` migration so that it avoids parsing stylesheets that don't contain `@angular/material` altogether. This both makes the schematic faster and avoids potential issues for stylesheets we don't care about.\r\n\r\nFixes #30115.","Url":"https://github.com/angular/components/pull/30116","RelatedDescription":"Closed or merged PR \"mat.core migration fixes\" (#30116)"},{"Id":"2711662962","IsPullRequest":true,"CreatedAt":"2024-12-02T12:53:08","Actor":"crisbeto","Number":"30117","RawContent":null,"Title":"build: run unit tests against newer version of iOS","State":"closed","Body":"Updates the unit tests to run against iOS 18 in an attempt to make them more stable.","Url":"https://github.com/angular/components/pull/30117","RelatedDescription":"Closed or merged PR \"build: run unit tests against newer version of iOS\" (#30117)"},{"Id":"2711770891","IsPullRequest":false,"CreatedAt":"2024-12-02T12:31:07","Actor":"VeroNemo","Number":"30118","RawContent":null,"Title":"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen applying custom density (via a custom CSS class) using Angular Material Theme API directly to Angular Material button (e.g., mat-flat-button, mat-stroked-button), the height is adjusted as expected. However, when the custom density context (the same CSS class as for mat-stroked-button etc) is applied directly to a button mat-icon-button, the size of it remains unchanged. The density changes are only applied if the mat-icon-button is wrapped in an element with the density class.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/sb1-41rfph?file=src%2Fapp%2Fapp.component.scss\nStackOverflow link: https://stackoverflow.com/questions/79227144/mat-icon-button-needs-to-be-wrapped-to-apply-density\n\nSteps to reproduce:\n1. Create css class:\n   `.ui-high-density {\n   @include mat.icon-button-density(-2);\n    }`\n\n2. Apply css class .ui-high-density to button:   \n   A. mat-flat-button\n     `<button mat-flat-button class=\"ui-high-density\">Some text</button>`\n   B. mat-icon-button\n     `<button mat-icon-button class=\"ui-high-density\">Some text</button>`\n\n### Expected Behavior\n\nThe size of height on both, mat-flat-button and mat-icon-button, will change.\n\n### Actual Behavior\n\nThe height change only on mat-flat-button and mat-icon-button stay the same. \n\nWhen I wrapped mat-icon-button into div with class ui-hight-density, the height of button changed.\n`<div class=\"ui-high-density\">`\n   `   <button mat-icon-button>`\n      `     <mat-icon>home</mat-icon>`\n   `   </button>`\n `</div>`\n\n### Environment\n\n- Angular: 18.2.11\n- CDK/Material: 18.2.13\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma \n","Url":"https://github.com/angular/components/issues/30118","RelatedDescription":"Open issue \"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density\" (#30118)"},{"Id":"2711158118","IsPullRequest":false,"CreatedAt":"2024-12-02T10:25:31","Actor":"kai1992cool","Number":"30114","RawContent":null,"Title":"CALENDAR: start view month is not working","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Expected Behavior\n\nthe month view should be displayed\n\n### Actual Behavior\n\nthe default view is only displayed for other views it is working, month has this problem.\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material:^19.0.0\n- Browser(s): Version 131.0.6778.86 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30114","RelatedDescription":"Closed issue \"CALENDAR: start view month is not working\" (#30114)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-07T03:30:02.4209161Z","RunDurationInMilliseconds":1525}