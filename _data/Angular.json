{"Data":{"Angular-Issues":{"Issues":[{"Id":"1936648922","IsPullRequest":false,"CreatedAt":"2023-10-11T02:23:09","Actor":"adriancuadrado","Number":"52154","RawContent":null,"Title":"The change detection cycle is run 4 times on startup","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThe change detection cycle is run 4 times on startup\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz-starters-d8tfcw.stackblitz.io\r\n\r\nI don't understand why the stackblitz link takes forever to load, so here is the code anyways:\r\n\r\n```typescript\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '{{ obj.foo }}'\r\n})\r\nexport class AppComponent {\r\n  obj = {\r\n    get foo() {\r\n      console.log(\r\n        'This log demonstrates that the change detection cycle is run 4 times.'\r\n      );\r\n      return 'Hello world!';\r\n    },\r\n  };\r\n}\r\n```\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nYou can see in the console a message being displayed each time the change detection cycle is run, which is 4 times instead of 2 as expected.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.5\r\nNode: 20.8.0 (Unsupported)\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.5\r\n@angular-devkit/build-angular   16.2.5\r\n@angular-devkit/core            16.2.5\r\n@angular-devkit/schematics      16.2.5\r\n@angular/cli                    16.2.5\r\n@schematics/angular             16.2.5\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n[This StackOverflow post](https://stackoverflow.com/a/45412670/5744858) illustrates where in the source code this problem is originated, but not why. Because I was unable to find a single proper explanation of this phenomenon anywhere, I am proceeding to report this as a bug.","Url":"https://github.com/angular/angular/issues/52154","RelatedDescription":"Open issue \"The change detection cycle is run 4 times on startup\" (#52154)"},{"Id":"1936480787","IsPullRequest":true,"CreatedAt":"2023-10-10T23:47:28","Actor":"dylhunn","Number":"52153","RawContent":null,"Title":"feat(language-service): Complete `@case` inside `@switch`","State":"open","Body":"We now visit the unknown nodes inside a `@switch` block, enabling completions in that context.\r\n","Url":"https://github.com/angular/angular/pull/52153","RelatedDescription":"Open PR \"feat(language-service): Complete `@case` inside `@switch`\" (#52153)"},{"Id":"1936444696","IsPullRequest":true,"CreatedAt":"2023-10-10T23:16:27","Actor":"AndrewKushnir","Number":"52152","RawContent":null,"Title":"refactor(core): better organization of `@defer` runtime code","State":"open","Body":"This commit splits the `render3/instructions/defer.ts` file (that contained most of the runtime code) into smaller files that are easier to maintain.\r\n\r\nThere are no functional changes in this PR, just organizing code.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52152","RelatedDescription":"Open PR \"refactor(core): better organization of `@defer` runtime code\" (#52152)"},{"Id":"1934526445","IsPullRequest":true,"CreatedAt":"2023-10-10T21:59:53","Actor":"sdedieu","Number":"52129","RawContent":null,"Title":"fix(core): add the missing inputs required param in Component related abstract class or interface that don't inherit from the Directive interface","State":"closed","Body":"Add the missing inputs required param in Component related abstract class or interface that don't inherit from the Directive interface\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #52117\r\n\r\n\r\n## What is the new behavior?\r\n\r\nComponentFactory, AbstractComponentFactory, ComponentMirror and reflectComponentType now have the `required` param defined in their `inputs` getter.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52129","RelatedDescription":"Closed or merged PR \"fix(core): add the missing inputs required param in Component related abstract class or interface that don't inherit from the Directive interface\" (#52129)"},{"Id":"1936302388","IsPullRequest":true,"CreatedAt":"2023-10-10T21:32:46","Actor":"jessicajaniuk","Number":"52151","RawContent":null,"Title":"refactor(core): control flow migration cleanup","State":"open","Body":"This adds a console warning to make it clear to users the migration is developer preview. It also shuffles around some code for better organization.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52151","RelatedDescription":"Open PR \"refactor(core): control flow migration cleanup\" (#52151)"},{"Id":"1935818921","IsPullRequest":true,"CreatedAt":"2023-10-10T21:07:09","Actor":"crisbeto","Number":"52140","RawContent":null,"Title":"build: remove Windows CI check","State":"closed","Body":"Based on recent discussions, these changes remove the Windows CI check because it has been too flaky for too long. Furthermore, we've concluded that the simulated file system in the compiler tests already catches the same set of bugs as running the tests on a real Windows system.","Url":"https://github.com/angular/angular/pull/52140","RelatedDescription":"Closed or merged PR \"build: remove Windows CI check\" (#52140)"},{"Id":"1935949198","IsPullRequest":true,"CreatedAt":"2023-10-10T21:01:29","Actor":"atcastle","Number":"52147","RawContent":null,"Title":"docs(core): fix missing text in oversized image warning message","State":"closed","Body":"This PR fixes a sentence in the new oversized image warning message that currently just ends mid-sentence. No functional changes. CC: @AndrewKushnir ","Url":"https://github.com/angular/angular/pull/52147","RelatedDescription":"Closed or merged PR \"docs(core): fix missing text in oversized image warning message\" (#52147)"},{"Id":"1936083684","IsPullRequest":true,"CreatedAt":"2023-10-10T21:00:29","Actor":"atscott","Number":"52149","RawContent":null,"Title":"build: update payload sizes to fix pre-existing failures","State":"closed","Body":"The payload sizes are failing on CI. This commit updates them to the current values.\r\n","Url":"https://github.com/angular/angular/pull/52149","RelatedDescription":"Closed or merged PR \"build: update payload sizes to fix pre-existing failures\" (#52149)"},{"Id":"1935562178","IsPullRequest":true,"CreatedAt":"2023-10-10T20:57:01","Actor":"devversion","Number":"52138","RawContent":null,"Title":"Disallow some operations in reactive contexts ","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/52138","RelatedDescription":"Closed or merged PR \"Disallow some operations in reactive contexts \" (#52138)"},{"Id":"1936189922","IsPullRequest":true,"CreatedAt":"2023-10-10T20:43:18","Actor":"alxhub","Number":"52150","RawContent":null,"Title":"Fix unneeded migration","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52150","RelatedDescription":"Closed or merged PR \"Fix unneeded migration\" (#52150)"},{"Id":"1935927741","IsPullRequest":true,"CreatedAt":"2023-10-10T20:22:04","Actor":"alan-agius4","Number":"52146","RawContent":null,"Title":"build: update tooling packages to latest hash","State":"closed","Body":"This contains the fix angular/dev-infra#1440\r\n","Url":"https://github.com/angular/angular/pull/52146","RelatedDescription":"Closed or merged PR \"build: update tooling packages to latest hash\" (#52146)"},{"Id":"1936009231","IsPullRequest":true,"CreatedAt":"2023-10-10T20:12:12","Actor":"mgechev","Number":"52148","RawContent":null,"Title":"docs: remove the developer survey 2023 banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52148","RelatedDescription":"Closed or merged PR \"docs: remove the developer survey 2023 banner\" (#52148)"},{"Id":"1935917868","IsPullRequest":true,"CreatedAt":"2023-10-10T18:56:39","Actor":"angular-robot","Number":"52144","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/52144","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#52144)"},{"Id":"1935160010","IsPullRequest":true,"CreatedAt":"2023-10-10T18:34:15","Actor":"crisbeto","Number":"52136","RawContent":null,"Title":"refactor(compiler): capture unknown blocks inside switch","State":"closed","Body":"Updates the Ivy AST to allow for `@switch` blocks to capture nested blocks that are not `@case` and `@default`. These blocks will be used for autocompletion in the language service.\r\n\r\nThese changes also update the logic for `@switch` and `@if` blocks so that they produce an AST node even if there are errors. The errors will still be surfaced to users, but producing AST nodes allows us to recover parts of the expression later if necessary.","Url":"https://github.com/angular/angular/pull/52136","RelatedDescription":"Closed or merged PR \"refactor(compiler): capture unknown blocks inside switch\" (#52136)"},{"Id":"1934753530","IsPullRequest":false,"CreatedAt":"2023-10-10T18:19:48","Actor":"joshuamorony","Number":"52132","RawContent":null,"Title":"Parser error for line break when creating composite key using @for","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIf a line break is present in a track statement (I noticed this because Prettier auto breaks the line at the '+' if it is long enough) it will cause a parser error.\r\n\r\nThis works:\r\n\r\n```\r\n    @for(item of items; track (item.id + item.label)){\r\n      {{item.label}}\r\n    }\r\n```\r\n\r\nThis causes a parser error:\r\n\r\n```\r\n    @for(item of items; track (item.id + \r\n      item.label)){\r\n      {{item.label}}\r\n    }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-at-j8jccv?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nsrc/main.ts:16:25 - error NG5002: Parser Error: Missing expected ) at the end of the expression [(item.id + ] in /home/projects/angular-at-j8jccv/src/main.ts@15:24\r\n\r\n16     @for(item of items; track (item.id +\r\n                           ~~~~~~~~~~~~~~~~\r\n17       item.label)){\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-next.7\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/material               17.0.0-next.5\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.4.0\r\ntypescript                      5.2.2\r\nzone.js                         0.13.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52132","RelatedDescription":"Closed issue \"Parser error for line break when creating composite key using @for\" (#52132)"},{"Id":"1935229616","IsPullRequest":true,"CreatedAt":"2023-10-10T18:19:47","Actor":"crisbeto","Number":"52137","RawContent":null,"Title":"fix(compiler): allow newlines in track and let expressions","State":"closed","Body":"Fixes that the template parser didn't allow for newlines in the `track` and `let` expressions of `@for` blocks.\r\n\r\nFixes #52132.","Url":"https://github.com/angular/angular/pull/52137","RelatedDescription":"Closed or merged PR \"fix(compiler): allow newlines in track and let expressions\" (#52137)"},{"Id":"1935927025","IsPullRequest":true,"CreatedAt":"2023-10-10T18:04:51","Actor":"devknoll","Number":"52145","RawContent":null,"Title":"refactor(core): run internal work outside of public afterRender phases","State":"open","Body":"Public afterRender phases have specific API guarantees which can be invalidated if the internal framework is implemented using them. Instead, the framework should use dedicated internal functions.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nDefer can mutate the DOM inside of the `MixedReadWrite` phase, which cannot be observed by `EarlyRead` callbacks.\r\n\r\nIssue Number: #52142\r\n\r\n\r\n## What is the new behavior?\r\nDefer uses the internal-only `beforeNextAfterRender` function which executes _before_ any `afterRender` callbacks, and so `EarlyRead` works as intended.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nCloses #52142","Url":"https://github.com/angular/angular/pull/52145","RelatedDescription":"Open PR \"refactor(core): run internal work outside of public afterRender phases\" (#52145)"},{"Id":"1934941775","IsPullRequest":true,"CreatedAt":"2023-10-10T17:58:51","Actor":"angular-robot","Number":"52133","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular-devkit/architect-cli](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`0.1700.0-next.6` -> `0.1700.0-next.7`](https://renovatebot.com/diffs/npm/@angular-devkit%2farchitect-cli/0.1700.0-next.6/0.1700.0-next.7) |\n| [@angular-devkit/build-angular](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular-devkit%2fbuild-angular/17.0.0-next.6/17.0.0-next.7) |\n| [@angular-devkit/build-angular](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular-devkit%2fbuild-angular/17.0.0-next.6/17.0.0-next.7) |\n| [@angular-devkit/core](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular-devkit%2fcore/17.0.0-next.6/17.0.0-next.7) |\n| [@angular-devkit/schematics](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular-devkit%2fschematics/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/animations](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `cc70f65` -> `77b0789` |\n| [@angular/cdk](https://togithub.com/angular/components) | dependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/cli](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcli/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/cli](https://togithub.com/angular/angular-cli) | devDependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcli/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/common](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/compiler](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/core](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/elements](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2felements/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/forms](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/localize](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/material](https://togithub.com/angular/components) | dependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `26b676b` -> `d4b6185` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/platform-server](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/service-worker](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.0.0-next.6/17.0.0-next.7) |\n| [@angular/upgrade](https://togithub.com/angular/angular) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@angular%2fupgrade/17.0.0-next.6/17.0.0-next.7) |\n| [@schematics/angular](https://togithub.com/angular/angular-cli) | dependencies | patch | [`17.0.0-next.6` -> `17.0.0-next.7`](https://renovatebot.com/diffs/npm/@schematics%2fangular/17.0.0-next.6/17.0.0-next.7) |\n| angular/dev-infra | action | digest | `9b1adb2` -> `0319624` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular-cli (@&#8203;angular-devkit/architect-cli)</summary>\n\n### [`v0.1700.0-next.7`](https://togithub.com/angular/angular-cli/compare/4a6e39a540b66f4ec7710857acff0edb0dfd41c2...a40e7ceb69bb3f3c4d644b8d13be7fbf58039ba7)\n\n[Compare Source](https://togithub.com/angular/angular-cli/compare/4a6e39a540b66f4ec7710857acff0edb0dfd41c2...a40e7ceb69bb3f3c4d644b8d13be7fbf58039ba7)\n\n</details>\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.0.0-next.7`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1700-next7-2023-10-04)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.0.0-next.6...17.0.0-next.7)\n\n#### Deprecations\n\n##### core\n\n-   Swapping out the context object for `EmbeddedViewRef`\n    is no longer supported. Support for this was introduced with v12.0.0, but\n    this pattern is rarely used. There is no replacement, but you can use\n    simple assignments in most cases, or ` Object.assign , or alternatively\n    still replace the full object by using a  `Proxy`(see`NgTemplateOutlet\\`\n    as an example).\n\n    Also adds a warning if the deprecated\n\n##### animations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e753278faa](https://togithub.com/angular/angular/commit/e753278faae79a53e235e0d8e03f89555a712d80) | feat | Add the possibility of lazy loading animations code. ([#&#8203;50738](https://togithub.com/angular/angular/pull/50738)) |\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dde3fdabbd](https://togithub.com/angular/angular/commit/dde3fdabbd24b48dd6afd120d23e92a3605eb04d) | feat | upgrade warning to logged error for lazy-loaded LCP images using NgOptimizedImage ([#&#8203;52004](https://togithub.com/angular/angular/pull/52004)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a7fa25306f](https://togithub.com/angular/angular/commit/a7fa25306f8ce47d8aa330531382106efec55a55) | feat | extract api docs for interfaces ([#&#8203;52006](https://togithub.com/angular/angular/pull/52006)) |\n| [0eae992c4e](https://togithub.com/angular/angular/commit/0eae992c4e03b7c9039476e03b72e92d662293df) | fix | allow nullable values in for loop block ([#&#8203;51997](https://togithub.com/angular/angular/pull/51997)) |\n| [9acd2ac98b](https://togithub.com/angular/angular/commit/9acd2ac98bc3b6ffc5a8d6c19f7290d05fe1f896) | fix | enable block syntax in the linker ([#&#8203;51979](https://togithub.com/angular/angular/pull/51979)) |\n| [1d871c03a5](https://togithub.com/angular/angular/commit/1d871c03a523e10bb838cb0f9550595cfbd9d14d) | fix | forward referenced dependencies not identified as deferrable ([#&#8203;52017](https://togithub.com/angular/angular/pull/52017)) |\n| [02edb43067](https://togithub.com/angular/angular/commit/02edb4306736e6f12e87a4164c17eca6cbdfe151) | fix | narrow the type of the aliased if block expression ([#&#8203;51952](https://togithub.com/angular/angular/pull/51952)) |\n| [1beef49d80](https://togithub.com/angular/angular/commit/1beef49d80809fbb0e7c8e95f17096c39ac8940a) | fix | update the minVersion if component uses block syntax ([#&#8203;51979](https://togithub.com/angular/angular/pull/51979)) |\n| [e5bca43224](https://togithub.com/angular/angular/commit/e5bca432248add0a19102f6afeae145f1a33ee8a) | perf | further reduce bundle size using arrow functions ([#&#8203;52010](https://togithub.com/angular/angular/pull/52010)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4f04d1cdab](https://togithub.com/angular/angular/commit/4f04d1cdab2fc5217566c0c01b7df10c74a93afa) | feat | add new list reconcilation algorithm ([#&#8203;51980](https://togithub.com/angular/angular/pull/51980)) |\n| [43e6fb0606](https://togithub.com/angular/angular/commit/43e6fb0606e15584dcb4478ad4eaa8e825dda83e) | feat | enable block syntax ([#&#8203;51994](https://togithub.com/angular/angular/pull/51994)) |\n| [a54713c831](https://togithub.com/angular/angular/commit/a54713c8316787eea160cfdb7f2778a087fe59ed) | feat | implement ɵgetInjectorMetadata debug API ([#&#8203;51900](https://togithub.com/angular/angular/pull/51900)) |\n| [7d42dc3c02](https://togithub.com/angular/angular/commit/7d42dc3c023391e12ea607beb227fd4426e1694d) | feat | the new list reconciliation algorithm for built-in for ([#&#8203;51980](https://togithub.com/angular/angular/pull/51980)) |\n| [4f69d620d9](https://togithub.com/angular/angular/commit/4f69d620d94663592780b2875acbc2b1918775f9) | fix | deferred blocks not removing content immediately when animations are enabled ([#&#8203;51971](https://togithub.com/angular/angular/pull/51971)) |\n| [9b9e11fcaf](https://togithub.com/angular/angular/commit/9b9e11fcaf5d8d639ff1d7b8feddb01751b47e14) | refactor | deprecate allowing full context object to be replaced in `EmbeddedViewRef` ([#&#8203;51887](https://togithub.com/angular/angular/pull/51887)) |\n\n##### language-service\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [08482f2c7d](https://togithub.com/angular/angular/commit/08482f2c7dcbcd100981dfb266a6e63f64432328) | fix | Retain correct language service when `ts.Project` reloads ([#&#8203;51912](https://togithub.com/angular/angular/pull/51912)) |\n\n##### service-worker\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cc7973f5a5](https://togithub.com/angular/angular/commit/cc7973f5a5cddbc5288db7d572757819327a40c3) | fix | throw a critical error when handleFetch fails ([#&#8203;51960](https://togithub.com/angular/angular/pull/51960)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.6`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next6-antimony-ant-2023-10-04)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.5...17.0.0-next.6)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c5ab88020](https://togithub.com/angular/components/commit/c5ab88020154e6997c02a332ec5ecd09808fa52e) | fix | **schematics:** support both application and browser builders ([#&#8203;27875](https://togithub.com/angular/components/pull/27875)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [06559a012](https://togithub.com/angular/components/commit/06559a0129d0432542513f1160ab5837a4ce4af5) | feat | **dialog:** switch to standalone ([#&#8203;27860](https://togithub.com/angular/components/pull/27860)) |\n| [82844b3d5](https://togithub.com/angular/components/commit/82844b3d52235f67119eb5f0fe4e5c56474440c3) | feat | **theming:** Open up new APIs to access theme values ([#&#8203;27865](https://togithub.com/angular/components/pull/27865)) |\n| [dbd31dec8](https://togithub.com/angular/components/commit/dbd31dec882519aa23f8275c3987f1d00e6f8a4a) | fix | **radio:** Apply tokens at mixin root ([#&#8203;27864](https://togithub.com/angular/components/pull/27864)) |\n| [5dd614aa1](https://togithub.com/angular/components/commit/5dd614aa100e28f0815fdd83e5b68f4239ef01f9) | fix | **tabs:** nav bar not navigating on enter presses ([#&#8203;27862](https://togithub.com/angular/components/pull/27862)) |\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [75029c273](https://togithub.com/angular/components/commit/75029c273a4aad3ad4481d8c045c9a73ccceb34e) | feat | **theming:** add M3 progress-spinner support ([#&#8203;27868](https://togithub.com/angular/components/pull/27868)) |\n| [2f958aced](https://togithub.com/angular/components/commit/2f958aced5757915f75e4036229d5df63f6ff414) | feat | **theming:** add M3 radio support ([#&#8203;27867](https://togithub.com/angular/components/pull/27867)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Never, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular/pull/52133","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#52133)"},{"Id":"1935886666","IsPullRequest":true,"CreatedAt":"2023-10-10T17:40:45","Actor":"jessicajaniuk","Number":"52143","RawContent":null,"Title":"fix(core): Remove no longer needed build rule related to removed migration","State":"closed","Body":"This removes the esbuild rule for the migration that was removed.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/52143","RelatedDescription":"Closed or merged PR \"fix(core): Remove no longer needed build rule related to removed migration\" (#52143)"},{"Id":"1935876469","IsPullRequest":false,"CreatedAt":"2023-10-10T17:29:52","Actor":"devknoll","Number":"52142","RawContent":null,"Title":"Defer implementation breaks `AfterRenderPhase` timing","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nThe defer instruction is implemented [in terms of `afterRender`](https://github.com/angular/angular/blob/229331e11b6c214f74c9801aa52eb9cd47d7fc76/packages/core/src/render3/instructions/defer.ts#L477) with the default (`MixedReadWrite`) phase (#51830).\r\n\r\nThis is problematic, because it means that any mutations (such as when changing to the loading placeholder) would not be observable by other registered callbacks, such as in the `EarlyRead` phase, effectively breaking the phase guarantees.\r\n\r\nAs a general rule, internal framework work should only use internal framework phases. The public phases should be reserved for user space functionality.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/52142","RelatedDescription":"Open issue \"Defer implementation breaks `AfterRenderPhase` timing\" (#52142)"},{"Id":"1935826124","IsPullRequest":true,"CreatedAt":"2023-10-10T17:08:01","Actor":"alxhub","Number":"52141","RawContent":null,"Title":"fix(core): remove unnecessary migration","State":"closed","Body":"PR #49672 added a g3-flavored migration for compiler option removal, but g3 doesn't use those options at all. So this migration is unnecessary and we can remove it.","Url":"https://github.com/angular/angular/pull/52141","RelatedDescription":"Closed or merged PR \"fix(core): remove unnecessary migration\" (#52141)"},{"Id":"1935704901","IsPullRequest":false,"CreatedAt":"2023-10-10T16:11:08","Actor":"MunMunMiao","Number":"52139","RawContent":null,"Title":"Feature Request: Add input signal and router params signal","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, if you want to set the input value to the component's signal in the component, the best practice is:\r\n\r\n```ts\r\nexport class MyComponent {\r\n  @Input('id')\r\n  set inputId(value: number){\r\n    this.id.set(value)\r\n  }\r\n  id = signal<number | null>(null)\r\n\r\n  constructor(){\r\n    effect(() => {\r\n      // do something...\r\n    })\r\n  }\r\n}\r\n```\r\n\r\nThis will bring some problems\r\n\r\n1. this will cause us to repeatedly define setters with similar or duplicate names and it cannot be well combined with signal.\r\n2. if function component is supported in the future, this decorator will become invalid.\r\n3. cannot directly use intpu value in effect because it cannot be responded to when the input value changes.\n\n### Proposed solution\n\n> In class component\r\n```ts\r\nexport class MyComponent {\r\n  id = input()\r\n  // or\r\n  id = input('myId')\r\n  // or\r\n  id = input({\r\n    alias: 'myId'\r\n    ...\r\n  })\r\n}\r\n```\r\n\r\n> In function component\r\n```ts\r\nexport const MyComponent = component(() => {\r\n  id = input()\r\n  // or\r\n  id = input('myId')\r\n  // or\r\n  id = input({\r\n    alias: 'myId'\r\n    ...\r\n  })\r\n})\r\n```\r\n\r\nThe input signal here is a readonly signal\n\n### Alternatives considered\n\nno","Url":"https://github.com/angular/angular/issues/52139","RelatedDescription":"Closed issue \"Feature Request: Add input signal and router params signal\" (#52139)"},{"Id":"1935130496","IsPullRequest":false,"CreatedAt":"2023-10-10T11:29:26","Actor":"usarskyy","Number":"52135","RawContent":null,"Title":"Partial ignore of ValueChanges event when Reactive Form value is set","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nDemo app: https://github.com/usarskyy/form-initialization\r\n\r\nI understand that below described use case is not really related to Angular Forms because your package offers a basic foundation, not the solution to all kind of problems in the world. But maybe you could consider my comments when implementing other features that eventually can help me as well. Or since you communicate with the community a lot, you could point me to the solution that was already implemented (BTW, I looked for already existing external library but couldn't find any).\r\n\r\n### Use case\r\nReactive forms offer two methods to update its value: `setValue` and `patchValue`. Options for both methods include `emitEvent` parameter that prevents `valueChanges` from being triggered when set to `true`.\r\n\r\nQuite often I see forms that include auto-populated inputs based on previously selected values (for example, a person selects a country from dropdown and a VAT-input is set automatically). These inputs are usually overridable by a user. For example, if a user selects Germany from dropdown and a VAT-input is set to 19%, the user can still override this value to any other value.\r\n\r\nAlso these forms include read-only fields that are calculated based on other fields (for example, total value = number of items * single item price). These fields cannot be changed by a user directly.\r\n\r\nWhen a user starts populating this kind of forms, everything works as expected: s/he goes step by step until the end, all fields get pre-populated and pre-calculated upfront correctly. But as soon as I need to save a draft version of this form on the server and then restore it, I see that auto-populated fields with overridden values are overwritten (this behavior you can see in my demo app if you navigate to \"Problem existing\" page; see how VAT value changes after 300ms). It happens because `valueChanges` triggers request to the server, which overrides correct input value with whatever the default value from the server.\r\nThe obvious solution is to pass `{ emitEvent: true }` to disable `valueChanges` event, so no request to the server is sent. Unfortunately this will also break calculated read-only fields.\r\n\r\n### How to fix this issue?\r\nThere are a few ways how we could make our app work correctly:\r\n1) **check if an auto-populated input has a value before overwriting it**. Easy to implement and from my experience, this will do the job in most of the cases. But it won't work, for example, for inputs where an empty or null value is also considered correct -> then you don't know if input's value is empty because it was not yet updated or it is expected to be empty/null.\r\n2) **unsubscribe all handlers** that override auto-populated inputs before we update form's value, then subscribe again. Works in 100% cases.\r\nIn my demo app this approach can be found on \"Simple existing\" page.\r\n3) **block some notifications** from `valueChanges` event when form value is updated. Works in 100% cases.\r\nIn my demo app this approach can be found on \"InitVar existing\" and \"Extended FormGroup existing\" page. The code is super straightforward:\r\n```\r\nthis.form.controls.countryCode2.valueChanges\r\n        .pipe(\r\n          skipWhile(() => {\r\n            return this.#initializing;\r\n          }),\r\n...\r\n```\r\n\r\nPersonally I prefer the third option because it is not so messy, requires less code to implement and is easy to read.\r\nThis approach can be implemented either by using directly an external component's variable or by creating an extended version of a `FormGroup` class.\r\n\r\n### When blocking `valueChanges` won't work?\r\nCurrently my preferred solution works because RxJS executes all `valueChanges` subscriptions immediately (basically, you could say \"synchronously\"), so the value of `#initializing` variable is always correct. But this behavior is not guaranteed and if `valueChanges` subscriptions are executed later because, for example, scheduler is changed, then there will be no way to know that a notification must be ignored.\n\n### Proposed solution\n\nIntroduce some kind of context as an additional parameter when `setValue` or `patchValue` method is called. Then this context can be used to ignore the `valueChanges` event.\n\n### Alternatives considered\n\nCustom implementations described above.","Url":"https://github.com/angular/angular/issues/52135","RelatedDescription":"Open issue \"Partial ignore of ValueChanges event when Reactive Form value is set\" (#52135)"},{"Id":"1935005730","IsPullRequest":true,"CreatedAt":"2023-10-10T10:29:23","Actor":"aanchal88","Number":"52134","RawContent":null,"Title":"docs: update the html tags","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/52134","RelatedDescription":"Open PR \"docs: update the html tags\" (#52134)"},{"Id":"1934741976","IsPullRequest":false,"CreatedAt":"2023-10-10T08:32:27","Actor":"aleksander351","Number":"52131","RawContent":null,"Title":"[style.background]=\"\" [style.backgroundSize]=\"\" don't work together well","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAngular is combinig those two styles together into the background style.\r\n\r\nbackground: repeating-linear-gradient(45deg, rgb(147, 236, 166), rgb(147, 236, 166) 50%, rgb(234, 208, 102) 50%, rgb(234, 208, 102));\r\nbackground-size: 20px 20px;\r\n\r\nthen becomes >>\r\n\r\nbackground: repeating-linear-gradient(45deg, rgb(147, 236, 166), rgb(147, 236, 166) 50%, rgb(234, 208, 102) 50%, rgb(234, 208, 102)) 0% 0% / 20px 20px;\r\n}\r\n\r\nIn principle this is not a big issue, the problem is, it's not working all the time.\n\n### Please provide a link to a minimal reproduction of the bug\n\ncoming soon\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 15\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52131","RelatedDescription":"Closed issue \"[style.background]=\"\" [style.backgroundSize]=\"\" don't work together well\" (#52131)"},{"Id":"1934474419","IsPullRequest":false,"CreatedAt":"2023-10-10T07:39:32","Actor":"syoho","Number":"52128","RawContent":null,"Title":"Translation Issue","State":"closed","Body":"### Describe the problem that you experienced\n\nHello, I'd like to raise a translation query.\r\n\r\nIn the Chinese version of the Angular site, the original English sentence:\r\n\r\n`Add the product descriptions. On a <p> element, use an *ngIf directive so that Angular only creates the <p> element if the current product has a description.`\r\n\r\nhas been translated as \r\n\r\n`添加产品说明。在 <p> 元素上使用 *ngIf 指令，以便 Angular 只让当前产品有描述 <p> `\r\n\r\nHowever, considering the context, would it be more fitting to translate it as \r\n\r\n`添加产品说明。在 <p> 元素上使用 *ngIf 指令，以便Angular只有在当前产品有描述时才会创建这个<p>元素\"?`\r\n\r\nI look forward to hearing from you.\r\n\r\nBest regards.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.cn/start\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/52128","RelatedDescription":"Closed issue \"Translation Issue\" (#52128)"},{"Id":"1934579715","IsPullRequest":false,"CreatedAt":"2023-10-10T07:17:53","Actor":"crisbeto","Number":"52130","RawContent":null,"Title":"Investigate duplicate symbols test","State":"open","Body":"This is a follow-up to investigate the duplicated symbols that had to be approved in https://github.com/angular/angular/pull/52092. We should also double-check why some signal-related symbols showed up in an integration test that doesn't use signals.","Url":"https://github.com/angular/angular/issues/52130","RelatedDescription":"Open issue \"Investigate duplicate symbols test\" (#52130)"},{"Id":"1934424058","IsPullRequest":true,"CreatedAt":"2023-10-10T07:12:29","Actor":"crisbeto","Number":"52127","RawContent":null,"Title":"build: fix broken symbols test","State":"closed","Body":"Fixes a symbol test that broke on the main branch.","Url":"https://github.com/angular/angular/pull/52127","RelatedDescription":"Closed or merged PR \"build: fix broken symbols test\" (#52127)"},{"Id":"1934376301","IsPullRequest":true,"CreatedAt":"2023-10-10T05:06:10","Actor":"angular-robot","Number":"52126","RawContent":null,"Title":"build: update scorecard action dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | minor | `v2.21.9` -> `v2.22.1` |\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | minor | `v2.2.0` -> `v2.3.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.22.1`](https://togithub.com/github/codeql-action/compare/v2.22.0...v2.22.1)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.22.0...v2.22.1)\n\n### [`v2.22.0`](https://togithub.com/github/codeql-action/compare/v2.21.9...v2.22.0)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.9...v2.22.0)\n\n</details>\n\n<details>\n<summary>ossf/scorecard-action (ossf/scorecard-action)</summary>\n\n### [`v2.3.0`](https://togithub.com/ossf/scorecard-action/releases/tag/v2.3.0)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.2.0...v2.3.0)\n\n#### What's Changed\n\n-   :seedling: Bump github.com/ossf/scorecard/v4 from v4.11.0 to v4.13.0 by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1270](https://togithub.com/ossf/scorecard-action/pull/1270)\n    -   For a full changelist of what this includes, see the [v4.12.0](https://togithub.com/ossf/scorecard/releases/tag/v4.12.0) and [v4.13.0](https://togithub.com/ossf/scorecard/releases/tag/v4.13.0) release notes\n-   :sparkles: Send rekor tlog index to webapp when publishing results by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1169](https://togithub.com/ossf/scorecard-action/pull/1169)\n-   :bug: Prevent url clipping for GHES instances by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1225](https://togithub.com/ossf/scorecard-action/pull/1225)\n\n##### Documentation\n\n-   :book: Update access rights needed to see the results in code scanning by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1229](https://togithub.com/ossf/scorecard-action/pull/1229)\n-   :book: Add package comments. by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1221](https://togithub.com/ossf/scorecard-action/pull/1221)\n-   :book: Add SECURITY.md file by [@&#8203;david-a-wheeler](https://togithub.com/david-a-wheeler) in [https://github.com/ossf/scorecard-action/pull/1250](https://togithub.com/ossf/scorecard-action/pull/1250)\n-   :book: Fix typo in token input docs by [@&#8203;aabouzaid](https://togithub.com/aabouzaid) in [https://github.com/ossf/scorecard-action/pull/1258](https://togithub.com/ossf/scorecard-action/pull/1258)\n\n#### New Contributors\n\n-   [@&#8203;david-a-wheeler](https://togithub.com/david-a-wheeler) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1250](https://togithub.com/ossf/scorecard-action/pull/1250)\n-   [@&#8203;aabouzaid](https://togithub.com/aabouzaid) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1258](https://togithub.com/ossf/scorecard-action/pull/1258)\n\n**Full Changelog**: https://github.com/ossf/scorecard-action/compare/v2.2.0...v2.3.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular/pull/52126","RelatedDescription":"Open PR \"build: update scorecard action dependencies\" (#52126)"},{"Id":"1934097658","IsPullRequest":true,"CreatedAt":"2023-10-10T01:08:56","Actor":"ferrorenan","Number":"52125","RawContent":null,"Title":"docs(docs-infra): change elements theme color variable in dark mode","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nWhen you set the docs in dark-mode, the white text hurts your eyes. As described in this issue: https://github.com/angular/angular/issues/51494\r\n\r\nIssue Number: [51494](https://github.com/angular/angular/issues/51494)\r\n\r\n\r\n## What is the new behavior?\r\nChange the color variable of some elements to dark mode\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52125","RelatedDescription":"Open PR \"docs(docs-infra): change elements theme color variable in dark mode\" (#52125)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1936496248","IsPullRequest":true,"CreatedAt":"2023-10-11T00:01:13","Actor":"dgp1130","Number":"26001","RawContent":null,"Title":"refactor: strengthen language around Protractor support status","State":"open","Body":"Protractor is no longer deprecated, it's already end-of-life. I didn't commit to a specific version because plans always fluctuate, but it is eligible to be removed in any future Angular major version.\r\n\r\nTargeting `patch` so we can include this in the latest v16 release as well to increase visibility.","Url":"https://github.com/angular/angular-cli/pull/26001","RelatedDescription":"Open PR \"refactor: strengthen language around Protractor support status\" (#26001)"},{"Id":"1935146657","IsPullRequest":true,"CreatedAt":"2023-10-10T17:43:12","Actor":"alan-agius4","Number":"25999","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add `buildTarget` option to dev-server and `extract-i18n` builders","State":"closed","Body":"\r\n\r\nThis is to better match the nature of the application builder where the target can be both browser and server.\r\n\r\nDEPRECATED: The `browserTarget` in the dev-server and extract-i18n builders have been deprecated in favor of `buildTarget`.","Url":"https://github.com/angular/angular-cli/pull/25999","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): add `buildTarget` option to dev-server and `extract-i18n` builders\" (#25999)"},{"Id":"1934389786","IsPullRequest":true,"CreatedAt":"2023-10-10T14:29:20","Actor":"angular-robot","Number":"25994","RawContent":null,"Title":"build: update dependency @typescript-eslint/parser to v6.7.5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`6.7.4` -> `6.7.5`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.7.4/6.7.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.7.5`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#675-2023-10-09)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.7.4...v6.7.5)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25994","RelatedDescription":"Closed or merged PR \"build: update dependency @typescript-eslint/parser to v6.7.5\" (#25994)"},{"Id":"1933829829","IsPullRequest":true,"CreatedAt":"2023-10-10T14:28:44","Actor":"clydin","Number":"25992","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support deploy URL option for `browser-esbuild` builder","State":"closed","Body":"The `browser-esbuild` builder now provides support for using the `deployUrl` option when building applications.  This option is still considered deprecated which is the same status as with the Webpack-based `browser` application builder. This option is only available with the `browser-esbuild` builder and not other esbuild-based builders. The `browser-esbuild` builder is primarily intended to be used as a compatibility builder with the `browser` builder that requires only minimal changes to use.","Url":"https://github.com/angular/angular-cli/pull/25992","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support deploy URL option for `browser-esbuild` builder\" (#25992)"},{"Id":"1934410657","IsPullRequest":true,"CreatedAt":"2023-10-10T13:58:36","Actor":"alan-agius4","Number":"25995","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fully downlevel async/await when using vite dev-server with caching enabled","State":"closed","Body":"\r\nPrior to this change, async/await in external packages were not being correctly downlevelled when using vite dev-server with cache enabled.t checkout\r\n\r\nCloses #25985\r\n\r\n(cherry picked from commit 968ee3428046eaad8eb56518c73195f43b6d4ead)\r\n\r\n\r\n\r\nPatch version of https://github.com/angular/angular-cli/pull/25986","Url":"https://github.com/angular/angular-cli/pull/25995","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fully downlevel async/await when using vite dev-server with caching enabled\" (#25995)"},{"Id":"1935207307","IsPullRequest":false,"CreatedAt":"2023-10-10T12:13:32","Actor":"cheng93","Number":"26000","RawContent":null,"Title":"filter does not work in UnitTestTree","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`filter()` does not work when applied to a `UnitTestTree`\r\n\r\nI believe this is because `UnitTestTree` is not a `HostTree`\n\n### Minimal Reproduction\n\nhttps://github.com/cheng93/angular-schematics-filter\r\n\r\nrun the test in the `hello-world` schematics\n\n### Exception or Error\n\n```text\nError: Tree type is not supported.\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.1.8\r\nNode: 20.0.0 (Unsupported)\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1601.8\r\n@angular-devkit/core         16.1.8\r\n@angular-devkit/schematics   16.1.8\r\n@angular/cli                 16.1.8\r\n@schematics/angular          16.1.8\r\nrxjs                         7.8.1\r\ntypescript                   5.1.6\r\nzone.js                      0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26000","RelatedDescription":"Open issue \"filter does not work in UnitTestTree\" (#26000)"},{"Id":"1934976302","IsPullRequest":false,"CreatedAt":"2023-10-10T10:26:57","Actor":"VincenzoManto","Number":"25998","RawContent":null,"Title":"\"Invalid string length\" building a library","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nRunning `ng build <project>`, we obtain \r\n\r\n```\r\n❌  Generating \"fesm2015\"\r\n\r\nInvalid string length\r\n```\r\n\r\nIndeed, fesm2020 build succeeded.\r\n\r\nThe dist sourcemap for fesm2020 reached 32MB, while the fesm2015 sourcemap reached 33MB (<project>.mjs.map file).\r\n\r\nThe entire source code is about 200 components distributed in 1 single library.\r\n\r\n### Minimal Reproduction\r\n\r\n- Create 200+ components and include them in a single library module\r\n- run `ng build <project>`\r\n\r\n### Exception or Error\r\n\r\n`Invalid string length` after `Generating fesm2015`\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 14.2.6\r\nNode: 18.15.0 (Unsupported)\r\nPackage Manager: npm 9.5.0\r\nOS: win32 x64\r\n\r\nAngular: 14.2.6\r\n... animations, cli, common, compiler, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.6\r\n@angular-devkit/build-angular   14.2.6\r\n@angular-devkit/core            14.2.6\r\n@angular-devkit/schematics      14.2.6\r\n@angular/compiler-cli           14.3.0\r\n@schematics/angular             14.2.6\r\nng-packagr                      14.0.1\r\nrxjs                            6.5.4\r\ntypescript                      4.7.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25998","RelatedDescription":"Closed issue \"\"Invalid string length\" building a library\" (#25998)"},{"Id":"1934640874","IsPullRequest":true,"CreatedAt":"2023-10-10T07:50:53","Actor":"alan-agius4","Number":"25997","RawContent":null,"Title":"refactor: add warning when using `browser-esbuild`","State":"open","Body":"This commits add a warning when using the browser-esbuild builder which eventually will be removed in favor of the `application` builder.\r\n","Url":"https://github.com/angular/angular-cli/pull/25997","RelatedDescription":"Open PR \"refactor: add warning when using `browser-esbuild`\" (#25997)"},{"Id":"1934389673","IsPullRequest":true,"CreatedAt":"2023-10-10T05:14:36","Actor":"angular-robot","Number":"25993","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `aba5036` -> `3adc29b` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `a9f0d84` -> `4d50bdd` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2f47af8` -> `77b0789` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `131de3b` -> `356dcce` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `46ec26b` -> `4b19f37` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `4c9d546` -> `3d6d8fe` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `99fcb51` -> `a0dbbde` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `32c6d7a` -> `0122972` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `e33fa1b` -> `fbc7ae7` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `1bb3047` -> `16800e8` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `ebbd300` -> `ee82bd5` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `10daa98` -> `cae5881` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `6584654` -> `9ae6146` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `cf16cf7` -> `d4b6185` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `552c3bf` -> `e7481f9` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `ba7d933` -> `70d5d4f` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `483374e` -> `dcd4095` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `92f71dd` -> `40b5a73` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `c5d7329` -> `2da30dc` |\n| angular/dev-infra | action | digest | `1d8a9ff` -> `0319624` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25993","RelatedDescription":"Open PR \"build: update angular\" (#25993)"},{"Id":"1934603730","IsPullRequest":false,"CreatedAt":"2023-10-09T21:15:46","Actor":"codeunifier","Number":"25996","RawContent":null,"Title":"Safari 15 issue - ReferenceError","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSeveral other similar issues have been raised that all lead back to [this issue](https://github.com/angular/angular-cli/issues/24355), but the solution to update the `browserslistsrc` did not work for me. I do not have a problem in Safari 16, but any version before that is throwing me this error.\r\n\r\nI saw on other issues that the problem lies with animations, however in my case I am seeing this issue when trying to update several packages. Nothing new has been introduced to the angular app. In the linked issue, there was also a comment that the problem does not occur when devtools are opened, but that has not had any effect for me.\r\n\r\n![Screenshot from 2023-10-09 13-02-12](https://github.com/angular/angular/assets/23140604/c2833c60-6d8b-426a-bd5b-fed28000a355)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/angular/angular-cli/issues/24355\n\n### Please provide the exception or error you saw\n\n```true\n`ReferenceError: Can't find variable: _angular_material_core__WEBPACK_IMPORTED_MODULE_3__`\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.5\r\nNode: 18.17.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\nAngular: 16.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1602.5\r\n@angular-devkit/build-angular      16.2.5\r\n@angular-devkit/core               16.2.5\r\n@angular-devkit/schematics         16.2.5\r\n@angular/cdk                       16.2.7\r\n@angular/cli                       16.2.5\r\n@angular/material                  16.2.7\r\n@angular/material-moment-adapter   16.2.7\r\n@schematics/angular                14.2.13\r\nng-packagr                         16.2.3\r\nrxjs                               7.8.1\r\ntypescript                         5.1.6\r\nzone.js                            0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25996","RelatedDescription":"Open issue \"Safari 15 issue - ReferenceError\" (#25996)"},{"Id":"1933663980","IsPullRequest":true,"CreatedAt":"2023-10-09T19:26:38","Actor":"clydin","Number":"25991","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): add initial support for TS/NG in a worker","State":"open","Body":"WIP","Url":"https://github.com/angular/angular-cli/pull/25991","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): add initial support for TS/NG in a worker\" (#25991)"},{"Id":"1933544687","IsPullRequest":true,"CreatedAt":"2023-10-09T18:02:40","Actor":"angular-robot","Number":"25990","RawContent":null,"Title":"build: update github/codeql-action action to v2.22.1","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.22.0` -> `v2.22.1` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.22.1`](https://togithub.com/github/codeql-action/compare/v2.22.0...v2.22.1)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.22.0...v2.22.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25990","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.22.1\" (#25990)"},{"Id":"1932851893","IsPullRequest":true,"CreatedAt":"2023-10-09T17:42:00","Actor":"alan-agius4","Number":"25988","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): update ESM in memory file loader to work with Node.js 20","State":"closed","Body":"\r\nThis commit refactors the ESM Node.js in memory loader to work with Node.js 20+\r\n","Url":"https://github.com/angular/angular-cli/pull/25988","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): update ESM in memory file loader to work with Node.js 20\" (#25988)"},{"Id":"1931505067","IsPullRequest":false,"CreatedAt":"2023-10-09T17:40:16","Actor":"zip-fa","Number":"25979","RawContent":null,"Title":"browser-esbuild builder ignores sourceLocale in dev server","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n@angular-devkit/build-angular:browser\n\n### Description\n\nWhen using @angular-devkit/build-angular:browser, dev server sets `LOCALE_ID` from sourceLocale, but with browser-esbuild value is hardcoded to `en-US`.\r\nThis behavior breaks local development for me personally\n\n### Minimal Reproduction\n\nRepro available here: https://stackblitz.com/edit/angular-at-va4t5q?file=src%2Fmain.ts\r\nTo see the difference, change builder from `@angular-devkit/build-angular:browser-esbuild` to `@angular-devkit/build-angular:browser`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/material               17.0.0-next.6\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.4.0\r\ntypescript                      5.2.2\r\nzone.js                         0.13.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25979","RelatedDescription":"Closed issue \"browser-esbuild builder ignores sourceLocale in dev server\" (#25979)"},{"Id":"1932065216","IsPullRequest":true,"CreatedAt":"2023-10-09T17:40:15","Actor":"clydin","Number":"25982","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure localize polyfill and locale specifier are injected when not inlining","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser-esbuild`), the localize polyfill and the locale specifier for the configured source locale will now be injected into the application when available and the application is not configured to inline translations (`localize` option disabled or otherwise not used). This is useful for when developing a localized application with the development server or when the application is not translated but has a customized source locale.","Url":"https://github.com/angular/angular-cli/pull/25982","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure localize polyfill and locale specifier are injected when not inlining\" (#25982)"},{"Id":"1931303611","IsPullRequest":false,"CreatedAt":"2023-10-09T17:39:58","Actor":"zip-fa","Number":"25978","RawContent":null,"Title":"browser-esbuild builder is not validating proxy.conf.json","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nwebpack browser builder\n\n### Description\n\nHi. I have invalid proxy.conf.json file, with this content:\r\n\r\n```\r\n{\r\n  \"/cdn\": {\r\n    \"target\": \"https://website.com\",\r\n    \"secure\": false,\r\n    \"changeOrigin\": true,\r\n    \"logLevel\": \"debug\"\r\n  },\r\n  \"changeOrigin\": true\r\n}\r\n```\r\n\r\nLook at the \"changeOrigin\": true at the end.\r\nIt was in my project since angular v8, and now it breaks with esbuild.\r\nI removed this line after i finally realised what caused `ng serve` to fail. Maybe there should be some kind of validation before starting dev server?\n\n### Minimal Reproduction\n\nhttps://stackblitz.com/edit/angular-at-dwjtto?file=proxy.conf.json\n\n### Exception or Error\n\n```text\nTypeError: Cannot use 'in' operator to search for 'pathRewrite' in true\r\n    at normalizeProxyConfiguration (/node_modules/@angular-devkit/build-angular/src/builders/dev-server/load-proxy-config.js:146:27)\r\n    at loadProxyConfiguration (/node_modules/@angular-devkit/build-angular/src/builders/dev-server/load-proxy-config.js:98:30)\r\n    at async setupServer (/node_modules/@angular-devkit/build-angular/src/builders/dev-server/vite-server.js:232:19)\r\n    at async serveWithVite (/node_modules/@angular-devkit/build-angular/src/builders/dev-server/vite-server.js:118:41)\n```\n\n\n### Your Environment\n\n```text\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/material               17.0.0-next.5\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.4.0\r\ntypescript                      5.2.2\r\nzone.js                         0.13.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25978","RelatedDescription":"Closed issue \"browser-esbuild builder is not validating proxy.conf.json\" (#25978)"},{"Id":"1933316420","IsPullRequest":true,"CreatedAt":"2023-10-09T17:39:57","Actor":"clydin","Number":"25989","RawContent":null,"Title":"fix(@angular-devkit/build-angular): avoid dev-server proxy rewrite normalization when invalid value","State":"closed","Body":"When normalizing the proxy configuration for the Vite-based development server, the `pathRewrite` logic will now be skipped if the proxy entry is not an object and therefore invalid. This situation can occur if the proxy configuration JSON contains invalid properties.\r\n\r\nCloses #25978","Url":"https://github.com/angular/angular-cli/pull/25989","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): avoid dev-server proxy rewrite normalization when invalid value\" (#25989)"},{"Id":"1929971520","IsPullRequest":true,"CreatedAt":"2023-10-09T14:40:36","Actor":"alan-agius4","Number":"25973","RawContent":null,"Title":"fix(@angular-devkit/build-angular): improve sharing of TypeScript compilation state between various esbuild instances during rebuilds","State":"closed","Body":"This commit improves the logic to block and share a TypeScript results across multiple esbuild instances (browser and server builds) which fixes an issue that previously during rebuilds in some cases did not block the build correctly.\r\n","Url":"https://github.com/angular/angular-cli/pull/25973","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): improve sharing of TypeScript compilation state between various esbuild instances during rebuilds\" (#25973)"},{"Id":"1932516155","IsPullRequest":false,"CreatedAt":"2023-10-09T13:55:43","Actor":"zip-fa","Number":"25985","RawContent":null,"Title":"fetch HttpClient + signals is not triggering cdr","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHttpClient `withFetch()` will not trigger CDR with nested queries coming from `switchMap`\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-at-wvr9ue?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/material               17.0.0-next.6\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.4.0\r\ntypescript                      5.2.2\r\nzone.js                         0.13.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25985","RelatedDescription":"Closed issue \"fetch HttpClient + signals is not triggering cdr\" (#25985)"},{"Id":"1930211092","IsPullRequest":true,"CreatedAt":"2023-10-09T13:55:28","Actor":"alan-agius4","Number":"25975","RawContent":null,"Title":"perf(@angular-devkit/build-angular): only perform a server build when either prerendering, app-shell or ssr is enabled","State":"closed","Body":"\r\n\r\nPrior to this change, a server build was performed when all the \"server\" features were disabled but the `server` fields was specified.\r\n","Url":"https://github.com/angular/angular-cli/pull/25975","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): only perform a server build when either prerendering, app-shell or ssr is enabled\" (#25975)"},{"Id":"1932533529","IsPullRequest":true,"CreatedAt":"2023-10-09T13:55:10","Actor":"alan-agius4","Number":"25986","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fully downlevel async/await when using vite dev-server with caching enabled","State":"closed","Body":"\r\nPrior to this change, async/await in external packages were not being correctly downlevelled when using vite dev-server with cache enabled.\r\n\r\nCloses #25985\r\n","Url":"https://github.com/angular/angular-cli/pull/25986","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): fully downlevel async/await when using vite dev-server with caching enabled\" (#25986)"},{"Id":"1931756000","IsPullRequest":false,"CreatedAt":"2023-10-09T11:58:30","Actor":"digeomel","Number":"25980","RawContent":null,"Title":"noImplicitAny from parent tsconfig.json cannot be overridden in projects (libraries)","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI have an Angular 15 workspace with a main app and multiple independent projects (aka libraries). For the main app and some projects, I want to set `noImplicitAny: true` for the TypeScript compiler, but for some others, I want it to remain `false` (the default). The `tsconfig.lib.json` files inside the libraries are extending the main `tsconfig.json` from the root Angular folder (although I tried removing the `extends` as well, no difference, read below).\r\n\r\nThe problem is, no matter what I do, I keep getting errors about `noImplicitAny` from the libraries where it is even explicitly set to false! It seems that the TypeScript compiler disregards the individual `tsconfig.lib.json` settings inside those libraries and takes the global setting.\r\n\r\nMoreover, I tried moving the setting from the main `tsconfig.json` in the root folder, to the app-specific `src/tsconfig.app.json` and I still get the same error from the libraries!\r\n\r\nThese are the other contents of the main `tsconfig.json` file:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"baseUrl\": \"./\",\r\n        \"outDir\": \"./dist/out-tsc\",\r\n        \"module\": \"es2022\",\r\n        \"target\": \"es2022\",\r\n        \"lib\": [\"es2022\", \"dom\"],\r\n        \"forceConsistentCasingInFileNames\": true,\r\n        \"noImplicitOverride\": true,\r\n        \"noPropertyAccessFromIndexSignature\": true,\r\n        \"noImplicitReturns\": true,\r\n        \"noFallthroughCasesInSwitch\": true,\r\n        \"sourceMap\": true,\r\n        \"declaration\": false,\r\n        \"downlevelIteration\": true,\r\n        \"moduleResolution\": \"node\",\r\n        \"emitDecoratorMetadata\": false,\r\n        \"experimentalDecorators\": true,\r\n        \"allowSyntheticDefaultImports\": true,\r\n        \"importHelpers\": true,\r\n        \"typeRoots\": [\"node_modules/@types\"],\r\n        \"resolveJsonModule\": true,\r\n    },\r\n    \"angularCompilerOptions\": {\r\n        \"enableI18nLegacyMessageIdFormat\": false,\r\n        \"strictInjectionParameters\": true,\r\n        \"strictInputAccessModifiers\": true,\r\n        \"strictTemplates\": true\r\n    }\r\n}\r\n```\r\n\r\nWe are not using \"full\" TypeScript strict mode.\r\n\r\nWhat am I missing?\r\n\r\n### Minimal Reproduction\r\n\r\nThis is a repo which reproduces the problem:\r\n\r\nhttps://github.com/digeomel/angular-no-implicit-any\r\n\r\n\r\n### Exception or Error\r\n\r\n```shell\r\n ~  ng build\r\n✔ Browser application bundle generation complete.\r\n\r\nError: projects/test2/src/lib/test2.component.ts:14:25 - error TS7006: Parameter 'param' implicitly has an 'any' type.\r\n\r\n14     testMethodWithParam(param) {\r\n                           ~~~~~\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.2.4\r\nNode: 18.17.1\r\nPackage Manager: npm 10.2.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.4\r\n@angular-devkit/build-angular   16.2.4\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    16.2.4\r\n@schematics/angular             16.2.4\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI posted this issue first on the Typescript repo and I got the answer that this is the expected behaviour, but I thought that maybe the Angular compiler spawns individual, separate processes to compile each project, respecting the tsconfig file in each.\r\nIn any case, this seems counter-intuitive to me. If there's a workaround, I'd like to know it.\r\n\r\nHere's the issue on the Typescript repo:\r\nhttps://github.com/microsoft/TypeScript/issues/55983\r\n","Url":"https://github.com/angular/angular-cli/issues/25980","RelatedDescription":"Closed issue \"noImplicitAny from parent tsconfig.json cannot be overridden in projects (libraries)\" (#25980)"},{"Id":"1932259706","IsPullRequest":false,"CreatedAt":"2023-10-09T11:53:22","Actor":"danielhasugian","Number":"25983","RawContent":null,"Title":"ng-test is getting stuck after upgrade to angular 16.","State":"closed","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI would to run ng test --coverage, but it is not working after upgrade angular.\r\nNo error was found, it will keep processing until timeout.\r\n\r\n<img width=\"1563\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/11827558/d574ca39-f1e0-437c-9b8d-27c0f131a80c\">\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nPackage.json\r\n\r\n#\r\n```javascript\r\n{\r\n  \"name\": \"XXX\",\r\n  \"version\": \"6.0.0\",\r\n  \"config\": {\r\n    \"locale\": {\r\n      \"id\": \"in-ID\",\r\n      \"en\": \"en-US\"\r\n    }\r\n  },\r\n  \"scripts\": {\r\n    \"coverage\": \"ng test --code-coverage --no-progress --watch=false\",\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/cdk\": \"^16.2.4\",\r\n    \"@angular/common\": \"^16.2.5\",\r\n    \"@angular/compiler\": \"^16.2.5\",\r\n    \"@angular/core\": \"^16.2.5\",\r\n    \"@angular/forms\": \"^16.2.5\",\r\n    \"@angular/localize\": \"^16.2.5\",\r\n    \"@angular/platform-browser\": \"^16.2.5\",\r\n    \"@angular/platform-browser-dynamic\": \"^16.2.5\",\r\n    \"@angular/router\": \"^16.2.5\",\r\n    \"zone.js\": \"~0.13.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~16.2.2\",\r\n    \"@angular/animations\": \"^16.2.5\",\r\n    \"@angular/cli\": \"^16.2.2\",\r\n    \"@angular/compiler-cli\": \"^16.2.5\",\r\n    \"@angular/language-service\": \"^16.2.5\",\r\n    \"@types/file-saver\": \"0.0.1\",\r\n    \"@types/jasmine\": \"^3.3.8\",\r\n    \"@types/jwt-decode\": \"^1.4.30\",\r\n    \"@types/lodash\": \"^4.14.116\",\r\n    \"@types/node\": \"^20.6.3\",\r\n    \"jasmine-core\": \"~5.1.1\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"json-server\": \"^0.14.2\",\r\n    \"karma\": \"~6.3.4\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-cli\": \"^2.0.0\",\r\n    \"karma-istanbul-threshold\": \"^1.2.2\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"^2.1.0\",\r\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"4.9.5\"\r\n  }\r\n}\r\n```\r\n\r\nsrc/test.ts\r\n```javascript\r\nimport { getTestBed } from '@angular/core/testing';\r\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\r\n\r\nimport 'zone.js/dist/long-stack-trace-zone';\r\nimport 'zone.js/dist/zone-testing';\r\nimport 'zone.js/dist/sync-test';\r\nimport 'zone.js/dist/jasmine-patch';\r\nimport 'zone.js/dist/sync-test';\r\nimport 'zone.js/dist/async-test';\r\nimport 'zone.js/dist/fake-async-test';\r\n\r\n// Unfortunately there's no typing for the `__karma__` variable. Just declare it as any.\r\ndeclare const __karma__: any;\r\ndeclare const require: any;\r\n// Prevent Karma from running prematurely.\r\n__karma__.loaded = function () {\r\n};\r\n// First, initialize the Angular testing environment.\r\ngetTestBed().initTestEnvironment(\r\n  BrowserDynamicTestingModule,\r\n  platformBrowserDynamicTesting()\r\n);\r\n// Then we find all the tests.\r\nconst context = require.context('./', true, /\\.spec\\.ts$/);\r\n// And load the modules.\r\ncontext.keys().map(context);\r\n// Finally, start Karma to run the tests.\r\n__karma__.start();\r\n\r\n```\r\n\r\nsrc/tsconfig.spec.json\r\n```javascript\r\n{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../out-tsc/spec\",\r\n    \"baseUrl\": \".\",\r\n    \"types\": [\r\n      \"jasmine\",\r\n      \"node\"\r\n    ]\r\n  },\r\n  \"files\": [\r\n    \"test.ts\",\r\n    \"polyfills.ts\"\r\n  ],\r\n  \"include\": [\r\n    \"**/*.spec.ts\"\r\n  ]\r\n}\r\n```\r\n\r\nsrc/tsconfig.app.json\r\n```javascript\r\n{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../out-tsc/app\",\r\n    \"baseUrl\": \"\",\r\n    \"types\": []\r\n  },\r\n  \"files\": [\r\n    \"main.ts\",\r\n    \"polyfills.ts\"\r\n  ],\r\n  \"include\": [\r\n    \"src/**/*.d.ts\"\r\n  ]\r\n}\r\n\r\n```\r\n\r\n\r\nkarma.conf\r\n```javascript\r\nmodule.exports = function (config) {\r\n  config.set({\r\n    basePath: '',\r\n    frameworks: ['jasmine', '@angular-devkit/build-angular'],\r\n    plugins: [\r\n      require('karma-jasmine'),\r\n      // require('karma-phantomjs-launcher'),\r\n      require('karma-chrome-launcher'),\r\n      require('karma-jasmine-html-reporter'),\r\n      require('karma-istanbul-threshold'),\r\n      require('karma-coverage'),\r\n      require('@angular-devkit/build-angular/plugins/karma')\r\n    ],\r\n    client:{\r\n      clearContext: false, // leave Jasmine Spec Runner output visible in browser\r\n      jasmine: {\r\n        random: true\r\n      }\r\n    },\r\n    mime: {\r\n      'text/x-typescript': ['ts','tsx']\r\n    },\r\n    files: [],\r\n    coverageReporter: {\r\n      // specify a common output directory\r\n      dir: 'coverage',\r\n      reporters: [\r\n        // reporters not supporting the `file` property\r\n        { type: 'html', subdir: 'report-html' },\r\n        { type: 'lcov', subdir: 'report-lcov' },\r\n        // reporters supporting the `file` property, use `subdir` to directly\r\n        // output them in the `dir` directory\r\n        { type: 'cobertura', subdir: '.', file: 'cobertura.txt' },\r\n        { type: 'lcovonly', subdir: '.', file: 'report-lcovonly.txt' },\r\n        { type: 'teamcity', subdir: '.', file: 'teamcity.txt' },\r\n        { type: 'text', subdir: '.', file: 'text.txt' },\r\n        { type: 'text-summary', subdir: '.', file: 'text-summary.txt' },\r\n      ]\r\n    },\r\n    istanbulThresholdReporter: {\r\n      src: 'coverage/coverage-final.json',\r\n      reporters: ['text'],\r\n      thresholds: {\r\n        global: {\r\n          statements: 90,\r\n          branches: 90,\r\n          lines: 70,\r\n          functions: 90,\r\n        },\r\n        each: {\r\n          statements: 80,\r\n          branches: 80,\r\n          lines: 60,\r\n          functions: 80,\r\n        }\r\n      }\r\n    },\r\n    angularCli: {\r\n      environment: 'dev'\r\n    },\r\n    reporters: config.angularCli && config.angularCli.codeCoverage\r\n              ? ['progress', 'coverage']\r\n              : ['progress', 'kjhtml'],\r\n    port: 9876,\r\n    colors: true,\r\n    logLevel: config.LOG_DEBUG,\r\n    autoWatch: false,\r\n    browsers: [ 'ChromeHeadlessNoSandbox'],\r\n    // browsers: [ 'PhantomJS'],\r\n    // browsers: [ 'Chrome'],\r\n    singleRun: true,\r\n    captureTimeout: 10000,\r\n    browserDisconnectTolerance: 3,\r\n    browserDisconnectTimeout : 10000,\r\n    browserNoActivityTimeout : 10000,\r\n    customLaunchers: {\r\n      ChromeHeadlessNoSandbox: {\r\n        base: 'ChromeHeadless',\r\n        flags: [\r\n          '--no-sandbox',\r\n          '--disable-gpu',\r\n          '--enable-logging',\r\n          '--no-default-browser-check',\r\n          '--no-first-run',\r\n          '--disable-default-apps',\r\n          '--disable-popup-blocking',\r\n          '--disable-translate',\r\n          '--disable-background-timer-throttling',\r\n          '--disable-renderer-backgrounding',\r\n          '--disable-device-discovery-notifications',\r\n          '--remote-debugging-port=9222',\r\n          '--disable-web-security'\r\n        ]\r\n      }\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nangular.json\r\n```javascript\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"main\": \"src/test.ts\",\r\n            \"karmaConfig\": \"./karma.conf.js\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"src/tsconfig.spec.json\",\r\n            \"scripts\": [\r\n            ],\r\n            \"styles\": [\r\n              \"src/styles.sass\",\r\n              \"src/assets/css/bootstrap.css\",\r\n              \"src/assets/css/core.css\",\r\n              \"src/assets/css/components.css\",\r\n              \"src/assets/css/colors.css\",\r\n              \"src/assets/plugins/font-awesome-4.7.0/css/font-awesome.min.css\",\r\n              \"src/assets/css/styles.css\"\r\n            ],\r\n            \"assets\": [\r\n            ]\r\n          }\r\n        }\r\n```\r\n\r\n### Exception or Error\r\n\r\n```text\r\nGetting stuck and reach timeout.\r\nSee the description\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.3\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cdk                    16.2.5\r\n@angular/cli                    16.2.3\r\n@angular/language-service       16.2.5\r\n@schematics/angular             16.2.3\r\nrxjs                            6.6.7\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```","Url":"https://github.com/angular/angular-cli/issues/25983","RelatedDescription":"Closed issue \"ng-test is getting stuck after upgrade to angular 16.\" (#25983)"},{"Id":"1932631605","IsPullRequest":false,"CreatedAt":"2023-10-09T10:58:59","Actor":"zip-fa","Number":"25987","RawContent":null,"Title":"ng build: An unexpected error occurred: [object Object]","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI can't build newly generated app with `ng new` on angular v17 and application builder\n\n### Minimal Reproduction\n\nnpm i -g @angular/cli@17.0.0-next.7\r\nng new test-project (scss yes, ssr yes)\r\nnpm run build\n\n### Exception or Error\n\n```text\nAn unexpected error occurred: [object Object]\r\n\r\nng build --verbose doesn't give more info\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.7\r\nNode: 20.8.0 (Unsupported)\r\nPackage Manager: npm 10.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25987","RelatedDescription":"Closed issue \"ng build: An unexpected error occurred: [object Object]\" (#25987)"},{"Id":"1932441424","IsPullRequest":true,"CreatedAt":"2023-10-09T10:38:58","Actor":"angular-robot","Number":"25984","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25984","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25984)"},{"Id":"1931889547","IsPullRequest":true,"CreatedAt":"2023-10-09T08:34:09","Actor":"clydin","Number":"25981","RawContent":null,"Title":"feat(@angular-devkit/build-angular): enable localize support for SSR with application builder","State":"closed","Body":"With the output path directory structure updates in place, the localize support for SSR has now been enabled. This allows for the `application` builder to produce both browser and server output that is localized based on the i18n configuration for the project.","Url":"https://github.com/angular/angular-cli/pull/25981","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): enable localize support for SSR with application builder\" (#25981)"},{"Id":"1930917388","IsPullRequest":true,"CreatedAt":"2023-10-09T08:17:36","Actor":"clydin","Number":"25976","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support component style budgets in esbuild builders","State":"closed","Body":"The `anyComponentStyle` budget type is now supported when using bundle budgets in the esbuild-based builders (`browser-esbuild`/`application`). The configuration and behavior are intended to match that of the Webpack-based  builder (`browser`). With this addition, the bundle budget feature is now at feature parity with the Webpack-based builder. The implementation of this budget type requires less code than the Webpack implementation due to the component stylesheet information being present in the application's output metadata. This removes the need for a custom budget plugin to extract the stylesheet size information during the build.","Url":"https://github.com/angular/angular-cli/pull/25976","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support component style budgets in esbuild builders\" (#25976)"},{"Id":"1931193954","IsPullRequest":true,"CreatedAt":"2023-10-09T08:17:19","Actor":"angular-robot","Number":"25977","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | minor | `v2.21.9` -> `v2.22.0` |\n| [ossf/scorecard-action](https://togithub.com/ossf/scorecard-action) | action | minor | `v2.2.0` -> `v2.3.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.22.0`](https://togithub.com/github/codeql-action/compare/v2.21.9...v2.22.0)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.9...v2.22.0)\n\n</details>\n\n<details>\n<summary>ossf/scorecard-action (ossf/scorecard-action)</summary>\n\n### [`v2.3.0`](https://togithub.com/ossf/scorecard-action/releases/tag/v2.3.0)\n\n[Compare Source](https://togithub.com/ossf/scorecard-action/compare/v2.2.0...v2.3.0)\n\n#### What's Changed\n\n-   :seedling: Bump github.com/ossf/scorecard/v4 from v4.11.0 to v4.13.0 by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1270](https://togithub.com/ossf/scorecard-action/pull/1270)\n    -   For a full changelist of what this includes, see the [v4.12.0](https://togithub.com/ossf/scorecard/releases/tag/v4.12.0) and [v4.13.0](https://togithub.com/ossf/scorecard/releases/tag/v4.13.0) release notes\n-   :sparkles: Send rekor tlog index to webapp when publishing results by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1169](https://togithub.com/ossf/scorecard-action/pull/1169)\n-   :bug: Prevent url clipping for GHES instances by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1225](https://togithub.com/ossf/scorecard-action/pull/1225)\n\n##### Documentation\n\n-   :book: Update access rights needed to see the results in code scanning by [@&#8203;rajbos](https://togithub.com/rajbos) in [https://github.com/ossf/scorecard-action/pull/1229](https://togithub.com/ossf/scorecard-action/pull/1229)\n-   :book: Add package comments. by [@&#8203;spencerschrock](https://togithub.com/spencerschrock) in [https://github.com/ossf/scorecard-action/pull/1221](https://togithub.com/ossf/scorecard-action/pull/1221)\n-   :book: Add SECURITY.md file by [@&#8203;david-a-wheeler](https://togithub.com/david-a-wheeler) in [https://github.com/ossf/scorecard-action/pull/1250](https://togithub.com/ossf/scorecard-action/pull/1250)\n-   :book: Fix typo in token input docs by [@&#8203;aabouzaid](https://togithub.com/aabouzaid) in [https://github.com/ossf/scorecard-action/pull/1258](https://togithub.com/ossf/scorecard-action/pull/1258)\n\n#### New Contributors\n\n-   [@&#8203;david-a-wheeler](https://togithub.com/david-a-wheeler) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1250](https://togithub.com/ossf/scorecard-action/pull/1250)\n-   [@&#8203;aabouzaid](https://togithub.com/aabouzaid) made their first contribution in [https://github.com/ossf/scorecard-action/pull/1258](https://togithub.com/ossf/scorecard-action/pull/1258)\n\n**Full Changelog**: https://github.com/ossf/scorecard-action/compare/v2.2.0...v2.3.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25977","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#25977)"},{"Id":"1930021029","IsPullRequest":true,"CreatedAt":"2023-10-06T17:51:28","Actor":"alan-agius4","Number":"25974","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): move `SourceFileCache` into dedicated file","State":"closed","Body":"\r\nThis is to reduce the code in `compiler-plugin.ts`\r\n","Url":"https://github.com/angular/angular-cli/pull/25974","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): move `SourceFileCache` into dedicated file\" (#25974)"},{"Id":"1929959861","IsPullRequest":false,"CreatedAt":"2023-10-06T11:22:32","Actor":"eneajaho","Number":"25972","RawContent":null,"Title":"application builder: cannot opt-out from patched zone events using zone-flags because of bundling issue with polyfills.","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I need to opt-out from zone patched events, before we had to create a zone-flags.ts file and include it in polyfills. \r\n\r\nAnd the zone-flags would register a field in window object. \r\n\r\nNow, we do it, esbuild will bundle the polyfills like this\r\n![CleanShot 2023-10-06 at 13 19 36@2x](https://github.com/angular/angular-cli/assets/25394362/44c941b5-005f-444d-87a4-8f6f707c117b)\r\nWhat's the issue with it? Because of module import hoisting, the import will be loaded first (means zone.js will be loaded first) and the side-effect will be next, means that zone.js won't read the flags we put in the global window. \n\n### Minimal Reproduction\n\nAdd zone-flags.ts file \r\nAdd it to tsconfig.json\r\nAdd it first in the list of polyfills in angular.json \n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.7\r\nNode: 18.17.0\r\nPackage Manager: yarn 3.4.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core\r\n... elements, forms, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25972","RelatedDescription":"Open issue \"application builder: cannot opt-out from patched zone events using zone-flags because of bundling issue with polyfills.\" (#25972)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1935845574","IsPullRequest":true,"CreatedAt":"2023-10-10T17:08:04","Actor":"zarend","Number":"27925","RawContent":null,"Title":"refactor(material/tree): fork tests for using and not using tree control","State":"open","Body":"Fork mat-tree tests to mat-tree-using-tree-control.Remove uses of deprecated members from mat-tree tests. Tests in mat-tree-using-tree-control remain unchanged.\r\n\r\nThis commit message will be squashed away after merging in cdk-tree-revamp.","Url":"https://github.com/angular/components/pull/27925","RelatedDescription":"Open PR \"refactor(material/tree): fork tests for using and not using tree control\" (#27925)"},{"Id":"1935827780","IsPullRequest":true,"CreatedAt":"2023-10-10T17:00:52","Actor":"mmalerba","Number":"27924","RawContent":null,"Title":"feat(material/theming): Add 'base' theming dimension to all components","State":"open","Body":"Adds a `base` theming dimension to go along with `color`,`typography`, and `density`. The base dimension includes styles such as border-radiuses that do not vary with the chosen color, typography, or density, but may vary depending on the theming system (e.g. Material 2 vs Material 3).\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by `mat.<component>-theme` that are not emitted by any of: `mat.<component>-color`, `mat.<component>-typography`, or `mat.<component>-density`. If you rely on the partial mixins only and don't call `mat.<component>-theme`, you can add `mat.<component>-base` to get the missing styles. Alternatively you can call `mat.all-component-bases` to get just the base styles for all components.","Url":"https://github.com/angular/components/pull/27924","RelatedDescription":"Open PR \"feat(material/theming): Add 'base' theming dimension to all components\" (#27924)"},{"Id":"1928907520","IsPullRequest":true,"CreatedAt":"2023-10-10T16:18:36","Actor":"mmalerba","Number":"27905","RawContent":null,"Title":"fix(material/slide-toggle): move unthemable tokens to theme mixin","State":"closed","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.slide-toggle-theme that are not emitted by any of: mat.slide-toggle-color, mat.slide-toggle-typography, mat.slide-toggle-density. If you rely on the partial mixins only and don't call mat.slide-toggle-theme, you can add mat.slide-toggle-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27905","RelatedDescription":"Closed or merged PR \"fix(material/slide-toggle): move unthemable tokens to theme mixin\" (#27905)"},{"Id":"1935441584","IsPullRequest":false,"CreatedAt":"2023-10-10T14:00:35","Actor":"alirezamirian","Number":"27923","RawContent":null,"Title":"feat(cdk/a11y): Make CdkMonitorFocus directive standalone","State":"open","Body":"### Feature Description\n\nThere doesn't seem to be anything preventing this component from be standalone. Making it standalone improves composability.\n\n### Use Case\n\nA few directives (one of them being `cdkMonitorElementFocus`) are needed for a specific use case, and I'd like to extract that composition of directives into a reusable directive. Using `hostDirectives` allows to do so, but the underlying directives need to be standalone. ","Url":"https://github.com/angular/components/issues/27923","RelatedDescription":"Open issue \"feat(cdk/a11y): Make CdkMonitorFocus directive standalone\" (#27923)"},{"Id":"1935364779","IsPullRequest":false,"CreatedAt":"2023-10-10T13:22:10","Actor":"mit-bhalodi","Number":"27922","RawContent":null,"Title":"feat(DatePicker): Month range selection in mat-datepicker / mat-calendar","State":"open","Body":"### Feature Description\n\nProposed Implementation:\r\nI suggest adding an option to the **mat-date-picker/mat-calendar** component that allows users to select a range of dates by clicking on a start date and an end date within the same calendar view. This would provide a more intuitive and efficient way to handle month-based selections. the similar implementation is observed in **mat-date-range-picker**\r\n\r\n\n\n### Use Case\n\nThe month range selection feature would be particularly useful in scenarios where users need to filter or select data over a specific period, such as monthly reports, statistics, or date-based filtering. Eg. salary reports, time and attendance reports etc","Url":"https://github.com/angular/components/issues/27922","RelatedDescription":"Open issue \"feat(DatePicker): Month range selection in mat-datepicker / mat-calendar\" (#27922)"},{"Id":"1935330805","IsPullRequest":false,"CreatedAt":"2023-10-10T13:04:31","Actor":"ilyakonrad","Number":"27921","RawContent":null,"Title":"bug(matInput): matInput with type \"date\" has incorrect height","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nmatInput with appearance \"outline\" with type \"date\" has hardcoded height of 16px, which combining with font-size of 16px results in cropping of letters.\r\n\r\n<img width=\"206\" alt=\"image\" src=\"https://github.com/angular/components/assets/25200186/30ce777c-23d0-439d-a366-938bf802ef08\">\r\n\n\n### Reproduction\n\nhttps://stackblitz.com/edit/xv3jy5?file=src%2Fexample%2Fform-field-appearance-example.html,src%2Fexample%2Fform-field-appearance-example.ts\r\n\r\n\n\n### Expected Behavior\n\nNothing should be cropped.\n\n### Actual Behavior\n\nEmpty input element text gets cropped.\n\n### Environment\n\nAngular CLI: 15.2.9\r\nNode: 18.12.0\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------     \r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.2.9\r\n@angular/fire                   7.5.0\r\n@schematics/angular             15.2.9\r\nrxjs                            7.8.0\r\ntypescript                      4.8.4\r\nwebpack                         5.76.0","Url":"https://github.com/angular/components/issues/27921","RelatedDescription":"Open issue \"bug(matInput): matInput with type \"date\" has incorrect height\" (#27921)"},{"Id":"1929129041","IsPullRequest":true,"CreatedAt":"2023-10-09T19:53:08","Actor":"zarend","Number":"27908","RawContent":null,"Title":"fix(cdk/tree): update active item on focus","State":"closed","Body":"[fix(cdk/tree): update active item on focus](https://github.com/angular/components/pull/27908/commits/1c0149354a31f70626f3b0d4718fef6dd806f8b9) \r\n\r\nUpdate CdkTreeNode, TreeKeyManager and Tree \"Load More\" example\r\nregarding progrmatic focus.\r\n\r\n - In CdkTreeNode, update the active item on the focus event.\r\n - expose TreeKeyManager.updateActiveItem\r\n - remove TreeKeyManager.onClick\r\n - In \"Load More\" example, when clicking \"Load More\", focus first node\r\n   that is added.","Url":"https://github.com/angular/components/pull/27908","RelatedDescription":"Closed or merged PR \"fix(cdk/tree): update active item on focus\" (#27908)"},{"Id":"1930763789","IsPullRequest":true,"CreatedAt":"2023-10-09T18:33:35","Actor":"BobobUnicorn","Number":"27916","RawContent":null,"Title":"feat(cdk/tree): deprecate MatTreeFlattener","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27916","RelatedDescription":"Closed or merged PR \"feat(cdk/tree): deprecate MatTreeFlattener\" (#27916)"},{"Id":"1933062257","IsPullRequest":false,"CreatedAt":"2023-10-09T13:24:10","Actor":"jbchr","Number":"27920","RawContent":null,"Title":"bug(mat-datepicker): Datepicker cannot be closed when animating","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nIntroduced in https://github.com/angular/components/pull/25843\r\n\r\n### Description\r\n\r\nWe have implemented a year-only-picker using mat-datepicker in listening to the (yearSelected) event and then closing the datepicker manually. However, if the user selects a new year fast enough the datepicker is still opening and animating (_isAnimating is true) and therefore the datepicker is not closed.  This was introduced in https://github.com/angular/components/pull/25843\r\n\r\nThe problem is that the `_isAnimating` property and the `_animationDone` subject are both not exposed through public API so we cannot wait for the animation to be finished to close the picker. However, exposing it would be not a good solution as this would require us to have knowledge of the internals of the component to implement the solution. Rather, the datepicker should be fixed so the close event is scheduled for after when the animation is finished.\r\n\r\nThanks!\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nIt simulates opening the datepicker and then closing it very fast through setTimeout to visualize the issue.\r\nhttps://stackblitz.com/edit/datepicker-bug-material\r\n\r\n### Expected Behavior\r\n\r\nEither datepicker will close even if animating or datepicker will be scheduled for closing so it closes at the end of the animation.\r\n\r\n### Actual Behavior\r\n\r\nDatepicker is not closing while animating\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.8\r\n- CDK/Material: 16.2.7\r\n- Browser(s): Chrome Version 117.0.5938.149  - all browsers.\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs 13.2.1  - all operating systems\r\n","Url":"https://github.com/angular/components/issues/27920","RelatedDescription":"Open issue \"bug(mat-datepicker): Datepicker cannot be closed when animating\" (#27920)"},{"Id":"1930940558","IsPullRequest":true,"CreatedAt":"2023-10-06T21:13:27","Actor":"BobobUnicorn","Number":"27919","RawContent":null,"Title":"feat(cdk/tree): add demo for NestedTreeNode w/childrenAccessor","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27919","RelatedDescription":"Open PR \"feat(cdk/tree): add demo for NestedTreeNode w/childrenAccessor\" (#27919)"},{"Id":"1930774687","IsPullRequest":true,"CreatedAt":"2023-10-06T19:13:35","Actor":"josephperrott","Number":"27917","RawContent":null,"Title":"Migrate snapshots jobs to GHA","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27917","RelatedDescription":"Closed or merged PR \"Migrate snapshots jobs to GHA\" (#27917)"},{"Id":"1930810132","IsPullRequest":true,"CreatedAt":"2023-10-06T19:13:27","Actor":"josephperrott","Number":"27918","RawContent":null,"Title":"Complete migration to GHA","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27918","RelatedDescription":"Open PR \"Complete migration to GHA\" (#27918)"},{"Id":"1930164736","IsPullRequest":true,"CreatedAt":"2023-10-06T13:14:06","Actor":"angular-robot","Number":"27915","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2807276` -> `6e0fdac` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `16b9f55` -> `f128af3` |\n| angular/dev-infra | action | digest | `fb30926` -> `c4a2ff4` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/components/pull/27915","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#27915)"},{"Id":"1930088478","IsPullRequest":false,"CreatedAt":"2023-10-06T12:36:29","Actor":"masartbenji","Number":"27914","RawContent":null,"Title":"bug(MatDialog): Elements under dialog not rerendered rightly after closing","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an encoding page on angular, in that page i can open a dialog of article in not editable mode, i have a button to switch article in edition mode. After to switch the component in edit, and when I close dialog, some components who were under dialog are not rerendered correctly, so I have, per example one truncated input. In the article dialog, I have one p-editor that come from PrimeNg library, and when I remove it from dialog, the bug disappeared. This bug doesn't occur on Firefox\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nWhen I close dialog, I want my inputs displaying rightly\n\n### Actual Behavior\n\nI have an encoding page on angular, in that page i can open a dialog of article in not editable mode, i have a button to switch article in edition mode. After to switch the component in edit, and when I close dialog, some components who were under dialog are not rerendered correctly, so I have, per example one truncated input. In the article dialog, I have one p-editor that come from PrimeNg library, and when I remove it from dialog, the bug disappeared.\n\n### Environment\n\n- Angular: 15\r\n- `CDK/Material:` 15.2.9\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27914","RelatedDescription":"Open issue \"bug(MatDialog): Elements under dialog not rerendered rightly after closing\" (#27914)"},{"Id":"1928442589","IsPullRequest":true,"CreatedAt":"2023-10-06T12:32:16","Actor":"json-derulo","Number":"27903","RawContent":null,"Title":"docs(material/form-field): use correct input color in custom control example","State":"closed","Body":"In the Form Field docs, there is an example how to create a custom control. In this example, the inputs of the custom control don't inherit the text color from the form field. In light mode, this is just fine. But when switching to a dark mode theme, the color of the inputs default to the browser default (black):\r\n\r\n<img width=\"271\" alt=\"image\" src=\"https://github.com/angular/components/assets/18580672/536f00bc-f750-4f73-9491-437c820bbeca\">\r\n\r\nIt should inherit the color from the form field, which is fixed by this PR.","Url":"https://github.com/angular/components/pull/27903","RelatedDescription":"Closed or merged PR \"docs(material/form-field): use correct input color in custom control example\" (#27903)"},{"Id":"1929960462","IsPullRequest":false,"CreatedAt":"2023-10-06T11:22:57","Actor":"shammy8","Number":"27913","RawContent":null,"Title":"bug(menu): Right click closes CDK Menu but not Component Menu","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen a mat-menu is opened and the user right clicks anywhere outside the mat-menu it does not close. Whereas for the cdkMenu when you right click outside the menu it close it. Is this the expected behaviour? \r\n\r\nAnd is there any way to make the cdkMenu behave the same as mat-menu?\r\n\r\nThis makes inspecting the cdkMenu/cdkMenuItem etc. very hard as the menu disappears in the dom before I can open the console and inspect it. \r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/run?file=src%2Fapp%2Fcdk-menu-standalone-menu-example.ts\r\nSteps to reproduce:\r\n1. Open the cdkMenu\r\n2. Right click outside the menu\r\n3. The menu closes\r\n\r\nStackBlitz link: https://stackblitz.com/run?file=src%2Fapp%2Fmenu-icons-example.ts\r\nSteps to reproduce:\r\n1. Open the mat-menu\r\n2. Right click outside the menu\r\n3. The menu stays open\r\n\r\n### Expected Behavior\r\n\r\nI expect the cdkMenu and mat-menu to behave the same\r\n\r\n### Actual Behavior\r\n\r\ncdkMenu and mat-menu do not behave the same when right clicking outside the menu.\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27913","RelatedDescription":"Open issue \"bug(menu): Right click closes CDK Menu but not Component Menu\" (#27913)"},{"Id":"1929940257","IsPullRequest":false,"CreatedAt":"2023-10-06T11:11:48","Actor":"ilyakonrad","Number":"27912","RawContent":null,"Title":"docs-bug(website): Changing the version in the website's header should redirect to the page you were on","State":"open","Body":"### Documentation Feedback\n\nImagine you're reading docs on mat-select of version **x** and you want to check what changed in version **y**. When you select a different version in the header, you're redirected to the main page.\r\n\r\nIt's really annoying to do two unnecessary clicks and scrolling when trying to compare the same component in different versions. Especially while headaching your way through upgrade from version 14 to 16.\r\n\r\nAlso a way to select a different version by opening it in a separate tab (like a link via mousewheel button) would be really, I mean really useful. That way you can see the difference even better and basically compare things side by side.\r\n\r\nThe solution might also be to put a version select inside of the component page, but again it would have much more value if I could open another version in a new tab.\r\n\r\nLet's make the documentation of the component library that represents very good UI/UX design as easy to use and as user-friendly as the design itself.\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/27912","RelatedDescription":"Open issue \"docs-bug(website): Changing the version in the website's header should redirect to the page you were on\" (#27912)"},{"Id":"1929849390","IsPullRequest":false,"CreatedAt":"2023-10-06T10:15:24","Actor":"magentaRE","Number":"27911","RawContent":null,"Title":"bug(sidenav/drawer/focustrap): NVDA announces \"blank\" when interacting with focus trap","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nlegacy non MDC-based components\n\n### Description\n\n`mat-sidenav` generates two `<div>` elements that have tabindex set to 0, **even if the sidenav is closed**. This happens in `mode=\"over\"` of sidenav:\r\n\r\n`<div class=\"cdk-visually-hidden cdk-focus-trap-anchor\" aria-hidden=\"true\" tabindex=\"0\"></div>`\r\n\r\nAlthough they have `aria-hidden=\"true\"`, they can be tabbed into which creates **major** accessibility issue for keyboard users. In previous versions of sidenav, the `tabindex=\"0\"` was only added **after** the sidenav was opened and it was **removed** when user closed the sidenav. User can tab onto those 2 `div`s (with the sidenav closed). That creates 2 invisible elements which can confuse user while navigating through the website.\r\n\r\nThis issue is basically same as #27623, but in that issue, the concern was that Axe core found 2 issues, which is different to this issue. This issue is concerned about tabbing onto \"invisible\" elements. IMO, this is a regression bug and adding `tabindex=\"0\"` should be done only when the sidenav is opened. Also, will #27629 fix this issue as well?\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/rwjkdz-juypse?file=src%2Fexample%2Fsidenav-autosize-example.html\r\nSteps to reproduce:\r\n1. Open any `mat-sidenav` example with the `mode=\"over\"` in the new MDC components.\r\n2. Use keyboard to navigate through the page.\r\n3. User tabs onto 2 invisible elements created by the sidenav (with sidenav being closed)\r\n\n\n### Expected Behavior\n\nThere are no elements that can be tabbed onto created by sidenav when the sidenav is closed.\n\n### Actual Behavior\n\nThere are 2 `<div>` elements (used for creating focus trap) encapsulating sidenav that can be tabbed onto created by sidenav (with the sidenav closed).\n\n### Environment\n\n- Angular: 16.2.7\r\n- CDK/Material: 16.2.7\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/27911","RelatedDescription":"Open issue \"bug(sidenav/drawer/focustrap): NVDA announces \"blank\" when interacting with focus trap\" (#27911)"},{"Id":"1928829825","IsPullRequest":true,"CreatedAt":"2023-10-06T04:39:25","Actor":"wagnermaciel","Number":"27904","RawContent":null,"Title":"fix(material/button): fix color tokens of raised buttons","State":"closed","Body":"* fix bug where the raised button is accidentally using the flat button color tokens","Url":"https://github.com/angular/components/pull/27904","RelatedDescription":"Closed or merged PR \"fix(material/button): fix color tokens of raised buttons\" (#27904)"},{"Id":"1929362771","IsPullRequest":true,"CreatedAt":"2023-10-06T03:10:47","Actor":"wagnermaciel","Number":"27910","RawContent":null,"Title":"fix(material/button): fix outlined button focus color","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27910","RelatedDescription":"Open PR \"fix(material/button): fix outlined button focus color\" (#27910)"},{"Id":"1929157041","IsPullRequest":false,"CreatedAt":"2023-10-05T22:18:07","Actor":"Achilles1515","Number":"27909","RawContent":null,"Title":"bug(material/chips): MatChipSelectionChange not emitting on certain deselections","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`selectionChange` output for `MatChipOption` is [stated to be](https://material.angular.io/components/chips/api#MatChipOption):\r\n>  Emitted when the chip is selected or **deselected**.\r\n\r\nBut this is not true for deselection. It appears the event is only emitted for deselection when **the chip in question** is manually selected/toggled by the user. When the `MatChipListbox` is **in single-select mode and a chip is currently selected**, selecting a different chip means the prior chip is deselected --> deselecting should mean emitting the `selectionChange` event, but it is not happening in this scenario.\r\n\r\nSee the below StackBlitz link.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/firqg1\r\nSteps to reproduce:\r\n\r\n(First chip is initially selected)\r\n1.  Click on the Second chip.\r\n2. First chip becomes deselected, but no `selectionChange` output event was emitted (in this case, the `MatChipSelectionChange` object should be logged to the console).\r\n\r\n\r\n### Expected Behavior\r\n\r\n`selectionChange` output for the First chip should have emitted.\r\n\r\n### Actual Behavior\r\n\r\n`selectionChange` output for the First chip does not emit.\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16.2.7 (latest)\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27909","RelatedDescription":"Open issue \"bug(material/chips): MatChipSelectionChange not emitting on certain deselections\" (#27909)"},{"Id":"1928995432","IsPullRequest":true,"CreatedAt":"2023-10-05T20:44:08","Actor":"wagnermaciel","Number":"27907","RawContent":null,"Title":"fix: ci lint failure","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27907","RelatedDescription":"Closed or merged PR \"fix: ci lint failure\" (#27907)"},{"Id":"1928940504","IsPullRequest":true,"CreatedAt":"2023-10-05T19:38:17","Actor":"wagnermaciel","Number":"27906","RawContent":null,"Title":"refactor(material/button): switch outlined button to tokens theming API","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27906","RelatedDescription":"Open PR \"refactor(material/button): switch outlined button to tokens theming API\" (#27906)"},{"Id":"1926561705","IsPullRequest":true,"CreatedAt":"2023-10-05T17:11:07","Actor":"mmalerba","Number":"27898","RawContent":null,"Title":"fix(material/theming): Fix subtle bug in current-selector-or-root","State":"closed","Body":"There was a sublte bug in the previous implementation. Consider the case:\r\n\r\n```scss\r\ndiv {\r\n  @include current-selector-or-root() {\r\n    color: red;\r\n  }\r\n  color: green;\r\n}\r\n```\r\n\r\nThe previous implementation lifted the `color: red;` into a separate selector block that came *after* the initial one, resulting in the order being flipped:\r\n\r\n```css\r\ndiv {\r\n  color: green;\r\n}\r\ndiv {\r\n  color: red;\r\n}\r\n```\r\n\r\nThe new code will produce the correct ordering:\r\n\r\n```css\r\ndiv {\r\n  color: red;\r\n  color: green;\r\n}\r\n```","Url":"https://github.com/angular/components/pull/27898","RelatedDescription":"Closed or merged PR \"fix(material/theming): Fix subtle bug in current-selector-or-root\" (#27898)"},{"Id":"1927741383","IsPullRequest":false,"CreatedAt":"2023-10-05T08:54:04","Actor":"saithis","Number":"27902","RawContent":null,"Title":"feat(datepicker): use invalid date instead of null when the date input it not empty","State":"open","Body":"### Feature Description\n\nSet the value to invalid date instead of null, when the input is filled, but invalid. As this would be a breaking change, maybe introduce a setting to optionally enable this.\n\n### Use Case\n\nCurrently when you use a datepicker without ngModel or reactive forms the input wont get red for invalid inputs and the value is null. So you cant differenciate between empty input and something invalid. Even aria-invalid is \"false\". \r\n\r\nWith this feature you could solve this.","Url":"https://github.com/angular/components/issues/27902","RelatedDescription":"Open issue \"feat(datepicker): use invalid date instead of null when the date input it not empty\" (#27902)"},{"Id":"1926761752","IsPullRequest":true,"CreatedAt":"2023-10-04T18:34:40","Actor":"wagnermaciel","Number":"27901","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27901","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#27901)"},{"Id":"1926743497","IsPullRequest":true,"CreatedAt":"2023-10-04T18:17:57","Actor":"wagnermaciel","Number":"27900","RawContent":null,"Title":"docs: release notes for the v16.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27900","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.7 release\" (#27900)"},{"Id":"1926724713","IsPullRequest":true,"CreatedAt":"2023-10-04T18:15:38","Actor":"wagnermaciel","Number":"27899","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27899","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#27899)"},{"Id":"1926492203","IsPullRequest":false,"CreatedAt":"2023-10-04T15:31:50","Actor":"souzaemmanuel","Number":"27897","RawContent":null,"Title":"bug(mat-divider): mat-divider not displaying when printing or saving in Firefox","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using window.print() function or press Ctrl + P to print or save a webpage, the mat-divider component is not visible in the printed or saved output. However, it displays correctly on the screen in Chrome.\r\n\r\nI was able to reproduce using the StackBlitz code provided for the angular material official component page: https://v12.material.angular.io/components/divider/overview\r\n\r\nThere is a way to make it work and display when printing and saving using Firefox?\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/angular/byleybgjaxy?file=src%2Fapp%2Fdivider-overview-example.ts\r\n\r\n**Steps to reproduce:**\r\n1. Open the StackBlitz (or another page that contains mat-divider) in Firefox.\r\n2. Type on the console window.print() or ctrl + p.\r\n3. Observe that the mat-divider component is missing in the printed or saved output.\r\n\r\n**Using chrome:**\r\n ![image](https://github.com/angular/components/assets/31477606/26df1781-3513-496f-a4e5-e6c48b8c1820)\r\n\r\n**Using Firefox:** \r\n![image](https://github.com/angular/components/assets/31477606/cd47c140-31f2-4da5-86fc-c2427421cbf2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nDisplay the divider when printing and saving using Firefox\r\n\r\n### Actual Behavior\r\n\r\nThe mat-divider component is not visible in the printed or saved output.\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.13\r\n- CDK/Material: 12.2.17\r\n- Browser(s): Firefox  version 118.0.1 (64 bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27897","RelatedDescription":"Open issue \"bug(mat-divider): mat-divider not displaying when printing or saving in Firefox\" (#27897)"},{"Id":"1926415568","IsPullRequest":true,"CreatedAt":"2023-10-04T14:57:39","Actor":"cromefire","Number":"27896","RawContent":null,"Title":"fix(material/datepicker): Fixed raw date value being compared","State":"open","Body":"In the function [`isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L617) numeric values are supposed to be compared. It is being called from [`_isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L342) where `value` is compared to `startValue` and `endValue` which are calculated in [`_setRanges`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L599-L600) using [`_getCellCompareValue`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L578) which returns a number derived from `Date` derived from the original generic date object. `value` though is not a number like the typing might suggest, but a generic date object [retrieved from `MatCalendarCell.rawValue`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L515).\r\n\r\nThe correct way to compare these values would be to derive **all** 3 `startValue`, `endValue` and `value` using `_getCellCompareValue`, luckily the `MatCalendarCell` already contains such a derived value: [`compareValue`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L47), which is being [derived using `_getCellCompareValue`]()\r\n\r\n#### Why is this a problem and why isn't it a problem for most?\r\nNormally when using `Date` as your generic date object of choice, the [`isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L617) function implicitly calls the `valueOf()` function from `Date`, which happens to be equivalent to the logic in [`_getCellCompareValue`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L578).\r\n\r\nBut we are using the Picker with `Temporal.PlainDate` (using a polyfill), which [explicitly forbids](https://tc39.es/proposal-temporal/docs/plaindate.html#valueOf) calling the `valueOf()` function and the logic breaks down. This change should not result in any visible change for anyone using generic date objects that already do the conversion to unix timestamp implicitly, just that it's done explicitly now, but it will fix compatibility with other choices that don't do this.\r\n\r\nAlso on another note: The current way this is implemented violates TypeScript constraints, because it passes a `Date` or other date type to a function which only accepts a `number`.","Url":"https://github.com/angular/components/pull/27896","RelatedDescription":"Open PR \"fix(material/datepicker): Fixed raw date value being compared\" (#27896)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-11T03:30:03.0784707Z","RunDurationInMilliseconds":2163}