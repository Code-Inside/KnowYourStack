{"Data":{"Angular-Issues":{"Issues":[{"Id":"1958364754","IsPullRequest":false,"CreatedAt":"2023-10-24T02:35:49","Actor":"syoho","Number":"52340","RawContent":null,"Title":"Docs Bug Report","State":"open","Body":"### Describe the problem that you experienced\n\nHello.\r\n\r\nI'd like to raise a documentation concern. \r\n\r\nIn the provided Angular tutorial page, the original sentence, `The getHeros() method taps into the flow of observable values and sends a message, using the log() method, to the message area at the bottom of the page.` seems to have a typo. \r\n\r\nShould `getHeros()` be corrected to `getHeroes()`? \r\n\r\nBased on the context of the tutorial, the method should be `getHeroes()`.\r\n\r\nI look forward to your response.\r\n\r\nBest regards.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt6\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/52340","RelatedDescription":"Open issue \"Docs Bug Report\" (#52340)"},{"Id":"1955967996","IsPullRequest":true,"CreatedAt":"2023-10-24T01:45:19","Actor":"x00167885","Number":"52311","RawContent":null,"Title":"Update setup-local.md","State":"closed","Body":"You've missed a vital part of the setup (for newcomers). The 'hello world' demo assumes you have this in a new project. If you wish to use standalone components in such a way, you must include this '--standalone' flag. Otherwise you would need to manually setup your project according to the specific use case of standalone components. Which is harder than just putting the '--standalone' flag. \r\n\r\nI really feel like this should be added because I was trying for 4 hours trying to get the 'hello world' project to work. This wasted a lot of time and caused a lot of stress and frustration, so it needs to be explicitly stated, that this is what this 'hello world' project demo expects.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52311","RelatedDescription":"Closed or merged PR \"Update setup-local.md\" (#52311)"},{"Id":"1958306917","IsPullRequest":true,"CreatedAt":"2023-10-24T01:38:44","Actor":"dgp1130","Number":"52339","RawContent":null,"Title":"docs: fix typo","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/52339","RelatedDescription":"Open PR \"docs: fix typo\" (#52339)"},{"Id":"1958211202","IsPullRequest":true,"CreatedAt":"2023-10-23T23:40:55","Actor":"atscott","Number":"52338","RawContent":null,"Title":"refactor(core): Move booleans in LContainer to flags slot","State":"open","Body":"There are now 2 booleans in the LContainer so this commit moves them to a shared FLAGS slot like the LView.\r\n","Url":"https://github.com/angular/angular/pull/52338","RelatedDescription":"Open PR \"refactor(core): Move booleans in LContainer to flags slot\" (#52338)"},{"Id":"1958210184","IsPullRequest":true,"CreatedAt":"2023-10-23T23:39:52","Actor":"atscott","Number":"52337","RawContent":null,"Title":"test(core): fix test observing broken OnPush checkNoChanges","State":"open","Body":"The test is actually observing that OnPush results in a view not being checked when checkNoChanges runs.\r\n","Url":"https://github.com/angular/angular/pull/52337","RelatedDescription":"Open PR \"test(core): fix test observing broken OnPush checkNoChanges\" (#52337)"},{"Id":"1958051517","IsPullRequest":true,"CreatedAt":"2023-10-23T21:26:46","Actor":"jessicajaniuk","Number":"52336","RawContent":null,"Title":"docs: Add @defer API reference documentation","State":"open","Body":"This adds the initial API reference documentation for the new defer blocks.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52336","RelatedDescription":"Open PR \"docs: Add @defer API reference documentation\" (#52336)"},{"Id":"1957552804","IsPullRequest":true,"CreatedAt":"2023-10-23T20:46:35","Actor":"angular-robot","Number":"52330","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.\n\nCloses #52281","Url":"https://github.com/angular/angular/pull/52330","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#52330)"},{"Id":"1957552924","IsPullRequest":true,"CreatedAt":"2023-10-23T20:46:03","Actor":"angular-robot","Number":"52331","RawContent":null,"Title":"docs: update Angular CLI help [17.0.x]","State":"closed","Body":"Updated Angular CLI help contents.\n\nCloses #52280","Url":"https://github.com/angular/angular/pull/52331","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [17.0.x]\" (#52331)"},{"Id":"1957988816","IsPullRequest":true,"CreatedAt":"2023-10-23T20:41:14","Actor":"angular-robot","Number":"52335","RawContent":null,"Title":"docs: update Angular CLI help [16.2.x]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/52335","RelatedDescription":"Open PR \"docs: update Angular CLI help [16.2.x]\" (#52335)"},{"Id":"1957670052","IsPullRequest":true,"CreatedAt":"2023-10-23T20:40:13","Actor":"twerske","Number":"52334","RawContent":null,"Title":"docs: add event banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52334","RelatedDescription":"Closed or merged PR \"docs: add event banner\" (#52334)"},{"Id":"1955998250","IsPullRequest":true,"CreatedAt":"2023-10-23T19:02:55","Actor":"atscott","Number":"52312","RawContent":null,"Title":"refactor(core): Remove duplicate null check in helper function","State":"closed","Body":"This commit is a small refactor to remove the top-level null check on the variable that's already checked for null in the main loop\r\n","Url":"https://github.com/angular/angular/pull/52312","RelatedDescription":"Closed or merged PR \"refactor(core): Remove duplicate null check in helper function\" (#52312)"},{"Id":"1957079910","IsPullRequest":true,"CreatedAt":"2023-10-23T19:02:28","Actor":"alan-agius4","Number":"52326","RawContent":null,"Title":"fix(platform-server): resolve relative requests URL","State":"closed","Body":"Prior to this commit relative HTTP requests were not being resolved to absolute even thought the behaviour is documented in https://angular.io/guide/universal#using-absolute-urls-for-http-data-requests-on-the-server.\r\n\r\nThis caused relative HTTP requests to fail when done on the server because of missing request context. This change is also required to eventually support HTTP requests handled during prerendering (SSG).\r\n\r\nCloses #51626\r\n","Url":"https://github.com/angular/angular/pull/52326","RelatedDescription":"Closed or merged PR \"fix(platform-server): resolve relative requests URL\" (#52326)"},{"Id":"1957574175","IsPullRequest":true,"CreatedAt":"2023-10-23T16:40:19","Actor":"jessicajaniuk","Number":"52332","RawContent":null,"Title":"refactor(migrations): Fixes offset calculations for nesting","State":"open","Body":"This updates offset to handle pre and post offset properly for nested situations, rather than relying on solely nestCount. This should properly apply offset calculations at the right time to handle any nested situation.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/52332","RelatedDescription":"Open PR \"refactor(migrations): Fixes offset calculations for nesting\" (#52332)"},{"Id":"1956207898","IsPullRequest":false,"CreatedAt":"2023-10-23T16:28:06","Actor":"jpike88","Number":"52315","RawContent":null,"Title":"`@switch` does not have type awareness in case statements","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAm using package versions of `17.0.0-rc.0`, with extension version `v17.0.0-next.2`.\r\n\r\nWhen either using `ng build` or in vscode itself, there is no error thrown for the below code, `isDebug` is type boolean yet the case statements conflict with that type.\r\n![Screenshot 2023-10-23 at 08 56 57](https://github.com/angular/angular/assets/9585787/ea68ab6e-0178-419a-9599-0c3a5f9c391e)\r\n\r\nInterestingly on mouseover, it does look like an attempt to perform type coercion happens, resulting predictably in a `never` type\r\n![Screenshot 2023-10-23 at 08 58 41](https://github.com/angular/angular/assets/9585787/faca69a5-7f84-40ec-a03a-c74257c47404)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52315","RelatedDescription":"Closed issue \"`@switch` does not have type awareness in case statements\" (#52315)"},{"Id":"1956553379","IsPullRequest":true,"CreatedAt":"2023-10-23T16:28:05","Actor":"crisbeto","Number":"52322","RawContent":null,"Title":"fix(compiler): template type checking not reporting diagnostics for incompatible type comparisons","State":"closed","Body":"In #52110 the compiler was changed to produce `if` statements when type checking `@switch` in order to avoid a bug in the TypeScript compiler. In order to avoid duplicate diagnostics, the main `@switch` expression was ignored in each of the `@case` comparisons. This appears to have caused a regression where comparing incompatible types wasn't being reported anymore.\r\n\r\nThese changes resolve the issue by wrapping the expression in parentheses which allows the compiler to report comparison diagnostics while ignoring diagnostics in the expression itself.\r\n\r\nFixes #52315.","Url":"https://github.com/angular/angular/pull/52322","RelatedDescription":"Closed or merged PR \"fix(compiler): template type checking not reporting diagnostics for incompatible type comparisons\" (#52322)"},{"Id":"1957300295","IsPullRequest":true,"CreatedAt":"2023-10-23T14:24:36","Actor":"JeanMeche","Number":"52329","RawContent":null,"Title":"docs: add 2 new diagnostics created recently.","State":"open","Body":"This commit adds `skipHydrationNotStatic` and `interpolatedSignalNotInvoked` to the index list. \r\n\r\n","Url":"https://github.com/angular/angular/pull/52329","RelatedDescription":"Open PR \"docs: add 2 new diagnostics created recently.\" (#52329)"},{"Id":"1957291580","IsPullRequest":true,"CreatedAt":"2023-10-23T14:20:25","Actor":"JeanMeche","Number":"52328","RawContent":null,"Title":"refactor(compiler-cli): detect \"old\" control flow.","State":"open","Body":"This commit adds an extended diagnostic to detect old control flow.\r\n\r\nfixes #52318. \r\n\r\nSince the control flow is a developer preview, maybe this extended diagnostic should be silenced by default ? ","Url":"https://github.com/angular/angular/pull/52328","RelatedDescription":"Open PR \"refactor(compiler-cli): detect \"old\" control flow.\" (#52328)"},{"Id":"1957130006","IsPullRequest":true,"CreatedAt":"2023-10-23T13:09:53","Actor":"cexbrayat","Number":"52327","RawContent":null,"Title":"docs: remove test.ts file in aio","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nThis file is not necessary since CLI v15+\r\n\r\n## What is the new behavior?\r\n\r\nSame as 7ba5dc87ed, but for aio\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52327","RelatedDescription":"Open PR \"docs: remove test.ts file in aio\" (#52327)"},{"Id":"1957010591","IsPullRequest":false,"CreatedAt":"2023-10-23T12:31:51","Actor":"zlepper","Number":"52325","RawContent":null,"Title":"Invalid character in character class error when passing valid regex to pattern validator","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIf you have a regex containing `[-]` somewhere a SyntaxError will occur when the regex is passed to a `[pattern]` binding on a form control:\r\n\r\n\r\n```ts\r\nimport 'zone.js/dist/zone';\r\nimport { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  template: `\r\n    <input [pattern]=\"myRegex\" [formControl]=\"control\" />\r\n  `,\r\n})\r\nexport class App {\r\n  myRegex = /[-+]/;\r\n\r\n  control = new FormControl('bar');\r\n}\r\n\r\nbootstrapApplication(App);\r\n\r\n```\r\n\r\nIf you remove the `[pattern]` binding in the template, the error goes away, so the regex is valid. \r\nI have also tried testing with pure html (Ignoring angular/javascript entirely) and the `[-+]` seems to be valid enough there. \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-oeerav?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nPattern attribute value /[-+]/ is not a valid regular expression: Uncaught SyntaxError: Invalid regular expression: //[-+]//v: Invalid character in character class\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.0\r\nNode: 20.6.0 (Unsupported)\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nng-packagr                      16.2.0\r\nrxjs                            7.5.6\r\ntypescript                      5.1.5\r\nwebpack                         5.88.2\r\nzone.js                         0.13.1\r\n\r\nWarning: The current version of Node (20.6.0) is not supported by Angular.\n```\n\n\n### Anything else?\n\nThe error seems to be something that can be ignored. I haven't actually checked if it ends up breaking anything. ","Url":"https://github.com/angular/angular/issues/52325","RelatedDescription":"Closed issue \"Invalid character in character class error when passing valid regex to pattern validator\" (#52325)"},{"Id":"1956917588","IsPullRequest":false,"CreatedAt":"2023-10-23T11:10:11","Actor":"tanishqmanuja","Number":"52324","RawContent":null,"Title":"Import path for declarations is incorrectly transformed","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nNo idea\r\n\r\n### Description\r\n\r\nFor the input file:\r\n\r\n```ts\r\n// file: projects\\ngx-material\\src\\lib\\ui\\fab\\fab.component.ts\r\nimport \"@material/web/fab/fab\";\r\n\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  NgZone,\r\n  inject,\r\n} from \"@angular/core\";\r\nimport type { FabSize, FabVariant, MdFab } from \"@material/web/fab/fab\";\r\nimport { coerceBooleanProperty } from \"../../utils/coercion\";\r\nimport { ProxyCmp } from \"../../utils/proxy-cmp\";\r\n\r\n@ProxyCmp({ inputs: [\"variant\", \"size\", \"label\", \"lowered\"] })\r\n@Component({\r\n  standalone: true,\r\n  selector: \"md-fab\",\r\n  template: ` <ng-content></ng-content>`,\r\n  inputs: [\r\n    { name: \"size\", transform: (v: FabSize) => v },\r\n    { name: \"variant\", transform: (v: FabVariant) => v },\r\n    { name: \"label\", transform: (v: string) => v },\r\n    { name: \"lowered\", transform: coerceBooleanProperty },\r\n  ],\r\n})\r\nexport class MdFabComponent {\r\n  protected el: MdFab = inject(ElementRef).nativeElement;\r\n  protected ngZone = inject(NgZone);\r\n  private cdRef = inject(ChangeDetectorRef);\r\n\r\n  constructor() {\r\n    this.cdRef.detach();\r\n  }\r\n}\r\n```\r\n\r\nIs compiled to this,\r\n\r\n```ts\r\n// file: dist\\ngx-material\\lib\\ui\\fab\\fab.component.d.ts\r\n\r\nimport \"@material/web/fab/fab\";\r\nimport { NgZone } from \"@angular/core\";\r\nimport { MdFab } from \"@material/web/fab/fab\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../../../../../node_modules/.pnpm/@material+web@1.0.0/node_modules/@material/web/fab/internal/shared\";\r\nimport * as i2 from \"../../../../../../node_modules/.pnpm/@material+web@1.0.0/node_modules/@material/web/fab/internal/fab\";\r\nexport declare class MdFabComponent {\r\n    protected el: MdFab;\r\n    protected ngZone: NgZone;\r\n    private cdRef;\r\n    constructor();\r\n    static ɵfac: i0.ɵɵFactoryDeclaration<MdFabComponent, never>;\r\n    static ɵcmp: i0.ɵɵComponentDeclaration<MdFabComponent, \"md-fab\", never, { \"size\": { \"alias\": \"size\"; \"required\": false; }; \"variant\": { \"alias\": \"variant\"; \"required\": false; }; \"label\": { \"alias\": \"label\"; \"required\": false; }; \"lowered\": { \"alias\": \"lowered\"; \"required\": false; }; }, {}, never, [\"*\"], true, never>;\r\n    static ngAcceptInputType_size: i1.FabSize;\r\n    static ngAcceptInputType_variant: i2.FabVariant;\r\n    static ngAcceptInputType_label: string;\r\n    static ngAcceptInputType_lowered: any;\r\n}\r\n```\r\n\r\nImport `i1` and `i2` paths are changed to relative paths, which results in errors while consuming the lib.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/tanishqmanuja/issue.ngx-material\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nWhile consuming the lib\r\n\r\n❯ ng serve\r\nX [ERROR] TS2307: Cannot find module '../../../../../../node_modules/.pnpm/@material+web@1.0.0/node_modules/@material/web/fab/internal/shared' or its corresponding type declarations. [plugin angular-compiler]\r\n\r\n    dist/md3/lib/ui/fab/fab.component.d.ts:5:20:\r\n      5 │ ...as i1 from \"../../../../../../node_modules/.pnpm/@material+web@1...\r\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nX [ERROR] TS2307: Cannot find module '../../../../../../node_modules/.pnpm/@material+web@1.0.0/node_modules/@material/web/fab/internal/fab' or its corresponding type declarations. [plugin angular-compiler]\r\n\r\n    dist/md3/lib/ui/fab/fab.component.d.ts:6:20:\r\n      6 │ ...as i2 from \"../../../../../../node_modules/.pnpm/@material+web@1...\r\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0-rc.0\r\nNode: 20.7.0 (Unsupported)\r\nPackage Manager: pnpm 8.8.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router       \r\n\r\nPackage                         Version\r\n---------------------------------------------------------    \r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nng-packagr                      17.0.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/52324","RelatedDescription":"Open issue \"Import path for declarations is incorrectly transformed\" (#52324)"},{"Id":"1956890457","IsPullRequest":true,"CreatedAt":"2023-10-23T10:53:39","Actor":"alvarocjunq","Number":"52323","RawContent":null,"Title":"docs: the `Component` import is not being used","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52323","RelatedDescription":"Open PR \"docs: the `Component` import is not being used\" (#52323)"},{"Id":"1956498288","IsPullRequest":true,"CreatedAt":"2023-10-23T07:08:00","Actor":"angular-robot","Number":"52321","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMjguMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular/pull/52321","RelatedDescription":"Open PR \"build: lock file maintenance\" (#52321)"},{"Id":"1956224185","IsPullRequest":false,"CreatedAt":"2023-10-23T05:40:03","Actor":"jpike88","Number":"52316","RawContent":null,"Title":"Don't make `track` keyword mandatory in `for` statements","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n`17.0.0-rc.0`\r\n\r\n### Description\r\n\r\nI understand that the `track` keyword is useful for performance reasons, and was using angular from the 1.x days where `track by` could make a big difference in heavy loops. It saved me in a couple of components at the time which without it would have been major UX problems so I totally understand its purpose and benefits.\r\n\r\nHowever I don't think it should be mandatory, because:\r\n\r\n- the most common use case has no performance implications, but the developer would still have to specify the tracking property\r\n- is unable to fully align with JS convention, where `for...of` doesn't have such a `track` property\r\n- it's simple to assume that if no `track` is specified, then the item being iterated is what is being tracked, no need to explicitly say it each time\r\n- Allow for when it IS being explicitly defined, it's defining a performance-sensitive part of the code which should be treated with extra caution, which allows for a semantically richer template\r\n\r\nI could go on, but you see where I'm coming from.\r\n\r\nThoughts?\r\n\r\n### Proposed solution\r\n\r\nMake it optional, or perhaps if a loop takes longer than x time to run per item, suggest to use track in a warning (which can be disabled if the developer desires... I don't know)\r\n\r\n### Alternatives considered\r\n\r\nn/a","Url":"https://github.com/angular/angular/issues/52316","RelatedDescription":"Closed issue \"Don't make `track` keyword mandatory in `for` statements\" (#52316)"},{"Id":"1956331250","IsPullRequest":true,"CreatedAt":"2023-10-23T04:30:32","Actor":"AndrewKushnir","Number":"52320","RawContent":null,"Title":"refactor(core): report `@defer` errors using `ErrorHandler`","State":"open","Body":"This commit updates the code to report errors via `ErrorHandler` instance. For dependency loading problems, errors are reported only when `@error` block is not provided.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52320","RelatedDescription":"Open PR \"refactor(core): report `@defer` errors using `ErrorHandler`\" (#52320)"},{"Id":"1956285272","IsPullRequest":true,"CreatedAt":"2023-10-23T03:34:32","Actor":"AnkitaSood","Number":"52319","RawContent":null,"Title":"docs(aio): add ankita to contributors.json","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: adding ankita as GDE to contributors.json\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52319","RelatedDescription":"Open PR \"docs(aio): add ankita to contributors.json\" (#52319)"},{"Id":"1956252724","IsPullRequest":false,"CreatedAt":"2023-10-23T02:50:41","Actor":"jpike88","Number":"52318","RawContent":null,"Title":"Flag to ban old control flow directive (ngFor, ngIf etc)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAfter migrating to new control flow logic, any developer can just accidentally start using the old syntax again. \n\n### Proposed solution\n\nHave a flag that allows instances of `*ngFor`, `*ngIf` to be banned from use and have this flagged in the compiler and vscode extension.\n\n### Alternatives considered\n\nn/a","Url":"https://github.com/angular/angular/issues/52318","RelatedDescription":"Open issue \"Flag to ban old control flow directive (ngFor, ngIf etc)\" (#52318)"},{"Id":"1956243102","IsPullRequest":false,"CreatedAt":"2023-10-23T02:38:00","Actor":"azmhyy2021","Number":"52317","RawContent":null,"Title":"Uncaught error occurred when Anuglar DevTools open and not showing any components","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\nI don't know how to reproduce the error. but I can give you only some information\r\n\r\nAngular v16\r\nOpen Angular DevTools\r\n\r\nUncaught error occurred when open Angular DevTools and components are not shown in Angular tab.\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nComponents should be shown\n\n### Please provide a screenshot if possible [Bug Report only]\n\n<img width=\"1329\" alt=\"Screenshot 2023-10-23 at 11 32 44 AM\" src=\"https://github.com/angular/angular/assets/96810812/c7e8e896-3dbb-408b-8b72-28248eec3367\">\r\n\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\nThe error message is shown as following\r\n\r\n\r\nzone.js:1681 Uncaught Error: ASSERTION ERROR: The provided value must be an instance of a DOM Node but got [object HTMLStyleElement]\r\n    at throwError (core.mjs:328:11)\r\n    at assertDomNode (core.mjs:333:9)\r\n    at getLContext (core.mjs:6537:22)\r\n    at getDirectives (core.mjs:22979:21)\r\n    at Tt (render-tree.ts:15:26)\r\n    at render-tree.ts:52:23\r\n    at NodeList.forEach (<anonymous>)\r\n    at Tt (render-tree.ts:51:28)\r\n    at render-tree.ts:52:23\r\n    at NodeList.forEach (<anonymous>)\r\n```\n```\n\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\nChrome\n```\n\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/52317","RelatedDescription":"Open issue \"Uncaught error occurred when Anuglar DevTools open and not showing any components\" (#52317)"},{"Id":"1956087849","IsPullRequest":true,"CreatedAt":"2023-10-22T22:51:24","Actor":"AndrewKushnir","Number":"52314","RawContent":null,"Title":"refactor(core): ignore `after` and `minimum` when transition between states in tests","State":"open","Body":"This commit updates the logic to ignore `after` and `minimum` conditions when `DeferBlockFixture.render` method is used in tests.\r\n\r\nThe regression was introduced in https://github.com/angular/angular/pull/52009.\r\n\r\nResolves #52313.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52314","RelatedDescription":"Open PR \"refactor(core): ignore `after` and `minimum` when transition between states in tests\" (#52314)"},{"Id":"1956007557","IsPullRequest":false,"CreatedAt":"2023-10-22T18:34:01","Actor":"cexbrayat","Number":"52313","RawContent":null,"Title":"defer: unit-tests of components using `after`/`minimum` need `tick` even with `DeferBlockBehavior.Manual`","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nConsider a component with the following template:\r\n\r\n```html\r\n<button (click)=\"show = true\">Show</button>\r\n\r\n@defer (when show) {\r\n<app-chart />\r\n}\r\n@placeholder {\r\n<div>Something until the loading starts</div>\r\n}\r\n@loading (after 500ms) {\r\n<div>Loading...</div>\r\n}\r\n```\r\n\r\nif the unit test uses the default `DeferBlockBehavior.Manual` behavior, then the following fails:\r\n\r\n```ts\r\ndescribe('AppComponent', () => {\r\n  beforeEach(() => TestBed.configureTestingModule({}));\r\n\r\n  it('should succeed without tick', async () => {\r\n    const fixture = TestBed.createComponent(AppComponent);\r\n    fixture.detectChanges();\r\n\r\n    // placeholder is displayed first\r\n    const placeholder = fixture.nativeElement.querySelector('div');\r\n    expect(placeholder.textContent).toContain('Something until the loading starts');\r\n\r\n    const deferBlocks = await fixture.getDeferBlocks();\r\n    // only one defer block should be found\r\n    expect(deferBlocks.length).toBe(1);\r\n\r\n    // loading\r\n    await deferBlocks[0].render(DeferBlockState.Loading);\r\n\r\n    const loadingBlock = fixture.nativeElement.querySelector('div');\r\n    expect(loadingBlock.textContent).toContain('Loading...');\r\n\r\n    // complete\r\n    await deferBlocks[0].render(DeferBlockState.Complete);\r\n\r\n    const loadedBlock = fixture.nativeElement.querySelector('div');\r\n    expect(loadedBlock.textContent).toContain('Some lazy-loaded content');\r\n  });\r\n});\r\n```\r\n\r\nYou currently need to use tick in the test to make it succeed:\r\n\r\n```ts\r\nit('should succeed with tick', fakeAsync(async () => {\r\n    const fixture = TestBed.createComponent(AppComponent);\r\n    fixture.detectChanges();\r\n\r\n    // placeholder is displayed first\r\n    const placeholder = fixture.nativeElement.querySelector('div');\r\n    expect(placeholder.textContent).toContain('Something until the loading starts');\r\n\r\n    const deferBlocks = await fixture.getDeferBlocks();\r\n    // only one defer block should be found\r\n    expect(deferBlocks.length).toBe(1);\r\n\r\n    // loading\r\n    await deferBlocks[0].render(DeferBlockState.Loading);\r\n    // should not be necessary\r\n    tick(500);\r\n    fixture.detectChanges();\r\n\r\n    const loadingBlock = fixture.nativeElement.querySelector('div');\r\n    expect(loadingBlock.textContent).toContain('Loading...');\r\n\r\n    // complete\r\n    await deferBlocks[0].render(DeferBlockState.Complete);\r\n\r\n    const loadedBlock = fixture.nativeElement.querySelector('div');\r\n    expect(loadedBlock.textContent).toContain('Some lazy-loaded content');\r\n  }));\r\n```\r\n\r\nIt seems weird that this is needed, and this was working in `next.7` (regression is in `next.8`)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/cexbrayat/defer-after\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 17.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52313","RelatedDescription":"Open issue \"defer: unit-tests of components using `after`/`minimum` need `tick` even with `DeferBlockBehavior.Manual`\" (#52313)"},{"Id":"1955915468","IsPullRequest":true,"CreatedAt":"2023-10-22T14:05:40","Actor":"sylvaindumont","Number":"52310","RawContent":null,"Title":"update CSP documentation to avoid breaking animations and ngStyle","State":"open","Body":"As reported in #51365, despite the nonce attribute on style elements, style attributes used by https://angular.io/api/common/NgStyle and https://angular.io/api/animations/style that were allowed by 'unsafe-inline' are now blocked. \r\n\r\nAdding `style-src-attr 'unsafe-inline';` to the CSP header avoid blocking these style attributes.\r\n\r\nConsidering that [style-src-attr](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src-attr#browser_compatibility) isn't supported by Safari yet, a safer option would be to set the nonce in [style-src-elem](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src-elem) and keep the previously documented `style-src 'self' 'unsafe-inline';`.","Url":"https://github.com/angular/angular/pull/52310","RelatedDescription":"Open PR \"update CSP documentation to avoid breaking animations and ngStyle\" (#52310)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1958270948","IsPullRequest":true,"CreatedAt":"2023-10-24T00:53:57","Actor":"clydin","Number":"26112","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): increase JS transformer worker pool idle timeout to 1 second","State":"open","Body":"The idle timeout for threads in the JavaScript transformer worker pool for the esbuild-based builders (`application`/`browser-esbuild`) is now set at 1 second. This prevents the default of immediate shutdown of an idle worker from occurring. The immediate shutdown causes additional worker threads to be created due to the variable time between bundler requests for node module JavaScript files. The shutdown and subsequent recreation of the threads during the build causes unneeded extra processing that can now be avoided.","Url":"https://github.com/angular/angular-cli/pull/26112","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): increase JS transformer worker pool idle timeout to 1 second\" (#26112)"},{"Id":"1958240313","IsPullRequest":true,"CreatedAt":"2023-10-24T00:13:53","Actor":"clydin","Number":"26111","RawContent":null,"Title":"perf(@angular-devkit/build-angular): fully avoid rebuild of component stylesheets when unchanged","State":"open","Body":"With the full set of dependencies and watch files tracked within the bundler context object for component stylesheets, the entire bundler output can be cached in memory and reused when none of the relevant files have changed since the last rebuild. This is particularly useful for scenarios when a large tree of components are considered affected and must be recompiled by the AOT compiler.","Url":"https://github.com/angular/angular-cli/pull/26111","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): fully avoid rebuild of component stylesheets when unchanged\" (#26111)"},{"Id":"1955327675","IsPullRequest":true,"CreatedAt":"2023-10-23T23:32:33","Actor":"angular-robot","Number":"26085","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `b261e65` -> `92d9a9c` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `7ae8f36` -> `aa1827a` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `1aff213` -> `560121a` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `0be7f89` -> `295a37d` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `e884a98` -> `5227f75` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `b7a43cf` -> `cb4aaa6` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `957b716` -> `a0942ee` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `bb4c513` -> `b42fe83` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `e27508d` -> `20ff147` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a4b77fc` -> `b577515` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `cd7d5e7` -> `9212534` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `0a4cfa9` -> `bdb6e79` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `f46e742` -> `1fd33d7` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `c806f8f` -> `f700a05` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `5447db8` -> `92b7e96` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `a2f2430` -> `d9c3fe0` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `f5c4257` -> `a28490f` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `856393c` -> `aa0c4ec` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `52f0bc1` -> `05e3442` |\n| angular/dev-infra | action | digest | `3c092a0` -> `9ddc899` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMzEuMyIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26085","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26085)"},{"Id":"1955344550","IsPullRequest":true,"CreatedAt":"2023-10-23T23:31:53","Actor":"angular-robot","Number":"26087","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.8.0` -> `6.9.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.8.0/6.9.0) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.51.0` -> `8.52.0`](https://renovatebot.com/diffs/npm/eslint/8.51.0/8.52.0) |\n| [eslint-plugin-import](https://togithub.com/import-js/eslint-plugin-import) | devDependencies | minor | [`2.28.1` -> `2.29.0`](https://renovatebot.com/diffs/npm/eslint-plugin-import/2.28.1/2.29.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.9.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#690-2023-10-23)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.8.0...v6.9.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>eslint/eslint (eslint)</summary>\n\n### [`v8.52.0`](https://togithub.com/eslint/eslint/releases/tag/v8.52.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.51.0...v8.52.0)\n\n#### Features\n\n-   [`70648ee`](https://togithub.com/eslint/eslint/commit/70648ee49c07f7b533d09f6bf8a5291e5a5a8601) feat: report-unused-disable-directive to report unused eslint-enable ([#&#8203;17611](https://togithub.com/eslint/eslint/issues/17611)) (Yosuke Ota)\n\n#### Bug Fixes\n\n-   [`5de9637`](https://togithub.com/eslint/eslint/commit/5de9637fc925729a83d5a5e9e868a41792a184e3) fix: Ensure shared references in rule configs are separated ([#&#8203;17666](https://togithub.com/eslint/eslint/issues/17666)) (Nicholas C. Zakas)\n-   [`dcfe573`](https://togithub.com/eslint/eslint/commit/dcfe5739c374c9d7ed21f14027870ec0fd453661) fix: add preceding semicolon in suggestions of `no-object-constructor` ([#&#8203;17649](https://togithub.com/eslint/eslint/issues/17649)) (Francesco Trotta)\n\n#### Documentation\n\n-   [`476d58a`](https://togithub.com/eslint/eslint/commit/476d58a584d5d2db003c4c22ffee90e63566164d) docs: Add note about invalid CLI flags when using flat config. ([#&#8203;17664](https://togithub.com/eslint/eslint/issues/17664)) (Nicholas C. Zakas)\n-   [`660ed3a`](https://togithub.com/eslint/eslint/commit/660ed3afd128ad529234a855345629982caf1bc7) docs: Plugin flat config migration guide ([#&#8203;17640](https://togithub.com/eslint/eslint/issues/17640)) (Nicholas C. Zakas)\n-   [`a58aa20`](https://togithub.com/eslint/eslint/commit/a58aa200fccedae7e2e9b6129246f2cedab14f8d) docs: fix examples for several rules ([#&#8203;17645](https://togithub.com/eslint/eslint/issues/17645)) (Milos Djermanovic)\n-   [`179929b`](https://togithub.com/eslint/eslint/commit/179929bd46892f18f2aef0c159d5cc361cb69987) docs: Remove trailing newline from the code of Playground links ([#&#8203;17641](https://togithub.com/eslint/eslint/issues/17641)) (Francesco Trotta)\n-   [`f8e5c30`](https://togithub.com/eslint/eslint/commit/f8e5c30636450d4a8baf51f0e227685e6d77ac64) docs: Update README (GitHub Actions Bot)\n-   [`b7ef2f3`](https://togithub.com/eslint/eslint/commit/b7ef2f34fe12b68a366e1b4bf5f64d7332c6e72e) docs: Enable pretty code formatter output ([#&#8203;17635](https://togithub.com/eslint/eslint/issues/17635)) (Nicholas C. Zakas)\n-   [`0bcb9a8`](https://togithub.com/eslint/eslint/commit/0bcb9a8db608a3d0bd2645f99e0707b9a9bbaaf0) docs: Fix syntax errors in rule examples ([#&#8203;17633](https://togithub.com/eslint/eslint/issues/17633)) (Francesco Trotta)\n-   [`61b9083`](https://togithub.com/eslint/eslint/commit/61b90839633ef300ac7707a651f65f532e65f42d) docs: Make no-continue example code work ([#&#8203;17643](https://togithub.com/eslint/eslint/issues/17643)) (Zhongyuan Zhou)\n-   [`9fafe45`](https://togithub.com/eslint/eslint/commit/9fafe450c31ed9b6bdd9dcd6c115255943b8c1c2) docs: upgrade to 11ty 2.0 ([#&#8203;17632](https://togithub.com/eslint/eslint/issues/17632)) (Percy Ma)\n-   [`ff8e4bf`](https://togithub.com/eslint/eslint/commit/ff8e4bf327b5c92b0623b0fc5f8f101954f785db) docs: Update README (GitHub Actions Bot)\n-   [`fab249a`](https://togithub.com/eslint/eslint/commit/fab249ae6addac2ee18cd81cee80916010bb469e) docs: Update README (GitHub Actions Bot)\n-   [`392305b`](https://togithub.com/eslint/eslint/commit/392305bf4797e3ebc696dfca48bd874741fca845) docs: Update `no-irregular-whitespace` and fix examples ([#&#8203;17626](https://togithub.com/eslint/eslint/issues/17626)) (Francesco Trotta)\n-   [`6b8acfb`](https://togithub.com/eslint/eslint/commit/6b8acfb770589f3941df41c3910d3b8ffc3e1e45) docs: Add real whitespace to `no-trailing-spaces` examples ([#&#8203;17630](https://togithub.com/eslint/eslint/issues/17630)) (Francesco Trotta)\n-   [`1000187`](https://togithub.com/eslint/eslint/commit/1000187e00949332babcee4d37d46c96a6a554a8) docs: Fix examples in `unicode-bom` ([#&#8203;17631](https://togithub.com/eslint/eslint/issues/17631)) (Francesco Trotta)\n-   [`000290c`](https://togithub.com/eslint/eslint/commit/000290c4c923cc1473e21b4bdbdc0c42765ef7dd) docs: Update README (GitHub Actions Bot)\n\n#### Chores\n\n-   [`6d1f0c2`](https://togithub.com/eslint/eslint/commit/6d1f0c2da0309c06c21149b8d71a8f439a70d7e8) chore: upgrade [@&#8203;eslint/js](https://togithub.com/eslint/js)[@&#8203;8](https://togithub.com/8).52.0 ([#&#8203;17671](https://togithub.com/eslint/eslint/issues/17671)) (Milos Djermanovic)\n-   [`d63d4fe`](https://togithub.com/eslint/eslint/commit/d63d4fe0942e6747ab60e758aa36076f43041a30) chore: package.json update for [@&#8203;eslint/js](https://togithub.com/eslint/js) release (ESLint Jenkins)\n-   [`f30cefe`](https://togithub.com/eslint/eslint/commit/f30cefee6bda2789ede18e1664b84c2638ea1bb5) test: fix FlatESLint tests for caching ([#&#8203;17658](https://togithub.com/eslint/eslint/issues/17658)) (Milos Djermanovic)\n-   [`ef650cb`](https://togithub.com/eslint/eslint/commit/ef650cb612510bcfa1379c1f0af56dd563b3a705) test: update tests for no-promise-executor-return ([#&#8203;17661](https://togithub.com/eslint/eslint/issues/17661)) (Milos Djermanovic)\n\n</details>\n\n<details>\n<summary>import-js/eslint-plugin-import (eslint-plugin-import)</summary>\n\n### [`v2.29.0`](https://togithub.com/import-js/eslint-plugin-import/blob/HEAD/CHANGELOG.md#2290---2023-10-22)\n\n[Compare Source](https://togithub.com/import-js/eslint-plugin-import/compare/v2.28.1...v2.29.0)\n\n##### Added\n\n-   TypeScript config: add .cts and .mts extensions (\\[[#&#8203;2851](https://togithub.com/import-js/eslint-plugin-import/issues/2851)], thanks \\[[@&#8203;Zamiell](https://togithub.com/Zamiell)])\n-   \\[`newline-after-import`]: new option `exactCount` and docs update (\\[[#&#8203;1933](https://togithub.com/import-js/eslint-plugin-import/issues/1933)], thanks \\[[@&#8203;anikethsaha](https://togithub.com/anikethsaha)] and \\[[@&#8203;reosarevok](https://togithub.com/reosarevok)])\n-   \\[`newline-after-import`]: fix `exactCount` with `considerComments` false positive, when there is a leading comment (\\[[#&#8203;2884](https://togithub.com/import-js/eslint-plugin-import/issues/2884)], thanks \\[[@&#8203;kinland](https://togithub.com/kinland)])\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMjguMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26087","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26087)"},{"Id":"1955327689","IsPullRequest":true,"CreatedAt":"2023-10-23T23:31:29","Actor":"angular-robot","Number":"26086","RawContent":null,"Title":"build: update github/codeql-action action to v2.22.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.22.3` -> `v2.22.4` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.22.4`](https://togithub.com/github/codeql-action/compare/v2.22.3...v2.22.4)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.22.3...v2.22.4)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMjguMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26086","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.22.4\" (#26086)"},{"Id":"1957408914","IsPullRequest":true,"CreatedAt":"2023-10-23T23:30:49","Actor":"clydin","Number":"26104","RawContent":null,"Title":"fix(@angular-devkit/build-angular): warn if using partial mode with application builder","State":"closed","Body":"The Angular compiler's partial compilation mode is only intended for use when building libraries. If attempting to use the mode while building an application, the application would fail. A warning is now issued if partial mode is configured for the application and the mode is switched to full compilation mode to prevent the build from failing due to the option value.","Url":"https://github.com/angular/angular-cli/pull/26104","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): warn if using partial mode with application builder\" (#26104)"},{"Id":"1955347940","IsPullRequest":false,"CreatedAt":"2023-10-23T23:06:56","Actor":"arambazamba","Number":"26088","RawContent":null,"Title":"Can't find stylesheet to import is back with 17.0.0.-rc.0","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.7\n\n### Description\n\nI just migrated an existing Angular project on a Windows PC from 16.2.7 to 17.0.0-rc.0 and got an error that was fixed in #25660 \n\n### Minimal Reproduction\n\nTake any ng 16.2x project with a global style sheet and upgrade it to 17rc\n\n### Exception or Error\n\n```text\n[ERROR] Can't find stylesheet to import.\r\n  ╷\r\n3 │ @import \"__NG_PACKAGE__;E%3A%5Cgit-classes%5Caz-native%5Capp%5Cweb%5Cfood-shop%5Csrc%5Ctheme;@angular/material/theming\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  theme.scss 3:9       @import\r\n  src\\styles.scss 2:9  root stylesheet [plugin angular-sass]\r\n\r\n    angular:styles/global:styles:2:8:\r\n      2 │ @import 'src/styles.scss';\r\n        ╵         ~~~~~~~~~~~~~~~~~\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26088","RelatedDescription":"Closed issue \"Can't find stylesheet to import is back with 17.0.0.-rc.0\" (#26088)"},{"Id":"1957695520","IsPullRequest":false,"CreatedAt":"2023-10-23T23:01:39","Actor":"pumano","Number":"26106","RawContent":null,"Title":"[esbuild] Incorrect error handling while processing background images","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI create issue #25089 not so long ago about problem when using tilde \"~\" syntax when processing css resources, and looks like in issue #25089 it should be fixed and error message should be displayed, but it not displayed. Today I debugging some other issue, trying to debug this issue too, and found that code in `css-resource-plugin` not correctly works.\r\n\r\n\r\nis looks like: \r\n\r\n```js\r\n  if (result.errors.length && args.path[0] === '~') {\r\n    result.errors[0].notes = [\r\n      {\r\n        location: null,\r\n        text: 'You can remove the tilde and use a relative path to reference it, which should remove this error.',\r\n      },\r\n   ];\r\n  }\r\n\r\n```\r\n\r\nbut interface `Message` from `esbuild` don't know about \"notes\" property.\r\n\r\n```js\r\ninterface Message {\r\n  text: string;\r\n  location: Location | null;\r\n  detail: any; // The original error from a JavaScript plugin, if applicable\r\n}\r\n```\r\n\r\nLooks like it should looks like:\r\n\r\n```js\r\n   if (result.errors.length && args.path[0] === '~') {\r\n     result.errors[0] = {\r\n        location: null,\r\n        text: 'You can remove the tilde and use a relative path to reference it, which should remove this error.',\r\n     };\r\n   }\r\n```\r\n\r\nAfter it I see proper error message\r\n\r\n\r\nAlso I would suggest to add ^ sign too and both old \"webpack\" syntax properly error handled with tailored error messages. \r\n\r\n### Minimal Reproduction\r\n\r\nadd background-image url with tilde\r\n\r\n```css\r\nbackground-image: url('~assets/dashboard/products.jpg')\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.16.1\r\nPackage Manager: yarn 3.6.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             16.2.7\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI can prepare PR if needed","Url":"https://github.com/angular/angular-cli/issues/26106","RelatedDescription":"Closed issue \"[esbuild] Incorrect error handling while processing background images\" (#26106)"},{"Id":"1957884557","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:44","Actor":"clydin","Number":"26108","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure css url() prefix warnings support Sass rebasing","State":"closed","Body":"The stylesheet url() resource plugin will now correctly issue warnings for the usage of Webpack specific prefixes such as the tilde when used in an imported Sass file. Previously, these URLs would be rebased by the Sass processing step which would cause the tilde prefix to no longer be a prefix. This would then no longer be considered a warning due to the tilde no longer being the first character of the URL value. Additionally, a warning is also now issued for the previously unsupported but available caret prefix. Removing the caret prefix and adding the path to the `externalDependencies` build option should provide equivalent behavior.","Url":"https://github.com/angular/angular-cli/pull/26108","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure css url() prefix warnings support Sass rebasing\" (#26108)"},{"Id":"1957370946","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:26","Actor":"clydin","Number":"26103","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): show build time on failures with application builder","State":"closed","Body":"The build time is now shown when bundling fails. Previously only the errors were shown. This provides additional information that the build did indeed fail and how long it took to fail.\r\n","Url":"https://github.com/angular/angular-cli/pull/26103","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): show build time on failures with application builder\" (#26103)"},{"Id":"1957309019","IsPullRequest":true,"CreatedAt":"2023-10-23T22:55:13","Actor":"clydin","Number":"26102","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove Sass module resolve workarounds","State":"closed","Body":"The recent version of the Sass compiler (`dart-sass@1.68.0`) now provides additional information within an importer that allows more accurate resolution of node modules packages without several existing workarounds. Previously, the Sass files needed to be pre-processed to extract all `@import` and `@use` paths so that information regarding the containing Sass file could be used to fully resolve the paths. The Sass compiler now provides this information directly.","Url":"https://github.com/angular/angular-cli/pull/26102","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove Sass module resolve workarounds\" (#26102)"},{"Id":"1955218511","IsPullRequest":true,"CreatedAt":"2023-10-23T22:54:50","Actor":"clydin","Number":"26084","RawContent":null,"Title":"perf(@angular-devkit/build-angular): conditionally add Angular compiler plugin to polyfills bundling","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser-esbuild`), the Angular compiler plugin is now only added to the polyfills bundler configuration if TypeScript files are found in the `polyfills` build option. This is not the case for a default project. The Angular compiler plugin is used to provide type-checking diagnostics for any TypeScript files present within the build. However, if there are no TypeScript files to process, there is no need to use it for the polyfills processing.","Url":"https://github.com/angular/angular-cli/pull/26084","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): conditionally add Angular compiler plugin to polyfills bundling\" (#26084)"},{"Id":"1957938651","IsPullRequest":true,"CreatedAt":"2023-10-23T20:06:32","Actor":"michaelfaith","Number":"26109","RawContent":null,"Title":"fix(@angular-devkit/schematics): running external schematics with yarn pnp","State":"open","Body":"This change addresses an issue encountered when running external schematics from a yarn pnp workspace.  The function used to resolve a collection json using node used recursion in a way that it effectively walked itself into an exception. Then if the exception is the type it expected, it would keep going.  This was flawed in that yarn with pnp throws a different type of error when it failed to load the mis-constructed collection path (e.g. `/node_modules/@schematics/angular/collection.json/package.json`).  `ENOTDIR` instead of `MODULE_NOT_FOUND`.\r\n\r\nThis process of intentionally / knowingly walking into an exception seems problematic in general.  So, I addressed it by removing the recursion that was used mainly because there's a similar need to construct the collection path from a relative path in the package.json as there is to construct the collection path from a relative path that's passed in.  Rather than leaning on the recursion to do this, I added the logic at the time we pull the schematics path from the package, and move on.\r\n\r\nSince the recursion was removed, the infinite recursion safety check at the start wasn't needed anymore.\r\n\r\nI've tested this in both yarn pnp and non-pnp environments.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25648\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\nFixes: #25648","Url":"https://github.com/angular/angular-cli/pull/26109","RelatedDescription":"Open PR \"fix(@angular-devkit/schematics): running external schematics with yarn pnp\" (#26109)"},{"Id":"1957752276","IsPullRequest":true,"CreatedAt":"2023-10-23T18:20:26","Actor":"clydin","Number":"26107","RawContent":null,"Title":"fix(@angular-devkit/build-angular): automatically include known packages in vite prebundling","State":"open","Body":"When using the Vite-based development server, the application build step already contains the list of known packages that would need to be prebundled. This information can be passed to Vite directly to avoid Vite needing to perform discovery on every output file that will be requested. This also avoids the Vite server behavior where Vite forces a reload of the page when it discovers a new dependency. This behavior can result in lost state during lazy loading of a route.","Url":"https://github.com/angular/angular-cli/pull/26107","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): automatically include known packages in vite prebundling\" (#26107)"},{"Id":"1958000382","IsPullRequest":false,"CreatedAt":"2023-10-23T17:20:01","Actor":"sonallux","Number":"26110","RawContent":null,"Title":"New `@angular/ssr` is missing `REQUEST` and `RESPONSE` tokens","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server, Don't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAngular Universal exposed two injection tokens `REQUEST` and `RESPONSE` from `@nguniversal/express-engine/tokens`. Also mentioned [here](https://github.com/angular/universal/blob/main/modules/express-engine/README.md#using-the-request-and-response) in the `ngExpressEngine` documentation. `\r\n\r\nUnfortunately the new SSR solution with `@angular/ssr` does not expose these anymore. Can you add them back or how should I handle use cases where I need access to the raw request object to read headers and/or cookies? \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26110","RelatedDescription":"Open issue \"New `@angular/ssr` is missing `REQUEST` and `RESPONSE` tokens\" (#26110)"},{"Id":"1957496849","IsPullRequest":false,"CreatedAt":"2023-10-23T15:57:37","Actor":"pumano","Number":"26105","RawContent":null,"Title":"[esbuild] background-urls processed with errors while process .css files from node_modules without files","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen I use `.css` from `node_modules` (from my library) with background urls that is could not be resolved. When I use webpack, I have no errors about it (also not have warnings - I think it's not good also) but that not stop me with errors in node_modules css background urls which could not be resolved.\r\n\r\n### Minimal Reproduction\r\n\r\nJust add `some.css` file to any node_module library, and import it into `project.json` for processing. That .css should contain\r\n\r\n```css\r\n.something {\r\n    background-image:url(assets/somefolder/my-header.jpg);\r\n}\r\n```\r\n\r\nbut we have no image in library. That's no problem for webpack. Webpack ignore it, but esbuild angular `css-resource-plugin` can't ignore it.\r\n\r\n\r\nI'm trying to fix that by my own via to check `css-resource-plugin.js` and add some code to build.onResolve\r\n\r\n```js\r\nif (result.errors.length && kind === 'url-token' && importer.includes('node_modules') && result.errors[0].text.includes('Could not resolve') ) {\r\n   result.warnings.push(result.errors[0])\r\n\r\n   result.errors[0] = undefined;\r\n   return {\r\n       warnings: result.warnings,\r\n       path: args.path,\r\n       external: true,\r\n   };\r\n}\r\n```\r\nand that solve my problem but when `tailwindcss` process my in app background-image urls that importer is node_modules too via `node_modules/tailwindcss`. That leads to all errors processed by `tailwindcss` also been marked as warnings. That's not a good idea.\r\n\r\nI'm add tailwindcss explicitly. Not the best way, but works)\r\n\r\n```js\r\nif (result.errors.length && kind === 'url-token' && (importer.includes('node_modules') && !importer.includes('tailwindcss')) && result.errors[0].text.includes('Could not resolve') ) {\r\n   result.warnings.push(result.errors[0])\r\n\r\n   result.errors[0] = undefined;\r\n   return {\r\n       warnings: result.warnings,\r\n       path: args.path,\r\n       external: true,\r\n   };\r\n}\r\n```\r\n\r\nThat fixes problems and mark all `node_modules` css imports as warnings, and only process properly `tailwindcss`\r\n\r\n### Exception or Error\r\n\r\n```text\r\nCould not resolve \"assets/somefolder/my-header.jpg\" [plugin angular-css-resource]\r\n\r\n    node_modules/@org/ui-lib/some.css:1:63459:\r\n      1 │ ...ound-image:url(assets/somefolder/my-header....\r\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n  You can mark the path \"assets/somefolder/my-header.jpg\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.0-rc.0\r\nNode: 18.16.1\r\nPackage Manager: yarn 3.6.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             16.2.7\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI can prepare PR if this solution is accepted by angular team.","Url":"https://github.com/angular/angular-cli/issues/26105","RelatedDescription":"Open issue \"[esbuild] background-urls processed with errors while process .css files from node_modules without files\" (#26105)"},{"Id":"1957042889","IsPullRequest":true,"CreatedAt":"2023-10-23T15:35:29","Actor":"alan-agius4","Number":"26100","RawContent":null,"Title":"docs(@angular-devkit/build-angular): update prendering options descriptions","State":"closed","Body":"\r\nThis commit updates several option descriptions\r\n","Url":"https://github.com/angular/angular-cli/pull/26100","RelatedDescription":"Closed or merged PR \"docs(@angular-devkit/build-angular): update prendering options descriptions\" (#26100)"},{"Id":"1957148363","IsPullRequest":false,"CreatedAt":"2023-10-23T14:34:54","Actor":"Casimodo72","Number":"26101","RawContent":null,"Title":"Library - share source code?","State":"closed","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\nHi, I'm relatively new to Angular and would like to reuse some standalone components, services and just some other code in multiple projects (in a single workspace).\r\nI learned that one can generate a \"library\" which needs to be build separately (lands in dist/lib) and is intended to be published (npm).\r\nBut what I'm envisioning is a library where I can just share the source code (like a .NET project or shared-code reference) without the hassle of building and publishing it (the latter not being possible for us anyway). Is this possible? Will this be supported someday?\r\nFrom what I read Angular has issues when files located outside of the app folder are referenced.\r\n\r\nCurrently I'm thinking of putting my library code anywhere and creating a symlink to it so the CLI will treat it as part of the project. Is this the preferred handling of such a scenario?\r\n(Hmm, now I'm wondering if symlinks could be a problem when using git) \r\n\r\n### Describe the solution you'd like\r\n\r\nA library for sharing of source code (without the need to build it separately or publish it)\r\n\r\n### Describe alternatives you've considered\r\n\r\nSymlink to the shared code folder","Url":"https://github.com/angular/angular-cli/issues/26101","RelatedDescription":"Closed issue \"Library - share source code?\" (#26101)"},{"Id":"1955529909","IsPullRequest":true,"CreatedAt":"2023-10-23T13:18:33","Actor":"clydin","Number":"26089","RawContent":null,"Title":"build: update Sass to v1.69.4","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26089","RelatedDescription":"Closed or merged PR \"build: update Sass to v1.69.4\" (#26089)"},{"Id":"1956874713","IsPullRequest":true,"CreatedAt":"2023-10-23T13:17:21","Actor":"alan-agius4","Number":"26099","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unused imports","State":"closed","Body":"Remove several unused imports\r\n","Url":"https://github.com/angular/angular-cli/pull/26099","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unused imports\" (#26099)"},{"Id":"1955028889","IsPullRequest":false,"CreatedAt":"2023-10-23T13:17:09","Actor":"mcalmus","Number":"26083","RawContent":null,"Title":"17.0.0 migration unnecessarily adds @angular/ssr","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe \"Replace usages of '@nguniversal/' packages with '@angular/ssr'.\" migration in 17.0.0-next.8 unnecessarily adds '@angular/ssr' as a dependency when '@nguniversal/' does not exist in original project.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26083","RelatedDescription":"Closed issue \"17.0.0 migration unnecessarily adds @angular/ssr\" (#26083)"},{"Id":"1956673526","IsPullRequest":true,"CreatedAt":"2023-10-23T13:17:08","Actor":"alan-agius4","Number":"26096","RawContent":null,"Title":"fix(@schematics/angular): do not add unnecessary dependency on `@angular/ssr` during migration","State":"closed","Body":"\r\n\r\nPrior to this change the Universal migration ran and added `@angular/ssr` even the workspace did not depend on `@nguniversal/` packages.\r\n\r\nCloses #26083","Url":"https://github.com/angular/angular-cli/pull/26096","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): do not add unnecessary dependency on `@angular/ssr` during migration\" (#26096)"},{"Id":"1956686030","IsPullRequest":true,"CreatedAt":"2023-10-23T10:43:19","Actor":"alan-agius4","Number":"26097","RawContent":null,"Title":"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling","State":"closed","Body":"\r\nThis is no longer needed as the server polyfills file there are no longer Angular deps that require to be \"linked\".\r\n","Url":"https://github.com/angular/angular-cli/pull/26097","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): remove JavaScript transformer from server polyfills bundling\" (#26097)"},{"Id":"1956761580","IsPullRequest":true,"CreatedAt":"2023-10-23T09:40:30","Actor":"alan-agius4","Number":"26098","RawContent":null,"Title":"fix(@angular/ssr): correctly set config URL","State":"open","Body":"When calling `renderApplication` or `renderModule` the URL would be overridden to undefined as the `url` option was not provided as an option.\r\n","Url":"https://github.com/angular/angular-cli/pull/26098","RelatedDescription":"Open PR \"fix(@angular/ssr): correctly set config URL\" (#26098)"},{"Id":"1956626724","IsPullRequest":false,"CreatedAt":"2023-10-23T08:27:21","Actor":"AnaA95","Number":"26095","RawContent":null,"Title":"[browser-esbuild] Trying to use partial ivy compilationMode doesn't work","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nUsing browser-esbuild with partial compilation mode throws an error when trying to serve or build the application. The error is not present when using the default builder.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new Angular application using the \"ng new\" command.\r\n2. npm i\r\n3. Switch to partial ivy in tsconfig.app.json by adding this code:\r\n```\r\n\"angularCompilerOptions\": { \r\n    \"compilationMode\": \"partial\" \r\n}\r\n```\r\n4. Make the changes in `angular.json` to move to esbuild as mentioned in the [docs](https://angular.io/guide/esbuild):\r\n```...\r\n\"architect\": {\r\n  \"build\": {\r\n    \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n...\r\n```\r\n5. Run `ng serve` (or try to build the app, it throws the same error).\r\n\r\n### Exception or Error\r\n\r\n```text\r\n✘ [ERROR] File 'src/main.ts' is missing from the TypeScript compilation. [plugin angular-compiler]\r\n\r\n  Ensure the file is part of the TypeScript program via the 'files' or 'include' property.\r\n\r\n\r\n✘ [ERROR] TestBed support (\"supportTestBed\" option) cannot be disabled in partial compilation mode. [plugin angular-compiler]\r\n\r\n    node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:88:\r\n      72 │ ...sync)('NG_ANALYZE_PROGRAM', () => angularCompiler.analyzeAsync());\r\n         ╵                                                      ^\r\n\r\n    at NgCompiler.makeCompilation (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:7065:13)\r\n    at file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:6758:31\r\n    at ActivePerfRecorder.inPhase (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-HJOPJLIM.js:134:14)\r\n    at NgCompiler.analyzeAsync (file:///Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular/compiler-cli/bundles/chunk-CWD5WGIF.js:6757:29)\r\n    at /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:89\r\n    at profileAsync (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/profiling.js:55:16)\r\n    at AotCompilation.initialize (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compilation/aot-compilation.js:72:44)\r\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n    at async /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:168:76\r\n    at async /Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/esbuild/lib/main.js:1349:22\r\n\r\n  This error came from the \"onStart\" callback registered here:\r\n\r\n    node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:136:18:\r\n      136 │             build.onStart(async () => {\r\n          ╵                   ~~~~~~~\r\n\r\n    at setup (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/@angular-devkit/build-angular/src/tools/esbuild/angular/compiler-plugin.js:136:19)\r\n    at async handlePlugins (/Users/ana.andrei/Repos/mf/simple-angular/simple-angular/node_modules/esbuild/lib/main.js:1339:9)\r\n```\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.7\r\nNode: 16.20.2\r\nPackage Manager: npm 8.19.4\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26095","RelatedDescription":"Open issue \"[browser-esbuild] Trying to use partial ivy compilationMode doesn't work\" (#26095)"},{"Id":"1956511486","IsPullRequest":true,"CreatedAt":"2023-10-23T07:16:39","Actor":"angular-robot","Number":"26094","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [x] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4yOC4wIiwidXBkYXRlZEluVmVyIjoiMzcuMjguMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26094","RelatedDescription":"Open PR \"build: lock file maintenance\" (#26094)"},{"Id":"1956268564","IsPullRequest":false,"CreatedAt":"2023-10-23T03:11:55","Actor":"d9j","Number":"26093","RawContent":null,"Title":"[browser-esbuild] in live reload mode background images included in saas styles not displaying upon code change","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n[browser-esbuild] in live reload mode background images included in saas styles not displaying upon live reload.\r\nupon start of live server background images are displayed on the web page. however upon next server live reload due to project code change the background images no longer loaded. in the logs showing 404 error\r\n\r\n### Minimal Reproduction\r\n\r\nplace  background image in saas file (scss) :\r\n\r\n.some-element{\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n\r\n   background-image: url(\"src/assets/images/some-image.png\");\r\n  \r\n  }\r\n  \r\n  start live  dev server\r\n  `\r\n   ng serve\r\n  `\r\n  upon start the background image is displayed. however if you make any change in the project code . for example edit html in component / ts file etc . the background image no longer loaded upon live reload. the behavior not consistent. some times  the  background image gets loaded. then upon live reload the image disappearing again. \r\n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nhttps://github.com/angular/angular-cli/issues/25943","Url":"https://github.com/angular/angular-cli/issues/26093","RelatedDescription":"Open issue \"[browser-esbuild] in live reload mode background images included in saas styles not displaying upon code change\" (#26093)"},{"Id":"1956008033","IsPullRequest":false,"CreatedAt":"2023-10-22T19:36:22","Actor":"JeanMeche","Number":"26092","RawContent":null,"Title":"Sub-optimal optimizations with ESBuild","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n\r\n### Description\r\n\r\nI've written a demo App which is mostly this: \r\n\r\n```\r\nexport class AppComponent {\r\n  constructor() {\r\n    isDevMode() ? console.log('devMode') : console.log('prodMode');\r\n  }\r\n}\r\n```\r\n\r\nWith Webpack, the first `console.log` is stripped out by optimization on `build` but with esbuild it isn't. \r\n\r\nJust for the sake of testing, I did try to  set `optimization: false` and then using the online REPL pass it through esbuild (just setting  `define: { ngDevMode: 'false'})`& terser : the 1st `console.log` is correctly removed. \r\n\r\nAre we missing some optimization here ? Or is that usecase far too simple to be relevant ? \r\n\r\n### Minimal Reproduction\r\n\r\nhttps://github.com/jeanmeche/my-lib/tree/optim \r\n\r\n* `ng build demo`\r\n* check the main.js in `dist`\r\n* check the `console.log`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: darwin x64\r\n\r\nAngular: 17.0.0-rc.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-rc.0\r\n@angular-devkit/build-angular   17.0.0-rc.0\r\n@angular-devkit/core            17.0.0-rc.0\r\n@angular-devkit/schematics      17.0.0-rc.0\r\n@schematics/angular             17.0.0-rc.0\r\nng-packagr                      17.0.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26092","RelatedDescription":"Closed issue \"Sub-optimal optimizations with ESBuild\" (#26092)"},{"Id":"1955914293","IsPullRequest":false,"CreatedAt":"2023-10-22T15:01:08","Actor":"jasonrichdarmawan","Number":"26091","RawContent":null,"Title":"fileReplacements for @angular-devkit/build-angular:ng-packagr","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nMy goal is to compile Angular application as a library.\r\n\r\nThe problem is `app1-lib` do not have `fileReplacements`, so when `app1-lib` is compiled. It always use `environment.ts` instead of `environment.prod.ts`.\r\n\r\nIs there a way to replace file in angular library?\r\n\r\nangular.json\r\n```\r\n    \"app1\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {\r\n        \"@schematics/angular:component\": {\r\n          \"style\": \"scss\"\r\n        },\r\n        \"@schematics/angular:application\": {\r\n          \"strict\": true\r\n        }\r\n      },\r\n      \"root\": \"projects/app1\",\r\n      \"sourceRoot\": \"projects/app1/src\",\r\n      \"prefix\": \"app\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/app1\",\r\n            \"index\": \"projects/app1/src/index.html\",\r\n            \"main\": \"projects/app1/src/main.ts\",\r\n            \"polyfills\": \"projects/app1/src/polyfills.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.app.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"projects/app1/src/favicon.ico\",\r\n              \"projects/app1/src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"projects/app1/src/styles.scss\"\r\n            ],\r\n            \"scripts\": []\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"500kb\",\r\n                  \"maximumError\": \"1mb\"\r\n                },\r\n                {\r\n                  \"type\": \"anyComponentStyle\",\r\n                  \"maximumWarning\": \"2kb\",\r\n                  \"maximumError\": \"4kb\"\r\n                }\r\n              ],\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"projects/app1/src/environments/environment.ts\",\r\n                  \"with\": \"projects/app1/src/environments/environment.prod.ts\"\r\n                }\r\n              ],\r\n              \"outputHashing\": \"all\"\r\n            },\r\n            \"development\": {\r\n              \"buildOptimizer\": false,\r\n              \"optimization\": false,\r\n              \"vendorChunk\": true,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true,\r\n              \"namedChunks\": true\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"browserTarget\": \"app1:build:production\"\r\n            },\r\n            \"development\": {\r\n              \"browserTarget\": \"app1:build:development\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"development\"\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"browserTarget\": \"app1:build\"\r\n          }\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"main\": \"projects/app1/src/test.ts\",\r\n            \"polyfills\": \"projects/app1/src/polyfills.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.spec.json\",\r\n            \"karmaConfig\": \"projects/app1/karma.conf.js\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"projects/app1/src/favicon.ico\",\r\n              \"projects/app1/src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"projects/app1/src/styles.scss\"\r\n            ],\r\n            \"scripts\": []\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"app1-lib\": {\r\n      \"projectType\": \"library\",\r\n      \"root\": \"projects/app1\",\r\n      \"sourceRoot\": \"projects/app1/src\",\r\n      \"prefix\": \"lib\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:ng-packagr\",\r\n          \"options\": {\r\n            \"project\": \"projects/app1/ng-package.json\"\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"tsConfig\": \"projects/app1/tsconfig.app.json\"\r\n            },\r\n            \"development\": {\r\n              \"tsConfig\": \"projects/app1/tsconfig.app.json\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"main\": \"projects/app1/src/test.ts\",\r\n            \"tsConfig\": \"projects/app1/tsconfig.spec.json\",\r\n            \"karmaConfig\": \"projects/app1/karma.conf.js\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n```\n\n### Describe the solution you'd like\n\nI would like to have the `fileReplacements` key just like when I use `@angular-devkit/build-angular:browser`.\n\n### Describe alternatives you've considered\n\nEvery app will import `environment.prod.ts` instead of `environment.ts`. So when `npx ng build:ssr`, the environment used is the production environment. But this is not a solution since now I do not have access to the development `environment.ts`.","Url":"https://github.com/angular/angular-cli/issues/26091","RelatedDescription":"Closed issue \"fileReplacements for @angular-devkit/build-angular:ng-packagr\" (#26091)"},{"Id":"1955844698","IsPullRequest":false,"CreatedAt":"2023-10-22T10:22:26","Actor":"HymanZHAN","Number":"26090","RawContent":null,"Title":"`@angular-devkit/build-angular:browser-esbuild` reloads when navigating to lazy routes for the first time, causing navigation to fail.","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nSimilar issue: https://github.com/angular/angular-cli/issues/25455\r\n\r\nWhen serving with the Vite dev server, with caching enabled but no existing cache for lazy routes, the page will reload when I click on a link to a lazy route. And in some cases, the navigation will simply fail.\r\n\r\nhttps://github.com/angular/angular-cli/assets/26806995/63dafb60-555e-4922-a808-fbab0a694420\r\n\r\nMy lazy route shows a list of items in my little test case, and I am using `ngFor` in the template. The navigation will proceed if the template is a simple `<p>lazy-list works!</p>`.\r\n\r\nDespite the reply in the related issue (https://github.com/angular/angular-cli/issues/25455), I still expect/hope Angular cache and Vite play more nicely together because I want the cache enabled for faster dev builds. A _very very_ naive idea is that the Vite dev server only reads the cache when it first launches, only writes to the cache before it shuts down, and keeps behaving as if there is no such thing as a cache during the whole life cycle of its process.\r\n\r\n### Minimal Reproduction\r\n\r\nI have [a minimal repo](https://github.com/HymanZHAN/esbuild-issue) with the reproduction.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.7\r\nNode: 18.12.1\r\nPackage Manager: pnpm 7.25.1\r\nOS: linux x64\r\n\r\nAngular: 16.2.10\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.7\r\n@angular-devkit/build-angular   16.2.7\r\n@angular-devkit/core            16.2.7\r\n@angular-devkit/schematics      16.2.7\r\n@angular/cli                    16.2.7\r\n@schematics/angular             16.2.7\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26090","RelatedDescription":"Open issue \"`@angular-devkit/build-angular:browser-esbuild` reloads when navigating to lazy routes for the first time, causing navigation to fail.\" (#26090)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1958329550","IsPullRequest":true,"CreatedAt":"2023-10-24T02:01:31","Actor":"wagnermaciel","Number":"27986","RawContent":null,"Title":"refactor(material/button): switch outlined-button to density tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27986","RelatedDescription":"Open PR \"refactor(material/button): switch outlined-button to density tokens\" (#27986)"},{"Id":"1958310246","IsPullRequest":true,"CreatedAt":"2023-10-24T01:42:04","Actor":"zarend","Number":"27985","RawContent":null,"Title":"fix(cdk/tree): first attempt at injecting tree key manager","State":"open","Body":"This commit message will be squashed away.","Url":"https://github.com/angular/components/pull/27985","RelatedDescription":"Open PR \"fix(cdk/tree): first attempt at injecting tree key manager\" (#27985)"},{"Id":"1954187406","IsPullRequest":true,"CreatedAt":"2023-10-23T17:10:49","Actor":"andrewseguin","Number":"27970","RawContent":null,"Title":"fix(material/checkbox): add aria-checked","State":"closed","Body":"Adding aria-checked to the checkbox input. Technically this is redundant but Material Web's new styling requires indeterminate mode to have aria-checked=mixed when enabled.","Url":"https://github.com/angular/components/pull/27970","RelatedDescription":"Closed or merged PR \"fix(material/checkbox): add aria-checked\" (#27970)"},{"Id":"1957181097","IsPullRequest":true,"CreatedAt":"2023-10-23T13:32:13","Actor":"amysorto","Number":"27984","RawContent":null,"Title":"fix(material/button): Emit icon button tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27984","RelatedDescription":"Open PR \"fix(material/button): Emit icon button tokens under mixin root selector\" (#27984)"},{"Id":"1956631972","IsPullRequest":true,"CreatedAt":"2023-10-23T11:36:21","Actor":"crisbeto","Number":"27980","RawContent":null,"Title":"refactor(material/tree): switch to tokens theming API","State":"closed","Body":"Reworks the tree to use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27980","RelatedDescription":"Closed or merged PR \"refactor(material/tree): switch to tokens theming API\" (#27980)"},{"Id":"1956929793","IsPullRequest":false,"CreatedAt":"2023-10-23T11:17:28","Actor":"dana-c0914","Number":"27983","RawContent":null,"Title":"bug(Datepicker): setting value inside valueChanges doesn't update the UI","State":"open","Body":"### Is this a regression?\r\n\r\nI don't know if this was working at some point or not\r\n\r\n### Description\r\n\r\nI am using reactive forms to get/set values from a datepicker and I noticed that if I set a date manually, inside the valueChanges event based on some condition, the value of the form control updates, but not the UI.\r\n\r\nThe UI changes however if you remove the input and manually set a value inside valueChanges.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/qpu5ns\r\nSteps to reproduce (1):\r\n(1*. Select any date - optional)\r\n1. Select the 10th of any month\r\n2. Check date displayed in input vs date printed under the input\r\n\r\n\r\n### Expected Behavior\r\n\r\nWe have the same date in the input as printed below the input\r\n\r\n### Actual Behavior\r\n\r\nThe date in the input is the date selected using the datepicker, the date below the input is the date set inside valueChanges\r\n\r\n### Environment\r\n\r\nBrowser: Chrome\r\n(From the stackblitz environment)\r\nAngular CLI: 16.1.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\n| Package | Version |\r\n|--------|--------|\r\n| @angular-devkit/architect | 0.1601.0 |\r\n| @angular-devkit/build-angular | 16.1.0 |\r\n| @angular-devkit/core | 16.1.0 |\r\n| @angular-devkit/schematics | 16.1.0 |\r\n| @angular/cdk | 16.2.9 |\r\n| @angular/cli | 16.1.0 | \r\n| @angular/material | 16.2.9 |\r\n| @angular/material-moment-adapter | 16.2.9 |\r\n| @schematics/angular | 16.1.0 | \r\n| rxjs | 7.4.0 | \r\n| typescript | 5.0.3 | ","Url":"https://github.com/angular/components/issues/27983","RelatedDescription":"Open issue \"bug(Datepicker): setting value inside valueChanges doesn't update the UI\" (#27983)"},{"Id":"1956657433","IsPullRequest":false,"CreatedAt":"2023-10-23T08:44:19","Actor":"Mradmedamine","Number":"27982","RawContent":null,"Title":"bug(MatFormField): layout glitch on long mat-error text","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWhen having a long error text on a mat-form-field the text overlaps with any thing under the field.\r\n\r\n![image](https://github.com/angular/components/assets/12666919/bdb6b3d7-4c38-4d69-8a66-85e40cbd42f1)\r\n\r\nNOTE: This happens on outlined mat-form-field. For filled mat-form-field the text is cut and not fully shown. As picture below :\r\n\r\n![image](https://github.com/angular/components/assets/12666919/f63046da-b399-4308-9053-819bbf299467)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://stackblitz.com/run?file=src%2Fapp%2Fform-field-error-example.ts](https://stackblitz.com/run?file=src%2Fapp%2Fform-field-error-example.ts)\r\nSteps to reproduce:\r\n1.  Put a long error text.\r\n2. Put another input field under\r\n\r\n\r\n### Expected Behavior\r\n\r\nthe error should be shown properly and not overlaps with the element on the bottom.\r\n\r\n\r\n\r\n### Actual Behavior\r\n\r\nThe error text is is being hidden by text under the mat-form-field.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.10\r\n- CDK/Material: 16.2.9\r\n- Browser(s):  Chrome Version 118.0.5993.88\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27982","RelatedDescription":"Open issue \"bug(MatFormField): layout glitch on long mat-error text\" (#27982)"},{"Id":"1956640072","IsPullRequest":true,"CreatedAt":"2023-10-23T08:35:12","Actor":"Almost-Infinity","Number":"27981","RawContent":null,"Title":"fix(cdk/accordion): add `CDK_ACCORDION` export","State":"open","Body":"Fixes an issue in the Angular CDK `accordion` component where `CDK_ACCORDION` injection token cannot be imported from `@angular/cdk/accordion`. This is because `public-api.ts` did not contain `CDK_ACCORDION` export.","Url":"https://github.com/angular/components/pull/27981","RelatedDescription":"Open PR \"fix(cdk/accordion): add `CDK_ACCORDION` export\" (#27981)"},{"Id":"1956573937","IsPullRequest":true,"CreatedAt":"2023-10-23T08:28:40","Actor":"Almost-Infinity","Number":"27979","RawContent":null,"Title":"fix(cdk/accordion): add `CDK_ACCORDION` export","State":"closed","Body":"Fixes an issue in the Angular CDK `accordion` component where `CDK_ACCORDION` injection token cannot be imported from `@angular/cdk/accordion`. This is because `public-api.ts` did not contain `CDK_ACCORDION` export.","Url":"https://github.com/angular/components/pull/27979","RelatedDescription":"Closed or merged PR \"fix(cdk/accordion): add `CDK_ACCORDION` export\" (#27979)"},{"Id":"1955815942","IsPullRequest":true,"CreatedAt":"2023-10-22T20:50:49","Actor":"crisbeto","Number":"27977","RawContent":null,"Title":"build: update to Angular v17 RC","State":"closed","Body":"Updates us to the release candidate of Angular v17.","Url":"https://github.com/angular/components/pull/27977","RelatedDescription":"Closed or merged PR \"build: update to Angular v17 RC\" (#27977)"},{"Id":"1956010147","IsPullRequest":false,"CreatedAt":"2023-10-22T18:42:02","Actor":"GeorgeKnap","Number":"27978","RawContent":null,"Title":"bug(mat-chip-listbox): vertical orientation not working","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`<mat-chip-listbox aria-orientation=\"vertical\">`\r\n![image](https://github.com/angular/components/assets/11920691/47b0397b-ddd7-43f0-80dc-ca0952666ad9)\r\nthis input seems to be broken as it stays horizontal...\r\n![image](https://github.com/angular/components/assets/11920691/7c3bdbd2-a6fd-49f2-a043-ac3ac087503e)\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://stackblitz.com/edit/kup7ap?file=src%2Fexample%2Fchips-avatar-example.html](https://stackblitz.com/edit/kup7ap?file=src%2Fexample%2Fchips-avatar-example.html)\r\n\r\n\r\n### Expected Behavior\r\n\r\nvertical layout\r\n\r\n### Actual Behavior\r\n\r\nhorizontal layout\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27978","RelatedDescription":"Open issue \"bug(mat-chip-listbox): vertical orientation not working\" (#27978)"},{"Id":"1955334088","IsPullRequest":true,"CreatedAt":"2023-10-21T05:35:03","Actor":"DaxChen","Number":"27976","RawContent":null,"Title":"fix(material/button): Use `raised-button` theme color instead of `card` for raised-button","State":"open","Body":"We use map-merge to customize the theme config ([based on this comment](https://github.com/angular/components/issues/6244#issuecomment-1017629612)) but during MDC migration the default (un-themed) color changes for raised buttons because `_button-theme.scss` is reading the `card` field in the theme color map instead of the old `raised-button` field.","Url":"https://github.com/angular/components/pull/27976","RelatedDescription":"Open PR \"fix(material/button): Use `raised-button` theme color instead of `card` for raised-button\" (#27976)"},{"Id":"1953816471","IsPullRequest":false,"CreatedAt":"2023-10-20T22:14:48","Actor":"TomTomB","Number":"27968","RawContent":null,"Title":"bug(cdk-dialog): Unable to inject providers provided via route config into dialog","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nInjecting providers into a dialog that are provided via route config currently always results in a R3InjectorError. Adding the view container ref or injector of the current component to the dialog's config does not fix this problem.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/angular-x5794s?file=src%2Fmain.ts\n\n### Expected Behavior\n\nInjecting providers provided via route config should work.\n\n### Actual Behavior\n\nInjecting providers provided via route config always results in a R3InjectorError\n\n### Environment\n\n- Angular: 16.2.10\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows \r\n","Url":"https://github.com/angular/components/issues/27968","RelatedDescription":"Closed issue \"bug(cdk-dialog): Unable to inject providers provided via route config into dialog\" (#27968)"},{"Id":"1954516263","IsPullRequest":false,"CreatedAt":"2023-10-20T22:08:04","Actor":"Mradmedamine","Number":"27972","RawContent":null,"Title":"bug(MatFormField): layout glitch on long hint text","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen having a long hint text on a mat-form-field  the text overlaps with any text under the field.\r\n\r\n![image](https://github.com/angular/components/assets/12666919/ffc5f4d2-b97f-41f2-a1d4-e6df881e7794)\r\n\r\n\r\nhttps://stackblitz.com/run?file=src%2Fexample%2Fform-field-appearance-example.html\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1.  Put a a long hint text of 3 sentences at least\r\n2.  See the changes on the UI.\r\n\n\n### Expected Behavior\n\nthe hint text should be shown properly and not overlaps with the element on the bottom.\n\n### Actual Behavior\n\nThe hint text is is being hidden by text under the mat-form-field.\n\n### Environment\n\n- Angular: 16.2.10\r\n- CDK/Material:16.2.9\r\n- Browser(s): Chrome Version 118.0.5993.88\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27972","RelatedDescription":"Closed issue \"bug(MatFormField): layout glitch on long hint text\" (#27972)"},{"Id":"1954840565","IsPullRequest":false,"CreatedAt":"2023-10-20T22:01:46","Actor":"andrewalderson","Number":"27974","RawContent":null,"Title":"feat(MatToolbar): media query for size change should include orientation","State":"closed","Body":"### Feature Description\r\n\r\nThe following is presented for your condieration.\r\n\r\nCurrently the media query for the MatToolbar that changes its height for mobile is:\r\n```\r\n@media (max-width: 599px)\r\n\t.mat-toolbar-row, .mat-toolbar-single-row {\r\n\t\theight: var(--mat-toolbar-mobile-height);\r\n\t}\r\n}\r\n```\r\n\r\nWhy doesn't it take orientation and media type into consideration?\r\n\r\nShouldn't the media query be something like (haven't actually thought this through but you get the drift):\r\n```\r\n@media only screen and (max-width: 599px) and (orientation: portrait),\r\n  only screen and (max-height: 599px) and (orientation: landscape) {\r\n\t.mat-toolbar-row, .mat-toolbar-single-row {\r\n\t\theight: var(--mat-toolbar-mobile-height);\r\n\t}\r\n}\r\n```\r\n\r\n\r\nI will get into the whole think with the css variables in another issue :)\r\n","Url":"https://github.com/angular/components/issues/27974","RelatedDescription":"Closed issue \"feat(MatToolbar): media query for size change should include orientation\" (#27974)"},{"Id":"1952554882","IsPullRequest":true,"CreatedAt":"2023-10-20T20:35:04","Actor":"mmalerba","Number":"27964","RawContent":null,"Title":"fix(material/schematics): Create a schematic to add the base theme dimension","State":"closed","Body":"As of v17, users need to include the new \"base\" theme dimension for the components they use. For users that are using the \"theme\" mixins now, the base dimension will be pulled in automatically. However, for users using the \"color\", \"typography\", and \"density\" mixins only, they will need to include the \"base\" mixin as well.\r\n\r\nThis schematic works by scanning all of the app's Sass to determine which components had their \"color\", \"typography\", or \"density\" mixins included, but did *not* have their \"theme\" mixin included. It then locates all of the calls to \"mat.core()\" and inserts calls to the \"base\" mixins for the identified compoennts, immediately following. It makes sense to use \"mat.core()\" as a signal for when to insert them, because the \"base\" mixins should be used once-per-app, like \"mat.core()\". We can't guarantee that a \"$theme\" will be available at the insertion point, so we create a \"$dummy-theme\" to pass to the base mixins.\r\n\r\nWe also insert a comment above the new mixins explaining why they were added and a TODO to clean up the \"$dummy-theme\". Once we have the documentation updated to cover the base dimension, we should follow-up by linking to it from the inserted comment.","Url":"https://github.com/angular/components/pull/27964","RelatedDescription":"Closed or merged PR \"fix(material/schematics): Create a schematic to add the base theme dimension\" (#27964)"},{"Id":"1954894254","IsPullRequest":false,"CreatedAt":"2023-10-20T19:16:54","Actor":"andrewalderson","Number":"27975","RawContent":null,"Title":"feat(MatToolbar): css variables for the actual height of the toolbar should be exposed","State":"open","Body":"### Feature Description\r\n\r\nThe following is presented for your consideration and it related to #27974\r\n\r\nI don't think the whole idea of changing the height of the MatToolbar on mobile and its implications has been totally thought through. In the past there was no really good way to change the styles in my application to accommodate this without knowing the media query that is used. I will present as an example your own code. This is the code from the last example on this [page ](https://material.angular.io/components/sidenav/examples)\r\n\r\nHtml\r\n```\r\n<div class=\"example-container\" [class.example-is-mobile]=\"mobileQuery.matches\" *ngIf=\"shouldRun\">\r\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\r\n    <button mat-icon-button (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\r\n    <h1 class=\"example-app-name\">Responsive App</h1>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav-container class=\"example-sidenav-container\"\r\n                         [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\r\n    <mat-sidenav #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\r\n                 [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\">\r\n      <mat-nav-list>\r\n        <a mat-list-item routerLink=\".\" *ngFor=\"let nav of fillerNav\">{{nav}}</a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <p *ngFor=\"let content of fillerContent\">{{content}}</p>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n```\r\nAnd css\r\n```\r\n.example-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.example-is-mobile .example-toolbar {\r\n  position: fixed;\r\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\r\n  z-index: 2;\r\n}\r\n\r\nh1.example-app-name {\r\n  margin-left: 8px;\r\n}\r\n\r\n.example-sidenav-container {\r\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\r\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\r\n  flex: 1;\r\n}\r\n\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n}\r\n```\r\n\r\nThe problem with this code is that on mobile the content in the sidenav container will be under the toolbar so a ``padding-top`` or a ```margin-top``` needs to be added. This forces me to know the breakpoint that the height of the toolbar changes and which variable to use.\r\n\r\nWhy can't you just expose one variable that tells me the height of the toolbar regardless of the screen size, something like ```--mat-toolbar-height```? At the end of the day, as a developer that is all I care about. Regardless of what my determination of a 'mobile' screen is I should just have to add something like this:\r\n```\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n margin-top: var(--mat-toolbar-height);\r\n}\r\n```\r\ninstead of having to do something like this (this may be wrong but you get the point):\r\n```\r\n.example-is-mobile .example-sidenav-container {\r\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\r\n     `<body>` to be our scrolling element for mobile layouts. */\r\n  flex: 1 0 auto;\r\n margin-top: var(--mat-toolbar-standard-height);\r\n}\r\n@media {what ever the toolbar media query is} {\r\n  .example-is-mobile .example-sidenav-container {\r\n   margin-top: var(--mat-toolbar-mobile-height);\r\n  }\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/27975","RelatedDescription":"Open issue \"feat(MatToolbar): css variables for the actual height of the toolbar should be exposed\" (#27975)"},{"Id":"1954656824","IsPullRequest":true,"CreatedAt":"2023-10-20T16:31:53","Actor":"devknoll","Number":"27973","RawContent":null,"Title":"refactor(multiple): use Renderer2 for theming instead of direct DOM manipulation","State":"open","Body":"Instead of directly manipulating the DOM via ElementRef (which requires DOM emulation), this change makes it use the Renderer2 interface instead.","Url":"https://github.com/angular/components/pull/27973","RelatedDescription":"Open PR \"refactor(multiple): use Renderer2 for theming instead of direct DOM manipulation\" (#27973)"},{"Id":"1954307972","IsPullRequest":false,"CreatedAt":"2023-10-20T13:34:48","Actor":"Nikami","Number":"27971","RawContent":null,"Title":"bug(MatChipList): chip list disabled should respect each chip item disabled state","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nChiplist [disabled] toggling from disable to enable doesn't respect each chip item [disabled] state. Chip items, which are actually disabled become visually enabled.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vdefsz?file=src%2Fexample%2Fchips-input-example.html,src%2Fexample%2Fchips-input-example.ts\r\n\r\n\r\nSteps to reproduce:\r\n1. The chip item is disabled and has properly disabled styles in initialization\r\n![2023-10-20_15h12_54](https://github.com/angular/components/assets/12629525/a8ca53f3-a9ee-44a7-8e4b-f8f20f74b469)\r\n2. Click 'Disable chiplist'\r\n3. Click 'Enable chiplist'\r\n\n\n### Expected Behavior\n\nThe chip item is visually disabled \n\n### Actual Behavior\n\nThe chip item ignores its disabled state and looks like enabled\n\n### Environment\n\n- Angular: 16.2.9\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Google Chrome, Version 118.0.5993.88 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27971","RelatedDescription":"Open issue \"bug(MatChipList): chip list disabled should respect each chip item disabled state\" (#27971)"},{"Id":"1954170764","IsPullRequest":true,"CreatedAt":"2023-10-20T12:21:06","Actor":"andrewseguin","Number":"27969","RawContent":null,"Title":"fix(material/checkbox): add aria-checked","State":"closed","Body":"Adding `aria-checked` to the checkbox input. Technically this is redundant but Material Web's new styling requires indeterminate mode to have `aria-checked=mixed` when enabled.","Url":"https://github.com/angular/components/pull/27969","RelatedDescription":"Closed or merged PR \"fix(material/checkbox): add aria-checked\" (#27969)"},{"Id":"1953566735","IsPullRequest":false,"CreatedAt":"2023-10-20T05:37:02","Actor":"cusher","Number":"27967","RawContent":null,"Title":"bug(MatFormField): getConnectedOverlayOrigin includes form field hint area","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14 (works w/ Legacy)\n\n### Description\n\nWhen migrating to the MDC-based components, the `getConnectedOverlayOrigin()` method on `MatFormField` now seems to point to the bottom of entire form field div (i.e. including the hint area) rather than the bottom edge of the input box. This makes it difficult to attach overlays to the bottom of custom form fields in a clean non-hacky way.\r\n\r\nBasic example that demonstrates the problem:\r\n\r\n1. Create a basic component that implements `MatFormFieldControl` (just directly copying the example [from the guide here](https://material.angular.io/guide/creating-a-custom-form-field-control) works for this).\r\n2. Add a simple `mat-autocomplete` and wire it up to the input on the component.\r\n3. Add a `MatAutocompleteOrigin` field to the component which points to the `MatFormField`'s `getConnectedOverlayOrigin()` (also may need to update this on ngOnInit to be safe).\r\n4. Set the `matAutocompleteConnectedTo` in the template to the `MatAutocompleteOrigin` field.\r\n\r\nPreviously this would make the autocomplete overlay open lined up below the bottom edge of the form field, now there is an unsightly gap.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/6vnpqz\r\n\r\nSteps to reproduce:\r\n1. Click the form field\n\n### Expected Behavior\n\nAttached overlay should appear directly below the form field's underline\n\n### Actual Behavior\n\nAttached overlay appears below the form field's hint area\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Ubuntu","Url":"https://github.com/angular/components/issues/27967","RelatedDescription":"Open issue \"bug(MatFormField): getConnectedOverlayOrigin includes form field hint area\" (#27967)"},{"Id":"1952745059","IsPullRequest":true,"CreatedAt":"2023-10-19T21:41:43","Actor":"srikumar03","Number":"27965","RawContent":null,"Title":"Do not consoder it index.html","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27965","RelatedDescription":"Closed or merged PR \"Do not consoder it index.html\" (#27965)"},{"Id":"1952926628","IsPullRequest":true,"CreatedAt":"2023-10-19T19:38:10","Actor":"josephperrott","Number":"27966","RawContent":null,"Title":"ci: fix environment variables","State":"closed","Body":"Provide environment variables for deploying docs site","Url":"https://github.com/angular/components/pull/27966","RelatedDescription":"Closed or merged PR \"ci: fix environment variables\" (#27966)"},{"Id":"1951533375","IsPullRequest":true,"CreatedAt":"2023-10-19T12:33:58","Actor":"crisbeto","Number":"27963","RawContent":null,"Title":"refactor(material/sort): switch to token theming API","State":"closed","Body":"Reworks the sort header to use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27963","RelatedDescription":"Closed or merged PR \"refactor(material/sort): switch to token theming API\" (#27963)"},{"Id":"1950476628","IsPullRequest":false,"CreatedAt":"2023-10-18T19:20:28","Actor":"mmercure","Number":"27962","RawContent":null,"Title":"bug(MatMenu): Menu item with menuTrigger combine with menu item in sub component does not clos sub menu","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n\r\n![image](https://github.com/angular/components/assets/6987117/f79c0a39-5f3e-4ccc-b888-30b3d3a8038a)\r\n\r\nA mat-menu, using a `mat-menu-item` with a `matMenuTriggerFor` next to a menu-item in a sub component does not properly closes sub menu and handle highlighted item on mouse over.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/x3u2hh?file=src%2Fexample%2Fmenu-nested-example.html\r\nSteps to reproduce:\r\n1. Open menu by clicking _Animal index_ button\r\n2. Mouse Over _Vertebrates_ menu, the sub menu opens\r\n3. Mouse Over _Menu item component_\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe Vertebrates sub menu should close and Vertebrates menu should no longer be highlighted\r\nonly menu-item _Menu item component_ should be highlighted\r\n\r\n### Actual Behavior\r\n\r\nThe Vertebrates sub menu is still open and Vertebrates menu is still highlighted along with  _Menu item component_\r\n\r\n### Environment\r\n\r\n- Angular: 16.1\r\n- CDK/Material: 16.2.9\r\n- Browser(s): chrome / Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27962","RelatedDescription":"Open issue \"bug(MatMenu): Menu item with menuTrigger combine with menu item in sub component does not clos sub menu\" (#27962)"},{"Id":"1950399522","IsPullRequest":true,"CreatedAt":"2023-10-18T18:37:59","Actor":"devknoll","Number":"27961","RawContent":null,"Title":"refactor(multiple): remove DOM emulation usage from table components","State":"open","Body":"### Note: this is just an experiment. Do not merge!\r\n\r\n---\r\n\r\nDOM manipulation and emulation prevents the table component from being hydrated. These changes refactor it to avoid them.","Url":"https://github.com/angular/components/pull/27961","RelatedDescription":"Open PR \"refactor(multiple): remove DOM emulation usage from table components\" (#27961)"},{"Id":"1950334675","IsPullRequest":true,"CreatedAt":"2023-10-18T17:59:57","Actor":"amysorto","Number":"27960","RawContent":null,"Title":"docs: release notes for the v17.0.0-rc.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27960","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.0-rc.0 release\" (#27960)"},{"Id":"1950329470","IsPullRequest":true,"CreatedAt":"2023-10-18T17:54:43","Actor":"amysorto","Number":"27959","RawContent":null,"Title":"Bump version to \"v17.0.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27959","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-rc.0\" with changelog.\" (#27959)"},{"Id":"1950305635","IsPullRequest":true,"CreatedAt":"2023-10-18T17:41:47","Actor":"amysorto","Number":"27958","RawContent":null,"Title":"docs: release notes for the v16.2.9 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27958","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.9 release\" (#27958)"},{"Id":"1950301167","IsPullRequest":true,"CreatedAt":"2023-10-18T17:37:49","Actor":"amysorto","Number":"27957","RawContent":null,"Title":"Bump version to \"v16.2.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27957","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.9\" with changelog.\" (#27957)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-24T03:30:02.4305394Z","RunDurationInMilliseconds":1592}