{"Data":{"Angular-Issues":{"Issues":[{"Id":"2954604371","IsPullRequest":false,"CreatedAt":"2025-03-27T22:55:10","Actor":"rush1818","Number":"60599","RawContent":null,"Title":"Signal `model()` support with downgradeComponent","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nupgrade\n\n### Description\n\nLooking at the downgradeComponent code, signal based `input()`s are supported however `model()`s are not. Is it possible to support those as well? I guess [this block](https://github.com/angular/angular/blob/5948cd03c505c252602e80d09d5c63ea8fd38f70/packages/upgrade/src/common/src/downgrade_component_adapter.ts#L251) likely needs some changes?\n\nThanks!\n\n### Proposed solution\n\nNA\n\n### Alternatives considered\n\nNA","Url":"https://github.com/angular/angular/issues/60599","RelatedDescription":"Open issue \"Signal `model()` support with downgradeComponent\" (#60599)"},{"Id":"2954498101","IsPullRequest":false,"CreatedAt":"2025-03-27T21:58:35","Actor":"LeVraiSylvain","Number":"60598","RawContent":null,"Title":"Query params not available in SSR","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n### Steps to reproduce:\n\n1. Create an app called dummyapp using Angular CLI version 19.2.5 with the --ssr option (ng new dummyapp --ssr).\n\n2. In the app.component.ts, add the following code :\n```\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  title = 'dummyapp';\n\n/**\n *\n */\nconstructor(\n  private route: ActivatedRoute\n) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(async params => {\n     this.title = params['title'];\n    });\n  }\n}\n```\n3. Run `ng serve`\n4. Start your browser and disable Javascript\n5. Navigate to http://localhost:4200/?title=MyTitle  => It should work correcly\n6. Stop `ng serve`\n7. Run `ng build && yarn serve:ssr:dummyapp`\n8. Make sure Javascript is still disable in your browser\n9. Navigate to http://localhost:4000/?title=MyTitle   => It does not work correcly. The title from the query string is not retrieved.\n\n![Image](https://github.com/user-attachments/assets/0733a44f-2184-46ad-8449-3390457c9625)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.5\nNode: 22.14.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60598","RelatedDescription":"Open issue \"Query params not available in SSR\" (#60598)"},{"Id":"2954452470","IsPullRequest":true,"CreatedAt":"2025-03-27T21:26:27","Actor":"atscott","Number":"60597","RawContent":null,"Title":"fix(language-service): Ensure dollar signs are escaped in completions","State":"open","Body":"Dollar signs need to be escaped so they are not replaced during snippet expansion: https://code.visualstudio.com/docs/editing/userdefinedsnippets#_how-do-i-have-a-snippet-place-a-variable-in-the-pasted-script\r\n","Url":"https://github.com/angular/angular/pull/60597","RelatedDescription":"Open PR \"fix(language-service): Ensure dollar signs are escaped in completions\" (#60597)"},{"Id":"2954435875","IsPullRequest":true,"CreatedAt":"2025-03-27T21:15:36","Actor":"JeanMeche","Number":"60596","RawContent":null,"Title":"fix(devtools): do not emit a route object with functions","State":"open","Body":"In the case where a Route has title defined as a function, it eventually throw when it reaches `window.postMessage`\r\n\r\nfixes #60595\r\n","Url":"https://github.com/angular/angular/pull/60596","RelatedDescription":"Open PR \"fix(devtools): do not emit a route object with functions\" (#60596)"},{"Id":"2954404251","IsPullRequest":false,"CreatedAt":"2025-03-27T20:57:03","Actor":"allout58","Number":"60595","RawContent":null,"Title":"devtools: DataCloneError: Failed to execute postMessage on Window","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [x] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\nHave a route with the ResolveFn<string> version of the title, like `{path: '**', component: Comp, title: (route) => 'title'}`\n\nhttps://stackblitz.com/edit/stackblitz-starters-835vsgtq?file=src%2Fmain.ts\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nUsing function form of resolvable route titles should not spam the console log\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n```true\nzone.js:1188 Uncaught DataCloneError: Failed to execute 'postMessage' on 'Window': (route) => \"Title\" could not be cloned.\n    at wt.emit (same-page-message-bus.ts:71:12)\n    at us (client-event-subscribers.ts:230:18)\n    at client-event-subscribers.ts:167:69\n    at n (same-page-message-bus.ts:46:21)\n```\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n```true\n\n```\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\n_No response_\n\n### Alternatives considered [Feature Request only]\n\n_No response_","Url":"https://github.com/angular/angular/issues/60595","RelatedDescription":"Open issue \"devtools: DataCloneError: Failed to execute postMessage on Window\" (#60595)"},{"Id":"2952055622","IsPullRequest":true,"CreatedAt":"2025-03-27T20:25:02","Actor":"crisbeto","Number":"60580","RawContent":null,"Title":"fix(compiler): throw for invalid \"as\" expression in if block","State":"closed","Body":"Adds some validation that the \"as\" expression in an `@if` block is valid.\r\n\r\nFixes #59939.\r\n","Url":"https://github.com/angular/angular/pull/60580","RelatedDescription":"Closed or merged PR \"fix(compiler): throw for invalid \"as\" expression in if block\" (#60580)"},{"Id":"2953558556","IsPullRequest":true,"CreatedAt":"2025-03-27T20:24:25","Actor":"RussellSprouts","Number":"60588","RawContent":null,"Title":"fix(core): preserve comments in internal inject migration","State":"closed","Body":"The internal-only combineMemberInitializers option for the inject migration sometimes dropped the\r\ndoc comments from the members.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60588","RelatedDescription":"Closed or merged PR \"fix(core): preserve comments in internal inject migration\" (#60588)"},{"Id":"2954035529","IsPullRequest":true,"CreatedAt":"2025-03-27T19:36:37","Actor":"angular-robot","Number":"60593","RawContent":null,"Title":"build: update dependency firebase-tools to v14","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [firebase-tools](https://redirect.github.com/firebase/firebase-tools) | devDependencies | major | [`^13.0.0` -> `^14.0.0`](https://renovatebot.com/diffs/npm/firebase-tools/13.34.0/14.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>firebase/firebase-tools (firebase-tools)</summary>\n\n### [`v14.0.0`](https://redirect.github.com/firebase/firebase-tools/releases/tag/v14.0.0)\n\n[Compare Source](https://redirect.github.com/firebase/firebase-tools/compare/v13.35.1...v14.0.0)\n\n-   BREAKING(general)! Removed support for node 18.\n-   BREAKING(apphosting)! `init emulators` App Hosting flow now creates `apphosting.emulator.yaml` with references to live secrets rather than `apphosting.local.yaml` with saved plaintext. `apphosting:config:export` command has been removed ([#&#8203;8361](https://redirect.github.com/firebase/firebase-tools/issues/8361))\n-   BREAKING(apphosting)! Removed `--location` flag from `apphosting` commands. Instead, commands now prompt for primary region as needed.\n-   BREAKING(dataconnect)! `deploy dataconnect` now warns about unsafe connector changes and insecure operations.\n-   BREAKING(cloud functions)! Removed the `experimental:functions:shell` command. Use `functions:shell` instead.\n-   Updated the Firebase Data Connect local toolkit to v2.0.0, which contains the following changes: ([#&#8203;8370](https://redirect.github.com/firebase/firebase-tools/issues/8370))\n    -   Added support for aggregate functions in queries.\n    -   BREAKING: New types for Generated React SDKs.\n    -   Improved description of various auto-generated mutation fields.\n    -   Fixed an issue where pnpm users' SDKs aren't linked properly.\n-   `apphosting:secrets:grantAccess` can now grant access to emails and can grant multiple secrets at once ([#&#8203;8357](https://redirect.github.com/firebase/firebase-tools/issues/8357))\n-   `apphosting:secrets:set` now has flows to help with test secrets ([#&#8203;8359](https://redirect.github.com/firebase/firebase-tools/issues/8359))\n-   Updated `init dataconnect` templates to `v1`.\n-   Fixed a bug where the emulator suite would set `FIREBASE_DATACONNECT_EMULATOR_HOST` instead of `FIREBASE_DATA_CONNECT_EMULATOR_HOST`.\n-   Fixed a bug in Auth emulator where accounts:lookup is case-sensitive for emails ([#&#8203;8344](https://redirect.github.com/firebase/firebase-tools/issues/8344))\n-   Fixed a bug where function deploys didn't support shorthand notation and parameterized service account ([#&#8203;8366](https://redirect.github.com/firebase/firebase-tools/issues/8366))\n-   Fixed an issue where `sql:setup` would incorrectly remove the `cloudsqlsuperuser` role from `firebasesuperuser` ([#&#8203;8363](https://redirect.github.com/firebase/firebase-tools/issues/8363))\n-   Fixed a bug where `appdistribution:testers:list` would error out if there were no testers.\n-   Fixed a bug where Vertex AI API would not be automatically enabled when emulating Data Connect services that use it.\n\n### [`v13.35.1`](https://redirect.github.com/firebase/firebase-tools/releases/tag/v13.35.1)\n\n[Compare Source](https://redirect.github.com/firebase/firebase-tools/compare/v13.35.0...v13.35.1)\n\n-   Fix bug where functions:artifacts:setpolicy command's --none option didn't work as expected ([#&#8203;8330](https://redirect.github.com/firebase/firebase-tools/issues/8330))\n\n### [`v13.35.0`](https://redirect.github.com/firebase/firebase-tools/releases/tag/v13.35.0)\n\n[Compare Source](https://redirect.github.com/firebase/firebase-tools/compare/v13.34.0...v13.35.0)\n\n-   Added support for generated Angular SDKs for Data Connect\n-   App Hosting emulator can now load secret env vars. ([#&#8203;8305](https://redirect.github.com/firebase/firebase-tools/issues/8305))\n-   Fixed webframeworks deployments when using multiple hosting sites in `firebase.json`. ([#&#8203;8314](https://redirect.github.com/firebase/firebase-tools/issues/8314))\n-   Added a new command to setup a cleanup policy for functions artifacts. ([#&#8203;8268](https://redirect.github.com/firebase/firebase-tools/issues/8268))\n-   Added support for 3rd party builders for Angular. ([#&#8203;7557](https://redirect.github.com/firebase/firebase-tools/issues/7557))\n-   Fixed GCF V2 artifact cleanup by correctly encoding artifact names to match GCF V2's format. ([#&#8203;8318](https://redirect.github.com/firebase/firebase-tools/issues/8318))\n-   Increase emulator UI body parser limit to match Storage emulator maximum. ([#&#8203;8329](https://redirect.github.com/firebase/firebase-tools/issues/8329))\n-   Fixed Data Connect setup issues for fresh databases due to IAM user not being created. ([#&#8203;8335](https://redirect.github.com/firebase/firebase-tools/issues/8335))\n-   Fixed an issue where `ext:install` used POSIX file seperators on Windows machines. ([#&#8203;8326](https://redirect.github.com/firebase/firebase-tools/issues/8326))\n-   Updated the Firebase Data Connect local toolkit to v1.9.2, which adds support for generated Angular SDKs and updates Dart SDK fields to follow best practices. ([#&#8203;8347](https://redirect.github.com/firebase/firebase-tools/issues/8347))\n-   Fixed an issue where credentials from `firebase login` would not be correctly provided to the Data Connect emulator.\n-   Fixed misleading comments in `firebase init dataconnect` `connector.yaml` template.\n-   Improved Data Connect SQL permissions to better handle tables owned by IAM roles. ([#&#8203;8339](https://redirect.github.com/firebase/firebase-tools/issues/8339))\n-   Fixed an issue where the Data Connect emulator would crash after some SQL errors.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMTMuMSIsInVwZGF0ZWRJblZlciI6IjM5LjIxMy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/60593","RelatedDescription":"Closed or merged PR \"build: update dependency firebase-tools to v14\" (#60593)"},{"Id":"2954073977","IsPullRequest":true,"CreatedAt":"2025-03-27T18:30:44","Actor":"AndrewKushnir","Number":"60594","RawContent":null,"Title":"ci: moving integration tests into a separate GH action","State":"open","Body":"Running integration tests takes quite some time. Testing whether moving them to a separate GH job (to run in parallel) can help improve the situation.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] CI related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60594","RelatedDescription":"Open PR \"ci: moving integration tests into a separate GH action\" (#60594)"},{"Id":"2953956755","IsPullRequest":true,"CreatedAt":"2025-03-27T18:27:07","Actor":"thePunderWoman","Number":"60592","RawContent":null,"Title":"fix(core): fix regexp for event types","State":"closed","Body":"This regexp accidentally worked. It was splitting by individual character and putting a pipe in rather than splitting by set of event types\r\n","Url":"https://github.com/angular/angular/pull/60592","RelatedDescription":"Closed or merged PR \"fix(core): fix regexp for event types\" (#60592)"},{"Id":"2953839691","IsPullRequest":true,"CreatedAt":"2025-03-27T18:16:44","Actor":"josephperrott","Number":"60590","RawContent":null,"Title":"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs","State":"closed","Body":"Update to use the latest bazel/configure-remote action from dev-infra and set up trusted builds for CI runs from upstream branches.\r\n","Url":"https://github.com/angular/angular/pull/60590","RelatedDescription":"Closed or merged PR \"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs\" (#60590)"},{"Id":"2953788591","IsPullRequest":true,"CreatedAt":"2025-03-27T18:16:11","Actor":"josephperrott","Number":"60589","RawContent":null,"Title":"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs","State":"closed","Body":"Update to use the latest bazel/configure-remote action from dev-infra and set up trusted builds for CI runs from upstream branches.\r\n","Url":"https://github.com/angular/angular/pull/60589","RelatedDescription":"Closed or merged PR \"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs\" (#60589)"},{"Id":"2951591303","IsPullRequest":true,"CreatedAt":"2025-03-27T18:13:43","Actor":"AndrewKushnir","Number":"60578","RawContent":null,"Title":"build: add build step to the public API extractor script","State":"closed","Body":"Similar to #60573. This commit adds a step where we build all found targets in parallel, which speeds up the process of completing public API extractor test/update.\r\n\r\nRunning `public-api:update` with partially-populated Bazel cache (built a single target to populate NPM deps, etc) before this change:\r\n```\r\n✨  Done in 301.70s.\r\n```\r\n\r\nAfter this change:\r\n```\r\n✨  Done in 204.54s.\r\n```\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Build related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60578","RelatedDescription":"Closed or merged PR \"build: add build step to the public API extractor script\" (#60578)"},{"Id":"2951216589","IsPullRequest":true,"CreatedAt":"2025-03-27T18:13:07","Actor":"AndrewKushnir","Number":"60573","RawContent":null,"Title":"build: add build step to the symbol extractor script","State":"closed","Body":"This commit adds a step where we build all found targets in parallel, which speeds up the process of completing symbol extractor test/update.\r\n\r\nRunning `yarn symbol-extractor:accept` with partially-populated Bazel cache (built a single target to populate NPM deps, etc) before this change:\r\n```\r\n✨  Done in 148.53s.\r\n```\r\n\r\nAfter this change:\r\n```\r\n✨  Done in 90.26s.\r\n```\r\n\r\nAlmost 1 min faster!\r\n\r\nThanks @dgp1130 for the idea! 👍 \r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Build related changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60573","RelatedDescription":"Closed or merged PR \"build: add build step to the symbol extractor script\" (#60573)"},{"Id":"2952147872","IsPullRequest":true,"CreatedAt":"2025-03-27T18:12:34","Actor":"alan-agius4","Number":"60581","RawContent":null,"Title":"refactor(docs-infra): remove redundant overrides in `FakeWebContainer`","State":"closed","Body":"This is required to fix\r\n```\r\nadev/shared-docs/testing/testing-helper.ts:100:12 - error TS2416: Property 'on' in type 'FakeWebContainer' is not assignable to the same property in base type 'WebContainer'.\r\n  Type '{ (event: \"port\", listener: PortListener): Unsubscribe; (event: \"server-ready\", listener: ServerReadyListener): Unsubscribe; (event: \"error\", listener: ErrorListener): Unsubscribe; (event: \"preview-message\", listener: PreviewMessageListener): Unsubscribe; }' is not assignable to type '{ (event: \"port\", listener: PortListener): Unsubscribe; (event: \"server-ready\", listener: ServerReadyListener): Unsubscribe; (event: \"preview-message\", listener: PreviewMessageListener): Unsubscribe; (event: \"error\", listener: ErrorListener): Unsubscribe; (event: \"xdg-open\", listener: OpenListener): Unsubscribe; (ev...'.\r\n    Types of parameters 'event' and 'event' are incompatible.\r\n      Type '\"xdg-open\"' is not assignable to type '\"port\"'.\r\n\r\n100   override on(event: 'server-ready', listener: ServerReadyListener): Unsubscribe;\r\n               ~~\r\n```\r\n\r\nSee: https://github.com/angular/angular/actions/runs/14098789522/job/39491059550?pr=60526\r\n","Url":"https://github.com/angular/angular/pull/60581","RelatedDescription":"Closed or merged PR \"refactor(docs-infra): remove redundant overrides in `FakeWebContainer`\" (#60581)"},{"Id":"2952508435","IsPullRequest":true,"CreatedAt":"2025-03-27T18:11:41","Actor":"hawkgs","Number":"60583","RawContent":null,"Title":"docs(docs-infra): fix navigation component UI bugs","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] angular.dev application / infrastructure changes\r\n\r\n## What is the new behavior?\r\n\r\nThe PR fixes two issues:\r\n\r\n1. The navigation on the left-hand side of the screen detaches from the window edge/border when the viewport width is larger than `2560px`. This used to happen because of the `max-width` set to the app root. Moved it to the content wrapper instead. It doesn't seem that our content ever goes remotely close to that value but I've left it as a safe guard.\r\n2. There was an odd horizontal scroll that shifted the content to the left when an anchor link is clicked. This appeared to be the case only when the viewport width is `< 900px`. Turned out that the `100vw` width set to the navigation exceeded the actual page width by the width of the scrollbar. So browsers' behavior apparently takes that into account when scrolling to an anchor and shifts the page both H and V to ensure that the focused element is completely visible. The width is now set to `100%` which excludes the scrollbar width.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/60583","RelatedDescription":"Closed or merged PR \"docs(docs-infra): fix navigation component UI bugs\" (#60583)"},{"Id":"2953879112","IsPullRequest":true,"CreatedAt":"2025-03-27T17:26:19","Actor":"AndrewKushnir","Number":"60591","RawContent":null,"Title":"build: remove obsolete bundling test apps","State":"open","Body":"This commit removes a few bundling test apps that do not provide any value, but require time on CI and during local development to update golden files.\r\n\r\nThe functionality that was tested in those apps is covered by various other tests that we have in a repository (either in the same `packages/core/test/bundling` folder or in other unit/integration tests).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60591","RelatedDescription":"Open PR \"build: remove obsolete bundling test apps\" (#60591)"},{"Id":"2953523129","IsPullRequest":false,"CreatedAt":"2025-03-27T16:17:40","Actor":"LeonEck","Number":"60586","RawContent":null,"Title":"Compiler parseTemplate AST potentially unintended change in 19.2.2","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nBetween version 19.2.1 and 19.2.2 the keys of several nodes returned from `parseTemplate` have changed.\n\nParsing this template: `<div></div>` returns:\n- \"Element$1\" in 19.2.1\n- \"Element\" in 19.2.2\n\nFor a reproduction, I built two stackblitz demos. You can run both with `node index.js`:\n- 19.2.1: https://stackblitz.com/edit/stackblitz-starters-nuft1yx9?file=index.js\n- 19.2.2: https://stackblitz.com/edit/stackblitz-starters-zbklt9nu?file=index.js\n\nThis change led to this PR in angular-eslint: https://github.com/angular-eslint/angular-eslint/pull/2320\n@JamesHenry In the description, you mention that this could be a sign that a node is now considered stable. However, I think this was an unintentional change. I can't actually find something like \"$1\" anywhere in the Angular code.\nBut I did find that in a case like `Element`, there are two classes with the same name in the compiler package:\n- https://github.com/angular/angular/blob/98bf4d5afd820cdbc2d8e177e6d3292c6d6ee9bc/packages/compiler/src/ml_parser/ast.ts#L98\n- https://github.com/angular/angular/blob/98bf4d5afd820cdbc2d8e177e6d3292c6d6ee9bc/packages/compiler/src/render3/r3_ast.ts#L159\n\nAnd between 19.2.1 and 19.2.2 the dependency `rollup` was increased by two major versions (from 2 to 4): https://github.com/angular/angular/commit/044dac98c91e0c9aa5e9f8b29df473397d243389#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519R133\n\nAnd in rollup I found an issue mentioning that \"$1\" is added to names: https://github.com/rollup/rollup/issues/4637 which was fixed in 3.2.1.\n\nI think this leads to a change in the bundled compiler code:\n- 19.2.1: https://www.unpkg.com/browse/@angular/compiler@19.2.1/fesm2022/compiler.mjs Line 4986 - The class has the name \"Element$1\"\n- 19.2.2: https://www.unpkg.com/browse/@angular/compiler@19.2.2/fesm2022/compiler.mjs Line 4950 - The class has the name \"Element\" but is assigned to a variable named \"Element$1\"\n\nSo I think this change in key names was accidental due to the update of rollup. I am not sure if the compiler API on that level is part of Semantic versioning?\nTriggered by the angular-eslint change, we spent a couple of hours today wondering why the key names in the AST would change during a patch update of the Angular Compiler which would prompt us to adjust some of our custom rules. I hope my theory that rollup could play a role here and was adding the \"$1\" is correct. In which case I just wanted to make everyone aware of this (maybe unnoticed and unintentional) change.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.2.5\nNode: 22.14.0\nPackage Manager: npm 11.2.0\nOS: darwin arm64\n\nAngular: 19.2.4\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1902.5\n@angular-devkit/core         19.2.5\n@angular-devkit/schematics   19.2.5\n@angular/build               19.2.5\n@angular/cdk                 19.2.7\n@angular/cli                 19.2.5\n@schematics/angular          19.2.5\nrxjs                         7.8.2\ntypescript                   5.8.2\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60586","RelatedDescription":"Closed issue \"Compiler parseTemplate AST potentially unintended change in 19.2.2\" (#60586)"},{"Id":"2950319730","IsPullRequest":true,"CreatedAt":"2025-03-27T16:09:41","Actor":"vladboisa","Number":"60570","RawContent":null,"Title":"docs(router): add NG04008 Error code","State":"closed","Body":"Add documentation about NG04008 Error code\r\n\r\nFixes #58977\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60570","RelatedDescription":"Closed or merged PR \"docs(router): add NG04008 Error code\" (#60570)"},{"Id":"2953542877","IsPullRequest":true,"CreatedAt":"2025-03-27T15:52:42","Actor":"JeanMeche","Number":"60587","RawContent":null,"Title":"refactor(core): retrieve the jsActionMap only once.","State":"open","Body":"Before the change, the map was pull on every loop execution.\n","Url":"https://github.com/angular/angular/pull/60587","RelatedDescription":"Open PR \"refactor(core): retrieve the jsActionMap only once.\" (#60587)"},{"Id":"2953467590","IsPullRequest":true,"CreatedAt":"2025-03-27T15:33:41","Actor":"hawkgs","Number":"60585","RawContent":null,"Title":"refactor(devtools): disable unsupported features","State":"open","Body":"\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Feature\r\n\r\n\r\n## What is the new behavior?\r\n\r\nPrepare the app for Wix & ACX and handle unsupported features by disabling their respective UI.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/60585","RelatedDescription":"Open PR \"refactor(devtools): disable unsupported features\" (#60585)"},{"Id":"2953331076","IsPullRequest":false,"CreatedAt":"2025-03-27T15:00:31","Actor":"stanchev89","Number":"60584","RawContent":null,"Title":"Component Resolver for Standalone Components","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nWith the increasing adoption of standalone components and signals, traditional hooks are becoming less essential. However, there are still cases where we need to perform specific setup tasks before a component is fully initialized.\n\nFor example, in our project, we use an svgIconRegistry that requires registering icons by name and path before they can be used in a template. This logic cannot be handled within a router resolver, as it may depend on component inputs.\n\nA solution could be introducing { resolve: ResolveComponentFn } in the component declaration, allowing developers to define preloading logic directly within the component context. This approach would improve modularity and offer a cleaner way to handle component-specific initialization.\n\nI believe many other use cases exist where a Component Resolver would be highly beneficial.\n\n### Proposed solution\n\nIntroduce a Component Resolver mechanism that allows defining component-specific initialization logic within the component declaration. This would work similarly to router resolvers but at the component level, ensuring that necessary data or setup tasks are completed before the component is rendered.\n\nSuggested API\nExtend the component metadata with a new resolve property:\n\n```\n@Component({\n  selector: 'app-example',\n  standalone: true,\n  templateUrl: './example.component.html',\n  resolve: resolveExampleComponent\n})\nexport class ExampleComponent {\n  constructor(private svgIconRegistry: SvgIconRegistry) {}\n}\n```\n\nWhere resolveExampleComponent is a function that executes before the component initializes:\n\n```\nconst resolveExampleComponent: ResolveComponentFn = async (route, componentInputs) => {\n  await svgIconRegistry.register('icon-name', 'assets/icons/icon.svg');\n};\n```\n\nKey Benefits\nEncapsulation – Keeps component-specific logic within the component itself.\n\nFlexibility – Allows preloading data or executing setup logic that depends on component inputs.\n\nImproved Maintainability – Reduces reliance on global router resolvers or complex workarounds.\n\nThis feature would significantly enhance how we manage component lifecycle and dependencies in Angular applications.\n\n### Alternatives considered\n\nAlternatives Considered\nUsing a Router Resolver\n\nWhy not? Router resolvers execute before navigation completes, but they are not component-aware. Since some initialization logic depends on component inputs, this approach is not viable in many cases.\n\nHandling Initialization in ngOnInit or Constructor\n\nWhy not? This can lead to inconsistent behavior, as asynchronous initialization might cause flickering or require additional loading states within the component.\n\nCreating a Wrapper Component\n\nWhy not? Wrapping components in a higher-order component for preloading logic introduces extra complexity and makes the code less maintainable.\n\nUsing Signals or Effects for Initialization\n\nWhy not? Signals and effects help with reactivity but do not guarantee that setup logic runs before the component is rendered.\n\nWhy a Component Resolver?\nA Component Resolver provides a clean, declarative way to manage initialization without affecting routing, global state, or component structure. It ensures that component-specific logic runs before rendering, making it an optimal solution for scenarios like SVG icon registration, data fetching, and other component dependencies.","Url":"https://github.com/angular/angular/issues/60584","RelatedDescription":"Open issue \"Component Resolver for Standalone Components\" (#60584)"},{"Id":"2951747387","IsPullRequest":false,"CreatedAt":"2025-03-27T13:58:55","Actor":"benzdouglas","Number":"60579","RawContent":null,"Title":"Component HMR Doesn't seem to like my contenteditable div component","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHey all! I'm playing around with adding a component to replace textareas in my application by way of making a content editable div. I had to add some creative 'blur' events to get this working alright, but I noticed that whenever I made a change in my app it cleared out the binded field. When I turned off the HMR it properly updated the fields. I'm not 100% sure this is because of the editable content div, but maybe I'm not binding it the correct way?\n\nSince it says on the ng serve to report HMR errors I figured this might be helpful!\n\n**input-textarea.component.ts**\n\n```\nimport { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n\tselector: 'input-textarea',\n\ttemplateUrl: './input-textarea.component.html',\n\tstyleUrls: ['./input-textarea.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => InputTextareaComponent),\n\t\t\tmulti: true,\n\t\t},\n\t],\n\tstandalone: false,\n})\nexport class InputTextareaComponent implements ControlValueAccessor {\n\t@Input() placeholder: string = '';\n\t@Output() change: EventEmitter<string> = new EventEmitter<string>();\n\n\t@ViewChild('editableDiv') editableDiv!: ElementRef<HTMLDivElement>;\n\tprivate originalValue: string = '';\n\tprivate dirty: boolean = false;\n\n\t// Required for ngModel two-way binding\n\tprivate onChange = (value: string) => {};\n\tprivate onTouched = () => {};\n\n\twriteValue(value: string): void {\n\t\tthis.originalValue = value || '';\n\t\tif (this.editableDiv) {\n\t\t\tthis.editableDiv.nativeElement.innerText = this.originalValue;\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\t// Triggered when the div loses focus\n\tonBlur(): void {\n\t\tif (!this.dirty) return;\n\t\tconst newValue = this.editableDiv.nativeElement.innerText.trim();\n\t\tif (newValue !== this.originalValue) {\n\t\t\tthis.originalValue = newValue;\n\t\t\tthis.onChange(newValue);\n\t\t\tthis.change.emit(newValue);\n\t\t}\n\t\tthis.dirty = false;\n\t}\n\n\tonTouch(): void {\n\t\tthis.dirty = true;\n\t}\n\n\t// Handle page refresh and navigation\n\t@HostListener('window:beforeunload', ['$event'])\n\thandleWindowEvents(): void {\n\t\tthis.onBlur();\n\t}\n}\n```\n\n\n**input-textarea.component.html**\n```\n<div #editableDiv contenteditable=\"plaintext-only\" class=\"input-textarea\" (blur)=\"onBlur()\" (focus)=\"onTouch()\" [attr.placeholder]=\"placeholder\"></div>\n```\n\n\n\n**input-textarea.component.scss**\n```\n:host {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.input-textarea {\n\twidth: 100%;\n\theight: 100%;\n\tfont-size: inherit;\n\twidth: inherit;\n\tborder: none;\n\tbackground: none;\n\tcursor: text;\n}\n```\n\n### Minimal Reproduction\n\nCreate the components from the code above, use it in another component somewhere binding a value using ngModel. For example:\n\n`<input-textarea [(ngModel)]=\"ticket.description\" (change)=\"updateTicket(ticket, 'description')\" />`\n\nRun with Component HMR turned on, make a change to the html or the css of the InputTextarea component, and the values are cleared out.\n\n### Exception or Error\n\n```text\nNo exceptions in the console log\n```\n\n### Your Environment\n\n```text\nNode.js version v23.9.0 detected.\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/previous-releases/.\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.5\nNode: 23.9.0 (Unsupported)\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.1.4\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1901.5\n@angular-devkit/core         19.1.5\n@angular-devkit/schematics   19.1.5\n@angular/build               19.1.5\n@angular/cdk                 19.1.2\n@angular/cli                 19.1.5\n@schematics/angular          19.1.5\nrxjs                         7.8.1\ntypescript                   5.7.3\nzone.js                      0.15.0\n    \nWarning: The current version of Node (23.9.0) is not supported by Angular.\n```\n\n### Anything else relevant?\n\nRunning on MacOS, using Chrome as a dev browser.","Url":"https://github.com/angular/angular/issues/60579","RelatedDescription":"Closed issue \"Component HMR Doesn't seem to like my contenteditable div component\" (#60579)"},{"Id":"2952221604","IsPullRequest":true,"CreatedAt":"2025-03-27T09:27:25","Actor":"filippobrigati","Number":"60582","RawContent":null,"Title":"docs: replace `*ngFor` with `@for` in Reactive forms","State":"open","Body":"## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe documentation examples currently use the `*ngFor` directive for iteration, which is the legacy syntax. With Angular 17 and newer, the `@for` loop syntax is preferred for better performance and clarity.\r\n\r\n\r\n## What is the new behavior?\r\nUpdated the documentation examples to use the `@for` loop syntax instead of `*ngFor`.\r\nThis brings the examples in line with modern Angular best practices and improves code readability for developers using the latest versions.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/60582","RelatedDescription":"Open PR \"docs: replace `*ngFor` with `@for` in Reactive forms\" (#60582)"},{"Id":"2951354649","IsPullRequest":false,"CreatedAt":"2025-03-27T05:55:36","Actor":"mt09sp","Number":"60574","RawContent":null,"Title":"signal outpu behaviour differs problematically compared to @Output","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSwitched to using a signal output instead of an @Output but the signal version throws _Error: NG0953: Unexpected emit for destroyed `OutputRef`. The owning directive/component is destroyed. If the user quickly navigates away from the module that was subscribed to it.\n\nNot working (error thrown if subscriber is destroyed):\nisLocked = output<string>();\nthis.isLocked.emit(\"Not Locked\")\n\nWorking (no error thrown if subscriber is destroyed_ :\n@Output() isLocked = new EventEmitter<string>()\nthis.isLocked.emit(\"Not Locked\")\n\nExpected behavior: No error. Behaviour parity.\n\nCurrent solution: Revert to @Output\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError: NG0953: Unexpected emit for destroyed `OutputRef`. The owning directive/component is destroyed.\n    Angular 2\n        RuntimeError\n        emit\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.11\nNode: 22.9.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 18.2.11\n... animations, cli, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      17.3.12\n@angular/cdk                    18.2.13\n@schematics/angular             18.2.11\nng-packagr                      18.2.1\nrxjs                            7.8.2\ntypescript                      5.5.4\nwebpack                         5.98.0\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/60574","RelatedDescription":"Closed issue \"signal outpu behaviour differs problematically compared to @Output\" (#60574)"},{"Id":"2951390170","IsPullRequest":true,"CreatedAt":"2025-03-27T03:32:52","Actor":"alxhub","Number":"60577","RawContent":null,"Title":"Bump version to \"v20.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60577","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.4\" with changelog.\" (#60577)"},{"Id":"2951385440","IsPullRequest":true,"CreatedAt":"2025-03-27T03:28:21","Actor":"alxhub","Number":"60576","RawContent":null,"Title":"docs: release notes for the v19.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/60576","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.4 release\" (#60576)"},{"Id":"2951383566","IsPullRequest":true,"CreatedAt":"2025-03-27T03:26:39","Actor":"alxhub","Number":"60575","RawContent":null,"Title":"Bump version to \"v19.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/60575","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.4\" with changelog.\" (#60575)"},{"Id":"2950844782","IsPullRequest":true,"CreatedAt":"2025-03-26T21:43:22","Actor":"iteriani","Number":"60572","RawContent":null,"Title":"refactor(core): Check for provider field instead of instanceof. ","State":"open","Body":"Wiz injection tokens don't necessarily extend InjectionToken (because of the whole zones thing).\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/60572","RelatedDescription":"Open PR \"refactor(core): Check for provider field instead of instanceof. \" (#60572)"},{"Id":"2950365534","IsPullRequest":true,"CreatedAt":"2025-03-26T17:39:39","Actor":"thePunderWoman","Number":"60571","RawContent":null,"Title":"fix(core): prevent early exit when using local compilation","State":"open","Body":"This prevents an early exit for defer blocks when in local compilation mode.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/60571","RelatedDescription":"Open PR \"fix(core): prevent early exit when using local compilation\" (#60571)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2953960717","IsPullRequest":true,"CreatedAt":"2025-03-27T18:50:44","Actor":"josephperrott","Number":"29963","RawContent":null,"Title":"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs","State":"closed","Body":"Update to use the latest bazel/configure-remote action from dev-infra and set up trusted builds for CI runs from upstream branches.\r\n","Url":"https://github.com/angular/angular-cli/pull/29963","RelatedDescription":"Closed or merged PR \"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs\" (#29963)"},{"Id":"2953900147","IsPullRequest":true,"CreatedAt":"2025-03-27T18:50:23","Actor":"josephperrott","Number":"29962","RawContent":null,"Title":"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs","State":"closed","Body":"Update to use the latest bazel/configure-remote action from dev-infra and set up trusted builds for CI runs from upstream branches.\r\n","Url":"https://github.com/angular/angular-cli/pull/29962","RelatedDescription":"Closed or merged PR \"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs\" (#29962)"},{"Id":"2953300832","IsPullRequest":false,"CreatedAt":"2025-03-27T14:52:14","Actor":"vzarskus","Number":"29961","RawContent":null,"Title":"Angular 19 SSR engine redirectTo and catch-all route buggy interaction","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `redirectTo` in route configuration along with a catch-all route (`**`) that has a 404 status code in `server.routes` configuration, the server throws an error about invalid redirect response codes.\n\n`app.routes.ts`\n```\nexport const routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'home', redirectTo: '', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent },\n];\n```\n\n`server.routes.ts`\n```\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: '',\n    renderMode: RenderMode.Prerender,\n  },\n  // Uncommenting will fix the issue\n  // {\n  //   path: 'home',\n  //   renderMode: RenderMode.Client, // renderMode does not matter\n  // },\n  {\n    path: '**',\n    renderMode: RenderMode.Client,\n    status: 404,\n  },\n];\n\n```\n\nIt is very common to return 404 status code on non-existent routes so this bug is quite impactful.\n\nCurrent workaround is to register the route that contains `redirectTo` explicitly to `server.routes`.\n\n### Minimal Reproduction\n\nMinimal reproduction repository: https://github.com/vzarskus/catch-all-route-bug\n\nDetailed explanation is in `readme.md`\n\n### Exception or Error\n\n```text\nError: Error(s) occurred while extracting routes:\nThe '404' status code is not a valid redirect response code. Please use one of the following redirect response codes: 301, 302, 303, 307, 308.\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.5\nNode: 22.14.0\nPackage Manager: npm 11.2.0\nOS: win32 x64\n\nAngular: 19.2.4\n... animations, common, compiler, compiler-cli, core, forms \n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------   \n@angular-devkit/architect       0.1902.5\n@angular-devkit/build-angular   19.2.5\n@angular-devkit/core            19.2.5\n@angular-devkit/schematics      19.2.5\n@angular/cli                    19.2.5\n@angular/ssr                    19.2.5\n@schematics/angular             19.2.5\nrxjs                            7.8.2\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29961","RelatedDescription":"Open issue \"Angular 19 SSR engine redirectTo and catch-all route buggy interaction\" (#29961)"},{"Id":"2953284701","IsPullRequest":true,"CreatedAt":"2025-03-27T14:47:54","Actor":"clydin","Number":"29960","RawContent":null,"Title":"refactor(@angular/cli): avoid implicit undefined array defaults for `@angular/build` builders","State":"open","Body":"Previously, all builder options that were of type array were set to a default empty array even if there was no explicit default defined within the schema. This can be problematic for options that have differing behavior based on their presence such as runtime calculated defaults. The implicit defaulting behavior was also not aligned with the generated schema types which resulted in additional type safety and initialization regardless. As a result, the implicit behavior was effectively redundant in most cases. Since this change could be breaking for third-party builders, the removal of this behavior is currently limited to the `@angular/build` package.","Url":"https://github.com/angular/angular-cli/pull/29960","RelatedDescription":"Open PR \"refactor(@angular/cli): avoid implicit undefined array defaults for `@angular/build` builders\" (#29960)"},{"Id":"2953041627","IsPullRequest":false,"CreatedAt":"2025-03-27T14:08:35","Actor":"SophieDefendi","Number":"29959","RawContent":null,"Title":"Support \"security\" on @angular-devkit/build-angular:browser","State":"closed","Body":"### Command\n\nbuild, config\n\n### Description\n\nIn `angular.json` the builder `@angular-devkit/build-angular:browser` does not seem to currently support `\"autoCsp\": true` when passed as follows: \n```JSON\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"projects\": {\n    <project>: {\n      ...\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            ...\n            \"security\": {\n              \"autoCsp\": true\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nIt impacts the builder `@angular-devkit/build-angular:browser`, which means is not possible to both have autoCSP and to extend webpack.\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29959","RelatedDescription":"Closed issue \"Support \"security\" on @angular-devkit/build-angular:browser\" (#29959)"},{"Id":"2952832242","IsPullRequest":false,"CreatedAt":"2025-03-27T13:23:25","Actor":"JelleBruisten","Number":"29958","RawContent":null,"Title":"AutoCsp does not take into account deferred non critical css pattern","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using a pattern like the following ( https://web.dev/articles/defer-non-critical-css )\n\n`<link rel=\"preload\" href=\"styles.css\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">`\n\nThe current autoCSP does not take this into account resulting in:\n\n`Refused to execute inline event handler because it violates the following Content Security Policy directive: \"script-src 'strict-dynamic' 'sha256-XKgARfZhRMo5gK0kPXGTdhZmjEwLryyNySnpk6LZ2KY=' 'sha256-BraSP++BD7aCtbSEKUlB7de4/yO9CY27B1EvWf+luSg=' 'sha256-KiCvS5vs6/GuCEnadaggF1Bll4ebf6u173N2HECRn+E=' https: 'unsafe-inline' 'unsafe-eval'\". Note that 'unsafe-inline' is ignored if either a hash or nonce value is present in the source list.`\n\n### Minimal Reproduction\n\n- Create a new angular application\n- add in the index.html:    \n ` <link rel=\"preload\"\n      onload=\"this.onload=null;this.rel='stylesheet'\"\n      as=\"style\"\n      href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\"\n    />`\n- build application with autoCSP: true\n- serve the results using a http server and observe the errors\n\n\n### Exception or Error\n\n```text\nRefused to execute inline event handler because it violates the following Content Security Policy directive: \"script-src 'strict-dynamic' 'sha256-XKgARfZhRMo5gK0kPXGTdhZmjEwLryyNySnpk6LZ2KY=' 'sha256-BraSP++BD7aCtbSEKUlB7de4/yO9CY27B1EvWf+luSg=' 'sha256-KiCvS5vs6/GuCEnadaggF1Bll4ebf6u173N2HECRn+E=' https: 'unsafe-inline' 'unsafe-eval'\". Note that 'unsafe-inline' is ignored if either a hash or nonce value is present in the source list\n```\n\n### Your Environment\n\n```text\n@angular-devkit/architect         0.1902.0\n@angular-devkit/build-angular     19.2.0\n@angular-devkit/core              19.2.0\n@angular-devkit/schematics        19.2.0\n@angular-devkit/schematics-cli    19.2.0\n@angular/cdk                      19.2.1\n@angular/google-maps              19.2.1\n@angular/material                 19.2.1\n@angular/material-luxon-adapter   19.2.1\n@schematics/angular               19.2.0\nrxjs                              7.8.2\ntypescript                        5.8.2\nzone.js                           0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29958","RelatedDescription":"Closed issue \"AutoCsp does not take into account deferred non critical css pattern\" (#29958)"},{"Id":"2949250436","IsPullRequest":true,"CreatedAt":"2025-03-27T12:30:33","Actor":"alan-agius4","Number":"29950","RawContent":null,"Title":"Revert \"refactor: use `platformBrowser` instead of `platformBrowserTesting`","State":"closed","Body":"This reverts commit e5e51a22abe4c5c421ff984542fcc808b440b0fa.\r\n\r\nThis can now be reverted as `platformBrowserTesting` has been fixed.\r\n","Url":"https://github.com/angular/angular-cli/pull/29950","RelatedDescription":"Closed or merged PR \"Revert \"refactor: use `platformBrowser` instead of `platformBrowserTesting`\" (#29950)"},{"Id":"2948408691","IsPullRequest":true,"CreatedAt":"2025-03-27T10:43:19","Actor":"angular-robot","Number":"29935","RawContent":null,"Title":"build: update devinfra digest to 5663ac5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| devinfra | git_repository | digest | `be69a70` -> `5663ac5` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMTMuMSIsInVwZGF0ZWRJblZlciI6IjM5LjIxMy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29935","RelatedDescription":"Closed or merged PR \"build: update devinfra digest to 5663ac5\" (#29935)"},{"Id":"2951584731","IsPullRequest":true,"CreatedAt":"2025-03-27T10:36:40","Actor":"angular-robot","Number":"29956","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ng-packagr](https://redirect.github.com/ng-packagr/ng-packagr) | devDependencies | patch | [`20.0.0-next.1` -> `20.0.0-next.2`](https://renovatebot.com/diffs/npm/ng-packagr/20.0.0-next.1/20.0.0-next.2) |\n| [webpack-dev-server](https://redirect.github.com/webpack/webpack-dev-server) | devDependencies | patch | [`5.2.0` -> `5.2.1`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.2.0/5.2.1) |\n| [webpack-dev-server](https://redirect.github.com/webpack/webpack-dev-server) | dependencies | patch | [`5.2.0` -> `5.2.1`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.2.0/5.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v20.0.0-next.2`](https://redirect.github.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#2000-next2-2025-03-26)\n\n[Compare Source](https://redirect.github.com/ng-packagr/ng-packagr/compare/20.0.0-next.1...20.0.0-next.2)\n\n##### ⚠ BREAKING CHANGES\n\n-   Node.js versions from 22.0 to 22.10 are no longer supported\n-   Node.js v18 is no longer supported\n-   TypeScript versions less than 5.8 are no longer supported.\n\n##### Features\n\n-   drop support for TypeScript older than 5.8 ([a8255ce](https://redirect.github.com/ng-packagr/ng-packagr/commit/a8255ce73d69375e0f8eed14a9e5bc38a673494a))\n-   support Sass package importers ([f767d3c](https://redirect.github.com/ng-packagr/ng-packagr/commit/f767d3cff7bf521e188a662472edc4524555e834))\n\n##### Bug Fixes\n\n-   remove Node.js v18 support ([69d9d9e](https://redirect.github.com/ng-packagr/ng-packagr/commit/69d9d9ee74c4e6b25eda3768b25501b1494002cc))\n-   update minimum supported Node.js 22 version to 22.11.0 ([a836a71](https://redirect.github.com/ng-packagr/ng-packagr/commit/a836a71ccd753f425227c684fdfb017bfc017f8f))\n\n</details>\n\n<details>\n<summary>webpack/webpack-dev-server (webpack-dev-server)</summary>\n\n### [`v5.2.1`](https://redirect.github.com/webpack/webpack-dev-server/blob/HEAD/CHANGELOG.md#521-2025-03-26)\n\n[Compare Source](https://redirect.github.com/webpack/webpack-dev-server/compare/v5.2.0...v5.2.1)\n\n##### Security\n\n-   cross-origin requests are not allowed unless allowed by `Access-Control-Allow-Origin` header\n-   requests with an IP addresses in the `Origin` header are not allowed to connect to WebSocket server unless configured by `allowedHosts` or it different from the `Host` header\n\nThe above changes may make the dev server not work if you relied on such behavior, but unfortunately they carry security risks, so they were considered as fixes.\n\n##### Bug Fixes\n\n-   prevent overlay for errors caught by React error boundaries ([#&#8203;5431](https://redirect.github.com/webpack/webpack-dev-server/issues/5431)) ([8c1abc9](https://redirect.github.com/webpack/webpack-dev-server/commit/8c1abc903ab444d9ce99e567b9a6c603e1ec06be))\n-   take the first network found instead of the last one, this restores the same behavior as 5.0.4 ([#&#8203;5411](https://redirect.github.com/webpack/webpack-dev-server/issues/5411)) ([ffd0b86](https://redirect.github.com/webpack/webpack-dev-server/commit/ffd0b86b790d372f90e17aea92cfd9def83fee96))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMTMuMSIsInVwZGF0ZWRJblZlciI6IjM5LjIxMy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29956","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29956)"},{"Id":"2950406370","IsPullRequest":true,"CreatedAt":"2025-03-27T09:11:40","Actor":"clydin","Number":"29953","RawContent":null,"Title":"fix(@angular/build): warn and remove jsdom launcher when used with karma","State":"closed","Body":"The jsdom package does not currently support execution of ESM scripts. Attempting to use the karma jsdom launcher will cause test failures with potentially unclear error messages after the tests have been built and have started to execute. The karma application builder test runner will now issue a warning describing the problem and remove the jsdom launcher from the `browsers` option. The warning will be shown while analyzing the options and prior to the actual start of the test process.","Url":"https://github.com/angular/angular-cli/pull/29953","RelatedDescription":"Closed or merged PR \"fix(@angular/build): warn and remove jsdom launcher when used with karma\" (#29953)"},{"Id":"2952115207","IsPullRequest":true,"CreatedAt":"2025-03-27T08:49:21","Actor":"alan-agius4","Number":"29957","RawContent":null,"Title":"refactor(@angular/build): remove `Component HMR has been enabled` warning","State":"open","Body":"Known issues have been fixed.\r\n","Url":"https://github.com/angular/angular-cli/pull/29957","RelatedDescription":"Open PR \"refactor(@angular/build): remove `Component HMR has been enabled` warning\" (#29957)"},{"Id":"2950782889","IsPullRequest":true,"CreatedAt":"2025-03-26T21:02:56","Actor":"clydin","Number":"29954","RawContent":null,"Title":"feat(@angular/build): support custom resolution conditions with applications","State":"open","Body":"When using the application build system, a new `conditions` option is now available that allows adding custom package resolution conditions that can adjust the resolution for conditional exports and imports. By default the `module` and `production`/`development` conditions will be present with the later dependent on the `optimization` option. If any custom conditions value is present including an empty array, none of these defaults will be present and must be manually included if needed. The following special conditions will always be present if their respective requirements are satisfied:\r\n* es2015 (required by rxjs)\r\n* es2020 (APF backwards compatibility)\r\n* default\r\n* import\r\n* require\r\n* node\r\n* browser\r\n\r\nFor additional information regarding conditional exports/imports:\r\nhttps://nodejs.org/api/packages.html#conditional-exports\r\nhttps://nodejs.org/api/packages.html#subpath-imports","Url":"https://github.com/angular/angular-cli/pull/29954","RelatedDescription":"Open PR \"feat(@angular/build): support custom resolution conditions with applications\" (#29954)"},{"Id":"2950258968","IsPullRequest":true,"CreatedAt":"2025-03-26T17:11:20","Actor":"josephperrott","Number":"29952","RawContent":null,"Title":"build: disable remote upload of local action results to RBE cache","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29952","RelatedDescription":"Closed or merged PR \"build: disable remote upload of local action results to RBE cache\" (#29952)"},{"Id":"2949138237","IsPullRequest":false,"CreatedAt":"2025-03-26T11:20:44","Actor":"jase88","Number":"29949","RawContent":null,"Title":"ng migrate --force should not fail if there is no migration","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFirst: I'm sorry, I'm not sure if this is a bug behavior or rather a feature request.\n\nIf executing\n`npx ng update @angular-devkit/build-angular --from=18.2.14 --to=18.2.15 --migrate-only --allow-dirty --force`\n\nthe process exits with code 1\n> Package does not provide migrations.\n\nI would have expected with the `--force` flag the command would not have failed and \n> Package does not provide migrations\n\nwould just be a warning.\n\nIf this is not a bug in the CLI, would a flag be possible to ignore missing migrations? (feature request)\n\nMy use case is that I want to execute `ng update` regular as [renovate](https://github.com/renovatebot/renovate) postUpgradeTask within the CI.\n\n### Minimal Reproduction\n\n- `git clone https://github.com/jase88/ng-update-devkit-build-angular-migration-fail`\n- `npm run migrate-devkit-build-angular`\n\n### Exception or Error\n\n```text\n> The installed Angular CLI version is outdated.\n> Installing a temporary Angular CLI versioned 18.2.16 to perform the update.\n> Using package manager: npm\n> Collecting installed dependencies...\n> Found 69 dependencies.\n> Package does not provide migrations.\n>\n> Process finished with exit code 1\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.14\nNode: 22.14.0\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.14\n@angular-devkit/build-angular   18.2.14\n@angular-devkit/core            18.2.14\n@angular-devkit/schematics      18.2.14\n@angular/cli                    18.2.14\n@schematics/angular             18.2.14\nrxjs                            7.8.2\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\nThis occurs if using renovate to create merge-requests that executed `ng update`\n\nfor context the `renovate.json`:\n```json\n{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\"config:recommended\"],\n    {\n      \"groupName\": \"angular\",\n      \"matchManagers\": [\"npm\"],\n      \"matchPackageNames\": [\"@angular/{/,}**\", \"@angular-devkit/{/,}**\"],\n      \"postUpgradeTasks\": {\n        \"commands\": [\n          \"npm ci --ignore-scripts --audit=false --fund=false\",\n          \"npx ng update {{{depName}}} --from={{{currentVersion}}} --to={{{newVersion}}} --migrate-only --allow-dirty --force\"\n        ],\n        \"fileFilters\": [\"**/**\"]\n      },\n      \"separateMultipleMajor\": true\n    }\n  ]\n}\n```","Url":"https://github.com/angular/angular-cli/issues/29949","RelatedDescription":"Closed issue \"ng migrate --force should not fail if there is no migration\" (#29949)"},{"Id":"2949104160","IsPullRequest":true,"CreatedAt":"2025-03-26T10:31:09","Actor":"alan-agius4","Number":"29948","RawContent":null,"Title":"Bump version to \"v20.0.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29948","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.3\" with changelog.\" (#29948)"},{"Id":"2949091625","IsPullRequest":true,"CreatedAt":"2025-03-26T10:27:35","Actor":"alan-agius4","Number":"29947","RawContent":null,"Title":"docs: release notes for the v19.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29947","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.5 release\" (#29947)"},{"Id":"2948978339","IsPullRequest":true,"CreatedAt":"2025-03-26T10:25:55","Actor":"alan-agius4","Number":"29946","RawContent":null,"Title":"Bump version to \"v19.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29946","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.5\" with changelog.\" (#29946)"},{"Id":"2948966644","IsPullRequest":true,"CreatedAt":"2025-03-26T09:45:49","Actor":"alan-agius4","Number":"29945","RawContent":null,"Title":"docs: release notes for the v18.2.16 release","State":"closed","Body":"Cherry-picks the changelog from the \"18.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29945","RelatedDescription":"Closed or merged PR \"docs: release notes for the v18.2.16 release\" (#29945)"},{"Id":"2948955850","IsPullRequest":true,"CreatedAt":"2025-03-26T09:44:00","Actor":"alan-agius4","Number":"29944","RawContent":null,"Title":"Bump version to \"v18.2.16\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29944","RelatedDescription":"Closed or merged PR \"Bump version to \"v18.2.16\" with changelog.\" (#29944)"},{"Id":"2948889809","IsPullRequest":true,"CreatedAt":"2025-03-26T09:39:12","Actor":"alan-agius4","Number":"29943","RawContent":null,"Title":"docs: release notes for the v17.3.14 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.3.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29943","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.3.14 release\" (#29943)"},{"Id":"2948874542","IsPullRequest":true,"CreatedAt":"2025-03-26T09:17:52","Actor":"alan-agius4","Number":"29942","RawContent":null,"Title":"Bump version to \"v17.3.14\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29942","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.14\" with changelog.\" (#29942)"},{"Id":"2948806371","IsPullRequest":true,"CreatedAt":"2025-03-26T09:11:30","Actor":"alan-agius4","Number":"29941","RawContent":null,"Title":"Bump version to \"v17.3.14\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29941","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.3.14\" with changelog.\" (#29941)"},{"Id":"2948654360","IsPullRequest":false,"CreatedAt":"2025-03-26T08:42:40","Actor":"json-derulo","Number":"29936","RawContent":null,"Title":"Angular 19 depends on vulnerable version of Vite","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe Angular CLI v19 depends on Vite version 6.2.0, which is vulnerable: https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w\n\nIt should be updated to v6.2.3\n\n### Minimal Reproduction\n\nGenerate a new error with `ng new` and run `npm audit`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.2.4\nNode: 22.14.0\nPackage Manager: npm 11.2.0\nOS: darwin arm64\n\nAngular: 19.2.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1902.4\n@angular-devkit/build-angular   19.2.4\n@angular-devkit/core            19.2.4\n@angular-devkit/schematics      19.2.4\n@angular/cdk                    19.2.6\n@angular/cli                    19.2.4\n@angular/material               19.2.6\n@schematics/angular             19.2.4\nrxjs                            7.8.2\ntypescript                      5.8.2\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29936","RelatedDescription":"Closed issue \"Angular 19 depends on vulnerable version of Vite\" (#29936)"},{"Id":"2948688228","IsPullRequest":true,"CreatedAt":"2025-03-26T08:42:36","Actor":"alan-agius4","Number":"29938","RawContent":null,"Title":"fix(@angular/build): update vite to 6.2.3","State":"closed","Body":"This fixes https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w\r\n\r\nCloses #29936\r\n","Url":"https://github.com/angular/angular-cli/pull/29938","RelatedDescription":"Closed or merged PR \"fix(@angular/build): update vite to 6.2.3\" (#29938)"},{"Id":"2948671120","IsPullRequest":true,"CreatedAt":"2025-03-26T08:31:12","Actor":"alan-agius4","Number":"29937","RawContent":null,"Title":"test: ensure atime and mtime are rounded consistently in tests","State":"closed","Body":"Node.js handles time precision differently, which may cause mtime-based tests to fail.\r\n\r\nThis update ensures that atime and mtime values are rounded to the same precision,  preventing inconsistencies in file timestamp comparisons.\r\n","Url":"https://github.com/angular/angular-cli/pull/29937","RelatedDescription":"Closed or merged PR \"test: ensure atime and mtime are rounded consistently in tests\" (#29937)"},{"Id":"2948696448","IsPullRequest":true,"CreatedAt":"2025-03-26T08:29:23","Actor":"alan-agius4","Number":"29939","RawContent":null,"Title":"fix(@angular/build): update vite to 5.4.15","State":"closed","Body":"This fixes https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w\r\n\r\nCloses #29936\r\n","Url":"https://github.com/angular/angular-cli/pull/29939","RelatedDescription":"Closed or merged PR \"fix(@angular/build): update vite to 5.4.15\" (#29939)"},{"Id":"2948702844","IsPullRequest":true,"CreatedAt":"2025-03-26T08:29:08","Actor":"alan-agius4","Number":"29940","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update vite to 5.4.15","State":"closed","Body":"This fixes https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w\r\n\r\nCloses #29936\r\n","Url":"https://github.com/angular/angular-cli/pull/29940","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update vite to 5.4.15\" (#29940)"},{"Id":"2947717632","IsPullRequest":true,"CreatedAt":"2025-03-26T05:56:03","Actor":"clydin","Number":"29934","RawContent":null,"Title":"test: improve resilience of asset timestamp E2E test","State":"closed","Body":"The test now uses an asset that is already on disk.\r\nUsing an asset that was just written within the test\r\nmay cause timestamps to not yet be synced to disk.","Url":"https://github.com/angular/angular-cli/pull/29934","RelatedDescription":"Closed or merged PR \"test: improve resilience of asset timestamp E2E test\" (#29934)"},{"Id":"2947170573","IsPullRequest":true,"CreatedAt":"2025-03-25T18:39:57","Actor":"clydin","Number":"29933","RawContent":null,"Title":"refactor(@angular/build): use newer Node.js `cp` API for asset copying","State":"closed","Body":"When using Node.js v22 (minimum of v22.11 for v22 with Angular v20), the application build system will now use the Node.js `cp` filesystem API instead of the `copyFile` API. This newer API provides equivalent functionality while also preserving timestamps for copied assets.  Additionally, it supports potential future internal refactorings to support full direct directory copying. Projects built with Node.js v20 will continue to use the `copyFile` API.","Url":"https://github.com/angular/angular-cli/pull/29933","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): use newer Node.js `cp` API for asset copying\" (#29933)"},{"Id":"2947056415","IsPullRequest":true,"CreatedAt":"2025-03-25T16:35:19","Actor":"clydin","Number":"29932","RawContent":null,"Title":"feat(@angular/build): allow control of source map sources content for application builds","State":"closed","Body":"The `sourceMap` option now contains an additional sub-option named `sourcesContent` that allows the exclusion of original file content from generated source maps. This option affects both JavaScript and stylesheet source maps. The value of the `sourcesContent` option defaults to `true`.\r\n\r\nExample usage to disable sources content:\r\n```\r\n    \"sourceMap\": {\r\n        \"scripts\": true,\r\n        \"styles\": true,\r\n        \"sourcesContent\": false\r\n    }\r\n```\r\n\r\nCloses #29551","Url":"https://github.com/angular/angular-cli/pull/29932","RelatedDescription":"Closed or merged PR \"feat(@angular/build): allow control of source map sources content for application builds\" (#29932)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2954908597","IsPullRequest":false,"CreatedAt":"2025-03-28T03:18:00","Actor":"WwwHhhYran","Number":"30735","RawContent":null,"Title":"bug(cdk-tree): tree with levelAccessor only renders all nodes","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe tree with `levelAccessor` and flat data can only render all nodes, and when I click on the `cdkTreeNodeToggle` component, it still only renders all nodes, and does not have the effect of expanding and collapsing nodes. \n\nHowever, when I use tree with `childrenAccessor` and nested data, it will render specific nodes based on the tree expansion. \n\nFor example, for the follwing node structure:\n```\n- parent 1\n   - leaf 1-1\n   - leaf 1-2\n\n- parent 2\n   - leaf 2-1\n   - leaf 2-2\n```\n**Demo 1** 👇\n\nWhen I use `levelAccessor` with flat type node data passed in, it will always show the above structure, no matter if I click to collapse parent 1 or parent 2 or not, it will still be the same.\n> link: https://stackblitz.com/edit/9hcrkwh5-mpxvoif7?file=src%2Fexample%2Fcdk-tree-flat-level-accessor-example.ts\n\n**Demo 2** 👇\n\nWhen I use `childrenAccessor` with nested node data passed in, it can dynamically render the nodes based on the expanded and collapsed state. For example, when I click to collapse parent 1, the structure of the tree view is re-rendered as:\n```\n- parent 1\n\n- parent 2\n   - leaf 2-1\n   - leaf 2-2\n```\n> link: https://stackblitz.com/edit/qfnq49si-ubbjqylv?file=src%2Fexample%2Fcdk-tree-flat-children-accessor-example.ts\n\n\n**Extra** 📝\n\n Although I see that the [official demo](https://material.angular.io/cdk/tree/examples#cdk-tree-nested-level-accessor) hides nodes that don't need to be displayed by a combination of `style.display` and `shouldRender`.\n\nI think this is still a problem. Because in Demo 1 you have to use `style.display` and `shouldRender` to render correctly, while in Demo 2 you can render correctly without them. \n\nSo I think there is a difference in this behaviour that is problematic.\n\nThe same problem exists for `TreeControl`, but we can pass only specific node data into the tree's `dataStream` based on the treeControl's record of the node's isExpanded status.\n\n**Possible problem location** 🤔\nhttps://github.com/angular/components/blob/538b8bcd6e14044cc3dce87409eeac40f27941cf/src/cdk/tree/tree.ts#L1093-L1103\n\nThe `flattenedNodes` and `renderNodes` are both equal to `nodes`，maybe we should create a method like `shouldRender` that determines which nodes should be rendered and assigns them to `renderNodes`?\n\n### Reproduction\n\nsee **Desciption**\n\n\n### Expected Behavior\n\nCorrectly render visible nodes in the tree when expanding or collapsing nodes\n\n### Actual Behavior\n\nWhen use `levelAccessor` with flat data, can not render visible nodes in the tree correctly when expanding or collapsing nodes. But use `childrenAccessor` with nested data, correctly.\n\n### Environment\n\n- Angular: 19.2.0\n- CDK/Material: 19.2.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30735","RelatedDescription":"Open issue \"bug(cdk-tree): tree with levelAccessor only renders all nodes\" (#30735)"},{"Id":"2947510763","IsPullRequest":true,"CreatedAt":"2025-03-27T22:22:36","Actor":"mmalerba","Number":"30711","RawContent":null,"Title":"refactor(material/snack-bar): switch from afterRender to afterNextRender","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30711","RelatedDescription":"Closed or merged PR \"refactor(material/snack-bar): switch from afterRender to afterNextRender\" (#30711)"},{"Id":"2954430359","IsPullRequest":true,"CreatedAt":"2025-03-27T21:12:09","Actor":"rileyajones","Number":"30734","RawContent":null,"Title":"Add a null check to autocomplete options","State":"open","Body":"If a mat-autocomplete element does not contain any mat-options it will throw a null pointer when it is unloaded. Adding a simple null check solves this.\r\n\r\nGooglers see cl/741219851","Url":"https://github.com/angular/components/pull/30734","RelatedDescription":"Open PR \"Add a null check to autocomplete options\" (#30734)"},{"Id":"2947683822","IsPullRequest":true,"CreatedAt":"2025-03-27T19:47:01","Actor":"mmalerba","Number":"30712","RawContent":null,"Title":"test(cdk/overlay): change how renders are counted in test","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30712","RelatedDescription":"Closed or merged PR \"test(cdk/overlay): change how renders are counted in test\" (#30712)"},{"Id":"2950263250","IsPullRequest":true,"CreatedAt":"2025-03-27T19:41:45","Actor":"josephperrott","Number":"30723","RawContent":null,"Title":"build: disable remote upload of local action results to RBE cache","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30723","RelatedDescription":"Closed or merged PR \"build: disable remote upload of local action results to RBE cache\" (#30723)"},{"Id":"2952833463","IsPullRequest":true,"CreatedAt":"2025-03-27T18:29:49","Actor":"crisbeto","Number":"30729","RawContent":null,"Title":"Remove dependency on platform-browser-dynamic","State":"closed","Body":"Updates the repo to the latest versions of Angular and Node, and drops our dependency on the `platform-browser-dynamic` package.","Url":"https://github.com/angular/components/pull/30729","RelatedDescription":"Closed or merged PR \"Remove dependency on platform-browser-dynamic\" (#30729)"},{"Id":"2954068126","IsPullRequest":true,"CreatedAt":"2025-03-27T18:27:56","Actor":"wagnermaciel","Number":"30733","RawContent":null,"Title":"refactor(cdk-experimental/ui-patterns): track list selection by value","State":"open","Body":"* Switch to using values instead of ids for tracking selected items in a list","Url":"https://github.com/angular/components/pull/30733","RelatedDescription":"Open PR \"refactor(cdk-experimental/ui-patterns): track list selection by value\" (#30733)"},{"Id":"2953869568","IsPullRequest":true,"CreatedAt":"2025-03-27T18:19:33","Actor":"josephperrott","Number":"30732","RawContent":null,"Title":"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs","State":"closed","Body":"Update to use the latest bazel/configure-remote action from dev-infra and set up trusted builds for CI runs from upstream branches.","Url":"https://github.com/angular/components/pull/30732","RelatedDescription":"Closed or merged PR \"ci: update bazel RBE setup on CI and use trusted build configuration for upstream CI runs\" (#30732)"},{"Id":"2953575180","IsPullRequest":true,"CreatedAt":"2025-03-27T16:01:31","Actor":"devversion","Number":"30731","RawContent":null,"Title":"Migrate `ng_module`","State":"open","Body":"See individual commits","Url":"https://github.com/angular/components/pull/30731","RelatedDescription":"Open PR \"Migrate `ng_module`\" (#30731)"},{"Id":"2952927434","IsPullRequest":true,"CreatedAt":"2025-03-27T13:06:32","Actor":"mistrykaran91","Number":"30730","RawContent":null,"Title":"feat(material/menu): enhance menu item component with interactive disabled state","State":"open","Body":"In `menu-item` component add an option `disabledInteractive` to interact with menu item in disabled state similar to `mat-button`, `mat-radio`, etc\r\n\r\nFixes #29984","Url":"https://github.com/angular/components/pull/30730","RelatedDescription":"Open PR \"feat(material/menu): enhance menu item component with interactive disabled state\" (#30730)"},{"Id":"2949895488","IsPullRequest":false,"CreatedAt":"2025-03-27T12:46:24","Actor":"perotom","Number":"30722","RawContent":null,"Title":"bug(card): Table background color wrong","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nWhen using a table in a card, the table has its own background color resulting in different background colors.\n\n![Image](https://github.com/user-attachments/assets/03f02917-b5cf-45aa-8da2-6ab867607de5)\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/8i5einea?file=src%2Fexample%2Fcard-fancy-example.ts\n\n### Expected Behavior\n\nBckground color of table should match card background color.\n\n### Actual Behavior\n\nBackground color doesn't match.\n\n### Environment\n\n- Angular: 19.2.3\n- CDK/Material: 19.2.7\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n\n### Work-around\n\n```\nhtml {\n  @include mat.card-overrides((\n    elevated-container-color: var(--mat-sys-surface)\n  ));\n}\n```\nor\n```\n.mat-mdc-card {\n  @include mat.table-overrides((\n    background-color: transparent\n  ));\n  @include mat.paginator-overrides((\n    container-background-color: transparent\n  ));\n}\n```","Url":"https://github.com/angular/components/issues/30722","RelatedDescription":"Closed issue \"bug(card): Table background color wrong\" (#30722)"},{"Id":"2950339491","IsPullRequest":false,"CreatedAt":"2025-03-27T07:52:42","Actor":"lmngrass","Number":"30724","RawContent":null,"Title":"bug(mat-form-field): Nesting ngIfs or @if inside mat-form-field causes mat-error to be displayed weirdly","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you have mat-error deep nested in @if or ngifs , it is not displayed correctly  .\n```html\n<-- doesn't work -->\n<mat-form-field class=\"example-full-width\">\n  <mat-label>Email</mat-label>\n  <input\n    type=\"email\"\n    matInput\n    [formControl]=\"emailFormControl\"\n    placeholder=\"Ex. pat@example.com\"\n  />\n  @let somecondition=true;\n  @if(somecondition)\n  {\n    @if (emailFormControl.hasError('required')) {\n      <mat-error>Email is <strong>required</strong></mat-error>\n    }\n  }\n  \n</mat-form-field>\n```\nrefer to 2nd formcontrol.\nOnly different between them is one second one 2 level nested with @if condition while first one is only 1 level nested.\n\n\n![Image](https://github.com/user-attachments/assets/bda7fab2-5ed7-4642-87b8-dc33bc6140d2)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-3oipce8i?file=src%2Fmain.ts\nSteps to reproduce:\n1. Simply just click on any input and click outside\n\n\n\n\n\n### Expected Behavior\n\nmat-error should displayed correctly even if it's nested inside multiple @if s.\n\n### Actual Behavior\n\nmat-error inside multiple @if is not being displayed correctly.\n\n### Environment\n\n- Angular: 19.0.7\n- CDK/Material:  19.0.7\n- Browser(s): Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30724","RelatedDescription":"Closed issue \"bug(mat-form-field): Nesting ngIfs or @if inside mat-form-field causes mat-error to be displayed weirdly\" (#30724)"},{"Id":"2951820818","IsPullRequest":true,"CreatedAt":"2025-03-27T06:54:14","Actor":"matthewerwin","Number":"30728","RawContent":null,"Title":"feat(cdk/drag-drop): support immediate drag with preview snapped to cursor on mousedown","State":"open","Body":"The existing implementation of the CDK drag-drop is restricted such that there is no workaround for situations where the drag object should be snapped to the cursor. \r\n\r\n1. Even when dragStartDelay = 0 and dragStartThreshold = 0 (indicating no mouse movement is required to start) the existing implementation will not start actually dragging (and rendering preview) until after movement by >= 1px.\r\n2. There is no existing way to center the preview under the cursor b/c of hardcoded translate3d( ) calls with pre-computed offsets designed to fix the initial preview location to an offset position to mirror the undragged location of the draggable element.\r\n3. Using cdkDragConstrainPosition does not retain the dragEntered/dragExited behavior of the existing droplist and so is unusable for these purposes as well.\r\n\r\n\r\nFor an example use case:\r\n\r\nConsider the chess-boards that are present on Lichess/Chess.com -- clicking on a chess piece to drag immediately snaps the piece centered on the cursor immediately after the mouse is pressed. Waiting until the mouse is moved 1px is problematic for speed, for visible immediate visible selection, and for accuracy based on touch/mouse movement for high-speed games. \r\n\r\nThis PR is simple - it introduces a new input snapToCursor that places the preview directly in the center of the cursor and hooks 'mousedown' event in to immediate trigger an initial drag state when dragStartDelay = 0 and dragStartThreshold = 0 & a preview is available.\r\n\r\nThanks for your support\r\n\r\n","Url":"https://github.com/angular/components/pull/30728","RelatedDescription":"Open PR \"feat(cdk/drag-drop): support immediate drag with preview snapped to cursor on mousedown\" (#30728)"},{"Id":"2951279305","IsPullRequest":false,"CreatedAt":"2025-03-27T02:15:11","Actor":"CSharpFiasco","Number":"30727","RawContent":null,"Title":"feat(theming): Provide a way to override table density scales","State":"open","Body":"### Feature Description\n\nHoping to have a way to change the density scales for table headers and cells from px to rem. I'm currently using m2.\n\n### Use Case\n\nI'd like to have the option to have certain tables in my app to be denser than others, but also make sure a user can still scale the font. I don't see a way to set the scale to rems","Url":"https://github.com/angular/components/issues/30727","RelatedDescription":"Open issue \"feat(theming): Provide a way to override table density scales\" (#30727)"},{"Id":"2950863051","IsPullRequest":true,"CreatedAt":"2025-03-26T23:14:23","Actor":"mmalerba","Number":"30726","RawContent":null,"Title":"build: fix husky warnings","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30726","RelatedDescription":"Closed or merged PR \"build: fix husky warnings\" (#30726)"},{"Id":"2950639624","IsPullRequest":true,"CreatedAt":"2025-03-26T19:42:42","Actor":"DBowen33","Number":"30725","RawContent":null,"Title":"fix(material/menu): testing dialog on menu","State":"open","Body":"testing menu\r\n\r\nfixes b/286576207","Url":"https://github.com/angular/components/pull/30725","RelatedDescription":"Open PR \"fix(material/menu): testing dialog on menu\" (#30725)"},{"Id":"2949750798","IsPullRequest":false,"CreatedAt":"2025-03-26T14:07:53","Actor":"aghosh-evertz","Number":"30721","RawContent":null,"Title":"bug(mat-autocomplete): Removing the selected option manually adds a flicker in the dropdown rendering.","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi,\n\nThere is a requirement to add a 'clear'(X) icon sort of thing which basically should clear the data present in the mat-autocomplete field. Something like this:\n\n![Image](https://github.com/user-attachments/assets/6998f786-097a-4fe3-a91f-e78457b526c2)\n\nPost MDC migration of our project, the selected options have started coming in blue color (mat-selected class getting added) which is fine. But since there is a custom function written for this clear-icon-click, although we set the control value to null/undefined and the value is updated properly in the control, still the selected classes are not getting removed. So, even if there is no option selected, the previously selected option still has the selected classes, when dropdown is opened. I used the hideSingleSelectionIndicator, hence tick is not present.\n\n![Image](https://github.com/user-attachments/assets/1736f4b7-3c57-43f5-819e-5d6ada9d6b0e)\n\nTo counter this, I used the below code in my clear function : \n\n`this.autocompleteRef?.options.find((data: MatOption) => data.selected)?.deselect();`\n\nNow, on clearing the field, the field gets cleared properly and the 'selected-related' classes are removed from that option in the dropdown but a flickering thing happening. \n\n### How can we avoid it ??? \n\n\n### Reproduction\n\nSteps to reproduce:\n1. Click on the field to open the drodown panel.\n2. Select the first option from the dropdown. (cause this only happens with the first option)\n3. Again try to click on the field so that dropdown opens with only that option in the dropdown.\n4. While the dropdown panel is in opened state, click on the clear icon. It flickers the dropdown.\n\nBelow is the example:\n\nhttps://github.com/user-attachments/assets/b5e42ae5-14ff-40e3-8be9-bec6fcb78157\n\n\n### Expected Behavior\n\nOn clear icon click, it should re-open the dropdown with all the options without any flickering\n\n### Actual Behavior\n\nOn clear icon click, there is a flicker in the dropdown section and the autocomplete dropdown panel ultimately gets closed.\n\n### Environment\n\n- \"@angular/forms\": \"16.2.12\",\n- \"@angular/material\": \"16.2.14\",\n- \"@angular/cdk\": \"16.2.14\",\n- Browser(s): Chrome\n","Url":"https://github.com/angular/components/issues/30721","RelatedDescription":"Open issue \"bug(mat-autocomplete): Removing the selected option manually adds a flicker in the dropdown rendering.\" (#30721)"},{"Id":"2949520096","IsPullRequest":false,"CreatedAt":"2025-03-26T12:57:19","Actor":"angelaki","Number":"30720","RawContent":null,"Title":"bug(mat-table): Table not refreshing on nested detail-row column change","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm not sure if this scenario is supported by the API at all but imho it should be a valid scenario.\n\nIf I have an array of detail rows changing their columns does not automatically redraw the table. If I know all the rows in advance (do not use `@for`) it works as expected.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/av2ud5lm\n\nSteps to reproduce:\n1. Clicking **Toggle Secondary** changes the json-output but not the table\n2. Only on clicking **Toggle Primary** the table gets redrawn, respecting the current definition for the detail rows\n\nWorking StackBlitz link: https://stackblitz.com/edit/av2ud5lm-ardwk8i8\nJust to make sure this also happens if all the rows are in a single array (https://stackblitz.com/edit/av2ud5lm-yhdxrfqp)\n\nNot this being a Q/A but just out of curiosity, why do I need `multiTemplateDataRows` at all? Why won't all (matching) rows get displayed by default? Asking since I tend to always use / set it but guess there might be some kind of disadvantage since this is not the default behavior?\n\n### Expected Behavior\n\nEven generic detail rows (created by `@for`) should behave correct.\n\n### Actual Behavior\n\nRight now, I need to know all my detail rows in advance. Since I'm implementing a pretty customizable table, I want to let the user create / define the rows in runtime.\n\nIf you're not going to support this case officially, a neat workaround to trigger redrawing the table would be welcome.\n\n### Environment\n\nAngular CLI: 19.1.9\nNode: 22.11.0\nPackage Manager: pnpm 10.6.2\nOS: win32 x64\n\nAngular: 19.1.8\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1901.9 (cli-only)\n@angular-devkit/build-angular     19.1.9\n@angular-devkit/core              19.1.9 (cli-only)\n@angular-devkit/schematics        19.1.9 (cli-only)\n@angular/cdk                      19.1.5\n@angular/cli                      19.1.9\n@angular/material                 19.1.5\n@angular/material-luxon-adapter   19.1.5\n@schematics/angular               19.1.9 (cli-only)\nrxjs                              7.8.2\ntypescript                        5.7.3\nzone.js                           0.15.0","Url":"https://github.com/angular/components/issues/30720","RelatedDescription":"Open issue \"bug(mat-table): Table not refreshing on nested detail-row column change\" (#30720)"},{"Id":"2949319462","IsPullRequest":true,"CreatedAt":"2025-03-26T11:58:41","Actor":"crisbeto","Number":"30719","RawContent":null,"Title":"Bump version to \"v20.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30719","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.0-next.4\" with changelog.\" (#30719)"},{"Id":"2949296109","IsPullRequest":true,"CreatedAt":"2025-03-26T11:48:46","Actor":"crisbeto","Number":"30718","RawContent":null,"Title":"docs: release notes for the v19.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30718","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.2.7 release\" (#30718)"},{"Id":"2949291202","IsPullRequest":true,"CreatedAt":"2025-03-26T11:45:35","Actor":"crisbeto","Number":"30717","RawContent":null,"Title":"Bump version to \"v19.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30717","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.7\" with changelog.\" (#30717)"},{"Id":"2949117647","IsPullRequest":true,"CreatedAt":"2025-03-26T11:36:22","Actor":"crisbeto","Number":"30715","RawContent":null,"Title":"Cherry pick fixes","State":"closed","Body":"Cherry-picks the following fixes to 19.2.x:\r\nhttps://github.com/angular/components/pull/30634\r\nhttps://github.com/angular/components/pull/30631","Url":"https://github.com/angular/components/pull/30715","RelatedDescription":"Closed or merged PR \"Cherry pick fixes\" (#30715)"},{"Id":"2949220665","IsPullRequest":true,"CreatedAt":"2025-03-26T11:30:55","Actor":"mistrykaran91","Number":"30716","RawContent":null,"Title":"fix(material/form-field): update text field styles for better alignment and overflow handling","State":"closed","Body":"Currently, `mat-label` overlaps `mat-suffix` in cases for `outline` and `fill` appearance. This fix set the width to inherit and set the notch `max-width` to same `180px` which is same as `mat-mdc-form-field-infix`\r\n\r\nFixes #28743","Url":"https://github.com/angular/components/pull/30716","RelatedDescription":"Closed or merged PR \"fix(material/form-field): update text field styles for better alignment and overflow handling\" (#30716)"},{"Id":"2948981199","IsPullRequest":true,"CreatedAt":"2025-03-26T11:20:06","Actor":"devversion","Number":"30714","RawContent":null,"Title":"[19.2.x]: Fourth iteration of `ts_library` migration","State":"closed","Body":"Patch port of #30710 and #30704","Url":"https://github.com/angular/components/pull/30714","RelatedDescription":"Closed or merged PR \"[19.2.x]: Fourth iteration of `ts_library` migration\" (#30714)"},{"Id":"2947113448","IsPullRequest":true,"CreatedAt":"2025-03-26T08:32:22","Actor":"devversion","Number":"30710","RawContent":null,"Title":"Migrate all remaining `ts_library` targets","State":"closed","Body":"This completes the `ts_library` migration. Now `ng_module` is left.\r\n\r\nSee individual commits","Url":"https://github.com/angular/components/pull/30710","RelatedDescription":"Closed or merged PR \"Migrate all remaining `ts_library` targets\" (#30710)"},{"Id":"2947919290","IsPullRequest":true,"CreatedAt":"2025-03-25T22:31:04","Actor":"mmalerba","Number":"30713","RawContent":null,"Title":"fix(cdk-experimental/popover-edit): use MutationObserver to detect table rows","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30713","RelatedDescription":"Open PR \"fix(cdk-experimental/popover-edit): use MutationObserver to detect table rows\" (#30713)"},{"Id":"2946851764","IsPullRequest":true,"CreatedAt":"2025-03-25T15:02:26","Actor":"danielolaru91","Number":"30709","RawContent":null,"Title":"perf(cdk-experimental/column-resize): add debounce to column header h…","State":"open","Body":"…over to prevent excessive handler rendering\r\n\r\nThis PR improves the user experience and performance of the `cdk-experimental` column resize feature by adding a `debounceTime` operator to the `headerCellHoveredDistinct` observable. Previously, the hover event triggered the handler immediately, which could result in unwanted handlers showing up when the user quickly moved their cursor over column headers. This change ensures that the handlers only appear if the user pauses (hovers for 300ms) over the column header, preventing handlers from rendering during fast cursor movements.\r\n\r\n### Why this change is suggested:\r\nThe previous implementation immediately triggered the column resize handlers as soon as the user hovered over the column header, which could be distracting or lead to unnecessary renders when the user quickly moves the cursor across the page. By adding a `debounceTime(300)`, we ensure that the hover event only triggers the handler after the user has paused over the column header for at least 300ms, reducing the number of handler renders and making the interaction feel smoother.\r\n\r\nThis change prevents the handlers from appearing if the user is simply passing by the headers or trying to reach another element, improving the overall experience, especially when navigating fast through the UI.\r\n\r\n### Changes:\r\n- Added `debounceTime(300)` to the `headerCellHoveredDistinct` observable to delay the rendering of handlers until the user has hovered over the header for 300ms.","Url":"https://github.com/angular/components/pull/30709","RelatedDescription":"Open PR \"perf(cdk-experimental/column-resize): add debounce to column header h…\" (#30709)"},{"Id":"2946803866","IsPullRequest":true,"CreatedAt":"2025-03-25T14:48:44","Actor":"danielolaru91","Number":"30708","RawContent":null,"Title":"perf(cdk-experimental/column-resize): improve hover responsiveness of…","State":"open","Body":"… column resize with requestAnimationFrame\r\n\r\nThis PR suggests a performance improvement for the `_updateOverlayHandleHeight()` method in the `cdk-experimental` column resize feature. Currently, the method immediately updates the overlay handle height when hovering over a resizable column header. By wrapping the `updateSize` call inside a `requestAnimationFrame()`, the height update is deferred to the next repaint, improving responsiveness during hover interactions.\r\n\r\n### Why this change is suggested:\r\nThe current implementation causes the height update to occur immediately, potentially resulting in unnecessary reflows or stuttering, when hovering over column headers. By using `requestAnimationFrame()`, we defer the update until the next browser repaint, allowing for smoother performance and reducing the chance of layout thrashing during hover, particularly in pages with complex DOM structures.\r\n\r\n### Changes:\r\n- Wrapped the `overlayRef.updateSize()` call inside a `requestAnimationFrame()` to ensure the height update occurs on the next repaint, rather than immediately during hover.","Url":"https://github.com/angular/components/pull/30708","RelatedDescription":"Open PR \"perf(cdk-experimental/column-resize): improve hover responsiveness of…\" (#30708)"},{"Id":"2945749706","IsPullRequest":true,"CreatedAt":"2025-03-25T13:31:20","Actor":"crisbeto","Number":"30706","RawContent":null,"Title":"fix(material/sidenav): ignore escape events while overlay is open","State":"closed","Body":"The sidenav isn't an overlay so it doesn't participate in the common event handling. This means that if there's an overlay in it that closes by pressing escape, the sidenav will close instead of the overlay.\r\n\r\nThese changes add a check that will skip escape key presses while there are open overlays.\r\n\r\nFixes #30507.","Url":"https://github.com/angular/components/pull/30706","RelatedDescription":"Closed or merged PR \"fix(material/sidenav): ignore escape events while overlay is open\" (#30706)"},{"Id":"2945776843","IsPullRequest":true,"CreatedAt":"2025-03-25T11:18:15","Actor":"devversion","Number":"30707","RawContent":null,"Title":"build: update sync config to reflect internal update","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30707","RelatedDescription":"Closed or merged PR \"build: update sync config to reflect internal update\" (#30707)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-28T03:30:02.9240215Z","RunDurationInMilliseconds":1800}