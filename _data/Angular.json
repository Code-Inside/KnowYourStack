{"Data":{"Angular-Issues":{"Issues":[{"Id":"2762525784","IsPullRequest":true,"CreatedAt":"2024-12-30T01:07:37","Actor":"sumitarora","Number":"59329","RawContent":null,"Title":"fix(devtools): fixing dark mode colors for devtools and router tree","State":"open","Body":"- added dark mode colors for devtools and router tree  \r\n- fixed the router tree legend rerendering issue\r\n\r\n<img width=\"1331\" alt=\"image\" src=\"https://github.com/user-attachments/assets/188f3005-8f3e-4d02-a99e-7b3197dbdf61\" />\r\n\r\n<img width=\"871\" alt=\"image\" src=\"https://github.com/user-attachments/assets/484ab358-640d-4ea3-a658-49216a176e09\" />\r\n\r\n<img width=\"1170\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4e02efff-77dc-4fe6-a90a-7647b14e7d67\" />\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/59329","RelatedDescription":"Open PR \"fix(devtools): fixing dark mode colors for devtools and router tree\" (#59329)"},{"Id":"2761010496","IsPullRequest":false,"CreatedAt":"2024-12-29T09:00:55","Actor":"muhamedkarajic","Number":"59318","RawContent":null,"Title":"Angular 19 initial state change asynchronously scss triggering animations","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nLitteraly my navigation bar is transitioning when opening the page from visible to not visibe in Angular 19 while on Angular 18 it was when opening the page in the right state not visible. I had updated that project 3 4 times and never had such a issue. As if initially it has the value 'true' to show it and then transitions asynconously to 'false' which makes the UI render the animation as if the user had the navbar opened and is closing it now. \n\nDepending on the project this could be fatal even doe the hole app works the behavior is not acceptable and would hurt branding significantly. I wonder if the angular team is aware of such an flaw - which could be to some third party SCSS library etc? If necessry I'll see to make a reproduction of the code but hopefully this is already somehow a known issue cause I find it strange if I am the only one experiencing it.  \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo error just wrong behavior.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6 // Here had also tested v18 its the same.\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nM1 Pro macOS Monterey 12.6.6","Url":"https://github.com/angular/angular/issues/59318","RelatedDescription":"Closed issue \"Angular 19 initial state change asynchronously scss triggering animations\" (#59318)"},{"Id":"2761828674","IsPullRequest":false,"CreatedAt":"2024-12-28T18:30:52","Actor":"Char2sGu","Number":"59328","RawContent":null,"Title":"NgIf Else Block Breaks Hydration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe new built-in `@if` block seems to ignore the `@else` block during hydration, ensuring an consistent markup structure after the application becomes stable. However, the legacy NgIf is unaware of the hydration context and still render the else block, producing a markup structure that canno t be hydrated. See the reproduction repo for details.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Char2sGu/issue-hydration-ngif\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nThis should probably be noted in the documentation section of structural directives: all structural directives should try to avoid manipulating the view container during hydration (before the application first becomes stable).\nI initially encountered this issue when authoring a structural directive.","Url":"https://github.com/angular/angular/issues/59328","RelatedDescription":"Open issue \"NgIf Else Block Breaks Hydration\" (#59328)"},{"Id":"2761305690","IsPullRequest":false,"CreatedAt":"2024-12-28T18:25:42","Actor":"izzijaz","Number":"59321","RawContent":null,"Title":"Initializer of sub project isnt being called.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have a root project which has its own provideAppInitializer() in providers array. Only the root Initializer gets run. Other subproject initialiser dont work. \n\n### Please provide a link to a minimal reproduction of the bug\n\nNo Link\n\n### Please provide the exception or error you saw\n\n```true\nNo error msg\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 23.4.0 (Unsupported)\nPackage Manager: npm 11.0.0\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/material               19.0.4\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59321","RelatedDescription":"Closed issue \"Initializer of sub project isnt being called.\" (#59321)"},{"Id":"2761820606","IsPullRequest":true,"CreatedAt":"2024-12-28T18:04:14","Actor":"arturovt","Number":"59327","RawContent":null,"Title":"fix(router): complete router `events` on dispose","State":"open","Body":"In this commit, we manually complete the `events` subject to remove all active observers and enable granular garbage collection, as users may forget to unsubscribe manually when subscribing to `router.events`.","Url":"https://github.com/angular/angular/pull/59327","RelatedDescription":"Open PR \"fix(router): complete router `events` on dispose\" (#59327)"},{"Id":"2761071134","IsPullRequest":false,"CreatedAt":"2024-12-28T17:59:54","Actor":"Char2sGu","Number":"59319","RawContent":null,"Title":"Zoneless Application Hydrated Before NavigationEnd","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn my zoneless application with lazy-loaded routes, the hydration completes before the first `NavigationEnd` event is emitted, resulting in only the root component being hydrated:\n\n![Zoneless](https://github.com/user-attachments/assets/f696a65c-61ca-4d5f-8ad4-3b1c4da35ef8)\n\nWhen I switch to zone-based change detection, the hydration works well:\n\n![Zone-based](https://github.com/user-attachments/assets/3d1d709e-3eb2-475f-8cf0-0a007e634308)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, elements\n... forms, localize, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/build                  19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/google-maps            19.0.4\n@angular/material               19.0.4\n@angular/pwa                    19.0.6\n@angular/ssr                    19.0.6\n@angular/youtube-player         19.0.4\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59319","RelatedDescription":"Closed issue \"Zoneless Application Hydrated Before NavigationEnd\" (#59319)"},{"Id":"2761749949","IsPullRequest":true,"CreatedAt":"2024-12-28T14:50:21","Actor":"JeanMeche","Number":"59326","RawContent":null,"Title":"docs: add TS support for 19.1","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59326","RelatedDescription":"Open PR \"docs: add TS support for 19.1\" (#59326)"},{"Id":"2761643863","IsPullRequest":true,"CreatedAt":"2024-12-28T14:29:45","Actor":"fracuci","Number":"59324","RawContent":null,"Title":"Update home.component.ts","State":"closed","Body":"This part of the tutorial didn't work as expected without constructor argument.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ X ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ X ] Tests for the changes have been added (for bug fixes / features) -> tested in local environment\r\n- [ X ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nfirst-app tutorial stop working at step 09-service when idefining service into home.component constructor\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ X ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59324","RelatedDescription":"Closed or merged PR \"Update home.component.ts\" (#59324)"},{"Id":"2761692575","IsPullRequest":true,"CreatedAt":"2024-12-28T12:01:40","Actor":"devversion","Number":"59325","RawContent":null,"Title":"fix(bazel): handle module names and ES output in hybrid `ts_project` mode","State":"open","Body":"`ts_project` interop does not emit `.mjs` files. We could achieve this in the interop rule, but it's better to just fallback look for `.js`.\r\n\r\nIn addition, `ng_package` currently fails because there is no `module_name` retrievable from the interop rule; hence causing in incorrect packaging and safety errors being thrown.","Url":"https://github.com/angular/angular/pull/59325","RelatedDescription":"Open PR \"fix(bazel): handle module names and ES output in hybrid `ts_project` mode\" (#59325)"},{"Id":"2761620176","IsPullRequest":true,"CreatedAt":"2024-12-28T08:02:57","Actor":"crisbeto","Number":"59323","RawContent":null,"Title":"fix(compiler-cli): account for more expression types when determining HMR dependencies","State":"open","Body":"During the HMR dependency analysis we need to check if an identifier is top-level or not. We do this by looking at each identifier and its parent, however we didn't account for some cases. These changes expand our logic to cover more of the common node types.\r\n\r\nRelated to https://github.com/angular/angular/issues/59310#issuecomment-2563963501.","Url":"https://github.com/angular/angular/pull/59323","RelatedDescription":"Open PR \"fix(compiler-cli): account for more expression types when determining HMR dependencies\" (#59323)"},{"Id":"2760683768","IsPullRequest":true,"CreatedAt":"2024-12-28T02:44:57","Actor":"angelomarzocchi","Number":"59314","RawContent":null,"Title":"added npm init instructions","State":"closed","Body":"without that, you cannot run npm install\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59314","RelatedDescription":"Closed or merged PR \"added npm init instructions\" (#59314)"},{"Id":"2761353056","IsPullRequest":true,"CreatedAt":"2024-12-27T23:51:00","Actor":"juanitourquiza","Number":"59322","RawContent":null,"Title":"docs: changed name class.","State":"open","Body":"Changed name class\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59322","RelatedDescription":"Open PR \"docs: changed name class.\" (#59322)"},{"Id":"2761211618","IsPullRequest":true,"CreatedAt":"2024-12-27T19:34:09","Actor":"AndrewKushnir","Number":"59320","RawContent":null,"Title":"docs: add a note about Incremental Hydration to the `@defer` docs","State":"open","Body":"\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59320","RelatedDescription":"Open PR \"docs: add a note about Incremental Hydration to the `@defer` docs\" (#59320)"},{"Id":"2761004277","IsPullRequest":false,"CreatedAt":"2024-12-27T17:30:02","Actor":"jacerhea","Number":"59317","RawContent":null,"Title":"Angular DatePipe when formatted as 'MMMM YYYY' is showing incorrectly","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen using the Angular DatePipe in English with the format 'MMMM YYYY' the date appears as December 2025.  The correct date should be December 2024.\n\n```typescript\nimport {Component} from '@angular/core';\nimport {bootstrapApplication} from '@angular/platform-browser';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  template: `\n  <p>\n      Angular Date Pipe (wrong): {{date | date:'MMMM YYYY'}}\n    </p>    \n  <p>\n      Date Pipe 'long': {{date | date:'long'}}\n    </p>\n  <p>\n      Angular Date fullDate: {{date | date:'fullDate'}}\n    </p>\n  <p>\n  Manual: {{ date.toLocaleString(undefined, { year: \"numeric\", month: \"long\"}) }}\n    </p>\n  `,\n  imports: [\n    DatePipe\n  ]\n})\nexport class PlaygroundComponent {\n  date = new Date(\"2024-12-31T06:00:00.000Z\");\n}\n\nbootstrapApplication(PlaygroundComponent);\n\n``` \n\n![Image](https://github.com/user-attachments/assets/fd113de9-2bac-406a-8482-4d85cd092c23)\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNo exception\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59317","RelatedDescription":"Closed issue \"Angular DatePipe when formatted as 'MMMM YYYY' is showing incorrectly\" (#59317)"},{"Id":"2760962962","IsPullRequest":true,"CreatedAt":"2024-12-27T14:56:34","Actor":"devversion","Number":"59316","RawContent":null,"Title":"fix(bazel): allow `ng_package` to work with `rules_js` dependencies","State":"closed","Body":"Currently the module mapping aspect fails when it transitively discovers a node module target managed by `rules_js`. That is because the targets don't have a `deps` attribute as part of their rule definition.","Url":"https://github.com/angular/angular/pull/59316","RelatedDescription":"Closed or merged PR \"fix(bazel): allow `ng_package` to work with `rules_js` dependencies\" (#59316)"},{"Id":"2760690706","IsPullRequest":false,"CreatedAt":"2024-12-27T10:17:37","Actor":"paciox","Number":"59315","RawContent":null,"Title":"Disable permanently the dumb ng-reflect","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAngular component\ni put conditionally some attribute\nAngular team decided it's clever to arbitrarily change it adding ng-reflect in front of it.\n\nResult = breaks every css\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nHOW TO DISABLE THIS DUMB IDEA\nThis is singlehandedly the most naive code horror  since the invention of javascript\nA framework should ideally do its job without introducing surprising, hidden side effects that break developers’ code or styling.\nExtra “debug features” should typically be opt-in, or at least clearly documented/toggleable, not forced on developers in a way that causes confusion.\nAngular’s dev-mode ng-reflect-* attributes are forced by default. There’s:\n\nNo separate toggle;\nSparse documentation;\nPotential CSS breakage if you (accidentally) rely on attribute selectors or broad styling rules.\nSo, if your standard for “good framework design” is minimal surprises and no forced, hidden features that can break existing code, then yes—by that standard, it’s objectively a poor design decision.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\na\n```\n\n### Anything else?\n\nI tried\n  \"angularCompilerOptions\": {\n    \"debug\": false,\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n\nand putting debug: false everywhere.\nNothing changes.\n\nFinding decent docs of tsconfig is impossible.\nSolve now, we have to work not jingle with broken tools","Url":"https://github.com/angular/angular/issues/59315","RelatedDescription":"Open issue \"Disable permanently the dumb ng-reflect\" (#59315)"},{"Id":"2760554296","IsPullRequest":true,"CreatedAt":"2024-12-27T08:05:29","Actor":"crisbeto","Number":"59313","RawContent":null,"Title":"fix(compiler-cli): preserve defer block dependencies during HMR when class metadata is disabled","State":"open","Body":"Fixes that the compiler wasn't capturing defer block dependencies correctly when `supportTestBed` is disabled. We had tests for this, but we didn't notice the issue because the dependencies ended up being captured because of the `setClassMetadata` calls. Once they're disabled, the dependencies stopped being recorded.\r\n\r\nFixes #59310.\r\n","Url":"https://github.com/angular/angular/pull/59313","RelatedDescription":"Open PR \"fix(compiler-cli): preserve defer block dependencies during HMR when class metadata is disabled\" (#59313)"},{"Id":"2760394222","IsPullRequest":true,"CreatedAt":"2024-12-27T04:57:27","Actor":"Bobokhuja","Number":"59312","RawContent":null,"Title":"docs: fix typo example code in pipes documentation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59312","RelatedDescription":"Open PR \"docs: fix typo example code in pipes documentation\" (#59312)"},{"Id":"2760318380","IsPullRequest":false,"CreatedAt":"2024-12-27T02:46:00","Actor":"sheikalthaf","Number":"59311","RawContent":null,"Title":"Using required input from other directive in template throws an error","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI want to use a computed property from a directive to my component using template reference, but it is throwing an error saying that input required but no value provided. \n\n```ts\nimport { Component, input, computed, Directive } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\n@Directive({\n  selector: '[appTest]',\n  exportAs: 'appTest',\n})\nexport class AppTest {\n  readonly appTest = input.required<string>();\n\n  // using this classNames computed throwing error\n  readonly classNames = computed(() => {\n    return this.appTest();\n  });\n}\n\n@Component({\n  selector: 'app-hello',\n  imports: [AppTest],\n  template: `\n      <div\n           #app=\"appTest\"\n           [appTest]=\"name()\"\n           class=\"{{ 'sample' + (app.classNames() ? ' 1234' : ' 456')}}\"\n        >\n           This is great\n       </div>`,\n})\nexport class HelloComponent {\n  readonly name = input.required<string>();\n\n  // using this classNames computed not throwing error\n  readonly classNames = computed(() => {\n    return this.name();\n  });\n}\n\n@Component({\n  selector: 'app-root',\n  imports: [HelloComponent],\n  template: `\n    <h1>Hello from {{ name }}!</h1>\n    <a target=\"_blank\" href=\"https://angular.dev/overview\">\n      Learn more about Angular\n    </a>\n    <app-hello name=\"name\" />\n  `,\n})\nexport class App {\n  name = 'Angular';\n}\n\nbootstrapApplication(App);\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-prs3pysu?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nERROR RuntimeError: NG0950: Input is required but no value is available yet. Find more at https://angular.dev/errors/NG0950\n    at Object.computation (main.ts:13:17)\n    at HelloComponent_Template (main.ts:20:53)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59311","RelatedDescription":"Open issue \"Using required input from other directive in template throws an error\" (#59311)"},{"Id":"2760053760","IsPullRequest":false,"CreatedAt":"2024-12-26T18:54:18","Actor":"brandonroberts","Number":"59310","RawContent":null,"Title":"Generated HMR metadata update function doesn't include proper imports when using defer blocks","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen enabling HMR/Live Reload, if a defer block is used, an error is logged to the console after saving the component template.\n\n## Steps to reproduce \n1. Clone repo and run `npm install`\n2. Run `ng serve`\n3. Open Browser Devtools\n4. Make a change to `app.component.html` and save.\n5. Note error in browser devtools, and \"lazy works\" disappears.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/brandonroberts/angular-hmr-defer\n\n### Please provide the exception or error you saw\n\n```true\nUncaught ReferenceError: LazyComponent is not defined\n    at AppComponent_Defer_8_DepsFn (app.component.ts:1:157)\n    at triggerResourceLoading (chunk-L7E6HT6X.js?v=287274a3:19516:48)\n    at triggerDeferBlock (chunk-L7E6HT6X.js?v=287274a3:19586:7)\n    at chunk-L7E6HT6X.js?v=287274a3:19458:38\n    at callback (chunk-L7E6HT6X.js?v=287274a3:17478:9)\n    at _ZoneDelegate.invoke (zone.js:369:28)\n    at Object.onInvoke (chunk-L7E6HT6X.js?v=287274a3:8569:25)\n    at _ZoneDelegate.invoke (zone.js:368:34)\n    at ZoneImpl.run (zone.js:111:43)\n    at _NgZone.run (chunk-L7E6HT6X.js?v=287274a3:8450:24)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.0-next.2\nNode: 22.5.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.1.0-next.4\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.0-next.2\n@angular-devkit/build-angular   19.1.0-next.2\n@angular-devkit/core            19.1.0-next.2\n@angular-devkit/schematics      19.1.0-next.2\n@angular/cli                    19.1.0-next.2\n@angular/ssr                    19.1.0-next.2\n@schematics/angular             19.1.0-next.2\nrxjs                            7.8.1\ntypescript                      5.7.2\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nGenerated HMR update metadata function\n\n```ts\nexport default function AppComponent_UpdateMetadata(AppComponent, ɵɵnamespaces) {\n    const ɵhmr0 = ɵɵnamespaces[0];\n    const AppComponent_Defer_8_DepsFn = () => [LazyComponent]; // <-- error\n    function AppComponent_Defer_7_Template(rf, ctx) {\n        if (rf & 1) {\n            ɵhmr0.ɵɵelement(0, \"app-lazy\");\n        }\n    }\n    AppComponent.ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AppComponent)();\n    }\n    ;\n    AppComponent.ɵcmp = /*@__PURE__*/\n    ɵhmr0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        features: [ɵhmr0.ɵɵExternalStylesFeature([\"8911acd770bdc9e6b98613f574402426119ebd7d17ab3a9642918dbc80f2ddda.css\"])],\n        decls: 10,\n        vars: 0,\n        template: function AppComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                ɵhmr0.ɵɵelementStart(0, \"ol\")(1, \"li\");\n                ɵhmr0.ɵɵtext(2, \" Open Browser Devtools \");\n                ɵhmr0.ɵɵelementEnd();\n                ɵhmr0.ɵɵelementStart(3, \"li\");\n                ɵhmr0.ɵɵtext(4, \" Make a change to app.component.html and save. \");\n                ɵhmr0.ɵɵelementEnd();\n                ɵhmr0.ɵɵelementStart(5, \"li\");\n                ɵhmr0.ɵɵtext(6, \" Note error in browser devtools, and \\\"lazy works\\\" disappears. \");\n                ɵhmr0.ɵɵelementEnd()();\n                ɵhmr0.ɵɵtemplate(7, AppComponent_Defer_7_Template, 1, 0);\n                ɵhmr0.ɵɵdefer(8, 7, AppComponent_Defer_8_DepsFn);\n                ɵhmr0.ɵɵdeferOnIdle();\n            }\n        }\n    });\n    ( () => {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵhmr0.ɵsetClassDebugInfo(AppComponent, {\n            className: \"AppComponent\",\n            filePath: \"src/app/app.component.ts\",\n            lineNumber: 10\n        });\n    }\n    )();\n}\n```","Url":"https://github.com/angular/angular/issues/59310","RelatedDescription":"Open issue \"Generated HMR metadata update function doesn't include proper imports when using defer blocks\" (#59310)"},{"Id":"2759983157","IsPullRequest":false,"CreatedAt":"2024-12-26T17:24:09","Actor":"Vermilion755","Number":"59309","RawContent":null,"Title":"Setting form null during creation breaks chain of validity updates","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI noticed that depending on how I build my reactive form, the ancestor forms will not track the child form validity. If I create my form all at once... that is to say I create all the child forms in the object at the same time, the validity tracking works. If instead, I set one child form to null, then on the next line of code I set that null property to a new child form, the validity tracking is broken. \n\nIn the stackblitz example, I am building 3 instances of the same reactive form, but it's being built 3 times in different sets of steps as described above. To see the issue illustrated:\n   1. Delete the contents of the first Test Input, which has the 'required' validator on it. You will see all 6 'valid' booleans above the input change from 'true' to 'false', because the validation issue has propagated up the chain to all the ancestor forms. Now type something into the input and again you'll see all 6 booleans change back to 'true' because the validity has propagated up the chain successfully. \n   \n   2. Perform the same steps on the 2nd Test Input. Here you will see the booleans do not all update, as if the propagation is broken. Now type something into the input again and see the same 5 booleans change back to 'true'. So the base form here is not getting the update and the only difference is that I set the 'first' form to null and then created it on the next line. \n   \n   3. Repeat the same steps on the 3rd Test Input and see how the propagation is further broken here, as only 3 booleans update this time now that I'm also setting the 'second' form to null and then setting it on the next line. \n\nIs this expected behavior? This is an ultra-simplified example. In my real use case, we create the base form but we don't have the data yet to hydrate the children forms, so we have null checks if the data isn't there and we don't create those forms yet. Later when the user performs an action and we retrieve the data from the API, we create a form on those child properties. We have a large nested form where we are highlighting things red in the UI when the form or it's children forms are invalid. So if we instead create blank children forms, we'd have to go and disable the form controls to ensure they aren't counted invalid, which is a hassle. It's much cleaner to just check null AND invalid, but it's not working due to this bug.\n\n![Image](https://github.com/user-attachments/assets/fa6f2249-9d26-4b4b-b2ef-1aa537d93f6d)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-9rojtqfs?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nThere is no exception, just broken behavior\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n\n\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.0\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"rxjs\": \"^7.8.1\",\n    \"tslib\": \"^2.5.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular/build\": \"^19.0.0\",\n    \"@angular/cli\": \"^19.0.0\",\n    \"@angular/compiler-cli\": \"^19.0.0\",\n    \"typescript\": \"^5.6.3\"\n  }\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59309","RelatedDescription":"Open issue \"Setting form null during creation breaks chain of validity updates\" (#59309)"},{"Id":"2759791588","IsPullRequest":false,"CreatedAt":"2024-12-26T13:41:46","Actor":"khalilou88","Number":"59308","RawContent":null,"Title":"Ability to not generate the host element","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHi,\nI like to use Angular to inline svg files in the template but the host element make them hard to style from the parent element like a button.\nIn my case, the host element need just inputs to overrides css styles, so I wish that Angular add a type of components that don't add a extra Dom element.\n\nThank you\n\n### Proposed solution\n\nAdd a type of components that don't add a extra Dom element a least for svg files.\n\n### Alternatives considered\n\nThe current solution is working fine, just add more steps to style svg files and an extra dom element","Url":"https://github.com/angular/angular/issues/59308","RelatedDescription":"Open issue \"Ability to not generate the host element\" (#59308)"},{"Id":"2759752303","IsPullRequest":false,"CreatedAt":"2024-12-26T13:29:08","Actor":"mehedihasansjs","Number":"59307","RawContent":null,"Title":"string type control can be used on number type input field","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have declared a control with type string.\n \n```typescript\ncontrol = new FormControl<string>('')\n```\n\nbut I have applied the control on number type input field\n\n```html\n<input type=\"number\" formControlName=\"control\" />\n```\n\nThe control in the ends returns the value type number, but when I access the API of control's value I can only get string's API.\n\nMy suggestion is, either we can show error or warning if string type control returns value as number, or we can cast the value to string and bind to control's value.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular Version: 17.3.7\n```","Url":"https://github.com/angular/angular/issues/59307","RelatedDescription":"Closed issue \"string type control can be used on number type input field\" (#59307)"},{"Id":"2759743061","IsPullRequest":false,"CreatedAt":"2024-12-26T13:18:36","Actor":"mehedihasansjs","Number":"59306","RawContent":null,"Title":"minLength, maxLength validators does not work on number type value of control and does not throw error","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have used a control which returns value `number`. for validating max and min length, I have used `Validators.minLength` and `Validators.maxLength` also used `Validators.required`. Required returns error object (ValidatorErrors) perfectly, but minlength and maxlength is silent. I was not sure what I was doing wrong.\n\nLater discovered, I can not use `Validators.minLength` and `Validators.maxLength` in a number. Good.\n\nBut at least compiler should throw error or warning in this case that we can not use or the use of those validators is not appropriate in this case.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular Version: 17.3.7\n```","Url":"https://github.com/angular/angular/issues/59306","RelatedDescription":"Closed issue \"minLength, maxLength validators does not work on number type value of control and does not throw error\" (#59306)"},{"Id":"2759316099","IsPullRequest":false,"CreatedAt":"2024-12-26T06:26:36","Actor":"Ravi9129","Number":"59305","RawContent":null,"Title":"abc","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI create simply curd app in angular18, but i am not getting route file for define path # #/![Image](https://github.com/user-attachments/assets/7b1c83eb-fe5e-4a07-b412-32f501a4951e)\n\n\nPlease check and  i attached snapshot also, if any need please reply or connect me \nravirajput1230@gmail.com\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n{\n  \"name\": \"curdapp\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\",\n    \"serve:ssr:curdapp\": \"node dist/curdapp/server/server.mjs\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^18.2.0\",\n    \"@angular/common\": \"^18.2.0\",\n    \"@angular/compiler\": \"^18.2.0\",\n    \"@angular/core\": \"^18.2.0\",\n    \"@angular/forms\": \"^18.2.0\",\n    \"@angular/platform-browser\": \"^18.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^18.2.0\",\n    \"@angular/platform-server\": \"^18.2.0\",\n    \"@angular/router\": \"^18.2.0\",\n    \"@angular/ssr\": \"^18.2.3\",\n    \"express\": \"^4.18.2\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.14.10\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.3\",\n    \"@angular/cli\": \"^18.2.3\",\n    \"@angular/compiler-cli\": \"^18.2.0\",\n    \"@types/express\": \"^4.17.17\",\n    \"@types/jasmine\": \"~5.1.0\",\n    \"@types/node\": \"^18.18.0\",\n    \"jasmine-core\": \"~5.2.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"typescript\": \"~5.5.2\"\n  }\n}\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59305","RelatedDescription":"Closed issue \"abc\" (#59305)"},{"Id":"2758209940","IsPullRequest":false,"CreatedAt":"2024-12-26T04:21:41","Actor":"younes-chaoui","Number":"59304","RawContent":null,"Title":"Severe issue with URLs containing parentheses in SSR mode","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThis issue needs immediate attention.\n\nAny Angular application using SSR can crash when a URL contains parentheses followed by any character.\n\nFor example : \"/product(3)\"\n\nThe server crashes with the following exception:\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: '3'\n\nI see 2 problems here : \n1 - The exception.\n2- Why to crash the whole prod if there is an exception.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nERROR RuntimeError: NG04002: Cannot match any routes. URL Segment: '3'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.3.5\nNode: 20.4.0\nPackage Manager: npm 9.7.2\nOS: linux x64\n\nAngular: 17.3.5\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.5 (cli-only)\n@angular-devkit/build-angular   17.3.5\n@angular-devkit/core            17.3.5 (cli-only)\n@angular-devkit/schematics      17.3.5\n@schematics/angular             17.3.5\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59304","RelatedDescription":"Closed issue \"Severe issue with URLs containing parentheses in SSR mode\" (#59304)"},{"Id":"2758192134","IsPullRequest":false,"CreatedAt":"2024-12-24T19:42:33","Actor":"jtneal","Number":"59303","RawContent":null,"Title":"formatDate returns date off by 1 year","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nPassing a date of `12/31/2024` to `formatDate` results in a formatted date of `12/31/2025`.\n\n![Image](https://github.com/user-attachments/assets/3f6dac9e-56c5-4c76-93b6-d4be392b3ca7)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-x4tkvpyp?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nn/a\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nFound in v18 but reproduced in v19 as well.\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59303","RelatedDescription":"Closed issue \"formatDate returns date off by 1 year\" (#59303)"},{"Id":"2757545071","IsPullRequest":true,"CreatedAt":"2024-12-24T10:12:13","Actor":"Avcharov","Number":"59301","RawContent":null,"Title":"docs: Rework \"Programmatically rendering components\" section with @defer mention","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrently in \"Programmatically rendering components\" section mentioned two ways of management of rendering:\r\n- using `NgComponentOutlet`\r\n- using `ViewContainerRef`\r\n\r\nIssue Number: #56782 \r\n\r\n\r\n## What is the new behavior?\r\nSection was reworked using `@defer` to present Lazy(Defer) loading implementation.\r\n\"using `ViewContainerRef`\" part was moved to the \"Usage notes\" of the ViewContainerRef.createComponent function itself\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n- As it was mentioned that proposal with moving \"using `ViewContainerRef`\" part to \"Usage notes\" is `under triage` let me know if it is needed to be dropped there or `ViewContainerRef` remain in section.\r\n- If `ViewContainerRef` would be better to drop of, let me know if needed to put a reference to ViewContainerRef.createComponent function documentation somewhere in \"Programmatically rendering components\" section","Url":"https://github.com/angular/angular/pull/59301","RelatedDescription":"Open PR \"docs: Rework \"Programmatically rendering components\" section with @defer mention\" (#59301)"},{"Id":"2757374550","IsPullRequest":true,"CreatedAt":"2024-12-24T08:01:48","Actor":"crisbeto","Number":"59300","RawContent":null,"Title":"fix(router): avoid component ID collisions with user code","State":"open","Body":"Currently the `ɵEmptyOutletComponent` is very prone to generating ID collision warnings with user code, because it only has one child and no other metadata. This shows up some of our tests as well. While users can resolve it on their end, it can be confusing since they won't have any references to `ɵEmptyOutletComponent` in their own code.\r\n\r\nThese changes add an `exportAs` to it to make its component ID unique. This doesn't affect the public API of the component since users can't use it directly anyways.","Url":"https://github.com/angular/angular/pull/59300","RelatedDescription":"Open PR \"fix(router): avoid component ID collisions with user code\" (#59300)"},{"Id":"2757249460","IsPullRequest":true,"CreatedAt":"2024-12-24T06:13:09","Actor":"angular-robot","Number":"59299","RawContent":null,"Title":"build: update scorecard action dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/upload-artifact](https://redirect.github.com/actions/upload-artifact) | action | minor | `v4.4.3` -> `v4.5.0` |\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | minor | `v3.27.9` -> `v3.28.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/upload-artifact (actions/upload-artifact)</summary>\n\n### [`v4.5.0`](https://redirect.github.com/actions/upload-artifact/releases/tag/v4.5.0)\n\n[Compare Source](https://redirect.github.com/actions/upload-artifact/compare/v4.4.3...v4.5.0)\n\n#### What's Changed\n\n-   fix: deprecated `Node.js` version in action by [@&#8203;hamirmahal](https://redirect.github.com/hamirmahal) in [https://github.com/actions/upload-artifact/pull/578](https://redirect.github.com/actions/upload-artifact/pull/578)\n-   Add new `artifact-digest` output by [@&#8203;bdehamer](https://redirect.github.com/bdehamer) in [https://github.com/actions/upload-artifact/pull/656](https://redirect.github.com/actions/upload-artifact/pull/656)\n\n#### New Contributors\n\n-   [@&#8203;hamirmahal](https://redirect.github.com/hamirmahal) made their first contribution in [https://github.com/actions/upload-artifact/pull/578](https://redirect.github.com/actions/upload-artifact/pull/578)\n-   [@&#8203;bdehamer](https://redirect.github.com/bdehamer) made their first contribution in [https://github.com/actions/upload-artifact/pull/656](https://redirect.github.com/actions/upload-artifact/pull/656)\n\n**Full Changelog**: https://github.com/actions/upload-artifact/compare/v4.4.3...v4.5.0\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.0`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.0)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.9...v3.28.0)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.28.0 - 20 Dec 2024\n\n-   Bump the minimum CodeQL bundle version to 2.15.5. [#&#8203;2655](https://redirect.github.com/github/codeql-action/pull/2655)\n-   Don't fail in the unusual case that a file is on the search path. [#&#8203;2660](https://redirect.github.com/github/codeql-action/pull/2660).\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.0/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59299","RelatedDescription":"Open PR \"build: update scorecard action dependencies\" (#59299)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2762194611","IsPullRequest":false,"CreatedAt":"2024-12-29T10:35:34","Actor":"AmitMY","Number":"29236","RawContent":null,"Title":"SSG allow loading static assets","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nI am using [transloco](https://github.com/jsverse/transloco) for localization.\nWhen building (used to be prerendering) now the build process tries to render the pages.\nIn doing so, it hits this loader, which loads a static asset (the language in question)\n```ts\n@Injectable({providedIn: 'root'})\nexport class HttpLoader implements TranslocoLoader {\n  private http = inject(HttpClient);\n\n  getTranslation(langPath: string): Observable<Translation> {\n    return this.http.get<Translation>(`assets/i18n/${langPath}.json`);\n  }\n}\n```\nHowever, the HTTP request fails, since there seems to not be an http server involved in the SSG process.\n\nIf I run this in SSR, it also fails, but that is because it can't handle the path, and requires a full URL (http://localhost:4000/assets/...)\n\nIf I accept not having a server, I need to have a similar behavior to what I do during testing:\n```ts\n    if (isPlatformServer(this.platformId)) {\n      const path = require('path');\n      const filePath = path.join(__dirname, '..', '..', '..', assetPath);\n      console.error('filePath', filePath);\n      const fs = require('fs');\n\n      const data = fs.readFileSync(filePath, 'utf8');\n      return of(JSON.parse(data));\n    }\n```\n\nBut this relies on node modules, and the builder errors:\n>   The package \"fs\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n\nTherefore, my issues are:\n\n1. SSG should have some sort of way to load static assets. \n2. SSR should not need the full URL. somehow, it should understand that any path requested is under the same host as the REQUEST.\n\n### Minimal Reproduction\n\n1. Make a new app, with ssr and ssg (`\"prerender\": true`, \"ssr\": {\"entry\": \"src/server.ts\"}`)\n2. under `src/assets` add `something.json`\n3. in the `AppComponent`'s `ngOnInit` function, make `this.httpClient.get('/assets/something.json').subscribe()`\n4. run `ng build --configuration=production`\n\n### Exception or Error\n\n```text\n- SSG should have a way to load static assets\n- SSR should be able to load assets using HTTP\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.0.0\nPackage Manager: npm 10.5.1\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/material               19.0.4\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nIn the old prerendering, it used to work.","Url":"https://github.com/angular/angular-cli/issues/29236","RelatedDescription":"Open issue \"SSG allow loading static assets\" (#29236)"},{"Id":"2761856411","IsPullRequest":false,"CreatedAt":"2024-12-28T19:04:17","Actor":"Char2sGu","Number":"29235","RawContent":null,"Title":"SSR Text Loader Resolves To Wrong Result","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWith the following loader configuration:\n\n```json\n            \"loader\": {\n              \".svg\": \"text\"\n            }\n```\n\nWhen importing the following asset on server:\n\n```ts\nimport icon from '@material-symbols/svg-500/outlined/add.svg';\n```\n\nThe asset is resolved to a path `/@fs/home/char2s/projects/issue-ssr-dev-loader/node_modules/@material-symbols/svg-500/outlined/add.svg` instead of the text content of the asset.\n\nThe loader works correctly on browser or for local assets (not in node_modules)\n\n### Minimal Reproduction\n\nSee https://github.com/Char2sGu/issue-ssr-dev-loader/\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29235","RelatedDescription":"Open issue \"SSR Text Loader Resolves To Wrong Result\" (#29235)"},{"Id":"2761803945","IsPullRequest":true,"CreatedAt":"2024-12-28T17:07:32","Actor":"santoshyadavdev","Number":"29234","RawContent":null,"Title":"fix(@angular-devkit/build-angular) : fix incorrect budget calculation","State":"open","Body":"Fixes #29040\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #29040\r\n\r\n## What is the new behavior?\r\n\r\nIt uses kb value from packages/angular/build/src/utils/bundle-calculator.ts so there is no difference in value when running tests\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29234","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular) : fix incorrect budget calculation\" (#29234)"},{"Id":"2757673298","IsPullRequest":false,"CreatedAt":"2024-12-28T13:30:52","Actor":"HazzMan2409","Number":"29225","RawContent":null,"Title":"new Worker() doesn't work from a library","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nCreating a new worker with the\n\n```ts\nnew Worker(new URL('<workerfile>', import.meta.url))\n```\n\nsyntax doesn't work from within a library in node_modules.\n\nAlso see https://github.com/angular/angular-cli/issues/26991, it is not fixed.\n\n### Minimal Reproduction\n\nhttps://github.com/HazzMan2409/ng-worker-issue/tree/main\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.6\nNode: 20.11.0\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29225","RelatedDescription":"Closed issue \"new Worker() doesn't work from a library\" (#29225)"},{"Id":"2761697711","IsPullRequest":true,"CreatedAt":"2024-12-28T12:58:55","Actor":"faraon-bot","Number":"29233","RawContent":null,"Title":"Add Habilita builder","State":"closed","Body":"Add a new \"Habilita\" builder to the Angular CLI.\n\n* **New Builder Implementation**\n  - Create `habilita.ts` file to implement the \"Habilita\" builder.\n  - Implement the builder logic to log a message.\n  - Export the builder using `createBuilder` function.\n\n* **Builder Configuration**\n  - Modify `builders.json` to add a new entry for the \"Habilita\" builder.\n  - Specify the implementation file and schema for the builder.\n\n* **Schema Definition**\n  - Create `habilita-schema.json` to define the input properties for the \"Habilita\" builder.\n  - Define the \"message\" property as a required string.\n\n---\n\nFor more details, open the [Copilot Workspace session](https://copilot-workspace.githubnext.com/angular/angular-cli/pull/29233?shareId=f736661d-12bb-408b-8ff3-432eb3b83ae5).","Url":"https://github.com/angular/angular-cli/pull/29233","RelatedDescription":"Closed or merged PR \"Add Habilita builder\" (#29233)"},{"Id":"2761196294","IsPullRequest":false,"CreatedAt":"2024-12-27T19:11:46","Actor":"mauriziocescon","Number":"29232","RawContent":null,"Title":"ng-serve: bundle main.js loaded instead of public/main.js","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0 (not sure which one changed the behaviour... but for sure 19.0.0 was fine)\n\n### Description\n\nHey! \n\nIt seems to me the current `ng serve` (cli 19.0.6) has a problem loading any file named `main.js` saved in the public folder. The issue is very easy to reproduce: \n- create a new project, \n- save a simple `main.js` in `public/test`, \n- run `ng serve`\n- open `http://localhost:4200/test/main.js`, \n- the `main.js` from the bundle is loaded. \n\n<img width=\"1678\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/deef8e70-7e06-42e8-860e-4d1c7af75275\" />\n\n\n### Minimal Reproduction\n\n- create a new project,\n- save a simple `main.js` in `public/test`,\n- run `ng serve`,\n- open `http://localhost:4200/test/main.js`,\n- the `main.js` from the bundle is loaded.\n\n\n### Your Environment\n\n```text\ncli 19.0.6\n```","Url":"https://github.com/angular/angular-cli/issues/29232","RelatedDescription":"Open issue \"ng-serve: bundle main.js loaded instead of public/main.js\" (#29232)"},{"Id":"2761054409","IsPullRequest":false,"CreatedAt":"2024-12-27T16:14:21","Actor":"xjlzy","Number":"29231","RawContent":null,"Title":"ESBuild is very slow!!!","State":"open","Body":"### Command\n\nserve, build\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI created a project through Angular/cli@18.2.12. This project contains ten thousand components, which are distributed into one hundred modules. These codes take up approximately 20MB of disk space. When I execute the default dev-server builder, it takes about 300 seconds or so. Then, when performing an incremental build after modifying the files for the first time, it also takes around 300 seconds to complete the build. And the incremental compilation time after modifying the files later is about 15 seconds or so. Moreover, it occupies a huge amount of memory. The processes of Node.js and Esbuild take up approximately 14GB of memory.\n\n### Minimal Reproduction\n\nhttps://github.com/xjlzy/test.git\nThis is the git repository address of my local test code. You just need to run it and you'll be able to know the specific situation. I hope to reduce the time for the first incremental build and also lower the memory usage.\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.12\nNode: 22.11.0\nPackage Manager: yarn 1.22.22\nOS: win32 x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\nOS: Windows 11 Home 24H2\nmemory: 32GB\nCPU: Intel(R) Core(TM) Ultra 7 155H   3.80 GHz","Url":"https://github.com/angular/angular-cli/issues/29231","RelatedDescription":"Open issue \"ESBuild is very slow!!!\" (#29231)"},{"Id":"2759921935","IsPullRequest":true,"CreatedAt":"2024-12-27T14:07:06","Actor":"josephperrott","Number":"29230","RawContent":null,"Title":"[Patch of #29224] build: migrate `@angular/build` to `ts_project`","State":"closed","Body":"This commit migrates `@angular/build` to `ts_project`.\r\n","Url":"https://github.com/angular/angular-cli/pull/29230","RelatedDescription":"Closed or merged PR \"[Patch of #29224] build: migrate `@angular/build` to `ts_project`\" (#29230)"},{"Id":"2757425756","IsPullRequest":true,"CreatedAt":"2024-12-26T15:55:05","Actor":"devversion","Number":"29224","RawContent":null,"Title":"build: migrate `@angular/build` to `ts_project`","State":"closed","Body":"This commit migrates `@angular/build` to `ts_project`.\r\n\r\nNote: The `tsconfig.json` can be cleaned up in a follow-up once we have standardized on `index.ts`","Url":"https://github.com/angular/angular-cli/pull/29224","RelatedDescription":"Closed or merged PR \"build: migrate `@angular/build` to `ts_project`\" (#29224)"},{"Id":"2759063250","IsPullRequest":true,"CreatedAt":"2024-12-25T19:12:10","Actor":"43081j","Number":"29229","RawContent":null,"Title":"perf(@angular-devkit/schematics): migrate to picospinner","State":"open","Body":"Migrates from `ora` to `picospinner` for CLI spinners.\r\n\r\nThis is a much lighter and faster package, giving us some gains in performance.\r\n\r\nNote that most popular spinner libraries are _meant_ to ignore/clear output while they are running. So previous workarounds and notes around that will need to be re-discussed.\r\n\r\n**I'm leaving this a draft until we have discussed the above point**\r\n\r\n## PR Checklist\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular-cli/pull/29229","RelatedDescription":"Open PR \"perf(@angular-devkit/schematics): migrate to picospinner\" (#29229)"},{"Id":"2758532302","IsPullRequest":false,"CreatedAt":"2024-12-25T12:16:20","Actor":"mr-dev-dragon","Number":"29228","RawContent":null,"Title":"new Worker() doesn't work from a library","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular CLI: 19.0.6 | Angular Core: 19.0.5 | Node.js: 20.13.1\n\n### Description\n\nThe issue describes a problem when attempting to use the new Worker() constructor within an Angular library. The expected behavior is that the Web Worker should function correctly when instantiated from a library. However, it appears that this is not the case, indicating a potential bug in the Angular CLI's handling of Web Workers within libraries.\n\n### Minimal Reproduction\n\nempty Brean new project \n\n\naction =>\n              ng g  component profile --standalone :  \n\n              CREATE src/app/profile/profile.component.html (23 bytes)\n              CREATE src/app/profile/profile.component.spec.ts (622 bytes)\n              CREATE src/app/profile/profile.component.ts (230 bytes)     \n              CREATE src/app/profile/profile.component.scss (0 bytes)   \n\n result = > \n\n               import { Component } from '@angular/core';\n                \n                @Component({\n                  selector: 'app-profile',\n                  imports: [],\n                  templateUrl: './profile.component.html',\n                  styleUrl: './profile.component.scss'\n                })\n                export class ProfileComponent {\n                \n                }\n\n I event added schematics to anguler.json => \n\n               \"schematics\": {\n                    \"@schematics/angular:component\": {\n                      \"style\": \"scss\",\n                      \"standalone\": true\n                    }\n                  },             \n  \n\n\n### Exception or Error\n\n```text\nno notifaction\n```\n\n### Your Environment\n\n```text\nng version =>\n\n                    Angular CLI: 19.0.6\n                    Node: 20.13.1\n                    Package Manager: npm 10.9.1\n                    OS: win32 x64\n                    \n                    Angular: 19.0.5\n                    Package                         Version\n                    ---------------------------------------------------------  \n                    @angular-devkit/architect       0.1900.6\n                    @angular-devkit/build-angular   19.0.6\n                    @angular-devkit/core            19.0.6\n                    @angular-devkit/schematics      19.0.6\n                    @angular/cli                    19.0.6\n                    @schematics/angular             19.0.6\n                    rxjs                            7.8.1\n                    typescript                      5.6.3\n                    zone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nno","Url":"https://github.com/angular/angular-cli/issues/29228","RelatedDescription":"Closed issue \"new Worker() doesn't work from a library\" (#29228)"},{"Id":"2758104029","IsPullRequest":false,"CreatedAt":"2024-12-24T14:28:03","Actor":"draylegend","Number":"29227","RawContent":null,"Title":"Error: ENOENT: no such file or directory","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, compiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm trying to use [elysia](https://elysiajs.com) instead of `express` and the application is loading properly, but I encountered an error while building the app.\n\nIt seems the build is expecting a browser directory in the .angular/prerender-root path, which is missing.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/draylegend/elysia-static-bugs\n\n### Please provide the exception or error you saw\n\n```true\n/home/dl/elysia-static-bugs/node_modules/.bin/nx run app:build\n\n> nx run app:build:production\n\n\nError: ENOENT: no such file or directory, scandir '/home/dl/elysia-static-bugs/.angular/prerender-root/browser'\n    at async readdir (node:internal/fs/promises:950:18)\n    at async xd (file:///home/dl/elysia-static-bugs/.angular/prerender-root/24ad1a33-bc90-456d-a021-f501fd639e6a/server.mjs:316:16758)\n    at async Id (file:///home/dl/elysia-static-bugs/.angular/prerender-root/24ad1a33-bc90-456d-a021-f501fd639e6a/server.mjs:316:17397)\n    at async _i.drain (file:///home/dl/elysia-static-bugs/.angular/prerender-root/24ad1a33-bc90-456d-a021-f501fd639e6a/server.mjs:8:43953) {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'scandir',\n  path: '/home/dl/elysia-static-bugs/.angular/prerender-root/browser'\n}\nError: ENOENT: no such file or directory, scandir '/home/dl/elysia-static-bugs/.angular/prerender-root/browser'\n    at async readdir (node:internal/fs/promises:950:18)\n    at async xd (file:///home/dl/elysia-static-bugs/.angular/prerender-root/59adf74f-e832-4d1c-8571-52631a8a516b/server.mjs:316:16758)\n    at async Id (file:///home/dl/elysia-static-bugs/.angular/prerender-root/59adf74f-e832-4d1c-8571-52631a8a516b/server.mjs:316:17397)\n    at async _i.drain (file:///home/dl/elysia-static-bugs/.angular/prerender-root/59adf74f-e832-4d1c-8571-52631a8a516b/server.mjs:8:43953) {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'scandir',\n  path: '/home/dl/elysia-static-bugs/.angular/prerender-root/browser'\n}\nBrowser bundles     \nInitial chunk files  | Names            |  Raw size | Estimated transfer size\nmain-GFSKVUMT.js     | main             | 217.62 kB |                60.04 kB\nstyles-YYJXJO7S.css  | styles           |   4.66 kB |                 1.17 kB\n\n                     | Initial total    | 222.28 kB |                61.21 kB\n\n\nServer bundles      \nInitial chunk files  | Names            |  Raw size\nmain.server.mjs      | main.server      | 725.71 kB |                        \nserver.mjs           | server           | 255.82 kB |                        \npolyfills.server.mjs | polyfills.server | 237.05 kB |                        \nchunk-JAEHAS6C.mjs   | -                |   1.52 kB |                        \nchunk-T55IDOPT.mjs   | -                | 976 bytes |                        \n\nLazy chunk files     | Names            |  Raw size\nchunk-PORXTWD6.mjs   | xhr2             |  12.14 kB |                        \nchunk-N3SI5I4Q.mjs   | xhr2             |  12.07 kB |                        \n\nPrerendered 1 static route.\nApplication bundle generation complete. [9.428 seconds]\n\nOutput location: /home/dl/elysia-static-bugs/dist/apps/app\n\n\n——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n NX   Successfully ran target build for project app (10s)\n\n\nProcess finished with exit code 0\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n$ nx report\n\n NX   Report\n\nNode           : 22.10.0\nOS             : linux-x64\nNative Target  : x86_64-linux\nbun            : 1.1.42\n\nnx (global)            : 20.2.1\nnx                     : 20.3.0\n@nx/js                 : 20.3.0\n@nx/eslint             : 20.3.0\n@nx/workspace          : 20.3.0\n@nx/angular            : 20.3.0\n@nx/devkit             : 20.3.0\n@nx/eslint-plugin      : 20.3.0\n@nx/module-federation  : 20.3.0\n@nx/playwright         : 20.3.0\n@nx/vite               : 20.3.0\n@nx/web                : 20.3.0\n@nx/webpack            : 20.3.0\ntypescript             : 5.6.3\n---------------------------------------\nRegistered Plugins:\n@nx/playwright/plugin\n@nx/eslint/plugin\n---------------------------------------\nCommunity plugins:\n@analogjs/vite-plugin-angular : 1.10.3\n@analogjs/vitest-angular      : 1.10.3\nangular-eslint                : 19.0.3-alpha.0\n\nWSL version: 2.2.4.0\nKernel version: 5.15.153.1-2\nWSLg version: 1.0.61\nMSRDC version: 1.2.5326\nDirect3D version: 1.611.1-81528511\nDXCore version: 10.0.26091.1-240325-1447.ge-release\nWindows version: 10.0.26100.2605\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29227","RelatedDescription":"Open issue \"Error: ENOENT: no such file or directory\" (#29227)"},{"Id":"2757820746","IsPullRequest":false,"CreatedAt":"2024-12-24T13:41:29","Actor":"mwaibel-go","Number":"29226","RawContent":null,"Title":"Unclear error message when no builder is configured","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen no builder is configured in `angular.json`, the provided error message is unhelpful in determining the issue.\n\nIt would be nice if the CLI detected that no builder was defined and reported that error.\n\nSuggestion: “You have not specified a builder with which to compile the project. Please add one in 'angular.json' under the key 'projects._project_.architect._target_.builder'”\n\n### Minimal Reproduction\n\n1. Create new project via `ng new ang` and accept the default options\n2. `cd ang`\n3. Open `angular.json` and remove the key `projects.ang.architect.build.builder`\n4. `ng build`\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: Cannot read properties of undefined (reading 'split')\nSee \"/tmp/ng-zswHbS/angular-errors.log\" for further details.\n```\n\nThe mentioned file contains\n\n```\n[error] TypeError: Cannot read properties of undefined (reading 'split')\n    at WorkspaceNodeModulesArchitectHost.resolveBuilder (/home/mwaibel/tmp/ang/ang/node_modules/@angular-devkit/architect/node/node-modules-architect-host.js:114:55)\n    at BuildCommandModule.getArchitectTargetOptions (/home/mwaibel/tmp/ang/ang/node_modules/@angular/cli/src/command-builder/architect-base-command-module.js:147:47)\n    at async BuildCommandModule.builder (/home/mwaibel/tmp/ang/ang/node_modules/@angular/cli/src/command-builder/architect-command-module.js:53:31)\n    at async runCommand (/home/mwaibel/tmp/ang/ang/node_modules/@angular/cli/src/command-builder/command-runner.js:73:5)\n    at async default_1 (/home/mwaibel/tmp/ang/ang/node_modules/@angular/cli/lib/cli/index.js:70:16)\n```\n\n### Your Environment\n\nTested in all of these:\n\n```text\nAngular CLI: 17.3.11\nNode: 18.20.4\nPackage Manager: npm 10.9.1\nOS: linux x64\n\nAngular: 17.3.12\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.11\n@angular-devkit/build-angular   17.3.11\n@angular-devkit/core            17.3.11\n@angular-devkit/schematics      17.3.11\n@angular/cli                    17.3.11\n@schematics/angular             17.3.11\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n```\nAngular CLI: 18.2.12\nNode: 18.20.4\nPackage Manager: npm 10.9.1\nOS: linux x64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n```\nAngular CLI: 19.0.6\nNode: 18.20.4\nPackage Manager: npm 10.9.1\nOS: linux x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6 (cli-only)\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n\n```\n\n### Anything else relevant?\n\n_no response_","Url":"https://github.com/angular/angular-cli/issues/29226","RelatedDescription":"Open issue \"Unclear error message when no builder is configured\" (#29226)"},{"Id":"2757240084","IsPullRequest":true,"CreatedAt":"2024-12-24T06:05:23","Actor":"angular-robot","Number":"29223","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | patch | [`8.18.1` -> `8.18.2`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.18.1/8.18.2) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | patch | [`8.18.1` -> `8.18.2`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.18.1/8.18.2) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.5` -> `6.0.6`](https://renovatebot.com/diffs/npm/vite/6.0.5/6.0.6) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.5` -> `6.0.6`](https://renovatebot.com/diffs/npm/vite/6.0.5/6.0.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.18.2`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8182-2024-12-23)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.18.1...v8.18.2)\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[no-unnecessary-condition] handle noUncheckedIndexedAccess true ([#&#8203;10514](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10514))\n-   **eslint-plugin:** \\[consistent-type-assertions] allow default assertionStyle option ([#&#8203;10512](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10512))\n-   **eslint-plugin:** \\[no-unnecessary-type-arguments] handle type/value context ([#&#8203;10503](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10503))\n-   **eslint-plugin:** \\[no-unsafe-type-assertion] fix for unsafe assertion to a constrained type parameter ([#&#8203;10461](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10461))\n-   **eslint-plugin:** \\[consistent-indexed-object-style] use a suggestion over an auto-fix if can't reliably determine that produced index signature is valid ([#&#8203;10490](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10490))\n-   **eslint-plugin:** \\[no-unnecessary-condition] don't flag values of an unconstrained or valid type parameter ([#&#8203;10473](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10473))\n-   **eslint-plugin:** \\[prefer-reduce-type-parameter] don't report cases in which the fix results in a type error ([#&#8203;10494](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10494))\n-   **eslint-plugin:** \\[no-deprecated] not reporting usages of deprecated declared constants as object value ([#&#8203;10498](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10498))\n\n##### ❤️ Thank You\n\n-   Luke Deen Taylor [@&#8203;controversial](https://redirect.github.com/controversial)\n-   Ronen Amiel\n-   Scott O'Hara\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n-   Yukihiro Hasegawa [@&#8203;y-hsgw](https://redirect.github.com/y-hsgw)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.18.2`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8182-2024-12-23)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.18.1...v8.18.2)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.6`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small606-2024-12-26-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.5...v6.0.6)\n\n-   fix: replace runner-side path normalization with `fetchModule`-side resolve ([#&#8203;18361](https://redirect.github.com/vitejs/vite/issues/18361)) ([9f10261](https://redirect.github.com/vitejs/vite/commit/9f10261e7609098b832fd0fb23a64840b3a0d1a0)), closes [#&#8203;18361](https://redirect.github.com/vitejs/vite/issues/18361)\n-   fix(css): resolve style tags in HTML files correctly for lightningcss ([#&#8203;19001](https://redirect.github.com/vitejs/vite/issues/19001)) ([afff05c](https://redirect.github.com/vitejs/vite/commit/afff05c03266fc76d5ab8928215c89f5992f40f8)), closes [#&#8203;19001](https://redirect.github.com/vitejs/vite/issues/19001)\n-   fix(css): show correct error when unknown placeholder is used for CSS modules pattern in lightningcs ([9290d85](https://redirect.github.com/vitejs/vite/commit/9290d85b5d2ad64991bd296157cb3bcb959c341d)), closes [#&#8203;19070](https://redirect.github.com/vitejs/vite/issues/19070)\n-   fix(resolve): handle package.json with UTF-8 BOM ([#&#8203;19000](https://redirect.github.com/vitejs/vite/issues/19000)) ([902567a](https://redirect.github.com/vitejs/vite/commit/902567ac5327e915ce65d090045fa4922ef9f2b5)), closes [#&#8203;19000](https://redirect.github.com/vitejs/vite/issues/19000)\n-   fix(ssrTransform): preserve line offset when transforming imports ([#&#8203;19004](https://redirect.github.com/vitejs/vite/issues/19004)) ([1aa434e](https://redirect.github.com/vitejs/vite/commit/1aa434e8017012bf0939b2ff1a3a66b4bd12b76d)), closes [#&#8203;19004](https://redirect.github.com/vitejs/vite/issues/19004)\n-   chore: fix typo in comment ([#&#8203;19067](https://redirect.github.com/vitejs/vite/issues/19067)) ([eb06ec3](https://redirect.github.com/vitejs/vite/commit/eb06ec30bb02ced66274f0fc6e90aff2bb20c632)), closes [#&#8203;19067](https://redirect.github.com/vitejs/vite/issues/19067)\n-   chore: update comment about `build.target` ([#&#8203;19047](https://redirect.github.com/vitejs/vite/issues/19047)) ([0e9e81f](https://redirect.github.com/vitejs/vite/commit/0e9e81f622f13d78ee238c0fa72ba920e23419f4)), closes [#&#8203;19047](https://redirect.github.com/vitejs/vite/issues/19047)\n-   revert: unpin esbuild version ([#&#8203;19043](https://redirect.github.com/vitejs/vite/issues/19043)) ([8bfe247](https://redirect.github.com/vitejs/vite/commit/8bfe247511517c631a26f3931bb3c93a7b0b7446)), closes [#&#8203;19043](https://redirect.github.com/vitejs/vite/issues/19043)\n-   test(ssr): test virtual module with query ([#&#8203;19044](https://redirect.github.com/vitejs/vite/issues/19044)) ([a1f4b46](https://redirect.github.com/vitejs/vite/commit/a1f4b46896cb4b442b54a8336db8eca6df9ee02d)), closes [#&#8203;19044](https://redirect.github.com/vitejs/vite/issues/19044)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29223","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29223)"},{"Id":"2756749944","IsPullRequest":true,"CreatedAt":"2024-12-23T21:41:55","Actor":"clydin","Number":"29222","RawContent":null,"Title":"build: migrate E2E tests to `ts_project`","State":"open","Body":"The E2E tests have been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29222","RelatedDescription":"Open PR \"build: migrate E2E tests to `ts_project`\" (#29222)"},{"Id":"2756451606","IsPullRequest":true,"CreatedAt":"2024-12-23T18:33:36","Actor":"clydin","Number":"29219","RawContent":null,"Title":"build: migrate `@angular/pwa` to `ts_project`","State":"closed","Body":"The `@angular/pwa` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29219","RelatedDescription":"Closed or merged PR \"build: migrate `@angular/pwa` to `ts_project`\" (#29219)"},{"Id":"2756487284","IsPullRequest":true,"CreatedAt":"2024-12-23T18:33:16","Actor":"clydin","Number":"29220","RawContent":null,"Title":"build: migrate `@angular/cli` to `ts_project`","State":"closed","Body":"The `@angular/cli` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29220","RelatedDescription":"Closed or merged PR \"build: migrate `@angular/cli` to `ts_project`\" (#29220)"},{"Id":"2756492483","IsPullRequest":false,"CreatedAt":"2024-12-23T17:38:39","Actor":"itised","Number":"29221","RawContent":null,"Title":"Build error: listen EADDRINUSE: address already in use :::4200\" error","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler-cli\n\n### Description\n\nIn v19, running `build` with the default angular.json will fail if a service is already using port 4200:\n\n![Image](https://github.com/user-attachments/assets/5dd10cf0-e764-4361-99fa-b9c645900aeb)\n\n### Proposed solution\n\nHave `build` accept a `--port` flag the same way that `serve` does.\n\nIt might also be nice if by default `build` used a different port\n\n### Alternatives considered\n\nAs a workaround, I moved my other running service to a different port. Not a difficult solution, but also not the most ideal.","Url":"https://github.com/angular/angular-cli/issues/29221","RelatedDescription":"Open issue \"Build error: listen EADDRINUSE: address already in use :::4200\" error\" (#29221)"},{"Id":"2756348194","IsPullRequest":true,"CreatedAt":"2024-12-23T17:05:42","Actor":"clydin","Number":"29218","RawContent":null,"Title":"build: migrate `@angular-devkit/schematics-cli` to `ts_project`","State":"closed","Body":"The `@angular-devkit/schematics-cli` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29218","RelatedDescription":"Closed or merged PR \"build: migrate `@angular-devkit/schematics-cli` to `ts_project`\" (#29218)"},{"Id":"2756317849","IsPullRequest":true,"CreatedAt":"2024-12-23T17:05:29","Actor":"clydin","Number":"29217","RawContent":null,"Title":"build: migrate `@schematics/angular` to `ts_project`","State":"closed","Body":"The `@schematics/angular` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29217","RelatedDescription":"Closed or merged PR \"build: migrate `@schematics/angular` to `ts_project`\" (#29217)"},{"Id":"2756214874","IsPullRequest":true,"CreatedAt":"2024-12-23T15:09:26","Actor":"clydin","Number":"29216","RawContent":null,"Title":"build: migrate modules/testing to ts_project","State":"closed","Body":"The `modules/testing/builder` target used for builder integration testing has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29216","RelatedDescription":"Closed or merged PR \"build: migrate modules/testing to ts_project\" (#29216)"},{"Id":"2754076160","IsPullRequest":true,"CreatedAt":"2024-12-23T15:02:00","Actor":"clydin","Number":"29208","RawContent":null,"Title":"ci: ensure passing build before rest of PR jobs","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29208","RelatedDescription":"Closed or merged PR \"ci: ensure passing build before rest of PR jobs\" (#29208)"},{"Id":"2756207398","IsPullRequest":true,"CreatedAt":"2024-12-23T14:44:42","Actor":"clydin","Number":"29215","RawContent":null,"Title":"test: remove several outdated E2E tests","State":"open","Body":"Two tests related to the protractor builder have been removed (e2e-host & http-headers).\r\nTwo tests with existing integration tests have been removed (http-headers & proxy-config).","Url":"https://github.com/angular/angular-cli/pull/29215","RelatedDescription":"Open PR \"test: remove several outdated E2E tests\" (#29215)"},{"Id":"2753788445","IsPullRequest":true,"CreatedAt":"2024-12-23T14:22:06","Actor":"angular-robot","Number":"29206","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`5.1.0` -> `5.1.1`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.0/5.1.1) |\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`5.1.0` -> `5.1.1`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.1.0/5.1.1) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | patch | [`7.2.0` -> `7.2.1`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.2.0/7.2.1) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | patch | [`7.2.0` -> `7.2.1`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.2.0/7.2.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | minor | [`4.28.1` -> `4.29.1`](https://renovatebot.com/diffs/npm/rollup/4.28.1/4.29.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | minor | [`4.28.1` -> `4.29.1`](https://renovatebot.com/diffs/npm/rollup/4.28.1/4.29.1) |\n| [verdaccio](https://verdaccio.org) ([source](https://redirect.github.com/verdaccio/verdaccio)) | devDependencies | patch | [`6.0.4` -> `6.0.5`](https://renovatebot.com/diffs/npm/verdaccio/6.0.4/6.0.5) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.1`](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.0...@inquirer/confirm@5.1.1)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.1.0...@inquirer/confirm@5.1.1)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.29.1`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4291)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.29.0...v4.29.1)\n\n*2024-12-21*\n\n##### Bug Fixes\n\n-   Fix crash from deoptimized logical expressions ([#&#8203;5771](https://redirect.github.com/rollup/rollup/issues/5771))\n\n##### Pull Requests\n\n-   [#&#8203;5769](https://redirect.github.com/rollup/rollup/pull/5769): Remove unnecessary lifetimes ([@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5771](https://redirect.github.com/rollup/rollup/pull/5771): fix: do not optimize the literal value if the cache is deoptimized ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n\n### [`v4.29.0`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4290)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.28.1...v4.29.0)\n\n*2024-12-20*\n\n##### Features\n\n-   Treat objects as truthy and always check second argument to better simplify logical expressions ([#&#8203;5763](https://redirect.github.com/rollup/rollup/issues/5763))\n\n##### Pull Requests\n\n-   [#&#8203;5759](https://redirect.github.com/rollup/rollup/pull/5759): docs: add utf-8 encoding to JSON file reading ([@&#8203;chouchouji](https://redirect.github.com/chouchouji))\n-   [#&#8203;5760](https://redirect.github.com/rollup/rollup/pull/5760): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5763](https://redirect.github.com/rollup/rollup/pull/5763): fix: introduce UnknownFalsyValue for enhancing if statement tree-shaking ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n-   [#&#8203;5766](https://redirect.github.com/rollup/rollup/pull/5766): chore(deps): update dependency [@&#8203;rollup/plugin-node-resolve](https://redirect.github.com/rollup/plugin-node-resolve) to v16 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5767](https://redirect.github.com/rollup/rollup/pull/5767): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n\n</details>\n\n<details>\n<summary>verdaccio/verdaccio (verdaccio)</summary>\n\n### [`v6.0.5`](https://redirect.github.com/verdaccio/verdaccio/releases/tag/v6.0.5)\n\n[Compare Source](https://redirect.github.com/verdaccio/verdaccio/compare/v6.0.4...v6.0.5)\n\n#### What's Changed\n\n-   fix(deps): update core verdaccio dependencies (6.x) by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/verdaccio/verdaccio/pull/5014](https://redirect.github.com/verdaccio/verdaccio/pull/5014)\n    -   [feat(ui-components): support packages with multiple module types (](https://redirect.github.com/verdaccio/verdaccio/commit/5a91448653bc2e68dbd5bb6f2c15317ef3c0d4e3)[https://github.com/verdaccio/verdaccio/pull/5008](https://redirect.github.com/verdaccio/verdaccio/pull/5008)[)](https://redirect.github.com/verdaccio/verdaccio/commit/5a91448653bc2e68dbd5bb6f2c15317ef3c0d4e3) [@&#8203;kuoruan](https://redirect.github.com/kuoruan)\n    -   [fix](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21) [https://github.com/verdaccio/verdaccio/issues/4984](https://redirect.github.com/verdaccio/verdaccio/issues/4984) [crashes with path-to-regexp v0.1.12 (](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21)[https://github.com/verdaccio/verdaccio/pull/5011](https://redirect.github.com/verdaccio/verdaccio/pull/5011)[)](https://redirect.github.com/verdaccio/verdaccio/commit/139861eb087c4ab1b4b58f3d473905315e271f21) [@&#8203;juanpicado](https://redirect.github.com/juanpicado)\n    -\n\n**Full Changelog**: https://github.com/verdaccio/verdaccio/compare/v6.0.4...v6.0.5\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29206","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29206)"},{"Id":"2756035357","IsPullRequest":true,"CreatedAt":"2024-12-23T14:17:35","Actor":"clydin","Number":"29214","RawContent":null,"Title":"build: migrate `@angular/create` to `ts_project`","State":"closed","Body":"The `@angular/create` package has been migrated to the `rules_js` ts_project rule.","Url":"https://github.com/angular/angular-cli/pull/29214","RelatedDescription":"Closed or merged PR \"build: migrate `@angular/create` to `ts_project`\" (#29214)"},{"Id":"2755435014","IsPullRequest":true,"CreatedAt":"2024-12-23T14:16:28","Actor":"devversion","Number":"29210","RawContent":null,"Title":"build: migrate `angular_devkit/core` to `ts_project`","State":"closed","Body":"Migrates `@angular-devkit/core` to `ts_project`.","Url":"https://github.com/angular/angular-cli/pull/29210","RelatedDescription":"Closed or merged PR \"build: migrate `angular_devkit/core` to `ts_project`\" (#29210)"},{"Id":"2755570294","IsPullRequest":true,"CreatedAt":"2024-12-23T09:04:21","Actor":"angular-robot","Number":"29213","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0e6c3f5` -> `41e8092` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `722eb51` -> `8cd5736` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2dba82d` -> `e025d18` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `3c51fee` -> `a0a27ed` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `44ce460` -> `e409814` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `195d16a` -> `7e05e4a` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `e1b18f5` -> `8e1b6d6` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `dcf469f` -> `6e63df3` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `1ba071c` -> `b675eaa` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `ca17908` -> `c654684` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `8e43647` -> `98da5cf` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `8b8e8e6` -> `94f0b45` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `42a6548` -> `bf24025` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `e4435cc` -> `fa6e771` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `20a349f` -> `a5e46f6` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `566f6f3` -> `0c66459` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `6cd4d80` -> `a399f52` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `5e82f42` -> `a7c8973` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `8c47503` -> `006b267` |\n| angular/dev-infra | action | digest | `e8ee8c5` -> `f0a9343` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29213","RelatedDescription":"Open PR \"build: update angular\" (#29213)"},{"Id":"2755519421","IsPullRequest":false,"CreatedAt":"2024-12-23T08:35:15","Actor":"rajasekar-d","Number":"29212","RawContent":null,"Title":"SSR Build Error: \"An Error Occurred While Extracting Routes\"","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe Angular Universal SSR build works correctly when the response logic is written directly in the server.ts file. However, when the same functionality is moved to an imported function in a separate file, the build fails with the error: **\"An error occurred while extracting routes.\"**\n\n### Minimal Reproduction\n\n**1. Create an API route directly in server.ts(works fine during build):**\n\n```\napp.get('/api/ping', (_req: Request, res: Response) => {\n  return res.json({\n    uptime: process.uptime(),\n    message: 'Ok'\n  });\n});\n```\n\n**2. Refactor the response logic into a separate file, ping.controller.ts:**\n\n```\nexport default () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        uptime: process.uptime(),\n        message: 'Ok'\n      });\n    }, 1000);\n  });\n};\n```\n\n**3. Import and use the ping.controller.ts function in server.ts(throws error during build)**\n\n```\nimport pingResponse from './controllers/ping.controller';\n\napp.get('/api/ping', async (_req: Request, res: Response) => {\n  const resp: any = await pingResponse();\n  return res.json(resp);\n});\n\n```\n\n**4. Generate build using:**\n\n`npm run build`\n\n**5. angular.json config**\n\n```\n\"server\": \"src/main.server.ts\",\n\"outputMode\": \"server\",\n\"ssr\": {\n  \"entry\": \"src/server.ts\"\n}\n\n```\nI cannot move all the functions internally as all my routes rely on repository-based database queries, which are modular and imported from separate files. How to resolve this issue and ensure the Angular SSR build works with these imported functions?\n\n\n\n\n\n### Exception or Error\n\n```text\nApplication bundle generation failed. [45.846 seconds]\n\nX [ERROR] An error occurred while extracting routes.\n\nError: worker exited with code: 1\n    at Worker.<anonymous> (D:\\Web_Dev\\primematrimony.in\\webapp\\node_modules\\piscina\\dist\\index.js:193:25)\n    at Worker.emit (node:events:518:28)\n    at [kOnExit] (node:internal/worker:315:10)\n    at Worker.<computed>.onexit (node:internal/worker:229:20)\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 20.18.1\nPackage Manager: npm 10.8.3\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.0.4\n@angular/cli                    19.0.6\n@angular/fire                   18.0.1\n@angular/material               19.0.4\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29212","RelatedDescription":"Open issue \"SSR Build Error: \"An Error Occurred While Extracting Routes\"\" (#29212)"},{"Id":"2755464916","IsPullRequest":true,"CreatedAt":"2024-12-23T08:05:37","Actor":"angular-robot","Number":"29211","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29211","RelatedDescription":"Open PR \"build: lock file maintenance\" (#29211)"},{"Id":"2753788759","IsPullRequest":true,"CreatedAt":"2024-12-21T13:45:48","Actor":"angular-robot","Number":"29207","RawContent":null,"Title":"build: update github/codeql-action action to v3.28.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | minor | `v3.27.9` -> `v3.28.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.0`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.0)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.9...v3.28.0)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.28.0 - 20 Dec 2024\n\n-   Bump the minimum CodeQL bundle version to 2.15.5. [#&#8203;2655](https://redirect.github.com/github/codeql-action/pull/2655)\n-   Don't fail in the unusual case that a file is on the search path. [#&#8203;2660](https://redirect.github.com/github/codeql-action/pull/2660).\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.0/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29207","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.28.0\" (#29207)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2762232701","IsPullRequest":false,"CreatedAt":"2024-12-29T12:33:14","Actor":"jorgedacal","Number":"30248","RawContent":null,"Title":"feat(mat.*-overrides): Improve the styles overrides functions to not generate so much duplicity selectors in the css.","State":"open","Body":"### Feature Description\n\n# Explain the issue\nFollowing your documentation, when we override the style we can do the next:\n``` scss\n.SELECTOR {\n  @include mat.*-overrides((\n    TOKEN_1,\n    TOKEN_2,\n    TOKEN_3,\n    ...\n    TOKEN_n,\n  ));\n}\n```\n\nBut this is translated into css in N duplicate definitios of SELECTOR:\n``` scss\n.SELECTOR {\n    TOKEN_1_RESULT;\n}\n.SELECTOR {\n    TOKEN_2_RESULT;\n}\n.SELECTOR {\n    TOKEN_3_RESULT;\n}\n...\n.SELECTOR {\n    TOKEN_n_RESULT;\n}\n```\n\nAnd they should be filled togeteher in only one SELECTOR:\n``` scss\n.SELECTOR {\n    TOKEN_1_RESULT;\n    TOKEN_2_RESULT;\n    TOKEN_3_RESULT;\n    TOKEN_n_RESULT;\n}\n```\n\n## Example with button\nFor example to override the button style we can do the next:\n``` scss\n@use '@angular/material' as mat;\n\n:root {\n  @include mat.button-overrides((\n    filled-container-color: orange,\n    filled-label-text-color: red,\n  ));\n}\n```\n\nBut this is translated into css in two duplicate definitios of :root\n``` scss\n:root {\n  --mdc-filled-button-container-color: orange;\n}\n:root {\n  --mdc-filled-button-label-text-color: red;\n}\n```\n\nAnd they should be filled togeteher:\n``` scss\n:root {\n  --mdc-filled-button-container-color: orange;\n  --mdc-filled-button-label-text-color: red;\n}\n```\n# Explanation of why this should be improved\nIf we edit a lot of things it generate a lot of unnecessary verbiage that is unefficiency and cause greatly hinders debugging during develmpment.\n\nFor example, if we edit 100 Selectors and modify 20 tokens in each one, we have at the end 20 duplicate definitions per each selector that is a total of 2000 selector definitions with one line each instead of 100 selector definitions with 20 lines each.\n\nLogically this makes the final css inefficient as it has many selectors to check, in this case 2000 instead of 100.\n\n\n# Thanks\nThank you very much for your great work. I hope you correct this, and if there is already a way to avoid these duplicities please let me know and you should add it to the official documentation.\n\n\n\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30248","RelatedDescription":"Open issue \"feat(mat.*-overrides): Improve the styles overrides functions to not generate so much duplicity selectors in the css.\" (#30248)"},{"Id":"2762169463","IsPullRequest":true,"CreatedAt":"2024-12-29T09:12:19","Actor":"crisbeto","Number":"30247","RawContent":null,"Title":"fix(material/datepicker): simplify DI setup","State":"open","Body":"Previously we had to define an injection token for the `MatDateRangeInput` in order to avoid circular references. Now we can do the same with a type-only imports so we can simplify the setup.\r\n\r\nFixes #30238.","Url":"https://github.com/angular/components/pull/30247","RelatedDescription":"Open PR \"fix(material/datepicker): simplify DI setup\" (#30247)"},{"Id":"2762160859","IsPullRequest":false,"CreatedAt":"2024-12-29T08:41:54","Actor":"json-derulo","Number":"30246","RawContent":null,"Title":"docs-bug(multiple): are color variants still supported?","State":"open","Body":"### Documentation Feedback\n\nIn v18, there used to be a section in the theming guide about creating custom color variants: https://v18.material.angular.io/guide/theming#using-component-color-variants\n\nIn v19, this section is gone. The problem is that in various component's API docs, such as button, there is still a link to this section: https://material.angular.io/components/button/api\n\nSo is this approach still supported? If yes, please bring back the section to the theming guide so the links work again. If not, please remove the link and guide to an alternative solution.\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming#using-component-color-variants","Url":"https://github.com/angular/components/issues/30246","RelatedDescription":"Open issue \"docs-bug(multiple): are color variants still supported?\" (#30246)"},{"Id":"2758219009","IsPullRequest":false,"CreatedAt":"2024-12-29T06:38:09","Actor":"tommyc38","Number":"30233","RawContent":null,"Title":"feat(dialog,menu): add input flag to display in a bottom sheet style and animation","State":"closed","Body":"### Feature Description\n\nMaybe I am missing something but I have never understood why the Bottom Sheet component exists and why this isn't a flag for a Dialog or Menu?  It would be WAY more consumable to simply throw a flag on a Menu or Dialog that displays the contents in the same style as the Bottom Sheet component does.\n\n### Use Case\n\nThe use case behind Bottom Sheet is for a mobile friendly view for dialogs and menus. Right now, you basically needto manage a Dialog/Menu component AND a Bottom Sheet component with the same content to give a streamlined web vs mobile experience.  Rather than managing a Bottom Sheet component, it would be far more intuitive, require less boilerplate, and reduce duplication to simply have a flag that determines how the Dialog/Menu should be displayed.  It should handle nested menus such that a new \"Bottom Sheet\" pages over the parent sheet with back arrows, etc.    ","Url":"https://github.com/angular/components/issues/30233","RelatedDescription":"Closed issue \"feat(dialog,menu): add input flag to display in a bottom sheet style and animation\" (#30233)"},{"Id":"2761287047","IsPullRequest":false,"CreatedAt":"2024-12-29T05:48:39","Actor":"ViVer-7","Number":"30243","RawContent":null,"Title":"bug(MatTabModule): Loading many formcontrols on 2nd, 3rd, etc tab (not 1st) will result in \"Error: Could not find identifiable element\"","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy app uses the MatTabModule, with currently 5 tabs.\nUsing form controls on tab1 is working like expected, but on any other tab, it throws an error.\nAt least, when using A LOT of controls (like 100).\n\n### Reproduction\n\nSteps to reproduce:\n\nHTML:\n```\n<mat-tab-group>\n    <mat-tab label=\"Tab1\">\n        Some Content Tab1\n    </mat-tab>\n    <mat-tab label=\"Tab2\">\n\n        @for (i of [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]; track $index) {\n            <div [formGroup]=\"form\">\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n                <input matInput>\n            </div>                \n        }    \n    </mat-tab>\n</mat-tab-group>\n```\n\nWhenever I lower the number of loops....there is no error....\n\n### Expected Behavior\n\nExpected result is to be able to use as many controls as I want, without throwing an error...\n\n### Actual Behavior\n\nTab and Form is loaded as expected, but throwing an error, see attached screenshot.\n![Image](https://github.com/user-attachments/assets/8a56c962-c1b6-4b6f-bc10-e396cca9d026)\n\n\n### Environment\n\n- Angular: ~19.0.0\n- Angular Material: ~19.0.4\n- Browser(s): Chrome (latest)\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/30243","RelatedDescription":"Closed issue \"bug(MatTabModule): Loading many formcontrols on 2nd, 3rd, etc tab (not 1st) will result in \"Error: Could not find identifiable element\"\" (#30243)"},{"Id":"2761662830","IsPullRequest":false,"CreatedAt":"2024-12-28T10:26:22","Actor":"Malinxwski","Number":"30245","RawContent":null,"Title":"bug(CdkVirtualScrollViewport): \"CdkVirtualScrollViewport is already attached\" error appears when using nested virtual scroll","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.0\n\n### Description\n\n\"CdkVirtualScrollViewport is already attached\" error appears when using virtual scroll inside another virtual scroll.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-hrzgjwqz?file=src%2Fmain.ts\nSteps to reproduce:\n1. Focus on input field (autocomplete component)\n2. Check console to see the error\n\n\n### Expected Behavior\n\nCdkVirtualScrollViewports do not conflict with each other when nested virtual scroll is used.\n\n### Actual Behavior\n\nNested virtual scroll not working.\n\n### Environment\n\nAngular CLI: 18.2.12\nNode: 22.0.0\nPackage Manager: npm 10.5.1\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cdk                    18.2.14\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n\nBrowser: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 YaBrowser/24.10.0.0 Safari/537.36\n","Url":"https://github.com/angular/components/issues/30245","RelatedDescription":"Open issue \"bug(CdkVirtualScrollViewport): \"CdkVirtualScrollViewport is already attached\" error appears when using nested virtual scroll\" (#30245)"},{"Id":"2761634969","IsPullRequest":false,"CreatedAt":"2024-12-28T08:49:25","Actor":"ahimik","Number":"30244","RawContent":null,"Title":"feat(all theming): Clean and reusable way to override all components theme colors","State":"open","Body":"### Feature Description\n\nCurrently, there is a way to generate a custom color palette using the generation tool. However, all components appear too dark regardless of the target color, and there is no single-line solution to specify a base color tone for all components since `--mat-sys-primary` is hardcoded to the tone value `40` by the theme mixin.\n\nUnfortunately, with Material v19, picking colors from the theme no longer works. You can still specify a material theme using `$app-theme: mat.define-theme(...)` with some restrictions, but applying it using the new mixin `@include mat.theme($app-theme)` doesn't work.\n\n**So please provide clean and simple solution to:**\n\n**1. Specify and reuse a theme object**\nFor example:\n```scss\n// Define theme object\n$app_theme: mat.define-theme((\n color: (primary: $primary-palette), \n...\n)); // Like it was in Material 18\n\n// then use this theme object to apply theme or get theme color:\n@include mat.theme($app-theme);\n$theme-color: mat.get-theme-color($app-theme, primary, 70);\n\n```\n**2. Specify a base color tone for all components at once**\nFor example:\n```scss\n  @include mat.theme((\n    color: (\n      theme-type: light,\n      primary: themes.$app-theme-palette, // Generated color palette\n      primary-color-tone: 70 // Here we specify which tone level to pick from color palette for --mat-sys-primary color\n      ...\n    )\n  ));\n```\n**_or as an alternative_** output all theme-palette tones as css variables, so we can easily reuse them to customize theme and component colors:\n```scss\n  @include mat.theme-overrides((\n    primary: var(--mat-sys-primary-70),\n    on-primary: var(--mat-sys-primary-100)\n  ));\n\n  @include mat.autocomplete-overrides((\n    background-color: var(--mat-sys-primary-80); // or any other custom color\n  ));\n\n```\n\n**3. Specify a base color for a specific component (single-line override)**\nFor example:\n```scss\n  @include mat.autocomplete-overrides((\n    base-color: mat.get-theme-color($theme, primary, 30); // or any other custom color\n  ));\n```\n","Url":"https://github.com/angular/components/issues/30244","RelatedDescription":"Open issue \"feat(all theming): Clean and reusable way to override all components theme colors\" (#30244)"},{"Id":"2752361306","IsPullRequest":false,"CreatedAt":"2024-12-27T19:01:35","Actor":"RafalSzczuka","Number":"30223","RawContent":null,"Title":"bug(Timepicker): timepicker control error state too early","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nTimepicker dropdown marks touched state differently than regular select dropdown or datepicker select. It displays an error state too early - just after dropdown time option click. It marks control as invalid for just a blink of a second and then it's valid again. It's unexpected behavior.\nAlso - when I subscribe to `statusChanges` stream - timepicker control starts with initial value. It's not how other form controls behave - other controls emits status change.\nI'm using the default `ErrorStateMatcher` and `Validators.required` validator.\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/6sygygc8-fabhxjua](url)\nSteps to reproduce:\n1. Click on timepicker input\n2. Click (and hold) any option\n3. See that input is marked as invalid (error border)\n4. Release mouse click - error goes away\n\n\n### Expected Behavior\n\nIt should mark input error state the same way as it works for other material form controls\n\n### Actual Behavior\n\nIt's marking an error state too early, even if a valid option is selected.\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30223","RelatedDescription":"Closed issue \"bug(Timepicker): timepicker control error state too early\" (#30223)"},{"Id":"2755453289","IsPullRequest":true,"CreatedAt":"2024-12-27T19:01:34","Actor":"crisbeto","Number":"30228","RawContent":null,"Title":"fix(material/timepicker): don't mark as touched when blurred while dropdown is open","State":"closed","Body":"Fixes that the timepicker was marking itself as touched too early when clicking on an item in the dropdown.\r\n\r\nFixes #30223.","Url":"https://github.com/angular/components/pull/30228","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): don't mark as touched when blurred while dropdown is open\" (#30228)"},{"Id":"2758619023","IsPullRequest":true,"CreatedAt":"2024-12-27T19:01:18","Actor":"crisbeto","Number":"30234","RawContent":null,"Title":"fix(cdk/menu): not responding to position changes","State":"closed","Body":"Fixes that the CDK menu wasn't updating its position strategy after the first open.\r\n\r\nFixes #30145.","Url":"https://github.com/angular/components/pull/30234","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): not responding to position changes\" (#30234)"},{"Id":"2753878827","IsPullRequest":true,"CreatedAt":"2024-12-27T18:59:59","Actor":"crisbeto","Number":"30226","RawContent":null,"Title":"fix(cdk/tree): expandAll not expanding all nodes","State":"closed","Body":"Fixes that the tree wasn't recursing down and expanding all child nodes when calling `expandAll`.\r\n\r\nFixes #29865.","Url":"https://github.com/angular/components/pull/30226","RelatedDescription":"Closed or merged PR \"fix(cdk/tree): expandAll not expanding all nodes\" (#30226)"},{"Id":"2761159316","IsPullRequest":true,"CreatedAt":"2024-12-27T18:19:54","Actor":"kseamon","Number":"30242","RawContent":null,"Title":"perf(cdk/table): Use afterNextRender for sticky styling. Fixes a perf…","State":"open","Body":"…ormance regression dating back to #28393 and removes need for coalesced sticky styler.","Url":"https://github.com/angular/components/pull/30242","RelatedDescription":"Open PR \"perf(cdk/table): Use afterNextRender for sticky styling. Fixes a perf…\" (#30242)"},{"Id":"2760658468","IsPullRequest":false,"CreatedAt":"2024-12-27T09:48:45","Actor":"martinboue","Number":"30241","RawContent":null,"Title":"feat(all): Mixins for changing component color","State":"open","Body":"### Feature Description\n\n## What I want\nTo easily change the color of a material component.\n\n## Context\nIt is a very common use case to change a material component default color, and migrating from v18 to v19 this was a pain point for me.\n\nBefore in v18, I could change the component color to one in my theme palette like this:\n```\n@include mat.chips-color(theme.$theme, $color-variant: tertiary);\n```\n\nAnd now in v19, I need to specify every tokens:\n```\n@include mat.chips-overrides((\n   elevated-selected-container-color: map.get(theme.$palettes, tertiary, 90),\n   selected-label-text-color: map.get(theme.$palettes, tertiary, 10),\n   selected-trailing-icon-color: map.get(theme.$palettes, tertiary, 10),\n   selected-hover-state-layer-color: map.get(theme.$palettes, tertiary, 10),\n   selected-trailing-action-state-layer-color: map.get(theme.$palettes, tertiary, 10),\n   selected-focus-state-layer-color: map.get(theme.$palettes, tertiary, 10),\n   with-icon-selected-icon-color: map.get(theme.$palettes, tertiary, 10)\n));\n```\nIt's much more complicated now, and if we want to keep the same level of contrast (here tones 10 and 90) we have to inspect the generated code and find the equivalent in the new color.\n\n## Proposed solution\nIn v18 we had to pick a color from our theme, which wasn't very flexible. An ideal solution would be:\n```\n@include mat.chips-color(#FF0000); // <== We could pass any color here and the mixin would compute the tones\n```\n\nIf not doable, then the same behavior as v18 would be good enough:\n```\n@include mat.chips-color(theme.$palettes, tertiary);\n// or\n$tertiary-palette: map.get(theme.$palettes, tertiary);\n@include mat.chips-color($tertiary-palette);\n```\n\nThere should be one `mat.<component>-color` mixin for each material component.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30241","RelatedDescription":"Open issue \"feat(all): Mixins for changing component color\" (#30241)"},{"Id":"2760624124","IsPullRequest":false,"CreatedAt":"2024-12-27T09:15:39","Actor":"martinboue","Number":"30240","RawContent":null,"Title":"docs-bug(all): Add doc for mixins","State":"open","Body":"### Documentation Feedback\n\nAdd documentation for all the mixins and explain what they are used for and what the parameters are. This includes: \n- Component mixins (examples: mat.button-theme, mat.button-color, mat.button-typography, mat.button-density, ...). I think this should be documented under the new styling tab on each component page. For now, there is only the new `overrides` mixin.\n- Global mixins (examples: mat.get-theme-color, mat.define-theme, mat.core, mat.theme, mat.elevation-classes, mat.app-background, ...).\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/categories","Url":"https://github.com/angular/components/issues/30240","RelatedDescription":"Open issue \"docs-bug(all): Add doc for mixins\" (#30240)"},{"Id":"2760266033","IsPullRequest":false,"CreatedAt":"2024-12-27T01:08:21","Actor":"yuwu9145","Number":"30239","RawContent":null,"Title":"bug(drag-drop): cdkDropListSortPredicate doesn't work if dragging item enter from top","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`cdkDropListSortPredicate` doesn't work in certain senarios\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/z6ffpx7e-wg8uidxw?file=src%2Fexample%2Fcdk-drag-drop-connected-sorting-group-example.html\nSteps to reproduce:\n1. Open StackBlitz reproduction link\n2. The code has `cdkDropListSortPredicate` applied to \"Done\" dropzone, the intention is preventing item being dragged to the first index\n3. Drag item from \"To do\" zone and enter \"Done\" zone from top\n\n\n![Image](https://github.com/user-attachments/assets/637185b0-c963-4314-ac5b-6fd9d58d2aa8)\n\n\n\n### Expected Behavior\n\nItem cannot be dragged & dropped to the first index in \"Done\"\n\n### Actual Behavior\n\nItem can be dragged & dropped to the first index in \"Done\"\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30239","RelatedDescription":"Open issue \"bug(drag-drop): cdkDropListSortPredicate doesn't work if dragging item enter from top\" (#30239)"},{"Id":"2760026320","IsPullRequest":false,"CreatedAt":"2024-12-26T18:16:55","Actor":"albahrawy","Number":"30238","RawContent":null,"Title":"feat(MatDateRangeInput): export MAT_DATE_RANGE_INPUT_PARENT with DatePicker Module","State":"open","Body":"### Feature Description\n\nI'm trying to extend MatDateRangeInput component and I wanna provide **MAT_DATE_RANGE_INPUT_PARENT** to use my extended class instead,\nthe issue here is the **MAT_DATE_RANGE_INPUT_PARENT** is not exported with DatePicker Module, is the any chance to export it so it wll be easy to use it. \n\nThanks\n\n### Use Case\n\nimport {MAT_DATE_RANGE_INPUT_PARENT , MatDateRangeInput} from '@angular/material/datepicker';\n**// MAT_DATE_RANGE_INPUT_PARENT  is not exported from datepicker**\n\n@Component({\n    providers: [\n        { provide: MAT_DATE_RANGE_INPUT_PARENT , useExisting: CSDateRangeInput },\n    ],\n})\nexport class CSDateRangeInput<D> extends MatDateRangeInput<D>{}","Url":"https://github.com/angular/components/issues/30238","RelatedDescription":"Open issue \"feat(MatDateRangeInput): export MAT_DATE_RANGE_INPUT_PARENT with DatePicker Module\" (#30238)"},{"Id":"2759927802","IsPullRequest":true,"CreatedAt":"2024-12-26T16:13:53","Actor":"crisbeto","Number":"30237","RawContent":null,"Title":"docs(cdk/overlay): keep state in sync in example","State":"open","Body":"Updates the overlay example to ensure that the state of the `isOpen` flag reflects the state of the overlay.\r\n\r\nFixes #30185.","Url":"https://github.com/angular/components/pull/30237","RelatedDescription":"Open PR \"docs(cdk/overlay): keep state in sync in example\" (#30237)"},{"Id":"2759841264","IsPullRequest":false,"CreatedAt":"2024-12-26T14:34:36","Actor":"shhdharmen","Number":"30236","RawContent":null,"Title":"bug(theming): There is no way to read density scale from theme","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nIn Angular Material 18, developers could use Angular Material's theme's density scale, so that their custom components aligns with other Angular Material components.\n\nIn v18, developers could use `mat.get-theme-density($theme);` to get the scale. [Link to docs](https://v18.material.angular.io/guide/theming-your-components#reading-the-density-scale).\n\nIn v19, it's not clear how to get density scale from theme.\n\n### Reproduction\n\nNot needed.\n\n### Expected Behavior\n\nDevelopers should be able to read density scale in Angular Material 19.\n\n### Actual Behavior\n\nDevelopers are not able to read density scale in Angular Material 19.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30236","RelatedDescription":"Open issue \"bug(theming): There is no way to read density scale from theme\" (#30236)"},{"Id":"2759628076","IsPullRequest":true,"CreatedAt":"2024-12-26T10:59:22","Actor":"crisbeto","Number":"30235","RawContent":null,"Title":"fix(material/sidenav): switch away from animations module","State":"open","Body":"Reworks the sidenav to animate using CSS, rather than the animations module. This requires less JavaScript, is simpler to maintain and avoids some memory leaks caused by the animations module.","Url":"https://github.com/angular/components/pull/30235","RelatedDescription":"Open PR \"fix(material/sidenav): switch away from animations module\" (#30235)"},{"Id":"2757666771","IsPullRequest":false,"CreatedAt":"2024-12-26T08:37:27","Actor":"Th3N3tRunn3r","Number":"30231","RawContent":null,"Title":"bug(pre-built themes): Some pre-built themes do not compile properly.","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nI am currently facing a problem with some of the prebuilt themes not compiling correctly.\n\nI can see when I go into the theme css files listed below they are missing a number of CSS properties. To try and remedy this I have attempting installing and reinstalling angular materials 19.0.4. I have also installed an earlier version, v18, and this issue is not present.\n\nazure-blue.css\ncyan-orange.css\nmagenta-violet.css\nrose-red.css\n\n### Reproduction\n\nSteps to reproduce:\n1. Install angular materials v19.0.4\n2. Select azure-blue as your pre-built theme.\n3. Create a toolbar with the color attr set to accent.\n4. Update your styles.scss file to import '@angular/material/prebuilt-themes/indigo-pink.css'\n5. Restart ng serve if required.\n6. The toolbar should now be pink.\n\n### Expected Behavior\n\nWhen creating a toolbar with the attr color=\"accent\" the bar should be blue.\n\n### Actual Behavior\n\nWhen creating a toolbar with the attr color=\"accent\" the bar does not have a color style applied to it at all.\n\n### Environment\n\n- Angular: @angular/cli@19.0.6\n- CDK/Material: @angular/cdk@19.0.4 / @angular/material@19.0.4\n- Browser(s): Edge / Chrome \n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\n","Url":"https://github.com/angular/components/issues/30231","RelatedDescription":"Closed issue \"bug(pre-built themes): Some pre-built themes do not compile properly.\" (#30231)"},{"Id":"2757828189","IsPullRequest":false,"CreatedAt":"2024-12-24T19:17:13","Actor":"PoojaM29","Number":"30232","RawContent":null,"Title":"Drag drop with angular material table giving lots of error","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nV18\n\n### Description\n\nI am having my common table component in that using <table> tag for table creation but angular 19 not supporting this tag while using drag and drop feature.\nGetting error like invalid dom structure for droplist. All items must be placed directly inside of the element container.\n<table mat-table > </table>\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\n<table> tag should support in drag and drop\n\n### Actual Behavior\n\nTable tag not getting support for drag and drag in angular material 19\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30232","RelatedDescription":"Closed issue \"Drag drop with angular material table giving lots of error\" (#30232)"},{"Id":"2755682855","IsPullRequest":false,"CreatedAt":"2024-12-23T10:09:08","Actor":"UrzaUrza","Number":"30230","RawContent":null,"Title":"bug(spinner): Spinner not rotating around the center when inside a mat-button","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen i put a mat-spinner inside a mat-icon-button, if the diameter of the spinner is not 24px then the spinner is not rotating around the center of the circle.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/wl81aqhc?file=src%2Fexample%2Fbutton-overview-example.html\nSteps to reproduce:\n1. Run\n2. Watch\n\n\n### Expected Behavior\n\nThe spinner rotate around the center of the circle.\n\n### Actual Behavior\n\nThe spinner does not rotate around the center of the circle.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30230","RelatedDescription":"Open issue \"bug(spinner): Spinner not rotating around the center when inside a mat-button\" (#30230)"},{"Id":"2755467282","IsPullRequest":true,"CreatedAt":"2024-12-23T08:34:48","Actor":"crisbeto","Number":"30229","RawContent":null,"Title":"build: add missing dependency","State":"closed","Body":"Fixes a missing dependency that's breaking the build.","Url":"https://github.com/angular/components/pull/30229","RelatedDescription":"Closed or merged PR \"build: add missing dependency\" (#30229)"},{"Id":"2752273550","IsPullRequest":false,"CreatedAt":"2024-12-23T08:03:03","Actor":"GuidoHermans","Number":"30222","RawContent":null,"Title":"bug(CDK/Menu): MenuItems as Content projection loos keyboard actions","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWe are incorporating the CDK Menu in our app.\nWith use of content projection we try to extract the cdk references to a 'dropdown component', so the developer doesn't need to know of the CDK.\n\nWhen we use content projection, it looks like the cdkMenuItemDirective is not completely activating the keyboard gestures.\nWithout content projection everything works (as expected)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ybcawwsc?\nSteps to reproduce:\n1. Klik on the site\n2. Use Tab to active the main button\n3. Use arrow keys to navigate to the submenu\n4. See that Test 1 & Test 2 are not navigateble and Test 3 and Test 4 are.\n\n\n### Expected Behavior\n\nTest 1 and Test 2 should be navigatable with keyboard.\n\n### Actual Behavior\n\nNo keyboard navigation on content projected in the `<ng-template></ng-template>`\n\n### Environment\n\n```\nAngular CLI: 19.0.5\nNode: 20.17.0\nPackage Manager: npm 8.19.2\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.5\n@angular-devkit/build-angular   19.0.5\n@angular-devkit/core            19.0.5\n@angular-devkit/schematics      19.0.5\n@angular/cli                    19.0.5\n@schematics/angular             19.0.5\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```","Url":"https://github.com/angular/components/issues/30222","RelatedDescription":"Closed issue \"bug(CDK/Menu): MenuItems as Content projection loos keyboard actions\" (#30222)"},{"Id":"2754878197","IsPullRequest":true,"CreatedAt":"2024-12-23T07:54:41","Actor":"robertIsaac","Number":"30227","RawContent":null,"Title":"docs(material/sidenav): improve responsive example","State":"closed","Body":"improvements:\r\n- use signal instead of manually detect changes\r\n- add access modifier to the class properties\r\n- add missing import of routerLink\r\n- replace deprecated add/removeListener with add/removeEventListener","Url":"https://github.com/angular/components/pull/30227","RelatedDescription":"Closed or merged PR \"docs(material/sidenav): improve responsive example\" (#30227)"},{"Id":"2753598549","IsPullRequest":false,"CreatedAt":"2024-12-21T10:27:38","Actor":"wsacha","Number":"30225","RawContent":null,"Title":"bug(MatDatepicker): Overriding MatDatepickerIntl texts","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello, I'd like to override the closeCalendarLabel for all places in the application where the Material Datepicker is used.\nAccording to the documentation: https://material.angular.io/components/datepicker/overview#localizing-labels-and-messages,\nI've provided my values, but it doesn't seem to work. The new texts are applied only if I provide a custom MatDatepickerIntl in the child component where the MatDatepicker is used. Am I doing something wrong that prevents me from overriding it globally?\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-6vdvpgxv?file=src%2Fmain.ts\nSteps to reproduce:\n1. Override `MatDatepickerIntl` globally  \n2. Use the material datepicker in the child component\n3. Open the datepicker and press TAB to show the close button.\n\n\n### Expected Behavior\n\nOverriding `MatDatepickerIntl` globally applies new labels to all MatDatepicker instances.\n\n### Actual Behavior\n\nOverriding `MatDatepickerIntl` globally does not applies new labels to all MatDatepicker instances.\n\n### Environment\n\n- Angular: 18\n- CDK/Material: 18\n- Browser(s): Firefox, Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, macOS\n","Url":"https://github.com/angular/components/issues/30225","RelatedDescription":"Closed issue \"bug(MatDatepicker): Overriding MatDatepickerIntl texts\" (#30225)"},{"Id":"2752870479","IsPullRequest":true,"CreatedAt":"2024-12-20T14:38:05","Actor":"giri3sg","Number":"30224","RawContent":null,"Title":"Fixed displaying external link in component-category-list.html","State":"open","Body":"Before\r\n![image](https://github.com/user-attachments/assets/07fb2ec4-57a5-474f-add2-71dd63e112d7)\r\n\r\nAfter\r\n\r\n![image](https://github.com/user-attachments/assets/1ab36f4f-094a-45a5-8be4-2825bd1da69e)","Url":"https://github.com/angular/components/pull/30224","RelatedDescription":"Open PR \"Fixed displaying external link in component-category-list.html\" (#30224)"},{"Id":"2752070966","IsPullRequest":false,"CreatedAt":"2024-12-20T06:52:52","Actor":"VILLAN3LL3","Number":"30221","RawContent":null,"Title":"bug(angular material): css variables get lost when using multiple themes in angular material","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nusing light and dark theme leads to lost styles and css variables\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-ajqpjxrh?file=src%2Fmain.ts\nSteps to reproduce:\n1. press \"change theme\".\n2. check the stylings (tool tip submit button +  click on menu button + styling of mat card header, ...)\n\n\n### Expected Behavior\n\neverything is styled properly in light or dark mode\n\n### Actual Behavior\n\nsome styles don't seem to be set correctly. See for example the menu overlay or the submit button tooltip. It seems that css variables have been lost, for example --mat-menu-container-shape.\n\n### Environment\n\n- Angular: ^18.2\n- CDK/Material: ^18.2\n- Browser(s): n/a\n- Operating System (e.g. Windows, macOS, Ubuntu): n/a\n","Url":"https://github.com/angular/components/issues/30221","RelatedDescription":"Open issue \"bug(angular material): css variables get lost when using multiple themes in angular material\" (#30221)"},{"Id":"2750955970","IsPullRequest":true,"CreatedAt":"2024-12-19T17:02:47","Actor":"angular-robot","Number":"30219","RawContent":null,"Title":"build: update angular shared dev-infra code to f0a9343","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| angular/dev-infra | action | digest | `db91da4` -> `f0a9343` |\n| dev-infra | http_archive | digest | `9bc16c6` -> `f0a9343` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS43NS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNzUuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsidGFyZ2V0OiBwYXRjaCJdfQ==-->\n","Url":"https://github.com/angular/components/pull/30219","RelatedDescription":"Open PR \"build: update angular shared dev-infra code to f0a9343\" (#30219)"},{"Id":"2750668994","IsPullRequest":true,"CreatedAt":"2024-12-19T15:28:36","Actor":"andrewseguin","Number":"30218","RawContent":null,"Title":"Sync missing commits","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30218","RelatedDescription":"Closed or merged PR \"Sync missing commits\" (#30218)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-30T03:30:02.2518268Z","RunDurationInMilliseconds":1446}