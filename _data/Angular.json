{"Data":{"Angular-Issues":{"Issues":[{"Id":"1925331936","IsPullRequest":false,"CreatedAt":"2023-10-04T03:24:42","Actor":"mhamri","Number":"52008","RawContent":null,"Title":"typescript language server can't figure out angular import structure","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nopening #40407 again\r\n\r\nSince it was mentioned that the issue was fixed after the recent changes, I'd like to point out that the problem still exists. I have attached a screen recording to demonstrate that the issue is not resolved. It is quite inconvenient to have to refer to the documentation for every required import. As previously mentioned, this issue has already been reported to the TypeScript team, and it appears to be related to the Angular export structure.\r\n\r\n## vscode - standalone HttpClient\r\ncan't get any suggestion on any `provide*` \r\n\r\n\r\nhttps://github.com/angular/angular/assets/8991783/bb4eba31-ee60-4e54-ae89-44701a778251\r\n\r\n## vscode - standalone - anything inside Material library\r\n\r\nhttps://github.com/angular/angular/assets/8991783/99bc2586-9f7f-4d7b-be5e-5d46db16485a\r\n\r\n## vscode - Module - HttpClient\r\n\r\nhttps://github.com/angular/angular/assets/8991783/7c782da4-b54b-4963-ae22-7724cce69477\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nGlobal setting: enabled\r\nLocal setting: disabled\r\nEffective status: disabled\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.4\r\nNode: 16.20.0\r\nPackage Manager: npm 8.19.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.4\r\n@angular-devkit/build-angular   16.2.4\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    16.2.4\r\n@schematics/angular             16.2.4\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52008","RelatedDescription":"Open issue \"typescript language server can't figure out angular import structure\" (#52008)"},{"Id":"1925306168","IsPullRequest":false,"CreatedAt":"2023-10-04T02:55:36","Actor":"chrisrocco","Number":"52007","RawContent":null,"Title":"Angular Signals' 'this' context usage prevents passing the .set() function","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe Signals library makes clever usage of the `this` context to avoid creating extra functions when creating new Signals.\r\n```ts\r\nsignalFn.set = signalSetFn;   // 👈 Depends on 'this'\r\n// vs\r\nsignalFn.set = signalSetFn.bind(node);\r\n// or (fastest?)\r\nsignalFn.set = signalSetFn(node);  // 👈 Returns a bound closure\r\n```\r\n\r\nThe problem is it's easy to lose the `this` context by using the function as a value.\r\n\r\n```ts\r\nconst current = signal(0);\r\ndataStream.subscribe(current.set);  // 👈 Wrong 'this' context leads to obscure errors\r\n```\r\n\r\nThis surfaces a minor trade off between performance and correctness.\r\n \r\nMicrobenchmarks suggest optimal performance would be creating a closure like so -\r\n```ts\r\nconst signalSetFn = (node) => (newValue) => ...;\r\nsignalFn.set = signalSetFn(node);  // 👈 In the factory function\r\n```\r\n^ https://measurethat.net/Benchmarks/Show/1328/0/bind-vs-closure-declaration\r\n\r\nThat's what I'd propose.\r\n\r\nAlternatively, we should at least add a descriptive error message since this will come up a lot.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52007","RelatedDescription":"Open issue \"Angular Signals' 'this' context usage prevents passing the .set() function\" (#52007)"},{"Id":"1922090662","IsPullRequest":true,"CreatedAt":"2023-10-04T02:40:41","Actor":"pkozlowski-opensource","Number":"51980","RawContent":null,"Title":"List reconciliation","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51980","RelatedDescription":"Closed or merged PR \"List reconciliation\" (#51980)"},{"Id":"1925200315","IsPullRequest":true,"CreatedAt":"2023-10-04T01:01:06","Actor":"jelbourn","Number":"52006","RawContent":null,"Title":"feat(compiler): extract api docs for interfaces","State":"open","Body":"This adds API doc extraction for interfaces, largely using the same code paths for classes. The primary difference between classes and interfaces is that classes have member _declarations_ while interfaces have member _signatures_. This largely doesn't matter for the purposes of extraction, but the types are distinct with no common base types, so we have to do a fair amount of type unioning and aliasing.","Url":"https://github.com/angular/angular/pull/52006","RelatedDescription":"Open PR \"feat(compiler): extract api docs for interfaces\" (#52006)"},{"Id":"1925070423","IsPullRequest":true,"CreatedAt":"2023-10-03T22:52:29","Actor":"JeanMeche","Number":"52005","RawContent":null,"Title":"refactor(core): migration schematic for `provideClientHydration`","State":"open","Body":"This PR is based on #51872\r\n\r\n`provideClientHydration` has a breaking change for v17.  The `HydrationFeature` arguments have been replaced by an object. \r\n\r\nThis schematic handle the migration to remove `withNoDomReuse()`/`withNoHttpTransferCache()` and replaces them by their corresponding object key. \r\n","Url":"https://github.com/angular/angular/pull/52005","RelatedDescription":"Open PR \"refactor(core): migration schematic for `provideClientHydration`\" (#52005)"},{"Id":"1923505652","IsPullRequest":true,"CreatedAt":"2023-10-03T22:26:11","Actor":"crisbeto","Number":"51994","RawContent":null,"Title":"feat(core): enable block syntax","State":"closed","Body":"Enables the new `@` block syntax by default by removing the `enabledBlockTypes` flags. There are still some internal flags that allow special use cases to opt out of the block syntax, like during XML parsing and when compiling older libraries (see #51979).","Url":"https://github.com/angular/angular/pull/51994","RelatedDescription":"Closed or merged PR \"feat(core): enable block syntax\" (#51994)"},{"Id":"1924865868","IsPullRequest":true,"CreatedAt":"2023-10-03T20:09:21","Actor":"atcastle","Number":"52004","RawContent":null,"Title":"feat(common): upgrade warning to logged error for lazy-loaded LCP images","State":"open","Body":"This PR upgrades the existing warning when an NgOptimizedImage is discovered to be the LCP element and not given the `priority` attribute to an error. Not using `priority` causes the LCP image to be lazy-loaded and can significantly hurt image performance. This error is only logged in dev.\r\n\r\nThis PR is a pared-back version of https://github.com/angular/angular/pull/51748. As this error is logged, not thrown, it is no longer a breaking change and does not require the functionality to turn the error off in testbed scenarios. CC: @AndrewKushnir ","Url":"https://github.com/angular/angular/pull/52004","RelatedDescription":"Open PR \"feat(common): upgrade warning to logged error for lazy-loaded LCP images\" (#52004)"},{"Id":"1924858768","IsPullRequest":true,"CreatedAt":"2023-10-03T20:04:07","Actor":"Nicoss54","Number":"52003","RawContent":null,"Title":"docs(): add Nicolas Frizzarin to GDE resources","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52003","RelatedDescription":"Open PR \"docs(): add Nicolas Frizzarin to GDE resources\" (#52003)"},{"Id":"1924736660","IsPullRequest":true,"CreatedAt":"2023-10-03T18:54:37","Actor":"atscott","Number":"52002","RawContent":null,"Title":"feat(router): Add callback to execute when a view transition is created","State":"open","Body":"This commit adds the ability to provide a function that will get called immediately after the view transition is created. This will allow developers to do things like add/remove classes from the DOM when the transition animation is finished, skip the transition based on application conditions, etc. Having access to the transition unlocks just about every example outlined in https://developer.chrome.com/docs/web-platform/view-transitions.\r\n\r\nNote that the timing of the `updateCallback` execution is in the spec as being called asyncronously (https://drafts.csswg.org/css-view-transitions-1/#callbackdef-updatecallback). This means the `onViewTransitionCreated` callback is guaranteed to execute before the update callback which in turn means it is guaranteed to execute before the view transition `ready`/animation. As a result, it is safe/effictive to add classes to the document in the `onViewTransitionCreated` function in order to control animations of that transition and then remove those classes in the transition's `finished` `Promise`. The animation also doesn't start until the `Promise` returned by `updateCallback` resolves, so this would also guarantee that the animation starts asynchronously.\r\n\r\nresolves #51827\r\n","Url":"https://github.com/angular/angular/pull/52002","RelatedDescription":"Open PR \"feat(router): Add callback to execute when a view transition is created\" (#52002)"},{"Id":"1921762561","IsPullRequest":true,"CreatedAt":"2023-10-03T18:48:19","Actor":"crisbeto","Number":"51979","RawContent":null,"Title":"Linker fixes to handle @ syntax","State":"closed","Body":"Includes some fixes in the linker to parse blocks for libraries compiled with v17 or above and to enable block parsing through the linker. Split into the following commits:\r\n\r\n### fix(compiler): enable block syntax in the linker\r\nAdds some logic to enable parsing of block syntax in the linker. Note that the syntax is only enabled on code compiled with Angular v17 or later.\r\n\r\n### fix(compiler): update the minVersion if component uses block syntax\r\nIncreases the `minVersion` of component declarations that use blocks to v17 in order to indicate to users that they need to update if the library they're using is on the new syntax, while preserving backwards compatibility for libraries that do not use the syntax.","Url":"https://github.com/angular/angular/pull/51979","RelatedDescription":"Closed or merged PR \"Linker fixes to handle @ syntax\" (#51979)"},{"Id":"1924607063","IsPullRequest":true,"CreatedAt":"2023-10-03T17:28:37","Actor":"dylhunn","Number":"52001","RawContent":null,"Title":"Template Pipeline: implement `for` control flow blocks","State":"open","Body":"WIP.","Url":"https://github.com/angular/angular/pull/52001","RelatedDescription":"Open PR \"Template Pipeline: implement `for` control flow blocks\" (#52001)"},{"Id":"1924466878","IsPullRequest":true,"CreatedAt":"2023-10-03T16:05:57","Actor":"angular-robot","Number":"52000","RawContent":null,"Title":"build: update slackapi/slack-github-action digest to e505fb8","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| slackapi/slack-github-action | action | digest | `e28cf16` -> `e505fb8` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zLjEiLCJ1cGRhdGVkSW5WZXIiOiIzNy4zLjEiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular/pull/52000","RelatedDescription":"Open PR \"build: update slackapi/slack-github-action digest to e505fb8\" (#52000)"},{"Id":"1924415485","IsPullRequest":true,"CreatedAt":"2023-10-03T15:37:52","Actor":"JeanMeche","Number":"51999","RawContent":null,"Title":"refactor(http): create an `InjectionToken` for a global `HttpBackend`","State":"open","Body":"`withHttp` provides the new `PRIMARY_HTTP_BACKEND` token with `FetchBackend` to use it globally.\r\n\r\nThis will prevent the `HttpBackend` to be overridden with `HttpXhrBackend` if `provideHttpClient()` is called multiple times ","Url":"https://github.com/angular/angular/pull/51999","RelatedDescription":"Open PR \"refactor(http): create an `InjectionToken` for a global `HttpBackend`\" (#51999)"},{"Id":"1923617487","IsPullRequest":true,"CreatedAt":"2023-10-03T15:08:14","Actor":"alan-agius4","Number":"51996","RawContent":null,"Title":"Cross repo angular dependencies","State":"closed","Body":"Supersedes https://github.com/angular/angular/pull/51871","Url":"https://github.com/angular/angular/pull/51996","RelatedDescription":"Closed or merged PR \"Cross repo angular dependencies\" (#51996)"},{"Id":"1924322131","IsPullRequest":true,"CreatedAt":"2023-10-03T14:50:22","Actor":"JeanMeche","Number":"51998","RawContent":null,"Title":"refactor(http): create an `InjectionToken` for a global `HttpBackend`","State":"closed","Body":"`withHttp` provides the new `PRIMARY_HTTP_BACKEND` token with `FetchBackend` to use it globally.","Url":"https://github.com/angular/angular/pull/51998","RelatedDescription":"Closed or merged PR \"refactor(http): create an `InjectionToken` for a global `HttpBackend`\" (#51998)"},{"Id":"1922980015","IsPullRequest":true,"CreatedAt":"2023-10-03T14:48:20","Actor":"AndrewKushnir","Number":"51990","RawContent":null,"Title":"build: update domino digest to latest","State":"closed","Body":"This commit updates the hash of the Domino fork to the latest.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Build related changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51990","RelatedDescription":"Closed or merged PR \"build: update domino digest to latest\" (#51990)"},{"Id":"1923761236","IsPullRequest":true,"CreatedAt":"2023-10-03T09:56:15","Actor":"crisbeto","Number":"51997","RawContent":null,"Title":"fix(compiler): allow nullable values in for loop block","State":"open","Body":"Updates the TCB for `@for` loop blocks to allow nullable values. The runtime already supports it and this makes it easier to switch from `NgFor`.\r\n\r\nFixes #51993.","Url":"https://github.com/angular/angular/pull/51997","RelatedDescription":"Open PR \"fix(compiler): allow nullable values in for loop block\" (#51997)"},{"Id":"1923507513","IsPullRequest":false,"CreatedAt":"2023-10-03T07:37:45","Actor":"ssaso","Number":"51995","RawContent":null,"Title":"Parent form only updates with patchValue and setValue if I am in debugging mode. (or sometimes it does, sometimes not)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSo I have this autocomplete:\r\n(This is in children component) \r\n```\r\n<mat-autocomplete #auto=\"matAutocomplete\">\r\n\t<mat-option\r\n\t\t**(onSelectionChange)=\"addChosenOptionToResult(resultInput, $event, i)\"**\r\n\t\t*ngFor=\"let option of autocompleteOptions$[i] | async\"\r\n\t\t[value]=\"option\"> {{ option }}\r\n\t</mat-option>\r\n</mat-autocomplete>\r\n```\r\nAnd onSelectionChange I call this function:\r\n\r\n```\r\n\taddChosenOptionToResult(inputElement: HTMLInputElement, event: MatOptionSelectionChange, index: number): void {\r\n               const selectedOption = event.source.value; //let's say selectedOption is 'X'\r\n               // >> Here goes some code where I apply my logic to inputValue which is not important for our scenario, so let's just set it as a normal string for our need <<\r\n\r\n               const inputValue = 'test' + selectedOption;\r\n\t\tconst control = this.transactionForm[index].get('result') as FormControl;\r\n\t\tcontrol.setValue(inputValue); \r\n\t\tconsole.log(control.value); //testX is printed\r\n\t\tconsole.log(this.parentFormGroup.value.transactions[0].result);  //testX is printed\r\n\r\n\t\t//Added this also to 'try' but still doesn't work\r\n\t\tcontrol.updateValueAndValidity();\r\n\t\t// Also tried different approach like this one for example\r\n\t\t// const control = this.transactionForm[index];\r\n\t\t// control.setValue({ result: inputValue });\r\n\r\n}\r\n```\r\n\r\nAnd then when I click save and access the form from my parent component:\r\n`\t\t\tconsole.log(this.formGroup.controls.transactions.value[0]['result']); //**X** is printed  (THE BUG)\r\n`\r\nAnd the strange thing is when I debug this then it works fine (testX is printed). And also sometimes it is OK, sometimes not.  \r\nIt is very strange and I have no idea what can be the problem.\r\nPlease help! :D\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nIf the  value accessing from the parent this.formGroup.controls.transactions.value[0]['result']) == testX\r\nthen is OK,\r\n\r\nif it is only X then it is not OK, which event.source.value; //let's say selectedOption is 'X'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.4\r\nNode: 18.16.1\r\nPackage Manager: npm 9.6.0\r\nOS: win32 x64\r\n\r\nAngular: 16.1.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.4\r\n@angular-devkit/build-angular   16.1.4\r\n@angular-devkit/core            16.1.4\r\n@angular-devkit/schematics      16.1.4\r\n@schematics/angular             16.1.4\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51995","RelatedDescription":"Open issue \"Parent form only updates with patchValue and setValue if I am in debugging mode. (or sometimes it does, sometimes not)\" (#51995)"},{"Id":"1923422766","IsPullRequest":false,"CreatedAt":"2023-10-03T06:35:37","Actor":"arambazamba","Number":"51993","RawContent":null,"Title":"@for with async - Object is possible null","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI tried using the new control flow with the async pipe and got the err that the Object is possible 'null'. Voucher$ is a simple array in combination with of(arr)\r\n\r\n        @for (v of vouchers$ | async; track v) {\r\n          <tr>\r\n            <td>{{ v.ID }}</td>          \r\n          </tr>\r\n        }\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n[ERROR] NG1: Object is possibly 'null'. [plugin angular-compiler]\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.0-next.6\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/fire                   7.6.1\r\n@angular/material               17.0.0-next.5\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51993","RelatedDescription":"Open issue \"@for with async - Object is possible null\" (#51993)"},{"Id":"1923318917","IsPullRequest":true,"CreatedAt":"2023-10-03T05:05:33","Actor":"angular-robot","Number":"51992","RawContent":null,"Title":"build: update github/codeql-action action to v2.21.9","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.8` -> `v2.21.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.9`](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4zLjEiLCJ1cGRhdGVkSW5WZXIiOiIzNy4zLjEiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular/pull/51992","RelatedDescription":"Open PR \"build: update github/codeql-action action to v2.21.9\" (#51992)"},{"Id":"1923024939","IsPullRequest":true,"CreatedAt":"2023-10-03T00:02:18","Actor":"alxhub","Number":"51991","RawContent":null,"Title":"fix(core): adjust toSignal types to handle more common cases","State":"open","Body":"This commit cleans up the signatures of `toSignal` to better handle the types of situations that it might be used in, and produce better type inference results.\r\n\r\nFixes #50687\r\nFixes #50591","Url":"https://github.com/angular/angular/pull/51991","RelatedDescription":"Open PR \"fix(core): adjust toSignal types to handle more common cases\" (#51991)"},{"Id":"1922957753","IsPullRequest":true,"CreatedAt":"2023-10-02T23:08:03","Actor":"JeanMeche","Number":"51989","RawContent":null,"Title":"[15.2.x] fix(service-worker): throw a critical error when handleFetch fail","State":"open","Body":"This commit is a backport to 15.2 of #51960 and #50378 \r\n\r\nThrowing `SwCriticalError` allows the driver to fallback to `safeFetch` and ensure responseWith doesn't fail.\r\n\r\nFixes #50378","Url":"https://github.com/angular/angular/pull/51989","RelatedDescription":"Open PR \"[15.2.x] fix(service-worker): throw a critical error when handleFetch fail\" (#51989)"},{"Id":"1922825827","IsPullRequest":true,"CreatedAt":"2023-10-02T22:12:00","Actor":"mmalerba","Number":"51988","RawContent":null,"Title":"WIP: propagate i18n blocks into child templates","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/51988","RelatedDescription":"Open PR \"WIP: propagate i18n blocks into child templates\" (#51988)"},{"Id":"1922708763","IsPullRequest":true,"CreatedAt":"2023-10-02T21:02:42","Actor":"ydomenjoud","Number":"51987","RawContent":null,"Title":"Rewrite CSSSelector.parse to prevent wrong or unsupported syntax","State":"open","Body":"fix CssSelector parser for better understanding of how directive's selector works. Prevent unsupported css syntax to be used.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nActual CSSSelector.parse function doesn't parse real CSS.\r\nEvery new coworker i'm training on Angular since 6 years, doesn't understand how directive's selector work, because they keep trying to use valid CSS , for the small proportion of them who understand CSS. The rest just give up with very basic selector. \r\n\r\nI know docs explain how this selector work, but a lot of developer try to cross element boundaries ( despite the documentation ), and the compiler doesn't flinch a bit.\r\n\r\nFor exemple :\r\n* `input[type^=text]` is parsed as `text`\r\n* `.hover input`  is parsed as `input.hover`\r\n* `input > .selected`  , `.selected input` and `input.selected`  are parsed as `input.selected`\r\n\r\nI extracted the actual CSSSelector parser in this github page to show my teams how they can improve their directive's selector : https://ydomenjoud.github.io/angular-selector-parser/ \r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe purpose of this pull request is to throw explicit error on wrong, or unsupported selector syntax. With theses errors : \r\n ```\r\n  NotInNot = 'Nesting :not in a selector is not allowed',\r\n  CommaInNot = 'Multiple selectors in :not are not supported',\r\n  PseudoElement = 'Pseudo element are not supported',\r\n  Combinators = 'CSS combinators (> + ~ \"space\" ) are not supported',\r\n  MultipleTagName = 'Multiple tagName are not allowed',\r\n```\r\n\r\nI added unit test to cover this upgrade, add missing test for internal :svg:* syntax ( uncovered before )\r\nAnd removed some NBSP added by previous commit\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ x] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\nWrong Directive syntax which were valid with previous parser will throw error with this new one. \r\nIf this suits you better, I can switch to warning instead.\r\n\r\n## Other information\r\nLove Angular so much for so many years now :)\r\nthanks for all your work\r\n","Url":"https://github.com/angular/angular/pull/51987","RelatedDescription":"Open PR \"Rewrite CSSSelector.parse to prevent wrong or unsupported syntax\" (#51987)"},{"Id":"1922693376","IsPullRequest":true,"CreatedAt":"2023-10-02T20:53:54","Actor":"alxhub","Number":"51986","RawContent":null,"Title":"o16n: primitives code location","State":"open","Body":"Nothing to see here, Enea","Url":"https://github.com/angular/angular/pull/51986","RelatedDescription":"Open PR \"o16n: primitives code location\" (#51986)"},{"Id":"1922629522","IsPullRequest":true,"CreatedAt":"2023-10-02T20:21:45","Actor":"josephperrott","Number":"51984","RawContent":null,"Title":"[16.2.x] build: update dependency css-selector-parser to v3","State":"open","Body":"patch version of #51983","Url":"https://github.com/angular/angular/pull/51984","RelatedDescription":"Open PR \"[16.2.x] build: update dependency css-selector-parser to v3\" (#51984)"},{"Id":"1922581839","IsPullRequest":true,"CreatedAt":"2023-10-02T19:56:52","Actor":"josephperrott","Number":"51983","RawContent":null,"Title":"build: update dependency css-selector-parser to v3","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51983","RelatedDescription":"Open PR \"build: update dependency css-selector-parser to v3\" (#51983)"},{"Id":"1922386166","IsPullRequest":false,"CreatedAt":"2023-10-02T18:12:08","Actor":"spock123","Number":"51982","RawContent":null,"Title":"[v17 Next 6] Property aliasing in @if possible?","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHi, I am playing around with the new absolutely mind blowing amazing template syntax, enabled in v17-Next6.\r\n\r\nEspecially the @defer feature is alone a game changer for us.\r\nI do however, have a feature request if it's not already in the works 👍 \r\n\r\nPreviously with `*ngIf` it was possible to create an alias, like this: \r\n\r\n`<ng-container *ngIf=\"my.deep.state.very.deep.objectsignal() as state\">`\r\n\r\nHowever using `@if:`\r\n\r\n`@if( my.deep.state.very.deep.objectsignal() as state) {`\r\n\r\n... throws an error.\r\n\r\nWould this be possible in the future? \r\nThanks a lot for the amazing changes that are coming in\r\n\r\n\n\n### Proposed solution\n\nAllow variable alias\n\n### Alternatives considered\n\nFor now I have to stay with *ngIf as we use this feature extensively throughout the application.","Url":"https://github.com/angular/angular/issues/51982","RelatedDescription":"Closed issue \"[v17 Next 6] Property aliasing in @if possible?\" (#51982)"},{"Id":"1922299111","IsPullRequest":true,"CreatedAt":"2023-10-02T17:55:53","Actor":"crisbeto","Number":"51981","RawContent":null,"Title":"build: fix compilation error due to conflict","State":"closed","Body":"Fixes a compilation error that happened, because a couple of related PRs landed at the same time.\r\n","Url":"https://github.com/angular/angular/pull/51981","RelatedDescription":"Closed or merged PR \"build: fix compilation error due to conflict\" (#51981)"},{"Id":"1921704357","IsPullRequest":true,"CreatedAt":"2023-10-02T11:07:46","Actor":"angular-robot","Number":"51978","RawContent":null,"Title":"build: update dependency css-selector-parser to v3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [css-selector-parser](https://togithub.com/mdevils/css-selector-parser) | devDependencies | major | [`^1.4.1` -> `^3.0.0`](https://renovatebot.com/diffs/npm/css-selector-parser/1.4.1/3.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>mdevils/css-selector-parser (css-selector-parser)</summary>\n\n### [`v3.0.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#300-2023-09-26)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.2...v3.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   API is backwards incompatible.\n\n##### Migrating from 2.x to 3.x\n\n1.  `Rule.tag` was moved to `Rule.items`.\n\n    Example selector: `div`.\n\n    -   Before: `{type: 'Rule', tagName: {type: 'TagName', name: 'div'}}`\n    -   After: `{type: 'Rule', items: [{type: 'TagName', name: 'div'}]}`\n\n2.  `Rule.classNames` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `.user.hidden`\n\n    -   Before: `{type: 'Rule', classNames: ['user', 'hidden']}`\n    -   After: `{type: 'Rule', items: [{type: 'ClassName', name: 'user'}, {type: 'ClassName', name: 'hidden'}]}`\n\n3.  `Rule.ids` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `#root#user-1`\n\n    -   Before: `{type: 'Rule', ids: ['root', 'user-1']}`\n    -   After: `{type: 'Rule', items: [{type: 'Id', name: 'root'}, {type: 'Id', name: 'user-1'}]}`\n\n4.  `Rule.attributes` was moved to `Rule.items`.\n\n    Example selector: `[href^=/][role]`\n\n    -   Before: `{type: 'Rule', attributes: [{type: 'Attribute', name: 'href', operator: '^=', value: {type: 'String', value: '/'}}, {type: 'Attribute', name: 'role'}]}`\n    -   After: `{type: 'Rule', items: [{type: 'Attribute', name: 'href', operator: '^=', value: {type: 'String', value: '/'}}, {type: 'Attribute', name: 'role'}]}`\n\n5.  `Rule.pseudoClasses` was moved to `Rule.items`.\n\n    Example selector: `:hover:lang(en)`\n\n    -   Before: `{type: 'Rule', pseudoClasses: [{type: 'PseudoClass', name: 'hover'}, {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}]}`\n    -   After: `{type: 'Rule', items: [{type: 'PseudoClass', name: 'hover'}, {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}]}`\n\n6.  `Rule.pseudoElement` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `::before`\n\n    -   Before: `{type: 'Rule', pseudoElement: 'before'}`\n    -   After: `{type: 'Rule', items: [{type: 'PseudoElement', name: 'before'}]}`\n\n##### New AST methods\n\n-   `ast.id` and `ast.isId` to create and test ast nodes with type `Id`.\n-   `ast.className` and `ast.isClassName` to create and test ast nodes with type `ClassName`.\n-   `ast.pseudoElement` and `ast.isPseudoElement` to create and test ast nodes with type `PseudoElement`.\n\n##### New Syntax Definition configuration\n\n-   `pseudoElements.definitions` was updated to accept signatures in otder to support specifying pseudo-elements with\n    an argument.\n    Example: `createParser({syntax: {pseudoElements: {definitions: {NoArgument: ['before'], String: ['highlight'], Selector: ['slotted']}}}})`.\n\n##### Migrating from 1.x to 3.x\n\n##### `CssSelectorParser` -> `createParser`\n\nIn 1.x versions there was `CssSelectorParser` class which had to be contructed and then configured.\nIn 3.x versions there is `createParser()` function which returns a `parse()` function. All the configutation is passed\nto `createParser()` params.\n\nBefore:\n\n```javascript\nvar CssSelectorParser = require('css-selector-parser').CssSelectorParser,\nparser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNumericPseudos('nth-child');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\n\nconst selector = parser.parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\nAfter:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({\n    syntax: {\n        pseudoClasses: {\n            // In 1.x any pseudo-classes were accepted.\n            // in 2.x parser only accepts known psuedo-classes unless `unknown: accept` was specified. \n            unknown: 'accept',\n            definitions: {\n                // This is a replacement for registerSelectorPseudos().\n                Selector: ['has'],\n                // This is a replacement for registerNumericPseudos().\n                Formula: ['nth-child']\n            }\n        },\n        // This is a replacement for registerNestingOperators().\n        combinators: ['>', '+', '~'],\n        attributes: {\n            // This a replacement for registerAttrEqualityMods().\n            // Note that equals sign (\"=\") is included into the operator definitions.\n            operators: ['^=', '$=', '*=', '~=']\n        }\n    },\n    // This is a replacement for enableSubstitutes()\n    substitutes: true\n});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\n-   [All syntax definition options.](docs/interfaces/SyntaxDefinition.md)\n-   [All the psudo-class definition options.](docs/interfaces/SyntaxDefinition.md#pseudoclasses)\n-   [All the attribute definition options.](docs/interfaces/SyntaxDefinition.md#attributes)\n\n##### Predefined CSS syntax definitions\n\nYou no longer need to make an extensive configuration of `css-selector-parser` in order to make it understand\nthe necessary CSS standards. You can now just define CSS/CSS selectors version directly:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3'});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:nth-child(2n + 1)::before');\n```\n\nHere are the pre-defined CSS standards for your disposal:\n\n-   `css1`: https://www.w3.org/TR/CSS1/\n-   `css2`: https://www.w3.org/TR/CSS2/\n-   `css3`/`selectors-3`: https://www.w3.org/TR/selectors-3/\n-   `selectors-4`: https://www.w3.org/TR/selectors-4/\n-   `latest`: refers to `selectors-4`\n-   `progressive`: `latest` + accepts unknown psudo-classes, psudo-elements and attribute case sensitivity modifiers\n\n##### Make sure you use proper `strict` value\n\nCSS selector parser in modern browsers is very forgiving. For instance, it works fine with unclosed attribute\nselectors: `\"[attr=value\"`. If you would like to mimic this behavior from browsers, set `strict` to `false`, i.e.:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3', strict: false});\n\nconst selector = parse(':lang(en'); // doesn't crash\n```\n\n##### Render is now a separate export\n\n`render()` method used to be a method of `CssSelectorParser` class. Now it can be imported directly and used.\n\nExample:\n\n```javascript\nimport {createParser, render} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'progressive'});\n\nconst selector = parse('div#user-123.user:lang(en)::before');\n\nconsole.log(render(selector)); // div#user-123.user:lang(en)::before\n```\n\n##### AST changes\n\nAST had a lot of changes.\n\n##### Selector\n\n[New type info.](docs/interfaces/AstSelector.md)\n\n1.  Type changed: `selector` -> `Selector`.\n2.  Prop changed: `selectors` -> `rules`, also `selectors` contained `ruleSet[]`, which in turn has `rule` field,\n    and new `rules` contains `Rule[]` directly.\n\nBefore: `{type: 'selector', selectors: [ {type: 'ruleSet', rule: {<RULE 1 DATA>}}, {type: 'ruleSet', rule: {<RULE 2 DATA>}} ]}`.\n\nAfter: `{type: 'Selector', rules: [ {<RULE 1 DATA>}, {<RULE 2 DATA>} ]}`.\n\n##### Rule\n\n[New type info.](docs/interfaces/AstRule.md)\n\n1.  Type changed: `rule` -> `Rule`.\n2.  Prop changed: `id: string` -> `items: [{type: 'Id', name: '<ID>'}, ...]`. According to the CSS spec one rule may have\n    more than 1 `id`, so `#root#root` is a valid selector.\n3.  Prop renamed: `nestingOperator` -> `combinator`. A proper name according to CSS spec was chosen.\n4.  Prop renamed: `rule` -> `nestedRule`. A proper name to indicate nesting was chosen.\n5.  Prop changed: `tagName: string` -> `items: [TagName | WildcardTag, ...]`. Using explicit distinction between\n    TagName (i.e. `div`) and WildcardTag (`*`), because tag name can also be `*` if escaped properly (`\\*`).\n6.  Prop changed: `attrs` -> `items: [<ATTRIBUTE>, ...]`. Attribute type was changed, see below.\n7.  Prop changed: `pseudos` -> `items: [<PSEUDO CLASS>, ...]`. There are pseudo-elements and pseudo-classes, now they are\n    separated properly (there is a separate `pseudoElement` type). Pseudo class type was changed, see below.\n\nBefore:\n\n```javascript\n({\n    type: 'rule',\n    tagName: 'div',\n    id: 'user-123',\n    classNames: ['user'],\n    attrs: [\n        {name: 'role', operator: '$=', valueType: 'string', value: 'button'}\n    ],\n    pseudos: [\n        {name: 'lang', valueType: 'string', value: 'en'}\n    ],\n    nestingOperator: '>'\n})\n```\n\nAfter:\n\n```javascript\n({\n    type: 'Rule',\n    items: [\n       {type: 'TagName', name: 'div'},\n       {type: 'Id', name: 'user-123'},\n       {type: 'ClassName', name: 'user'},\n       {type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}},\n       {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}\n    ],\n    combinator: '>'\n})\n```\n\n##### Attribute\n\n[New type info.](docs/interfaces/AstAttribute.md)\n\n1.  Type introduced: `Attribute`.\n2.  Prop `value` and `valueType` were combined to a single prop `value` with a field `type`.\n\n[All possible value types.](docs/interfaces/AstAttribute.md#value)\n\n##### Example 1\n\nBefore: `{name: 'role'}`.\n\nAfter: `{type: 'Attribute', name: 'role'}`.\n\n##### Example 2\n\nBefore: `{name: 'role', operator: '$=', valueType: 'string', value: 'button'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}`.\n\n##### Example 3\n\nBefore: `{name: 'role', operator: '=', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '=', value: {type: 'Substitute', name: 'var'}}`.\n\n##### Pseudo Classes\n\n[New type info.](docs/interfaces/AstPseudoClass.md)\n\n1.  Type introduced: `PseudoClass`.\n2.  Prop `value` and `valueType` were combined to a single prop `argument` with a field `type`.\n\n[All possible argument types.](docs/interfaces/AstPseudoClass.md#argument)\n\n##### Example 1\n\nBefore: `{name: 'visited'}`.\n\nAfter: `{type: 'PseudoClass', name: 'visited'}`.\n\n##### Example 2\n\nBefore: `{name: 'lang', valueType: 'string', value: 'en'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'String', value: 'en'}}`.\n\n##### Example 3\n\nBefore: `{name: 'lang', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'Substitute', name: 'var'}}`.\n\n##### Example 4\n\nBefore: `{name: 'has', valueType: 'selector', value: {type: 'selector', selectors: [{type: 'ruleSet', rule: {type: 'rule', tagName: 'div'}}]}}`.\n\nAfter: `{type: 'PseudoClass', name: 'has', argument: {type: 'Selector', rules: [{type: 'Rule', tag: {type: 'TagName', name: 'div'}}]}}`.\n\n##### Pseudo Elements\n\n[New type info.](docs/interfaces/AstPseudoElement.md)\n\n1.  Type introduced: `PseudoElement`.\n\n[All possible argument types.](docs/interfaces/AstPseudoElement.md#argument)\n\n##### Features\n\n-   upgrade API in order to reflect upcoming complexity in CSS selectors ([cece4df](https://togithub.com/mdevils/css-selector-parser/commit/cece4dff647b19c6211dd6c9defbd7887eca62b5))\n\n##### [2.3.2](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.1...v2.3.2) (2023-06-25)\n\n##### Bug Fixes\n\n-   fix foruma parsing with negative A, closes [#&#8203;28](https://togithub.com/mdevils/css-selector-parser/issues/28) ([824312f](https://togithub.com/mdevils/css-selector-parser/commit/824312fc65a677a78699814ad222af3298afd772))\n-   include js file extension into the mjs build, closes [#&#8203;22](https://togithub.com/mdevils/css-selector-parser/issues/22) ([f50b350](https://togithub.com/mdevils/css-selector-parser/commit/f50b350bd28db0085d4fc05a3f74475c812b05c3))\n-   rendering nested selectors with combinators, closes [#&#8203;27](https://togithub.com/mdevils/css-selector-parser/issues/27) ([40fb434](https://togithub.com/mdevils/css-selector-parser/commit/40fb4345f3d720bf27e6d8a7809ee51e282bc512))\n\n##### [2.3.1](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.0...v2.3.1) (2023-06-24)\n\n##### Bug Fixes\n\n-   fix file inclusion ([925b13a](https://togithub.com/mdevils/css-selector-parser/commit/925b13ad9bf26fcc9620df0678102c40a64fbb78))\n\n### [`v2.3.2`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#232-2023-06-25)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.1...v2.3.2)\n\n### [`v2.3.1`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#231-2023-06-24)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.0...v2.3.1)\n\n### [`v2.3.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#230-2023-06-24)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.3...v2.3.0)\n\n##### Features\n\n-   publish hybrid package: CommonJS and ESM modules ([16fd8a1](https://togithub.com/mdevils/css-selector-parser/commit/16fd8a1b1b4b8bc2107ccba5b36b05ea1384b8c2))\n\n### [`v2.2.3`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#221-223)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.2...v2.2.3)\n\n-   Update published docs.\n\n### [`v2.2.2`](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.1...v2.2.2)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.1...v2.2.2)\n\n### [`v2.2.1`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#221-223)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.0...v2.2.1)\n\n-   Update published docs.\n\n### [`v2.2.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#220)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.1.0...v2.2.0)\n\n-   Full refactoring.\n-   Switch to typescript.\n-   Pre-defined CSS syntaxes were included.\n-   The whole AST was documented.\n\n##### Migrating from 1.x\n\n##### `CssSelectorParser` -> `createParser`\n\nIn 1.x versions there was `CssSelectorParser` class which had to be contructed and then configured.\nIn 2.x versions there is `createParser()` function which returns a `parse()` function. All the configutation is passed\nto `createParser()` params.\n\nBefore:\n\n```javascript\nvar CssSelectorParser = require('css-selector-parser').CssSelectorParser,\nparser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNumericPseudos('nth-child');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\n\nconst selector = parser.parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\nAfter:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({\n    syntax: {\n        pseudoClasses: {\n            // In 1.x any pseudo-classes were accepted.\n            // in 2.x parser only accepts known psuedo-classes unless `unknown: accept` was specified. \n            unknown: 'accept',\n            definitions: {\n                // This is a replacement for registerSelectorPseudos().\n                Selector: ['has'],\n                // This is a replacement for registerNumericPseudos().\n                Formula: ['nth-child']\n            }\n        },\n        // This is a replacement for registerNestingOperators().\n        combinators: ['>', '+', '~'],\n        attributes: {\n            // This a replacement for registerAttrEqualityMods().\n            // Note that equals sign (\"=\") is included into the operator definitions.\n            operators: ['^=', '$=', '*=', '~=']\n        }\n    },\n    // This is a replacement for enableSubstitutes()\n    substitutes: true\n});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\n-   [All syntax definition options.](docs/interfaces/SyntaxDefinition.md)\n-   [All the psudo-class definition options.](docs/interfaces/SyntaxDefinition.md#pseudoclasses)\n-   [All the attribute definition options.](docs/interfaces/SyntaxDefinition.md#attributes)\n\n##### Predefined CSS syntax definitions\n\nYou no longer need to make an extensive configuration of `css-selector-parser` in order to make it understand\nthe necessary CSS standards. You can now just define CSS/CSS selectors version directly:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3'});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:nth-child(2n + 1)::before');\n```\n\nHere are the pre-defined CSS standards for your disposal:\n\n-   `css1`: https://www.w3.org/TR/CSS1/\n-   `css2`: https://www.w3.org/TR/CSS2/\n-   `css3`/`selectors-3`: https://www.w3.org/TR/selectors-3/\n-   `selectors-4`: https://www.w3.org/TR/selectors-4/\n-   `latest`: refers to `selectors-4`\n-   `progressive`: `latest` + accepts unknown psudo-classes, psudo-elements and attribute case sensitivity modifiers\n\n##### Make sure you use proper `strict` value\n\nCSS selector parser in modern browsers is very forgiving. For instance, it works fine with unclosed attribute\nselectors: `\"[attr=value\"`. If you would like to mimic this behavior from browsers, set `strict` to `false`, i.e.:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3', strict: false});\n\nconst selector = parse(':lang(en'); // doesn't crash\n```\n\n##### Render is now a separate export\n\n`render()` method used to be a method of `CssSelectorParser` class. Now it can be imported directly and used.\n\nExample:\n\n```javascript\nimport {createParser, render} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'progressive'});\n\nconst selector = parse('div#user-123.user:lang(en)');\n\nconsole.log(render(selector)); // div#user-123.user:lang(en)\n```\n\n##### AST changes\n\nAST had a lot of changes.\n\n##### Selector\n\n[New type info.](docs/interfaces/AstSelector.md)\n\n1.  Type changed: `selector` -> `Selector`.\n2.  Prop changed: `selectors` -> `rules`, also `selectors` contained `ruleSet[]`, which in turn has `rule` field,\n    and new `rules` contains `Rule[]` directly.\n\nBefore: `{type: 'selector', selectors: [ {type: 'ruleSet', rule: {<RULE 1 DATA>}}, {type: 'ruleSet', rule: {<RULE 2 DATA>}} ]}`.\n\nAfter: `{type: 'Selector', rules: [ {<RULE 1 DATA>}, {<RULE 2 DATA>} ]}`.\n\n##### Rule\n\n[New type info.](docs/interfaces/AstRule.md)\n\n1.  Type changed: `rule` -> `Rule`.\n2.  Prop changed: `id: string` -> `ids: string[]`. According to the CSS spec one rule may have more than 1 `id`,\n    so `#root#root` is a valid selector.\n3.  Prop renamed: `nestingOperator` -> `combinator`. A proper name according to CSS spec was chosen.\n4.  Prop renamed: `rule` -> `nestedRule`. A proper name to indicate nesting was chosen.\n5.  Prop changed: `tagName: string` -> `tag: TagName | WildcardTag`. Using explicit distinction between\n    TagName (i.e. `div`) and WildcardTag (`*`), because tag name can also be `*` if escaped properly (`\\*`).\n6.  Prop changed: `attrs` -> `attributes`. Attribute type was changed, see below.\n7.  Prop changed: `pseudos` -> `pseudoClasses`. There are pseudo-elements and pseudo-classes, now they are separated\n    properly (there is a separate `pseudoElement` property). Pseudo class type was changed, see below.\n\nBefore:\n\n```javascript\n({\n    type: 'rule',\n    tagName: 'div',\n    id: 'user-123',\n    classNames: ['user'],\n    attrs: [\n        {name: 'role', operator: '$=', valueType: 'string', value: 'button'}\n    ],\n    pseudos: [\n        {name: 'lang', valueType: 'string', value: 'en'}\n    ],\n    nestingOperator: '>'\n})\n```\n\nAfter:\n\n```javascript\n({\n    type: 'Rule',\n    tag: {type: 'TagName', name: 'div'},\n    ids: ['user-123'],\n    classNames: ['user'],\n    attributes: [\n        {type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}\n    ],\n    pseudoClasses: [\n        {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}\n    ],\n    combinator: '>'\n})\n```\n\n##### Attribute\n\n[New type info.](docs/interfaces/AstAttribute.md)\n\n1.  Type introduced: `Attribute`.\n2.  Prop `value` and `valueType` were combined to a single prop `value` with a field `type`.\n\n[All possible value types.](docs/interfaces/AstAttribute.md#value)\n\n##### Example 1\n\nBefore: `{name: 'role'}`.\n\nAfter: `{type: 'Attribute', name: 'role'}`.\n\n##### Example 2\n\nBefore: `{name: 'role', operator: '$=', valueType: 'string', value: 'button'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}`.\n\n##### Example 3\n\nBefore: `{name: 'role', operator: '=', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '=', value: {type: 'Substitute', name: 'var'}}`.\n\n##### Pseudo Classes\n\n[New type info.](docs/interfaces/AstPseudoClass.md)\n\n1.  Type introduced: `PseudoClass`.\n2.  Prop `value` and `valueType` were combined to a single prop `argument` with a field `type`.\n\n[All possible argument types.](docs/interfaces/AstPseudoClass.md#argument)\n\n##### Example 1\n\nBefore: `{name: 'visited'}`.\n\nAfter: `{type: 'PseudoClass', name: 'visited'}`.\n\n##### Example 2\n\nBefore: `{name: 'lang', valueType: 'string', value: 'en'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'String', value: 'en'}}`.\n\n##### Example 3\n\nBefore: `{name: 'lang', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'Substitute', name: 'var'}}`.\n\n##### Example 4\n\nBefore: `{name: 'has', valueType: 'selector', value: {type: 'selector', selectors: [{type: 'ruleSet', rule: {type: 'rule', tagName: 'div'}}]}}`.\n\nAfter: `{type: 'PseudoClass', name: 'has', argument: {type: 'Selector', rules: [{type: 'Rule', tag: {type: 'TagName', name: 'div'}}]}}`.\n\n### [`v2.1.0`](https://togithub.com/mdevils/css-selector-parser/compare/0e517dc411b050964f2a291dcbe2218df9f1ef28...v2.1.0)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/0e517dc411b050964f2a291dcbe2218df9f1ef28...v2.1.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/51978","RelatedDescription":"Open PR \"build: update dependency css-selector-parser to v3\" (#51978)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1925100110","IsPullRequest":true,"CreatedAt":"2023-10-03T23:25:34","Actor":"clydin","Number":"25942","RawContent":null,"Title":"test: enable build E2E tests for esbuild-based builders","State":"open","Body":"The build E2E tests have now been enabled for the esbuild-based builders. The bundle budget test is currently skipped pending feature implementation. Several redundant tests were also deleted due to the functionality already being covered by unit tests for the builders.","Url":"https://github.com/angular/angular-cli/pull/25942","RelatedDescription":"Open PR \"test: enable build E2E tests for esbuild-based builders\" (#25942)"},{"Id":"1925014580","IsPullRequest":true,"CreatedAt":"2023-10-03T21:58:18","Actor":"clydin","Number":"25941","RawContent":null,"Title":"fix(@angular-devkit/build-angular): re-add TestBed compileComponents in schematics to support defer block testing","State":"open","Body":"The defer block support introduces a new asynchronous form of the set class metadata Angular function. This form is needed to allow for providing metadata for dynamically imported deferred components. The asynchronous compileComponents call within TestBed is now used to initialize this metadata during unit tests. Unit tests that contain defer blocks must use this call prior to executing a test to allow templates containing defer to properly render. Existing tests that do not use the new defer block do not require modification unless the defer block is introduced into components used in the unit test.","Url":"https://github.com/angular/angular-cli/pull/25941","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): re-add TestBed compileComponents in schematics to support defer block testing\" (#25941)"},{"Id":"1924992332","IsPullRequest":true,"CreatedAt":"2023-10-03T21:38:53","Actor":"clydin","Number":"25940","RawContent":null,"Title":"fix(@angular-devkit/build-angular): clear diagnostic cache when external templates change with esbuild builders","State":"open","Body":"To prevent stale Angular template diagnostics from persisting in watch mode (including `ng serve`), the template diagnostic cache will now be invalidated based on the set of changed external template files. This ensures that the Angular AOT compiler will analyze the template again during the rebuild and clear any fixed errors.","Url":"https://github.com/angular/angular-cli/pull/25940","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): clear diagnostic cache when external templates change with esbuild builders\" (#25940)"},{"Id":"1924839918","IsPullRequest":true,"CreatedAt":"2023-10-03T19:52:45","Actor":"clydin","Number":"25939","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): improve accuracy of programmatic watch mode usage for esbuild builders","State":"open","Body":"To better capture file changes after the initial build for the esbuild-based builders in a programmatic usage, the file watching initialization has been moved to before the first build results are yielded. This allows tests that execute code to change files with improved accuracy of the watch mode triggering. The application builder now also supports aborting the watch mode programmatically. This allows tests to gracefully stop the watch mode and more fully cleanup the test at completion.","Url":"https://github.com/angular/angular-cli/pull/25939","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): improve accuracy of programmatic watch mode usage for esbuild builders\" (#25939)"},{"Id":"1924736661","IsPullRequest":true,"CreatedAt":"2023-10-03T18:54:37","Actor":"clydin","Number":"25938","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support i18n with service worker and app-shell with esbuild builders","State":"open","Body":"When using the esbuild-based application build system through the `application` builder, the `localize` option will now allow inlining project defined localizations when using the app shell, prerendering, and service worker features. Previously a warning was issued and these features were disabled when the `localize` option was enabled.","Url":"https://github.com/angular/angular-cli/pull/25938","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support i18n with service worker and app-shell with esbuild builders\" (#25938)"},{"Id":"1923588951","IsPullRequest":true,"CreatedAt":"2023-10-03T08:23:47","Actor":"crisbeto","Number":"25937","RawContent":null,"Title":"fix(@schematics/angular): account for new block syntax in starter template","State":"open","Body":"Fixes that the starter template would've generated a compilation error in v17 after https://github.com/angular/angular/pull/51994 is released.","Url":"https://github.com/angular/angular-cli/pull/25937","RelatedDescription":"Open PR \"fix(@schematics/angular): account for new block syntax in starter template\" (#25937)"},{"Id":"1922979740","IsPullRequest":false,"CreatedAt":"2023-10-02T23:23:12","Actor":"apangr","Number":"25936","RawContent":null,"Title":"Tests don't run in Angular 16 using Jasmine/Karma","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15\r\n\r\n### Description\r\n\r\nThe project compiles well, and the tests worked in version 15 of Angular. After running `ng test` I am receiving the following error:\r\n\r\n `ng-virtual-main.js!=!data:text/javascript;base64 ...Unknown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unknown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nAfter running `ng test` I am receiving the following error:\r\n\r\n `ng-virtual-main.js!=!data:text/javascript;base64 ...Unknown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unknown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n`ng-virtual-main.js!=!data:text/javascript;base64 ...Unkown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unkown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nnpm ls @ngtools/webpack\r\n\r\n`└─┬ @angular-devkit/build-angular@16.2.4\r\n  └── @ngtools/webpack@16.2.4`\r\n\r\nng version \r\n\r\n`Angular CLI: 16.2.4\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: linux x64\r\n\r\nAngular: 16.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1602.4\r\n@angular-devkit/build-angular        16.2.4\r\n@angular-devkit/core                 16.2.4\r\n@angular-devkit/schematics           16.2.4\r\n@angular/cdk                         16.2.6\r\n@angular/cli                         16.2.4\r\n@angular/material                    16.2.6\r\n@angular/material-date-fns-adapter   16.2.6\r\n@schematics/angular                  16.2.4\r\nrxjs                                 7.5.7\r\ntypescript                           4.9.3\r\nzone.js                              0.13.3\r\n`\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25936","RelatedDescription":"Open issue \"Tests don't run in Angular 16 using Jasmine/Karma\" (#25936)"},{"Id":"1921687060","IsPullRequest":true,"CreatedAt":"2023-10-02T13:30:30","Actor":"alan-agius4","Number":"25934","RawContent":null,"Title":"fix(@schematics/angular): remove `baseUrl` from `tsconfig.json`","State":"closed","Body":"The `baseUrl` is no longer needed since NGCC has been removed. This also enables better auto-import suggestions.\r\n\r\nCloses #18834\r\n","Url":"https://github.com/angular/angular-cli/pull/25934","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove `baseUrl` from `tsconfig.json`\" (#25934)"},{"Id":"1921521370","IsPullRequest":true,"CreatedAt":"2023-10-02T13:30:03","Actor":"alan-agius4","Number":"25933","RawContent":null,"Title":"feat(@schematics/angular): add migration to replace usages of `@nguniversal/builders`","State":"closed","Body":"This migration replaces usages of `@nguniversal/builders` with `@angular-devkit/build-angular`.","Url":"https://github.com/angular/angular-cli/pull/25933","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add migration to replace usages of `@nguniversal/builders`\" (#25933)"},{"Id":"1921718288","IsPullRequest":false,"CreatedAt":"2023-10-02T11:17:17","Actor":"vbraun","Number":"25935","RawContent":null,"Title":"ESbuild slower incremental rebuilds","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIncremental rebuilds with the new `@angular-devkit/build-angular:browser-esbuild` are a bit slower for us than the old webpack dev server, especially for minor changes at the leaves of the import graph. This is unexpected as esbuild's sole raison d'être is to be fast ;)\r\n\r\nIt is understood that the first incremental rebuild is slower than subsequent rebuilds, so for all tests we tigger the incremental build multiple times until times stabilize.\r\n\r\nOur app has >1000 components in >100 libraries. For testing, I just `touch` a typescript file in a feature library. So very few files should have to be recompiled & rebundled. With esbuild I get 11 sec for incremental builds, with webpack 9 seconds. \r\n\r\nLooking at running processes I see esbuild pegging most CPU cores at 100% for most of the time during the incremental rebuild. This seems to be corroborated by enabling `NG_BUILD_DEBUG_PERF`, which only logs negligible times:\r\n```\r\n$ NG_BUILD_DEBUG_PERF=1 ng build\r\n⠋ Changes detected. Rebuilding...One or more browsers which are configured in the project's Browserslist configuration will be ignored as ES5 output is not supported by the Angular CLI.\r\nIgnored browsers: kaios 2.5, op_mini all\r\nDURATION[NG_READ_CONFIG]: 0.018551948s\r\nDURATION[NG_CREATE_PROGRAM]: 0.237099920s\r\n⠙ Changes detected. Rebuilding...\r\n  mobile-list-view.component.css  284b \r\n\r\n⚡ Done in 0ms\r\nDURATION[NG_ANALYZE_PROGRAM]: 0.616578717s\r\nDURATION[NG_FIND_AFFECTED]: 0.000006410s\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.021461028s\r\nDURATION[NG_EMIT_TS]: 0.064279846s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.001562300s [count: 11431; avg: 0.000000137s; min: 0.000000070s; max: 0.000005060s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.004640593s [count: 11431; avg: 0.000000406s; min: 0.000000100s; max: 0.000057390s]\r\nDURATION[NG_EMIT_JS*]: 0.002667022s [count: 34; avg: 0.000078442s; min: 0.000003780s; max: 0.000820767s]\r\n⠸ Changes detected. Rebuilding...\r\n[... snip chunks output...]\r\nApplication bundle generation complete. [11.095 seconds]\r\n```\r\n\r\nWhat is esbuild doing? Unfortunately there is no official profiling support, but it seems there is a lot of filesystem churn. When attaching strace to the running esbuild server (pid 698557 here), I get a surprising number of stat calls. For starters:\r\n```\r\nstrace -f -p 698557 |& grep /home/vbraun/frontend/package.json\r\n[pid 698634] newfstatat(AT_FDCWD, \"/home/vbraun/frontend/package.json\",  <unfinished ...>\r\n[...]\r\n```\r\ngives 71083 `stat()` calls to the `package.json` file from the different PIDs of esbuild's thread pool, each time an incremental build is triggered. Stat should run in a few microseconds but that alone probably adds up to more than 0.1s. \r\n\r\nThis is how far I have gotten debugging this..\r\n\r\n### Minimal Reproduction\r\n\r\nThis is a private repo but others have reported the same: https://github.com/angular/angular-cli/issues/25130#issuecomment-1684157200\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n$ npx ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.3\r\nNode: 16.18.1\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cdk                    16.2.5\r\n@angular/cli                    16.2.3\r\n@angular/material               16.2.5\r\n@schematics/angular             15.2.6\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n* Fedora 38 x86_64, btrfs\r\n* Ryzen 7900X 12-Core Processor, 64 GB RAM, nvme SSD\r\n* Using `NODE_OPTIONS=--max_old_space_size=8192` to avoid memory bottlenecks","Url":"https://github.com/angular/angular-cli/issues/25935","RelatedDescription":"Open issue \"ESbuild slower incremental rebuilds\" (#25935)"},{"Id":"1921373596","IsPullRequest":true,"CreatedAt":"2023-10-02T07:16:31","Actor":"angular-robot","Number":"25932","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25932","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25932)"},{"Id":"1921004983","IsPullRequest":true,"CreatedAt":"2023-10-01T22:24:33","Actor":"twoco","Number":"25931","RawContent":null,"Title":"Allow CJS dependencies by wildcard.","State":"open","Body":"## PR Checklist\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\nNot sure where to find docs sources. Perhabs we don't need to update the docs in this case. Maybe add a sentence:\r\n\"Use wildcard '*' to allow all.\"\r\n\r\n## PR Type\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe:\r\n\r\nJust a minor change to extends the option `allowedCommonJsDependencies` to allow all CJS using `*` wildcard.\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: 25784\r\n\r\n## What is the new behavior?\r\n\r\nYou can now use `*` for `allowedCommonJsDependencies` to allow all without need to add each individual dependency.\r\nBut you can use this as before. No further changes. Just be able to use `*` on list. No more, no less.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\nSee the ref issue. I have simular issues with that. In a large project you cannot avoid using CJS/AMD. The developers should decide if allow all instead of adding each to the list which is exhausting and in a monorepo annoying.\r\n\r\nIt's a simple addition to the code at `packages/angular_devkit/build_angular/src/tools/esbuild/commonjs-checker.ts` checking for `allowedRequests.has('*')` too.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25931","RelatedDescription":"Open PR \"Allow CJS dependencies by wildcard.\" (#25931)"},{"Id":"1920157133","IsPullRequest":true,"CreatedAt":"2023-09-30T07:27:50","Actor":"crisbeto","Number":"25930","RawContent":null,"Title":"build: re-enable Material tests","State":"open","Body":"Re-enables Material tests that had to be disabled during the TS 5.2 update.\r\n","Url":"https://github.com/angular/angular-cli/pull/25930","RelatedDescription":"Open PR \"build: re-enable Material tests\" (#25930)"},{"Id":"1918973850","IsPullRequest":false,"CreatedAt":"2023-09-29T16:47:40","Actor":"eneajaho","Number":"25924","RawContent":null,"Title":"Component ID generation collision detected is thrown after first change when running default angular installation","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nComponent ID generation collision detected is thrown after first change when running default angular installation\n\n### Minimal Reproduction\n\n1. npm create @angular@next \r\n2. Choose ssr to be enabled\r\n3. ng serve\r\n4. change app component html -> no warning\r\n5. change app component html again -> warning is shown in console\r\n\r\n![CleanShot 2023-09-29 at 11 56 57@2x](https://github.com/angular/angular-cli/assets/25394362/0167ebf0-9f7a-49a3-b9cf-99b2437b087a)\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25924","RelatedDescription":"Closed issue \"Component ID generation collision detected is thrown after first change when running default angular installation\" (#25924)"},{"Id":"1919107260","IsPullRequest":true,"CreatedAt":"2023-09-29T16:47:39","Actor":"alan-agius4","Number":"25927","RawContent":null,"Title":"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR","State":"closed","Body":"\r\n\r\nThis commit clean ups the compiled components state when the build is being executed in watch mode. This is required as otherwise during development `Component ID generation collision detected` are displayed on the server.\r\n\r\nCloses: #25924\r\n","Url":"https://github.com/angular/angular-cli/pull/25927","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR\" (#25927)"},{"Id":"1919446068","IsPullRequest":false,"CreatedAt":"2023-09-29T15:19:55","Actor":"Potapich","Number":"25929","RawContent":null,"Title":"No matching version found for @angular-devkit/core@16.2.4","State":"closed","Body":"### Command\n\nversion\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.2\n\n### Description\n\nnpm install -g @angular/cli@latest\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\r\n\n\n### Minimal Reproduction\n\ntry to install in terminal:\r\nnpm install -g @angular/cli@latest\r\n\r\noutput error is:\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\non version 16.2.2 works fine\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25929","RelatedDescription":"Closed issue \"No matching version found for @angular-devkit/core@16.2.4\" (#25929)"},{"Id":"1919258672","IsPullRequest":true,"CreatedAt":"2023-09-29T13:49:53","Actor":"cexbrayat","Number":"25928","RawContent":null,"Title":"fix(@schematics/angular): use @types/node v18","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, running a schematics that adds `@types/node` to a project, like `ng add @angular/ssr`, will add the v16 types. \r\n\r\n## What is the new behavior?\r\n\r\nAs nodejs v16 is now EOL, this PR updates the types to v18.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25928","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): use @types/node v18\" (#25928)"},{"Id":"1919085366","IsPullRequest":true,"CreatedAt":"2023-09-29T11:42:45","Actor":"alan-agius4","Number":"25926","RawContent":null,"Title":"test(@angular/cli): remove Safari 15 test","State":"closed","Body":"Safari v15 is longer included in the default browserlist configuration of CLI apps.\r\n","Url":"https://github.com/angular/angular-cli/pull/25926","RelatedDescription":"Closed or merged PR \"test(@angular/cli): remove Safari 15 test\" (#25926)"},{"Id":"1919050019","IsPullRequest":false,"CreatedAt":"2023-09-29T11:09:33","Actor":"nikita-fuchs","Number":"25925","RawContent":null,"Title":"ng update assumes incorrect version present","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAfter a failed run of `ng update`, successive runs will assume the presence of the version I tried updating to.\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` It basically forgets about the current project not being updated yet and the migration scripts it still needs to run: \r\n```\r\n$ cat package.json \r\n...\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^12.2.18\",\r\n    \"@angular-devkit/core\": \"^16.2.4\",\r\n    \"@angular/animations\": \"^11.2.14\",\r\n    \"@angular/cli\": \"~11.2.19\",\r\n    \"@angular/common\": \"^11.2.14\",\r\n    \"@angular/compiler\": \"^11.2.14\",\r\n    \"@angular/compiler-cli\": \"^11.2.14\",\r\n    \"@angular/core\": \"^11.2.14\",\r\n    \"@angular/forms\": \"^11.2.14\",\r\n    \"@angular/language-service\": \"^11.2.14\",\r\n    \"@angular/platform-browser\": \"^11.2.14\",\r\n    \"@angular/platform-browser-dynamic\": \"^11.2.14\",\r\n    \"@angular/router\": \"^11.2.14\",\r\n    \"@types/extend\": \"^3.0.0\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"@types/prismjs\": \"~1.4.18\",\r\n    \"bowser\": \"^1.7.2\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"date-fns\": \"2.0.0-alpha.1\",\r\n    \"element-closest\": \"^2.0.2\",\r\n    \"extend\": \"^3.0.1\",\r\n    \"fs-extra\": \"^5.0.0\",\r\n    \"is-ua-webview\": \"^1.0.0\",\r\n    \"jasmine-core\": \"~3.8.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"karma-min-reporter\": \"^0.1.0\",\r\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\r\n    \"karma-remap-istanbul\": \"~0.4.0\",\r\n    \"ng-packagr\": \"^11.2.4\",\r\n    \"popper.js\": \"^1.14.0\",\r\n    \"prismjs\": \"^1.29.0\",\r\n    \"rxjs\": \"^6.6.7\",\r\n    \"ts-node\": \"~5.0.1\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.0.8\",\r\n    \"web-animations-js\": \"^2.3.2\",\r\n    \"zone.js\": \"~0.10.2\"\r\n  }\r\n}%     \r\n```\r\n\r\nBonus: I think angular CLI is so excited to be updated globally (which makes no sense when just trying to upgrade a project) that it totally forgets to check if the angular project you're in  right now actually needs an upgrade ?\r\n\r\n```\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n\r\nnone of which actually applies to the project of course.\r\n\r\n### Minimal Reproduction\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` although \r\n\r\n### Exception or Error\r\n\r\n```text\r\nPackage '@angular/cli' is already up to date.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nThis was installed trying to upgrade the above mentioned project.\r\n\r\n\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25925","RelatedDescription":"Closed issue \"ng update assumes incorrect version present\" (#25925)"},{"Id":"1918785653","IsPullRequest":false,"CreatedAt":"2023-09-29T08:41:24","Actor":"nblaudez","Number":"25923","RawContent":null,"Title":"Angular SSR - ReferenceError : window is not defined","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nI use Angular for my application. I'm able to build for web and ssr but i have this error when i run : npm run serve:ssr:\r\n\r\n\"ReferenceError: window is not defined\"\r\n\n\n### Minimal Reproduction\n\n\r\nI have added this code in my server.ts\r\n\r\nconst mocks = require('mock-browser').delegates.AbstractBrowser;\r\nconst MockBrowser = mocks.MockBrowser;\r\nconst mock = new MockBrowser();\r\n(global as any).document = mock.getDocument();\r\n(global as any).navigator = mock.getNavigator();\r\n(global as any).window = mock.getWindow();\r\n(global as any).WebSocket = require('ws');\r\n(global as any).XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\r\nDoes someone can help me ?\n\n### Exception or Error\n\n```text\nReferenceError: window is not defined\r\n    at 18214 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5591033)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 12643 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5563889)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 20783 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:3091734)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 30097 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:694)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 96846 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:39497)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.0.6\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: npm 9.6.7\r\nOS: linux x64\r\n\r\nAngular: 16.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.0.6\r\n@angular/cdk                    16.2.2\r\n@angular/cli                    16.0.6\r\n@angular/material               16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25923","RelatedDescription":"Closed issue \"Angular SSR - ReferenceError : window is not defined\" (#25923)"},{"Id":"1918150648","IsPullRequest":false,"CreatedAt":"2023-09-29T06:13:57","Actor":"rcsilva83","Number":"25920","RawContent":null,"Title":"Enable a way to update packages that depend on Angular when `ng update` is ran","State":"closed","Body":"### Command\n\nupdate\n\n### Description\n\nOn an Angular application we always use packages that depend on Angular, like `ng-bootstrap`. These libraries often have specific versions for each Angular version. In the case o `ng-bootstrap`, you have to use v14.x.x for Angular 15 and v15.x.x for Angular 16, but these dependencies must be manually updated and migrated when we update Angular.\n\n### Describe the solution you'd like\n\nIt would be awesome if `ng update` could also update and migrate code from these external packages the same way if does for Angular components. The could be done by some kind of hook, like the `install` script that gets executed for all dependencies that have it when you `npm install` your application.\r\n\r\nThis should support updating Angular to an older version (`ng update @angular/cli@15 @angular/core@15`), as it would update `ng-bootstrap` to v14 instead of v15 and execute required code migrations for this version.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25920","RelatedDescription":"Closed issue \"Enable a way to update packages that depend on Angular when `ng update` is ran\" (#25920)"},{"Id":"1918239296","IsPullRequest":false,"CreatedAt":"2023-09-29T05:55:13","Actor":"segevfiner","Number":"25921","RawContent":null,"Title":"Use esbuild's support for transforming async/await to generator","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAFAIK Angular CLI is using Babel plugins to transform async/await to generators for zone.js support as that transformation wasn't supported by esbuils. But support has been added https://github.com/evanw/esbuild/issues/2780, which you might be able to use to speed up the build.\r\n\r\nThis is just letting you know, as I requested that feature while playing around with zone.js for a different non Angular based project where I have hit this limitation of zone.js which the Angular CLI hides from you.\n\n### Describe the solution you'd like\n\nUse the native esbuild transform for transforming async/awaitnto generators.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25921","RelatedDescription":"Closed issue \"Use esbuild's support for transforming async/await to generator\" (#25921)"},{"Id":"1918610067","IsPullRequest":true,"CreatedAt":"2023-09-29T05:13:47","Actor":"angular-robot","Number":"25922","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `ab6afbc` -> `0b753a6` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `f731eda` -> `2730402` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2cfafd6` -> `95129ef` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `2012c27` -> `6324d1c` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b305660` -> `ceb8ca7` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `3cf7ced` -> `818d534` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `b62c956` -> `37c19f6` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a77b580` -> `b0a46df` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `16ca005` -> `ebb0d2c` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `1e66e7e` -> `47c1f06` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `d24d3f7` -> `84ca43b` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `759f9cf` -> `13bbd4b` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bfdad92` -> `f7b5d40` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `cabb66d` -> `06a8a54` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `99ff190` -> `93a43ec` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `f38629b` -> `adfff1a` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `ba46754` -> `ed2320a` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `9ce8432` -> `f345f56` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `d75d651` -> `744fffc` |\n| angular/dev-infra | action | digest | `76c632f` -> `680aab4` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM3LjUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25922","RelatedDescription":"Open PR \"build: update angular\" (#25922)"},{"Id":"1918039375","IsPullRequest":false,"CreatedAt":"2023-09-28T18:14:00","Actor":"johncrim","Number":"25919","RawContent":null,"Title":"Support multi-project workspaces with jest and karma tests","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nToday one can run `ng test` to run tests across all projects with a configured `test` builder, or `ng test <project>` to run tests in a single project. However if the monorepo contains projects with both jest and karma tests it gets pretty clunky to run both. \r\n\r\nAs Angular moves toward multiple test builders there should be support for running all tests globally for select types of tests.\n\n### Describe the solution you'd like\n\nIdeally `ng test` would run all tests across all projects using all configured test builders, and it would be possible to configure multiple test builders for a single project. And then it would be possible to only run tests for a single test builder using a property, like `ng test --runner=karma`, where the runner value is defined by the builder.\n\n### Describe alternatives you've considered\n\nThe following can be added to angular.json for each project:\r\n```json\r\n\"projects\": {\r\n    \"mylib\": {\r\n      \"projectType\": \"library\",\r\n      \"root\": \"projects/mylib\",\r\n      \"sourceRoot\": \"projects/mylib/src\",\r\n      \"prefix\": \"lib\",\r\n      \"architect\": {\r\n        \"build\": {\r\n...\r\n        },\r\n        \"test-karma\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"tsConfig\": \"projects/mylib/tsconfig.karma-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.karma-spec.ts\"\r\n            ],\r\n            \"codeCoverageExclude\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        },\r\n        \"test-jest\": {\r\n          \"builder\": \"@angular-devkit/build-angular:jest\",\r\n          \"options\": {\r\n            \"tsConfig\": \"tsconfig.jest-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    },\r\n```\r\n\r\nSuch a configuration supports 2 test builders for the project, so `ng mylib:test-karma` and `ng mylib:test-jest` works, but I can no longer `ng test` to run all tests in the workspace. Of course I could avoid leave one of the builder using `test` in all my projects, but it is still a limitation. \r\n\r\nThe current lines in my package.json would have to be updated for each new project. The following is required for only 2 projects, and it would get unwieldy for 15-20 projects:\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test:karma\": \"ng run mylib:test-karma --watch false && ng run myapp:test-karma --watch false\",\r\n    \"test:jest\": \"NODE_NO_WARNINGS=1 ng run mylib:test-jest && NODE_NO_WARNINGS=1 ng run myapp:test-jest\"\r\n```\r\n\r\nThis project (checkout the `dev/jest` branch) provides an example:\r\nhttps://github.com/johncrim/ng16-yarn-pnp/tree/dev/jest\r\n\r\n(Note also that running `yarn test:jest` runs all the jest tests 2x, presumably because the `tsconfig.jest-spec.json` references test files from multiple projects. Obviously this can be fixed with tsconfig files in each project)\r\n","Url":"https://github.com/angular/angular-cli/issues/25919","RelatedDescription":"Open issue \"Support multi-project workspaces with jest and karma tests\" (#25919)"},{"Id":"1916712730","IsPullRequest":true,"CreatedAt":"2023-09-28T15:33:00","Actor":"angular-robot","Number":"25914","RawContent":null,"Title":"build: update github/codeql-action action to v2.21.9","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.8` -> `v2.21.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.9`](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25914","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.21.9\" (#25914)"},{"Id":"1917681749","IsPullRequest":true,"CreatedAt":"2023-09-28T15:32:16","Actor":"cexbrayat","Number":"25917","RawContent":null,"Title":"fix(@schematics/angular): pass `ssr` option to application schematics","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe generated project with `ng new --ssr` has no changes (no extra dependencies, no `server.ts`, no àngualr.json` updates...) using next.6.\r\n\r\n## What is the new behavior?\r\n\r\nRunning `ng new --ssr` will now run the ssr schematics\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25917","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): pass `ssr` option to application schematics\" (#25917)"},{"Id":"1917503191","IsPullRequest":true,"CreatedAt":"2023-09-28T15:31:52","Actor":"alan-agius4","Number":"25916","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor","State":"closed","Body":"\r\nThis commit refactors the route extractor to use the newly `whenStable` API.\r\n","Url":"https://github.com/angular/angular-cli/pull/25916","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor\" (#25916)"},{"Id":"1917726436","IsPullRequest":false,"CreatedAt":"2023-09-28T14:58:26","Actor":"chopswil15","Number":"25918","RawContent":null,"Title":"Ability For Ngr Standard Library To Work Across Different Versions of Ng","State":"closed","Body":"### Command\n\nversion\n\n### Description\n\nIn the .Net world there is .Net Standard, and when you write a .Net Standrd DLL it can work across different versions of .Net without doing anything special and no complaints about version issues.\r\n\r\nI would like to have an Ng Standrd so I can write common code library once and add the library to any Ng version project without it complaining about version issues.\r\n\n\n### Describe the solution you'd like\n\nsee above\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25918","RelatedDescription":"Closed issue \"Ability For Ngr Standard Library To Work Across Different Versions of Ng\" (#25918)"},{"Id":"1917022908","IsPullRequest":false,"CreatedAt":"2023-09-28T08:55:30","Actor":"dev-rajat-bacancy","Number":"25915","RawContent":null,"Title":"unable to check angular version with node hydrogen version","State":"closed","Body":"### Command\n\nadd, build, config, doc, e2e, extract-i18n, generate, help, lint, new, other, run, serve, test, update, version\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nnode 18.12.1\n\n### Description\n\n![image](https://github.com/angular/angular-cli/assets/144689525/778ad759-ed2c-43e1-925e-14fb836e4b1a)\r\n\r\n\r\n![image](https://github.com/angular/angular-cli/assets/144689525/1d971e92-2962-459a-bcb3-06146cba85ef)\r\n\r\n\r\nWhen I update to latest node version 18.18.0 all angular command is not working for any of my angular project.\r\nWhen I am using 18.12.0 everything was working fine.\n\n### Minimal Reproduction\n\nhit any of **ng** command I am facting this issue\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nafter executing any command that start from ng I'm getting this which opens new terminal.\r\n\r\n-----Mg: version                          (fundamental)----All-------------------\r\n(New file)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25915","RelatedDescription":"Closed issue \"unable to check angular version with node hydrogen version\" (#25915)"},{"Id":"1916041098","IsPullRequest":true,"CreatedAt":"2023-09-27T17:40:09","Actor":"cexbrayat","Number":"25913","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support namedChunks option in application builder","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe `application` builder does not support `namedChunks` yet.\r\n\r\n## What is the new behavior?\r\n\r\nThis adds the support of `namedChunks` for the new `application` builder.\r\nIt generates output like the following:\r\n\r\n```\r\nInitial Chunk Files         | Names         |  Raw Size | Estimated Transfer Size\r\nchunk-ACXUMF56.js           | -             |  94.14 kB |                28.25 kB\r\nmain-3WP5KDHR.js            | main          |  71.95 kB |                18.31 kB\r\npolyfills-4UVFGIFL.js       | polyfills     |  32.85 kB |                10.68 kB\r\nchunk-2XJVAMHT.js           | -             | 449 bytes |               449 bytes\r\nstyles-5INURTSO.css         | styles        |   0 bytes |                 0 bytes\r\n\r\n                            | Initial Total | 199.38 kB |                57.68 kB\r\n\r\nLazy Chunk Files            | Names         |  Raw Size | Estimated Transfer Size\r\nabout.component-2PJOS5PM.js | -             | 401 bytes |               401 bytes\r\nhome.component-25UHFOEY.js  | -             | 398 bytes |               398 bytes\r\n```\r\n\r\nThis is really handy to get a glimpse at what a chunk is referring to and be able to analyze it (especially in applications with dozens of chunks).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25913","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support namedChunks option in application builder\" (#25913)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1925011820","IsPullRequest":true,"CreatedAt":"2023-10-03T21:55:41","Actor":"mmalerba","Number":"27893","RawContent":null,"Title":"refactor(multiple): Add base mixin for components with no base tokens","State":"open","Body":"This ensures API consistency and gives us a place to put base tokens, should any be added in the future.","Url":"https://github.com/angular/components/pull/27893","RelatedDescription":"Open PR \"refactor(multiple): Add base mixin for components with no base tokens\" (#27893)"},{"Id":"1925007394","IsPullRequest":false,"CreatedAt":"2023-10-03T21:51:32","Actor":"lin-brian-l","Number":"27892","RawContent":null,"Title":"[Android] Talkback screenreader does not obey `FocusTrap`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`ConfigurableFocusTrap.focusInitialElementWhenReady()` successfully traps the user's focus on an element on Chrome, but it does not trap the focus of the Talkback screenreader. See the attached videos for details.\r\n\r\n<details><summary>Demos</summary>\r\n\r\nChrome - focus is trapped within the modal\r\n\r\nhttps://github.com/angular/components/assets/29388364/2d90792b-3f00-4227-85c7-523ccf6b48fa\r\n\r\nTalkback - focus is **not** trapped within the modal\r\n\r\nhttps://github.com/angular/components/assets/29388364/1f530c5b-650c-401d-9bf6-e2768e7ce14a\r\n\r\n</details>\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/stackblitz-starters-tcuzva?file=src%2Fmain.ts) \r\nSteps to reproduce:\r\n1. Activate Talkback\r\n2. In the demo app, click on the \"Open Modal\" button\r\n3. Tab through the elements in the modal by swiping right.\r\n\n\n### Expected Behavior\n\nFocus behavior should match Desktop, where it cannot leave the modal.\n\n### Actual Behavior\n\nOn Talkback, focus behavior leaves the modal and phone elements can be focused.\n\n### Environment\n\n- Angular: 16.2.7\r\n- CDK/Material: 16.2.6\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Android\r\n","Url":"https://github.com/angular/components/issues/27892","RelatedDescription":"Open issue \"[Android] Talkback screenreader does not obey `FocusTrap`\" (#27892)"},{"Id":"1924978215","IsPullRequest":true,"CreatedAt":"2023-10-03T21:27:25","Actor":"mmalerba","Number":"27891","RawContent":null,"Title":"fix(material/tabs): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.tabs-theme that are not emitted by any of: mat.tabs-color, mat.tabs-typography, mat.tabs-density. If you rely on the partial mixins only and don't call mat.tabs-theme, you can add mat.tabs-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27891","RelatedDescription":"Open PR \"fix(material/tabs): move unthemable tokens to theme mixin\" (#27891)"},{"Id":"1924969793","IsPullRequest":true,"CreatedAt":"2023-10-03T21:20:54","Actor":"mmalerba","Number":"27890","RawContent":null,"Title":"fix(material/table): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.table-theme that are not emitted by any of: mat.table-color, mat.table-typography, mat.table-density. If you rely on the partial mixins only and don't call mat.table-theme, you can add mat.table-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27890","RelatedDescription":"Open PR \"fix(material/table): move unthemable tokens to theme mixin\" (#27890)"},{"Id":"1924962090","IsPullRequest":true,"CreatedAt":"2023-10-03T21:14:46","Actor":"mmalerba","Number":"27889","RawContent":null,"Title":"fix(material/sidenav): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.sidenav-theme that are not emitted by any of: mat.sidenav-color, mat.sidenav-typography, mat.sidenav-density. If you rely on the partial mixins only and don't call mat.sidenav-theme, you can add mat.sidenav-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27889","RelatedDescription":"Open PR \"fix(material/sidenav): move unthemable tokens to theme mixin\" (#27889)"},{"Id":"1924957583","IsPullRequest":true,"CreatedAt":"2023-10-03T21:11:00","Actor":"mmalerba","Number":"27888","RawContent":null,"Title":"fix(material/menu): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.menu-theme that are not emitted by any of: mat.menu-color, mat.menu-typography, mat.menu-density. If you rely on the partial mixins only and don't call mat.menu-theme, you can add mat.menu-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27888","RelatedDescription":"Open PR \"fix(material/menu): move unthemable tokens to theme mixin\" (#27888)"},{"Id":"1924950430","IsPullRequest":true,"CreatedAt":"2023-10-03T21:05:53","Actor":"mmalerba","Number":"27887","RawContent":null,"Title":"fix(material/form-field): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.form-field-theme that are not emitted by any of: mat.form-field-color, mat.form-field-typography, mat.form-field-density. If you rely on the partial mixins only and don't call mat.form-field-theme, you can add mat.form-field-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27887","RelatedDescription":"Open PR \"fix(material/form-field): move unthemable tokens to theme mixin\" (#27887)"},{"Id":"1924950079","IsPullRequest":true,"CreatedAt":"2023-10-03T21:05:35","Actor":"josephperrott","Number":"27886","RawContent":null,"Title":"ci: migrate saucelabs and browserstack tests to GHA","State":"open","Body":"Move Browserstack and Saucelabs testing from CircleCI to GHA\r\n\r\nIn testing I found no appreciable difference between different runner sizes and opted to use the free tier, we can revisit if we identify issues in the future.","Url":"https://github.com/angular/components/pull/27886","RelatedDescription":"Open PR \"ci: migrate saucelabs and browserstack tests to GHA\" (#27886)"},{"Id":"1924936021","IsPullRequest":true,"CreatedAt":"2023-10-03T20:57:55","Actor":"mmalerba","Number":"27885","RawContent":null,"Title":"fix(material/expansion): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.expansion-theme that are not emitted by any of: mat.expansion-color, mat.expansion-typography, mat.expansion-density. If you rely on the partial mixins only and don't call mat.expansion-theme, you can add mat.expansion-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27885","RelatedDescription":"Open PR \"fix(material/expansion): move unthemable tokens to theme mixin\" (#27885)"},{"Id":"1924885938","IsPullRequest":true,"CreatedAt":"2023-10-03T20:24:29","Actor":"mmalerba","Number":"27884","RawContent":null,"Title":"fix(material/chips): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.chips-theme that are not emitted by any of: mat.chips-color, mat.chips-typography, mat.chips-density. If you rely on the partial mixins only and don't call mat.chips-theme, you can add mat.chips-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27884","RelatedDescription":"Open PR \"fix(material/chips): move unthemable tokens to theme mixin\" (#27884)"},{"Id":"1924877434","IsPullRequest":true,"CreatedAt":"2023-10-03T20:18:05","Actor":"mmalerba","Number":"27883","RawContent":null,"Title":"fix(material/button-toggle): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.button-toggle-theme that are not emitted by any of: mat.button-toggle-color, mat.button-toggle-typography, mat.button-toggle-density. If you rely on the partial mixins only and don't call mat.button-toggle-theme, you can add mat.button-toggle-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27883","RelatedDescription":"Open PR \"fix(material/button-toggle): move unthemable tokens to theme mixin\" (#27883)"},{"Id":"1924867341","IsPullRequest":true,"CreatedAt":"2023-10-03T20:10:29","Actor":"mmalerba","Number":"27882","RawContent":null,"Title":"fix(material/bottom-sheet): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.bottom-sheet-theme that are not emitted by any of: mat.bottom-sheet-color, mat.bottom-sheet-typography, mat.bottom-sheet-density. If you rely on the partial mixins only and don't call mat.bottom-sheet-theme, you can add mat.bottom-sheet-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27882","RelatedDescription":"Open PR \"fix(material/bottom-sheet): move unthemable tokens to theme mixin\" (#27882)"},{"Id":"1924840941","IsPullRequest":true,"CreatedAt":"2023-10-03T19:53:29","Actor":"mmalerba","Number":"27881","RawContent":null,"Title":"fix(material/divider): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.divider-theme that are not emitted by any of: mat.divider-color, mat.divider-typography, mat.divider-density. If you rely on the partial mixins only and don't call mat.divider-theme, you can add mat.divider-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27881","RelatedDescription":"Open PR \"fix(material/divider): move unthemable tokens to theme mixin\" (#27881)"},{"Id":"1924754507","IsPullRequest":true,"CreatedAt":"2023-10-03T19:05:47","Actor":"mmalerba","Number":"27880","RawContent":null,"Title":"feat(material-experimental/theming): add M3 progress bar support","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27880","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 progress bar support\" (#27880)"},{"Id":"1918326961","IsPullRequest":true,"CreatedAt":"2023-10-03T17:11:55","Actor":"mmalerba","Number":"27867","RawContent":null,"Title":"feat(material-experimental/theming): add M3 radio support","State":"closed","Body":"Depends on #27864","Url":"https://github.com/angular/components/pull/27867","RelatedDescription":"Closed or merged PR \"feat(material-experimental/theming): add M3 radio support\" (#27867)"},{"Id":"1918373925","IsPullRequest":true,"CreatedAt":"2023-10-03T15:41:20","Actor":"mmalerba","Number":"27868","RawContent":null,"Title":"feat(material-experimental/theming): add M3 progress-spinner support","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27868","RelatedDescription":"Closed or merged PR \"feat(material-experimental/theming): add M3 progress-spinner support\" (#27868)"},{"Id":"1924366520","IsPullRequest":false,"CreatedAt":"2023-10-03T15:12:36","Actor":"gurelsoycaner","Number":"27879","RawContent":null,"Title":"mat-select stranger behavior after updating to version 16.2.6","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![image](https://github.com/angular/components/assets/5128170/eef2a96e-5972-4ace-8fb3-fe8241903e2f)\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nI'm not sure what happened after upgrading to version 16.2.6\n\n### Actual Behavior\n\n![image](https://github.com/angular/components/assets/5128170/1641ab4e-eef8-4428-99dc-7cd21cc1cc0f)\r\n\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27879","RelatedDescription":"Open issue \"mat-select stranger behavior after updating to version 16.2.6\" (#27879)"},{"Id":"1923613772","IsPullRequest":false,"CreatedAt":"2023-10-03T08:37:12","Actor":"szulik153","Number":"27878","RawContent":null,"Title":"bug(cdk/menu): menu is closed on mousedown event","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen menu is opened, using standalone trigger, it is closed by clicking outside the menu on mousedown event.\n\n### Reproduction\n\n1. Go to the CDK menu examples page: https://material.angular.io/cdk/menu/examples. \r\n2. Open the menu using \"Click me!\" button under \"Menu with Standalone Trigger\".\r\n3. Click outside the menu.\n\n### Expected Behavior\n\nMenu should be closed using mouseup event to comply with WCAG Level A - 2.5.2 criterion (https://www.w3.org/TR/WCAG21/#pointer-cancellation)\n\n### Actual Behavior\n\nMenu is closed with mousedown event. \r\nThe same bahavior appears in CDK v15 - https://v15.material.angular.io/cdk/menu/examples\r\nBut not in v14 - https://v14.material.angular.io/cdk/menu/examples\r\n\r\nAlso latest Material Menu component works as expected - https://material.angular.io/components/menu/examples\n\n### Environment\n\n- Angular: 15, 16\r\n- CDK/Material: 15, 16\r\n- Browser(s): latest Chrome, Firefox, Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS (14.0 and 13.6)\r\n","Url":"https://github.com/angular/components/issues/27878","RelatedDescription":"Open issue \"bug(cdk/menu): menu is closed on mousedown event\" (#27878)"},{"Id":"1922369828","IsPullRequest":false,"CreatedAt":"2023-10-02T18:11:27","Actor":"yohannestikabo","Number":"27877","RawContent":null,"Title":"Material table broken after upgrading angular from 14 to 16","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nUnhandled Application Error TypeError: Cannot read properties of null (reading 'flags') at isDirectivelost (core.mis: 2157:19) at elementStart (core.mjs: 16300:27) at eelement (core.mjs: 16377:5) at DocumentsComponent_ng_template_14_mat_cell_13_Template (template.htm:65:15) at executeTemplate (core.mjs: 11986:13) at renderView (core.mjs: 13184:13) at createndRenderEmbeddedLView (core.mjs: 23961:5) at TemplateRef.createEmbeddedViewImp1 (core.mjs: 24047:31) at ViewcontainerRef.createEmbeddedView(core.mjs:24355:37) at MatTable._renderCellTemplateForItem\n\n### Reproduction\n\nI were not able to reproduce this in StackBlitz\r\n\r\n\n\n### Expected Behavior\n\nThis supposed to display a material table with data, and it was working in Angular 14.\n\n### Actual Behavior\n\nDisplay a material table with data\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27877","RelatedDescription":"Closed issue \"Material table broken after upgrading angular from 14 to 16\" (#27877)"},{"Id":"1921370461","IsPullRequest":false,"CreatedAt":"2023-10-02T16:14:19","Actor":"amirheydari9","Number":"27874","RawContent":null,"Title":"feat(datepicker): add timepicker to datepicker","State":"closed","Body":"### Feature Description\n\n add timepicker to datepicker\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27874","RelatedDescription":"Closed issue \"feat(datepicker): add timepicker to datepicker\" (#27874)"},{"Id":"1921416504","IsPullRequest":true,"CreatedAt":"2023-10-02T11:42:52","Actor":"crisbeto","Number":"27876","RawContent":null,"Title":"build: fix lint failure","State":"closed","Body":"Fixes a lint failure on the main branch.","Url":"https://github.com/angular/components/pull/27876","RelatedDescription":"Closed or merged PR \"build: fix lint failure\" (#27876)"},{"Id":"1921405256","IsPullRequest":true,"CreatedAt":"2023-10-02T07:41:43","Actor":"crisbeto","Number":"27875","RawContent":null,"Title":"fix(cdk/schematics): support both application and browser builders","State":"open","Body":"In #27792 the schematics were updated to use the new default `application` builder instead of the `browser` builder. According to the CLI team we'll have to support both so these changes update our existing logic to account for both cases.","Url":"https://github.com/angular/components/pull/27875","RelatedDescription":"Open PR \"fix(cdk/schematics): support both application and browser builders\" (#27875)"},{"Id":"1918056146","IsPullRequest":true,"CreatedAt":"2023-10-01T17:38:35","Actor":"mmalerba","Number":"27865","RawContent":null,"Title":"feat(material/theming): Open up new APIs to access theme values","State":"closed","Body":"This PR opens up the following Sass APIs used to access theme values:\r\n- `get-theme-version`: Gets the version of the theme object\r\n- `get-theme-type`: Gets the type of theme (light or dark)\r\n- `get-theme-color`: Gets a color from the theme\r\n- `get-theme-typography`: Gets a typography value from the theme\r\n- `get-theme-density`: Gets the density scale from the theme\r\n- `theme-has`: Checks if the theme has information for the given theming system","Url":"https://github.com/angular/components/pull/27865","RelatedDescription":"Closed or merged PR \"feat(material/theming): Open up new APIs to access theme values\" (#27865)"},{"Id":"1918035673","IsPullRequest":true,"CreatedAt":"2023-10-01T17:36:54","Actor":"mmalerba","Number":"27864","RawContent":null,"Title":"fix(material/radio): Apply tokens at mixin root","State":"closed","Body":"Applies radio tokens at the theme mixin's root selector (or html if the mixin is called with no selector). This makes it easier for users to override tokens without worrying about specificity.","Url":"https://github.com/angular/components/pull/27864","RelatedDescription":"Closed or merged PR \"fix(material/radio): Apply tokens at mixin root\" (#27864)"},{"Id":"1920347933","IsPullRequest":false,"CreatedAt":"2023-09-30T22:15:52","Actor":"jy95","Number":"27873","RawContent":null,"Title":"bug(Material): No provider for MatExpansionPanel","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nError: NG0201: No provider for MatExpansionPanel found in NodeInjector. Find more at https://angular.io/errors/NG0201\n\n### Reproduction\n\nMy repo is public : https://github.com/jy95/ngx-json-schema-viewer\r\nSo stackblitz link is https://stackblitz.com/github/jy95/ngx-json-schema-viewer\r\n\r\nIf for some reason, it doesn't work - run following commands at the root level & you will get the error I have in console :\r\n```bash\r\n// Install dependancies\r\nnpm install\r\n// Build the lib so that storybook can use it\r\nnpm run buildLib\r\n// Launch Storybook\r\nnpm run storybook\r\n```\n\n### Expected Behavior\n\nIt should work\n\n### Actual Behavior\n\n![image](https://github.com/angular/components/assets/9306961/36ee6a2d-8aa5-46e4-83a1-e9949731886c)\r\n\n\n### Environment\n\n```\r\nAngular CLI: 16.2.3\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n","Url":"https://github.com/angular/components/issues/27873","RelatedDescription":"Closed issue \"bug(Material): No provider for MatExpansionPanel\" (#27873)"},{"Id":"1920261708","IsPullRequest":false,"CreatedAt":"2023-09-30T13:30:14","Actor":"manik96m","Number":"27872","RawContent":null,"Title":"bug(drag-drop): Slot content not visible when we start dragging an element","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi,\r\n\r\nBackground:\r\nI am creating a reusable dynamic list component which also has the ability to drag and drop items in a list.\r\nThis component uses **slots** to dynamically project content from the consumer component.\r\n\r\nProblem: \r\nThe component renders correctly.\r\nBut when I start dragging an item, the content in the slot is not visible.\r\n\r\nDoes anyone know how to solve this issue or any workaround for this?\r\n\r\n@angular/cdk\r\n@angular/cdk/drag-drop\r\n\r\nThanks!\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-jbsaba?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. Click on \"Item 1 in slot\" and start dragging it.\r\n2. Notice that the text \"Item 1 in slot\" is not visible while you are dragging the item.\r\n\r\n\r\n### Expected Behavior\r\n\r\nAny content in a slot element should be visible while dragging the element.\r\n\r\n### Actual Behavior\r\n\r\nContent in the slot is not visible while you are dragging the item.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.7\r\n- CDK/Material: 16.2.6\r\n- Browser(s): Chrome\r\n- Operating System: macOS\r\n\r\n\r\n### REASON - \r\nI am still debugging but found the reason behind this problem.\r\nAs per documentation,\r\n\"When a cdkDrag element is picked up, it will create a preview element visible while dragging.\"\r\nThis causes another slot element to be created with the same name which is why we don't see its content.\r\n\r\nStill trying to find a solution.\r\n","Url":"https://github.com/angular/components/issues/27872","RelatedDescription":"Open issue \"bug(drag-drop): Slot content not visible when we start dragging an element\" (#27872)"},{"Id":"1919536513","IsPullRequest":true,"CreatedAt":"2023-09-29T16:38:25","Actor":"josephperrott","Number":"27871","RawContent":null,"Title":"ci: setup slack messages for integration test","State":"closed","Body":"Setup the slack messages for failed integration tests on releasable branchces","Url":"https://github.com/angular/components/pull/27871","RelatedDescription":"Closed or merged PR \"ci: setup slack messages for integration test\" (#27871)"},{"Id":"1919239334","IsPullRequest":false,"CreatedAt":"2023-09-29T13:05:26","Actor":"angelaki","Number":"27870","RawContent":null,"Title":"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening","State":"open","Body":"### Feature Description\n\nI'm waiting quite long for this feature and was just about to implement / PR it myself. Haven't found something, but is this already in discussion? And I can't get the `npm install` to run because of conficts, is this currently broken?\n\n### Use Case\n\nBeing able to set the items on demand in lazy loading / paged scenarios.","Url":"https://github.com/angular/components/issues/27870","RelatedDescription":"Open issue \"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening\" (#27870)"},{"Id":"1918765773","IsPullRequest":true,"CreatedAt":"2023-09-29T08:38:24","Actor":"crisbeto","Number":"27869","RawContent":null,"Title":"build: update to latest Angular and fix test failures","State":"closed","Body":"Updates to the latest version of Angular and fixes some tests that were broken by the CLI switching to generating standalone apps by default.","Url":"https://github.com/angular/components/pull/27869","RelatedDescription":"Closed or merged PR \"build: update to latest Angular and fix test failures\" (#27869)"},{"Id":"1918154295","IsPullRequest":true,"CreatedAt":"2023-09-28T19:41:21","Actor":"wagnermaciel","Number":"27866","RawContent":null,"Title":"refactor(material/button): switch raised-button to density tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27866","RelatedDescription":"Open PR \"refactor(material/button): switch raised-button to density tokens\" (#27866)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-04T03:30:02.7596469Z","RunDurationInMilliseconds":1795}