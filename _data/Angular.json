{"Data":{"Angular-Issues":{"Issues":[{"Id":"2716263370","IsPullRequest":true,"CreatedAt":"2024-12-04T00:13:38","Actor":"angular-robot","Number":"59034","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to df7d2a9","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `fe48516` -> `df7d2a9` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59034","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to df7d2a9\" (#59034)"},{"Id":"2716109497","IsPullRequest":false,"CreatedAt":"2024-12-03T22:37:24","Actor":"naveedahmed1","Number":"59033","RawContent":null,"Title":"Clarification Needed: App Shell Functionality with Incremental Hydration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have been following the [App Shell guide](https://angular.dev/ecosystem/service-workers/app-shell) to integrate an app shell into my Angular application. The app shell is generated using the command provided in the guide, and the resulting markup includes hydration information.\n\nHowever, in production, the integration doesn't seem to work as intended (ideally the app-shell markup should hydrate).\n\nQuestions:\n\nCan you please clarify how the app shell is supposed to function with Incremental Hydration?\nIs the guide still valid and up-to-date when using Incremental Hydration in Angular?\nAre there any additional steps or configurations required to ensure compatibility with Incremental Hydration in production?\n\nAny guidance or updated resources on this topic would be greatly appreciated.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... google-maps, material, platform-browser\n... platform-browser-dynamic, platform-server, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@angular/fire                   18.0.1\n@angular/pwa                    19.0.2\n@angular/ssr                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59033","RelatedDescription":"Open issue \"Clarification Needed: App Shell Functionality with Incremental Hydration\" (#59033)"},{"Id":"2716050436","IsPullRequest":true,"CreatedAt":"2024-12-03T21:54:31","Actor":"thePunderWoman","Number":"59032","RawContent":null,"Title":"refactor(core): incremental hydration TODO cleanup","State":"open","Body":"This adds a few helper functions and ensures we call complete fns when error state is rendered. It also eliminates serialized views from being copied.\r\n\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59032","RelatedDescription":"Open PR \"refactor(core): incremental hydration TODO cleanup\" (#59032)"},{"Id":"2716035825","IsPullRequest":true,"CreatedAt":"2024-12-03T21:44:38","Actor":"clydin","Number":"59031","RawContent":null,"Title":"fix(platform-browser): collect external component styles from server rendering","State":"open","Body":"SSR generated component styles used in development environments will add external styles via link elements to the HTML. However, the runtime would previously not collect these link elements for reuse with rendered components. This would result in two copies of the link elements present in the DOM. In isolation this is not problematic as it is only present in development mode. Unfortunately, the Vite-based CSS HMR functionality used by the Angular CLI only updates the first stylesheet it finds and leaves other instances of the stylesheet in place. This behavior causes the styles to be left in an inconsistent state. This could be considered a defect within Vite as it should update all relevant styles to maintain consistency but ideally there should not be two instances in the Angular SSR case. To avoid the Vite issue, the runtime will now collect SSR generated external styles and reuse them.","Url":"https://github.com/angular/angular/pull/59031","RelatedDescription":"Open PR \"fix(platform-browser): collect external component styles from server rendering\" (#59031)"},{"Id":"2716014904","IsPullRequest":false,"CreatedAt":"2024-12-03T21:30:34","Actor":"NateRadebaugh","Number":"59030","RawContent":null,"Title":"FormControl events should include when ValidatorFn is added/removed","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nI'd like to be able to show a required asterisk (`*`) when the `Validators.required` is added to the reactive forms control.\n\nThere doesn't seem to be a way to get this information in any rxjs event or signal way.\n\nMy only workaround is to subscribe to `formControl.events`, but this ends up with extra noise and is not immediately triggered if changing from one invalid reason to another, etc.\n\n### Proposed solution\n\n`AbstractControl<any, any>.events: Observable<ControlEvent<any>>` should be extended to include a `ValidatorsChangeEvent`\n\n```ts\nexport declare class ValidatorsChangeEvent extends ControlEvent {\n    readonly validators: ValidatorFn[];\n    readonly source: AbstractControl;\n    constructor(validators: ValidatorFn[], source: AbstractControl);\n}\n```\n\n### Alternatives considered\n\nThe following doesn't work very well:\n\n```ts\nconst sub = formControl.events\n.pipe(\n  takeUntilDestroyed(this.destroyRef),\n  map((x) => formControl.hasValidator(Validators.required)),\n  // only trigger when the value changes\n  distinctUntilChanged(\n    (a, b) => a === b,\n    (x) => x,\n  ),\n)\n.subscribe((isFormControlRequired) => {\n```","Url":"https://github.com/angular/angular/issues/59030","RelatedDescription":"Open issue \"FormControl events should include when ValidatorFn is added/removed\" (#59030)"},{"Id":"2715669098","IsPullRequest":true,"CreatedAt":"2024-12-03T17:55:57","Actor":"JeanMeche","Number":"59029","RawContent":null,"Title":"docs(core): update `effect` doc","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59029","RelatedDescription":"Open PR \"docs(core): update `effect` doc\" (#59029)"},{"Id":"2715299372","IsPullRequest":true,"CreatedAt":"2024-12-03T17:31:41","Actor":"thePunderWoman","Number":"59025","RawContent":null,"Title":"ci: add kirjs to pullapprove groups","State":"closed","Body":"This adds Kirill to a number of pullapprove groups.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] CI related changes\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59025","RelatedDescription":"Closed or merged PR \"ci: add kirjs to pullapprove groups\" (#59025)"},{"Id":"2715491912","IsPullRequest":false,"CreatedAt":"2024-12-03T16:35:49","Actor":"k-schneider","Number":"59028","RawContent":null,"Title":"NG02801 raised during unit tests even if withFetch() is provided","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have unit tests with a setup similar to:\n\n```typescript\nbeforeEach(() => {\n  TestBed.configureTestingModule({\n    providers: [\n      provideHttpClient(),\n      provideHttpClientTesting(),\n      {\n        provide: PLATFORM_ID,\n        useValue: \"server\",\n      }\n    ],\n  });\n});\n```\n\nWhen ran they emit this warning:\n\n```'NG02801: Angular detected that `HttpClient` is not configured to use `fetch` APIs. It's strongly recommended to enable `fetch` for applications that use Server-Side Rendering for better performance and compatibility. To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` call at the root of the application.'```\n\nRemoving the platform provider removes the warning but I need to provide it to test certain behaviours.  I tried adding `withFetch()` but it made no difference.  Is there a way to squelch this warning?\n","Url":"https://github.com/angular/angular/issues/59028","RelatedDescription":"Open issue \"NG02801 raised during unit tests even if withFetch() is provided\" (#59028)"},{"Id":"2715383538","IsPullRequest":false,"CreatedAt":"2024-12-03T15:47:32","Actor":"vz-tl","Number":"59027","RawContent":null,"Title":"provideAnimationsAsync breaks leave animation applied to component host via HostBinding","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nanimations\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI was trying to use lazy-loaded animation package `provideAnimationsAsync()`, but I encountered an issue with `:leave` animation not being triggered on component removal. The animation was configured directly for a component by applying the trigger via `@HostBinding()`. \n\nThe problem disappeared when\n* reverting to `provideAnimations()`\n* changing the approach to configure the animation outside the component and applying the animation trigger to the component host element instead\n\nIn order to demonstrate the defect, open provided Stackblitz and switch between the lazy  `provideAnimationsAsync()` and the eager `provideAnimations()`. \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-provideanimationsasync-removal-bug?file=src%2Fapp%2Fapp.module.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.8\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 18.2.8\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, platform-browser\n... platform-browser-dynamic, platform-server, router, ssr\n... youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.8\n@angular-devkit/schematics      18.2.8\n@schematics/angular             18.2.8\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59027","RelatedDescription":"Open issue \"provideAnimationsAsync breaks leave animation applied to component host via HostBinding\" (#59027)"},{"Id":"2715347333","IsPullRequest":true,"CreatedAt":"2024-12-03T15:32:05","Actor":"hawkgs","Number":"59026","RawContent":null,"Title":"docs: set syntax highlighting of code examples MD code blocks","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nCurrently, there are quite a few code examples in the API reference that don't have syntax highlighting. Some examples:\r\n\r\n- https://angular.dev/api/forms/FormGroup?tab=usage-notes\r\n- https://angular.dev/api/router/withDisabledInitialNavigation?tab=usage-notes\r\n- https://angular.dev/api/router/Route?tab=usage-notes\r\n\r\n## What is the new behavior?\r\n\r\nBy setting the syntax highlighting parameter of the Markdown code blocks, the examples are now displayed properly. \r\n\r\nThe change most likely also targets code snippets/examples that are not part of the API reference.\r\n\r\n<img width=\"1158\" alt=\"Screenshot 2024-12-03 at 17 16 42\" src=\"https://github.com/user-attachments/assets/22bfb459-5d19-4dde-a26c-d6a62cc34262\">\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59026","RelatedDescription":"Open PR \"docs: set syntax highlighting of code examples MD code blocks\" (#59026)"},{"Id":"2715016872","IsPullRequest":false,"CreatedAt":"2024-12-03T15:20:50","Actor":"fabioemoutinho","Number":"59021","RawContent":null,"Title":"Resource API undefined types","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nNot sure this is the correct place to provide some feedback about the resource API, but here it is:\n\n1. I would love to be able to type narrow the value() type in the template (and outside too) to get rid of undefined type when verifying hasValue or if status is resolved, unless I would explicitly add undefined to the generic type. I am not sure this is possible, but it would be great.\n\n2. when providing a request function to a resource, I would have expected the function to possibly return undefined, but not inside the loader as it should type narrow it because loader only runs if request does not return undefined.\n\n### Proposed solution\n\n1. In the template, if under a condition of status is equal to resolved, do not union undefined in return type of value()\n2. in a resource, within loader function, request should not have undefined as a possible return type.\n\n### Alternatives considered\n\nStay as is","Url":"https://github.com/angular/angular/issues/59021","RelatedDescription":"Closed issue \"Resource API undefined types\" (#59021)"},{"Id":"2715054473","IsPullRequest":true,"CreatedAt":"2024-12-03T15:14:20","Actor":"alan-agius4","Number":"59023","RawContent":null,"Title":"docs: remove extra spacing from DI token note","State":"closed","Body":"This commit removes extra spacing.\r\n","Url":"https://github.com/angular/angular/pull/59023","RelatedDescription":"Closed or merged PR \"docs: remove extra spacing from DI token note\" (#59023)"},{"Id":"2715219717","IsPullRequest":true,"CreatedAt":"2024-12-03T14:41:30","Actor":"alxhub","Number":"59024","RawContent":null,"Title":"Several commits for resource()","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59024","RelatedDescription":"Open PR \"Several commits for resource()\" (#59024)"},{"Id":"2715025481","IsPullRequest":false,"CreatedAt":"2024-12-03T13:27:55","Actor":"john-melin","Number":"59022","RawContent":null,"Title":"unusedStandaloneImports incorrectly reports unused import when import is used as a hostDirective","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen using an imported directive in hostDirective both the angular language service and the compiler using unusedStandaloneImports: true, incorrectly reports the 'CdkMenuGroup' as being unused.\n\n`\n@Component({\n  selector: 'app-selector',\n  imports: [CdkMenuGroup],\n  hostDirectives: [CdkMenuGroup],\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nAll imports are unused(-998113)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.11.1\nPackage Manager: yarn 4.5.0\nOS: darwin arm64\n\nAngular: 19.0.2\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59022","RelatedDescription":"Closed issue \"unusedStandaloneImports incorrectly reports unused import when import is used as a hostDirective\" (#59022)"},{"Id":"2712487900","IsPullRequest":true,"CreatedAt":"2024-12-03T11:21:55","Actor":"angular-robot","Number":"59012","RawContent":null,"Title":"build: update dependency mocha to v11","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [mocha](https://mochajs.org/) ([source](https://redirect.github.com/mochajs/mocha)) | devDependencies | major | [`^10.2.0` -> `^11.0.0`](https://renovatebot.com/diffs/npm/mocha/10.8.2/11.0.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>mochajs/mocha (mocha)</summary>\n\n### [`v11.0.1`](https://redirect.github.com/mochajs/mocha/blob/HEAD/CHANGELOG.md#1101-2024-12-02)\n\n[Compare Source](https://redirect.github.com/mochajs/mocha/compare/v11.0.0...v11.0.1)\n\n##### 🌟 Features\n\n-   bumped glob dependency from 8 to 10 ([#&#8203;5250](https://redirect.github.com/mochajs/mocha/issues/5250)) ([43c3157](https://redirect.github.com/mochajs/mocha/commit/43c3157c6ef4f2d4bfecf3ad3a42479fd64187b8))\n\n##### 📚 Documentation\n\n-   fix examples for `linkPartialObjects` methods ([#&#8203;5255](https://redirect.github.com/mochajs/mocha/issues/5255)) ([34e0e52](https://redirect.github.com/mochajs/mocha/commit/34e0e52e047a9119aeae9cb5b660a8438656a1e0))\n\n### [`v11.0.0`](https://redirect.github.com/mochajs/mocha/blob/HEAD/CHANGELOG.md#1100-2024-11-11)\n\n[Compare Source](https://redirect.github.com/mochajs/mocha/compare/v10.8.2...v11.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   adapt new engine range for Mocha 11 ([#&#8203;5216](https://redirect.github.com/mochajs/mocha/issues/5216))\n\n##### 🌟 Features\n\n-   allow calling hook methods ([#&#8203;5231](https://redirect.github.com/mochajs/mocha/issues/5231)) ([e3da641](https://redirect.github.com/mochajs/mocha/commit/e3da641b08bed20f12df524fc64cb9579f980c1e))\n\n##### 🩹 Fixes\n\n-   adapt new engine range for Mocha 11 ([#&#8203;5216](https://redirect.github.com/mochajs/mocha/issues/5216)) ([80da25a](https://redirect.github.com/mochajs/mocha/commit/80da25a4132ca50d3ad35087cb62c9b0f8fc946a))\n\n##### 📚 Documentation\n\n-   downgrade example/tests chai to 4.5.0 ([#&#8203;5245](https://redirect.github.com/mochajs/mocha/issues/5245)) ([eac87e1](https://redirect.github.com/mochajs/mocha/commit/eac87e10f49207a9b388f87d77d198583c6f889a))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59012","RelatedDescription":"Closed or merged PR \"build: update dependency mocha to v11\" (#59012)"},{"Id":"2714629612","IsPullRequest":true,"CreatedAt":"2024-12-03T10:35:25","Actor":"hawkgs","Number":"59020","RawContent":null,"Title":"docs: fix missing alert block styles in the API reference","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIt looks like the documentation still uses the legacy alert classes or to be more precise – they haven't been updated after the introduction of angular.dev which uses slightly different class names for the alert blocks.\r\n\r\n## What is the new behavior?\r\n\r\nThe alert blocks are now distinguishable from the rest of the content.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59020","RelatedDescription":"Open PR \"docs: fix missing alert block styles in the API reference\" (#59020)"},{"Id":"2714484633","IsPullRequest":false,"CreatedAt":"2024-12-03T09:40:01","Actor":"Aukevanoost","Number":"59019","RawContent":null,"Title":"(>ng18 SSR) NG0205 when trying to create dynamically imported component (only on server)","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen I try to create a dynamic component loader, the following code fails in the server but succeeds in the browser: \n\nThe idea is to be able to import components at runtime:\n\n```\nimport { Component, inject, ChangeDetectionStrategy, PLATFORM_ID, ViewContainerRef, Injector, signal, computed } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n@Component({\n    selector: 'test-proxy',\n    standalone: true,\n    imports: [CommonModule],\n    template: ``,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TestProxyComponent {\n    #platformID = inject(PLATFORM_ID);\n    #vcr = inject(ViewContainerRef);\n    #injector = inject(Injector);\n\n    // Signals for state management\n    componentRef = signal<any>(null);\n    \n    constructor() {}\n\n    async ngOnInit() {\n        console.log('Host init');\n\n        try {\n            const comp = await import(\"./../test.component\");\n            console.log(\"Comp loaded\");\n            \n            const ref = this.#vcr.createComponent(comp.TestComponent, {\n                injector: this.#injector,\n            });\n            console.log(\"Comp created\");\n\n            this.componentRef.set(ref);\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    async ngOnDestroy() {\n        console.log('Host destroyed');\n        if (this.componentRef()) {\n            this.componentRef().destroy();\n        }\n    }\n}\n```\n\nThe output in the console is: \n\n```\nStarting SSR for Shell\nNode Express server listening on http://localhost:4000\nhttp://localhost:4000/\n\ninit host\nAngular is running in development mode.\nDestroyed host\nComp loaded\nRuntimeError: NG0205: Injector has already been destroyed.\n```\n\nThis seems like a race condition, but when I wait for the component to be imported before destroying the host (test-proxy). The Injector also seems to b destroyed. Am I missing something? \n\nIn angular v19, this fails in the browser as well because the imported component is being rendered after the hydration cycle potentially again because of the import finishing after the Change detection run finished. \n\n\n\n### Minimal Reproduction\n\nCreate a minimal ssr angular application >18.2.x\n\n```\n\"dependencies\": {\n    \"@angular/animations\": \"^18.2.0\",\n    \"@angular/common\": \"^18.2.0\",\n    \"@angular/compiler\": \"^18.2.0\",\n    \"@angular/core\": \"^18.2.0\",\n    \"@angular/forms\": \"^18.2.0\",\n    \"@angular/platform-browser\": \"^18.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^18.2.0\",\n    \"@angular/platform-server\": \"^18.2.0\",\n    \"@angular/router\": \"^18.2.0\",\n    \"@angular/ssr\": \"^18.2.12\",\n    \"cors\": \"^2.8.5\",\n    \"express\": \"^4.18.2\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.14.10\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^18.2.12\",\n    \"@angular/cli\": \"^18.2.11\",\n    \"@angular/compiler-cli\": \"^18.2.0\",\n    \"@types/express\": \"^4.17.17\",\n    \"@types/jasmine\": \"~5.1.0\",\n    \"@types/node\": \"^18.18.0\",\n    \"jasmine-core\": \"~5.2.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"ng-packagr\": \"^18.2.0\",\n    \"typescript\": \"~5.5.2\"\n  }\n```\n\nReproduction path\n- Create the 2 test components (test-proxy and test.component.ts)\n- Import and declare test-proxy in the app.component.ts\n- Build the app (ng build {your-app})\n- Serve the app with serve:ssr:{your-app}\n- Navigate to the webpage \n- Observe the error in the terminal.\n\n\n### Exception or Error\n\n```text\nRuntimeError: NG0205: Injector has already been destroyed.\n    at R3Injector.assertNotDestroyed (file:///chunk-XL3YIOMR.mjs:18492:17)\n    at R3Injector.get (file:chunk-XL3YIOMR.mjs:18399:14)\n    at ChainedInjector.get (file:chunk-XL3YIOMR.mjs:18845:36)\n    at lookupTokenUsingModuleInjector (file:chunk-XL3YIOMR.mjs:5848:31)\n    at getOrCreateInjectable (file:chunk-XL3YIOMR.mjs:5873:10)\n    at NodeInjector.get (file:chunk-XL3YIOMR.mjs:18860:16)\n    at ViewContainerRef2.createComponent (file:chunk-XL3YIOMR.mjs:20637:36)\n    at _TestProxyComponent.<anonymous> (file:chunk-PZQSFX4J.mjs:72:35)\n    at Generator.next (<anonymous>)\n    at fulfilled (file:chunk-JYXTTNQK.mjs:73:24) {\n  code: 205\n}\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 18.2.12\nNode: 23.3.0 \nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cli                    18.2.12\n@angular/ssr                    18.2.12\n@schematics/angular             18.2.12\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n    \nWarning: The current version of Node (23.3.0) is not supported by Angular.\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59019","RelatedDescription":"Closed issue \"(>ng18 SSR) NG0205 when trying to create dynamically imported component (only on server)\" (#59019)"},{"Id":"2714094636","IsPullRequest":true,"CreatedAt":"2024-12-03T09:32:42","Actor":"angular-robot","Number":"59016","RawContent":null,"Title":"build: update all non-major dependencies to ~5.5.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine](http://jasmine.github.io/) ([source](https://redirect.github.com/jasmine/jasmine-npm)) | dependencies | minor | [`~5.4.0` -> `~5.5.0`](https://renovatebot.com/diffs/npm/jasmine/5.4.0/5.5.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://redirect.github.com/jasmine/jasmine)) | devDependencies | minor | [`~5.4.0` -> `~5.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/5.4.0/5.5.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine-npm (jasmine)</summary>\n\n### [`v5.5.0`](https://redirect.github.com/jasmine/jasmine-npm/releases/tag/v5.5.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine-npm/compare/v5.4.0...v5.5.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine-npm/blob/main/release_notes/5.5.0.md).\n\n</details>\n\n<details>\n<summary>jasmine/jasmine (jasmine-core)</summary>\n\n### [`v5.5.0`](https://redirect.github.com/jasmine/jasmine/releases/tag/v5.5.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine/compare/v5.4.0...v5.5.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine/blob/main/release_notes/5.5.0.md).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59016","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies to ~5.5.0\" (#59016)"},{"Id":"2713765836","IsPullRequest":true,"CreatedAt":"2024-12-03T09:23:47","Actor":"angular-robot","Number":"59014","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to fe48516","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `35b1c32` -> `fe48516` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59014","RelatedDescription":"Closed or merged PR \"build: update io_bazel_rules_sass digest to fe48516\" (#59014)"},{"Id":"2714382435","IsPullRequest":true,"CreatedAt":"2024-12-03T08:55:26","Actor":"Sepandard","Number":"59018","RawContent":null,"Title":"feat(http): add checker for required interceptor registration","State":"open","Body":"resolves #57409\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n- [x] Minimal code changes to integrate new functionality or tests\r\n- [x] Code maintains backward compatibility\r\n- [x] All tests pass successfully\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n<!-- Please describe the new behavior after the changes. -->\r\n- Added utility functions and corresponding test cases for setting XSRF tokens and tagging HTTP requests.\r\n- Improved test coverage with minimal code changes and ensured backward compatibility.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n<!-- Any additional information that could be useful for reviewers. -->\r\n- All tests are designed to integrate seamlessly without affecting existing functionality.","Url":"https://github.com/angular/angular/pull/59018","RelatedDescription":"Open PR \"feat(http): add checker for required interceptor registration\" (#59018)"},{"Id":"2714099569","IsPullRequest":false,"CreatedAt":"2024-12-03T08:20:38","Actor":"tibin-carestack","Number":"59017","RawContent":null,"Title":"ERROR TypeError: Cannot read properties of undefined (reading 'ɵcmp') after ng generate @angular/core:route-lazy-loading","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\n![Image](https://github.com/user-attachments/assets/1fa0c1e8-87cd-4a42-88cf-0ccf5f29cd8c)\n\nGetting the above runtime error on opening modal using [NG-ZORRO](https://ng.ant.design/) modal service.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Cannot read properties of undefined (reading 'ɵcmp')\n    at getComponentDef (core.mjs:1664:10)\n    at extractDirectiveDef (core.mjs:19284:10)\n    at core.mjs:19420:96\n    at Array.map (<anonymous>)\n    at core.mjs:19420:85\n    at createTView (core.mjs:12963:59)\n    at getOrCreateComponentTView (core.mjs:12912:24)\n    at createRootComponentView (core.mjs:17483:47)\n    at ComponentFactory.create (core.mjs:17358:25)\n    at ViewContainerRef2.createComponent (core.mjs:17773:43)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 20.18.0\nPackage Manager: npm 10.9.1\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   19.0.0\n@angular-devkit/core            19.0.0\n@angular-devkit/schematics      19.0.2\n@angular/cdk                    18.2.14\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nIt's a runtime error, that appears on opening modal using NZ-ZORRO modal service. It happens only after lazy loaded route migration","Url":"https://github.com/angular/angular/issues/59017","RelatedDescription":"Closed issue \"ERROR TypeError: Cannot read properties of undefined (reading 'ɵcmp') after ng generate @angular/core:route-lazy-loading\" (#59017)"},{"Id":"2712821548","IsPullRequest":false,"CreatedAt":"2024-12-02T18:08:34","Actor":"JessinhoW","Number":"59013","RawContent":null,"Title":"withComponentInputBinding in combination with withRouterConfig({ paramsInheritanceStrategy: 'always' }) not working in child, queyparam is undefined","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'am using withComponentInputBinding() to bind my query parameters to input signals. When I want to use the input signal in a child component it is always undefined.\n\nEven when I add withRouterConfig({ paramsInheritanceStrategy: 'always' }) the signal is undefined (while queryparammap shows the correct value)\n\nIs this expected behaviour?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-vakejq-k3nnrk?file=src%2Fapp.component.ts,src%2Fapp.routes.ts,src%2Ffeatures%2Fparent%2Fparent.component.ts,src%2Ffeatures%2Fchild%2Fchild.component.ts,src%2Fmain.ts,src%2Findex.html\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n@angular/animations\n18.0.6\n@angular/common\n18.0.6\n@angular/compiler\n18.0.6\n@angular/core\n18.0.6\n@angular/forms\n18.0.6\n@angular/platform-browser\n18.0.6\n@angular/platform-browser-dynamic\n18.0.6\n@angular/router\n18.0.6\n@ngrx/effects\n18.0.1\n@ngrx/store\n18.0.1\n@ngrx/store-devtools\n18.0.1\nrxjs\n7.8.1\ntslib\n2.6.3\nzone.js\n0.14.7\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59013","RelatedDescription":"Closed issue \"withComponentInputBinding in combination with withRouterConfig({ paramsInheritanceStrategy: 'always' }) not working in child, queyparam is undefined\" (#59013)"},{"Id":"2712480470","IsPullRequest":true,"CreatedAt":"2024-12-02T16:12:21","Actor":"angular-robot","Number":"59011","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `01e37ca` -> `499c0a0` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `7a8fda7` -> `5791633` |\n| angular/dev-infra | action | digest | `8360e15` -> `d4ffcd6` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59011","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#59011)"},{"Id":"2712306569","IsPullRequest":true,"CreatedAt":"2024-12-02T15:42:40","Actor":"angular-robot","Number":"59010","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a35ad7f` -> `01e37ca` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `dde9fb8` -> `7a8fda7` |\n| angular/dev-infra | action | digest | `9ad44d7` -> `8360e15` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59010","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#59010)"},{"Id":"2712210206","IsPullRequest":false,"CreatedAt":"2024-12-02T14:49:18","Actor":"arturober","Number":"59009","RawContent":null,"Title":"Allow resouce and rxResource to update the value based on returned + previous value","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nMy use case is when using pagination in a way it appends the next page array to the current array (like an infinite scroll) instead of just navigating between pages,  I need a way to get the previous value (array of products, for example) and be able to concatenate the new array of products (next page) to that previous value.\n\nThis is how I do it without the resource API (using effect):\n\n```typescript\n  constructor() {\n    effect(() => {\n      this.#productsService\n        .getProducts(this.page())\n        .pipe(takeUntilDestroyed(this.#destroyRef))\n        .subscribe((products) =>\n          this.page() === 1\n            ? this.products.set(products)\n            : this.products.update((current) => current.concat(products))\n        );\n    });\n  }\n```\n\n### Proposed solution\n\nAdd an update value function to the ResourceOptions and RxResourceOptions that receives the previous value, the current value and the request object.\n\n```typescript\n  productsResource = rxResource<Product[], number>({\n    request: () => this.page(),\n    loader: ({ request: page }) => this.#productsService.getProducts(page),\n    updateValue: (prev, current, {request:page}) => page === 1 ? current : prev.concat(current),\n  });\n```\n\nI don't know if there's a (simple and elegant) way of doing this using the resource API. I can't use scan in the observable because it only gets the first emitted value and restarts the observable every time.\n\nBy default the function will just return the current value.\n\n### Alternatives considered\n\nI don't know how to do this in a more efficient way while using the resource API to load the data. Maybe it's not the way it's intended to be used.","Url":"https://github.com/angular/angular/issues/59009","RelatedDescription":"Closed issue \"Allow resouce and rxResource to update the value based on returned + previous value\" (#59009)"},{"Id":"2711772835","IsPullRequest":true,"CreatedAt":"2024-12-02T14:13:27","Actor":"devversion","Number":"59007","RawContent":null,"Title":"ci: mark devversion as unavailable","State":"closed","Body":"Will be unavailable for a bit, and don't want to block review queue :)","Url":"https://github.com/angular/angular/pull/59007","RelatedDescription":"Closed or merged PR \"ci: mark devversion as unavailable\" (#59007)"},{"Id":"2712037146","IsPullRequest":false,"CreatedAt":"2024-12-02T13:58:23","Actor":"dtsanevmw","Number":"59008","RawContent":null,"Title":"docs: search on v18 shows results from next","State":"open","Body":"### Describe the problem that you experienced\n\nSearching on https://v18.angular.dev/ shows results that are available on `next` but not in the current documentation and clicking the result doesn't do anything.\n\n\n### Enter the URL of the topic with the problem\n\nhttps://v18.angular.dev/\n\n### Describe what you were looking for in the documentation\n\nstrictStandalone\n\n### Describe the actions that led you to experience the problem\n\n1. Go to https://v18.angular.dev/\n2. Click the search icon on the left menu.\n3. Search for 'strictStandalone'\n4. Result comes up but it's not available in v18 documentation. \n![Image](https://github.com/user-attachments/assets/72163c21-5582-4ab2-b1c2-e8ce7bfb00e2)","Url":"https://github.com/angular/angular/issues/59008","RelatedDescription":"Open issue \"docs: search on v18 shows results from next\" (#59008)"},{"Id":"2711569685","IsPullRequest":false,"CreatedAt":"2024-12-02T11:37:12","Actor":"arcjain240893","Number":"59006","RawContent":null,"Title":"Failed to load out the Login page when using iPad device","State":"closed","Body":"### Describe the problem that you experienced\n\nipad version is 14. Our site even have customers who use safari v11. How can I support all those versions?\n\n### Enter the URL of the topic with the problem\n\nhillstohome.com\n\n### Describe what you were looking for in the documentation\n\nOur site even have customers who use safari v11. How can I support all those versions?\n\n### Describe the actions that led you to experience the problem\n\nUpgrade to angular 17\n\n### Describe what you want to experience that would fix the problem\n\nWhat updates should be done in polyfills?\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nipad v14\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59006","RelatedDescription":"Closed issue \"Failed to load out the Login page when using iPad device\" (#59006)"},{"Id":"2711405150","IsPullRequest":true,"CreatedAt":"2024-12-02T10:40:10","Actor":"Elie-Soued","Number":"59005","RawContent":null,"Title":"fix(docs-infra) : fixing typo in Essentials/ Dynamic interfaces with Templates","State":"closed","Body":"## PR Type\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59005","RelatedDescription":"Closed or merged PR \"fix(docs-infra) : fixing typo in Essentials/ Dynamic interfaces with Templates\" (#59005)"},{"Id":"2711399559","IsPullRequest":true,"CreatedAt":"2024-12-02T10:35:03","Actor":"hawkgs","Number":"59004","RawContent":null,"Title":"docs(docs-infra): fix missing code examples in the API reference","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/angular/angular/issues/56321\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe new examples extraction and interpolation mechanism is integrated into the API gen JSON extraction phase since I thought that it makes most sense given the JSON files could be potentially consumed by other services and having the examples already inlined is desired. Let me know, if that's good. Currently, all `{@example}`-s are being targeted by the script and then replaced with the respective code example wrapped in a Markdown code block.\r\n\r\nThe extractor/parser supports various `#docregion` use variations that can be checked in the unit tests. It is still possible that I missed a use case but these are based on the different examples that I explored during the implementation.\r\n\r\nIt is _**important**_ to note that there are about half a dozen examples that are still missing because of the `<code-example>` usage. Some of the instances have already been replaced with `{@example}` – those that have only a `region` parameter (https://github.com/angular/angular/pull/59004/commits/a63b52477af5f3d3adf0b3a8bec2a91db99ca6e2). The remaining instances are left because they contain a `header` param. All that being said, I want to start a discussion in that regard – should we get rid of `<code-example>` completely in favor of `{@example}` or vice versa? Obviously, there are other details that have to be taken into account like whether the output of this interpolation mechanism should produce Markdown or HTML but this is something that can be decided as a secondary thing.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59004","RelatedDescription":"Open PR \"docs(docs-infra): fix missing code examples in the API reference\" (#59004)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2716275011","IsPullRequest":true,"CreatedAt":"2024-12-04T00:24:42","Actor":"jkrems","Number":"29034","RawContent":null,"Title":"fix(@angular-devkit/build-angular): handle windows spec collisions","State":"open","Body":"The previous logic didn't quite work when interacting with windows path. This PR does three things:\r\n\r\n1. Move the logic to generate unique spec entrypoint names into its own function. This prepares for reusing it elsewhere (e.g. in WTR).\r\n2. Add a more direct unit test for that logic.\r\n3. Fix the logic so it works with Windows paths as well as unix paths.\r\n\r\nAs a drive-by fix, this also cleans up the deduped filenames so we get \"foo-2.spec.js\" instead of \"foo.spec-2.js\". The latter looked a bit confusing and it was just a tiiiiny regex to fix those names up. The index append shouldn't really come up in real code very often, so this is very much a tiny niche case.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28915","Url":"https://github.com/angular/angular-cli/pull/29034","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): handle windows spec collisions\" (#29034)"},{"Id":"2715905047","IsPullRequest":false,"CreatedAt":"2024-12-03T20:21:34","Actor":"Siddhu-K","Number":"29033","RawContent":null,"Title":"Page reload sent to client(s). Not working, Need to manually refresh page.","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nI have a added the new server routes released in v19 and  any changes made to the code does not reload the page in the browser. \nI can see the app rebuilds in the terminal and \"Page reload sent to client(s).\" \n\nnavigating between routes using buttons in the app does not reflect the latest changes either. \nrefreshing the page/changing route in the url gets the latest changes\n\nI am not sure if the cause of the issue is the server routes, but my v18 branch without server routes does not have this issue.\n\n### Minimal Reproduction\n\nI have created a minimal repo to illustrate the issue (Note: I haven't tried a v19 app without serve routes yet, will check tomorrow)\n\nhttps://github.com/Siddhu-K/ssg-csr\n\nrun  `ng s`\n\nmake any change, The app rebuilds and \"Page reload sent to client(s). \" in the terminal but the browser does not refresh and changes are not reflected.\n\nnavigate with buttons, New changes not reflected\n\nnavigate with browser url/ refresh the page, New changes can be seen.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.4.0\nPackage Manager: npm 10.9.1\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-Package                         Version\nPackage                         Version\n---------------------------------------------------------@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@angular/ssr                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29033","RelatedDescription":"Open issue \"Page reload sent to client(s). Not working, Need to manually refresh page.\" (#29033)"},{"Id":"2713101395","IsPullRequest":true,"CreatedAt":"2024-12-03T17:00:25","Actor":"clydin","Number":"29017","RawContent":null,"Title":"refactor(@angular/build): add initial component HMR source file analysis","State":"closed","Body":"When component template HMR support is enabled (`NG_HMR_TEMPLATES=1`), TypeScript file changes will now be analyzed to determine if Angular component metadata has changed and if the changes can support a hot replacement. Any other changes to a TypeScript file will cause a full page reload to avoid inconsistent state between the code and running application. The analysis currently has an upper limit of 32 modified files at one time to prevent a large of amount of analysis to be performed which may take longer than a full rebuild. This value may be adjusted based on feedback. Component template HMR is currently experimental and may not support all template modifications. Both inline and file-based templates are now supported. However, rebuild times have not yet been optimized.","Url":"https://github.com/angular/angular-cli/pull/29017","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add initial component HMR source file analysis\" (#29017)"},{"Id":"2714622076","IsPullRequest":false,"CreatedAt":"2024-12-03T16:24:39","Actor":"ihsnow","Number":"29029","RawContent":null,"Title":"deployUrl is added to absolute paths in link rel=preload tags","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ndeployUrl is added to absolute paths in link rel=preload tags\n\n### Minimal Reproduction\n\nPlease check:\n\n- angular 17: https://stackblitz.com/github/ihsnow/deploy-example-17/\n- angular 19: https://stackblitz.com/github/ihsnow/deploy-example-19/\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 17.3.11\nNode: 20.15.0\nPackage Manager: npm 10.8.1\nOS: darwin arm64\n\nAngular: 17.3.12\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.11\n@angular-devkit/build-angular   17.3.11\n@angular-devkit/core            17.3.11\n@angular-devkit/schematics      17.3.11\n@angular/cli                    17.3.11\n@schematics/angular             17.3.11\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29029","RelatedDescription":"Closed issue \"deployUrl is added to absolute paths in link rel=preload tags\" (#29029)"},{"Id":"2715387887","IsPullRequest":true,"CreatedAt":"2024-12-03T16:24:38","Actor":"clydin","Number":"29032","RawContent":null,"Title":"fix(@angular/build): avoid deploy URL usage on absolute preload links","State":"closed","Body":"The `deployUrl` option was unintentionally being prepended to preload links with absolute URLs within the generated index HTML for an appplication. This has now been corrected and absolute URLs will not be altered when a deploy URL is configured.\r\n\r\nCloses: #29029","Url":"https://github.com/angular/angular-cli/pull/29032","RelatedDescription":"Closed or merged PR \"fix(@angular/build): avoid deploy URL usage on absolute preload links\" (#29032)"},{"Id":"2715147263","IsPullRequest":true,"CreatedAt":"2024-12-03T14:16:21","Actor":"alan-agius4","Number":"29031","RawContent":null,"Title":"ci: add addtional perf workflows for tracking","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29031","RelatedDescription":"Closed or merged PR \"ci: add addtional perf workflows for tracking\" (#29031)"},{"Id":"2715124155","IsPullRequest":true,"CreatedAt":"2024-12-03T14:10:20","Actor":"josephperrott","Number":"29030","RawContent":null,"Title":"ci: add addtional perf workflows for tracking","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29030","RelatedDescription":"Closed or merged PR \"ci: add addtional perf workflows for tracking\" (#29030)"},{"Id":"2712328010","IsPullRequest":false,"CreatedAt":"2024-12-03T14:10:05","Actor":"alexandresebrao","Number":"29012","RawContent":null,"Title":"Development and Production differs on entry '/'","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.0\n\n### Description\n\nOn development mode I'm not having any problem when using AppNodeEngine\n\nBut when in production when accessing the root is not working the same way.\n\nOn my test I'm having a problem with angularNodeAppEngine\n\n\n\n### Minimal Reproduction\n\nThe example uses fastify\n\n```\n    server.get('*', async (req, reply) => {\n       const user = {username: 'test'}\n        try {\n            const response = await angularNodeAppEngine.handle(req.raw, {\n                user\n            })\n            if (response) {\n                console.log(\" i'm here \")\n                await writeResponseToNodeResponse(response, reply.raw)\n            } else {\n                reply.callNotFound()\n            }\n        } catch (error) {\n            reply.send(error)\n        }\n    })\n```\n\nIf i hit any route like\n/profile\n\nThe console will say 'im here'\n\nAnd everything will work fine.\n\nBut with /\n\nIt will not\n\nWith this my canActivate wont receive the REQUEST_CONTEXT of the user and will redirect him to the login page, instead of the homepage\napp.server.route.ts\n\n```import { RenderMode, ServerRoute } from '@angular/ssr'\n\nexport const serverRoutes: ServerRoute[] = [\n    {\n        path: '**',\n        renderMode: RenderMode.Server\n    }\n]```\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: pnpm 9.13.2\nOS: linux x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... localize, material, material-luxon-adapter, platform-browser\n... platform-browser-dynamic, platform-server, router\n... service-worker\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.2\n@angular-devkit/core         19.0.1\n@angular-devkit/schematics   19.0.1\n@angular/build               19.0.2\n@angular/cli                 19.0.2\n@angular/ssr                 19.0.2\n@schematics/angular          19.0.1\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else relevant?\n\nI didn't make the mini repo, but if its really needed I will send as soon as possible, any other info I will be pretty happy to share.","Url":"https://github.com/angular/angular-cli/issues/29012","RelatedDescription":"Closed issue \"Development and Production differs on entry '/'\" (#29012)"},{"Id":"2714221441","IsPullRequest":true,"CreatedAt":"2024-12-03T14:10:04","Actor":"alan-agius4","Number":"29024","RawContent":null,"Title":"fix(@angular/build): ensure correct handling of `index.output` for SSR","State":"closed","Body":"Previously, the index file was not being renamed correctly when using server-side rendering (SSR).\r\n\r\nCloses: #29012\r\n","Url":"https://github.com/angular/angular-cli/pull/29024","RelatedDescription":"Closed or merged PR \"fix(@angular/build): ensure correct handling of `index.output` for SSR\" (#29024)"},{"Id":"2711015711","IsPullRequest":true,"CreatedAt":"2024-12-03T12:27:01","Actor":"angular-robot","Number":"29008","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29008","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29008)"},{"Id":"2714498699","IsPullRequest":false,"CreatedAt":"2024-12-03T09:53:02","Actor":"eni23","Number":"29028","RawContent":null,"Title":"ng serve per default only listens on IPv6 (Linux)","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`ng serve` seems to only listen on IPv6 per default.\n\nThis seems like pretty weird behaviour, as most services do not work like that, and it makes debugging issues which involves networks and proxies kind of unexcepted. \n \n\n### Minimal Reproduction\n\nServe an application:\n```\nng serve\n\n[..]\nWatch mode enabled. Watching for file changes...\nRe-optimizing dependencies because lockfile has changed\n  ➜  Local:   http://localhost:4200/\n  ➜  press h + enter to show help\n```\n\nIt says its listening on localhost. \nLocalhost is resolving to both `::1` and `127.0.0.1`. Still ng decides to only listen on `::1`:\n```\nnetstat -pnlt | grep ':4200'\ntcp6       0      0 ::1:4200                :::*                    LISTEN      2145414/ng serve\n```\n\nI can force it to run it on IPv4 with binding to `127.0.0.1` or `0.0.0.0`, but then  it only listens to ipv4, and not 6 of course:\n```\nng serve --host 127.0.0.1\n\nnetstat -pnlt | grep ':4200'\ntcp        0      0 127.0.0.1:4200          0.0.0.0:*               LISTEN      2152537/ng serve --\n```\n\nStarting it explicitly with `localhost` also only binds it to IPv6:\n```\nng serve --host localhost\n\nnetstat -pnlt | grep ':4200'\ntcp6       0      0 ::1:4200                :::*                    LISTEN      2164254/ng serve --\n```\n\nIt seems like this \"issue\" is only reproducible on Linux, on Mac OSX, ng binds \"correctly\".\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 17.3.2\nNode: 20.9.0\nPackage Manager: npm 10.1.0\nOS: linux x64\n\nAngular: 17.3.12\n... animations, common, compiler, compiler-cli, core, elements\n... forms, language-service, platform-browser\n... platform-browser-dynamic, platform-server, router\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1703.2\n@angular-devkit/build-angular        17.3.2\n@angular-devkit/core                 17.3.2\n@angular-devkit/schematics           17.3.2\n@angular/cdk                         17.3.10\n@angular/cli                         17.3.2\n@angular/material                    17.3.10\n@angular/material-date-fns-adapter   17.3.10\n@schematics/angular                  17.3.2\nrxjs                                 7.8.1\ntypescript                           5.4.3\nzone.js                              0.14.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29028","RelatedDescription":"Closed issue \"ng serve per default only listens on IPv6 (Linux)\" (#29028)"},{"Id":"2714422638","IsPullRequest":true,"CreatedAt":"2024-12-03T09:12:37","Actor":"alan-agius4","Number":"29027","RawContent":null,"Title":"refactor(@angular/ssr): replace `Map` with `Record` in SSR manifest","State":"open","Body":"Replaced `Map` with `Record` in SSR manifest to simplify structure and improve testing/setup.\r\n","Url":"https://github.com/angular/angular-cli/pull/29027","RelatedDescription":"Open PR \"refactor(@angular/ssr): replace `Map` with `Record` in SSR manifest\" (#29027)"},{"Id":"2714419879","IsPullRequest":true,"CreatedAt":"2024-12-03T09:11:31","Actor":"angular-robot","Number":"29026","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `4ccc958` -> `ebb6d77` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `16fd33c` -> `5017f3f` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `b6cb67f` -> `b0e8dd7` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `d2aa18c` -> `015deb5` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `de56138` -> `ed08b41` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `1ae0570` -> `c41bc1f` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `5516980` -> `82853c7` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `66575c9` -> `7a8d24d` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `7a0ea98` -> `b465da2` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `1d60b63` -> `0f8ab88` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `4c08d48` -> `4fb9b39` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `3be2e9d` -> `aa6288f` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `1771a53` -> `1f033b7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29026","RelatedDescription":"Open PR \"build: update angular\" (#29026)"},{"Id":"2714105318","IsPullRequest":true,"CreatedAt":"2024-12-03T07:36:15","Actor":"angular-robot","Number":"29020","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `40e9067` -> `4ccc958` |\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a35ad7f` -> `499c0a0` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `3692c15` -> `48d9256` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `01e5335` -> `16fd33c` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `d869443` -> `b6cb67f` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `a0c6ea9` -> `d2aa18c` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `3f88d7d` -> `de56138` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `2f66946` -> `1ae0570` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `f5d47dd` -> `5516980` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `f2e9ef2` -> `66575c9` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `5db7aa2` -> `e5885cd` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `80c8de4` -> `b396e3c` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `dde9fb8` -> `5791633` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `d4d0cda` -> `7a0ea98` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `83a577b` -> `1d60b63` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `56c6522` -> `4c08d48` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `95b1122` -> `3be2e9d` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `ad2cb47` -> `1771a53` |\n| angular/dev-infra | action | digest | `9ad44d7` -> `d4ffcd6` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29020","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29020)"},{"Id":"2714105674","IsPullRequest":true,"CreatedAt":"2024-12-03T07:35:22","Actor":"angular-robot","Number":"29021","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.16.0` -> `8.17.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.16.0/8.17.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.16.0` -> `8.17.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.16.0/8.17.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://redirect.github.com/jasmine/jasmine)) | devDependencies | minor | [`~5.4.0` -> `~5.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/5.4.0/5.5.0) |\n| [sass](https://redirect.github.com/sass/dart-sass) | dependencies | patch | [`1.81.0` -> `1.81.1`](https://renovatebot.com/diffs/npm/sass/1.81.0/1.81.1) |\n| [sass](https://redirect.github.com/sass/dart-sass) | devDependencies | patch | [`1.81.0` -> `1.81.1`](https://renovatebot.com/diffs/npm/sass/1.81.0/1.81.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.17.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8170-2024-12-02)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.16.0...v8.17.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[prefer-promise-reject-errors] options to allow any and unknown ([#&#8203;10392](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10392))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[promise-function-async] handle function overloading ([#&#8203;10304](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10304))\n-   **eslint-plugin:** remove references to \"extendDefaults\" in no-restricted-types ([#&#8203;10401](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10401))\n-   **eslint-plugin:** \\[no-unnecessary-template-expressions] allow template expressions used to make trailing whitespace visible ([#&#8203;10363](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10363))\n\n##### ❤️  Thank You\n\n-   Kim OhSeong [@&#8203;bkks1004](https://redirect.github.com/bkks1004)\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   Maria José Solano [@&#8203;MariaSolOs](https://redirect.github.com/MariaSolOs)\n-   Ronen Amiel\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.17.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8170-2024-12-02)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.16.0...v8.17.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>jasmine/jasmine (jasmine-core)</summary>\n\n### [`v5.5.0`](https://redirect.github.com/jasmine/jasmine/releases/tag/v5.5.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine/compare/v5.4.0...v5.5.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine/blob/main/release_notes/5.5.0.md).\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.81.1`](https://redirect.github.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1811)\n\n[Compare Source](https://redirect.github.com/sass/dart-sass/compare/1.81.0...1.81.1)\n\n-   No user-visible changes.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29021","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29021)"},{"Id":"2712909005","IsPullRequest":true,"CreatedAt":"2024-12-03T07:34:52","Actor":"josephperrott","Number":"29015","RawContent":null,"Title":"CI: run perf tests for releasable branches and disable the angular-build-integration perf workflow tests","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29015","RelatedDescription":"Closed or merged PR \"CI: run perf tests for releasable branches and disable the angular-build-integration perf workflow tests\" (#29015)"},{"Id":"2712919833","IsPullRequest":true,"CreatedAt":"2024-12-03T07:34:42","Actor":"josephperrott","Number":"29016","RawContent":null,"Title":"ci: run workflows for all releasable branches","State":"closed","Body":"Patch for #29015","Url":"https://github.com/angular/angular-cli/pull/29016","RelatedDescription":"Closed or merged PR \"ci: run workflows for all releasable branches\" (#29016)"},{"Id":"2714184507","IsPullRequest":true,"CreatedAt":"2024-12-03T07:34:23","Actor":"angular-robot","Number":"29023","RawContent":null,"Title":"build: update schematics dependencies to ~5.5.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine](http://jasmine.github.io/) ([source](https://redirect.github.com/jasmine/jasmine-npm)) | devDependencies | minor | [`~5.4.0` -> `~5.5.0`](https://renovatebot.com/diffs/npm/jasmine/5.4.0/5.5.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://redirect.github.com/jasmine/jasmine)) | dependencies | minor | [`~5.4.0` -> `~5.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/5.4.0/5.5.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine-npm (jasmine)</summary>\n\n### [`v5.5.0`](https://redirect.github.com/jasmine/jasmine-npm/releases/tag/v5.5.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine-npm/compare/v5.4.0...v5.5.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine-npm/blob/main/release_notes/5.5.0.md).\n\n</details>\n\n<details>\n<summary>jasmine/jasmine (jasmine-core)</summary>\n\n### [`v5.5.0`](https://redirect.github.com/jasmine/jasmine/releases/tag/v5.5.0)\n\n[Compare Source](https://redirect.github.com/jasmine/jasmine/compare/v5.4.0...v5.5.0)\n\nPlease see the [release notes](https://redirect.github.com/jasmine/jasmine/blob/main/release_notes/5.5.0.md).\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40NS4wIiwidXBkYXRlZEluVmVyIjoiMzkuNDUuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29023","RelatedDescription":"Closed or merged PR \"build: update schematics dependencies to ~5.5.0\" (#29023)"},{"Id":"2706756529","IsPullRequest":false,"CreatedAt":"2024-12-03T07:33:49","Actor":"vikaspotluri123","Number":"29002","RawContent":null,"Title":"[esbuild] `define`s do not apply to all compilation scopes","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n[Defines](https://angular.dev/tools/cli/build-system-migration#build-time-value-replacement-define) are only applied to the `main` esbuild compilation and not others, like `global scripts`.\n\nNote: Happy to try to fix this if this is indeed a bug.\n\n\nRelated issue:\n - https://github.com/angular/angular/issues/51175 - I was trying to work around `ngDevMode` not being applied to global scripts since it's private \n\n### Minimal Reproduction\n\n```bash\n# Create a new project. Use the default values.\nnpx @angular/cli new no_define\ncd no_define\n\n# USER: Download the patch (below) to `patch`\ngit apply < patch\n\n$ yarn build --configuration development\n[...]\n\n# My comments are prefixed with `###`\n$ grep -B1 -r REPRO dist/*/browser/*.js\ndist/no_define/browser/main.js-if (true) {\n### Expected: REPRO got replaced with `true` in development (no optimization)\ndist/no_define/browser/main.js:  console.log(\"MAIN_REPRO\");\n--\ndist/no_define/browser/scripts.js:if (REPRO) {\n### Unexpected: REPRO is undefined in the global scope and should be `true` (like main.js)\ndist/no_define/browser/scripts.js:  console.log(\"SCRIPT_REPRO\");\n\n$ yarn build\n[...]\n\n$ grep -B1 -r REPRO dist/*/browser/*.js\ndist/no_define/browser/scripts-VXXF5WSM.js:REPRO&&console.log(\"SCRIPT_REPRO\");\n### Unexpected: REPRO is undefined in the global scope and the statement was not fully optimized\n```\n\n<details>\n<summary> Patch to apply </summary>\n\n```patch\ndiff --git a/angular.json b/angular.json\nindex 97abfc6..aab5772 100644\n--- a/angular.json\n+++ b/angular.json\n@@ -29,7 +29,10 @@\n             \"styles\": [\n               \"src/styles.css\"\n             ],\n-            \"scripts\": []\n+            \"scripts\": [\"src/repro.js\"],\n+            \"define\": {\n+              \"REPRO\": \"true\"\n+            }\n           },\n           \"configurations\": {\n             \"production\": {\n@@ -45,7 +48,10 @@\n                   \"maximumError\": \"8kB\"\n                 }\n               ],\n-              \"outputHashing\": \"all\"\n+              \"outputHashing\": \"all\",\n+             \"define\": {\n+                     \"REPRO\": \"false\"\n+             }\n             },\n             \"development\": {\n               \"optimization\": false,\ndiff --git a/src/main.ts b/src/main.ts\nindex 35b00f3..8e77aac 100644\n--- a/src/main.ts\n+++ b/src/main.ts\n@@ -2,5 +2,10 @@ import { bootstrapApplication } from '@angular/platform-browser';\n import { appConfig } from './app/app.config';\n import { AppComponent } from './app/app.component';\n\n+// @ts-expect-error\n+if (REPRO) {\n+       console.log('MAIN_REPRO');\n+}\n+\n bootstrapApplication(AppComponent, appConfig)\n   .catch((err) => console.error(err));\ndiff --git a/src/repro.js b/src/repro.js\nnew file mode 100644\nindex 0000000..1062bc6\n--- /dev/null\n+++ b/src/repro.js\n@@ -0,0 +1,3 @@\n+if (REPRO) {\n+       console.log('SCRIPT_REPRO');\n+}\n```\n\n\n</details>\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n$ ng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.2\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29002","RelatedDescription":"Closed issue \"[esbuild] `define`s do not apply to all compilation scopes\" (#29002)"},{"Id":"2713622407","IsPullRequest":true,"CreatedAt":"2024-12-03T07:33:48","Actor":"clydin","Number":"29018","RawContent":null,"Title":"fix(@angular/build): apply define option to JavaScript from scripts option","State":"closed","Body":"The `define` option will now apply to JavaScript that is included in the output via the `scripts` option.  This allows the replacement of identifiers within any included scripts in addition to the already supported replacement within application code.\r\n\r\nCloses #29002","Url":"https://github.com/angular/angular-cli/pull/29018","RelatedDescription":"Closed or merged PR \"fix(@angular/build): apply define option to JavaScript from scripts option\" (#29018)"},{"Id":"2714134424","IsPullRequest":false,"CreatedAt":"2024-12-03T07:13:46","Actor":"apappas1129","Number":"29022","RawContent":null,"Title":"Angular 19 `CommonEngine` causes an error `ENOENT: no such file or directory ... vite-root/<project>/index.server.html`","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe scaffolding for Angular 19's `server.ts` uses the new `AngularNodeAppEngine`  which unlike `CommonEngine`, does not expose a way to add `providers` albeit not working as intended on Angular 18 for `ng serve` (Refer to this [issue](https://github.com/angular/angular-cli/issues/26323)).\n\nI have modified the new default `server.ts` to retain the new more \"modular\" approach and still use the the `createNodeRequestHandler` which I believe is required for the `dev-server` to pass the `isSsrNodeRequestHandler(reqHandler)` condition. \n\nHere is the `server.ts` with the rest of the project built with the default/scaffolding of `ng new`:\n```typescript\nimport { APP_BASE_HREF } from '@angular/common';\nimport { CommonEngine, createNodeRequestHandler, isMainModule } from '@angular/ssr/node';\nimport { REQUEST as SSR_REQUEST } from 'ngx-cookie-service-ssr';\nimport express from 'express';\nimport { fileURLToPath } from 'node:url';\nimport { dirname, join, resolve } from 'node:path';\nimport bootstrap from './src/main.server';\n\nconsole.log('RUNNING server.ts')\n\nconst serverDistFolder = dirname(fileURLToPath(import.meta.url));\nconst browserDistFolder = resolve(serverDistFolder, '../browser');\nconst indexHtml = join(serverDistFolder, 'index.server.html');\n\nconst app = express();\nconst commonEngine = new CommonEngine();\n\n/**\n * Example Express Rest API endpoints can be defined here.\n * Uncomment and define endpoints as necessary.\n *\n * Example:\n * ```ts\n * app.get('/api/**', (req, res) => {\n *   // Handle API request\n * });\n * ```\n */\n\napp.get('/api/**', (req, res) => {\n  console.log('API CALLED', req.originalUrl);\n  res.end(JSON.stringify({ status: 'success' }));\n});\n\n/**\n * Serve static files from /browser\n */\napp.get(\n  '**',\n  express.static(browserDistFolder, {\n    maxAge: '1y',\n    index: 'index.html'\n  }),\n);\n\n/**\n * Handle all other requests by rendering the Angular application.\n */\napp.get('**', (req, res, next) => {\n  const { protocol, originalUrl, baseUrl, headers } = req;\n\n  commonEngine\n    .render({\n      bootstrap,\n      documentFilePath: indexHtml,\n      url: `${protocol}://${headers.host}${originalUrl}`,\n      publicPath: browserDistFolder,\n      providers: [\n        { provide: APP_BASE_HREF, useValue: baseUrl },\n        // BUG: https://github.com/stevermeister/ngx-cookie-service/issues/326\n        // https://github.com/stevermeister/ngx-cookie-service?tab=readme-ov-file#server-side-rendering\n        { provide: SSR_REQUEST, useValue: req },\n        { provide: 'REQUEST', useValue: req },\n        { provide: 'RESPONSE', useValue: res },\n        { provide: 'TEST', useValue: 'TEST VALUE' },\n      ],\n    })\n    .then((html) => res.send(html))\n    .catch((err) => next(err));\n});\n\n/**\n * Start the server if this module is the main entry point.\n * The server listens on the port defined by the `PORT` environment variable, or defaults to 4000.\n */\nif (isMainModule(import.meta.url)) {\n  const port = process.env['PORT'] || 4000;\n  app.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\n\nexport const reqHandler = createNodeRequestHandler(app);\n```\n\n### Why?\nI need to add custom providers from express server downstream to the angular app. I also believe there is an [issue](https://stackoverflow.com/questions/79246059/angular-19-request-is-null-on-server-runtime-even-with-rendermode-server-and?noredirect=1#comment139740641_79246059) with new `REQUEST` injection in Angular 19 so I had to do it myself.\n\n\n### Please provide the exception or error you saw\n\n```true\nENOENT: no such file or directory, open 'C:\\Users\\...my-app\\.angular\\vite-root\\extel-website-ii-research\\index.server.html'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 18.19.0\nPackage Manager: npm 10.8.1\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@angular/ssr                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29022","RelatedDescription":"Closed issue \"Angular 19 `CommonEngine` causes an error `ENOENT: no such file or directory ... vite-root/<project>/index.server.html`\" (#29022)"},{"Id":"2713651114","IsPullRequest":false,"CreatedAt":"2024-12-03T00:03:37","Actor":"demensky","Number":"29019","RawContent":null,"Title":"Ability to manually specify locale in SSR","State":"open","Body":"### Command\n\nextract-i18n\n\n### Description\n\nThere is no way to specify locale in [`AngularAppEngine#handle`](https://github.com/angular/angular-cli/blob/19.0.0/packages/angular/ssr/src/app-engine.ts#L65-L69) based on [`Accept-Language`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language), [`Cookie`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cookie), etc. The current implementation of [`AngularAppEngine`](https://github.com/angular/angular-cli/blob/19.0.0/packages/angular/ssr/src/app-engine.ts#L24) chooses locale based on URL.\n\n### Describe the solution you'd like\n\nAbility to specify an array of locales when calling `handle`:\n\n```diff\n app.use('/**', (req, res, next) => {\n   angularApp\n-    .handle(req)\n+    .handle(req, undefined, { locales: req.acceptsLanguages() })\n     .then((response) =>\n       response ? writeResponseToNodeResponse(response, res) : next(),\n     )\n```\n\nAs far as I understand, this will also require removing the locale prefix from `<base href=\"…\"/>`.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29019","RelatedDescription":"Open issue \"Ability to manually specify locale in SSR\" (#29019)"},{"Id":"2712408595","IsPullRequest":false,"CreatedAt":"2024-12-02T15:49:14","Actor":"lukimil","Number":"29014","RawContent":null,"Title":"add `sass` to `stylePreprocessorOptions` in  `browser-esbuild` for V19","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nRelated changes for `application` builder is added, but missing for other builders that allow to configure `sass`  \n\nhttps://github.com/angular/angular-cli/pull/28627\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29014","RelatedDescription":"Closed issue \"add `sass` to `stylePreprocessorOptions` in  `browser-esbuild` for V19\" (#29014)"},{"Id":"2712350071","IsPullRequest":true,"CreatedAt":"2024-12-02T15:37:09","Actor":"devversion","Number":"29013","RawContent":null,"Title":"[19.0.x] Patch port of `rules_js` migration","State":"open","Body":"Patch port of #28957","Url":"https://github.com/angular/angular-cli/pull/29013","RelatedDescription":"Open PR \"[19.0.x] Patch port of `rules_js` migration\" (#29013)"},{"Id":"2712179693","IsPullRequest":true,"CreatedAt":"2024-12-02T14:42:43","Actor":"alan-agius4","Number":"29011","RawContent":null,"Title":"feat(@angular/build): add support for customizing URL segments with i18n","State":"open","Body":"Previously, the `baseHref` option under each locale allowed for generating a unique base href for specific locales. However, users were still required to handle file organization manually, and `baseHref` appeared to be primarily designed for this purpose.\r\n\r\nThis commit introduces a new `urlSegment` option, which simplifies the i18n process, particularly in static site generation (SSG) and server-side rendering (SSR). When the `urlSegment` option is used, the `baseHref` is ignored. Instead, the `urlSegment` serves as both the base href and the name of the directory containing the localized version of the app.\r\n\r\n### Configuration Example\r\n\r\nBelow is an example configuration showcasing the use of `urlSegment`:\r\n\r\n```json\r\n\"i18n\": {\r\n  \"sourceLocale\": {\r\n    \"code\": \"en-US\",\r\n    \"urlSegment\": \"\"\r\n  },\r\n  \"locales\": {\r\n    \"fr-BE\": {\r\n      \"urlSegment\": \"fr\",\r\n      \"translation\": \"src/i18n/messages.fr-BE.xlf\"\r\n    },\r\n    \"de-BE\": {\r\n      \"urlSegment\": \"de\",\r\n      \"translation\": \"src/i18n/messages.de-BE.xlf\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Example Directory Structure\r\n\r\nThe following tree structure demonstrates how the `urlSegment` organizes localized build output:\r\n```\r\ndist/\r\n├── app/\r\n│   └── browser/  # Default locale, accessible at `/`\r\n│       ├── fr/  # Locale for `fr-BE`, accessible at `/fr`\r\n│       └── de/  # Locale for `de-BE`, accessible at `/de`\r\n```\r\nCloses #16997 and closes #28967\r\n","Url":"https://github.com/angular/angular-cli/pull/29011","RelatedDescription":"Open PR \"feat(@angular/build): add support for customizing URL segments with i18n\" (#29011)"},{"Id":"2711828727","IsPullRequest":true,"CreatedAt":"2024-12-02T14:31:39","Actor":"alan-agius4","Number":"29010","RawContent":null,"Title":"build: update dependency tar to v7","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29010","RelatedDescription":"Closed or merged PR \"build: update dependency tar to v7\" (#29010)"},{"Id":"2711002355","IsPullRequest":true,"CreatedAt":"2024-12-02T12:12:00","Actor":"alan-agius4","Number":"29007","RawContent":null,"Title":"Update peer deps angular 19.1","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29007","RelatedDescription":"Closed or merged PR \"Update peer deps angular 19.1\" (#29007)"},{"Id":"2709591166","IsPullRequest":false,"CreatedAt":"2024-12-02T11:02:02","Actor":"e-oz","Number":"29005","RawContent":null,"Title":"Please make timeout configurable in render-worker.ts","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nDuring pre-rendering, if we need to prerender multiple routes (like 36 routes), pre-rendering fails by timeout.\nIf I manually modify the timeout in [this file](https://github.com/angular/angular-cli/blob/aed726fca318b9aa8f8d52d7915d1da93eff3217/packages/angular/build/src/utils/server-rendering/render-worker.ts#L48), it works fine.\nYes, it takes time, but it is important to pre-render them all for us.\n\n### Describe the solution you'd like\n\nPlease add an option to `angular.json` configuration (or some flag, although an option would be much better - fewer dances with builders).\n\n### Describe alternatives you've considered\n\nThe only alternative right now is to limit the amount of pre-rendered routes.","Url":"https://github.com/angular/angular-cli/issues/29005","RelatedDescription":"Closed issue \"Please make timeout configurable in render-worker.ts\" (#29005)"},{"Id":"2709503592","IsPullRequest":true,"CreatedAt":"2024-12-02T09:19:06","Actor":"guiseek","Number":"29004","RawContent":null,"Title":"refactor(@schematics/angular): add required type to CanDeactivate guard","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29004","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): add required type to CanDeactivate guard\" (#29004)"},{"Id":"2708827978","IsPullRequest":false,"CreatedAt":"2024-12-01T08:54:18","Actor":"chihab","Number":"29003","RawContent":null,"Title":"Define, webpack transforms and esbuild plugins are not supported in v19 Karma Buillder","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv18\n\n### Description\n\nThere is no way to pass in webpack transforms or esbuild plugins or define to the internal Angular builders used in Karma.\n\n### Browser builder\nWhen using webpack (browser) builder, webpack transforms are ignored:\nhttps://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/karma/browser_builder.ts#L37\n\nI guess they should be passed in as a third parameter to [initializeBrowser](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/karma/browser_builder.ts#L114)\n\nas it used to be passed in in v18 here https://github.com/angular/angular-cli/blob/18.2.x/packages/angular_devkit/build_angular/src/builders/karma/index.ts#L87\n\n\n### Application builder\nWhen using the newly supported esbuild builder in Karma, esbuild `plugins` and `define` are not supported \nDefine option is not supported in Karma builder (neither exposed in the builder schema nor in the builder api)\nhttps://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/builders/karma/application_builder.ts#L354\n\nRegarding the application I am not sure whether it is a feature request or a bug as the application builder support is new. \n\nQuestion: why are we using an internal builder with a closed configuration rather than using  the one defined in angular.json by the user?\n\n### Minimal Reproduction\n\n### Browser builder\n\n```ts\nreturn executeKarmaBuilder(options, context, {\n  webpackConfiguration: (webpackConfig) => {\n    console.log(\"webpackConfig\", webpackConfig);\n    return webpackConfig;\n  },\n});\n```\n\n### Application builder\n\n```json\n\"test\": {\n  \"builder\": \"@angular-devkit/build-angular:karma\",\n  \"options\": {\n    \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n    \"tsConfig\": \"tsconfig.spec.json\",\n    \"assets\": [\n      {\n        \"glob\": \"**/*\",\n        \"input\": \"public\"\n      }\n    ],\n    \"define\": {\n      \"ENV_MESSAGE\": \"'Hello from Angular 9'\"\n    },\n    \"styles\": [\"src/styles.css\"],\n    \"scripts\": []\n  }\n}\n```\n\n```\n> ng-app19@0.0.0 test\n> ng test\n\nError: Schema validation failed with the following errors:\n  Data path \"\" must NOT have additional properties(define).\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.0\nNode: 20.13.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, localize, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0\n@angular-devkit/build-angular   19.0.0\n@angular-devkit/core            19.0.0\n@angular-devkit/schematics      19.0.0\n@schematics/angular             19.0.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n","Url":"https://github.com/angular/angular-cli/issues/29003","RelatedDescription":"Open issue \"Define, webpack transforms and esbuild plugins are not supported in v19 Karma Buillder\" (#29003)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2716236072","IsPullRequest":false,"CreatedAt":"2024-12-03T23:48:14","Actor":"erikrestificar","Number":"30124","RawContent":null,"Title":"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatPaginator should not be able to move to previous or next pages if disabled\n\nBreaking change: https://github.com/angular/components/pull/29379\n\n### Reproduction\n\n1) Go to [MatPaginator Demo](https://material.angular.io/components/paginator/examples)\n2) Select disabled\n3) Click next page button\n\n### Expected Behavior\n\nClicking next page should have no effect because its disabled\n\n### Actual Behavior\n\nUser is able to go to next page\n\n### Environment\n\nAny environment","Url":"https://github.com/angular/components/issues/30124","RelatedDescription":"Open issue \"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled\" (#30124)"},{"Id":"2715554931","IsPullRequest":false,"CreatedAt":"2024-12-03T17:03:11","Actor":"Ktojan","Number":"30123","RawContent":null,"Title":"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version","State":"open","Body":"### Documentation Feedback\n\nJust found a bug on 19v due to the newly added tab Styling.\n\n**STR:**\n\n1. Open version 19.0.1. (or >19 in future)\n2. Go to any component's page --> Styling tab (e.g. https://material.angular.io/components/grid-list/styling )\n3. Toggle to any previous version of doc\n\nBUG: 404 error \"Page Not Found\" \n\nProposition: Implement switching to Overview Tab\n\n### Affected documentation page\n\nhttps://material.angular.io/components/grid-list/styling","Url":"https://github.com/angular/components/issues/30123","RelatedDescription":"Open issue \"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version\" (#30123)"},{"Id":"2715312411","IsPullRequest":false,"CreatedAt":"2024-12-03T15:18:10","Actor":"marjoleinveenendaal","Number":"30122","RawContent":null,"Title":"docs-bug(Form Field): Section references deprecated object","State":"open","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol\n\nThis section references `mat-chip-list`, that has been deprecated since v17: https://v17.material.angular.io/guide/mdc-migration#chips\n\n### Affected documentation page\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol","Url":"https://github.com/angular/components/issues/30122","RelatedDescription":"Open issue \"docs-bug(Form Field): Section references deprecated object\" (#30122)"},{"Id":"2714304616","IsPullRequest":true,"CreatedAt":"2024-12-03T08:18:06","Actor":"crisbeto","Number":"30121","RawContent":null,"Title":"fix(material/tabs): ink bar not showing when same tab is re-selected","State":"open","Body":"Fixes that if a tab is active, it gets cleared and the re-selected, the ink bar wasn't showing up.\r\n\r\nFixes #30036.","Url":"https://github.com/angular/components/pull/30121","RelatedDescription":"Open PR \"fix(material/tabs): ink bar not showing when same tab is re-selected\" (#30121)"},{"Id":"2708941881","IsPullRequest":false,"CreatedAt":"2024-12-03T07:19:28","Actor":"xylplm","Number":"30111","RawContent":null,"Title":"bug(COMPONENT): cdkDragHandle not work in mat-table td","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy table rows can be dragged. But I don't want the entire row to trigger dragging. Use cdkDragHandle to specify a drag button on td to achieve row dragging.\nBut cdkDragHandle did not take effect, and now the entire row can still trigger dragging。\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/w368zz?file=src%2Fexample%2Ftable-basic-example.html\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nOnly buttons can be dragged, other positions in the row cannot be dragged\n\n### Actual Behavior\n\nBoth rows and buttons can trigger dragging\n\n### Environment\n\n- Angular:18/19\n- CDK/Material:18/19\n- Browser(s):edge\n- Operating System (e.g. Windows, macOS, Ubuntu):win11\n","Url":"https://github.com/angular/components/issues/30111","RelatedDescription":"Closed issue \"bug(COMPONENT): cdkDragHandle not work in mat-table td\" (#30111)"},{"Id":"2707299905","IsPullRequest":true,"CreatedAt":"2024-12-03T06:23:10","Actor":"andgdk","Number":"30109","RawContent":null,"Title":"docs: remove duplicated tabs example","State":"closed","Body":"This PR drops a duplicated example.\r\n\r\nThe tab-group-inverted-example is removed in favor of the identical tab-group-header-below example. Remaining consistent with the allowed inputs for `headerPosition` (`above || below`)","Url":"https://github.com/angular/components/pull/30109","RelatedDescription":"Closed or merged PR \"docs: remove duplicated tabs example\" (#30109)"},{"Id":"2713492722","IsPullRequest":true,"CreatedAt":"2024-12-02T22:03:41","Actor":"kseamon","Number":"30120","RawContent":null,"Title":"feat(material-experimental/column-resize): Add support for \"lazy\" rat…","State":"open","Body":"…her than live updating during resizing.\r\n\r\nFor complex tables, live resizing is laggy and difficult to use. Keeping the current behavior as default, but we may want to revisit that going forward.","Url":"https://github.com/angular/components/pull/30120","RelatedDescription":"Open PR \"feat(material-experimental/column-resize): Add support for \"lazy\" rat…\" (#30120)"},{"Id":"2711341115","IsPullRequest":false,"CreatedAt":"2024-12-02T18:20:39","Actor":"Raphyyy","Number":"30115","RawContent":null,"Title":"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nWhile performing the update migration from Angular Material v18 to v19 I am running through an error that I am not capable to debug : \n```\n> ng update @angular/material --from 18 --to 19 --migrate-only\nUsing package manager: npm\nCollecting installed dependencies...\nFound 97 dependencies.\n** Executing migrations of package '@angular/material' **\n\n❯ Updates Angular Material to v19.\n✖ Migration failed: <css input>:73:2: Unclosed string\n  See \"C:\\Users\\Raphael\\AppData\\Local\\Temp\\ng-ZlQfqb\\angular-errors.log\" for further details.\n```\n\nThe `angular-errors.log` file :\n```\n[error] CssSyntaxError: <css input>:73:2: Unclosed string\n    at Input.error (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:4080:20)\n    at unclosed (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6770:21)\n    at Object.nextToken (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6883:17)\n    at ScssParser.other (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5625:34)\n    at ScssParser.parse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5669:20)\n    at scssParse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7199:14)\n    at new LazyResult (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5952:20)\n    at Processor.process (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6487:18)\n    at MatCoreMigration2.visitStylesheet (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7242:19)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:51\n    at Array.forEach (<anonymous>)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:36\n    at Array.forEach (<anonymous>)\n    at UpdateProject.migrate (\\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:124:39)\n    at runMigrations (\\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:121:42)\n    at \\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:84:17\n```\n\nI removed any sass deprecated usage\n\n### Minimal Reproduction\n\nng update @angular/material --from 18 --to 19 --migrate-only\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: npm 8.18.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, material\n... material-date-fns-adapter, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            6.5.5\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n`ng build` doesn't produce any error.","Url":"https://github.com/angular/components/issues/30115","RelatedDescription":"Closed issue \"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19\" (#30115)"},{"Id":"2711434029","IsPullRequest":true,"CreatedAt":"2024-12-02T18:20:37","Actor":"crisbeto","Number":"30116","RawContent":null,"Title":"mat.core migration fixes","State":"closed","Body":"Includes the following fixes for the `mat.core` migration:\r\n\r\n### fix(material/schematics): error if stylesheet contains syntax errors \r\nFixes that the `mat.core` migration was breaking the whole update process if a stylesheet has syntax errors.\r\n\r\n### fix(material/schematics): avoid parsing stylesheets that don't include Material\r\n\r\nAdds a check in the `mat.core` migration so that it avoids parsing stylesheets that don't contain `@angular/material` altogether. This both makes the schematic faster and avoids potential issues for stylesheets we don't care about.\r\n\r\nFixes #30115.","Url":"https://github.com/angular/components/pull/30116","RelatedDescription":"Closed or merged PR \"mat.core migration fixes\" (#30116)"},{"Id":"2712614827","IsPullRequest":true,"CreatedAt":"2024-12-02T16:50:12","Actor":"crisbeto","Number":"30119","RawContent":null,"Title":"fix(material/expansion): switch away from animations module","State":"open","Body":"Reworks the expansion panel to animate purely with CSS, rather than going through the `@angular/animations` module. This simplifies the setup and allows us to resolve several long-standing bug reports.","Url":"https://github.com/angular/components/pull/30119","RelatedDescription":"Open PR \"fix(material/expansion): switch away from animations module\" (#30119)"},{"Id":"2705191682","IsPullRequest":false,"CreatedAt":"2024-12-02T13:47:47","Actor":"Parnavs","Number":"30104","RawContent":null,"Title":"bug(MatSlideToggle): Design styling tokens don't properly override the theme","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've added some styling to the MatSlideToggle component using the design tokens from the documentation, but some of them seem not to work. They get ignored because of the theme. It seems like they have a lower specificity. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-i9rg73?file=angular.json\nSteps to reproduce:\n1. Have the azure-blue theme installed\n1. Override the styling using the mixin from angular documentation \n2. Some styling get's striked through in favor of the azure blue theme\n3. ![Image](https://github.com/user-attachments/assets/c3f88cdd-4f7c-44a4-a3d6-8d2b48a7ae84)\n\n\n### Expected Behavior\n\nI'm expecting that the mixin would be enough to override as they work for the other tokens\n\n### Actual Behavior\n\nThe styling gets ignored in favor of the theme's styling\n\n### Environment\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.10\n@angular-devkit/build-angular   18.2.10\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/cdk                    18.2.10\n@angular/cli                    18.2.10\n@angular/material               18.2.10\n@schematics/angular             18.2.10\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n\nChrome, Windows","Url":"https://github.com/angular/components/issues/30104","RelatedDescription":"Closed issue \"bug(MatSlideToggle): Design styling tokens don't properly override the theme\" (#30104)"},{"Id":"2705538477","IsPullRequest":false,"CreatedAt":"2024-12-02T13:20:39","Actor":"KamranSohail619","Number":"30106","RawContent":null,"Title":"Unexpected Numbers Displayed in Angular Material Datepicker Calendar","State":"closed","Body":"\n### Description\n\nI am using Angular Material's mat-datepicker in my Angular project. The datepicker UI is displaying incorrect numbers instead of proper dates (see screenshot). I want to show a proper calendar for date selection. \nNote: I have already imported all the required Angular Material modules, including MatDatepickerModule, MatInputModule, and MatNativeDateModule,\n\nHere's the relevant code snippet:\n<mat-form-field>\n  <mat-label>Choose a To date</mat-label>\n  <input\n    matInput\n    readonly\n    [min]=\"selectedFromDate\"\n    [matDatepicker]=\"ToDatepicker\"\n    [(ngModel)]=\"selectedToDate\"\n    (dateChange)=\"onDateChange($event.value, 'addedon', 'lte')\"\n    placeholder=\"MM/DD/YYYY\"\n  />\n  <mat-icon matSuffix [for]=\"ToDatepicker\">event</mat-icon>\n  <mat-datepicker #ToDatepicker></mat-datepicker>\n</mat-form-field>\n\n![Image](https://github.com/user-attachments/assets/f9a03e85-5c90-40c2-a19c-784b4776e86e)\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\n![Image](https://github.com/user-attachments/assets/034ce39f-9907-4051-b244-e17c78fd559d)\n\n\n### Actual Behavior\n\n![Image](https://github.com/user-attachments/assets/1053c293-2c6d-4f6a-a33f-810ec8993fbd)\n\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30106","RelatedDescription":"Closed issue \"Unexpected Numbers Displayed in Angular Material Datepicker Calendar\" (#30106)"},{"Id":"2711662962","IsPullRequest":true,"CreatedAt":"2024-12-02T12:53:08","Actor":"crisbeto","Number":"30117","RawContent":null,"Title":"build: run unit tests against newer version of iOS","State":"closed","Body":"Updates the unit tests to run against iOS 18 in an attempt to make them more stable.","Url":"https://github.com/angular/components/pull/30117","RelatedDescription":"Closed or merged PR \"build: run unit tests against newer version of iOS\" (#30117)"},{"Id":"2711770891","IsPullRequest":false,"CreatedAt":"2024-12-02T12:31:07","Actor":"VeroNemo","Number":"30118","RawContent":null,"Title":"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen applying custom density (via a custom CSS class) using Angular Material Theme API directly to Angular Material button (e.g., mat-flat-button, mat-stroked-button), the height is adjusted as expected. However, when the custom density context (the same CSS class as for mat-stroked-button etc) is applied directly to a button mat-icon-button, the size of it remains unchanged. The density changes are only applied if the mat-icon-button is wrapped in an element with the density class.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/sb1-41rfph?file=src%2Fapp%2Fapp.component.scss\nStackOverflow link: https://stackoverflow.com/questions/79227144/mat-icon-button-needs-to-be-wrapped-to-apply-density\n\nSteps to reproduce:\n1. Create css class:\n   `.ui-high-density {\n   @include mat.icon-button-density(-2);\n    }`\n\n2. Apply css class .ui-high-density to button:   \n   A. mat-flat-button\n     `<button mat-flat-button class=\"ui-high-density\">Some text</button>`\n   B. mat-icon-button\n     `<button mat-icon-button class=\"ui-high-density\">Some text</button>`\n\n### Expected Behavior\n\nThe size of height on both, mat-flat-button and mat-icon-button, will change.\n\n### Actual Behavior\n\nThe height change only on mat-flat-button and mat-icon-button stay the same. \n\nWhen I wrapped mat-icon-button into div with class ui-hight-density, the height of button changed.\n`<div class=\"ui-high-density\">`\n   `   <button mat-icon-button>`\n      `     <mat-icon>home</mat-icon>`\n   `   </button>`\n `</div>`\n\n### Environment\n\n- Angular: 18.2.11\n- CDK/Material: 18.2.13\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma \n","Url":"https://github.com/angular/components/issues/30118","RelatedDescription":"Open issue \"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density\" (#30118)"},{"Id":"2707589696","IsPullRequest":false,"CreatedAt":"2024-12-02T10:29:28","Actor":"Vagner8","Number":"30110","RawContent":null,"Title":"When switch to a mobile view the MatBottomSheetModule does not work correctly","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI happens only on the mobile view. \nWhen you clicked the edge of the MatBottomSheetModule  the whole MatBottomSheetModule is blinking.\n\n### Reproduction\n\nStackBlitz link: https://material.angular.io/components/bottom-sheet/overview\nSteps to reproduce:\n1.  Go to the link - https://material.angular.io/components/bottom-sheet/overview\n2. Switch to the mobile view\n3. Click at the edge of the MatBottomSheetModule like on the screen\n![Image](https://github.com/user-attachments/assets/0e669caa-b739-43d9-a2f1-d1561aefba4d)\n![Image](https://github.com/user-attachments/assets/ff3e1c45-6096-4f25-9347-0e2af56b2a29)\n\n\n\n\n### Expected Behavior\n\nthe MatBottomSheetModule does not blink\n\n### Actual Behavior\n\nthe MatBottomSheetModule is blinking\n\n### Environment\n\n- Angular: 18.2.11\n- CDK/Material: 18.2.14\n- Browser(s): Chrom\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows![Image](https://github.com/user-attachments/assets/dc315ea7-f608-4c1c-af7c-a32e4e24380d)\n\n","Url":"https://github.com/angular/components/issues/30110","RelatedDescription":"Closed issue \"When switch to a mobile view the MatBottomSheetModule does not work correctly\" (#30110)"},{"Id":"2705207813","IsPullRequest":false,"CreatedAt":"2024-12-02T10:27:31","Actor":"97fwqf5z","Number":"30105","RawContent":null,"Title":"feat(timepicker): Timepicker and Datepicker Components Inconsistent Dialog Behavior","State":"closed","Body":"### Feature Description\n\nThe timepicker component opens a dialog when you click on either the toggle button or the input field.\nhttps://material.angular.io/components/timepicker/overview\n\nThe datepicker component opens a dialog only when you click on the toggle button.\nhttps://material.angular.io/components/datepicker/overview\n\nThat is an inconsistency.\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30105","RelatedDescription":"Closed issue \"feat(timepicker): Timepicker and Datepicker Components Inconsistent Dialog Behavior\" (#30105)"},{"Id":"2711158118","IsPullRequest":false,"CreatedAt":"2024-12-02T10:25:31","Actor":"kai1992cool","Number":"30114","RawContent":null,"Title":"CALENDAR: start view month is not working","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Expected Behavior\n\nthe month view should be displayed\n\n### Actual Behavior\n\nthe default view is only displayed for other views it is working, month has this problem.\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material:^19.0.0\n- Browser(s): Version 131.0.6778.86 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30114","RelatedDescription":"Closed issue \"CALENDAR: start view month is not working\" (#30114)"},{"Id":"2698869065","IsPullRequest":false,"CreatedAt":"2024-12-02T07:37:42","Actor":"BojanSlavkovskii","Number":"30097","RawContent":null,"Title":"bug(Button Toggle): Template-driven form not focusable","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nUp until v18\n\n### Description\n\nOn Button Toggle, in the examples with forms, the Reactive form is working fine but the \"Template-driven form\" is not focusable, when you try to tab into it, it just skips it.\nAll buttons in there has tabindex=\"-1\" where in reactive-form only the first button has tabindex=\"0\", even without any control ( formControl or ngModel ) it works fine and tabindex on the first button is 0 (if nothing is selected).\nIf there is anything selected when using ngModel, then it works fine as the other two (with formControl and without any control).\n\nUPDATE: If there is button that reset the formControl, you also cannot access the toggle-button.\n\n### Reproduction\n\nMaterial link: https://material.angular.io/components/button-toggle/examples\nSteps to reproduce:\n1. Go to the second example.\n2. Tab into it, and try focusing the first button-toggle-group ( Template-driven form ) without pre-selecting value.\n\n\n### Expected Behavior\n\nExpected behavior is to behave as the one that has FormControl and the one that has nothing in it. It's expected the first button to be focused if value isn't selected.  \n\n### Actual Behavior\n\nButton-toggle is not focusable if there isn't any selected value like without using ngModel.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30097","RelatedDescription":"Closed issue \"bug(Button Toggle): Template-driven form not focusable\" (#30097)"},{"Id":"2704899992","IsPullRequest":true,"CreatedAt":"2024-12-02T07:37:41","Actor":"crisbeto","Number":"30103","RawContent":null,"Title":"fix(material/button-toggle): unable to tab into ngModel-based group on first render","State":"closed","Body":"Fixes an issue where the button toggle group would reset all the buttons back to `tabindex=\"-1\"` if they're all static (e.g. not in a loop) and none of them match the value.\r\n\r\nFixes #30097.","Url":"https://github.com/angular/components/pull/30103","RelatedDescription":"Closed or merged PR \"fix(material/button-toggle): unable to tab into ngModel-based group on first render\" (#30103)"},{"Id":"2710403489","IsPullRequest":false,"CreatedAt":"2024-12-02T04:16:30","Actor":"bitrxjs","Number":"30113","RawContent":null,"Title":"docs-bug(COMPONENT): Provide a way to generate prebuild different combination of theme","State":"open","Body":"### Documentation Feedback\n\nWhen looking at dist folder for M3 theme following themes are prebuilt\n\n- indigo-pink\n- deeppurple-amber\n- pink-bluegrey\n- purple-green\n- azure-blue\n- rose-red\n- cyan-orange\n- magenta-violet\n\nprovide a different way to build a different combination. For eg.\n- pink-indigo\n\n\nDirectly using\n```\nhtml {\n  @include mat.theme((\n    color: (\n      primary: mat.$pink-palette,\n      tertiary: mat.$indigo-palette,\n      theme-type: light,\n    ),\n    typography: Roboto,\n    density: 0\n  ));\n}\n```\nbreak ui on some older mobile browser due light-dark css function and using the css in angular json provides more compatibility.\n \n\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30113","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Provide a way to generate prebuild different combination of theme\" (#30113)"},{"Id":"2710269976","IsPullRequest":false,"CreatedAt":"2024-12-02T02:55:52","Actor":"yvesguilherme","Number":"30112","RawContent":null,"Title":"bug(COMPONENT): Problem with mat-select in MFE: Options not displaying correctly inside cdk-overlay-container","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nHey guys, how are you?\n\nI'm having an issue when using the mat-select component in an MFE (Micro Frontend). The MFE is loaded into a shell, which I called mfe-login.\n\nThe problem is that when selecting an item, the mat-options do not appear. They only show up when I scroll, and even then, the dropdown does not disappear properly.\n\nAs you can see in the video below, there's a white vertical bar at the top of the page, and I believe the issue is related to the cdk-overlay-container. Has anyone else faced this issue? If so, how did you fix it?\n\nI've been trying to resolve this for a few days now and even attempted adjusting the z-index, though I consider that a bad practice, and it still didn't work.\n\nAny help would be greatly appreciated!\n\nhttps://github.com/user-attachments/assets/78a9c3b5-cfbc-4f91-82b7-6eb2317f46ef\n\n\n### Reproduction\n\nUnfortunately, I am unable to create a StackBlitz reproduction of this issue due to the complexity and size of the current project. I'm not sure if StackBlitz would support all the dependencies and configurations I've used in this project. However, I can provide any additional details or code snippets to help the team reliably reproduce the issue.\n\n### Expected Behavior\n\nI expected the mat-select options to appear correctly when an item is selected. The dropdown should display the mat-options immediately without the need for scrolling, and the dropdown should close properly once an option is selected. There should be no unexpected visual artifacts, such as the white vertical bar at the top of the page.\n\n### Actual Behavior\n\nWhen selecting an item from the mat-select, the mat-options do not appear immediately. They only become visible after scrolling, and even then, the dropdown does not close properly. Additionally, a white vertical bar appears at the top of the page, which I believe is related to the cdk-overlay-container.\n\n### Environment\n\n- Angular: **18.2.0**\n- CDK/Material: **18.2.14**\n- Browser(s): \n   - **Brave** _Version 1.73.91 Chromium: 131.0.6778.85 (64-bit)_\n   - **Chrome** _Version 131.0.6778.85 (Official Build) (64-bit)_\n- Operating System (e.g. Windows, macOS, Ubuntu): **Pop!_OS 22.04 LTS**\n","Url":"https://github.com/angular/components/issues/30112","RelatedDescription":"Open issue \"bug(COMPONENT): Problem with mat-select in MFE: Options not displaying correctly inside cdk-overlay-container\" (#30112)"},{"Id":"2707259086","IsPullRequest":true,"CreatedAt":"2024-11-30T11:34:47","Actor":"Sepandard","Number":"30108","RawContent":null,"Title":"fix(material/theming): fix not found error in the guide duplicate theming styles document","State":"open","Body":"bring back the missing document\r\nresolves #30072\r\n","Url":"https://github.com/angular/components/pull/30108","RelatedDescription":"Open PR \"fix(material/theming): fix not found error in the guide duplicate theming styles document\" (#30108)"},{"Id":"2705545515","IsPullRequest":false,"CreatedAt":"2024-11-30T08:35:09","Actor":"KamranSohail619","Number":"30107","RawContent":null,"Title":"Yes, this behavior used to work in the previous version","State":"closed","Body":"","Url":"https://github.com/angular/components/issues/30107","RelatedDescription":"Closed issue \"Yes, this behavior used to work in the previous version\" (#30107)"},{"Id":"2701594919","IsPullRequest":true,"CreatedAt":"2024-11-29T09:34:31","Actor":"crisbeto","Number":"30099","RawContent":null,"Title":"fix(material/menu): remove dependency on animations module","State":"closed","Body":"Reworks the menu so it no longer depends on the animations module. This should allow us to avoid some of the pitfalls of the animations module like occasional memory leaks (e.g. #47748) and reduce the bundle size.","Url":"https://github.com/angular/components/pull/30099","RelatedDescription":"Closed or merged PR \"fix(material/menu): remove dependency on animations module\" (#30099)"},{"Id":"2703087084","IsPullRequest":false,"CreatedAt":"2024-11-28T19:25:42","Actor":"therlaup","Number":"30102","RawContent":null,"Title":"bug(mat-slider): Slider thumb cannot be moved by dragging the track on iOS","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.2.9\n\n### Description\n\nThe behavior of mat-slider components differs on iOS compared to other devices. On iOS, the thumb position is not updated when the finger touches down on the screen (i.e. \"touchstart\" event) if the track is touched. To move the thumb, a drag must start on the thumb itself. This makes it hard for users to drag the slider since they need to very precisely touch the thumb. However, if a pointer drag event starts on slider track (from a mouse or touchpad), then the thumb moves appropriately (i.e. mousedown or pointerdown event).\n\nWe've had several complains from our users on this topic and this is becoming a major issue for us. The sliders worked perfectly in version 15.\n\n### Reproduction\n\nA specific StackBlitz is not necessary as the behavor can be reproduced from https://material.angular.io/components/slider/overview\n\n\nSteps to reproduce:\n1. Use Safari or Chrome on iOS and go to: https://material.angular.io/components/slider/overview\n2. Using finger on touchscreen, drag the track of any of the sliders. The thumb does not move despite the ripple effect being triggered.\n3. Use a mouse or a touchpad to drag the track of any slider. The thumb moves with the drag.\n\n\n### Expected Behavior\n\nThe thumb position should update on touchstart event on the track. If you use v15.2.9 of the Angular material components (https://v15.material.angular.io/components/slider/overview), the dragging behavior works perfectly.\n\n### Actual Behavior\n\nOn iOS, the thumb position is not updated on touchstart event if the track is touched. To move the thumb, a drag must start on the thumb itself. \n\n### Environment\n\n- Angular: 16.0.0 to 19.0.0\n- CDK/Material: 16.0.0 to 19.0.0\n- Browser(s): Safari or Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): iOS\n","Url":"https://github.com/angular/components/issues/30102","RelatedDescription":"Open issue \"bug(mat-slider): Slider thumb cannot be moved by dragging the track on iOS\" (#30102)"},{"Id":"2701213492","IsPullRequest":false,"CreatedAt":"2024-11-28T12:06:25","Actor":"tjaz-brelih","Number":"30098","RawContent":null,"Title":"docs-bug(Ripple): Styling documentation tab doesn't load","State":"closed","Body":"### Documentation Feedback\n\nWhen navigating to the Styling tab for Ripple component the tab content only says Loading.\nHTTP request for URL `https://material.angular.io/docs-content/tokens/material/ripple/ripple.json` returns a generic Firebase \"Page Not Found\" page with HTTP status 404.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/ripple/styling","Url":"https://github.com/angular/components/issues/30098","RelatedDescription":"Closed issue \"docs-bug(Ripple): Styling documentation tab doesn't load\" (#30098)"},{"Id":"2701771848","IsPullRequest":false,"CreatedAt":"2024-11-28T11:00:10","Actor":"endlacer","Number":"30101","RawContent":null,"Title":"feat(drag-drop): New Optional Input [cdkDragStartPredicate]","State":"open","Body":"## Feature Request\n### Problem Statement\nCurrently, the CdkDrag directive doesn't provide a way to conditionally prevent drag operations from starting based on the initial mouse/touch event. This makes it impossible to implement complex drag start conditions, such as only allowing drags from specific elements or under certain event conditions.\nAdd a new input [cdkDragStartPredicate] to the CdkDrag directive that accepts a predicate function to determine whether a drag operation should start.\n### Proposed API\n```typescript\n@Input('cdkDragStartPredicate')\ndragStartPredicate: ((event: TouchEvent | MouseEvent) => boolean) | undefined;\n```\n### Example Usage\n_HTML:_\n```html\n<div cdkDrag [cdkDragStartPredicate]=\"myDragStartPredicate\">\n  Draggable content\n  <input #input>\n</div>\n```\n_component:_\n```typescript\nmyDragStartPredicate(event: TouchEvent | MouseEvent): boolean {\n  const element = event.target as HTMLElement;\n  // Check if the target or any of its parents is an input element\n  return !element.closest('input, textarea, [contenteditable=\"true\"]');\n}\n```\nSee: https://stackblitz.com/edit/wc3rt4?file=src%2Fexample%2Fcdk-drag-drop-sorting-example.css\n\n# Details\n### Benefits\n- More granular control over drag initialization\n- Better integration with custom UI patterns\n- Improved accessibility by allowing precise control over drag triggers\n- Reduced need for workarounds using multiple directives\n- \n### Implementation Notes\n- The predicate should be called before the drag sequence begins\n- Return true to allow the drag to start, false to prevent it\n- Should work with both mouse and touch events\n- Should integrate well with existing cdkDragHandle functionality\n- \n### Related Issues\nThis would also resolve this issue: https://github.com/angular/components/issues/14117\n\n### Use Case\n\n- Prevent drags from starting on specific child elements\n- Implement custom handle logic without using cdkDragHandle\n- Add conditional drag start behavior based on application state\n- Implement complex touch gesture requirements\n","Url":"https://github.com/angular/components/issues/30101","RelatedDescription":"Open issue \"feat(drag-drop): New Optional Input [cdkDragStartPredicate]\" (#30101)"},{"Id":"2701632032","IsPullRequest":false,"CreatedAt":"2024-11-28T10:21:14","Actor":"mstawick","Number":"30100","RawContent":null,"Title":"bug(FixedSizeVirtualScrollStrategy): Not all items rendered on source list change","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nWhen a list of rendered items changes (new list, ie. new reference) and the length difference isn't big, only the amount of items from the previous list are rendered. I.e. if the previous list had `two` items, and the new list has `three` items, then only `two` items from the new list are rendered.\n\nI think it has something to do with initial buffer settings. Changing the size of the browser window fixes the problem - which makes me think some recalculation is triggered on window size change.\n\nI think manually setting initial values for `maxBufferPx` and `minBufferPx` mitigates the issue.\n\n### Reproduction\n\nHere is a reproduction repo:\nhttps://github.com/mstawick/virtual-scroll-repro\n\nIt doesn't reproduce in StackBlitz, can't say why.\n\nSteps to reproduce:\n* make window full-screen,\n* reload the page,\n* click the buttons in order - List 1 .... List 4,\n* you should see that rendered items don't change when pressing List 3 and List 4.\n\n* resize the window,\n* now rendered items will change as they should.\n\nHere is a short video demonstrating the issue:\nhttps://github.com/user-attachments/assets/86e24e29-19f8-4713-9a9d-a79be844f931\n\n\n### Expected Behavior\n\nAll items should be rendered correctly.\n\n### Actual Behavior\n\nSome items are not rendered.\n\n\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.1\n- Browser(s): Chrome/Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Debiankate\n","Url":"https://github.com/angular/components/issues/30100","RelatedDescription":"Open issue \"bug(FixedSizeVirtualScrollStrategy): Not all items rendered on source list change\" (#30100)"},{"Id":"2698393555","IsPullRequest":true,"CreatedAt":"2024-11-27T14:00:26","Actor":"crisbeto","Number":"30096","RawContent":null,"Title":"docs(material/timepicker): fix missing icon in example","State":"closed","Body":"Fixes that one of the timepicker examples didn't have an icon.\r\n\r\nFixes #30076.","Url":"https://github.com/angular/components/pull/30096","RelatedDescription":"Closed or merged PR \"docs(material/timepicker): fix missing icon in example\" (#30096)"},{"Id":"2698358884","IsPullRequest":true,"CreatedAt":"2024-11-27T14:00:09","Actor":"crisbeto","Number":"30095","RawContent":null,"Title":"docs(material/button): avoid clipping icon","State":"closed","Body":"Fixes that the container in the button example was too narrow and was clipping the button.\r\n\r\nFixes #30091.","Url":"https://github.com/angular/components/pull/30095","RelatedDescription":"Closed or merged PR \"docs(material/button): avoid clipping icon\" (#30095)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-04T03:30:02.5347531Z","RunDurationInMilliseconds":1710}