{"Data":{"Angular-Issues":{"Issues":[{"Id":"1897549066","IsPullRequest":true,"CreatedAt":"2023-09-15T01:18:31","Actor":"pmvald","Number":"51791","RawContent":null,"Title":"fix NgModule compilation scope in deps tracker","State":"open","Body":"This can unblock the failures in #51415 \r\n\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51791","RelatedDescription":"Open PR \"fix NgModule compilation scope in deps tracker\" (#51791)"},{"Id":"1897496482","IsPullRequest":false,"CreatedAt":"2023-09-14T23:54:13","Actor":"AndrewKushnir","Number":"51790","RawContent":null,"Title":"[DevTools] Visualize hydrated parts of an application","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ndevtools\r\n\r\n### Description\r\n\r\nCurrently there is no easy way to detect which parts of an application were hydrated and which parts were re-created. The proposal is to consider adding a support to Angular DevTools to inspect components and visually highlight:\r\n\r\n- components that were hydrated\r\n- components that skipped hydration (by adding the `ngSkipHydration` attribute)\r\n- components that were serialized, but not yet hydrated (e.g. being lazy-loaded)\r\n- components created from scratch\r\n\r\nIt'd be interesting to explore if we can visually separate them on a page once a certain mode is enabled in DevTools (see screen shot attached), so that it's easy to visually assess which parts of an application are hydrated. If it's problematic to annotate, we can may be add a flag into a component inspector panel to indicate it's hydration state.\r\n\r\n<img width=\"783\" alt=\"hydrated-components\" src=\"https://github.com/angular/angular/assets/43554145/d4956788-973c-4f3f-b102-afbaa7e1c66b\">\r\n\r\nWe can also enable those extra flags and modes only when we detect that an application was server-side rendered.\r\n\r\n// cc @AleksanderBodurri @dgp1130 ","Url":"https://github.com/angular/angular/issues/51790","RelatedDescription":"Open issue \"[DevTools] Visualize hydrated parts of an application\" (#51790)"},{"Id":"1897236600","IsPullRequest":false,"CreatedAt":"2023-09-14T22:09:43","Actor":"muhamedkarajic","Number":"51788","RawContent":null,"Title":"Angular should support View Transition API","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI would like the Angular team to consider using the transitions view API.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n\n### Proposed solution\n\nMake it integrated with the current animations.\n\n### Alternatives considered\n\nMaybe a custom flag to enable it instead of the current animations.","Url":"https://github.com/angular/angular/issues/51788","RelatedDescription":"Closed issue \"Angular should support View Transition API\" (#51788)"},{"Id":"1897270475","IsPullRequest":true,"CreatedAt":"2023-09-14T20:35:36","Actor":"ferrorenan","Number":"51789","RawContent":null,"Title":"feat(version): add version information element to the header","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently we do not have the current version available in the header for easy and quick viewing, we only have it in the footer.\r\n\r\nIssue Number: [51548](https://github.com/angular/angular/issues/51548)\r\n\r\n\r\n## What is the new behavior?\r\nAdd a new element in the header informing the current version, to make it easier for the user to quickly and easily view the current version available.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51789","RelatedDescription":"Open PR \"feat(version): add version information element to the header\" (#51789)"},{"Id":"1897227064","IsPullRequest":true,"CreatedAt":"2023-09-14T20:06:41","Actor":"angular-robot","Number":"51787","RawContent":null,"Title":"build: update actions/cache digest to 704facf","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://togithub.com/actions/cache) | action | digest | `88522ab` -> `704facf` |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular/pull/51787","RelatedDescription":"Open PR \"build: update actions/cache digest to 704facf\" (#51787)"},{"Id":"1897215486","IsPullRequest":false,"CreatedAt":"2023-09-14T19:57:46","Actor":"ShacharHarshuv","Number":"51786","RawContent":null,"Title":"Proposition: Alternative, Simplified Forms API","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI realize this might not be the \"standard\" feature request, but I'm not sure of a better place to share it and start a serious discussion. \r\n\r\nAngular's `ReactiveForms` module has revolutionized the way we think and work with form management. However, after around 5 years of working with it, and in lights of the recent changes going around in the Angular community, I believe it might be a good time to reconsider the future of managing forms in Angular. \r\n\r\n The main things that I would like to improve is simplify the API, reduce boilerplate code, make the API for managing different kind of states (disabling, validation) more consistent (aka declarative vs imperative, `ControlValueAccessor` managed vs CSS managed etc), make it more open to extension with the entire form logic in one place etc, and - if we are already revisiting it - make use of a more modern API (signals). \r\n \r\nAs a first step, I've created a design proposition for what this could be. I believe this could be both easier to work with and more flexible, compared to Angular's current solution. \r\n\r\nThe purpose of this post is to get some initial feedback, start the conversation, and see if other people are interested in this direction. \n\n### Proposed solution\n\nBefore we start, here are some high level goals for this design:\r\n\r\n- Easy initialization\r\n    - Define logic in one place\r\n- Easy binding / property accessing\r\n- Close for modification and extendable (open-close)\r\n- Minimal\r\n- Type safety\r\n    - Including in the template! So you'll not be able to use a CVA component with the wrong control.\r\n- Separation of logic (value, disability, validity)\r\n- Modern API (signals)\r\n- Easier access of (custom) state (aka, not just built in disabled / validation) by custom form components (or their children). (This relates to the usage in the template more than anything else). (For example, if we want to show a component differently if it's required)\r\n\r\n# Proposition\r\n\r\nWe'll have a single type (not class) called `Form`. This type will be used for what `FormControl`, `FormGroup` and `FormArray` were used before.\r\n\r\nEach instance of `Form` will enable two way binding, listening to changes (via signals API), and plugging in of other state like disability and validation. The other state will be separated and pluggable so it will be easy to extend it in a way that is open-close.\r\n\r\n## Core Behavior\r\n\r\n### Creating a `Form`\r\n\r\nCreate a form is as easy is passing the default value to the `form` factory function:\r\n\r\n```ts\r\nconst name = form('Sweeney');\r\n```\r\n\r\nThe type is inferred to be `Form<string>`. You can also be explicitly set the type (to be more specific or more generic):\r\n\r\n```ts\r\nconst name = form<string>('Sweeney');\r\n```\r\n\r\nReading/listening to the value can be done like you would with regular signals:\r\n\r\n```ts\r\nconsole.log('name', name());\r\n```\r\n\r\n> [!note]\r\n> We need to make sure that the value that is returned from the form this way is readonly, to avoid a situation where a consumer can mess with it. It might be the case that it works ootb with signals, but we need to check.\r\n\r\nSetting the value can be done with any of the `WritableSignal` methods (`set`, `update` or `mutate`):\r\n\r\n```ts\r\nname.set('Ms. Lovett');\r\n```\r\n\r\n> [!warning]\r\n> Even though to the consumer the form looks like a signal (and it's assignable to its interface), it will actually need to be implemented differently, even though it will use the signals infra behind the scenes.\r\n\r\n### Nested forms\r\n\r\nWhen your `Form` has a generic that is either an object or an array, you'll also have the `fields` signal available on it as a property.\r\n\r\n> [!note]\r\n> If the generic is a union type that can be either an object or something else, the `fields` property will not exist\r\n\r\n```ts\r\nconst myForm = form({\r\n  name: \"Sweeney\",\r\n  age: 42,\r\n});\r\nmyForm.fields().name.set(\"Sweeney Todd\");\r\n```\r\n\r\nWhen you are creating a form in this way, you can also pass the `Form` objects directly as properties, instead of as values. This can be useful if you want to set different validators / disabled state / type.\r\n\r\n```ts\r\nconst myForm = form({\r\n  name: form(\"Sweeney\"),\r\n  age: form(42),\r\n});\r\n```\r\n\r\nWhen used in this way, the inferred value will still be `{ name: string, age: number }`\r\n\r\nThis works the same with an array:\r\n\r\n```ts\r\nconst characters = form(['Sweeney', 'Ms. Lovett']);\r\n```\r\n\r\nThis is similar to `ReactiveForms`'s `FormArray`.\r\n\r\nWhen setting value to the `form`, any listeners for the children events, will be updated.\r\n\r\n```ts\r\nconst myForm = form({\r\n  name: \"Sweeney\",\r\n  age: 42,\r\n});\r\n\r\neffect(() => {\r\n  console.log('name', myForm.fields().name())\r\n});\r\n\r\nmyForm.set({ name: \"Ms. Lovett\", age: 38 }); // prints: name \"Ms. Lovette\"\r\n```\r\n\r\nWhen setting value to one of the children, any listeners to the form value will be updated.\r\n\r\n```ts\r\nconst myForm = form({\r\n  name: \"Sweeney\",\r\n  age: 42,\r\n});\r\n\r\neffect(() => {\r\n  console.log('form value', myForm());\r\n});\r\n\r\nmyForm.fields().name.set('Sweeney Todd'); // prints: form value { name: \"Sweeney Todd\", age: 42}\r\n```\r\n\r\nWhen changing the value, you could also change the number of fields in the form. This is especially useful for arrays, but can be used in objects as well.\r\n\r\n```ts\r\nconst myArray = form(['Shahar', 'Adi']);\r\nmyArray.mutate(array => array.push('Alma')); // this creates a new field\r\n```\r\n\r\nWhen listening to the `fields` signal change, it will only emit a change when the fields themselves are changing, not if one of the values are changing. Fields that ere not touched in this change, should have a reference to the same `Form` object.\r\n\r\nThis is useful if you have a `Form` with changing elements, like an array:\r\n\r\n```html\r\n<div *ngFor=\"let field of myForm.fields()\">\r\n\t<input [form]=\"field\" />\r\n</div>\r\n```\r\n\r\n(In the example above we make use of the \"form\" directive)\r\n\r\n## View Binding\r\n\r\nIn order to bind the new controls to the DOM, you can use the `[form]` directive like so:\r\n\r\n```html\r\n<input [form]=\"myFormField\" />\r\n```\r\n\r\nThis will work out of the box for native fields like `input`, and will be type-safe, so you can only pass it `Form<string>` if you're using it with an `input` of type text.\r\n### Compatibility layer with reactive forms\r\n\r\nThe compatibility layer will be available under a separate library so it's optional. It has a peer dependency on Angular reactive forms, and - when imported - it enables binding forms to any component that provides `NG_VALUE_ACCESSOR`. So that you can use it with your custom components.\r\n\r\nIt will handle:\r\n\r\n- Updating the value both ways (using `writeValue` and `registerOnchange`)\r\n- Updating the touched state.\r\n- Updating the disabled state.\r\n\r\n### API for implementing custom components\r\n\r\nGoals:\r\n\r\n- Type safety in templates (for custom components)\r\n- Ease of development\r\n\r\nTo implement a custom component, you need to extend this class:\r\n\r\n```ts\r\nclass FormFieldComponent<T> {\r\n  @Input('form')\r\n  field: Form<T>\r\n}\r\n```\r\n\r\n#todo _we might want to create a different API here for signal components' inputs. We might also enable both options._ _If we can create a functional API, it's probably better_\r\n\r\nThis enables type safety in the template.\r\n\r\n## Disabled State\r\n\r\n\"disabled\" is a boolean state that is conventionally used to signal that a field cannot be edited by the user. However, it doesn't mean that you can't programmatically change it.\r\n\r\nTo avoid contradictions, and to encourage a declarative approach, it will not be possible to change the disabled state imperatively.\r\n\r\nTo define the state of the disabled state of a form control, use the `disabled` function:\r\n\r\n```ts\r\nfunction disabled(state: Signal<boolean | string | { toString?: () => string}>)\r\n```\r\n\r\n(string is a user friendly disabled _reason_)\r\n\r\nExample:\r\n\r\n```ts\r\nconst isDisabled = computed(...);\r\nconst nameForm = form('Shahar', disabled(isDisabled);\r\n```\r\n\r\nTo read the disabled state:\r\n\r\n```ts\r\nisDisabled(myForm);\r\n```\r\n\r\nThis uses a signal behind the scenes, so you can use it to listen for changes inside an `effect` or `compute`:\r\n\r\n```ts\r\neffect(() => {\r\n  console.log('form is disabled changed to', isDisabled(myForm));\r\n})\r\n```\r\n\r\nIn order to read it from the template, you can use a pipe:\r\n\r\n```angular\r\nDisabled: {{ myForm | formIsDisabled }}\r\n```\r\n\r\nAll pipes will be standalones and need to be imported.\r\n\r\nYou can also set the initial disabled state of the form this way:\r\n\r\nYou can read the disabled reason with those functions:\r\n\r\n```ts\r\nfirstDisabledReason(myForm); // will return null if not disabled\r\n\r\ndisabledReasons(myForm); // return string[] of all reasons\r\n```\r\n\r\nYou can also use this in the template with the `formFirstDisabledReason` and `formDisabledReasons` pipes.\r\n\r\n### View binding\r\n\r\nBy default when importing the `FormsModule` and using the `[form]` directive, a `disabled` attribute will be added to the host.\r\n\r\n> [!question]\r\n> Is it possible that a consumer will not want it? Do we need to be able to disable this behavior?\r\n> \r\n> If needed, we can make this configurable in the `forRoot` options of `FormsModule`\r\n\r\n> [!note]- Implementation Note\r\n> This will be done by creating a `FormDisabledDirective` with the same selector that handles that.\r\n\r\n## Dirty State\r\n\r\n\"dirty\" is a Boolean state that is conventionally used to mark that a field was edited by the user. Common use-cases include:\r\n\r\n- Show invalid indication only when dirty\r\n- Enable save only when form is dirty\r\n\r\nReading the value:\r\n\r\n```ts\r\nisDirty(name)\r\n```\r\n\r\nThis uses signal behind the scenes, so it can be listened to\r\n\r\nSetting the value:\r\n\r\n```ts\r\nsetIsDirty(name, false)\r\n```\r\n\r\nEven though it is used to show that the field was edited by the user, using `set` on a field does not automatically make it's \"dirty\" state true. You need to programmatically set the value to signal a user-invoked change:\r\n\r\n```ts\r\nname.set('Mr.' + lastName);\r\nsetIsDirty(name, true);\r\n```\r\n\r\nWhen binding fields to components, we'll use a dedicate directive (see later)\r\n\r\n## Touched State\r\n\r\n\"touched\" is a boolean state that is conventionally used to mark that a field was touched (but not necessary edited) by the user.\r\n\r\n- Show invalid indication only when dirty\r\n\r\nThis has the same API as dirty state.\r\n\r\nThe compatibility layer with reactive forms handles setting the touched state when using the directive with a component that provides `NG_VALUE_ACCESSOR`.\r\n\r\n## Validation\r\n\r\nTo add a validation to the form, you can do this:\r\n\r\n```ts\r\nform('', validation(required));\r\n```\r\n\r\nSince signals allow for a reactive API that can use any state, validators will be immutable, that means that contrary to `ReactiveForms`'s built in `setValidators`, in this library we cannot change the validators of a field after we've created it.\r\n\r\nYou can add multiple validations this way:\r\n\r\n```ts\r\nform('', validation(required, min(3)));\r\n```\r\n\r\nThis can be used together with the `disabled` state this way:\r\n\r\n```ts\r\nform('', validation(required), disabled(true));\r\n```\r\n\r\n> [!note] Order doesn't matter\r\n> You can also add the disabled state before the validation state (order doesn't matter)\r\n\r\nTo read the validation state of the form, you can use the following functions:\r\n\r\n```ts\r\nfunction isValid(form: Form): boolean;\r\nfunction isInvalid(form: Form): boolean;\r\n```\r\n\r\nTo get a user-friendly error message for the validation, you can use these functions:\r\n\r\n```ts\r\nfunction firstErrorMessage(field: Field): string | null; // null if valid or no error message available\r\nfunction errorMessages(field: Field): string[];\r\n```\r\n\r\nAll of these use signal behind the scenes, so they can be used in a reactive context.\r\n\r\n### Form Status\r\n\r\nTo read the validation state, use any of these functions:\r\n\r\n```ts\r\nformStatus(myForm);\r\n```\r\n\r\nThis returns `'valid'` | `'invalid'` | `'pending'` | `'disabled'`. The `disabled` status is based on the disabled state.\r\n\r\n### View Binding\r\n\r\nBy default when importing the `FormsModule` and using the `[form]` directive, it will add `invalid`, `valid`, `validation-pending` classes based on the state of the validation of the control.\r\n\r\n> [!question]\r\n> Should we prefix these names to avoid collisions?\r\n>\r\n> Is it even a good idea? Maybe we want this only for native elements?\r\n>\r\n> Is it possible that consumers will want to disable this behavior?\r\n\r\nThese classes can be used globally like `ng-invalid` to add styling to your components.\r\n\r\nThis will be accomplished by a dedicated `FormValidationDirective`\r\n\r\n### Customize Error Messages for built-in validators\r\n\r\nTo customize error messages of build in validators you can use the following API:\r\n\r\n```ts\r\nrequired.errorMessage(\"Required Field!\"); // when passing a string here, the error message will always be the same\r\nmin.errorMessage(({min}) => `Value needs to be bigger than ${min}`); // use a callback to read data from the validator\r\n```\r\n\r\n(These callbacks are typed, so you can be sure you're reading the correct error type)\r\n\r\n> [!note]- About implementation\r\n> We might want to have some sort of utility function with that wraps those validators and enables this functionality. We can also expose this utility function to the public API so consumers can use it.\r\n\r\n### Custom Validations\r\n\r\nIn order to add validation to your form, you need to define a `Validator`:\r\n\r\n```ts\r\ntype ValidationError = string | {\r\n\ttoString?: () => string;\r\n}\r\ntype ValidationFn<Value> = (form: Form<Value>) => Signal<ValidationError | null>;\r\ntype Validator<Value> = ValidationFn<Value, Errors> | Signal<ValidationError>;\r\n```\r\n\r\nHere's a simple example of a validator\r\n\r\n```ts\r\nfunction required(form: Form<any>) {\r\n return computed(() => form.value() ? null : `This field is required`);\r\n}\r\n```\r\n\r\nUnlike `ReactiveForms`, this validation function will be called _once_. Note that the form in the argument is there for convenience and reusability, but you can use any signal when creating it.\r\n\r\nThis set up makes it easier to write custom validators, that use different fields as a condition to the validation:\r\n\r\n```ts\r\nconst isNameRequired = field(false);\r\n\r\nconst myForm = form({\r\n name: field('', (name) => {\r\n   return isNameRequired.value() && !name.value() ? { required: true } : null\r\n }),\r\n isNameRequired,\r\n});\r\n```\r\n\r\nThe validation function can be strictly typed, so that this will not be allowed:\r\n\r\n```ts\r\nfunction min(form: Form<number>): Signal<ValidationErrors | null>;\r\n\r\nform('', validation(min)); // ERROR: the validation type does not match the form type\r\n```\r\n\r\nThe validation function can be strictly typed, so that this will not be allowed:\r\n\r\n```ts\r\nfunction min(form: Form<number>): Signal<ValidationErrors | null>;\r\n\r\nform('', validation(min)); // ERROR: the validation type does not match the form type\r\n```\r\n\r\nFor the error, you can return a string that will be used as a validation error message. If have other code that needs to read the error message content, you can also return an object with a `toString` method, that returns the error message. If you don't supply the `toString`, you might get `null` if you try to read error messages.\r\n\r\n### \"Async\" Validators\r\n\r\nSometimes, validators need to run asynchronously. For that, you can use the `PENDING` symbol:\r\n\r\n```ts\r\nisNameUsedValidator(form: Form<string>) {\r\n  const name$ = toObservable(form);\r\n\r\n  const validationErrors$ = name$\r\n    .pipe(\r\n\t\tswitchMap(\r\n\t\t\tname => http.get('/is_available/${name}')\r\n\t\t\t\t.pipe(startWith(PENDING)) // every name change we need the PENDIG state\r\n\t\t\t),\r\n\t\tmap(isAvailable => isVailable ? null : {taken: true}),\r\n    );\r\n\r\n\treturn toSignal(name$, PENDING);\r\n}\r\n```\r\n\r\n#### Running Validation Lazily\r\n\r\nContrary to `ReactiveForms`, all validations will always be run together. If you have validation that are potentially expensive on calculation / network, and you don't want to run them if you don't have to (for example, when there are other errored validations), you need to explicitly ask for it:\r\n\r\n```ts\r\nform('', validations(\r\n\trequired,\r\n\trunOnlyIfNeeded(isNameUsedValidator),\r\n))\r\n```\r\n\r\n> [!note]- About implementation\r\n>\r\n> We'll use the attribute of signals that they are lazily evaluated. In the `compute` that calculates the validation errors, we need to ask for the \"runOnlyIfNeeded\" ones only if there aren't any other validators:\r\n>\r\n> ```ts\r\n> const validationErrors = compute(() => {\r\n>   const validationErrors = eagerValidationError.map(validationErrors => validationErrors());\r\n>\r\n>   if (!validationErrors.length) {\r\n>     for (const lazyValidationError of lazyValidationErrors) {\r\n>       if (lazyValidationError()) {\r\n> \t      return [lazyValidationError];\r\n>       }\r\n>     }\r\n>   }\r\n>\r\n>   return  validationErrors;\r\n> })\r\n> ```\r\n>\r\n> Note - this will still run all lazy validations together. Might want to rewrite it so that it also returns all errors\r\n\r\n### Supporting NG_VALIDATOR\r\n\r\nThis feature in `Angular`'s `ReactiveForms` enables you to create a built-in validator inside a custom form control, which will cause it to be invalid and/or have errors. This uses `setValidators` behind the scenes.\r\n\r\nThere are a few issues with this approach in `ReactiveForms`: \r\n\r\n- Using `setValidators` does not automatically run the validations again, so the control might not get invalid even though it should be.\r\n- If the custom control component was destroyed, the validator is removed. If the control was previously invalid, it might be become valid again when running update value and validity. This is usually not the desire behavior, since this case occurs usually when you hide views from the user, and you don't really want logic to change as a result. (For example, if you have a form that is divided to multiple routes)\r\n\r\nTo support NG_VALIDATOR, we'll have an *internal* function that can add errors (not validators) to the validation state of the control. \r\n\r\nWe'll create `FormCustomValidatorDirective` that will use this internal function in hook into the `NG_VALIDATORS` provider to make this work.\r\n\r\n> [!question]\r\n> - Do we want this only for the compatibility layer, or do we also want to supply our own API for this?\r\n\r\n### Error Aggregation\r\n\r\nIt's also sometimes useful to display all the errors of the form in one place. This should be possible to create utility function that aggregate errors. We might also want to add the functionality to add a display name to the form that will be used here. For example:\r\n\r\n```ts\r\nconst firstName = form('',\r\n  displayName('First Name')\r\n);\r\n```\r\n\r\n### Binding Validation Information to View\r\n\r\nA common use case, is to display an Asterix next to a required field label, or an message bellow a field. We would ideally want to implement this behavior once for our design system, so that it will work with all custom controls. \r\n\r\nThere are two possible architectures here:\r\n\r\nField wrapper:\r\n\r\n```html\r\n<!-- consumer.html -->\r\n<app-form-field>\r\n  <app-form-label>Name</app-form-label>\r\n  <app-text-field [form]=\"nameForm\"/>\r\n</app-form-field>\r\n```\r\n\r\nLabel inside the field:\r\n\r\n```html\r\n<!-- consumer.html -->\r\n<app-text-field \r\n   label=\"Name\"\r\n   [form]=\"nameForm\"\r\n/>\r\n\r\n<!-- text-field.component.html -->\r\n<app-field-frame>\r\n   <app-form-label>{{label}}</app-form-label>\r\n   ... <!-- text field implementation -->\r\n</app-field-frame>\r\n\r\n```\r\n\r\nThe difference is that in the first use case the form directive is used as a child of the component in which we want to access it form, and the second use-case the form directive is a parent of the component we want to access it from.\r\n#### Accessing form of parent\r\n\r\nTo access the form of a parent, you can use the utility `injectForm()`. It will return a `Form` object if there is a parent that uses it. If there is more than one, it will return the first one from the bottom. \r\n\r\nNow, for example, if you want to check whether the form is required, you can do this:\r\n\r\n```ts\r\nreadonly isRequired = computed(() => {\r\n  return getFormValidators(this.form).includes(required);\r\n});\r\n```\r\n\r\n#### Accessing form of child\r\n\r\nTo access the form of a child, you can add the `FormAccessorDirective` as a host directive of your wrapper component. This directive uses `@ContentChild` behind the scenes, and this way you can use the function `injectChildForm` to get the form of the first child.\r\n\r\n---\r\n## Custom State\r\n\r\nWe can extend the behavior of the form controls with custom state using the function `createFormState`. Many of the form states described before use it behind the scenes.\r\n\r\n```ts\r\nfunction createFormState<T, Args extends any[]>(\r\n  descr: string,\r\n  fallback: T,\r\n  createInitialState: (form: Form<any>, ...args: Args) => T),\r\n): {\r\n  create: (...args: Args) => StateFactory, \r\n  get: (form: Form<any>) => T, // returns the fallback if doesn't exist\r\n  set: (form: Form<any>, state: T) => void,\r\n}\r\n```\r\n\r\nHere's an example of how you can use it:\r\n\r\n```ts\r\n\r\n// display-name.ts\r\n\r\nexport const {\r\n  create: displayName, \r\n  get: getDisplayName,\r\n  set: setDisplayName\r\n} = createFormState(\r\n  \"Display Name\",\r\n  \"\",\r\n  (form: Form<any>, displayName: string) => {\r\n    return displayName;\r\n  }\r\n);\r\n\r\n// my-form.ts\r\n\r\nimport { displayName, getDisplayName } from './my-custom-disabled-state';\r\n\r\nconst myForm = form({\r\n  name: \"John\",\r\n  age: 42,\r\n}, displayName('Person'));\r\n\r\nconst displayNamed = getDisplayName(myForm);\r\n\r\n```\r\n\r\nThis infra will also be used behind the scenes to support Disabled State, Dirty State]] and Validation.\r\n\r\nNote that as other utilities, the getter uses signal behind the scenes so you can listen to changes as well. \r\n\r\n\n\n### Alternatives considered\n\nN/A","Url":"https://github.com/angular/angular/issues/51786","RelatedDescription":"Open issue \"Proposition: Alternative, Simplified Forms API\" (#51786)"},{"Id":"1897195385","IsPullRequest":true,"CreatedAt":"2023-09-14T19:42:43","Actor":"josephperrott","Number":"51785","RawContent":null,"Title":"docs: update to latest version of material","State":"open","Body":"Update to the latest version of material\r\n","Url":"https://github.com/angular/angular/pull/51785","RelatedDescription":"Open PR \"docs: update to latest version of material\" (#51785)"},{"Id":"1897153031","IsPullRequest":true,"CreatedAt":"2023-09-14T19:11:35","Actor":"josephperrott","Number":"51784","RawContent":null,"Title":"ci: use head_ref for concurrency group","State":"open","Body":"Use the head_ref value for the concurrency group on `ci-privileged` rather than the ref, so that the main ref is not used and cancelling across pull requests and the main branch\r\n","Url":"https://github.com/angular/angular/pull/51784","RelatedDescription":"Open PR \"ci: use head_ref for concurrency group\" (#51784)"},{"Id":"1897146853","IsPullRequest":true,"CreatedAt":"2023-09-14T19:06:44","Actor":"angular-robot","Number":"51783","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b02604d` -> `2d2271d` |\n| [@angular/material](https://togithub.com/angular/components) | dependencies | major | [`^16.2.4` -> `^17.0.0-next`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/16.2.4/17.0.0-next.3) |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1c6c16f` -> `b9770f3` |\n| angular/dev-infra | action | digest | `f245bb8` -> `f622b51` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/material)</summary>\n\n### [`v17.0.0-next.3`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next3-rock-rock-2023-09-13)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.2...17.0.0-next.3)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [db06fa8d89](https://togithub.com/angular/components/commit/db06fa8d8939d793f598bc3dbedc96a5a71c0db0) | fix | **autocomplete:** requireSelection incorrectly resetting value when there are no options ([#&#8203;27781](https://togithub.com/angular/components/pull/27781)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v17.0.0-next.2`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next2-metal-monkey-2023-09-07)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.1...17.0.0-next.2)\n\n#### Breaking Changes\n\n##### multiple\n\n-   -   Themes are now more strictly validated when calling Angular Material\n        theme mixins. For example, calling `mat.button-typography` with a theme\n        has `typography: null` is now an error.\n    -   The `mat.legacy-typography-hierarchy` mixin has been removed in favor\n        of `mat.typography-hierarchy`\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [cac7a41f7b](https://togithub.com/angular/components/commit/cac7a41f7b7a6034d8049be77fe53a082c3aa5f2) | fix | **dialog:** css structure change ([#&#8203;27510](https://togithub.com/angular/components/pull/27510)) |\n| [726fc069e3](https://togithub.com/angular/components/commit/726fc069e3bed2fcbc9b53de02ee7ce18c2fce5d) | fix | **tabs:** add aria-hidden to inactive tabs ([#&#8203;27742](https://togithub.com/angular/components/pull/27742)) |\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [aa1d01d169](https://togithub.com/angular/components/commit/aa1d01d1696360d25e18cb0328f56b9fca9d71c4) | fix | **drag-drop:** constrainPosition now working well with boundary ([#&#8203;27730](https://togithub.com/angular/components/pull/27730)) |\n| [8eb494e975](https://togithub.com/angular/components/commit/8eb494e975bb75e52c9c81ad68d3d4b993546dfe) | fix | **menu:** run change detection for  changes to overlay ref of trigger ([#&#8203;27726](https://togithub.com/angular/components/pull/27726)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [90465a1882](https://togithub.com/angular/components/commit/90465a1882028144a8e56eabc03b4cc93947df9f) | refactor | convert components to theme inspection API (round 4) ([#&#8203;27740](https://togithub.com/angular/components/pull/27740)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v17.0.0-next.1`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next1-manganese-muffin-2023-08-30)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.0...17.0.0-next.1)\n\n#### Breaking Changes\n\n##### material\n\n-   There are new styles emitted by `mat.dialog-theme` that are not\n    emitted by any of: `mat.dialog-color`, `mat.dialog-typography`,\n    `mat.dialog-density`. If you rely on the partial mixins only and don't\n    call `mat.dialog-theme`, you can add `mat.dialog-base` to get the\n    missing styles.\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [685b585f7](https://togithub.com/angular/components/commit/685b585f70fded62813480b849832fd1bfd1bffb) | feat | **theming:** add support for M2 themes to theme inspection API |\n| [dfba0edfb](https://togithub.com/angular/components/commit/dfba0edfbec52614e42e6fe0f9409a1fa0346669) | fix | **dialog:** Move unthemable tokens to theme mixin ([#&#8203;27606](https://togithub.com/angular/components/pull/27606)) |\n| [cf456a2d4](https://togithub.com/angular/components/commit/cf456a2d43837497367662e7de22f1b2bcbf4f00) | fix | **form-field:** don't toggle hover state over subscript ([#&#8203;27683](https://togithub.com/angular/components/pull/27683)) |\n| [f8252d816](https://togithub.com/angular/components/commit/f8252d816806b4fff18bb5f7d313a8edca774459) | fix | **progress-spinner:** Emit tokens under mixin root selector ([#&#8203;27594](https://togithub.com/angular/components/pull/27594)) |\n| [373a0cbf9](https://togithub.com/angular/components/commit/373a0cbf9531ea9ae0c9eb0e9cbf70f049f863b7) | fix | **select:** set pointer cursor on entire form field ([#&#8203;27678](https://togithub.com/angular/components/pull/27678)) |\n| [291b9db91](https://togithub.com/angular/components/commit/291b9db9105846ff0ae37581263725bebb6f0a45) | fix | **slider:** keep ios safari slider value binding in sync ([#&#8203;27701](https://togithub.com/angular/components/pull/27701)) |\n| [eef455620](https://togithub.com/angular/components/commit/eef45562035448212e0f827c5dbc31b3fd621255) | fix | **slider:** make selecting thumbs at min/max easier ([#&#8203;27702](https://togithub.com/angular/components/pull/27702)) |\n| [3b25de953](https://togithub.com/angular/components/commit/3b25de95306f11a6ffb828769af331bb8c076652) | fix | **slider:** set word-break on value-indicator ([#&#8203;27709](https://togithub.com/angular/components/pull/27709)) |\n| [6c724c713](https://togithub.com/angular/components/commit/6c724c713fb0510b32ce302a51f1d9d15df4b668) | fix | **snack-bar:** Emit tokens under mixin root selector ([#&#8203;27667](https://togithub.com/angular/components/pull/27667)) |\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [b3e4d576b](https://togithub.com/angular/components/commit/b3e4d576b9f0060bb1110766d74c982e4620b2a6) | feat | **overlay:** add disposeOnNavigation ([#&#8203;27672](https://togithub.com/angular/components/pull/27672)) |\n| [ca9c490ee](https://togithub.com/angular/components/commit/ca9c490ee30dbf7c9c147079197d0dbc0abcd611) | fix | **table:** the CdkNoDataRow directive does not render in the OnPush strategy ([#&#8203;27687](https://togithub.com/angular/components/pull/27687)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n### [`v17.0.0-next.0`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next0-paper-crane-2023-08-17)\n\n[Compare Source](https://togithub.com/angular/components/compare/16.2.4...17.0.0-next.0)\n\n#### Breaking Changes\n\n##### material\n\n-   There are new styles emitted by `mat.fab-theme` that are not\n    emitted by any of: `mat.fab-color`, `mat.fab-typography`,\n    `mat.fab-density`. If you rely on the partial mixins only and don't\n    call `mat.fab-theme`, you can add `mat.fab-base` to get the\n    missing styles.\n-   There are new styles emitted by `mat.card-theme` that are not\n    emitted by any of: `mat.card-color`, `mat.card-typography`,\n    `mat.card-density`. If you rely on the partial mixins only and don't\n    call `mat.card-theme`, you can add `mat.card-base` to get the\n    missing styles.\n-   There are new styles emitted by `mat.checkbox-theme` that are not\n    emitted by any of: `mat.checkbox-color`, `mat.checkbox-typography`,\n    `mat.checkbox-density`. If you rely on the partial mixins only and don't\n    call `mat.checkbox-theme`, you can add `mat.checkbox-base` to get the\n    missing styles.\n-   `NativeDateAdapter` no longer takes `Platform` in its\n    constructor. It also now uses the `inject` function, and therefore\n    cannot be instantiated directly (must go through Angular's DI system\n    instead).\n-   There are new styles emitted by `mat.list-theme` that are not\n    emitted by any of: `mat.list-color`, `mat.list-typography`,\n    `mat.list-density`. If you rely on the partial mixins only and don't\n    call `mat.list-theme`, you can add `mat.list-base` to get the\n    missing styles.\n-   There are new styles emitted by mat.progress-bar-theme that are not\n    emitted by any of: mat.progress-bar-color, mat.progress-bar-typography,\n    mat.progress-bar-density. If you rely on the partial mixins only and don't\n    call mat.progress-bar-theme, you can add mat.progress-bar-base to get the\n    missing styles.\n-   There are new styles emitted by mat.progress-spinner-theme that are not\n    emitted by any of: mat.progress-spinner-color, mat.progress-spinner-typography,\n    mat.progress-spinner-density. If you rely on the partial mixins only and don't\n    call mat.progress-spinner-theme, you can add mat.progress-spinner-base to get the\n    missing styles.\n-   There are new styles emitted by `mat.slider-theme` that are not\n    emitted by any of: `mat.slider-color`, `mat.slider-typography`,\n    `mat.slider-density`. If you rely on the partial mixins only and don't\n    call `mat.slider-theme`, you can add `mat.slider-base` to get the\n    missing styles.\n-   There are new styles emitted by `mat.snack-bar-theme` that are not\n    emitted by any of: `mat.snack-bar-color`, `mat.snack-bar-typography`,\n    `mat.snack-bar-density`. If you rely on the partial mixins only and don't\n    call `mat.snack-bar-theme`, you can add `mat.snack-bar-base` to get the\n    missing styles.\n-   There are new styles emitted by mat.tooltip-theme that are not\n    emitted by any of: mat.tooltip-color, mat.tooltip-typography,\n    mat.tooltip-density. If you rely on the partial mixins only and don't\n    call mat.tooltip-theme, you can add mat.tooltip-base to get the\n    missing styles.\n\n##### multiple\n\n-   `@import` of Angular Material and Angular CDK Sass is no longer\n    supported. Please use `@use` instead.\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [60aa52c88](https://togithub.com/angular/components/commit/60aa52c88670307365890071df9e16645024653b) | feat | **theming:** Support defining M3 theme objects |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [9906aa344](https://togithub.com/angular/components/commit/9906aa3443ad874c7470c94fea137c72779c9fcd) | feat | **theming:** Add APIs to check what information theme has |\n| [1a85dd299](https://togithub.com/angular/components/commit/1a85dd299b4ac38d201c3cc38c396b2f08398adc) | feat | **theming:** Add APIs to get color info from theme |\n| [e608f5fa3](https://togithub.com/angular/components/commit/e608f5fa392e9a5cd80923ba545b66217ad01c30) | feat | **theming:** Add APIs to get density info from theme |\n| [f52e97958](https://togithub.com/angular/components/commit/f52e97958ac8d9845017a5ead077952f3228144f) | feat | **theming:** Add APIs to get typography info from theme |\n| [68096ec9d](https://togithub.com/angular/components/commit/68096ec9d34aae793a7b3037c39e6ae7d1700933) | fix | **button:** Move fab unthemable tokens to theme mixin ([#&#8203;27580](https://togithub.com/angular/components/pull/27580)) |\n| [408c0b492](https://togithub.com/angular/components/commit/408c0b492f5d7edd6571b2287bb06aa89d582758) | fix | **card:** Apply tokens at mixin root ([#&#8203;27557](https://togithub.com/angular/components/pull/27557)) |\n| [06460d177](https://togithub.com/angular/components/commit/06460d17703ef28a8fc89833c389c479b1ba6bcf) | fix | **card:** Move unthemable tokens to theme mixin ([#&#8203;27579](https://togithub.com/angular/components/pull/27579)) |\n| [03a773a02](https://togithub.com/angular/components/commit/03a773a0237843fd1e1e600d0b9911eb924319bc) | fix | **checkbox:** Move unthemable tokens to theme mixin ([#&#8203;27556](https://togithub.com/angular/components/pull/27556)) |\n| [b423c0e0b](https://togithub.com/angular/components/commit/b423c0e0b754b1f1d118d17e022981c357c3aa68) | fix | **datepicker:** deprecate constructor injection in NativeDateAdapter ([#&#8203;26144](https://togithub.com/angular/components/pull/26144)) |\n| [7c16cc8b6](https://togithub.com/angular/components/commit/7c16cc8b659133167f1b875dcfe77ca806bfe876) | fix | **list:** Move unthemable tokens to theme mixin ([#&#8203;27607](https://togithub.com/angular/components/pull/27607)) |\n| [047404067](https://togithub.com/angular/components/commit/047404067865a2452bfcb93b2374ac07aca319be) | fix | **progress-bar:** Move unthemable tokens to theme mixin ([#&#8203;27563](https://togithub.com/angular/components/pull/27563)) |\n| [593fc79ec](https://togithub.com/angular/components/commit/593fc79ecbc6677f04e2d3707bff024b00a517e8) | fix | **progress-spinner:** Move unthemable tokens to theme mixin ([#&#8203;27567](https://togithub.com/angular/components/pull/27567)) |\n| [b13c6aa19](https://togithub.com/angular/components/commit/b13c6aa194cf560a304213961ae28725f8d0a4e2) | fix | **slider:** change slider to use MDC's token API ([#&#8203;27375](https://togithub.com/angular/components/pull/27375)) |\n| [c572dc4bf](https://togithub.com/angular/components/commit/c572dc4bf4d48448699288aeac2be14db0186a86) | fix | **slider:** Move unthemable tokens to theme mixin ([#&#8203;27584](https://togithub.com/angular/components/pull/27584)) |\n| [65c97170d](https://togithub.com/angular/components/commit/65c97170d2b3d239fda25bd049ec417e0098fe12) | fix | **snack-bar:** Move unthemable tokens to theme mixin ([#&#8203;27596](https://togithub.com/angular/components/pull/27596)) |\n| [6cc6cf21f](https://togithub.com/angular/components/commit/6cc6cf21f292d78c930cbda79c1f337bd6b82bfe) | fix | **tooltip:** Emit tokens under mixin root selector ([#&#8203;27585](https://togithub.com/angular/components/pull/27585)) |\n| [ccd2d7fa7](https://togithub.com/angular/components/commit/ccd2d7fa72f4566ab2c2aeb78a5ac4b7d4149bbf) | fix | **tooltip:** Move unthemable tokens to theme mixin ([#&#8203;27569](https://togithub.com/angular/components/pull/27569)) |\n| [f7e3ae3bd](https://togithub.com/angular/components/commit/f7e3ae3bd1b86d5987df57bb06d350001c592931) | fix | remove legacy components ([#&#8203;27622](https://togithub.com/angular/components/pull/27622)) |\n\n##### multiple\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [86e9e524c](https://togithub.com/angular/components/commit/86e9e524c3234f44eece21632048cd4290e5f3f4) | fix | remove .import.scss and -legacy-index.scss files ([#&#8203;27571](https://togithub.com/angular/components/pull/27571)) |\n| [55f9618b6](https://togithub.com/angular/components/commit/55f9618b687fc0da4743a3cf27e113ceb837e151) | fix | remove unnecessary base classes ([#&#8203;27632](https://togithub.com/angular/components/pull/27632)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular/pull/51783","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#51783)"},{"Id":"1896772586","IsPullRequest":true,"CreatedAt":"2023-09-14T17:35:52","Actor":"josephperrott","Number":"51780","RawContent":null,"Title":"Update cross repo deps","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51780","RelatedDescription":"Closed or merged PR \"Update cross repo deps\" (#51780)"},{"Id":"1896829311","IsPullRequest":true,"CreatedAt":"2023-09-14T15:33:03","Actor":"akib1997","Number":"51782","RawContent":null,"Title":"docs(docs-infra): installation note for PowerShell","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nInstallation guide not working in PowerShell\r\n\r\nIssue Number: #51763\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/51782","RelatedDescription":"Open PR \"docs(docs-infra): installation note for PowerShell\" (#51782)"},{"Id":"1896783644","IsPullRequest":true,"CreatedAt":"2023-09-14T15:11:17","Actor":"callpri","Number":"51781","RawContent":null,"Title":"Update resources.json","State":"open","Body":"Angular plug-in for CodeLobster IDE is added\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51781","RelatedDescription":"Open PR \"Update resources.json\" (#51781)"},{"Id":"1896713222","IsPullRequest":true,"CreatedAt":"2023-09-14T14:36:18","Actor":"bampakoa","Number":"51779","RawContent":null,"Title":"docs: update Aristeidis Bampakos bio","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51779","RelatedDescription":"Open PR \"docs: update Aristeidis Bampakos bio\" (#51779)"},{"Id":"1896682801","IsPullRequest":false,"CreatedAt":"2023-09-14T14:20:34","Actor":"midogoss","Number":"51778","RawContent":null,"Title":"Bug when set property in FormGroup","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nthis code in my component:\r\n\r\n```ts\r\nconsole.log(\"professNew Old: \", this.formClient.controls['professNew'].value)\r\nthis.formClient.controls['professNew'].setValue(\"Administration System\")\r\nconsole.log(\"professNew New: \", this.formClient.controls['professNew'].value)\r\n```\r\nThe output of the above code is:\r\nprofessNew Old:  Professor\r\nmain.js:18553\r\nprofessNew New:  null\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.2.9\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51778","RelatedDescription":"Open issue \"Bug when set property in FormGroup\" (#51778)"},{"Id":"1896663454","IsPullRequest":true,"CreatedAt":"2023-09-14T14:10:41","Actor":"cexbrayat","Number":"51777","RawContent":null,"Title":"fix(localize): ng-add schematics for application builder","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nThe schematics did not support the `application` builder, which is the new default builder in an application built with the CLI v17\r\n\r\n## What is the new behavior?\r\n\r\nThe schematic now supports it.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nThis PR needs `@shematics/angular` v17, which will be the case once https://github.com/angular/angular/pull/51220 is merged \r\n","Url":"https://github.com/angular/angular/pull/51777","RelatedDescription":"Open PR \"fix(localize): ng-add schematics for application builder\" (#51777)"},{"Id":"1896593064","IsPullRequest":true,"CreatedAt":"2023-09-14T13:35:05","Actor":"devversion","Number":"51776","RawContent":null,"Title":"refactor: ensure top-level symbols are marked as side-effect free","State":"open","Body":"Terser does not treat `Symbol` as side-effect free- so if we end up with a symbol\r\nexport being loaded, it will result in the symbol being retained.\r\n\r\nWe noticed this in the signals prototyping where symbols exported from `computed`\r\nended up appearing in symbol bundling tests.","Url":"https://github.com/angular/angular/pull/51776","RelatedDescription":"Open PR \"refactor: ensure top-level symbols are marked as side-effect free\" (#51776)"},{"Id":"1896220745","IsPullRequest":false,"CreatedAt":"2023-09-14T11:09:16","Actor":"roma2341","Number":"51773","RawContent":null,"Title":"Add imports for standalone directives.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI need to display a modal window containing components from my directive. However, I cannot import modules with these components directly into my directive because it does not have \"imports\". I'm using this directive within the hostDirectives section of certain components. I initially believed that directives were template-less components, but I now understand that the key distinction is that standalone components can have imports, whereas standalone directives cannot.\n\n### Proposed solution\n\nTo add imports to standalone directives.\n\n### Alternatives considered\n\nI attempted to create a module for directives, but I found that I could only use standalone directives as hostDirectives.","Url":"https://github.com/angular/angular/issues/51773","RelatedDescription":"Closed issue \"Add imports for standalone directives.\" (#51773)"},{"Id":"1896207045","IsPullRequest":true,"CreatedAt":"2023-09-14T10:51:34","Actor":"pkozlowski-opensource","Number":"51772","RawContent":null,"Title":"PR 51722 patch for 16.2 ","State":"closed","Body":"See https://github.com/angular/angular/pull/51722#issuecomment-1719135313","Url":"https://github.com/angular/angular/pull/51772","RelatedDescription":"Closed or merged PR \"PR 51722 patch for 16.2 \" (#51772)"},{"Id":"1896270848","IsPullRequest":true,"CreatedAt":"2023-09-14T10:31:06","Actor":"alan-agius4","Number":"51774","RawContent":null,"Title":"Zone.js release 0.14.0","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/51774","RelatedDescription":"Open PR \"Zone.js release 0.14.0\" (#51774)"},{"Id":"1894970390","IsPullRequest":true,"CreatedAt":"2023-09-14T09:19:41","Actor":"angular-robot","Number":"51761","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51761","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51761)"},{"Id":"1895963270","IsPullRequest":false,"CreatedAt":"2023-09-14T08:55:23","Actor":"v1nger125","Number":"51770","RawContent":null,"Title":"Angular 15 can't be build with es2022 and static members","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, core\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi angular,\r\n\r\nI see 2 main issues related to this problem\r\nhttps://github.com/angular/angular/issues/48764\r\nwhich is referenced to\r\nhttps://github.com/microsoft/TypeScript/issues/52004\r\n\r\nTypescript fix is ready, but it is available only in\r\n\r\nversion 5.1.0+\r\n\r\nwhile angular 15 have engines\r\n\r\n\"typescript\": \">=4.8.2 <5.0\"\r\n\r\nmain build target is replaced according to browserslist so probably it is not a big problem, but test build isn't(maybe some other builds neither), also i expect main build will be failed if i will configure browserslist for ES2022\r\n\r\ncould you clarify are we expecting fix for that, both issues your and typescript marked as closed, but in general the problem is not solved.\n\n### Please provide a link to a minimal reproduction of the bug\n\nsee https://github.com/angular/angular/issues/48764\n\n### Please provide the exception or error you saw\n\n```true\nsee https://github.com/angular/angular/issues/48764\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nsee https://github.com/angular/angular/issues/48764\n```\n\n\n### Anything else?\n\ni can replace target for test build to ES2020 and all will be ok, but the warning still will appear, is it expected?\r\n\r\nTypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI. To control ECMA version and features use the Browerslist configuration. For more information, see https://angular.io/guide/build#configuring-browser-compatibility\r\n    NOTE: You can set the \"target\" to \"ES2022\" in the project's tsconfig to remove this warning.","Url":"https://github.com/angular/angular/issues/51770","RelatedDescription":"Closed issue \"Angular 15 can't be build with es2022 and static members\" (#51770)"},{"Id":"1896018374","IsPullRequest":false,"CreatedAt":"2023-09-14T08:23:51","Actor":"blueiceprj","Number":"51771","RawContent":null,"Title":"Cannot read properties of undefined (reading 'producerNode')","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith new version 16.2.5\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nCannot read properties of undefined (reading 'producerNode')\r\n    at assertConsumerNode (core.mjs:2578:5)\r\n    at producerRemoveLiveConsumerAtIndex (core.mjs:2570:9)\r\n    at consumerDestroy (core.mjs:2515:13)\r\n    at destroyLView (core.mjs:7116:46)\r\n    at ViewContainerRef.remove (core.mjs:24479:13)\r\n    at common.mjs:3143:31\r\n    at DefaultIterableDiffer.forEachOperation (core.mjs:29718:17)\r\n    at NgForOf._applyChanges (common.mjs:3135:17)\r\n    at NgForOf.ngDoCheck (common.mjs:3130:22)\r\n    at callHookInternal (core.mjs:3900:14)\r\n................\r\nERROR: index [Expected=> 0 < 0 <=Actual]\r\n    at throwError (core.mjs:328:11)\r\n    at assertLessThan (core.mjs:299:9)\r\n    at ViewContainerRef._adjustIndex (core.mjs:24495:13)\r\n    at ViewContainerRef.remove (core.mjs:24469:34)\r\n    at common.mjs:3143:31\r\n    at DefaultIterableDiffer.forEachOperation (core.mjs:29718:17)\r\n    at NgForOf._applyChanges (common.mjs:3135:17)\r\n    at NgForOf.ngDoCheck (common.mjs:3130:22)\r\n    at callHookInternal (core.mjs:3900:14)\r\n    at callHook (core.mjs:3931:9)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.2\r\nNode: 20.6.0 (Unsupported)\r\nPackage Manager: npm 9.8.1\r\nOS: darwin x64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1602.2\r\n@angular-devkit/build-angular      16.2.2\r\n@angular-devkit/build-ng-packagr   0.1002.0\r\n@angular-devkit/core               16.2.2\r\n@angular-devkit/schematics         16.2.2\r\n@angular/cdk                       16.2.4\r\n@angular/cli                       16.2.2\r\n@angular/flex-layout               15.0.0-beta.42\r\n@angular/material                  16.2.4\r\n@angular/material-moment-adapter   16.2.4\r\n@angular/youtube-player            16.2.4\r\n@schematics/angular                16.2.2\r\nrxjs                               7.8.1\r\ntypescript                         5.1.6\r\nzone.js                            0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51771","RelatedDescription":"Open issue \"Cannot read properties of undefined (reading 'producerNode')\" (#51771)"},{"Id":"1895938114","IsPullRequest":true,"CreatedAt":"2023-09-14T07:45:33","Actor":"seansing","Number":"51769","RawContent":null,"Title":"Update photo urls in db.json for first-app-lesson-14.md","State":"closed","Body":"When following the tutorial, the db.json's photo urls point to localhost:4200/assets... which doesn't exist. \r\n\r\nUpdating to fetch from the tutorial folder's assets.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\nWhen following the tutorial, the `db.json`'s photo urls point to localhost:4200/assets... which doesn't exist. The site shows a broken image after `ng serve`.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\nThe images show up correctly based on the links in `db.json`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51769","RelatedDescription":"Closed or merged PR \"Update photo urls in db.json for first-app-lesson-14.md\" (#51769)"},{"Id":"1895810976","IsPullRequest":false,"CreatedAt":"2023-09-14T06:28:26","Actor":"devandreassimmeth","Number":"51768","RawContent":null,"Title":"Async pipe breaks on specific project structure","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWe managed to create a specific project structure that breaks the async pipe in components that get data from the backend using NgRX while NgRX is working fine. Our structure is the following:\r\n- We have an AppComponent that implements the main navbar/navigation. Therefor we have this navbar and an router-outlet in the AppComponent.\r\n- These so loaded top sub-components implement another level of navigation, a more fine-grained navigation over a sidenav. Therefor you find this sidenav, a main with another router-outlet to load the data-pages itself and a footer there.\r\n- To get data from the backend we use NgRX. So the component that needs data requests it over dispatching an action, the data is loaded over an effect and comes back into the component over a selector. There the data is loaded in the HTML using the async pipe.\r\n- In addition to that we have pages, where the data requesting is done in the parent component (so in one of the top sub-components), because a set of pages under a specific route (e.g. .../results/...) need the same dataset and it makes sense to load it once for all of these pages instead of in every component again.\r\n\r\nThis creates a specific situation that breaks the async pipe / change detection in the HTML besides the fact, that NgRx works properly. This can be proved by subscriptions in the corresponding typescript file of the broken HTML that log the current state values in the browser console. IMPORTANT NOTE / ATTENTION: This error only occurs when NO plugins like \"Redux DevTools\", etc are installed in the browser. When you install e.g. the Redux DevTools, the error does NOT occur!\r\n\r\nI added a link with an Angular project that implements the described structure and where you can see the bug.\r\nWhen you load one of the two data-components by clicking on the corresponding sidenav-button, the async pipe breaks (see UI) besides the fact, that the data load through NgRx works fine (see browser console). This is logged in the browser console using subscriptions.\r\n\r\nIn addition to that when you reload the component, where the data is loaded in the parent window, over the browser reload the async pipe also breaks on browser reload. In the component that loads it itself, the async pipe does not break on browser reload. That's the only version where the async pipe does not break.\r\n\r\nNow the question is: Is this a bug or do I have an error somewhere in my application?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/devandreassimmeth/browser-reload-bug\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51768","RelatedDescription":"Open issue \"Async pipe breaks on specific project structure\" (#51768)"},{"Id":"1895546106","IsPullRequest":true,"CreatedAt":"2023-09-14T02:29:34","Actor":"pmvald","Number":"51767","RawContent":null,"Title":"Flatten scope info in local compilation mode","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51767","RelatedDescription":"Open PR \"Flatten scope info in local compilation mode\" (#51767)"},{"Id":"1895127700","IsPullRequest":false,"CreatedAt":"2023-09-13T20:19:15","Actor":"Christian24","Number":"51765","RawContent":null,"Title":"Improve types for TestModuleMetadata","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nHello,\r\n\r\nI wish `TestModuleMetadata` were typed a little more. I have seen something along the lines of:\r\n\r\n```typescript\r\nawait TestBed.configureTestingModule({\r\n      declarations: [\r\n        AppComponent\r\n      ],\r\n      providers: [{provide: MyService, usevalue: myMock}]\r\n    }).compileComponents();\r\n```\r\n\r\n`useValue` isn't written correctly, there is no error in the static code analysis, because the actual type is just `any[]`.\n\n### Proposed solution\n\nMaybe we can change it to something like:\r\n\r\n```typescript\r\nexport interface ProviderInterface {\r\n  provide: any;\r\n  useValue: any;\r\n  multi?: boolean;\r\n}\r\n... TestModuleMetadata\r\nimports?: Array<Type<any>|ModuleWithProviders<unknown>|any[]>;\r\nproviders?: Array<ProviderInterface | TypeProvider | EnvironmentProviders>;\r\ncomponentProviders?: Array<ProviderInterface | TypeProvider | EnvironmentProviders>;\r\n```\r\n\r\nThis would still allow people to pass any mock for providers they want, but we would help them get the structure for the provider correctly. \n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular/issues/51765","RelatedDescription":"Closed issue \"Improve types for TestModuleMetadata\" (#51765)"},{"Id":"1895180054","IsPullRequest":true,"CreatedAt":"2023-09-13T19:59:29","Actor":"JeanMeche","Number":"51766","RawContent":null,"Title":"fix(core): define better typings for `TestModuleMetadata`.","State":"open","Body":"To improve compiler errors on `TestModuleMetadata`, lets replace `any`  for `providers`, `declarations` and `imports`\r\n\r\nfixes #37178\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes, maybe\r\n- [ ] No\r\n","Url":"https://github.com/angular/angular/pull/51766","RelatedDescription":"Open PR \"fix(core): define better typings for `TestModuleMetadata`.\" (#51766)"},{"Id":"1895047729","IsPullRequest":true,"CreatedAt":"2023-09-13T18:32:36","Actor":"devknoll","Number":"51764","RawContent":null,"Title":"refactor(core): optimize afterRender callback timing","State":"open","Body":"afterRender callbacks should only be run when the DOM has changed, while afterNextRender should force callbacks to run even if the DOM hasn't changed\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n`afterRender` callbacks are run after every root change detection cycle.\r\n\r\n\r\n## What is the new behavior?\r\n\r\n`afterRender` callbacks are run after every root change detection cycle, provided that the DOM was mutated (via `Renderer2`) during that cycle. If an `afterNextRender` callback is queued, all callbacks (including any `afterRender`) will run at the next opportunity, regardless of whether the DOM was mutated.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n`afterRender` is in developer preview, and so this is not considered a breaking change.\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51764","RelatedDescription":"Open PR \"refactor(core): optimize afterRender callback timing\" (#51764)"},{"Id":"1894979354","IsPullRequest":true,"CreatedAt":"2023-09-13T17:44:15","Actor":"AndrewKushnir","Number":"51762","RawContent":null,"Title":"Bump version to \"v17.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51762","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.4\" with changelog.\" (#51762)"},{"Id":"1894968674","IsPullRequest":true,"CreatedAt":"2023-09-13T17:35:58","Actor":"AndrewKushnir","Number":"51760","RawContent":null,"Title":"docs: release notes for the v16.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/51760","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.5 release\" (#51760)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1897023307","IsPullRequest":true,"CreatedAt":"2023-09-14T19:59:57","Actor":"clydin","Number":"25846","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove usage of terser constants in esbuild","State":"closed","Body":"The terser build time constant import from the `@angular/compiler-cli` package is no longer used in the esbuild-based builder. The constants present are already defined and conditionally added within the build configuration itself. This not only provides more flexibility but also removes the need to import the package early in the process. The import is also an expensive import due to it needing TypeScript and being ESM that needs to be dynamically imported via a function helper to work around current ESM/TypeScript/CommonJS limitations.","Url":"https://github.com/angular/angular-cli/pull/25846","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove usage of terser constants in esbuild\" (#25846)"},{"Id":"1897211213","IsPullRequest":true,"CreatedAt":"2023-09-14T19:57:51","Actor":"alan-agius4","Number":"25848","RawContent":null,"Title":"Revert \"ci: use `head_ref` for concurrency group\"","State":"closed","Body":"Reverts angular/angular-cli#25847","Url":"https://github.com/angular/angular-cli/pull/25848","RelatedDescription":"Closed or merged PR \"Revert \"ci: use `head_ref` for concurrency group\"\" (#25848)"},{"Id":"1897171384","IsPullRequest":true,"CreatedAt":"2023-09-14T19:35:14","Actor":"alan-agius4","Number":"25847","RawContent":null,"Title":"ci: use `head_ref` for concurrency group","State":"closed","Body":"Use the head_ref value for the concurrency group on `ci` rather than the ref, so that the main ref is not used and cancelling across pull requests and the main branch\r\n\r\nBackport https://github.com/angular/angular/pull/51784 to the CLI.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25847","RelatedDescription":"Closed or merged PR \"ci: use `head_ref` for concurrency group\" (#25847)"},{"Id":"1897005975","IsPullRequest":false,"CreatedAt":"2023-09-14T17:22:53","Actor":"justintim-es","Number":"25845","RawContent":null,"Title":"To host Angular SSR on a VM requires the whole angular project instead of just the dist folder","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nonce systemd starts up the server with node \r\na module is not found because the whole project needs to be uploaded instead of just the dist folder which might is how it should work while without systemd you can run with just the dist folder\r\nbut google how could my previous issue dissapear and im sorry for not hitting the emergency button when you were stalked by the other google guy\r\n\n\n### Minimal Reproduction\n\nng new thisisabug\r\nng build && ng run thisisabug:server\r\ntry to launch on ubuntu with systemd\n\n### Exception or Error\n\n```text\nmodule not found\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.6\r\nNode: 16.18.0\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.1.6\r\n@angular/cli                    15.1.6\r\n@nguniversal/builders           15.2.1\r\n@nguniversal/express-engine     15.2.1\r\n@schematics/angular             15.1.6\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25845","RelatedDescription":"Open issue \"To host Angular SSR on a VM requires the whole angular project instead of just the dist folder\" (#25845)"},{"Id":"1896936766","IsPullRequest":false,"CreatedAt":"2023-09-14T17:00:50","Actor":"The-MAZZTer","Number":"25844","RawContent":null,"Title":"Angular CLI can be easily broken when external dependencies update","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nUnknown, probably none.\n\n### Description\n\nI observed this issue blocking creation of new Angular projects today:\r\n\r\nhttps://github.com/babel/babel/issues/15967\r\n\r\nIt has since been fixed, but the babel team should not be able to break basic Angular CLI functionality. It is a bad look if someone goes through the basic project creation steps on the Angular site and they don't work. Doesn't matter who is the blame, the user will blame Angular. Angular team should take steps to ensure this does not happen, such as by locking down versions of dependencies until new ones are tested and verified working, or some other solution.\n\n### Minimal Reproduction\n\nRun ng new command while a dependency has been broken by a third party.\n\n### Exception or Error\n\n```text\nhttps://github.com/babel/babel/issues/15967\r\n\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @babel/types@^7.22.18.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\r\n\r\nnpm ERR! A complete log of this run can be found in blah blah blah blah\r\nx Package install failed, see above.\r\nThe Schematic workflow failed. See above.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.2\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\n@angular-devkit/architect 0.1602.2 (cli-only)\r\n@angular-devkit/core 16.2.2 (cli-only)\r\n@angular-devkit/schematics 16.2.2 (cli-only)\r\n@schematics/angular 16.2.2 (cli-only)\n```\n\n\n### Anything else relevant?\n\nGiven the nature of how the error is presented it is impossible for the user to know where the problem is coming from (@babel/types is not directly referenced in the generated package.json; I assume it's coming from @babel/core but I can't tell since npm doesn't tell you!) or what steps they can take to work around it (probably none?)","Url":"https://github.com/angular/angular-cli/issues/25844","RelatedDescription":"Closed issue \"Angular CLI can be easily broken when external dependencies update\" (#25844)"},{"Id":"1896079944","IsPullRequest":true,"CreatedAt":"2023-09-14T15:25:31","Actor":"alan-agius4","Number":"25839","RawContent":null,"Title":"fix(@angular-devkit/build-angular): several windows fixes to application builder prerendering","State":"closed","Body":"\r\n\r\nThis commit fixes several Windows issues in the prerendering pipeline. Primarily due to path normalization and other Windows only constraints.\r\n","Url":"https://github.com/angular/angular-cli/pull/25839","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): several windows fixes to application builder prerendering\" (#25839)"},{"Id":"1896435086","IsPullRequest":false,"CreatedAt":"2023-09-14T12:39:26","Actor":"justintim-es","Number":"25842","RawContent":null,"Title":"Hi to get ssr running on a vm i need to upload the whole angular project instead of just the dist","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nsomehow the main.js throws a module not found if not the whole project is uploaded\n\n### Minimal Reproduction\n\nng new buschug\r\nng build && ng run buschug:server\r\n\r\n\r\nand try to host the application on a vm like ubuntu with systemd\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nngular CLI: 15.1.6\r\nNode: 16.18.0\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.1.6\r\n@angular/cli                    15.1.6\r\n@nguniversal/builders           15.2.1\r\n@nguniversal/express-engine     15.2.1\r\n@schematics/angular             15.1.6\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25842","RelatedDescription":"Closed issue \"Hi to get ssr running on a vm i need to upload the whole angular project instead of just the dist\" (#25842)"},{"Id":"1896856090","IsPullRequest":false,"CreatedAt":"2023-09-14T12:29:17","Actor":"directcuteo","Number":"25843","RawContent":null,"Title":"Angular doesn't work with wasm web worker","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nIn my Angular 16 project, I want to use a library that provides some functionalities. These functionalities are very CPU intens, therefore they were build using Rust and OCaml and integrated using WebWorkers and WASM.\r\nI am able to access the library successfully in a simple HTML + javascript + npm project but not in my Angular project.\r\nIt seems that the code that is delivered by the web worker is different than the original and it is accessing an inexistent function.\r\n\r\n### The error\r\n![image](https://github.com/angular/angular/assets/37619567/7589517e-adea-4d53-b215-d567853cde5d)\r\n\r\n### Error location\r\nI don't know why there is a _mainWorker function but that one is not found anywhere in the code (at compile time).\r\nThe file is grabbed at runtime as `blob` using http request.\r\n![image](https://github.com/angular/angular/assets/37619567/e55aa836-2ebb-40e9-85b6-955209c80e51)\r\n![image](https://github.com/angular/angular/assets/37619567/5add94f0-b45c-497e-b033-34e77446fae2)\r\n\r\n### And here is that function's body in its original form(in the IDE)\r\n![image](https://github.com/angular/angular/assets/37619567/65e6ad38-09b7-45b6-a42a-88ca127290a4)\r\nIt seems that **on runtime** this code is changed and it is changed in a wrong way -> it results in that error.\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n`_mainWorker` is not defined\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\n\r\nAngular CLI: 16.1.8\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.8\r\n@angular-devkit/build-angular   16.1.8\r\n@angular-devkit/core            16.1.8\r\n@angular-devkit/schematics      16.1.8\r\n@angular/cdk                    16.1.7\r\n@angular/fire                   7.6.1\r\n@angular/material               16.1.7\r\n@schematics/angular             16.1.8\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nwebpack                         5.88.2\r\nzone.js                         0.13.1\r\n\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25843","RelatedDescription":"Open issue \"Angular doesn't work with wasm web worker\" (#25843)"},{"Id":"1896086584","IsPullRequest":true,"CreatedAt":"2023-09-14T11:46:49","Actor":"alan-agius4","Number":"25840","RawContent":null,"Title":"test(@angular/cli): test all `ng add` in the esbuild pipeline","State":"closed","Body":"This commits adds the entire `tests/commands/add` directory to be tested with esbuild.\r\n","Url":"https://github.com/angular/angular-cli/pull/25840","RelatedDescription":"Closed or merged PR \"test(@angular/cli): test all `ng add` in the esbuild pipeline\" (#25840)"},{"Id":"1896240100","IsPullRequest":true,"CreatedAt":"2023-09-14T10:16:58","Actor":"angular-robot","Number":"25841","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `6ee6ad0` -> `eb1c66b` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `a4bd2b8` -> `ce53175` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b02604d` -> `2d2271d` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `cfa9c46` -> `b27793c` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `5191c10` -> `45d3697` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `4fad91e` -> `57290b6` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `7a9d82c` -> `3537f20` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `ee9946d` -> `28686a2` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `4f94abe` -> `cb3a774` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `c57877b` -> `3fe6596` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `85f11f3` -> `3582e1e` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `8cae074` -> `698624c` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `030c432` -> `496056c` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `1c6c16f` -> `b9770f3` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `7bc1c08` -> `2ea2311` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `480ecc6` -> `c5e73b3` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `bcc0d07` -> `5b7ccd4` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `50c51ef` -> `6d19921` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `4416246` -> `c6a952f` |\n| angular/dev-infra | action | digest | `f245bb8` -> `f622b51` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25841","RelatedDescription":"Open PR \"build: update angular\" (#25841)"},{"Id":"1894218573","IsPullRequest":true,"CreatedAt":"2023-09-14T08:56:54","Actor":"angular-robot","Number":"25829","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `5820176` -> `6ee6ad0` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `d1fcbc3` -> `a4bd2b8` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b88792a` -> `b02604d` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `98bd574` -> `cfa9c46` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.2` -> `17.0.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.2/17.0.0-next.3) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `549dc26` -> `5191c10` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `386e1a6` -> `4fad91e` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `53d0b53` -> `7a9d82c` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `61b8a73` -> `ee9946d` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `eda29b9` -> `4f94abe` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `307cdb5` -> `c57877b` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `8406e8a` -> `85f11f3` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f86cf19` -> `8cae074` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.2` -> `17.0.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.2/17.0.0-next.3) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `3209f09` -> `030c432` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `497c902` -> `1c6c16f` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `1517b27` -> `7bc1c08` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `7b696f0` -> `480ecc6` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `01a9767` -> `bcc0d07` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `08977e1` -> `50c51ef` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `b96ece1` -> `4416246` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.0.0-next.3/17.0.0-next.4) |\n| angular/dev-infra | action | digest | `0f307b2` -> `f245bb8` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.0.0-next.4`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1700-next4-2023-09-13)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.0.0-next.3...17.0.0-next.4)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [59387ee476](https://togithub.com/angular/angular/commit/59387ee476dff1a893a01fe5cbee3c95b93c0cdb) | feat | support styles and styleUrl as strings ([#&#8203;51715](https://togithub.com/angular/angular/pull/51715)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [73e4bf2ed2](https://togithub.com/angular/angular/commit/73e4bf2ed2471faf44a49b591e19a390d5867449) | feat | Add feature to support the View Transitions API ([#&#8203;51314](https://togithub.com/angular/angular/pull/51314)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.3`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next3-rock-rock-2023-09-13)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.2...17.0.0-next.3)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [db06fa8d89](https://togithub.com/angular/components/commit/db06fa8d8939d793f598bc3dbedc96a5a71c0db0) | fix | **autocomplete:** requireSelection incorrectly resetting value when there are no options ([#&#8203;27781](https://togithub.com/angular/components/pull/27781)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25829","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25829)"},{"Id":"1895703451","IsPullRequest":true,"CreatedAt":"2023-09-14T08:56:27","Actor":"angular-robot","Number":"25838","RawContent":null,"Title":"build: update github/codeql-action action to v2.21.6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.5` -> `v2.21.6` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.6`](https://togithub.com/github/codeql-action/compare/v2.21.5...v2.21.6)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.5...v2.21.6)\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25838","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.21.6\" (#25838)"},{"Id":"1895703322","IsPullRequest":true,"CreatedAt":"2023-09-14T08:56:10","Actor":"angular-robot","Number":"25837","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.19.2` -> `0.19.3`](https://renovatebot.com/diffs/npm/esbuild/0.19.2/0.19.3) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.2` -> `0.19.3`](https://renovatebot.com/diffs/npm/esbuild/0.19.2/0.19.3) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.19.2` -> `0.19.3`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.2/0.19.3) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.19.2` -> `0.19.3`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.19.2/0.19.3) |\n| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.66.1` -> `1.67.0`](https://renovatebot.com/diffs/npm/sass/1.66.1/1.67.0) |\n| [sass](https://togithub.com/sass/dart-sass) | devDependencies | minor | [`1.66.1` -> `1.67.0`](https://renovatebot.com/diffs/npm/sass/1.66.1/1.67.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild (esbuild)</summary>\n\n### [`v0.19.3`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#0193)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.19.2...v0.19.3)\n\n-   Fix `list-style-type` with the `local-css` loader ([#&#8203;3325](https://togithub.com/evanw/esbuild/issues/3325))\n\n    The `local-css` loader incorrectly treated all identifiers provided to `list-style-type` as a custom local identifier. That included identifiers such as `none` which have special meaning in CSS, and which should not be treated as custom local identifiers. This release fixes this bug:\n\n    ```css\n    /* Original code */\n    ul { list-style-type: none }\n\n    /* Old output (with --loader=local-css) */\n    ul {\n      list-style-type: stdin_none;\n    }\n\n    /* New output (with --loader=local-css) */\n    ul {\n      list-style-type: none;\n    }\n    ```\n\n    Note that this bug only affected code using the `local-css` loader. It did not affect code using the `css` loader.\n\n-   Avoid inserting temporary variables before `use strict` ([#&#8203;3322](https://togithub.com/evanw/esbuild/issues/3322))\n\n    This release fixes a bug where esbuild could incorrectly insert automatically-generated temporary variables before `use strict` directives:\n\n    ```js\n    // Original code\n    function foo() {\n      'use strict'\n      a.b?.c()\n    }\n\n    // Old output (with --target=es6)\n    function foo() {\n      var _a;\n      \"use strict\";\n      (_a = a.b) == null ? void 0 : _a.c();\n    }\n\n    // New output (with --target=es6)\n    function foo() {\n      \"use strict\";\n      var _a;\n      (_a = a.b) == null ? void 0 : _a.c();\n    }\n    ```\n\n-   Adjust TypeScript `enum` output to better approximate `tsc` ([#&#8203;3329](https://togithub.com/evanw/esbuild/issues/3329))\n\n    TypeScript enum values can be either number literals or string literals. Numbers create a bidirectional mapping between the name and the value but strings only create a unidirectional mapping from the name to the value. When the enum value is neither a number literal nor a string literal, TypeScript and esbuild both default to treating it as a number:\n\n    ```ts\n    // Original TypeScript code\n    declare const foo: any\n    enum Foo {\n      NUMBER = 1,\n      STRING = 'a',\n      OTHER = foo,\n    }\n\n    // Compiled JavaScript code (from \"tsc\")\n    var Foo;\n    (function (Foo) {\n      Foo[Foo[\"NUMBER\"] = 1] = \"NUMBER\";\n      Foo[\"STRING\"] = \"a\";\n      Foo[Foo[\"OTHER\"] = foo] = \"OTHER\";\n    })(Foo || (Foo = {}));\n    ```\n\n    However, TypeScript does constant folding slightly differently than esbuild. For example, it may consider template literals to be string literals in some cases:\n\n    ```ts\n    // Original TypeScript code\n    declare const foo = 'foo'\n    enum Foo {\n      PRESENT = `${foo}`,\n      MISSING = `${bar}`,\n    }\n\n    // Compiled JavaScript code (from \"tsc\")\n    var Foo;\n    (function (Foo) {\n      Foo[\"PRESENT\"] = \"foo\";\n      Foo[Foo[\"MISSING\"] = `${bar}`] = \"MISSING\";\n    })(Foo || (Foo = {}));\n    ```\n\n    The template literal initializer for `PRESENT` is treated as a string while the template literal initializer for `MISSING` is treated as a number. Previously esbuild treated both of these cases as a number but starting with this release, esbuild will now treat both of these cases as a string. This doesn't exactly match the behavior of `tsc` but in the case where the behavior diverges `tsc` reports a compile error, so this seems like acceptible behavior for esbuild. Note that handling these cases completely correctly would require esbuild to parse type declarations (see the `declare` keyword), which esbuild deliberately doesn't do.\n\n-   Ignore case in CSS in more places ([#&#8203;3316](https://togithub.com/evanw/esbuild/issues/3316))\n\n    This release makes esbuild's CSS support more case-agnostic, which better matches how browsers work. For example:\n\n    ```css\n    /* Original code */\n    @&#8203;KeyFrames Foo { From { OpaCity: 0 } To { OpaCity: 1 } }\n    body { CoLoR: YeLLoW }\n\n    /* Old output (with --minify) */\n    @&#8203;KeyFrames Foo{From {OpaCity: 0} To {OpaCity: 1}}body{CoLoR:YeLLoW}\n\n    /* New output (with --minify) */\n    @&#8203;KeyFrames Foo{0%{OpaCity:0}To{OpaCity:1}}body{CoLoR:#ff0}\n    ```\n\n    Please never actually write code like this.\n\n-   Improve the error message for `null` entries in `exports` ([#&#8203;3377](https://togithub.com/evanw/esbuild/issues/3377))\n\n    Package authors can disable package export paths with the `exports` map in `package.json`. With this release, esbuild now has a clearer error message that points to the `null` token in `package.json` itself instead of to the surrounding context. Here is an example of the new error message:\n\n        âœ˜ [ERROR] Could not resolve \"msw/browser\"\n\n            lib/msw-config.ts:2:28:\n              2 â”‚ import { setupWorker } from 'msw/browser';\n                â•µ                             ~~~~~~~~~~~~~\n\n          The path \"./browser\" cannot be imported from package \"msw\" because it was explicitly disabled by\n          the package author here:\n\n            node_modules/msw/package.json:17:14:\n              17 â”‚       \"node\": null,\n                 â•µ               ~~~~\n\n          You can mark the path \"msw/browser\" as external to exclude it from the bundle, which will remove\n          this error and leave the unresolved path in the bundle.\n\n-   Parse and print the `with` keyword in `import` statements\n\n    JavaScript was going to have a feature called \"import assertions\" that adds an `assert` keyword to `import` statements. It looked like this:\n\n    ```js\n    import stuff from './stuff.json' assert { type: 'json' }\n    ```\n\n    The feature provided a way to assert that the imported file is of a certain type (but was not allowed to affect how the import is interpreted, even though that's how everyone expected it to behave). The feature was fully specified and then actually implemented and shipped in Chrome before the people behind the feature realized that they should allow it to affect how the import is interpreted after all. So import assertions are no longer going to be added to the language.\n\n    Instead, the [current proposal](https://togithub.com/tc39/proposal-import-attributes) is to add a feature called \"import attributes\" instead that adds a `with` keyword to import statements. It looks like this:\n\n    ```js\n    import stuff from './stuff.json' with { type: 'json' }\n    ```\n\n    This feature provides a way to affect how the import is interpreted. With this release, esbuild now has preliminary support for parsing and printing this new `with` keyword. The `with` keyword is not yet interpreted by esbuild, however, so bundling code with it will generate a build error. All this release does is allow you to use esbuild to process code containing it (such as removing types from TypeScript code). Note that this syntax is not yet a part of JavaScript and may be removed or altered in the future if the specification changes (which it already has once, as described above). If that happens, esbuild reserves the right to remove or alter its support for this syntax too.\n\n</details>\n\n<details>\n<summary>sass/dart-sass (sass)</summary>\n\n### [`v1.67.0`](https://togithub.com/sass/dart-sass/blob/HEAD/CHANGELOG.md#1670)\n\n[Compare Source](https://togithub.com/sass/dart-sass/compare/1.66.1...1.67.0)\n\n-   All functions defined in CSS Values and Units 4 are now once again parsed as\n    calculation objects: `round()`, `mod()`, `rem()`, `sin()`, `cos()`, `tan()`,\n    `asin()`, `acos()`, `atan()`, `atan2()`, `pow()`, `sqrt()`, `hypot()`,\n    `log()`, `exp()`, `abs()`, and `sign()`.\n\n    Unlike in 1.65.0, function calls are *not* locked into being parsed as\n    calculations or plain Sass functions at parse-time. This means that\n    user-defined functions will take precedence over CSS calculations of the same\n    name. Although the function names `calc()` and `clamp()` are still forbidden,\n    users may continue to freely define functions whose names overlap with other\n    CSS calculations (including `abs()`, `min()`, `max()`, and `round()` whose\n    names overlap with global Sass functions).\n\n-   As a consequence of the change in calculation parsing described above,\n    calculation functions containing interpolation are now parsed more strictly\n    than before. However, all interpolations that would have produced valid CSS\n    will continue to work, so this is not considered a breaking change.\n\n-   Interpolations in calculation functions that aren't used in a position that\n    could also have a normal calculation value are now deprecated. For example,\n    `calc(1px #{\"+ 2px\"})` is deprecated, but `calc(1px + #{\"2px\"})` is still\n    allowed. This deprecation is named `calc-interp`. See [the Sass website] for\n    more information.\n\n    [the Sass website]: https://sass-lang.com/d/calc-interp\n\n-   **Potentially breaking bug fix**: The importer used to load a given file is no\n    longer used to load absolute URLs that appear in that file. This was\n    unintented behavior that contradicted the Sass specification. Absolute URLs\n    will now correctly be loaded only from the global importer list. This applies\n    to the modern JS API, the Dart API, and the embedded protocol.\n\n##### Embedded Sass\n\n-   Substantially improve the embedded compiler's performance when compiling many\n    files or files that require many importer or function call round-trips with\n    the embedded host.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25837","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25837)"},{"Id":"1894986233","IsPullRequest":true,"CreatedAt":"2023-09-14T08:53:39","Actor":"alan-agius4","Number":"25836","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly re-point RXJS to ESM on Windows","State":"closed","Body":"Previously, the path matching and replacement did not consider non posix file systems like windows.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25836","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly re-point RXJS to ESM on Windows\" (#25836)"},{"Id":"1894844199","IsPullRequest":true,"CreatedAt":"2023-09-13T16:09:48","Actor":"alan-agius4","Number":"25835","RawContent":null,"Title":"release: cut the v17.0.0-next.4 release","State":"closed","Body":"(cherry picked from commit 6a89dbea26e50eb6f1d2e09e4fb7dbe1b923b802)\r\n","Url":"https://github.com/angular/angular-cli/pull/25835","RelatedDescription":"Closed or merged PR \"release: cut the v17.0.0-next.4 release\" (#25835)"},{"Id":"1894838723","IsPullRequest":true,"CreatedAt":"2023-09-13T16:05:47","Actor":"alan-agius4","Number":"25834","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.1.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the feature-freeze phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.0.0-next.4 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/25834","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.1.0-next.0\".\" (#25834)"},{"Id":"1894816154","IsPullRequest":true,"CreatedAt":"2023-09-13T16:01:39","Actor":"alan-agius4","Number":"25833","RawContent":null,"Title":"Bump version to \"v17.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25833","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.4\" with changelog.\" (#25833)"},{"Id":"1894645680","IsPullRequest":false,"CreatedAt":"2023-09-13T15:59:31","Actor":"vzakharov-rxnt","Number":"25830","RawContent":null,"Title":"ngDevMode is not defined - regression since 15.2","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nAfter upgrading from prior 15.2 to 15.2 or later (including latest 16.x), I am getting `ngDevMode is not defined` error on app load. The error is terminating, app does not load.\r\n\r\nI am using **custom webpack** plugin and **esbuild-loader** to build my app.\r\n\r\nI reproduced the issue using standard Angular boilerplate project here:\r\n- https://ng-esbuild-minify.netlify.app/\r\n- https://github.com/vzakharov-rxnt/ng-esbuild-minify\r\n\r\nTo prove that it works fine in 15.1, I created a branch where the issue is fixed, and opened a PR to merge. Only package.json was changed, downgrading Angular to 15.1. PR triggers CI build, so you can confirm that the issue is indeed fixed:\r\n- https://github.com/vzakharov-rxnt/ng-esbuild-minify/pull/1\r\n- https://deploy-preview-1--ng-esbuild-minify.netlify.app/\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://ng-esbuild-minify.netlify.app/\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\ncore.mjs:11067 Uncaught ReferenceError: ngDevMode is not defined\r\n    at 991 (core.mjs:11067:54)\r\n    at a (bootstrap:19:30)\r\n    at Ko (main.500e5851.js:391:239)\r\n    at main.500e5851.js:391:254\r\n    at l (jsonp chunk loading:34:28)\r\n    at main.500e5851.js:1:90\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular: 16.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    16.2.1\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n### Anything else?\r\n\r\nIn a real production app, our custom webpack configuration file is more complex and required to make a hybrid AngularJS/Angular 16 app work.\r\n\r\nWe are using `EsbuildPlugin` to speed up prod build time by a factor of 2-3x, which is significant when it comes to CI/CD.","Url":"https://github.com/angular/angular-cli/issues/25830","RelatedDescription":"Closed issue \"ngDevMode is not defined - regression since 15.2\" (#25830)"},{"Id":"1894669974","IsPullRequest":true,"CreatedAt":"2023-09-13T14:49:30","Actor":"alan-agius4","Number":"25832","RawContent":null,"Title":"docs: release notes for the v16.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25832","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.2 release\" (#25832)"},{"Id":"1894665247","IsPullRequest":true,"CreatedAt":"2023-09-13T14:31:00","Actor":"alan-agius4","Number":"25831","RawContent":null,"Title":"Bump version to \"v16.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25831","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.2\" with changelog.\" (#25831)"},{"Id":"1894064081","IsPullRequest":true,"CreatedAt":"2023-09-13T14:23:22","Actor":"alan-agius4","Number":"25828","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deep import of `zone.js/node`","State":"closed","Body":"\r\nThis is no longer needed as `zone.js` now has proper package exports.\r\n","Url":"https://github.com/angular/angular-cli/pull/25828","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove deep import of `zone.js/node`\" (#25828)"},{"Id":"1893962042","IsPullRequest":true,"CreatedAt":"2023-09-13T14:23:08","Actor":"alan-agius4","Number":"25827","RawContent":null,"Title":"build: update `https-proxy-agent` to version `7.0.2`","State":"closed","Body":"This commit updates `https-proxy-agent` to version 7+\r\n","Url":"https://github.com/angular/angular-cli/pull/25827","RelatedDescription":"Closed or merged PR \"build: update `https-proxy-agent` to version `7.0.2`\" (#25827)"},{"Id":"1891686085","IsPullRequest":true,"CreatedAt":"2023-09-13T07:33:27","Actor":"angular-robot","Number":"25821","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `6daaa0d` -> `5820176` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `209efdd` -> `d1fcbc3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a870de5` -> `b88792a` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `0093c6c` -> `98bd574` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `0df7e37` -> `549dc26` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `9ad469d` -> `386e1a6` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `facbf57` -> `53d0b53` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `9634d99` -> `61b8a73` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `b0f25ab` -> `eda29b9` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `069a7d6` -> `307cdb5` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `d9f9d73` -> `8406e8a` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f499466` -> `f86cf19` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `040435a` -> `3209f09` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `3e0d49e` -> `497c902` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `4e71837` -> `1517b27` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `af7983a` -> `7b696f0` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `89399a0` -> `01a9767` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `a1afbcf` -> `08977e1` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `fa1b571` -> `b96ece1` |\n| angular/dev-infra | action | digest | `c95355f` -> `0f307b2` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25821","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25821)"},{"Id":"1891686289","IsPullRequest":true,"CreatedAt":"2023-09-13T07:33:17","Actor":"angular-robot","Number":"25822","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.22.5` -> `7.22.15`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.22.5/7.22.15) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.22.5` -> `7.22.15`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.22.5/7.22.15) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.6.0` -> `6.7.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.6.0/6.7.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/plugin-transform-async-generator-functions)</summary>\n\n### [`v7.22.15`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72215-2023-09-04)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.11...v7.22.15)\n\n##### :bug: Bug Fix\n\n-   `babel-core`\n    -   [#&#8203;15923](https://togithub.com/babel/babel/pull/15923) Only perform config loading re-entrancy check for cjs ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-cli`, `babel-core`, `babel-generator`, `babel-helper-builder-binary-assignment-operator-visitor`, `babel-helper-compilation-targets`, `babel-helper-create-class-features-plugin`, `babel-helper-create-regexp-features-plugin`, `babel-helper-member-expression-to-functions`, `babel-helper-module-imports`, `babel-helper-module-transforms`, `babel-helper-transform-fixture-test-runner`, `babel-helper-validator-identifier`, `babel-helper-validator-option`, `babel-helpers`, `babel-node`, `babel-parser`, `babel-plugin-bugfix-safari-id-destructuring-collision-in-function-expression`, `babel-plugin-bugfix-v8-spread-parameters-in-optional-chaining`, `babel-plugin-proposal-decorators`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-proposal-pipeline-operator`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-block-scoping`, `babel-plugin-transform-classes`, `babel-plugin-transform-destructuring`, `babel-plugin-transform-for-of`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-parameters`, `babel-plugin-transform-property-mutators`, `babel-plugin-transform-react-jsx`, `babel-plugin-transform-runtime`, `babel-plugin-transform-typescript`, `babel-preset-env`, `babel-preset-flow`, `babel-preset-react`, `babel-preset-typescript`, `babel-register`, `babel-standalone`, `babel-template`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15892](https://togithub.com/babel/babel/pull/15892) Add explicit `.ts`/`.js` extension to all imports in `src` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n### [`v7.22.11`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72211-2023-08-24)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.10...v7.22.11)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15882](https://togithub.com/babel/babel/pull/15882) Fix: fully remove TS nested type-only exported namespaces ([@&#8203;yangguansen](https://togithub.com/yangguansen))\n-   `babel-types`\n    -   [#&#8203;15867](https://togithub.com/babel/babel/pull/15867) fix: definition of TS function type params ([@&#8203;danez](https://togithub.com/danez))\n-   `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-dynamic-import`, `babel-plugin-transform-export-namespace-from`, `babel-plugin-transform-json-strings`, `babel-plugin-transform-logical-assignment-operators`, `babel-plugin-transform-nullish-coalescing-operator`, `babel-plugin-transform-numeric-separator`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-catch-binding`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-private-property-in-object`\n    -   [#&#8203;15858](https://togithub.com/babel/babel/pull/15858) fix(standalone): strip archived syntax plugins ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`\n    -   [#&#8203;15850](https://togithub.com/babel/babel/pull/15850) Support configuring cache in ESM configs ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-parser`\n    -   [#&#8203;10940](https://togithub.com/babel/babel/pull/10940) Do not record trailing comma pos when `maybeAsyncArrow: false` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helper-compilation-targets`, `babel-parser`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-syntax-decorators`, `babel-preset-env`, `babel-preset-react`, `babel-register`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15872](https://togithub.com/babel/babel/pull/15872) enable jest/no-standalone-expect ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helpers`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-regenerator`, `babel-preset-env`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15833](https://togithub.com/babel/babel/pull/15833) bump json5, terser and webpack, further minimize babel helpers ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   Other\n    -   [#&#8203;15846](https://togithub.com/babel/babel/pull/15846) Use Babel 8.0 alpha to build babel ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;15856](https://togithub.com/babel/babel/pull/15856) Exclude redundant files from publish process ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-bugfix-v8-spread-parameters-in-optional-chaining`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-classes`, `babel-plugin-transform-optional-chaining`, `babel-preset-env`\n    -   [#&#8203;15871](https://togithub.com/babel/babel/pull/15871) Simplify `?.` output when chain result is ignored ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n### [`v7.22.10`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72210-2023-08-07)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.7...v7.22.10)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15799](https://togithub.com/babel/babel/pull/15799) \\[ts] Strip type-only namespaces ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n    -   [#&#8203;15798](https://togithub.com/babel/babel/pull/15798) \\[ts] Fix compiling extended exported nested namespace ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-proposal-decorators`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-new-target`, `babel-plugin-transform-private-methods`, `babel-preset-env`\n    -   [#&#8203;15701](https://togithub.com/babel/babel/pull/15701) Memoize class binding when compiling private methods and static elements ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :nail_care: Polish\n\n-   `babel-cli`\n    -   [#&#8203;15824](https://togithub.com/babel/babel/pull/15824) Add `meta` object to `@babel/eslint-plugin` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-traverse`, `babel-types`\n    -   [#&#8203;15661](https://togithub.com/babel/babel/pull/15661) Improve the type definition of `path.isX` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-generator`, `babel-types`\n    -   [#&#8203;15776](https://togithub.com/babel/babel/pull/15776) improve SourceLocation typing ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   Other\n    -   [#&#8203;15818](https://togithub.com/babel/babel/pull/15818) build: generate flow typings in prepublish job ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;15777](https://togithub.com/babel/babel/pull/15777) chore: bump dev dependencies and remove .eslintignore ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-cli`, `babel-core`, `babel-generator`, `babel-helper-builder-react-jsx`, `babel-preset-env`, `babel-standalone`\n    -   [#&#8203;15794](https://togithub.com/babel/babel/pull/15794) Enable `@typescript-eslint/no-redundant-type-constituents` rule ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-helper-compilation-targets`\n    -   [#&#8203;15811](https://togithub.com/babel/babel/pull/15811) Remove `@babel/core` peerDep from `helper-compilation-targets` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-parser`\n    -   [#&#8203;15793](https://togithub.com/babel/babel/pull/15793) Use const enum in babel-parser ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-transform-runtime`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15716](https://togithub.com/babel/babel/pull/15716) chore: Use `typescript-eslint@v6` with reworked configs ([@&#8203;JoshuaKGoldberg](https://togithub.com/JoshuaKGoldberg))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-transform-block-scoping`, `babel-plugin-transform-parameters`, `babel-plugin-transform-regenerator`\n    -   [#&#8203;15746](https://togithub.com/babel/babel/pull/15746) Reduce `transform-block-scoping` loops output size ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n### [`v7.22.7`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7227-2023-07-06)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.5...v7.22.7)\n\n##### :bug: Bug Fix\n\n-   `babel-generator`\n    -   [#&#8203;15719](https://togithub.com/babel/babel/pull/15719) fix: Avoid internally generating negative source maps columns ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-core`, `babel-traverse`\n    -   [#&#8203;15725](https://togithub.com/babel/babel/pull/15725) Use `NodePath#hub` as part of the paths cache key ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   Other\n    -   [#&#8203;15747](https://togithub.com/babel/babel/pull/15747) fix: export `meta` from `eslint-parser/experimental-worker` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   `babel-core`, `babel-traverse`\n    -   [#&#8203;15702](https://togithub.com/babel/babel/pull/15702) Refactor visitors merging ([@&#8203;nullableVoidPtr](https://togithub.com/nullableVoidPtr))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.7.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#670-2023-09-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.6.0...v6.7.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25822","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25822)"},{"Id":"1892938136","IsPullRequest":true,"CreatedAt":"2023-09-12T18:03:23","Actor":"clydin","Number":"25826","RawContent":null,"Title":"ci: CI TEST","State":"closed","Body":"TESTING PR ONLY","Url":"https://github.com/angular/angular-cli/pull/25826","RelatedDescription":"Closed or merged PR \"ci: CI TEST\" (#25826)"},{"Id":"1892239031","IsPullRequest":false,"CreatedAt":"2023-09-12T15:51:24","Actor":"akashkriplani","Number":"25823","RawContent":null,"Title":"Accessing root address will not redirect to base href","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n7.2.15\n\n### Description\n\nWhen you create minimal application, set the base href (e.g. \"/test/\") and access http://localhost:4200/ instead of http://localhost:4200/test/. You are not redirected to http://localhost:4200/test/ but shown white page containing:\r\n\r\nCannot GET /\r\nIn Angular 7, setting the base href will redirect you to http://localhost:4200/test/ when you access http://localhost:4200/.\n\n### Minimal Reproduction\n\nng new angular-basehref-test --interactive=false\r\ncd angular-basehref-test\r\nng serve --baseHref=/test/\n\n### Exception or Error\n\n```text\nCannot GET /\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.2.9\r\nNode: 18.16.1\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.2.9\r\n@schematics/angular             15.2.9\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25823","RelatedDescription":"Closed issue \"Accessing root address will not redirect to base href\" (#25823)"},{"Id":"1892786489","IsPullRequest":true,"CreatedAt":"2023-09-12T15:39:46","Actor":"clydin","Number":"25825","RawContent":null,"Title":"ci: move saucelabs browser testing to GHA","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/25825","RelatedDescription":"Open PR \"ci: move saucelabs browser testing to GHA\" (#25825)"},{"Id":"1892424038","IsPullRequest":false,"CreatedAt":"2023-09-12T12:33:52","Actor":"Nosfistis","Number":"25824","RawContent":null,"Title":"NodePackageLinkTask fails to execute in custom schematics","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have created a custom `ngAdd` schematic, where I check a boolean option (`--local`), and if it is set I want to perform a link to a local package instead of the npm registry.\r\n\r\nIn order to do this, instead of:\r\n```Typescript\r\ncontext.addTask(new NodePackageInstallTask());\r\n```\r\nfor each package I want to link I do\r\n```Typescript\r\ncontext.addTask(new NodePackageLinkTask(packageName));\r\n```\r\n\r\nHowever, the command fails. It seems that the actual command being ran is `npm test-package` where `test-package` is the package I want to link.\r\n\r\nAfter checking the executor, it seems that the link command of `NodePackageLinkTask` is disregarded entirely:\r\nhttps://github.com/angular/angular-cli/blob/b4a12a9264033c18cdc2de81b05a2d1f41d549e2/packages/angular_devkit/schematics/tasks/package-manager/executor.ts#L91C9-L98\n\n### Minimal Reproduction\n\nFollow the ngAdd tutorial, and use `NodePackageLinkTask` instead of NodePackageInstallTask`.\n\n### Exception or Error\n\n```text\nUnknown command: `test-package`\n```\n\n\n### Your Environment\n\n```text\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1303.7\r\n@angular-devkit/build-angular      13.3.7\r\n@angular-devkit/core               13.3.7\r\n@angular-devkit/schematics         13.3.7\r\n@angular/cdk                       13.3.9\r\n@angular/cli                       13.3.7\r\n@angular/flex-layout               13.0.0-beta.38\r\n@angular/material                  13.3.9\r\n@angular/material-moment-adapter   13.3.9\r\n@schematics/angular                13.3.7\r\nng-packagr                         13.3.1\r\nrxjs                               7.5.5\r\ntypescript                         4.6.4\n```\n\n\n### Anything else relevant?\n\nThis does not seem to have changed in the past angular versions.","Url":"https://github.com/angular/angular-cli/issues/25824","RelatedDescription":"Open issue \"NodePackageLinkTask fails to execute in custom schematics\" (#25824)"},{"Id":"1890738394","IsPullRequest":false,"CreatedAt":"2023-09-12T08:57:13","Actor":"v1nger125","Number":"25819","RawContent":null,"Title":"Angular 15 doesn't allow to build different tsconfigs for tests","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nHi, angular,\r\nI have started to update app from 14 to 15 angular and i met the issue that you changed the way for test collection and as i understand now tests are collected by tsconfig\r\nIn my case i would like to have more than 1 config for test running, until 15 version it was different loaders with different\r\n`require.context(...)`, and different `configurations` in `angular.json`\r\na have tried to do the same with `tsconfig.json` and `include` property, but i met the issue \r\n\r\n`./src/app/app.component.spec.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: C:\\...\\src\\app\\app.component.spec.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`  \r\n\r\nwhen running perf config \r\n\r\nas i understand only files included into build and current test config considered as not forgotten, is there any way to fix that?  \r\n\r\n`ng test --c=perf`  \r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/v1nger125/angular15-test  \r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n`./src/app/app.component.spec.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: C:\\...\\src\\app\\app.component.spec.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.2.9\r\nNode: 18.17.1\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.2.9\r\n@schematics/angular             15.2.9\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nsorry if it is a duplicate, but i didn't find anything else, it is quite small documentation about tests configuration for angular","Url":"https://github.com/angular/angular-cli/issues/25819","RelatedDescription":"Closed issue \"Angular 15 doesn't allow to build different tsconfigs for tests\" (#25819)"},{"Id":"1890757061","IsPullRequest":true,"CreatedAt":"2023-09-11T18:15:15","Actor":"clydin","Number":"25820","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): update babel package usage and types based on current versions","State":"closed","Body":"Newer versions of the babel packages allow for removing some types packages as well as some helper packages. The `@babel/template` package export used within the CLI is accessible from the `@babel/core` package which allows removal of `@babel/template` as a direct dependency. Also, the `@babel/plugin-proposal-async-generator-functions` package has been transitioned to `@babel/plugin-transform-async-generator-functions` due to async generators being merged into the ECMAScript standard. Minor code cleanup based on the type cleanup was also performed in the build optimizer babel passes.","Url":"https://github.com/angular/angular-cli/pull/25820","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): update babel package usage and types based on current versions\" (#25820)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1895598808","IsPullRequest":false,"CreatedAt":"2023-09-14T20:54:11","Actor":"wonboyn","Number":"27791","RawContent":null,"Title":"bug(mat-icon): Click not being captured","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have a mat-icon configured to capture the click inside mat-form-field together with a matInput field.\r\nAny click on the icon is being treated only as a focus on the input field rather than triggering the click function.\n\n### Reproduction\n\n<mat-form-field>\r\n<mat-label>Some label</mat-label>\r\n<input matInput formControlName=\"someField\" />\r\n<mat-icon matSuffix (click)=\"searchClicked()\">search</mat-icon>\r\n</mat-form-field>\n\n### Expected Behavior\n\nFunction configured on mat-icon click event is triggered\n\n### Actual Behavior\n\nInput field shows focus\n\n### Environment\n\n- Angular: 16.2.3\r\n- CDK/Material: 16.2.2\r\n- Browser(s): Chrome\r\n- Operating System: Ubuntu\r\n","Url":"https://github.com/angular/components/issues/27791","RelatedDescription":"Closed issue \"bug(mat-icon): Click not being captured\" (#27791)"},{"Id":"1895925914","IsPullRequest":true,"CreatedAt":"2023-09-14T11:47:29","Actor":"crisbeto","Number":"27792","RawContent":null,"Title":"build: update to TypeScript 5.2 and Angular 17","State":"closed","Body":"Updates the repo to TS 5.2 and Angular 17.","Url":"https://github.com/angular/components/pull/27792","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.2 and Angular 17\" (#27792)"},{"Id":"1896151991","IsPullRequest":false,"CreatedAt":"2023-09-14T09:29:52","Actor":"noguespi","Number":"27793","RawContent":null,"Title":"feat(MatDateRangePicker): Add selection event","State":"open","Body":"### Feature Description\n\nAdd the ability to be notified when the date range selection change but is not yet applied.\r\n\r\nThe _dateChange_ output of MatDatepickerInput is not a solution because it notify once the range changed AND applied.\r\n\r\nSimilar to the outputs _monthSelected_ or _yearSelected_ we already have, it could be _rangeSelected_.\r\n\n\n### Use Case\n\nA use case for this is would be to preview the current range selection.\r\n\r\nFor example, because the datepicker it is not a double calendar (like the one in #20613), it is difficult to see when the range starts or end when it spread over several months.\r\n\r\n![image](https://github.com/angular/components/assets/1118107/b2e7f5dd-2596-4ca2-8a94-b28344ffb008)\r\n\r\nIn the meantime, the hack I found is to override the DefaultMatCalendarRangeStrategy with an observable that I reinject in my component to be notified when the range change.\r\n","Url":"https://github.com/angular/components/issues/27793","RelatedDescription":"Open issue \"feat(MatDateRangePicker): Add selection event\" (#27793)"},{"Id":"1895087261","IsPullRequest":true,"CreatedAt":"2023-09-13T19:08:07","Actor":"amysorto","Number":"27790","RawContent":null,"Title":"Bump version to \"v17.0.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27790","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.3\" with changelog.\" (#27790)"},{"Id":"1895035977","IsPullRequest":true,"CreatedAt":"2023-09-13T18:30:30","Actor":"amysorto","Number":"27789","RawContent":null,"Title":"docs: release notes for the v16.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27789","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.4 release\" (#27789)"},{"Id":"1895028523","IsPullRequest":true,"CreatedAt":"2023-09-13T18:23:00","Actor":"amysorto","Number":"27788","RawContent":null,"Title":"Bump version to \"v16.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27788","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.4\" with changelog.\" (#27788)"},{"Id":"1894408741","IsPullRequest":false,"CreatedAt":"2023-09-13T12:20:01","Actor":"richardsengers","Number":"27787","RawContent":null,"Title":"bug(MAT-ERROR): mat error content with block element gives extra space of 16px","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIf the error message is rendered within a block element (we have some error message which are from a database and have a div element), an extra space is added. If this done by design, maybe it should also be mentioned in the docs?\r\nLook at this example: https://stackblitz.com/edit/g5mias?file=src%2Fexample%2Fform-field-error-example.html\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/g5mias?file=src%2Fexample%2Fform-field-error-example.html\r\nSteps to reproduce:\r\n1. focus and blur the field\r\n\r\n\n\n### Expected Behavior\n\nRender the error messages directly underneath the input field\n\n### Actual Behavior\n\nThe error messages are shown 16px below the input field\n\n### Environment\n\n- Angular: 16 latest\r\n- CDK/Material: 16 latest\r\n","Url":"https://github.com/angular/components/issues/27787","RelatedDescription":"Open issue \"bug(MAT-ERROR): mat error content with block element gives extra space of 16px\" (#27787)"},{"Id":"1894385517","IsPullRequest":false,"CreatedAt":"2023-09-13T12:05:47","Actor":"ivayloc","Number":"27786","RawContent":null,"Title":"bug(MatButtonToggle): Doesn't Reflect FormControl Value Update Programmatically with Object Values","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using `MatButtonToggleGroup` with a `formControl` and when the `MatButtonToggle` values are set as `object`s, there's an issue with reflecting the visual state of the button toggle. When setting the `FormControl`'s value programmatically, the `MatButtonToggle` does not receive the `mat-button-toggle-checked` class, making it impossible for users to visually identify the selected button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/bzdxmp?file=src%2Fapp%2Fbutton-toggle-overview-example.ts\r\n\r\nSteps to reproduce:\r\n1. Initialize a MatButtonToggleGroup with a bound FormControl.\r\n2. Set the values of the individual MatButtonToggle components as objects.\r\n3. Programmatically set the value of the associated FormControl to one of the object values.\r\n4. Observe the visual state of the MatButtonToggleGroup.\r\n\r\n### Expected Behavior\r\n\r\nWhen the value of the `FormControl` is set programmatically, the associated `MatButtonToggle` should visually reflect the selected state by having the `mat-button-toggle-checked` class.\r\n\r\n### Actual Behavior\r\n\r\nThe `MatButtonToggle` does not receive the `mat-button-toggle-checked` class and remains in an unselected state visually, even though its value matches the `FormControl`'s value.\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.9, 16.1.1\r\n- CDK/Material: 15.2.9, 16.2.3\r\n- Browser(s): Chrome\r\n- Operating System: Windows 11\r\n","Url":"https://github.com/angular/components/issues/27786","RelatedDescription":"Open issue \"bug(MatButtonToggle): Doesn't Reflect FormControl Value Update Programmatically with Object Values\" (#27786)"},{"Id":"1893844229","IsPullRequest":false,"CreatedAt":"2023-09-13T06:36:35","Actor":"gailiwei","Number":"27785","RawContent":null,"Title":"The placeholder of mat-chip-grid-input couldn't always show","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![image](https://github.com/angular/components/assets/109653528/3e7874b4-43ba-4a3e-8046-78f625778642)\r\nsee this picture, I just want the New fruit.... placeholder always show, which is the default behavior in Angular 13.0, so do you have any solutions to make this always show in Angular 15?\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nAlways show the placeholder\n\n### Actual Behavior\n\nonly shows if I focus the input text.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27785","RelatedDescription":"Open issue \"The placeholder of mat-chip-grid-input couldn't always show\" (#27785)"},{"Id":"1889027838","IsPullRequest":true,"CreatedAt":"2023-09-12T18:34:37","Actor":"crisbeto","Number":"27778","RawContent":null,"Title":"Switch the CDK to input transforms","State":"closed","Body":"Reworks most of the places where we use input coercion in the CDK to input transforms. ","Url":"https://github.com/angular/components/pull/27778","RelatedDescription":"Closed or merged PR \"Switch the CDK to input transforms\" (#27778)"},{"Id":"1892861927","IsPullRequest":true,"CreatedAt":"2023-09-12T16:25:45","Actor":"wagnermaciel","Number":"27784","RawContent":null,"Title":"refactor(material/button): switch to tokens theming API","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27784","RelatedDescription":"Open PR \"refactor(material/button): switch to tokens theming API\" (#27784)"},{"Id":"1892500462","IsPullRequest":false,"CreatedAt":"2023-09-12T13:13:50","Actor":"Jacobra93","Number":"27783","RawContent":null,"Title":"bug(cdk/overlay): Setting maxWidth on overlay messes up top and bottom position","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSetting maxWidth on the overlay messes up the positioning. If you instead set only width, it works fine. But maxWidth messes it up. It seems to work fine with some positions, but breaks top and bottom positioning.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/k6wprl?file=src%2Fexample%2Fcdk-overlay-basic-example.ts\r\nSteps to reproduce:\r\n1. Click \"Display overlay\" button\r\n\n\n### Expected Behavior\n\nOverlay should be properly positioned.\n\n### Actual Behavior\n\nOverlay doesn't have correct positioning, it is off to the side instead of being above the button that triggered it.\n\n### Environment\n\n- Angular: 16.2.3\r\n- CDK/Material: 16.2.3\r\n- Browser(s): Chrome\r\n","Url":"https://github.com/angular/components/issues/27783","RelatedDescription":"Open issue \"bug(cdk/overlay): Setting maxWidth on overlay messes up top and bottom position\" (#27783)"},{"Id":"1892358300","IsPullRequest":false,"CreatedAt":"2023-09-12T11:56:01","Actor":"amanosacrous","Number":"27782","RawContent":null,"Title":"bug(material/tooltip): tooltip inside sidenav hides after text update","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen the tooltip component overflows a parent sidenav and its text content is updated dynamically, it hides.\r\n\r\nWe have debugged the code, and this happens because the sidenav component extends the cdk-scrollable.\r\n\r\nThe piece of code that calls the tooltip hide function is the following:\r\nhttps://github.com/angular/components/blob/bae953999407fd385b1d571e04350bf0f28abf05/src/material/tooltip/tooltip.ts#L510-L520\r\n\r\n### Reproduction\r\n\r\nStackblitz url:\r\nhttps://stackblitz.com/edit/stackblitz-starters-wbd1hh?file=src%2Ftooltip-sidenav%2Ftooltip-sidenav.component.html\r\n\r\nAs you can see on the stackBlitz example, we have two tooltips:\r\n- The tooltip inside the sidenav, which overflows the sidenav component. That if we update the tooltip text, the tooltip disappears. (BUG)\r\n- On the other hand, we have the tooltip inside the mat-sidenav-content which works properly, and it doesn't hide after updating it. (WORKS WELL because doesn't overflow the parent)\r\n\r\n### Expected Behavior\r\n\r\nThe tooltip inside the sidenav should not hide when the text is updated.\r\n\r\n### Actual Behavior\r\n\r\nThe tooltip placed inside the sidnav that overflows is hidden suddenly when the text is updated.\r\n\r\n### Environment\r\n\r\n- Angular: v16.2.4\r\n- CDK/Material: v16.2.3\r\n- Browser(s): Google chrome VersiÃ³n 116.0.5845.187, Firefox 117.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27782","RelatedDescription":"Open issue \"bug(material/tooltip): tooltip inside sidenav hides after text update\" (#27782)"},{"Id":"1883886330","IsPullRequest":false,"CreatedAt":"2023-09-12T10:57:35","Actor":"Londeren","Number":"27767","RawContent":null,"Title":"bug(mat-autocomplete): `requireSelection` clears input on blur if there are no options in autocomplete","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n1. User opens a form with server autocomplete field. There's a value in this field, let's say, it's editing form for a product.\r\n2. The user puts cursor (focus) to the autocomplete input, without typing as it's not necessary to fetch anything from the server because the value is already in the field.\r\n3. The user removes cursor (blur) from the field.\r\n4. The value in the autocomplete field disappears\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-kudpye?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Focus in input field\r\n2. Remove focus from the field \r\n\r\n\r\n### Expected Behavior\r\n\r\nIf the selected value is a valid value, keep it in the field. Because in case of server autocomplete it's not necessary to make a request to get autocomplete options just to keep the selected value in the input.\r\n\r\n### Actual Behavior\r\n\r\nThe selected value clears to `null`.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/27767","RelatedDescription":"Closed issue \"bug(mat-autocomplete): `requireSelection` clears input on blur if there are no options in autocomplete\" (#27767)"},{"Id":"1891837344","IsPullRequest":true,"CreatedAt":"2023-09-12T10:57:33","Actor":"crisbeto","Number":"27781","RawContent":null,"Title":"fix(material/autocomplete): requireSelection incorrectly resetting value when there are no options","State":"closed","Body":"The autocomplete has a check not to reset the value if the user didn't interact with the input. The problem was that we only accounted for it when there are options, because while technically an autocomplete is _attached_ when the user focuses, we don't consider it _open_ until it shows some options.\r\n\r\nFixes #27767.","Url":"https://github.com/angular/components/pull/27781","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): requireSelection incorrectly resetting value when there are no options\" (#27781)"},{"Id":"1889291209","IsPullRequest":true,"CreatedAt":"2023-09-10T19:10:36","Actor":"fabi337","Number":"27780","RawContent":null,"Title":"docs(material/chips): Describe how to use chips with forms","State":"open","Body":"docs(material/chips): Describe how to use chips with forms\r\n\r\nDescribe how to use chips with forms\r\n\r\nFixes https://github.com/angular/components/issues/22906","Url":"https://github.com/angular/components/pull/27780","RelatedDescription":"Open PR \"docs(material/chips): Describe how to use chips with forms\" (#27780)"},{"Id":"1889090861","IsPullRequest":false,"CreatedAt":"2023-09-10T17:15:43","Actor":"shahanajoy","Number":"27779","RawContent":null,"Title":"Material 16 mat-select dropdown option field giubg bottom of page","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nI am using angular 16 and Mat-select is using, its select field going down bottom of page.. Please help on this\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. install latest angular material\r\n2.use  <mat-select>\r\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n      {{food.viewValue}}\r\n    </mat-option>\r\n\n\n### Expected Behavior\n\ndropdwon should come near to matselect field\n\n### Actual Behavior\n\ndropdown box going down of page\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27779","RelatedDescription":"Closed issue \"Material 16 mat-select dropdown option field giubg bottom of page\" (#27779)"},{"Id":"1888532416","IsPullRequest":false,"CreatedAt":"2023-09-09T01:49:25","Actor":"pd60193","Number":"27777","RawContent":null,"Title":"autocomplete panel doesn't pop up when triggering focus on the input programatically","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using autocomplete harness to focus on the autocomplete, the autocomplete panel does not open\r\n\r\n`const inputField = await loader.getHarness(MatAutocompleteHarness.with({ selector: '#autocompleteInput' }));\r\n  await inputField.focus();\r\n  const options = await inputField.getOptions();\r\n  expect(options.length).toBeGreaterThan(0);`\r\n\r\nThe above code fails with 'Error: Unable to retrieve options for autocomplete. Autocomplete panel is closed.'\r\nOn checking further, I am sure that my autocomplete has options populated and this should work.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nThe test should pass and the autocomplete panel should open.\n\n### Actual Behavior\n\nThe above code fails with 'Error: Unable to retrieve options for autocomplete. Autocomplete panel is closed.'\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27777","RelatedDescription":"Open issue \"autocomplete panel doesn't pop up when triggering focus on the input programatically\" (#27777)"},{"Id":"1886912086","IsPullRequest":false,"CreatedAt":"2023-09-08T04:26:29","Actor":"cusher","Number":"27776","RawContent":null,"Title":"feat(Dialog): Allow passing in component @Inputs when opening a dialog","State":"open","Body":"### Feature Description\n\nTo pass data into a dialog, the current suggested pattern is to set `data` on the `DialogConfig` parameter when calling `open`, and then inject the data into the dialog component using the `DIALOG_DATA` injection token.\r\n\r\nAnother option is to set the inputs on the `componentInstance` *after* the dialog is opened, however if the component relies on the input being set before initialization, this can run into problems.\r\n\r\nAngular 16 added the ability to [pass in component @Inputs as in route params](https://github.com/angular/angular/issues/18967), which allows the removal of basic wrapper components and per-component boilerplate for the most common cases of passing in data through the Router. It would be nice to see this change also reflected in Dialog.\n\n### Use Case\n\n- Enables using an existing component that takes in `@Input`(s) in a basic Dialog without creating a wrapper dialog component that exists solely to pass along injected data (admittedly, of questionable value, since many dialogs will need dialog-specific UI/behavior)\r\n- Allows for passing in data to a dialog component in a more symmetric way with non-dialog components\r\n- Eliminates the need to create a dialog data specific interface for type-safe parameter passing to dialog components","Url":"https://github.com/angular/components/issues/27776","RelatedDescription":"Open issue \"feat(Dialog): Allow passing in component @Inputs when opening a dialog\" (#27776)"},{"Id":"1886659561","IsPullRequest":false,"CreatedAt":"2023-09-07T22:54:46","Actor":"philmayfield","Number":"27775","RawContent":null,"Title":"bug(MatSelectionList): Spacing too large between checkbox / radio when set to togglePosition=\"before\"","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nUsing a `<mat-selection-list>` component, and setting the options with `<mat-list-option togglePosition=\"before\">` results in too much space between the toggle and the content.  According to [the Material spec](https://m3.material.io/components/lists/specs#ff521a61-bab9-4e75-bded-dee94fd31f61) for lists, the spacing between toggle and content should be 16px.  Currently its about 35px all in.\r\n\r\nScreenshot from stackblitz:\r\n![image](https://github.com/angular/components/assets/8093223/c0e21709-ba3e-46df-bbfa-c42fa3906cec)\r\n\r\nScreenshot from the Material spec:\r\n![image](https://github.com/angular/components/assets/8093223/622866bf-c97c-4639-bf56-b089fdee30f5)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/v9ccty?file=src%2Fapp%2Flist-selection-example.html\r\n\r\n\n\n### Expected Behavior\n\nThere should be a total of 16px of space between the toggle and the content.\n\n### Actual Behavior\n\nThere is approximately 35px of space between the toggle and the content.\n\n### Environment\n\nAngular CLI: 16.2.0\r\nNode: 18.14.0\r\nPackage Manager: yarn 3.2.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, localize, material\r\n... material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                          Version\r\n----------------------------------------------------------\r\n@angular-devkit/architect        0.1602.0\r\n@angular-devkit/build-angular    16.2.0\r\n@angular-devkit/core             16.2.0\r\n@angular-devkit/schematics       16.2.0\r\n@angular-devkit/schematics-cli   16.2.0\r\n@angular/flex-layout             15.0.0-beta.42\r\n@schematics/angular              16.2.0\r\nng-packagr                       16.2.0\r\nrxjs                             7.8.1\r\ntypescript                       5.1.6\r\nzone.js                          0.13.1","Url":"https://github.com/angular/components/issues/27775","RelatedDescription":"Open issue \"bug(MatSelectionList): Spacing too large between checkbox / radio when set to togglePosition=\"before\"\" (#27775)"},{"Id":"1886550875","IsPullRequest":true,"CreatedAt":"2023-09-07T20:53:19","Actor":"nathanejbrown","Number":"27774","RawContent":null,"Title":"docs(guides/theming): get-color-from-palette passes in '500' instead oâ€¦","State":"open","Body":"â€¦f 500\r\n\r\nChanges value in doc from string to number\r\n\r\nfixes #27630","Url":"https://github.com/angular/components/pull/27774","RelatedDescription":"Open PR \"docs(guides/theming): get-color-from-palette passes in '500' instead oâ€¦\" (#27774)"},{"Id":"1886173904","IsPullRequest":false,"CreatedAt":"2023-09-07T15:57:32","Actor":"arman-g","Number":"27773","RawContent":null,"Title":"bug(Mat Expansion Panel): Mat expansion panel reports inconsistent states between the header and content containers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nNot always but sometimes expansion panel has invalid states between mat-expansion-panel-header and mat-expansion-panel-content (please see the provided image) after an expanded item is drag and drop. As you can see in the provided image the header still has mat-expanded flags, but the content visibility is hidden.\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add **mat-expansion-panel** within **mat-accordion**.\r\n2. Add Angular drag and drop capability using **cdkDrag**.\r\n3. Expand one of the panels and try to drag and drop to reorder.\r\n4. Observe inconsistence between **mat-expansion-panel-header** and **mat-expansion-panel-content** states as shown below.\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Expected Behavior\n\nThe **mat-expansion-panel-header** and **mat-expansion-panel-content** should have the same state after a drag and drop ether expanded or not but they should have the same state.\n\n### Actual Behavior\n\nSometimes not always **mat-expansion-panel-header** and **mat-expansion-panel-content** do not have the same state after drag and drop (see the provided image).\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Environment\n\n- Angular: ^16.0.0\r\n- CDK/Material: ^16.0.0\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27773","RelatedDescription":"Open issue \"bug(Mat Expansion Panel): Mat expansion panel reports inconsistent states between the header and content containers\" (#27773)"},{"Id":"1885853008","IsPullRequest":true,"CreatedAt":"2023-09-07T13:07:35","Actor":"andrewseguin","Number":"27772","RawContent":null,"Title":"Bump version to \"v17.0.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27772","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.2\" with changelog.\" (#27772)"},{"Id":"1885825591","IsPullRequest":true,"CreatedAt":"2023-09-07T12:57:06","Actor":"andrewseguin","Number":"27771","RawContent":null,"Title":"docs: release notes for the v16.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27771","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.3 release\" (#27771)"},{"Id":"1885807904","IsPullRequest":true,"CreatedAt":"2023-09-07T12:45:37","Actor":"andrewseguin","Number":"27770","RawContent":null,"Title":"Bump version to \"v16.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27770","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.3\" with changelog.\" (#27770)"},{"Id":"1885739954","IsPullRequest":true,"CreatedAt":"2023-09-07T11:52:01","Actor":"knoake","Number":"27769","RawContent":null,"Title":"fix(material/snack-bar): snack-bar action button does not follow material guidelines","State":"open","Body":"Fixes a bug in the Angular Material snack-bar, where accent color is used for action button color in light themes and grey is used in dark themes. This does not follow the material design guidelines which recommend a tone of primary color is used in both light and dark themes, and that the color should contrast with the background.\r\n\r\nFixes #13905","Url":"https://github.com/angular/components/pull/27769","RelatedDescription":"Open PR \"fix(material/snack-bar): snack-bar action button does not follow material guidelines\" (#27769)"},{"Id":"1883853414","IsPullRequest":true,"CreatedAt":"2023-09-07T10:59:47","Actor":"JankaSvK","Number":"27766","RawContent":null,"Title":"feat(MatOptionHarness): make MatOptionHarness extend ContentContainerComponentHarness","State":"closed","Body":"This allows users to obtain harnesses for more complex elements inside of the `MatOption`. The current `MatOptionHarness` offers only `getText()`, which is limiting with rich content in the MatOption. [Example from MatAutocomplete documentation](https://material.angular.io/components/autocomplete/examples#autocomplete-overview) where rich content is even encouraged.\r\n","Url":"https://github.com/angular/components/pull/27766","RelatedDescription":"Closed or merged PR \"feat(MatOptionHarness): make MatOptionHarness extend ContentContainerComponentHarness\" (#27766)"},{"Id":"1884873402","IsPullRequest":false,"CreatedAt":"2023-09-06T23:14:30","Actor":"raysuelzer","Number":"27768","RawContent":null,"Title":"bug(MAT-SELECT): View Value does not reflect ngModel, one way data binding is ignored, view does not truly reflect model changes. ","State":"open","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version \r\n\r\n### The previous version in which this bug was not present was \r\n\r\n14.x\r\n\r\n### Description\r\n\r\nMatSelect, MatButtonToggleGroup (likely more) no longer allow a user to \"cancel\" a selection.  If you have a model that does not change, matSelect will still apply the change to the view. I.e. The option will be selected (even though that is not the model selection). \r\n\r\nNote: **ONE WAY** binding to ngModel (this also is the same for value).\r\n\r\n```\r\n<mat-form-field class=\"col__ compact\">\r\n  <mat-select\r\n    placeholder=\"Connection Status\"\r\n    name=\"connectionStatus\"\r\n    [ngModel]=\"modelTest\"\r\n    (selectionChange)=\"modelTestChanged($event)\"\r\n    [disableRipple]=\"true\"\r\n  >\r\n    <mat-option [value]=\"'active'\">Active</mat-option>\r\n    <mat-option [value]=\"'inactive'\">Inactive</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n```\r\n\r\n```export class ExampleComponent {\r\n  modelTest = 'active';\r\n\r\n  constructor(private _cd: ChangeDetectorRef) {}\r\n\r\n  modelTestChanged(event: any) {\r\n    if (event.value === 'inactive') {\r\n      const okay = confirm('Are you sure?');\r\n      if (!okay) {\r\n        this.modelTest = 'active';\r\n        alert(`Okay, the model is now ${this.modelTest} and the select is not for some reason.`)\r\n        this._cd.markForCheck();\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.modelTest = event.value;\r\n  }\r\n}\r\n```\r\n\r\nI would expect the above to have 'active' selected when the user presses cancel on the Are You Sure Prompt? Nope, it is 'inactive' that is selected, no matter how many times I run detectChanges, or markForCheck.  The underlying model is 'active', but yet the select is showing 'inactive' as selected? This is fundamentally broken. \r\n\r\n### Reproduction\r\n\r\nStackBlitz link:  https://stackblitz.com/edit/components-issue-7rgxn6?file=src%2Fapp%2Fexample-component.html,src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1.  Create mat-select with two options and one way data binding to either ngModel or value. \r\n2. Create (ngModelChange) or (selectionChange) event handler.\r\n3. Use this to update the model to something other than what was selected. \r\n4. Watch Material COmpletely ignore the underlying model and do what it wants.\r\n\r\n### Expected Behavior\r\n\r\nMatSelect MatToggles shoudl respect one way data bindings. \r\n\r\n### Actual Behavior\r\n\r\nMatSelect and MatButtonToggleGroup update the view and disregard the model value. \r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu):Windows\r\n","Url":"https://github.com/angular/components/issues/27768","RelatedDescription":"Open issue \"bug(MAT-SELECT): View Value does not reflect ngModel, one way data binding is ignored, view does not truly reflect model changes. \" (#27768)"},{"Id":"1882696770","IsPullRequest":false,"CreatedAt":"2023-09-06T10:58:26","Actor":"mmercure","Number":"27765","RawContent":null,"Title":"bug(MatAutocomplete): matAutocomplete with initial value does not filter options and does not highlight selected","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nA MatAutocomplete field initialized with a value does not filter the list of options are mark selected item.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vemaxm-6ktpyr?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\r\n\r\nSteps to reproduce:\r\n1. In the stackblitz, the formControl for the autcomplet is initialized with 'Two'\r\n2. Click on the field\r\n![image](https://github.com/angular/components/assets/6987117/ebbbb085-a3e9-4bfe-834b-0a89ea79f2de)\r\n\r\n3. if I click on the option\r\n![image](https://github.com/angular/components/assets/6987117/f2923435-4f9c-43ef-876e-82f0caccb0d7)\r\n\r\nit is as expected.\r\n\r\n4. after that if I click the 'clear' button\r\n![image](https://github.com/angular/components/assets/6987117/4117476c-c10b-4f2d-b265-93e16d7d71f3)\r\n\r\nvalue is still selected\r\n\r\n5. reselect a value, lets say 'Two'\r\n6. delete the two last letters\r\n![image](https://github.com/angular/components/assets/6987117/c3c6bfc0-68a2-442b-a4c0-09c36e3f0d7f)\r\n\n\n### Expected Behavior\n\nThe list of option should be filtered with the initial FormControl value\r\nThe actual value should be marked as selected.\r\n\r\nResetting the value should remove the selected\r\n\r\ndeleting last letter of input keeps last selected option as selected\n\n### Actual Behavior\n\nAll options are displayed, and nothing indicates that a value is selected.\r\n\r\nResetting the form still displays a value as selected.\r\n\r\nif not option exactly match the value, there should not be any selected option.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27765","RelatedDescription":"Closed issue \"bug(MatAutocomplete): matAutocomplete with initial value does not filter options and does not highlight selected\" (#27765)"},{"Id":"1882189427","IsPullRequest":false,"CreatedAt":"2023-09-05T15:17:57","Actor":"ulrikdom","Number":"27764","RawContent":null,"Title":"bug(FormField): Float label cut when inside material tab","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have a formfield with appearance=outline and floatLabel=always. When the formfield is placed directly inside a material tab the top of the label is cut. This does not only happen inside tabs but in other places also, since the label seems to be absolutely positioned so that it's partly outside of the formfield.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dmzrh3\r\nSteps to reproduce:\r\n1. Note that the top of the label inside the tab is cut off\r\n\n\n### Expected Behavior\n\nThe whole label is visible\n\n### Actual Behavior\n\nHalf the label is cut off\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.2\r\n- Browser(s): Chrome, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27764","RelatedDescription":"Open issue \"bug(FormField): Float label cut when inside material tab\" (#27764)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-15T03:30:02.8705816Z","RunDurationInMilliseconds":1888}