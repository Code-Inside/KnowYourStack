{"Data":{"Angular-Issues":{"Issues":[{"Id":"2692287691","IsPullRequest":true,"CreatedAt":"2024-11-25T21:28:09","Actor":"JeanMeche","Number":"58886","RawContent":null,"Title":"docs: fix @let roadmap tile.","State":"open","Body":"Prior to this change, we generated an invalid HTML with nested anchor elements. Those are not valid and are recovered by the browser by closing one early which messed the layout.\r\n\r\nfixes #58884\r\n","Url":"https://github.com/angular/angular/pull/58886","RelatedDescription":"Open PR \"docs: fix @let roadmap tile.\" (#58886)"},{"Id":"2691574876","IsPullRequest":true,"CreatedAt":"2024-11-25T21:19:54","Actor":"arielbackenroth","Number":"58881","RawContent":null,"Title":"fix(core): Ensure _tick is always run within the TracingSnapshot.","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nEnsures that _tick will always run within a TracingSnapshot if one has been requested. _tick is run directly from zoneless_scheduling_impl.ts which bypasses tick(). \r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThis ensures that all calls to _tick run within the Snapshot which enables to the underlying tracing implementation to release the snapshot.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58881","RelatedDescription":"Closed or merged PR \"fix(core): Ensure _tick is always run within the TracingSnapshot.\" (#58881)"},{"Id":"2692037139","IsPullRequest":true,"CreatedAt":"2024-11-25T19:49:44","Actor":"JeanMeche","Number":"58885","RawContent":null,"Title":"docs(docs-infra): remove unused `api-examples`","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/58885","RelatedDescription":"Open PR \"docs(docs-infra): remove unused `api-examples`\" (#58885)"},{"Id":"2691774314","IsPullRequest":false,"CreatedAt":"2024-11-25T18:24:28","Actor":"ertunga","Number":"58884","RawContent":null,"Title":"Cards in roadmap have issues","State":"open","Body":"### Describe the problem that you experienced\n\nSome cards in the roadmap page under [Completed projects](https://angular.dev/roadmap#completed-projects) title have issues. It looks like one card doesn't have any content and others look misaligned. Probably related: The first grid cell under \"Completed in Q3 2024\" title is empty.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/roadmap#completed-projects\n\n### Add a screenshot if that helps illustrate the problem\n\n![Image](https://github.com/user-attachments/assets/02010567-475c-45cc-85c5-64f5ee230b84)\n","Url":"https://github.com/angular/angular/issues/58884","RelatedDescription":"Open issue \"Cards in roadmap have issues\" (#58884)"},{"Id":"2691103750","IsPullRequest":true,"CreatedAt":"2024-11-25T18:00:50","Actor":"angular-robot","Number":"58877","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b982d44` -> `fa2edff` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0692d4d` -> `488c07d` |\n| angular/dev-infra | action | digest | `01c8c16` -> `d1e364c` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/58877","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#58877)"},{"Id":"2691665671","IsPullRequest":true,"CreatedAt":"2024-11-25T17:43:28","Actor":"Ahmed-Hakeem","Number":"58883","RawContent":null,"Title":"fix(docs-infra): fix cards not shown if we hit the API page without API tab active","State":"open","Body":"Since we are only updating the members margin at the constructing phase, we should not disable this operation if user hit the page with tabs different than API active, otherwise if user switched to the API page he won't see the cards since members margin equals zero and docs viewer won't be shown\r\n\r\nResolves #58882\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #58882\r\n\r\n\r\n## What is the new behavior?\r\nUser can hit the API ref page with any tab active and switches back to the API tab seeing the members cards\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58883","RelatedDescription":"Open PR \"fix(docs-infra): fix cards not shown if we hit the API page without API tab active\" (#58883)"},{"Id":"2691653147","IsPullRequest":false,"CreatedAt":"2024-11-25T17:40:10","Actor":"Ahmed-Hakeem","Number":"58882","RawContent":null,"Title":"Hiting API ref page with Usage notes tab active hides member cards from the view","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n1- Hit the API ref page with Usage notes tab active (or any tab different than the API tab)\n2- switch to the API tab \n\nYou won't see member cards on the right  \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular.dev/api/animations/animate?tab=usage-notes\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58882","RelatedDescription":"Open issue \"Hiting API ref page with Usage notes tab active hides member cards from the view\" (#58882)"},{"Id":"2691309955","IsPullRequest":true,"CreatedAt":"2024-11-25T17:12:52","Actor":"angular-robot","Number":"58879","RawContent":null,"Title":"build: pin google-github-actions/auth action to 6fc4af4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [google-github-actions/auth](https://redirect.github.com/google-github-actions/auth) | action | pinDigest |  -> `6fc4af4` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/58879","RelatedDescription":"Closed or merged PR \"build: pin google-github-actions/auth action to 6fc4af4\" (#58879)"},{"Id":"2691361140","IsPullRequest":true,"CreatedAt":"2024-11-25T16:32:01","Actor":"thePunderWoman","Number":"58880","RawContent":null,"Title":"refactor(compiler): Update ingest to include hydrate when in create block","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/58880","RelatedDescription":"Open PR \"refactor(compiler): Update ingest to include hydrate when in create block\" (#58880)"},{"Id":"2689336030","IsPullRequest":true,"CreatedAt":"2024-11-25T16:12:40","Actor":"AndrewKushnir","Number":"58864","RawContent":null,"Title":"refactor(core): remove an unused field and invoke `setActiveConsumer` at the right time","State":"closed","Body":"This PR contains a couple minor commits:\r\n\r\n**refactor(core): remove unused field in `ApplicationRef` class**\r\n\r\nThis commit removes an unused field in the `ApplicationRef` class. Most likely the usage of the field was removed earlier.\r\n\r\n**refactor(core): invoke `setActiveConsumer` in `ɵɵdeferHydrateWhen` at the right time**\r\n\r\nThis commit updates the code of the `ɵɵdeferHydrateWhen` function to invoke the `setActiveConsumer` function at the right time (currently, we invoke it in the `finally` block, which is too late).","Url":"https://github.com/angular/angular/pull/58864","RelatedDescription":"Closed or merged PR \"refactor(core): remove an unused field and invoke `setActiveConsumer` at the right time\" (#58864)"},{"Id":"2691203379","IsPullRequest":false,"CreatedAt":"2024-11-25T15:38:18","Actor":"pkozlowski-opensource","Number":"58878","RawContent":null,"Title":"angular.dev: NavigationList is a performance bottleneck","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe [NavigationList](https://github.com/angular/angular/tree/main/adev/shared-docs/components/navigation-list) component used to display a menu on the left performs badly (can take > 1s on my desktop machine for pages with large navigation lists, ex.: https://angular.dev/api)\n\nThere are 2 main reasons for this:\n* the entire navigation menu is built, even if the fraction of it (one level) is displayed -  this is the main reason\n* this component consist of one giant template rendered recursively - splitting it into smaller components would limit the \"change detection blast radious\" \n\nMore details will follow.\n","Url":"https://github.com/angular/angular/issues/58878","RelatedDescription":"Open issue \"angular.dev: NavigationList is a performance bottleneck\" (#58878)"},{"Id":"2688481612","IsPullRequest":true,"CreatedAt":"2024-11-25T15:26:52","Actor":"JeanMeche","Number":"58859","RawContent":null,"Title":"docs: add standalone example for `ErrorHandler`","State":"closed","Body":"fixes #55579","Url":"https://github.com/angular/angular/pull/58859","RelatedDescription":"Closed or merged PR \"docs: add standalone example for `ErrorHandler`\" (#58859)"},{"Id":"2689678952","IsPullRequest":true,"CreatedAt":"2024-11-25T15:26:21","Actor":"crisbeto","Number":"58866","RawContent":null,"Title":"refactor(migrations): skip TS version check in tsurge","State":"closed","Body":"Skips the TS version check in tsurge since it's blocking some internal changes and generally isn't necessary since the app will be checked when it's built anyways.","Url":"https://github.com/angular/angular/pull/58866","RelatedDescription":"Closed or merged PR \"refactor(migrations): skip TS version check in tsurge\" (#58866)"},{"Id":"2690165781","IsPullRequest":true,"CreatedAt":"2024-11-25T15:25:51","Actor":"crisbeto","Number":"58870","RawContent":null,"Title":"fix(compiler-cli): more accurate diagnostics for host binding parser errors","State":"closed","Body":"Currently host bindings are in a bit of a weird state, because their source spans all point to the root object literal, rather than the individual expression. This is tricky to handle at the moment, because the object is being passed around as a `Record<string, string>` since the compiler needs to support both JIT and non-JIT environments, and because the AOT compiler evaluates the entire literal rather than doing it expression-by-expression. As a result, when we report errors in one of the host bindings, we end up highlighting the entire expression which can be very noisy in an IDE.\r\n\r\nThese changes aim to report a more accurate error for the most common case where the `host` object is initialized to a `string -> string` object literal by matching the failing expression to one of the property initializers. Note that this isn't 100% reliable, because we can't map cases like `host: SOME_CONST`, but it's still better than the current setup.\r\n\r\n**Before:**\r\n<img width=\"927\" alt=\"image\" src=\"https://github.com/user-attachments/assets/7d1a0312-5d42-48c3-b0af-a938d57b6d6e\">\r\n\r\n\r\n**After:**\r\n<img width=\"927\" alt=\"image\" src=\"https://github.com/user-attachments/assets/526b0c4d-11b9-4ba0-924a-73a016f22953\">\r\n","Url":"https://github.com/angular/angular/pull/58870","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): more accurate diagnostics for host binding parser errors\" (#58870)"},{"Id":"2689693914","IsPullRequest":true,"CreatedAt":"2024-11-25T15:21:05","Actor":"angular-robot","Number":"58867","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/58867","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#58867)"},{"Id":"2691011168","IsPullRequest":true,"CreatedAt":"2024-11-25T15:20:28","Actor":"josephperrott","Number":"58876","RawContent":null,"Title":"ci: update perf workflow to the latest version","State":"closed","Body":"Update the perf workflow to the latest version to allow for uploading results to database\r\n","Url":"https://github.com/angular/angular/pull/58876","RelatedDescription":"Closed or merged PR \"ci: update perf workflow to the latest version\" (#58876)"},{"Id":"2690890201","IsPullRequest":false,"CreatedAt":"2024-11-25T14:14:45","Actor":"mauriziocescon","Number":"58875","RawContent":null,"Title":"linkedSignal / resource: small APIs inconsistency","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nHey! \n\nI've being playing with `linkedSignal` and `resource` in the last few days. Just a small remark on the new APIs: \n\n```ts\n  linked = linkedSignal({\n    source: () => this.params(),\n    computation: (one, two) => {...},\n  });\n\n  resource = resource({\n    request: () => this.params(),\n    loader: ({ request, previous }) => {...},\n  });\n```\n\nMaybe I'm missing something obvious, but ideally I'd like to have computation / loader treated the same way: \n\n```ts\n  linked = linkedSignal({\n    source: () => this.params(),\n    computation: ({ source, previous }) => {...},\n  });\n\n  resource = resource({\n    request: () => this.params(),\n    loader: ({ request, previous }) => {...},\n  });\n```\n\nNot a huge deal, but still... I think it would be nice to align the APIs (assuming I'm not missing something else). \n\n### Proposed solution\n\n```ts\n  linked = linkedSignal({\n    source: () => this.params(),\n    computation: ({ source, previous }) => {...},\n  });\n\n  resource = resource({\n    request: () => this.params(),\n    loader: ({ request, previous }) => {...},\n  });\n```","Url":"https://github.com/angular/angular/issues/58875","RelatedDescription":"Open issue \"linkedSignal / resource: small APIs inconsistency\" (#58875)"},{"Id":"2690812782","IsPullRequest":false,"CreatedAt":"2024-11-25T13:50:39","Actor":"Neutrino-Sunset","Number":"58874","RawContent":null,"Title":"Where is documentation on how to upgrade the Angular cli?","State":"closed","Body":"### Describe the problem that you experienced\n\nSearching the current Angular docs for `upgrade cli` or `update cli` returns plenty of results that describe how to upgrade an Angular project, but returns no information about how to update the Angular cli itself.\n\nSearching Stackoverflow returns 7 year old questions with dozens of different answers.\nhttps://stackoverflow.com/questions/43931986/how-to-upgrade-angular-cli-to-the-latest-version\n\nDon't you think the Angular documentation should describe the current recommended approach to upgrade the Angular cli?\n\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/cli/update\n\n### Describe what you were looking for in the documentation\n\nHow to upgrade the Angular cli.\n\n### Describe the actions that led you to experience the problem\n\nSearching the documentation found nothing.\n\n### Describe what you want to experience that would fix the problem\n\nAdd the documentation.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/58874","RelatedDescription":"Closed issue \"Where is documentation on how to upgrade the Angular cli?\" (#58874)"},{"Id":"2690535994","IsPullRequest":false,"CreatedAt":"2024-11-25T12:13:49","Actor":"Platonn","Number":"58873","RawContent":null,"Title":"When @defer-loading just one component form a library, Angular doesn't tree-shake unused contents of this library","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen @defer-loading just one component from a (3rd party) Angular library, the whole library is bundled in the lazy loaded chunk (even if the library has `sideEffects: false` in its `package.json`). Instead, I'd expect the unused content of that library to be tree-shaken.\n(_Just for clarity: I'm talking about production builds of libraries done with ng-packgr and production build of an application - with `optimization: true` enabled in `angular.json` then hosted via http server. - NOT vite dev server)_\n\n```html\n@defer (on interaction) {\n  <just-one-component />\n} @placeholder {\n  <div>PLACEHOLDER</div>\n}\n```\n```ts\nimport { JustOneComponent } from 'lib1';\n\n@Component({\n  standalone: true,\n  imports: [JustOneComponent],\n  ...\n})\nexport class AppComponent\n```\n\n⚠️ **Now _all unused contents_ of the `lib1` are bundled in the lazy loaded chunk alongside the JustOneComponent**\n\nNote 1: However, the tree-shaking _does_ happen, when @defer-loading a _local component_ that wraps a component from a library.\n\n```html\n@defer (on interaction) {\n  <local-wrapper-component />\n} @placeholder {\n  <div>PLACEHOLDER</div>\n}\n```\n```ts\nimport { LocalWrapperComponent } from './local-wrapper.component';\n\n@Component({\n  standalone: true,\n  imports: [LocalWrapperComponent],\n  ...\n})\nexport class AppComponent\n```\n\nwhere the local wrapper component is:\n\n```html\n<just-one-component />\n```\n```ts\nimport { JustOneComponent } from 'lib1';\n\n@Component({\n  standalone: true,\n  imports: [JustOneComponent],\n  ...\n})\nexport class LocalWrapperComponent\n```\n\n\n**Now _only_ the JustOneComponent of the `lib1` (together with the LocalWrapperComponent) are bundled in the lazy loaded chunk, without unused stuff from `lib1`**\n\nNote 2: The tree-shaking _does_ happen, when eager loading a component from a library (no @defer-loading).\n\nTo try it out, see the repo linked below:\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Platonn/ng19-defer-and-tree-shaking/\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 20.14.0\nPackage Manager: npm 10.7.0\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58873","RelatedDescription":"Open issue \"When @defer-loading just one component form a library, Angular doesn't tree-shake unused contents of this library\" (#58873)"},{"Id":"2690465745","IsPullRequest":false,"CreatedAt":"2024-11-25T11:46:29","Actor":"lacolaco","Number":"58871","RawContent":null,"Title":"resource loader param `request` fails to exclude `undefined` from `request` returned value","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\n`request` field in `ResourceLoaderParams` should exclude `undefined` type from returned value of `request` function.\n\n```ts\nexport class ProductViewer {\n  productId = input.required<number | undefined>(); \n  productResource: ResourceRef<Product> = resource({\n    request: () => this.productId(), // <= number | undefined\n    loader: async ({ request: productId, abortSignal }) => {\n      assertDefined(productId); // number;\n      const resp = await fetch(`https://dummyjson.com/products/${productId}`);\n      return resp.json() as Promise<Product>;\n    },\n  });\n}\n```\n\nSource: https://github.com/angular/angular/blob/main/packages/core/src/resource/api.ts#L148-L154\n\n```ts\nexport interface ResourceLoaderParams<R> {\n  request: Exclude<NoInfer<R>, undefined>;\n  abortSignal: AbortSignal;\n  previous: {\n    status: ResourceStatus;\n  };\n}\n```\n\nHowever, `undefined` is not excluded for certain types. In my experiments, the behavior is observed when the type is not a primitive like `string` or `number`, and can be reproduced by simply changing the type number to Number, for example:\n\n```ts\nexport class ProductViewer {\n  productId = input.required<Number | undefined>(); \n  productResource: ResourceRef<Product> = resource({\n    request: () => this.productId(), // <= Number | undefined\n    loader: async ({ request: productId, abortSignal }) => {\n      assertDefined(productId); // !!! undefined remains !!!\n      const resp = await fetch(`https://dummyjson.com/products/${productId}`);\n      return resp.json() as Promise<Product>;\n    },\n  });\n}\n```\n\nThis is a typedef issue, as the `request` parameter cannot be undefined.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-mp9zqz?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, router\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58871","RelatedDescription":"Open issue \"resource loader param `request` fails to exclude `undefined` from `request` returned value\" (#58871)"},{"Id":"2690479898","IsPullRequest":false,"CreatedAt":"2024-11-25T11:46:03","Actor":"thaoula","Number":"58872","RawContent":null,"Title":"Angular 19 cannot build - Cannot read properties of undefined (reading 'kind')","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nHi Team,\n\nI just upgraded Angular from v18 to v19 and I have trouble building all of the applications list in the Angular.json.\n\nMore specifically, I am getting the following error -\n\n`✘ [ERROR] Cannot read properties of undefined (reading 'kind') [plugin angular-compiler]\n\n    node_modules/typescript/lib/typescript.js:30304:14:\n      30304 │   return node.kind === 243 /* VariableStatement */;\n            ╵               ^\n\n    at Object.isVariableStatement (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:30304:15)\n    at UnusedStandaloneImportsRule.isPotentialSharedReference (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3404:16)\n    at UnusedStandaloneImportsRule.getUnusedSymbols (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3383:79)\n    at UnusedStandaloneImportsRule.checkNode (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3359:25)\n    at walk (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3453:38)\n    at visitNodes (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:31791:22)\n    at forEachChildInSourceFile (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:32004:12)\n    at forEachChild (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:32304:35)\n    at SourceFileObject.forEachChild (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:148907:12)\n    at SourceFileValidator.getDiagnosticsForFile (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3451:16)\n\n  This error came from the \"onStart\" callback registered here:\n\n    node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:107:18:\n      107 │             build.onStart(async () => {\n          ╵                   ~~~~~~~\n\n    at setup (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:107:19)\n    at async handlePlugins (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/esbuild/lib/main.js:1194:20)`\n\n### Minimal Reproduction\n\n1. use ng update to update working Angular 18 app.\n2. run ng build id --watch --preserve-symlinks --output-hashing=all\n\n### Exception or Error\n\n```text\n✘ [ERROR] Cannot read properties of undefined (reading 'kind') [plugin angular-compiler]\n\n    node_modules/typescript/lib/typescript.js:30304:14:\n      30304 │   return node.kind === 243 /* VariableStatement */;\n            ╵               ^\n\n    at Object.isVariableStatement (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:30304:15)\n    at UnusedStandaloneImportsRule.isPotentialSharedReference (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3404:16)\n    at UnusedStandaloneImportsRule.getUnusedSymbols (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3383:79)\n    at UnusedStandaloneImportsRule.checkNode (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3359:25)\n    at walk (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3453:38)\n    at visitNodes (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:31791:22)\n    at forEachChildInSourceFile (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:32004:12)\n    at forEachChild (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:32304:35)\n    at SourceFileObject.forEachChild (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/typescript/lib/typescript.js:148907:12)\n    at SourceFileValidator.getDiagnosticsForFile (file:///Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/compiler-cli/bundles/chunk-WLQBAON6.js:3451:16)\n\n  This error came from the \"onStart\" callback registered here:\n\n    node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:107:18:\n      107 │             build.onStart(async () => {\n          ╵                   ~~~~~~~\n\n    at setup (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:107:19)\n    at async handlePlugins (/Users/thaoula/projects/workbuddy/jms-platform/jms-web/node_modules/esbuild/lib/main.js:1194:20)\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 20.18.1\nPackage Manager: bun 1.1.36\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, cdk-experimental, common, compiler\n... compiler-cli, core, forms, localize, platform-browser\n... platform-browser-dynamic, platform-server, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.1\n@angular-devkit/core         19.0.1\n@angular-devkit/schematics   19.0.1\n@angular/build               19.0.1\n@angular/cli                 19.0.1\n@angular/ssr                 19.0.1\n@schematics/angular          19.0.1\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58872","RelatedDescription":"Open issue \"Angular 19 cannot build - Cannot read properties of undefined (reading 'kind')\" (#58872)"},{"Id":"2690141626","IsPullRequest":true,"CreatedAt":"2024-11-25T10:22:06","Actor":"JeanMeche","Number":"58869","RawContent":null,"Title":"docs: fix formating for NG0913","State":"open","Body":"fixes #58868\r\n","Url":"https://github.com/angular/angular/pull/58869","RelatedDescription":"Open PR \"docs: fix formating for NG0913\" (#58869)"},{"Id":"2690093546","IsPullRequest":false,"CreatedAt":"2024-11-25T10:05:34","Actor":"aureldussauge","Number":"58868","RawContent":null,"Title":"Incorrect rendering of code block in NG0913 error page","State":"open","Body":"### Describe the problem that you experienced\n\nThe NG0913 error page displays the associated code block incorrectly. I’m not sure, but it might be caused by using the `<code-example>` tag instead of the Markdown syntax with backticks (```typescript).\n\n\n\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/errors/NG0913\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![Image](https://github.com/user-attachments/assets/9aafabb4-be2f-4060-9436-17597609269d)\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/58868","RelatedDescription":"Open issue \"Incorrect rendering of code block in NG0913 error page\" (#58868)"},{"Id":"2689397342","IsPullRequest":true,"CreatedAt":"2024-11-25T06:48:37","Actor":"AleksanderBodurri","Number":"58865","RawContent":null,"Title":"Add \"kind\" field to non-primitive package signal nodes","State":"open","Body":"Builds on [#58333](https://github.com/angular/angular/issues/58333) by assigning the kind field to reactive nodes that are not in the `core/primitives` package.\r\n\r\nDepends on / Blocked by #58333.","Url":"https://github.com/angular/angular/pull/58865","RelatedDescription":"Open PR \"Add \"kind\" field to non-primitive package signal nodes\" (#58865)"},{"Id":"2688756835","IsPullRequest":false,"CreatedAt":"2024-11-25T05:30:46","Actor":"AtofStryker","Number":"58862","RawContent":null,"Title":"`getTestBed().configureTestingModule` doesn't seem to respect `import`s added in Angular v19. Works in Angular v18","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore/testing\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIt doesn't look like adding imports in `getTestBed().configureTestingModule` works as expected within `angular/core/testing`. When trying to add `CommonModule` as an import within the `cypress/angular` mount function, it doesn't look like the import is actually added into the test bed and the components with `CommonModule` directives are failing because the module is not registered.\n\n I noticed there were some changes in the [changelog](https://github.com/angular/angular/blob/main/CHANGELOG.md#1900-2024-11-19) but I didn't see anything that I would expect to break her\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/AtofStryker/angular-19-cypress\n\n### Please provide the exception or error you saw\n\nTo reproduce, clone the project and install dependencies with `npm install` with node 20.x\n\nrun `npx cypress open` and go to `component testing` -> `electron (or chrome)` -> `mount.cy.ts`\n\nThe test fails. The component doesn't mount correctly because it is using the `ngIf` directive, which should be registered when we run `getTestBed().configureTestingModule` when Cypress adds the import [here](https://github.com/AtofStryker/angular-19-cypress/blob/main/cypress/support/mount.ts#L180), but the console has the error that the `CommonModule` is not registered.\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 20.18.0\npackage manager: npm 10.8.2\n```\n\n### Anything else?\n\nI'm working on adding Angular 19 CT support within Cypress in https://github.com/cypress-io/cypress/issues/30175. I'm not an Angular expert so hopefully I am just missing something 😅 .","Url":"https://github.com/angular/angular/issues/58862","RelatedDescription":"Closed issue \"`getTestBed().configureTestingModule` doesn't seem to respect `import`s added in Angular v19. Works in Angular v18\" (#58862)"},{"Id":"2688847988","IsPullRequest":false,"CreatedAt":"2024-11-25T02:53:14","Actor":"hillin","Number":"58863","RawContent":null,"Title":"[Feature Request] Subject Signal","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nI find myself constantly running into the situation that for a given reactive value, I need to use it both in rx and signal contexts. \n\nFor instance let's say there is an `selectedItem` value, representing an entity selected by the user. We would like to store it in a `WritableSignal` so something could be derived out of it with `computed`; we also want to use it to retrieve some related data from the backend, thus it would also be great to be an observable (to be `switchMap`-ed).\n\nIn the meantime we just make the value a signal and spam `toObservable`s whenever we need it in rx. There are so many of them that I really considered it as pattern that should be addressed with better ergonomics.\n\n### Proposed solution\n\nWe came up with a solution like this:\n```typescript\nimport { Signal } from \"@angular/core\";\nimport { toSignal } from \"@angular/core/rxjs-interop\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n/** A signal backed by a subject. */\nexport interface SubjectSignal<T> extends Signal<T> {\n  observable: Observable<T>;\n  update(updateFn: (value: T) => T): void;\n  set(value: T): void;\n}\n\n/** Make a signal that is backed by a subject. */\nexport function subjectSignal<T>(initialValue: T): SubjectSignal<T> {\n  const subject = new BehaviorSubject<T>(initialValue);\n  const signal = toSignal(subject) as SubjectSignal<T>;\n\n  signal.observable = subject.asObservable();\n  signal.update = (updateFn: (value: T) => T) => {\n    subject.next(updateFn(subject.value));\n  };\n  signal.set = (value: T) => {\n    subject.next(value);\n  };\n\n  Object.freeze(signal);\n\n  return signal;\n}\n```\n\nSo it's basically a wrapper to `toSignal`, but an observable could be retrieved out from it.\n\n### Alternatives considered\n\nIdeally we could have `SubjectSignal<T>` to be used both as a signal and as an observable:\n```typescript\ninterface SubjectSignal<T> extends Observable<T>, Signal<T>;\n```\nbut I'm not sure if it's possible, because `Signal<T>` has a callable signature and `Observable<T>` is a class. Anyways we would like to see a more elegant solution.","Url":"https://github.com/angular/angular/issues/58863","RelatedDescription":"Open issue \"[Feature Request] Subject Signal\" (#58863)"},{"Id":"2688647934","IsPullRequest":false,"CreatedAt":"2024-11-24T22:54:29","Actor":"wfvs","Number":"58861","RawContent":null,"Title":"Migration to lazy-loaded routes not working if Routes are exported as default","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nthis is a new migration schematic\n\n### Description\n\nusing the new migration schematic\nng generate @angular/core:route-lazy-loading\nresults in 'Could not find any files to migrate under the path ...'\nThe Routes are exported as default, which causes the schematic to fail finding them. \n\n\n\n### Minimal Reproduction\n\ntrying to migrate the following route.ts file:\n\n```\nexport default [\n    {\n        path: '',\n        component: SomeComponent,\n        children: [\n          { path: 'index', component: IndexComponent },\n          { path: 'index/:name', component: IndexDetailComponent, resolve: { index: indexDetailResolver } }\n        ]\n      }\n] as Routes; \n```\nusing:\n``\nng generate @angular/core:route-lazy-loading --path src/app/something\n``\n\nfails, because the migration schematic does not recognize the Routes, which are exported as default.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n\"@angular/cli\": \"^19.0.1\"\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/58861","RelatedDescription":"Open issue \"Migration to lazy-loaded routes not working if Routes are exported as default\" (#58861)"},{"Id":"2688510301","IsPullRequest":true,"CreatedAt":"2024-11-24T22:35:01","Actor":"JeanMeche","Number":"58860","RawContent":null,"Title":"refactor(common): deprecate `ngStyle` and `ngClass`","State":"open","Body":"The overhead of those directives doesn't outweighs the few additional cases it supports compared to compiler provided `class` and `style` bindings.\r\n\r\nDEPRECATE: Both `ngStyle` and `ngClass` directives are deprecated, use the their direct bindings instead.\r\n\r\n---- \r\nNote: \r\nThe native bindings support almost the same usecases at the exception of 2 :\r\n\r\n* They don't support `Set`\r\n* They don't support keys with multiple styles/classes separated with spaces.\r\n\r\nThe recommendation is to drop those space-separated-keys into separate ones and replace Sets with arrays. ","Url":"https://github.com/angular/angular/pull/58860","RelatedDescription":"Open PR \"refactor(common): deprecate `ngStyle` and `ngClass`\" (#58860)"},{"Id":"2688376570","IsPullRequest":true,"CreatedAt":"2024-11-24T21:17:49","Actor":"consman","Number":"58858","RawContent":null,"Title":"Update versions.md as  RxJS ^6.5.3 || ^7.4. is not correct for v19.","State":"closed","Body":"<HEADER>\r\nI started a brand new v19 project from scratch, using \"ng new\" and it gave me  \"rxjs\": \"~7.8.0\" in my generated package.json.  I think v18 has the same issue. Thank you for helping with this.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/58858","RelatedDescription":"Closed or merged PR \"Update versions.md as  RxJS ^6.5.3 || ^7.4. is not correct for v19.\" (#58858)"},{"Id":"2688307104","IsPullRequest":false,"CreatedAt":"2024-11-24T20:31:05","Actor":"SamuelMarks","Number":"58857","RawContent":null,"Title":"`responseType` in `HttpClient` can only be JSON [docs say otherwise]","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nhttps://angular.dev/guide/http/making-requests#fetching-other-types-of-data\n\nBut then looking at the `index.d.ts`:\n```ts\nget<T>(url: string, options: {\n        headers?: HttpHeaders | {\n            [header: string]: string | string[];\n        };\n        observe: 'response';\n        context?: HttpContext;\n        params?: HttpParams | {\n            [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;\n        };\n        reportProgress?: boolean;\n        responseType?: 'json';\n        withCredentials?: boolean;\n        transferCache?: {\n            includeHeaders?: string[];\n        } | boolean;\n    }): Observable<HttpResponse<T>>;\n```\n\nSo clearly `responseType` should be `'json' | 'text' | 'arraybuffer' | 'blob'` OR the docs should be changed.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.1\nNode: 23.3.0 (Unsupported)\nPackage Manager: npm 10.9.1\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... material, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1 (cli-only)\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nPossibly related #18586","Url":"https://github.com/angular/angular/issues/58857","RelatedDescription":"Closed issue \"`responseType` in `HttpClient` can only be JSON [docs say otherwise]\" (#58857)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2692508302","IsPullRequest":false,"CreatedAt":"2024-11-25T22:43:33","Actor":"eufri","Number":"28967","RawContent":null,"Title":"Set locale baseHref to '/' is not working with AngularNodeAppEngine","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have an application where English is the default locale and I don't want the prefix '/en' in the URL. With CommonEngine it was possible to set the baseHref in angular.json to '/' to achieve this.\n\n```json\n      \"i18n\": {\n        \"sourceLocale\": {\n          \"code\": \"en\",\n          \"baseHref\": \"/\"\n        },\n        \"locales\": {\n          \"de\": \"src/messages/messages.de.xlf\",\n          \"es\": \"src/messages/messages.es.xlf\"\n        }\n      }\n```\n\nNow I have migrated this application to Angular 19 and noticed that this does not seem to be possible anymore with AngularNodeAppEngine as the default locale 'en' is not recognized. The build is successful and all other locales work fine, except 'en'. Even the root path works, because the potentialLocale is '' (empty string) in this case, but no child routes can be found (at least not with ssr). Is this behavior expected? If so, are there still any workarounds to disable the locale prefix for a specific locale?\n\nIn a (maybe) naive approach, I tried adding the following line just before returning the entryPointExport in [app-engine.ts#L146](https://github.com/angular/angular-cli/blame/7b0aa3dec56298bb364516ac189aa32accc7dcc2/packages/angular/ssr/src/app-engine.ts#L146) and it worked, so it seems to be supported everywhere except in this particular location and therefore I really hope it's just a bug and I don't have to revert the migration.\n```javascript\nif (!entryPoints.has(potentialLocale) && entryPoints.has(\"\")) {\n    return this.getEntryPointExports(\"\");\n}\n```\n\nAny help is appreciated, because everything else is already migrated.\n\n### Minimal Reproduction\n\nRepo: https://github.com/eufri/angular-ssr-issue\n\nBasically I have created a new app\n`ng new angular-ssr-issue --ssr --minimal --package-manager=yarn --routing --server-routing --skip-tests --ssr`\n\nAdded localize package\n`ng add @angular/localize`\n\nAnd then added some test locales + messages and a child component +route\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28967","RelatedDescription":"Open issue \"Set locale baseHref to '/' is not working with AngularNodeAppEngine\" (#28967)"},{"Id":"2692373245","IsPullRequest":true,"CreatedAt":"2024-11-25T21:54:18","Actor":"clydin","Number":"28966","RawContent":null,"Title":"docs: release notes for the v19.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/28966","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.2 release\" (#28966)"},{"Id":"2692286139","IsPullRequest":true,"CreatedAt":"2024-11-25T21:49:09","Actor":"clydin","Number":"28964","RawContent":null,"Title":"Bump version to \"v19.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/28964","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.2\" with changelog.\" (#28964)"},{"Id":"2692359183","IsPullRequest":false,"CreatedAt":"2024-11-25T21:42:38","Actor":"davidlj95","Number":"28965","RawContent":null,"Title":"Type 'Http2ServerResponse' is not generic","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.11\n\n### Description\n\nThe error in the title and below appears when trying to build an app using Angular v19\n\nSeems that `Http2ServerResponse` type wasn't generic up until recently\n - [PR introducing generic](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/70289)\n - [PR reverting it back](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/70453)\n - [PR introducing it back again](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/70455)\n - [History of `@types/node`](https://github.com/DefinitelyTyped/DefinitelyTyped/commits/master/types/node)\n\nI have `@types/node@20.16.5` installed. Can't trace when it was introduced as [couldn't find a CHANGELOG for `@types/node`](https://github.com/DefinitelyTyped/DefinitelyTyped/issues/52998)\n\n### Minimal Reproduction\n\n1. Create an Angular v19 fresh app. With SSR. \n2. Remove `skipLibCheck` (that wasn't the default until recently)\n3. Install `@types/node@20.16.5` as dependency\n4. Run `ng build`\n\n### Exception or Error\n\n```text\n✘ [ERROR] TS2315: Type 'Http2ServerResponse' is not generic. [plugin angular-compiler]\n\n    node_modules/.pnpm/@angular+ssr@19.0.1_3tltse6rekaa6pakct6mm2hr6a/node_modules/@angular/ssr/node/index.d.ts:190:100:\n      190 │ ...rResponse | Http2ServerResponse<Http2ServerRequest>): Promise<...\n          ╵                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.1\nNode: 22.11.0\nPackage Manager: pnpm 9.11.0\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nUpgrading to a recent version of `@types/node` where generic type is there fixes the issue","Url":"https://github.com/angular/angular-cli/issues/28965","RelatedDescription":"Open issue \"Type 'Http2ServerResponse' is not generic\" (#28965)"},{"Id":"2692262846","IsPullRequest":true,"CreatedAt":"2024-11-25T21:14:49","Actor":"clydin","Number":"28963","RawContent":null,"Title":"ci: use pinned version for google-github-actions/auth action","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/28963","RelatedDescription":"Open PR \"ci: use pinned version for google-github-actions/auth action\" (#28963)"},{"Id":"2692218458","IsPullRequest":true,"CreatedAt":"2024-11-25T20:56:45","Actor":"clydin","Number":"28962","RawContent":null,"Title":"fix(@angular/build): allow .json file replacements with application builds","State":"open","Body":"When using the `application` builder, the `fileReplacements` option will now work as it previous did with the `browser` builder when replacing JSON files.\r\n\r\nCloses #28949","Url":"https://github.com/angular/angular-cli/pull/28962","RelatedDescription":"Open PR \"fix(@angular/build): allow .json file replacements with application builds\" (#28962)"},{"Id":"2687406837","IsPullRequest":false,"CreatedAt":"2024-11-25T20:17:32","Actor":"bampakoa","Number":"28948","RawContent":null,"Title":"Build fails in Angular SSR application with route parameters","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have added Angular SSR in an [existing Angular app with routing enabled](https://github.com/PacktPublishing/Learning-Angular-Fifth-Edition/blob/main/ch15/src/app/app.routes.ts) and when I run `ng build` I get the following error:\n\n`The 'products/:id' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.`\n\n### Minimal Reproduction\n\n1. Create a new Angular CLI 19 application\n2. Create a route in the `app.routes.ts` file with parameter\n3. Run `ng add @angular/ssr`\n4. Run `ng build`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.0\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0 (cli-only)\n@angular-devkit/core         19.0.0 (cli-only)\n@angular-devkit/schematics   19.0.0 (cli-only)\n@schematics/angular          19.0.0 (cli-only)\n```\n\n### Anything else relevant?\n\nPlease note that I answered **No** to the following question when installing SSR, which is the default value:\n\n> Would you like to use the Server Routing and App Engine APIs (Developer Preview) for this server application?","Url":"https://github.com/angular/angular-cli/issues/28948","RelatedDescription":"Closed issue \"Build fails in Angular SSR application with route parameters\" (#28948)"},{"Id":"2690105055","IsPullRequest":true,"CreatedAt":"2024-11-25T20:17:31","Actor":"alan-agius4","Number":"28954","RawContent":null,"Title":"fix(@angular/build): prevent errors with parameterized routes when `getPrerenderParams` is undefined","State":"closed","Body":"\r\n\r\nEnsure that parameterized routes do not cause errors when the `getPrerenderParams` function is undefined, specifically in cases where the routing API is not utilized.\r\n\r\nCloses #28948\r\n","Url":"https://github.com/angular/angular-cli/pull/28954","RelatedDescription":"Closed or merged PR \"fix(@angular/build): prevent errors with parameterized routes when `getPrerenderParams` is undefined\" (#28954)"},{"Id":"2691768844","IsPullRequest":true,"CreatedAt":"2024-11-25T20:04:28","Actor":"clydin","Number":"28961","RawContent":null,"Title":"refactor(@angular/build): maintain previous compiler plugin factory signature","State":"closed","Body":"To minimize downstream breakage for consumers of the private API, the `createCompilerPlugin` function signature has been adjusted to maintain compatibility with v18.","Url":"https://github.com/angular/angular-cli/pull/28961","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): maintain previous compiler plugin factory signature\" (#28961)"},{"Id":"2684752233","IsPullRequest":false,"CreatedAt":"2024-11-25T20:02:36","Actor":"fiste788","Number":"28941","RawContent":null,"Title":"Error using experimentalPlatform neutral with provideAnimationsAsync","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using new experimentalplatform neutral with provideAnimationsAsync() in app.config.ts i have on build\n\n\n### Minimal Reproduction\n\nI have a repro here https://github.com/fiste788/tmp-animations-async\nCloning, running npm install and npm run build will give you the error.\nIf you change to provideAnimations() without async at line \nhttps://github.com/fiste788/tmp-animations-async/blob/562c37a48c9f0c0a52f6ffacbdc5faec25dfe0d5/src/app/app.config.ts#L8\nto make the build work.\n\n\n### Exception or Error\n\n```text\nTypeError: Class extends value undefined is not a constructor or null\n    at file:///D:/Projects/Personal/Fantamanajer/test19v2/.angular/prerender-root/a3011629-d592-49a7-91c1-a8b6d1656845/chunk-GFZLE2P2.mjs:34:17047\n    at file:///D:/Projects/Personal/Fantamanajer/test19v2/.angular/prerender-root/a3011629-d592-49a7-91c1-a8b6d1656845/chunk-GFZLE2P2.mjs:34:17240\n    at ModuleJob.run (node:internal/modules/esm/module_job:195:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:336:24)\n    at async importModuleDynamicallyWrapper (node:internal/vm/module:429:15)\n    at async extractRoutes (D:\\Projects\\Personal\\Fantamanajer\\test19v2\\node_modules\\@angular\\build\\src\\utils\\server-rendering\\routes-extractor-worker.js:23:83)\n    at async D:\\Projects\\Personal\\Fantamanajer\\test19v2\\node_modules\\piscina\\dist\\worker.js:144:26\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 18.20.3\nPackage Manager: bun <error>\nOS: linux x64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28941","RelatedDescription":"Closed issue \"Error using experimentalPlatform neutral with provideAnimationsAsync\" (#28941)"},{"Id":"2690072011","IsPullRequest":true,"CreatedAt":"2024-11-25T20:02:35","Actor":"alan-agius4","Number":"28953","RawContent":null,"Title":"fix(@angular/build): minimize reliance on esbuild `inject` to prevent code reordering","State":"closed","Body":"\r\nResolved an issue where the use of `esbuild`'s `inject` feature caused incorrect reordering of class structures during bundling. This reordering affected extended classes, as illustrated below:\r\n\r\n```js\r\nclass e extends Ur {\r\n  constructor(n, r, i) {\r\n    super(n, r, i);\r\n  }\r\n  ngOnDestroy() {\r\n    this.flush();\r\n  }\r\n  static ɵfac = function (r) {\r\n    return new (r || e)(pe(Xe), pe(Ti), pe(Di));\r\n  };\r\n  static ɵprov = oe({ token: e, factory: e.ɵfac });\r\n}\r\n\r\nvar Ur = class {\r\n  // Class properties and methods omitted for brevity\r\n};\r\n```\r\n\r\nBy reducing the reliance on `inject`, we ensure that the ordering of class properties and methods remains consistent, preserving the expected behavior.\r\n\r\nCloses #28941","Url":"https://github.com/angular/angular-cli/pull/28953","RelatedDescription":"Closed or merged PR \"fix(@angular/build): minimize reliance on esbuild `inject` to prevent code reordering\" (#28953)"},{"Id":"2691747680","IsPullRequest":true,"CreatedAt":"2024-11-25T19:34:14","Actor":"josephperrott","Number":"28960","RawContent":null,"Title":"ci: add @angular/build integration test to workflows","State":"closed","Body":"Add integration test to workflows which are tracked on CI\r\n","Url":"https://github.com/angular/angular-cli/pull/28960","RelatedDescription":"Closed or merged PR \"ci: add @angular/build integration test to workflows\" (#28960)"},{"Id":"2685480190","IsPullRequest":true,"CreatedAt":"2024-11-25T18:02:44","Actor":"angular-robot","Number":"28943","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | patch | [`1.24.0` -> `1.24.1`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.24.0/1.24.1) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.15.0` -> `8.16.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.15.0/8.16.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.15.0` -> `8.16.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.15.0/8.16.0) |\n| [less](http://lesscss.org) ([source](https://redirect.github.com/less/less.js)) | dependencies | patch | [`4.2.0` -> `4.2.1`](https://renovatebot.com/diffs/npm/less/4.2.0/4.2.1) |\n| [less](http://lesscss.org) ([source](https://redirect.github.com/less/less.js)) | devDependencies | patch | [`4.2.0` -> `4.2.1`](https://renovatebot.com/diffs/npm/less/4.2.0/4.2.1) |\n| [ng-packagr](https://redirect.github.com/ng-packagr/ng-packagr) | devDependencies | patch | [`19.0.0` -> `19.0.1`](https://renovatebot.com/diffs/npm/ng-packagr/19.0.0/19.0.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | patch | [`4.27.3` -> `4.27.4`](https://renovatebot.com/diffs/npm/rollup/4.27.3/4.27.4) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | patch | [`4.27.3` -> `4.27.4`](https://renovatebot.com/diffs/npm/rollup/4.27.3/4.27.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.24.1`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.24.1)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.24.0...v1.24.1)\n\nBazelisk v1.24.1 is a patch release with some minor fixes:\n\n### Bug Fixes & Improvements\n\n-   `bisect` now accepts Bazel release branch names ([https://github.com/bazelbuild/bazelisk/pull/633](https://redirect.github.com/bazelbuild/bazelisk/pull/633)).\n-   Improved error message when LTS binaries are missing ([https://github.com/bazelbuild/bazelisk/pull/639](https://redirect.github.com/bazelbuild/bazelisk/pull/639)).\n-   Fixed a performance regression caused by too many unnecessary HTTP requests, which was introduced in v1.24.0 ([https://github.com/bazelbuild/bazelisk/pull/641](https://redirect.github.com/bazelbuild/bazelisk/pull/641)).\n\nWe’d like to thank our amazing users & contributors!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.16.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8160-2024-11-25)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.15.0...v8.16.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[no-base-to-string] check Array.prototype.join ([#&#8203;10287](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10287))\n-   **eslint-plugin:** \\[max-params] add function overload and function type support ([#&#8203;10312](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10312))\n\n##### ❤️  Thank You\n\n-   Kim Sang Du [@&#8203;developer-bandi](https://redirect.github.com/developer-bandi)\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.16.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8160-2024-11-25)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.15.0...v8.16.0)\n\n##### 🚀 Features\n\n-   support TypeScript 5.7 ([#&#8203;10372](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10372))\n\n##### ❤️  Thank You\n\n-   Josh Goldberg ✨\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>less/less.js (less)</summary>\n\n### [`v4.2.1`](https://redirect.github.com/less/less.js/blob/HEAD/CHANGELOG.md#v421-2024-09-26)\n\n[Compare Source](https://redirect.github.com/less/less.js/compare/v4.2.0...1df9072ee9ebdadc791bf35dfb1dbc3ef9f1948f)\n\n-   [#&#8203;4237](https://redirect.github.com/less/less.js/pull/4237) Fix [#&#8203;4235](https://redirect.github.com/less/less.js/issues/4235) container style queries extra space resolved ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr (ng-packagr)</summary>\n\n### [`v19.0.1`](https://redirect.github.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#1901-2024-11-22)\n\n[Compare Source](https://redirect.github.com/ng-packagr/ng-packagr/compare/19.0.0...19.0.1)\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.27.4`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4274)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.27.3...v4.27.4)\n\n*2024-11-23*\n\n##### Bug Fixes\n\n-   Update bundled magic-string to support sourcemap debug ids ([#&#8203;5740](https://redirect.github.com/rollup/rollup/issues/5740))\n\n##### Pull Requests\n\n-   [#&#8203;5740](https://redirect.github.com/rollup/rollup/pull/5740): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28943","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#28943)"},{"Id":"2691408737","IsPullRequest":false,"CreatedAt":"2024-11-25T16:50:54","Actor":"lucawalter","Number":"28959","RawContent":null,"Title":"Build-time prerendering not working anymore in Angular 19","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn Angular 18, I used SSG Build-time Prerendering by following this documentation: (https://angular.dev/guide/prerendering) I added a script to generate a routes.txt. The routes from the routes.txt have been prerendered without any problems. After updating to Angular 19, the build fails with following error message, although I did not change anything in my angular.json and also did not add a renderMode: \n\nThe ':uid' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.\n\nIsn't this way of prerendering not available anymore?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nThe ':uid' route uses prerendering and includes parameters, but 'getPrerenderParams' is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration or specify a different 'renderMode'.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"cli\": {\n        \"packageManager\": \"yarn\"\n    },\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"dummy-project\": {\n            \"projectType\": \"application\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"style\": \"scss\",\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:class\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:directive\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:guard\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:interceptor\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:pipe\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:resolver\": {\n                    \"skipTests\": true\n                },\n                \"@schematics/angular:service\": {\n                    \"skipTests\": true\n                }\n            },\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"prefix\": \"app\",\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:application\",\n                    \"options\": {\n                        \"outputPath\": \"dist/dummy-project\",\n                        \"aot\": true,\n                        \"index\": \"src/index.html\",\n                        \"browser\": \"src/main.ts\",\n                        \"polyfills\": [\"zone.js\"],\n                        \"tsConfig\": \"tsconfig.app.json\",\n                        \"inlineStyleLanguage\": \"scss\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\"],\n                        \"scripts\": [],\n                        \"stylePreprocessorOptions\": {\n                            \"includePaths\": [\"src\"],\n                        },\n                        \"server\": \"src/main.server.ts\",\n                        \"prerender\": {\n                            \"routesFile\": \"routes.txt\",\n                            \"discoverRoutes\": true\n                        },\n                        \"ssr\": {\n                            \"entry\": \"server.ts\"\n                        }\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"optimization\": true,\n                            \"sourceMap\": false,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"500kb\",\n                                    \"maximumError\": \"1mb\"\n                                },\n                                {\n                                    \"type\": \"anyComponentStyle\",\n                                    \"maximumWarning\": \"2kb\",\n                                    \"maximumError\": \"4kb\"\n                                }\n                            ],\n                            \"outputHashing\": \"all\",\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"assets\": [\"src/assets\", \"src/.htaccess\", \"src/robots.txt\"]\n                        },\n                        \"development\": {\n                            \"optimization\": false,\n                            \"extractLicenses\": false,\n                            \"sourceMap\": true\n                        }\n                    },\n                    \"defaultConfiguration\": \"development\"\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"configurations\": {\n                        \"production\": {\n                            \"buildTarget\": \"dummy-project:build:production\"\n                        },\n                        \"development\": {\n                            \"buildTarget\": \"dummy-project:build:development\"\n                        }\n                    },\n                    \"defaultConfiguration\": \"development\"\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"buildTarget\": \"dummy-project:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n                        \"tsConfig\": \"tsconfig.spec.json\",\n                        \"inlineStyleLanguage\": \"scss\",\n                        \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n                        \"styles\": [\"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\"],\n                        \"scripts\": []\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\"@angular/animations\": \"^19.0.0\",\n    \"@angular/cdk\": \"18.2.2\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/platform-server\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"@angular/ssr\": \"^19.0.1\",\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28959","RelatedDescription":"Closed issue \"Build-time prerendering not working anymore in Angular 19\" (#28959)"},{"Id":"2689747059","IsPullRequest":true,"CreatedAt":"2024-11-25T15:53:23","Actor":"angular-robot","Number":"28952","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28952","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#28952)"},{"Id":"2685631117","IsPullRequest":true,"CreatedAt":"2024-11-25T15:44:13","Actor":"sheikalthaf","Number":"28944","RawContent":null,"Title":"refactor(@angular/ssr): use appRef.whenStable instead of util functio…","State":"closed","Body":"…n from angular core\r\n\r\nusing application whenStable function instead of custom util function from angular core.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28944","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): use appRef.whenStable instead of util functio…\" (#28944)"},{"Id":"2685480126","IsPullRequest":true,"CreatedAt":"2024-11-25T14:56:51","Actor":"angular-robot","Number":"28942","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `f3f8c60` -> `d556dfe` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `c1c5e13` -> `07ce63c` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1b1ed7f` -> `b9143f9` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `7d29993` -> `000b84a` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `40531fc` -> `5be3e28` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `a6ac347` -> `ba72f95` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `d351adc` -> `2b45b91` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `6438594` -> `cf7edcd` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `a3e81d5` -> `a26d5a5` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `117df7a` -> `d2a89e7` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `eb82ec7` -> `9e4cbd4` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `2038ae5` -> `61c0579` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `25c0c55` -> `a4bbc7c` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `0e7e575` -> `17a92c7` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `caf7868` -> `43ad1f9` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `0a64f6e` -> `2e68502` |\n| angular/dev-infra | action | digest | `53fb7c3` -> `01c8c16` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4yMS4xIiwidXBkYXRlZEluVmVyIjoiMzkuMjEuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/28942","RelatedDescription":"Closed or merged PR \"build: update angular\" (#28942)"},{"Id":"2690979509","IsPullRequest":true,"CreatedAt":"2024-11-25T14:56:17","Actor":"josephperrott","Number":"28958","RawContent":null,"Title":"ci: update perf workflow to the latest version","State":"closed","Body":"Update the perf workflow to the latest version to allow for uploading results to database\r\n","Url":"https://github.com/angular/angular-cli/pull/28958","RelatedDescription":"Closed or merged PR \"ci: update perf workflow to the latest version\" (#28958)"},{"Id":"2690950646","IsPullRequest":true,"CreatedAt":"2024-11-25T14:35:48","Actor":"devversion","Number":"28957","RawContent":null,"Title":"Initial changes for migrating to `rules_js`","State":"open","Body":"WIP — See individual commits. ","Url":"https://github.com/angular/angular-cli/pull/28957","RelatedDescription":"Open PR \"Initial changes for migrating to `rules_js`\" (#28957)"},{"Id":"2690690624","IsPullRequest":false,"CreatedAt":"2024-11-25T13:16:21","Actor":"dariosko","Number":"28956","RawContent":null,"Title":"Changes will no longer be recognized if you remove and re-add same component","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nChanges will no longer be recognized if you remove and re-add same component.\n\n### Minimal Reproduction\n\nRemoving and re-adding the import of the component (`import { TestComponent } from ‘./test/test.component’`), the component in the `imports` array and in the template (`<app-test>`) leads to that no further changes to this component are recognized.\n\n![Image](https://github.com/user-attachments/assets/cfacaddc-4f00-4196-b4b4-cf69622cfe42)\n\n\n[Repro App V18](https://stackblitz.com/edit/stackblitz-starters-py5tnk?file=src%2Ftest%2Ftest.component.ts,src%2Fmain.ts)\n\n[Problem also in V19](https://stackblitz.com/edit/stackblitz-starters-2h7zbv?file=src%2Ftest%2Ftest.component.ts,src%2Fmain.ts)\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n**v18 Reproduction environment:**\nAngular CLI: 18.2.12\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 18.2.12\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1802.12\n@angular-devkit/core         18.2.12 (cli-only)\n@angular-devkit/schematics   18.2.12\n@schematics/angular          18.2.12\nrxjs                         7.8.1\ntypescript                   5.5.4\nzone.js                      0.14.10\n\n**v19 Reproduction environment:**\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else relevant?\n\nAfter clearing the Angular cache with `ng cache clean` and restarting the dev server with `ng serve` it works again.\nSo probably a caching bug.","Url":"https://github.com/angular/angular-cli/issues/28956","RelatedDescription":"Open issue \"Changes will no longer be recognized if you remove and re-add same component\" (#28956)"},{"Id":"2686667681","IsPullRequest":false,"CreatedAt":"2024-11-25T10:26:47","Actor":"AmitMY","Number":"28947","RawContent":null,"Title":"Upgraded to Angular 19, Dynamic imports do not work","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI upgraded from 18 to 19 using the upgrade command, which also switched me from `browser` to `application`.\nAfter some modifications I managed to make everything run, except for dynamic imports.\n\nMy code has a lot of large modules, that are dynamically imported like so:\n```ts\n      const {defineCustomElements} = await import(/* webpackChunkName: \"pose-viewer\" */ 'pose-viewer/loader');\n      defineCustomElements();\n```\n\n(Removing the /* webpackChunkName: \"pose-viewer\" */  does not help, but I would also like that supported ideally)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/sign/translate/pull/177 - Can't provide something minimal, as this is the app that was upgraded\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Failed to fetch dynamically imported module: http://localhost:4200/@fs/Users/amitmoryossef/dev/sign/translate/.angular/cache/19.0.0/sign-translate/vite/deps/pose-viewer.entry.js?import undefined\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 22.0.0\nPackage Manager: npm 10.5.1\nOS: darwin arm64\n\nAngular: 19.0.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.0\n@angular-devkit/build-angular   19.0.0\n@angular-devkit/core            19.0.0\n@angular-devkit/schematics      19.0.0\n@schematics/angular             19.0.0\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28947","RelatedDescription":"Closed issue \"Upgraded to Angular 19, Dynamic imports do not work\" (#28947)"},{"Id":"2686209716","IsPullRequest":false,"CreatedAt":"2024-11-25T08:01:41","Actor":"wkaskie","Number":"28946","RawContent":null,"Title":"Allow for customized SRI Algorithm","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nCurrently, configuration allows for setting `subresourceIntegrity` to `true` and this adds a sha384 hash to the html output's script tags.\n\nHowever, sha384 is not supported in all platforms and/or frontend developers cannot control the deployment servers. (eg: AWS S3 doesn't allow for sha384 with its checksum-algorithm flag)\n\nRequest is to allow overriding of the default sha384 that is set here: https://github.com/angular/angular-cli/blob/20411f696eb52c500e096e3dfc5e195185794edc/packages/angular_devkit/build_angular/src/tools/webpack/configs/common.ts#L254\n\n### Describe the solution you'd like\n\nTwo options:\n* given that custom webpack configurations are already alowed and plugins added there are already expected to override the defaults, allow the existence of\n```\n   plugins: [\n    new SubresourceIntegrityPlugin({\n      enabled: true,\n      hashFuncNames: ['sha256'],\n    }), \n```\n   to override the hardcodedd configuration.\n* Add additional configuration parameter for overriding the hashFuncNames setting like:\n  ```\n         ...,\n        \"subresourceIntegrity\": true,\n       \"hashFuncNames\": [\"sha256\", \"sha512\"],\n       ...\n```\n\n### Describe alternatives you've considered\n\nI have tried adding the plugin in my custom webpack.config.js file.\nI've also tried to completely rework the settings in Angular to allow for a fully customizable index file...but I honestly just lack the skill to get that to work.","Url":"https://github.com/angular/angular-cli/issues/28946","RelatedDescription":"Closed issue \"Allow for customized SRI Algorithm\" (#28946)"},{"Id":"2688709572","IsPullRequest":false,"CreatedAt":"2024-11-25T00:41:04","Actor":"razor09","Number":"28951","RawContent":null,"Title":"Angular 19 styles from components (.scss) are not included in the styles production bundle .css","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nStyles from components (`.scss` in my case) are not included in the styles production bundle `.css`. Instead, they go to `.js` bundle. Only the global styles specified in the `build.options.styles` in `angular.json` settings are included in the final `.css` bundle.\n\n### Minimal Reproduction\n\nng new my-project\n\nwrite some styles in `app.component.scss` and `app.component.html`\n\nnpm run buld\n\nstyles-[hash].css - 0 bytes\n\nstyles go in `.js` bundle instead of `.css`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nnode.js version: 22.11.0\nnpm version: 10.9.0\nangular version: 19.0.0\nangular-cli version: 19.0.1\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28951","RelatedDescription":"Closed issue \"Angular 19 styles from components (.scss) are not included in the styles production bundle .css\" (#28951)"},{"Id":"2687563624","IsPullRequest":false,"CreatedAt":"2024-11-24T08:56:48","Actor":"stevenrlp","Number":"28949","RawContent":null,"Title":"File Replacements Ignored","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nUpgraded to Angular 19.0.1 and now when I build my application the fileReplacments option is being ignored.\n\nI am running the command `ng build --configuration=production`\n\nMy angular.json file is as follows:\n\n```\n                    \"configurations\": {\n                        \"development\": {\n                          \"extractLicenses\": false,\n                            \"namedChunks\": true,\n                            \"optimization\": false,\n                            \"sourceMap\": true\n                        },\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                  \"replace\": \"src/app/auth/auth-config.json\",\n                                  \"with\": \"src/app/auth/auth-config.prod.json\"\n                                }\n                              ],\n                            \"outputHashing\": \"all\"\n                        }\n                    },\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.1\nNode: 22.11.0\nPackage Manager: npm 10.9.1\nOS: win32 x64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.1\n@angular-devkit/core         19.0.1\n@angular-devkit/schematics   19.0.1\n@angular/build               19.0.1\n@angular/cli                 19.0.1\n@schematics/angular          19.0.1\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28949","RelatedDescription":"Open issue \"File Replacements Ignored\" (#28949)"},{"Id":"2684376807","IsPullRequest":false,"CreatedAt":"2024-11-22T19:52:03","Actor":"drfcozapata","Number":"28940","RawContent":null,"Title":"Angular 19 [ERROR] Could not resolve \"zone.js\"","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nI don't know\n\n### Description\n\nI am a Vue.js web developer, just starting to learn Angular.\n\nI installed the Angular CLI and created a new project with it. After finishing, I opened VScode and when I run 'npm start' I get the following error message:\n```\n> first-angular-app@0.0.0 start\n> ng serve\n\nApplication bundle generation failed. [5.859 seconds]\n\n✘ [ERROR] Could not resolve “zone.js”\n\n    angular:polyfills:angular:polyfills:1:7:\n      1 │ import 'zone.js';\n        ╵ ~~~~~~~~~\n\n  The Yarn Plug'n'Play manifest forbids importing “zone.js” here because it's not listed as a dependency of this package:\n\n    ../../../../../.pnp.cjs:37:31:\n      37 │ “packageDependencies”: [\\.\n         ╵ ~~\n\n  You can mark the path “zone.js” as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\nWatch mode enabled. Watching for file changes...\n```\n\nI deleted the directory, created the project again and again the same error appears (exactly the same).\n\nI am working from Linux Manjaro and I have installed Node v22.11.0 (LTS).\n\nHow can I solve this problem, because my Angular learning process got there?\n\n### Minimal Reproduction\n\nnpm install -g @angular/cli\n\nng new first-angular-app\n\ncd first-angular-app\n\nnpm start\n\n### Exception or Error\n\n```text\n> first-angular-app@0.0.0 start\n> ng serve\n\nApplication bundle generation failed. [5.859 seconds]\n\n✘ [ERROR] Could not resolve \"zone.js\"\n\n    angular:polyfills:angular:polyfills:1:7:\n      1 │ import 'zone.js';\n        ╵        ~~~~~~~~~\n\n  The Yarn Plug'n'Play manifest forbids importing \"zone.js\" here because it's not listed as a dependency of this package:\n\n    ../../../../.pnp.cjs:37:31:\n      37 │         \"packageDependencies\": [\\\n         ╵                                ~~\n\n  You can mark the path \"zone.js\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\n\nWatch mode enabled. Watching for file changes...\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: linux x64\n\nAngular: 19.0.0\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/cli                    19.0.1\n@schematics/angular             19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28940","RelatedDescription":"Closed issue \"Angular 19 [ERROR] Could not resolve \"zone.js\"\" (#28940)"},{"Id":"2682717689","IsPullRequest":true,"CreatedAt":"2024-11-22T18:40:11","Actor":"alan-agius4","Number":"28935","RawContent":null,"Title":"refactor(@angular/ssr): replace `:params` with `*`","State":"closed","Body":"The SSR router relies on wildcard matching rather than params. This commit refactors the stored routes by removing the `:params`.\r\n","Url":"https://github.com/angular/angular-cli/pull/28935","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): replace `:params` with `*`\" (#28935)"},{"Id":"2683567775","IsPullRequest":true,"CreatedAt":"2024-11-22T15:29:15","Actor":"heddendorp","Number":"28939","RawContent":null,"Title":"feat: support tailwind v4","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe current integration if for tailwind V3 only.\r\n\r\nIssue Number: #28938\r\n\r\n## What is the new behavior?\r\n\r\nDetect if tailwind v4 is used as indicated by the presence of the `@tailwindcss/postcss` package. If so, check that also `tailwindcss` is installed. If both are present, Add the tailwind postCSS plugin.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/28939","RelatedDescription":"Open PR \"feat: support tailwind v4\" (#28939)"},{"Id":"2683509202","IsPullRequest":false,"CreatedAt":"2024-11-22T15:11:00","Actor":"heddendorp","Number":"28938","RawContent":null,"Title":"Support tailwind v4","State":"open","Body":"### Command\n\nbuild\n\n### Description\n\nTailwind v4 is changing the installation and configuration. It would be great to update the cli to make sure v4 is supported.\n\n### Describe the solution you'd like\n\nThe cli should support the new postcss plugin https://tailwindcss.com/docs/v4-beta#installing-with-post-css\nAlso detection probably has to be changed as v4 no longer uses js to configure tailwind but instead css variables https://tailwindcss.com/docs/v4-beta#installing-with-post-css\nI guess the best detection at this point is having tailwindcss with a version >4 installed and ideally the cli also makes sure @tailwindcss/postcss is installed.\n\n### Describe alternatives you've considered\n\nTailwind also offers a vite plugin, but to my understanding, postcss should be easier to support","Url":"https://github.com/angular/angular-cli/issues/28938","RelatedDescription":"Open issue \"Support tailwind v4\" (#28938)"},{"Id":"2682865746","IsPullRequest":false,"CreatedAt":"2024-11-22T11:36:06","Actor":"LuisTovar0","Number":"28937","RawContent":null,"Title":"Build library: An error has occuried while processing (scss)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith Angular 19, the library builder breaks if an SCSS file tries to import something (in this case a variable) from external modules or files, without explaining the error.\n\nThese two snippets are supposed to do the same, and produce the same error.\n\n```scss\n@use 'sass:map';\n@use '../theming/theme';\n\np {\n  background-color: #{map.get(theme.$primary, 98)};\n}\n```\n\n```scss\n@use 'sass:map';\n@import '../theming/theme';\n\np {\n  background-color: #{map.get($primary, 98)};\n}\n```\n\ntheme.scss:\n```scss\n$primary: (\n  98: #f0f0f5,\n);\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yeykor?file=angular.json&view=editor\n\n### Please provide the exception or error you saw\n\n```true\nAn error has occuried while processing /home/projects/stackblitz-starters-yeykor/projects/my-lib/src/lib/my-comp.component.scss.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 22.3.0\nPackage Manager: npm 10.8.1\n\nAngular:\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0 (cli-only)\n@angular-devkit/core         19.0.0 (cli-only)\n@angular-devkit/schematics   19.0.0 (cli-only)\n@schematics/angular          19.0.0 (cli-only)\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28937","RelatedDescription":"Closed issue \"Build library: An error has occuried while processing (scss)\" (#28937)"},{"Id":"2682785855","IsPullRequest":false,"CreatedAt":"2024-11-22T10:45:52","Actor":"marklagendijk","Number":"28936","RawContent":null,"Title":"Angular 19: `ng build` fails to find `tsconfig.app.json` during CI/CD pipeline build","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.12\n\n### Description\n\nAfter upgrading to Angular 19 our Azure Pipelines CI/CD build started failing.\nThe Angular build fails because it cannot find/parse `tsconfig.app.json`.\n\nThe failure happens under very specific circumstances. I will describe the high level conditions here, and go into more detail in the 'Minimal Reproduction' below.\n- The Angular build is triggered via the .NET build system. An `.esproj` project is used for the Angular application.\n- The issue happens in the Azure Pipelines CI/CD pipeline, but only on a Ubuntu runner, not on a Windows runner.\n- Executing the same command on my development PC under WSL Ubuntu works fine.\n\nThe baffling thing for me is that the exception mentions a '.NET build system specific'-folder: `PROJECT_NAME/obj/Debug` while I verified that the current working directory in which the `npm run build` command is executed is actually the `PROJECT_NAME` folder.\nSo where is the Angular build system getting this folder from? And why is it using that folder instead of the current working directory?\n\n### Minimal Reproduction\n\n1. Generate a new Angular application `ng new repro-app`.\n2. Create a project file in the root of the application directory: `application.esproj` with the following contents:\n    ```xml\n   <Project Sdk=\"Microsoft.VisualStudio.JavaScript.Sdk/1.0.2039730\">\n     <PropertyGroup>\n       <BuildCommand>echo \"$PWD\" &amp;&amp; npm run version &amp;&amp; npm run build</BuildCommand>\n       <StartupCommand>npm start</StartupCommand>\n       <TestCommand>npm run test</TestCommand>\n       <JavaScriptTestFramework>Jasmine</JavaScriptTestFramework>\n       <BuildOutputFolder>$(MSBuildProjectDirectory)\\dist\\browser\\</BuildOutputFolder>\n     </PropertyGroup>\n   </Project>\n    ```\n3. Reference this project from a normal .NET project file.\n4. Build the .NET project in an Azure Pipeline with the `ubuntu-24.04` vmImage\n\n### Exception or Error\n\n```text\n❯ Building...\n  ✔ Building...\n  Application bundle generation failed. [6.198 seconds]\n  \n  ▲ [WARNING] TypeScript compiler options 'module' values 'CommonJS', 'UMD', 'System' and 'AMD' are not supported. [plugin angular-compiler]\n  \n    The 'module' option will be set to 'ES2022' instead.\n  \n  \n  ▲ [WARNING] TypeScript compiler options 'target' and 'useDefineForClassFields' are set to 'ES2022' and 'false' respectively by the Angular CLI. [plugin angular-compiler]\n  \n      tsconfig.app.json:0:0:\n        0 │ \n          ╵ ^\n  \n    To control ECMA version and features use the Browserslist configuration. For more information, see https://angular.dev/tools/cli/build#configuring-browser-compatibility\n  \n  \n✘ [ERROR] TS500 : error : ENOENT: no such file or directory, stat '/home/vsts/work/1/s/PMP.PortalApp/obj/Debug' [/home/vsts/work/1/s/PMP.PortalApp/PMP.PortalApp.esproj]\n      at Object.statSync (node:fs:1658:25)\n      at NodeJSFileSystem.stat (file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:346:16)\n      at file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:405:23\n      at visitDirectory (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:22130:36)\n      at Object.matchFiles (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:22123:5)\n      at Object.readDirectory (file:///home/vsts/work/1/s/PMP.PortalApp/node_modules/@angular/compiler-cli/bundles/chunk-37JMVF7H.js:395:12)\n      at getFileNamesFromConfigSpecs (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42914:29)\n      at getFileNames (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42407:23)\n      at parseJsonConfigFileContentWorker (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42311:16)\n      at Object.parseJsonConfigFileContent (/home/vsts/work/1/s/PMP.PortalApp/node_modules/typescript/lib/typescript.js:42244:10) [plugin angular-compiler]\n  \n  \n/home/vsts/work/1/.nuget/packages/microsoft.visualstudio.javascript.sdk/1.0.2039730/Sdk/Sdk.targets(184,5): error MSB3073: The command \"npm run version && npm run build\" exited with code 1. [/home/vsts/work/1/s/PMP.PortalApp/PMP.PortalApp.esproj]\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\n  Node: 22.11.0\n  Package Manager: npm 10.9.0\n  OS: linux x64\n  \n  Angular: 19.0.0\n  ... animations, cdk, common, compiler, compiler-cli, core, forms\n  ... material, material-luxon-adapter, platform-browser\n  ... platform-browser-dynamic, router\n  \n  Package                         Version\n  ---------------------------------------------------------\n  @angular-devkit/architect       0.1900.1\n  @angular-devkit/build-angular   19.0.1\n  @angular-devkit/core            19.0.1\n  @angular-devkit/schematics      19.0.1\n  @angular/build                  19.0.1\n  @angular/cli                    19.0.1\n  @schematics/angular             19.0.1\n  rxjs                            7.8.1\n  typescript                      5.6.3\n  zone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/28936","RelatedDescription":"Open issue \"Angular 19: `ng build` fails to find `tsconfig.app.json` during CI/CD pipeline build\" (#28936)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2691799265","IsPullRequest":false,"CreatedAt":"2024-11-25T18:37:36","Actor":"martinboue","Number":"30083","RawContent":null,"Title":"feat(theming): Mixins for reading component style tokens","State":"open","Body":"### Feature Description\n\nMixins to get values from a component theme that takes a token as parameter, for example:\n```\np {\n   color: @include mat.button-get(text-label-text-color);\n}\n```\nit would generate:\n```\np {\n   color: var(--mdc-outlined-button-label-text-color, var(--mat-sys-primary)); // <== Actual value used for text-button\n}\n```\n\nIdeally, we would have as many mixins as there are components (+core) and we could use the same tokens as the `mat.<component>-overrides` mixins.\n\n> The `mat.<component>-get` mixin name is a proposal, open to suggestions.\n\n### Use Case\n\nI have a custom component and I want to apply the same style as a material component. I also want to make sure that they are always in sync when I change my theme.\n\nFor example, I want to have a text `<p>` with the same font color as my `mat-button` next to it.\n\nFor now, I need to rely on private CSS variables to do that, which is not ideal for maintainability.","Url":"https://github.com/angular/components/issues/30083","RelatedDescription":"Open issue \"feat(theming): Mixins for reading component style tokens\" (#30083)"},{"Id":"2691642383","IsPullRequest":false,"CreatedAt":"2024-11-25T17:38:35","Actor":"martinboue","Number":"30082","RawContent":null,"Title":"docs-bug(list): `list-item-hover-leading-icon-color` token is missing in doc","State":"open","Body":"### Documentation Feedback\n\nFor Angular Material v19, token `list-item-hover-leading-icon-color` is missing in the [style documentation for the List component](https://material.angular.io/components/list/styling):\n\n![Image](https://github.com/user-attachments/assets/6e68677c-2e47-4f4f-8774-0c54ed498acd)\n\nbut it can be used in mixins:\n```\nhtml {\n   @include mat.list-overrides((\n      list-item-hover-leading-icon-color: red\n   ));\n}\n```\n\nand works fine:\n![Image](https://github.com/user-attachments/assets/6ee993ac-8e88-4b27-842c-4dc1168275c9)\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/list/styling","Url":"https://github.com/angular/components/issues/30082","RelatedDescription":"Open issue \"docs-bug(list): `list-item-hover-leading-icon-color` token is missing in doc\" (#30082)"},{"Id":"2691477311","IsPullRequest":false,"CreatedAt":"2024-11-25T17:00:02","Actor":"martinboue","Number":"30081","RawContent":null,"Title":"bug(optgroup): Overriding label-text-color has no effect","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing Angular and Material v19, I am trying to change the optgroup text color using the new `mat.optgroup-overrides` with `label-text-color` token mixins documented [here](https://material.angular.io/components/core/styling) but it has no effect.\n\n> Note: This is not a regression, same issue with v18.\n\n\n\n\n### Reproduction\n\nMy scss file:\n ```\nhtml {\n   @include mat.optgroup-overrides((\n      label-text-color: red\n   ));\n}\n```\n\nand html:\n```\n<mat-form-field>\n   <mat-label>My label</mat-label>\n   <mat-select [formControl]=\"form.controls.myControl\">\n      <mat-optgroup label=\"Category 1\">\n         <mat-option [value]=\"1\">Value 1</mat-option>\n         <mat-option [value]=\"2\">Value 2</mat-option>\n      </mat-optgroup>\n      <mat-optgroup label=\"Category 2\">\n         <mat-option [value]=\"3\">Value 3</mat-option>\n      </mat-optgroup>\n   </mat-select>\n</mat-form-field>\n```\n\nBut it has no effect, the color stays to its default value `--mat-sys-on-surface`.\n\n![Image](https://github.com/user-attachments/assets/e47b9aba-0c5b-4290-9391-fc5d497ebb85)\n\n### Inspecting CSS\nI can see the red color being applied to the `mat-optgroup` host element.\n\nBut it is overriden in the inner child that contains the text: `<span class=\"mdc-list-item__primary-text\">Category 1</span>` which has the following CSS:\n```\n.mdc-list-item__primary-text {\n   ...\n   color: var(--mdc-list-list-item-label-text-color, var(--mat-sys-on-surface))\n}\n```\n\n## Workaround\nYou could use `mat.list-overrides` but it will affect every list not just optgroup so I'm overriding the list CSS variable only for optgroups. \n\n```\nmat-optgroup .mat-mdc-optgroup-label {\n   --mdc-list-list-item-label-text-color: red;\n}\n```\n> Note that this is not recommended by the [documentation on \"Direct Style Overrides\"](https://material.angular.io/guide/theming#direct-style-overrides) but that's the only way I know. \n\nAfter that it works fine:\n![Image](https://github.com/user-attachments/assets/74b5ac83-5f90-4f8f-b562-1d96706a0572)\n\n### Expected Behavior\n\nOptgroup text should be red.\n\n### Actual Behavior\n\nOptgroup text stays grey.\n\n### Environment\n\n- Angular v19.0.0\n- Material v19.0.0","Url":"https://github.com/angular/components/issues/30081","RelatedDescription":"Open issue \"bug(optgroup): Overriding label-text-color has no effect\" (#30081)"},{"Id":"2691122708","IsPullRequest":true,"CreatedAt":"2024-11-25T15:19:33","Actor":"josephperrott","Number":"30080","RawContent":null,"Title":"ci: update size test results","State":"open","Body":"Update the size tracking results post standalone default change.","Url":"https://github.com/angular/components/pull/30080","RelatedDescription":"Open PR \"ci: update size test results\" (#30080)"},{"Id":"2691039640","IsPullRequest":true,"CreatedAt":"2024-11-25T14:49:52","Actor":"josephperrott","Number":"30079","RawContent":null,"Title":"ci: set up perf workflow job and create initial workflow","State":"open","Body":"Set up the initial workflow to build upon.","Url":"https://github.com/angular/components/pull/30079","RelatedDescription":"Open PR \"ci: set up perf workflow job and create initial workflow\" (#30079)"},{"Id":"2690990390","IsPullRequest":false,"CreatedAt":"2024-11-25T14:41:22","Actor":"Tristan-Day-FOS","Number":"30078","RawContent":null,"Title":"bug(google-map): Flaky SVG Marker Rendering","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen creating markers using the svg marker element, some parts of the SVG fail to render at different zoom levels.\n\n![Image](https://github.com/user-attachments/assets/43672fb5-e34e-49d5-8fe4-35717c8d2e33)\n![Image](https://github.com/user-attachments/assets/d453e9b0-44d3-492e-9dff-d22308abdfe5)\n\nZooming in to make it render and then zooming out will cause it to behave as expected but will break markers that where taken off-screen. \n\n![Image](https://github.com/user-attachments/assets/43f36741-452b-48be-abd3-c8ed3369d167)\n\n\n\n### Reproduction\n\nI cannot recreate the issue in stackblitz due to licence key requirements with the advanced marker component.\n\nHere is further detail on the component structure.\n\n```html\n<google-map [options]=\"options()\" height=\"100vh\" width=\"100vw\" #map>\n\n  @if (service.route.history | async) {\n    <map-polyline [path]=\"(service.route.history | async)!\" [options]=\"DEFAULT_POLYLINE_OPTIONS\" />\n  }\n\n  @if (service.route.suggested | async) {\n    <map-directions-renderer [directions]=\"(service.route.suggested | async)!\" [options]=\"DEFAULT_DIRECTIONS_OPTIONS\" />\n  }\n\n  @for (marker of service.markers | async; track $index) {\n    <map-advanced-marker [position]=\"marker.position\" [content]=\"marker.node\" (mapClick)=\"onMarkerClicked($index)\" />\n  }\n</google-map>\n```\n\nA marker is generated using typescript and DOM parser\n\n```ts\n        const node = Assets.generateDriverMarker({\n          status: { ... }, vehicle: driver.vehicleId?.vehicleModel, callsign: driver.callSign,\n        })\n```\n\nFor example\n\n```ts\nfunction generateUnallocatedMarker(marker: DriverMarker): string {\n  let colour = '#F44336';\n\n  if (marker.status.tracked) {\n    colour = '#4CAF50';\n  }\n\n  let label = marker.callsign.toUpperCase();\n\n  if (marker.vehicle) {\n    label += ` - ${marker.vehicle.toUpperCase()}`;\n  }\n\n  // prettier-ignore\n  return `\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"180\" viewBox=\"0 0 327.68 200\" id=\"${marker.callsign}\">\n      <g id=\"dp_dp001\">\n        <rect fill=\"black\" x=\"${(327.68 - label.length * 20) / 2}\" y=\"20\" width=\"${label.length * 20}\" height=\"40\" rx=\"8\" />\n      </g>\n      <g id=\"dp_dp002\">\n        <text x=\"${327.68 / 2}\" y=\"50\" font-size=\"25\" font-family=\"Martian Mono\" text-anchor=\"middle\" fill=\"white\">\n          ${label}\n        </text>\n      </g>\n      <defs>\n        <filter id=\"dropShadow\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\n          <feDropShadow dx=\"0\" dy=\"-3\" stdDeviation=\"7\" flood-color=\"black\" flood-opacity=\"0.7\" />\n        </filter>\n      </defs>\n      <g id=\"dp_dp003\" transform=\"matrix(1,0,0,1,-1284.94,-115.667)\" filter=\"url(#dropShadow)\">\n        ...\n      </g>\n    </svg>\n  `;\n}```\n\n\n\n\n### Expected Behavior\n\nI would expect the markers to render as they are defined in the SVG code. \n\n### Actual Behavior\n\nThe markers only partially render despite no code existing to alter them in this way. Changing to a higher zoom level causes those visible in the viewbox to render correctly while those outside will break.\n\n### Environment\n\nI am using Angular version 18.2.10  with @angular/google-maps version 18.2.9.\n\nI am using the zoneless change detection. \n\n```ts\nplatformBrowser().bootstrapModule(AppModule, {\n  ngZone: 'noop', providers: [{ provide: LOCALE_ID, useValue: 'en-GB' }],\n});\n```\n\n- Angular: 18.2.10\n- Browser: Chrome/Brave\n- OS: Windows","Url":"https://github.com/angular/components/issues/30078","RelatedDescription":"Open issue \"bug(google-map): Flaky SVG Marker Rendering\" (#30078)"},{"Id":"2690832698","IsPullRequest":false,"CreatedAt":"2024-11-25T13:53:14","Actor":"Salah-M","Number":"30077","RawContent":null,"Title":"docs-bug(cdk/menu): menu items overflow outside the menu as it exits the viewport when scrolling","State":"open","Body":"### Documentation Feedback\n\nThe examples in the [CDK Menu docs](https://material.angular.io/cdk/menu/examples) are broken because the menu shrinks as it leaves the viewport while scrolling, causing the menu items to overflow.\n\n![Image](https://github.com/user-attachments/assets/8b8ddcbf-335b-4821-b766-4292e8cd4f2a)\n\nSteps to reproduce:\n1. Open CDK Menu from the angular cdk  menu  examples docs page.\n2. Scroll until the menu is out of the screen.\n\nThis happens in all positions of the menu but it is noticeable when the menu opens above the trigger (see attached gif)\n\nIs the intended behavior to shrink the menu or is it supposed to leave the screen?\n\n1. If it is meant to shrink, then we would need to add `overflow: auto` to the menu's CSS so that the items don't overflow outside of it.\n2. If the menu should leave the screen, we need to prevent the height from changing, which can be fixed by adding `withFlexibleDimensions(false)` to the overlay’s position strategy.\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/menu/examples","Url":"https://github.com/angular/components/issues/30077","RelatedDescription":"Open issue \"docs-bug(cdk/menu): menu items overflow outside the menu as it exits the viewport when scrolling\" (#30077)"},{"Id":"2687644845","IsPullRequest":true,"CreatedAt":"2024-11-25T13:09:52","Actor":"crisbeto","Number":"30073","RawContent":null,"Title":"fix(multiple): use cross-compatible type for setTimeout","State":"closed","Body":"Fixes that some places were raising an error due to the return type of `setTimeout` being different between the browser and Node.","Url":"https://github.com/angular/components/pull/30073","RelatedDescription":"Closed or merged PR \"fix(multiple): use cross-compatible type for setTimeout\" (#30073)"},{"Id":"2689977903","IsPullRequest":false,"CreatedAt":"2024-11-25T09:36:21","Actor":"dtsanevmw","Number":"30076","RawContent":null,"Title":"docs-bug(timepicker): icon is invisible for example with custom toggle icon","State":"open","Body":"### Documentation Feedback\n\nThe icon on the example with custom toggle icon is invisible.  Looks like that's happening only for the 'globe' icon.\n\n### Affected documentation page\n\nhttps://material.angular.io/components/timepicker/examples#timepicker-custom-icon","Url":"https://github.com/angular/components/issues/30076","RelatedDescription":"Open issue \"docs-bug(timepicker): icon is invisible for example with custom toggle icon\" (#30076)"},{"Id":"2689735788","IsPullRequest":false,"CreatedAt":"2024-11-25T08:27:43","Actor":"cristinmr","Number":"30075","RawContent":null,"Title":"outlined/stroked-item-icon-color token for mat-menu","State":"open","Body":"### Feature Description\n\nWhen adding buttons inside a `mat-menu`, the color of the icons defaults to `var(--mat-sys-on-surface-variant)`.\n\nAlthough there is a token (item-icon-color) that modified the icon color, it does not take into consideration the different button styles (outlined/stroked).\nHaving separate tokens (**outlined-item-icon-color** and **stroked-item-icon-color**) would help.\n\nThis is how it looks now:\n![Image](https://github.com/user-attachments/assets/bf2a791f-ba8f-4a0f-ac1f-15b9f0296219)\n\n\n### Use Case\n\nHaving different types of buttons with icons inside a mat-menu","Url":"https://github.com/angular/components/issues/30075","RelatedDescription":"Open issue \"outlined/stroked-item-icon-color token for mat-menu\" (#30075)"},{"Id":"2689631723","IsPullRequest":true,"CreatedAt":"2024-11-25T07:51:23","Actor":"IamFlok","Number":"30074","RawContent":null,"Title":"fix(material/autocomplete): ensure selected option updates correctly on backspace","State":"open","Body":"Bug: Select an option from the autocomplete and close it. The input field is updated accordingly. Then click inside the input field and press backspace to update the input's value. The autocomplete panel opens, but the selected option is not updated yet. Pressing another backspace triggers the update.\r\n\r\nProblem and fix:\r\nWhen the `_handleInput` function is called, `panelOpen` is still `false`, causing the selected option to not update correctly. The `_openPanelInternal` function needs to be called to ensure the panel is open before processing the selected option logic.","Url":"https://github.com/angular/components/pull/30074","RelatedDescription":"Open PR \"fix(material/autocomplete): ensure selected option updates correctly on backspace\" (#30074)"},{"Id":"2686512799","IsPullRequest":false,"CreatedAt":"2024-11-23T19:45:11","Actor":"0xFACE","Number":"30072","RawContent":null,"Title":"docs-bug(COMPONENT): TITLE","State":"open","Body":"### Documentation Feedback\n\nI get following warning when building the application:\n`The same typography styles are generated multiple times. Read more about how style duplication can be avoided in a dedicated guide. https://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md [plugin angular-sass]`\n\nBut the link provided does not exist (404 error).\n\n\n### Affected documentation page\n\nhttps://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md","Url":"https://github.com/angular/components/issues/30072","RelatedDescription":"Open issue \"docs-bug(COMPONENT): TITLE\" (#30072)"},{"Id":"2684539001","IsPullRequest":false,"CreatedAt":"2024-11-22T20:18:48","Actor":"royeradames","Number":"30071","RawContent":null,"Title":"Angular Material Migration Pain Point: Version Lock-in Prevents Incremental Updates","State":"open","Body":"## Issue Description\nWhen upgrading from Angular Material v12 to v18, organizations face significant challenges due to:\n\n1. Inability to run different versions of Material UI simultaneously during migration\n2. Requirement to upgrade both Angular and Material UI versions together\n3. Major internal architecture changes in Material UI (particularly v14-15)\n4. No supported path for incremental component migration\n\n## Impact\n\n- Large applications with custom Material UI implementations are effectively locked into Angular 14 or below.\n- Organizations must choose between:\n\n  - Maintaining legacy versions indefinitely\n  - Complete system-wide upgrade with significant business impact\n\n\n- Increased technical debt as teams delay upgrades\n- Higher migration costs due to required \"big bang\" approach\n\n## Requested Solution\nPlease consider implementing:\n\n1. Support for running multiple Material versions simultaneously\n2. Backward compatibility layers for core APIs\n3. Tooling for incremental migration paths\n\n## Context\nOur organization maintains a large Angular application using Material UI v12 with extensive customizations. The current upgrade path requirements make it nearly impossible to maintain both system stability and technical currency. Due to this pain point the company has decided to move to another framework.","Url":"https://github.com/angular/components/issues/30071","RelatedDescription":"Open issue \"Angular Material Migration Pain Point: Version Lock-in Prevents Incremental Updates\" (#30071)"},{"Id":"2684290032","IsPullRequest":false,"CreatedAt":"2024-11-22T19:14:07","Actor":"amysorto","Number":"30070","RawContent":null,"Title":"feat(material/theming): Add palette values to system variables","State":"open","Body":"### Feature Description\n\nPrior to the `theme` mixin you could [access palette tone colors from the theme object](https://v18.material.angular.io/guide/theming-your-components#reading-tonal-palette-colors). It would be useful to add this as system variables for parity. Apps that use the `theme` mixin don't have a theme object anymore and may still want to access those colors.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30070","RelatedDescription":"Open issue \"feat(material/theming): Add palette values to system variables\" (#30070)"},{"Id":"2683664270","IsPullRequest":false,"CreatedAt":"2024-11-22T15:48:56","Actor":"ManicardiFrancesco","Number":"30069","RawContent":null,"Title":"bug(MatTooltip): Can't scroll if target element has matTooltip","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAccording to Issue 4892, this bug should've been fixed in Angular 11+\n\n### Description\n\nScrolling on a touch device doesn't work if the target of the gesture is an element using matTooltip.\nThis is apparently a regression as people mentioned it being fixed in angular 11+:\nhttps://github.com/angular/components/issues/4892\n\nTagging @wagnermaciel @crisbeto and @jelbourn as they commented on the previous issue.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nnqsnt?file=src%2Fmain.html\nSteps to reproduce:\n1. Open the stackblitz link with a touch enabled device (I tested with my Android phone and Firefox browser)\n2. Try scrolling the element - it will not scroll if you target the \"This will not scroll with touch\" text.\n\nI also included a CSS workaround which appears to be working but shouldn't be necessary.\n\n### Expected Behavior\n\nScrolling behavior should not be affected by the presence or absence of a mat tooltip.\n\n### Actual Behavior\n\nScrolling behavior is disabled by targeting a mat tooltip element.\n\n### Environment\n\n- Angular: \n- Angular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, material, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n- CDK/Material:    \"@angular/material\": \"^19\"\n\n- Browser(s): Firefox \n- Operating System (e.g. Windows, macOS, Ubuntu): Android\n","Url":"https://github.com/angular/components/issues/30069","RelatedDescription":"Open issue \"bug(MatTooltip): Can't scroll if target element has matTooltip\" (#30069)"},{"Id":"2683276552","IsPullRequest":true,"CreatedAt":"2024-11-22T13:49:18","Actor":"im100ra","Number":"30068","RawContent":null,"Title":"fix(docs): add example for adding icon in meta section using matListI…","State":"open","Body":"resolves #26415","Url":"https://github.com/angular/components/pull/30068","RelatedDescription":"Open PR \"fix(docs): add example for adding icon in meta section using matListI…\" (#30068)"},{"Id":"2683246726","IsPullRequest":true,"CreatedAt":"2024-11-22T13:47:34","Actor":"im100ra","Number":"30067","RawContent":null,"Title":"Fix list item meta icons docs","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30067","RelatedDescription":"Closed or merged PR \"Fix list item meta icons docs\" (#30067)"},{"Id":"2681092105","IsPullRequest":false,"CreatedAt":"2024-11-22T11:26:57","Actor":"f-mon","Number":"30061","RawContent":null,"Title":"bug(timepicker): cannot disable timepicker from template","State":"closed","Body":"\n### Description\n\nThe disable input in timepicker.ts component is protected so angular compiler reports an error if you try to diable it from template:\n\n\n```\n<mat-form-field>\n  <mat-label>Pick a time</mat-label>\n  <input matInput [matTimepicker]=\"picker\" disabled >\n  <mat-timepicker-toggle matIconSuffix [for]=\"picker\"/>\n  <mat-timepicker #picker/>\n</mat-form-field>\n```\n\n\n\ncompiling will report:\n\n\n```\n\nError: src/example/timepicker-overview-example.html:4:44 - error TS2445: Property 'disabledInput' is protected and only accessible within class 'MatTimepickerInput<D>' and its subclasses.\n\n4   <input matInput [matTimepicker]=\"picker\" disabled >\n                                             ~~~~~~~~\n\n  src/example/timepicker-overview-example.ts:10:16\n    10   templateUrl: 'timepicker-overview-example.html',\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/tn1pxy?file=src%2Fexample%2Ftimepicker-overview-example.html\n\n\n### Expected Behavior\n\nshould be possible to disable the timepicker field from template\n\n### Actual Behavior\n\nit reports a compiling error\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n","Url":"https://github.com/angular/components/issues/30061","RelatedDescription":"Closed issue \"bug(timepicker): cannot disable timepicker from template\" (#30061)"},{"Id":"2682254799","IsPullRequest":true,"CreatedAt":"2024-11-22T11:26:56","Actor":"crisbeto","Number":"30063","RawContent":null,"Title":"fix(material/timepicker): make disabled input public","State":"closed","Body":"Initially the `disabled` input was marked as `protected`, because the actual disabled state is a `computed`. This seems to break with some compiler options so these changes switches it to be public.\r\n\r\nFixes #30061.","Url":"https://github.com/angular/components/pull/30063","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): make disabled input public\" (#30063)"},{"Id":"2682694340","IsPullRequest":true,"CreatedAt":"2024-11-22T11:26:37","Actor":"im100ra","Number":"30064","RawContent":null,"Title":"fix(docs): update document refs to mat-chip-set","State":"closed","Body":"resolves #29943","Url":"https://github.com/angular/components/pull/30064","RelatedDescription":"Closed or merged PR \"fix(docs): update document refs to mat-chip-set\" (#30064)"},{"Id":"2682836813","IsPullRequest":true,"CreatedAt":"2024-11-22T11:10:08","Actor":"ElDemetriou","Number":"30066","RawContent":null,"Title":"Update package.json","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30066","RelatedDescription":"Closed or merged PR \"Update package.json\" (#30066)"},{"Id":"2682735244","IsPullRequest":false,"CreatedAt":"2024-11-22T10:28:17","Actor":"anlexN","Number":"30065","RawContent":null,"Title":"docs-bug(COMPONENT): I can not use 0.0.0.0 ?","State":"open","Body":"### Documentation Feedback\n\nI want to change localhost to 0.0.0.0 ?\n\n![Image](https://github.com/user-attachments/assets/59f5c211-4dcb-47aa-a3b0-04b7bccacf35)\n\nI have tried:\n\n![Image](https://github.com/user-attachments/assets/2e8c82c5-7d76-4bf8-ab8d-01133f1961cb)\n\nI tried this:\n\n![Image](https://github.com/user-attachments/assets/a6e7f709-bedd-46e9-a89e-33edc968145a)\n\nor I tried this:\n\n![Image](https://github.com/user-attachments/assets/e0546673-fc45-4d19-ba39-80cdaed6a7b0)\n\nBecause I use docker in the windows. I want to access docker's ibazel url in the windows.\n\nBut `--host=0.0.0.0` is wrong.\n\n### Affected documentation page\n\nhttps://material.angular.io/guides","Url":"https://github.com/angular/components/issues/30065","RelatedDescription":"Open issue \"docs-bug(COMPONENT): I can not use 0.0.0.0 ?\" (#30065)"},{"Id":"2679400707","IsPullRequest":true,"CreatedAt":"2024-11-22T08:06:24","Actor":"Sepandard","Number":"30059","RawContent":null,"Title":"fix(docs): update errorState example to cover handle missing state","State":"closed","Body":"resolves#29750","Url":"https://github.com/angular/components/pull/30059","RelatedDescription":"Closed or merged PR \"fix(docs): update errorState example to cover handle missing state\" (#30059)"},{"Id":"2681230953","IsPullRequest":false,"CreatedAt":"2024-11-21T22:47:53","Actor":"Frankystan","Number":"30062","RawContent":null,"Title":"bug(CHIPS): Global configuration (provider) for MatChipsModule does not work","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you create a provider to configure adding chips behaviour globally such as when user press COMMA, SPACE or ENTER keycodes , chips are not shown/added to the input.\n// custom-chips.provider.ts\nimport { Provider } from '@angular/core';\nimport { MAT_CHIPS_DEFAULT_OPTIONS } from '@angular/material/chips';\nimport { ENTER, COMMA, SPACE } from '@angular/cdk/keycodes';\n\n\nexport const provideCustomChipsProvider: Provider[] = [\n    {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n            separatorKeyCodes: [COMMA, ENTER, SPACE],\n        },\n        multi: true,\n    },\n];\n\n// Usage in app.config.ts\n...\nimport { provideCustomChipsProvider } from '@providers/custom-chips.provider';\n\nexport const appConfig: ApplicationConfig = {\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideAnimationsAsync(),\n        provideHttpClient(),\n        provideRouter(APP_ROUTES, withComponentInputBinding()),\n        .....\n       provideCustomChipsProvider,\n    ],\n};\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Create provider file for custom configuration for Material Chips named:  custom-chips.provider.ts:\n```\nimport { Provider } from '@angular/core';\nimport { MAT_CHIPS_DEFAULT_OPTIONS } from '@angular/material/chips';\nimport { ENTER, COMMA, SPACE } from '@angular/cdk/keycodes';\n\n\nexport const provideCustomChipsProvider: Provider[] = [\n    {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n            separatorKeyCodes: [COMMA, ENTER, SPACE],\n        },\n        multi: true,\n    },\n];\n```\n\n2. Import it in app.config.ts\n```\nimport { provideCustomChipsProvider } from '@providers/custom-chips.provider';\n\nexport const appConfig: ApplicationConfig = {\n    providers: [\n        provideZoneChangeDetection({ eventCoalescing: true }),\n        provideAnimationsAsync(),\n        provideHttpClient(),\n        provideRouter(APP_ROUTES, withComponentInputBinding()),\n        .....\n       provideCustomChipsProvider,\n    ],\n};\n```\n\n### Expected Behavior\n\nChips added to the input they belong as soon as user press COMMA, SPACE or ENTER keycodes, previously configured in a custom provider\n\n### Actual Behavior\n\nChips are not added to the input they belong to\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30062","RelatedDescription":"Open issue \"bug(CHIPS): Global configuration (provider) for MatChipsModule does not work\" (#30062)"},{"Id":"2679342286","IsPullRequest":false,"CreatedAt":"2024-11-21T21:40:44","Actor":"marcelMaier","Number":"30058","RawContent":null,"Title":"bug(Timepicker): Timepicker design against Material 3 specifications","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe Timepicker we got with @angular/material 19 doesn't look like it should be according to the Material 3 specifications.\n\n### Reproduction\n\nRight now it's more like a select list with different times: https://material.angular.io/components/timepicker/overview\nBut this is far away from the Material specifications and I don't think it's a good UI/UX experience either.\n\n### Expected Behavior\n\nThe Timepicker should work, look and feel like described in the official material specifications over here: https://m3.material.io/components/time-pickers/overview.\n\n![Image](https://github.com/user-attachments/assets/dcac0cba-1885-426c-802e-063b29cf1be5)\n\nI also found this open source example which I would expect it to be: https://dev.to/dhutaryan/a-new-material-timepicker-component-51aj\n\n### Actual Behavior\n\nIt doesn't look like in the specifications, and I think this is not the UI quality most of us expect from the material components.\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Every Browser\n- Operating System (e.g. Windows, macOS, Ubuntu): Every operating system\n","Url":"https://github.com/angular/components/issues/30058","RelatedDescription":"Closed issue \"bug(Timepicker): Timepicker design against Material 3 specifications\" (#30058)"},{"Id":"2680040312","IsPullRequest":true,"CreatedAt":"2024-11-21T16:04:42","Actor":"josephperrott","Number":"30060","RawContent":null,"Title":"ci: update to latest actions from angular/dev-infra","State":"closed","Body":"Update to latest commit","Url":"https://github.com/angular/components/pull/30060","RelatedDescription":"Closed or merged PR \"ci: update to latest actions from angular/dev-infra\" (#30060)"},{"Id":"2678929485","IsPullRequest":true,"CreatedAt":"2024-11-21T10:33:48","Actor":"crisbeto","Number":"30057","RawContent":null,"Title":"fix(material/sort): simplify animations","State":"open","Body":"For a long time the sort header's animation was set up by rendering out 4 `div` elements and then arranging them to look like an arrow. This is somewhat complicated to maintain, difficult to customize, in some cases it leads to weird visual bugs and ends up triggering excessive change detections. On top of that, because it depends on `@angular/animations`, it is prone to memory leaks (see https://github.com/angular/angular/issues/54149).\r\n\r\nThese changes aim to simplify the component and make it more robust by using an `svg` icon and dealing with the animations using CSS.\r\n\r\nFixes #9758.\r\nFixes #9844.\r\nFixes #10088.\r\nFixes #15451.\r\nFixes #19441.\r\nFixes #10242.","Url":"https://github.com/angular/components/pull/30057","RelatedDescription":"Open PR \"fix(material/sort): simplify animations\" (#30057)"},{"Id":"2677808709","IsPullRequest":false,"CreatedAt":"2024-11-21T03:04:38","Actor":"SvenBudak","Number":"30056","RawContent":null,"Title":"bug(Mat Slider): mark--active class is set incorrectly","State":"open","Body":"![Image](https://github.com/user-attachments/assets/aced39bd-51ef-4c29-80be-06d9309a2e17)\n\nThe problem is so easy to describe that I hope I can get away with this screenshot... It's just that when the slider is set to the last step, the last mark is set as inactive... Which is of course wrong.","Url":"https://github.com/angular/components/issues/30056","RelatedDescription":"Open issue \"bug(Mat Slider): mark--active class is set incorrectly\" (#30056)"},{"Id":"2677330257","IsPullRequest":false,"CreatedAt":"2024-11-20T22:05:13","Actor":"martinboue","Number":"30055","RawContent":null,"Title":"docs-bug(*): Missing migration guide to v19","State":"open","Body":"### Documentation Feedback\n\nI'm struggling to migrate from Angular Material v18 (with MD3) to v19. I did not find any migration guide and the new guides do not explain the basics as deeply as in the previous version.\n\nHere are the most important use cases that I don't know how to deal with:\n\n> Note: I'm trying to remove the old `$theme = mat.define-theme(...)` to use the new `@include mat.theme` mixins\n\n## Styling custom components\n### Before\n```\n.my-component {\n   background-color: mat.get-theme-color(theme.$theme, neutral, 98)\n}\n```\n### After\nI cannot use mat.get-theme-color because I don't have a $theme anymore (previously from mat.define-theme). How can I do that?\n\n## Material 3 theme setup\n### Before\n```\n@include mat.core();\n:root {\n   @include mat.core-theme(theme.$light-theme);\n}\n```\n\n### After \nIt has been automatically replaced to:\n\n```\n@include mat.elevation-classes();\n@include mat.app-background();\n:root {\n   @include mat.elevation-classes();\n   @include mat.app-background();\n}\n```\nWhat is it for? Why isn't it present if I create a new application with Angular Material? Should it be duplicated? I don't see any documentation mentioning those mixins.\n\n## Customising material components\n### Before\nI could do this:\n```\n@include mat.chips-color(theme.$theme, $color-variant: primary);\n@include mat.form-field-density(-3);\n```\n\n### After\nHow to do the same? Do I need to use the new overrides mixins and set each color tokens? For example, that would be 25 colors for the chip component.\n \n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30055","RelatedDescription":"Open issue \"docs-bug(*): Missing migration guide to v19\" (#30055)"},{"Id":"2676796920","IsPullRequest":true,"CreatedAt":"2024-11-20T19:57:28","Actor":"josephperrott","Number":"30054","RawContent":null,"Title":"ci: update to latest actions from angular/dev-infra","State":"closed","Body":"Update to latest commit","Url":"https://github.com/angular/components/pull/30054","RelatedDescription":"Closed or merged PR \"ci: update to latest actions from angular/dev-infra\" (#30054)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-26T03:30:02.3441682Z","RunDurationInMilliseconds":1577}