{"Data":{"Angular-Issues":{"Issues":[{"Id":"2097328636","IsPullRequest":true,"CreatedAt":"2024-01-24T03:00:41","Actor":"maxalmonte14","Number":"54044","RawContent":null,"Title":"docs: fix typo in Custom directives section","State":"open","Body":"There was a grammatically incorrect sentence in the What is Angular page, Custom directives section. This change makes it more correct.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54044","RelatedDescription":"Open PR \"docs: fix typo in Custom directives section\" (#54044)"},{"Id":"2097268052","IsPullRequest":true,"CreatedAt":"2024-01-24T01:41:47","Actor":"dylhunn","Number":"54043","RawContent":null,"Title":"refactor(compiler): Support externally provided defer deps fns","State":"open","Body":"In #53591, Andrew added local compliation support for defer blocks. However, this requires the ability to emit pre-generated static defer deps functions. We now also support that feature in Template Pipeline.\r\n","Url":"https://github.com/angular/angular/pull/54043","RelatedDescription":"Open PR \"refactor(compiler): Support externally provided defer deps fns\" (#54043)"},{"Id":"2097105318","IsPullRequest":true,"CreatedAt":"2024-01-23T22:38:48","Actor":"blathers16","Number":"54042","RawContent":null,"Title":"fix(router): preserve replaceUrl when returning a urlTree from CanAct…","State":"open","Body":"…ivate\r\n\r\nThis commit will fix the issue of the setting of NavigationExtras.replaceUrl being lost when returning a urlTree from a CanActivateFn.\r\n\r\nFixes #53503\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n     I didn't see anything in the docs that mentions the bug.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nhttps://github.com/angular/angular/issues/53503\r\nIssue Number: 53503\r\n\r\n\r\n## What is the new behavior?\r\nNavigationExtras.replaceUrl is preserved.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54042","RelatedDescription":"Open PR \"fix(router): preserve replaceUrl when returning a urlTree from CanAct…\" (#54042)"},{"Id":"2096844869","IsPullRequest":false,"CreatedAt":"2024-01-23T20:31:05","Actor":"bdirito","Number":"54039","RawContent":null,"Title":"Components with a 'required' signalized input cannot be directly unit tested","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIf you create a component with a required signalized input `myInput = input.required<string>();` you cannot construct that component in a unit test as via `TestBed.createComponent(TheComponent)`. If you try you will get an error citing that\r\n```\r\nError: NG0950: Input is required but no value is available yet. Find more at https://angular.io/errors/NG0950\r\n```\r\n\r\nNow this does make sense as far as it goes in that we are not actually providing a value to the required input when we create the component via the testbed. However you *can* write this sort of test with a non-signalized required input ie `@Input({required: true}) myInput!: string;` (which is why I'm calling this a regression).\r\n\r\nThe workaround as via https://stackoverflow.com/questions/77838277/how-to-initialise-angular-components-with-signal-inputs-from-test seems to be to wrap the component you wish to test with another component that provides the inputs desired in order to test it.\r\n\r\nIn the attached stackblitz:\r\nsrc/app/foo/foo.component.ts - a component with a `required` signalized input\r\nsrc/app/foo/foo.component.spec.ts - test of FooComponent showing both the error when trying to create the component directly as well as a utest variant that wraps FooComponent (and works)\r\nsrc/app/foo/bar.component.ts - a component using the older `@Input({required: true})` syntax\r\nsrc/app/foo/bar.component.spec.ts - tests showing that components with `@Input({required: true})` can be created in unit tests without providing the required input\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/ng-jasmine-glhj4x?file=src%2Fapp%2Ffoo%2Ffoo.component.spec.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54039","RelatedDescription":"Closed issue \"Components with a 'required' signalized input cannot be directly unit tested\" (#54039)"},{"Id":"2096910385","IsPullRequest":false,"CreatedAt":"2024-01-23T20:18:53","Actor":"Dejavu333","Number":"54041","RawContent":null,"Title":"Formcontrol essential features","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/forms\r\n\r\n### Description\r\n\r\n1. Formcontrol should know whether it is focused, submitted.\r\n2. We should be able to add multiple updateOn values not just one.\r\n3. We should be able to set if we want to propagate valueChanges and/or statusChanges\r\n\r\n\r\n### Proposed solution\r\n\r\n1. add focused:boolean property to Formcontrol class, and focus$ submit$ streams we can subscribe to\r\n2. rewrite updateOn so it accepts arrays like: ['blur','submit'], and also extend it witch focus click dblclick etc.\r\n3. extend Formcontrol so we can add { propagateValueChanges : false , propagateStatusChanges: true } at declaration\r\n\r\n\r\n### Alternatives considered\r\n\r\nwouldn't have written the issue if had found any","Url":"https://github.com/angular/angular/issues/54041","RelatedDescription":"Open issue \"Formcontrol essential features\" (#54041)"},{"Id":"2096902091","IsPullRequest":true,"CreatedAt":"2024-01-23T20:12:41","Actor":"vladboisa","Number":"54040","RawContent":null,"Title":"docs: fix & update MDN Shadow API link examples","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- **N/A** Tests for the changes have been added (for bug fixes / features)\r\n- **N/A** Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nLink to MDN Shadow API returns 404. \r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nLink to MDN Shadow API work correctly\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54040","RelatedDescription":"Open PR \"docs: fix & update MDN Shadow API link examples\" (#54040)"},{"Id":"2096813102","IsPullRequest":true,"CreatedAt":"2024-01-23T19:17:06","Actor":"bencodezen","Number":"54038","RawContent":null,"Title":"feat: add docs command for local docs dev","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [x] Other... Please describe: angular.dev infrastructure script change\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThere is no current path for building angular.dev locally.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nUsers can build a local dev environment of the Angular.dev environment.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54038","RelatedDescription":"Open PR \"feat: add docs command for local docs dev\" (#54038)"},{"Id":"2096672100","IsPullRequest":false,"CreatedAt":"2024-01-23T18:05:05","Actor":"esauerbo","Number":"54037","RawContent":null,"Title":"Tour of heroes inconsistent about usage of standalone components","State":"open","Body":"### Describe the problem that you experienced\n\nIn the first step of the Tour of Heroes tutorial, it shows that `app.component.ts` should be `standalone: true`\r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt0#final-code-review\r\n\r\nIn the second step this is taken out\r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt1#final-code-review\r\n\r\nThe tutorial also mentions that `app.module` should have been created with `ng new` which was not the case for me \r\nhttps://angular.io/tutorial/tour-of-heroes/toh-pt1#appmodule\r\n\r\nI think this tutorial just hasn't been updated for angular 17 or was only partially updated. \n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\nEither updated for angular 17 or make note of which version the tutorial is for. \n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54037","RelatedDescription":"Open issue \"Tour of heroes inconsistent about usage of standalone components\" (#54037)"},{"Id":"2096525825","IsPullRequest":false,"CreatedAt":"2024-01-23T16:48:53","Actor":"Babeetlebum","Number":"54036","RawContent":null,"Title":"SwUpdate emits superfluous `VERSION_READY` event with `navigationRequestStrategy` set to `\"freshness\"`","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nservice-worker\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen settings `navigationRequestStrategy` to `\"freshness\"` in `ngsw-config.json`, a user opening the browser will always get the newest version, which is great.\r\n\r\nHowever, when closing and reopening the tab `SwUpdate.versionUpdates` will emit a `VERSION_DETECTED` event alongside a `VERSION_READY` event, despite the user being on the latest version.\r\n\r\nThis behavior leads to showing unwanted update alerts to our users and as far as I know we don't have any way to differentiate these unwanted `VERSION_READY` events from other warranted ones.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/Babeetlebum/angular-sw-bug\n\n### Please provide the exception or error you saw\n\n```true\nHow to reproduce:\r\n\r\n1. pull the repo\r\n2. `yarn build --watch`\r\n3. run a nginx webserver with `docker-compose up --build`\r\n4. open the app at http://localhost:4201\r\n5. it shows version `v1.0.0`\r\n6. close the tab (important step)\r\n7. increment the version in `app.component.ts` to `v1.0.1`\r\n8. open the app at http://localhost:4201 again\r\n9. the new version is pulled (`v1.0.1`) thanks to `navigationRequestStrategy: \"freshness\"` but `SwUpdate` still emits a `VERSION_READY` event, thus prompting users to update to the new version\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0\r\nNode: 20.11.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54036","RelatedDescription":"Open issue \"SwUpdate emits superfluous `VERSION_READY` event with `navigationRequestStrategy` set to `\"freshness\"`\" (#54036)"},{"Id":"2096433208","IsPullRequest":false,"CreatedAt":"2024-01-23T16:08:18","Actor":"GaetanRdn","Number":"54035","RawContent":null,"Title":"@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\n\n@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not\r\n\r\nI wanted to work with angular material form-field. I tried to condition mat-errors.\r\n\r\nI wrote a first @if to test if the field is touched or not and inside several @if to test the different error cases.\r\n\r\nexpected : as usual a beautiful mat-error design\r\n\r\nResult : the mat-error is not displayed as expected. No design for him.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/73hcig-celf3j?file=src%2Fexample%2Fform-field-error-example.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.1.0\r\n@angular/localize                  17.0.8\r\n@angular/material                  17.1.0\r\n@angular/material-moment-adapter   17.1.0\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nIn the stackblitz repo you just have to click inside both input and you will see the difference","Url":"https://github.com/angular/angular/issues/54035","RelatedDescription":"Open issue \"@if(A && B) {} should be the same as @if (A) { @if(B) {}} but is not\" (#54035)"},{"Id":"2095010222","IsPullRequest":true,"CreatedAt":"2024-01-23T15:59:00","Actor":"yjaaidi","Number":"54025","RawContent":null,"Title":"test(core): fix test with false-negative risk","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [X] Other... Please describe: fix test\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54025","RelatedDescription":"Closed or merged PR \"test(core): fix test with false-negative risk\" (#54025)"},{"Id":"2095024227","IsPullRequest":true,"CreatedAt":"2024-01-23T14:09:40","Actor":"dylhunn","Number":"54026","RawContent":null,"Title":"refactor(compiler): ICUs should roll up to the root i18n block for application","State":"closed","Body":"Previously, if an ICU was inside a nested i18n root, it would use the nested root to calculate whether it should be applied. Now, we use the root i18n block.","Url":"https://github.com/angular/angular/pull/54026","RelatedDescription":"Closed or merged PR \"refactor(compiler): ICUs should roll up to the root i18n block for application\" (#54026)"},{"Id":"2095869348","IsPullRequest":false,"CreatedAt":"2024-01-23T11:34:39","Actor":"carl-neuriot","Number":"54033","RawContent":null,"Title":"standalone misspelt 'standaone' in angular.dev tutorial","State":"closed","Body":"### Describe the problem that you experienced\n\nIn the [custom pipes](https://angular.dev/tutorials/learn-angular/create-a-pipe) section of the tutorial on angular.dev, the code in step 1 misspells standalone as 'standaone'.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/learn-angular/create-a-pipe\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/54033","RelatedDescription":"Closed issue \"standalone misspelt 'standaone' in angular.dev tutorial\" (#54033)"},{"Id":"2095863002","IsPullRequest":false,"CreatedAt":"2024-01-23T11:26:42","Actor":"rezoled","Number":"54032","RawContent":null,"Title":"Async computed signal - Add the ability to easily create async signals with dependencies","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently, the computed operator for signal provides the ability to create a new signal value, which is dependent on other signals.\r\n\r\nThe limitation I want to solve is that currently, the computed operator only allows for synchronous computations with immediate resolution of the newly computed value.\r\n\r\nMy suggestion is to allow computed signals to accept an async value (promise or observable), which when combined with a flag would wait until an actual value returns from the async value before updating the signal.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n### Proposed solution\n\nUse case - \r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n}\r\n```\r\nConsider the use case in the component above, where on every keystroke I want to fetch some data from a backend service.\r\n\r\nExample - Promise:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Data | undefined> = computed(\r\n\t       () => this.service.queryAsPromise({query: this.query()}), // returns a promise \r\n\t\t{ async: true }\r\n\t)\r\n}\r\n```\r\n\r\nExample - Observable:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Data | undefined> = computed(\r\n\t\t() => this.service.queryAsObservable({query: this.query()}), // returns an observable\r\n\t\t{ async: true }\r\n\t)\r\n}\r\n```\r\n\r\nUsing the computed operator with an async callback, but without specifying the async flag would result in a signal that holds an async value (same behavior today so not a breaking change):\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata:Signal<Promise<Data>> = computed(\r\n\t\t() => this.service.queryAsPromise({query: this.query()}), \r\n\t)\r\n}\r\n```\n\n### Alternatives considered\n\nCurrently this is possible only with these 2 options:\r\n1 - Using promise and effect which writes to a new signal:\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tdata = signal([]);\r\n\r\n\tconstructor(service:DataService) {\r\n\t\teffect(async () => {\r\n\t\t\tconst query = this.query()\r\n\t\t\tconst result = await service.queryAsPromise({query});\r\n\t\t\tthis.data.set(result);\r\n\t\t}, { allowSignalWrites: true })\r\n\t}\r\n}\r\n```\r\n\r\n2 - Using observable and jumping back and forwards from signal and observables to merge all required data (not to mention the added complexity if you have several dependencies for your async request):\r\n```\r\n@Component({\r\n\ttemplate: `\r\n\t<input (change)=\"query.set($event.value)\">\r\n\t`,\r\n})\r\nclass TestComponent {\r\n\tquery = signal('');\r\n\t\r\n\tservice = inject(DataService);\r\n\t\r\n\tdata = toSignal(\r\n\t\ttoObservable(this.query)\r\n\t\t\t.pipe(mergeMap(query => this.service.queryAsObservable({query})))\r\n\t);\r\n}\r\n```\r\n\r\nBoth solutions are very verbose, convoluted, and seems like bending the framework to do something it wasn't supposed to in terms of ergonomics (my opinion).\r\nThe usecase seems pretty trivial, and I come across it constantly in our projects, so much so that I created a new function just to wrap this logic (toSignalWithDeps).","Url":"https://github.com/angular/angular/issues/54032","RelatedDescription":"Open issue \"Async computed signal - Add the ability to easily create async signals with dependencies\" (#54032)"},{"Id":"2092825779","IsPullRequest":true,"CreatedAt":"2024-01-23T08:47:46","Actor":"ilirbeqirii","Number":"54015","RawContent":null,"Title":"docs: fix typo at component template metadata property","State":"closed","Body":"Rename the component metadata property, templateUrl to template in the reactive forms tutorial step\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54015","RelatedDescription":"Closed or merged PR \"docs: fix typo at component template metadata property\" (#54015)"},{"Id":"2095455660","IsPullRequest":false,"CreatedAt":"2024-01-23T07:49:51","Actor":"bschick","Number":"54031","RawContent":null,"Title":"Refused to apply inline style because it violates the following Content Security Policy","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nplatform-browser\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nTrying to use strict CSP script-src and style-src policies and I have added ngCspNonce to my application root element, but inline styles are not loading. The nonce shows up in index.html script and style elements, but when the page loads there are many errors emitted from JS code in mainXXX.js. Feel like I must be missing something obvious, but I've double checked everything (including that the nonce value in the CSP header matches).\r\n\r\nLooking at the call stack, the source of the errors seems to be template html files that are being created at runtime. Note that I have prerender and ssr disabled and am just deploying the packed \"browser\" files to AWS S3 and Cloudfront and manually setting the CSP nonce for now. I do have an external UI library that I was expecting to have some difficulty with, but removing that made no difference and the current errors seem to be generated when adding styled Angular Material elements to the DOM\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://qcrypt.schicks.net/\r\n\r\nCreated much simpler testCSP page with the same headers applied that does work as expected: https://testcsp.schicks.net/\r\n\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nmain-5TORSPFS.js:8 Refused to apply inline style because it violates the following Content Security Policy directive: \"style-src 'self' 'nonce-ew26COJKMG8qrA/bjTcl0w=='\". Either the 'unsafe-inline' keyword, a hash ('sha256-rMuFfE8Uore3ZjKvUao/SW5yWTAZjyzCj88QtGdRqjk='), or a nonce ('nonce-...') is required to enable inline execution...\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 21.6.0 (Unsupported)\r\nPackage Manager: npm 10.3.0\r\nOS: linux arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nSource code is here: https://github.com/bschick/qcrypt\r\nYou can see what the app is supposed to look like by opening the repo in stackblitz: https://stackblitz.com/github/bschick/qcrypt","Url":"https://github.com/angular/angular/issues/54031","RelatedDescription":"Open issue \"Refused to apply inline style because it violates the following Content Security Policy\" (#54031)"},{"Id":"2095312201","IsPullRequest":true,"CreatedAt":"2024-01-23T06:11:29","Actor":"AndrewKushnir","Number":"54030","RawContent":null,"Title":"refactor(compiler-cli): rephrase an error message related to `@defer` and local compilation","State":"open","Body":"This commit updates the error message to cover cases when imported symbols have eager references inside of a file.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/54030","RelatedDescription":"Open PR \"refactor(compiler-cli): rephrase an error message related to `@defer` and local compilation\" (#54030)"},{"Id":"2095116662","IsPullRequest":true,"CreatedAt":"2024-01-23T02:24:40","Actor":"ChellappanRajan","Number":"54029","RawContent":null,"Title":"Refactor: Specify `Provider` type for `DEFAULT_VALUE_ACCESSOR`","State":"open","Body":"Change from `any` to `Provider` type for enhanced type safety and clarity\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54029","RelatedDescription":"Open PR \"Refactor: Specify `Provider` type for `DEFAULT_VALUE_ACCESSOR`\" (#54029)"},{"Id":"2095076515","IsPullRequest":true,"CreatedAt":"2024-01-23T02:18:21","Actor":"ChellappanRajan","Number":"54028","RawContent":null,"Title":"Refactor: Specify `Provider` type for `DEFAULT_VALUE_ACCESSOR`","State":"closed","Body":"Change from `any` to `Provider` type for enhanced type safety \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54028","RelatedDescription":"Closed or merged PR \"Refactor: Specify `Provider` type for `DEFAULT_VALUE_ACCESSOR`\" (#54028)"},{"Id":"2095050660","IsPullRequest":false,"CreatedAt":"2024-01-23T01:02:53","Actor":"jjgriff93","Number":"54027","RawContent":null,"Title":"When using NgOptimizedImage directive, onerror=\"this.src=/fallback/img.jpg\" causes recursive load","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI have an image defined using the optimise directive combined with an `onerror` trigger, like so:\r\n```html\r\n<img\r\n    [ngSrc]=\"coverImage\"\r\n    onerror=\"this.src='assets/placeholders/project.jpg'\"\r\n    fill\r\n/>\r\n```\r\n\r\nWhen the `coverImage` doesn't exist and a 404 occurs, it causes a recursive loop (as I understand because the src is updated after a 404 error occurs and triggers the directive to re-render).\r\n\r\nI've attempted to rectify by instead updating the ngSrc attribute\r\n```html\r\n<img\r\n    [ngSrc]=\"coverImage\"\r\n    onerror=\"this.ngSrc='assets/placeholders/project.jpg'\"\r\n    fill\r\n/>\r\n```\r\nThis avoids the recursive re-rendering however doesn't change the image to the fallback. I can't see a way to implement a fallback image in combination with the `NgOptimizeImage` directive unless I'm missing something here?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.9\r\nNode: 18.19.0\r\nPackage Manager: npm 9.8.1\r\nOS: darwin arm64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.9\r\n@angular-devkit/core         17.0.9\r\n@angular-devkit/schematics   17.0.9\r\n@schematics/angular          17.0.9\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/54027","RelatedDescription":"Open issue \"When using NgOptimizedImage directive, onerror=\"this.src=/fallback/img.jpg\" causes recursive load\" (#54027)"},{"Id":"2094998036","IsPullRequest":true,"CreatedAt":"2024-01-23T00:05:52","Actor":"atscott","Number":"54024","RawContent":null,"Title":"refactor(core): Update `ComponentFixture` behavior when using zoneless scheduler","State":"open","Body":"When the zoneless scheduler is provided, we want to update the behavior of `ComponentFixture` to address common issues and painpoints in testing. Developers should never have to call `detectChanges` on a fixture manually. Instead of calling `detectChanges` after performing an action that updates state and requies a template refresh, developers should wait for change detection to run because the update needs to also have notified the scheduler. If this was not the case, the component would not work correctly in the application. Calling `detectChanges` to force an update could hide real bugs.\r\n\r\nThis commit also updates the zoneless tests to uses `ComponentFixture` instead of manually attaching to the `ApplicationRef` and rewriting a lot of the helpers (`getDebugNode`, `isStable` as a value, `whenStable` as a Promise).","Url":"https://github.com/angular/angular/pull/54024","RelatedDescription":"Open PR \"refactor(core): Update `ComponentFixture` behavior when using zoneless scheduler\" (#54024)"},{"Id":"2094928927","IsPullRequest":true,"CreatedAt":"2024-01-22T23:02:54","Actor":"atscott","Number":"54023","RawContent":null,"Title":"refactor(core): race rAF and setTimeout in zoneless scheduler","State":"open","Body":"Update zoneless scheduler to run change detection after the first of either `requestAnimationFrame` or `setTimeout` callbacks execute.\r\n","Url":"https://github.com/angular/angular/pull/54023","RelatedDescription":"Open PR \"refactor(core): race rAF and setTimeout in zoneless scheduler\" (#54023)"},{"Id":"2094545343","IsPullRequest":false,"CreatedAt":"2024-01-22T18:55:59","Actor":"DerChris173","Number":"54022","RawContent":null,"Title":"Add a way to set new default values to reactive form controls","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\nFor typical CRUD operations, it's often required to\r\n- reset the dialog to its initial state\r\n- query if a particular FormControl has a value that's different than the original one.\r\n\r\nThe defaultValue/reset() Feature is quite suitable for this. Unfortunately, there's no way to change the defaultValue, e.g. once the user performs a \"Save action\".\r\n\r\n### Proposed solution\r\n\r\nI propose to enhance the Reactive FormControl API with the following methods:\r\n\r\n- `setDefaultValue(newDefaultValue: TValue)`: Updates the defaultValue of the FormControl to `newDefaultValue`. Calls to the reset() operation in particular will use this new defaultValue.\r\n- `setCurrentValuesAsDefault()`: Convenience method for `formControl.setDefaultValue(formControl.getRawValue())`.\r\n\r\n\r\nI'd be happy to develop and raise a PR for this feature.\r\n\r\n### Alternatives considered\r\n\r\nAnother alternative would be to build entirely new FormControls if new default values are required. However, this might be less convenient and has issues currently with 2-way-data-binding, I believe.\r\n","Url":"https://github.com/angular/angular/issues/54022","RelatedDescription":"Open issue \"Add a way to set new default values to reactive form controls\" (#54022)"},{"Id":"2092973466","IsPullRequest":true,"CreatedAt":"2024-01-22T18:43:40","Actor":"DivyaSudagoni","Number":"54016","RawContent":null,"Title":"docs: move import statement of ngmodule from standalone component to module code #53952","State":"closed","Body":"\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nLink: https://angular.io/guide/what-is-angular#organization\r\nIssue Number: #53952\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/54016","RelatedDescription":"Closed or merged PR \"docs: move import statement of ngmodule from standalone component to module code #53952\" (#54016)"},{"Id":"2094379747","IsPullRequest":true,"CreatedAt":"2024-01-22T17:14:18","Actor":"atscott","Number":"54021","RawContent":null,"Title":"fix(router): revert commit that replaced `last` helper with native `A…","State":"open","Body":"…rray.at(-1)`\r\n\r\nWhile `Array.at` is technically supported in all browsers we officially support, the change was needlessly breaking without any real benefit.\r\n","Url":"https://github.com/angular/angular/pull/54021","RelatedDescription":"Open PR \"fix(router): revert commit that replaced `last` helper with native `A…\" (#54021)"},{"Id":"2094349260","IsPullRequest":true,"CreatedAt":"2024-01-22T16:59:26","Actor":"JeanMeche","Number":"54020","RawContent":null,"Title":"refactor(http): Deprecate HttpClientModule & related modules","State":"open","Body":"This commit deprecates the `HttpClientModule` and other related http modules. Those can be replaced by provider function only.\r\n\r\nAngular is an opinionated framework, feature guidance will help developer choose the recommended way to enable features (like Http requests here).\r\n\r\nThis PR provides a migration schematics to smooth out the transition. \r\n\r\nNote: This is NOT an indication of deprecation for NgModules. The deprecated modules only purpose was to define providers. This can be done directly by the provide function pattern.\r\n\r\nDEPRECATION: `HttpClientModule`, `HttpClientXsrfModule` and `HttpClientJsonpModule`\r\n\r\nPreviously at #53861 ","Url":"https://github.com/angular/angular/pull/54020","RelatedDescription":"Open PR \"refactor(http): Deprecate HttpClientModule & related modules\" (#54020)"},{"Id":"2094223185","IsPullRequest":true,"CreatedAt":"2024-01-22T15:54:04","Actor":"devversion","Number":"54019","RawContent":null,"Title":"#2 Compiler part for signal-based queries","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/54019","RelatedDescription":"Open PR \"#2 Compiler part for signal-based queries\" (#54019)"},{"Id":"2094165791","IsPullRequest":false,"CreatedAt":"2024-01-22T15:25:28","Actor":"tobiloeb","Number":"54018","RawContent":null,"Title":"Cookies not set after requests in APP_INITIALIZER (Mobile browser)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, core\n\n### Is this a regression?\n\nNo\n\n### Description\n\n**Our Setup**\r\nWe have an Angular module which made some handshake stuff with our backend before the main part of our App starts. Additionally we get CSRF Cookies (set-cookie headers) from our backend through this handshake calls.\r\nThis handshake calls are made within an APP_INITIALIZER function in our \"handshake\" module. So all the handshake stuff is made before our app starts the other functional calls to the backend are made. I try to show this in the reproduction code.\r\n\r\n**The Issue**\r\nThe handshake calls are working fine. We get the set-cookie header from the first handshake call in the response and the second handshake call sets the cookie in its request correctly (this is done in the initializer function). But right after this handshake calls are made, we are doing our first functional call to the backend through the AppComponent (or other services) and this request didn't have a cookies set.\r\n\r\nIt seems that the httpClient in the APP_INITIALIZER function has access to the cookie but the injection of httpClient in AppComponent do not have access to the cookies directly. Because the second handshake call from initializer function sets the cookies correctly. Just the call (after handshake calls) from AppComponent has no cookies set. It seems that it take some time (maybe one tick?) after the httpClient in AppComponent will send the cookies whit the requests.\r\n\r\nAND all this happends on mobile devices, **ONLY**. Tested with Chrome on Android, multiple devices.\r\n\r\n**Expected behavior**\r\nWe would expect, that the asynchronous APP_INITIALIZER function is executed first. Everything waits for it to finish and after that, each http call adds the cookies in its requests.\r\n\r\n**Steps to reproduce**\r\n- Checkout the reproduction code and run it with \"npm start\". \r\n- Connect your Android phone via USB and go in chrome on your PC/Mac to: chrome://inspect/#devices\r\n- Select \"Port forwarding\" and add 4200 -> localhost:4200 (so you can reach the devServer from your android cellphone)\r\n- Go to \"http://localhost:4200\" at your Android cellphone and open this tab in the inspect window on your PC/Mac\r\n- Remove all cookies for localhost (Application tab in inspect chrome window) and reload the page (at your android cellphone chrome browser) so you can see all initial network interactions in the developer console on the inspect chrome window on PC/Mac\r\n- You should see that the handshake call will contain a set-cookie header in response. BUT the \"backend/call\" has no cookie set in its request (like in my screenshot)\r\n\r\n\r\n**Screenshots**\r\nScreenshots from Chrome Network Tab from my cellphone: \r\n![Bildschirmfoto 2024-01-22 um 11 58 09](https://github.com/angular/angular/assets/8022875/8ce7a374-81b7-46f8-8d69-8bdb915f8a4d)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/tobiloeb/angular-cookie-issue\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\n```\n\n\n### Anything else?\n\nIt's hard to describe the scenario and the issue we have. If you have further question let me know.","Url":"https://github.com/angular/angular/issues/54018","RelatedDescription":"Open issue \"Cookies not set after requests in APP_INITIALIZER (Mobile browser)\" (#54018)"},{"Id":"2093516093","IsPullRequest":true,"CreatedAt":"2024-01-22T09:50:45","Actor":"pkozlowski-opensource","Number":"54017","RawContent":null,"Title":"Signal queries - runtime bits","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/54017","RelatedDescription":"Open PR \"Signal queries - runtime bits\" (#54017)"},{"Id":"2092814292","IsPullRequest":false,"CreatedAt":"2024-01-21T22:38:45","Actor":"StefanNedelchev","Number":"54014","RawContent":null,"Title":"SwPush.messages and SwPush.notificationClicks don't work properly on iOS","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nservice-worker\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThe `messages` Observable from `SwPush` doesn't seem to emit anything when using Push API on iOS. The notifications are correctly set up (and they work) but comparing Windows, Android and iOS side by side shows that only iOS doesn't receive updates on `SwPush.messages`.\r\n`SwPush.notificationClicks` does work but only when the app is closed and you swipe right on the notification to activate the \"open\" option. Tapping on the notification (or swiping right) while the client app is actively running doesn't make `notificationClicks` to emit.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/StefanNedelchev/ng-web-push\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNo errors are being thrown in the process.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 20.11.0\r\nPackage Manager: npm 10.3.0\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nThe repo for reproduction is also deployed here https://ng-web-push-example.netlify.app for testing (check the readme for explanation). I'm testing this on a real iPhone with iOS v17.2.1 (latest at the moment)","Url":"https://github.com/angular/angular/issues/54014","RelatedDescription":"Open issue \"SwPush.messages and SwPush.notificationClicks don't work properly on iOS\" (#54014)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2097195186","IsPullRequest":true,"CreatedAt":"2024-01-24T00:23:11","Actor":"clydin","Number":"26936","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): update Vite client code loading for v5","State":"open","Body":"Vite v5 updated the client code's error dialog text. This requires that the text replacement code also be updated to remove unactionable information from the error dialog.","Url":"https://github.com/angular/angular-cli/pull/26936","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): update Vite client code loading for v5\" (#26936)"},{"Id":"2096694363","IsPullRequest":false,"CreatedAt":"2024-01-23T21:09:46","Actor":"paulflo150","Number":"26935","RawContent":null,"Title":"ng build fails when using an absolute path in --output-path","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n<17\n\n### Description\n\nUsing an absolute path with ng build in --output-path throws an error, the build command appears to append the source folder to the folder provided in the --output-path. Using a relative path on the other hand works.\n\n### Minimal Reproduction\n\nng build --configuration production --output-path=\"D:\\builds\\myapp\"\r\n\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: ENOENT: no such file or directory, mkdir 'D:\\Source.App\\D:\\builds\\myapp\\browser'\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.1.0\r\n@angular/cdk                    17.0.1\r\n@angular/cli                    17.1.0\r\n@angular/fire                   17.0.0\r\n@angular/material               17.0.1\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26935","RelatedDescription":"Closed issue \"ng build fails when using an absolute path in --output-path\" (#26935)"},{"Id":"2096587645","IsPullRequest":false,"CreatedAt":"2024-01-23T17:43:41","Actor":"everton-auth","Number":"26934","RawContent":null,"Title":"Global styles for angular libraries","State":"closed","Body":"### Command\n\nconfig\n\n### Description\n\nUtilizing global styles in the Angular library packaged by ng-packgr at the moment is impossible or at least missing documentation.\r\nIt would be nice to have global styles as in normal angular applications so that developers won't need to import, e.g. bootstrap into each component separately.\n\n### Describe the solution you'd like\n\nWhen specifying styleIncludePaths in ng-package.json, there should be an option that resolves and inlines css for each component globally.\n\n### Describe alternatives you've considered\n\nBe able to create a global style file for the library.","Url":"https://github.com/angular/angular-cli/issues/26934","RelatedDescription":"Closed issue \"Global styles for angular libraries\" (#26934)"},{"Id":"2093323502","IsPullRequest":false,"CreatedAt":"2024-01-23T17:35:02","Actor":"JonasDev17","Number":"26911","RawContent":null,"Title":"Angular CLI SSR Configuration removes trailing comma in AppConfig, resulting in Syntax Errors","State":"closed","Body":"### Command\r\n\r\nadd\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nUpon running `ng add @angular/ssr` the following happened:\r\n\r\n```\r\n        provideHotToastConfig({\r\n            position: \"bottom-right\",\r\n        })provideClientHydration(),\r\n        \r\n ```\r\n \r\n `provideClientHydration` was not placed on a new line and the trailing comma was removed, resulting in a syntax error.\r\n \r\n \r\n![image](https://github.com/angular/angular-cli/assets/25738474/e92cb260-8e14-4199-b7f8-11e07e822a49)\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nrun:\r\n\r\n`ng add @angular/ssr` \r\n\r\n### Exception or Error\r\n\r\n```text\r\nSyntax Error\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.1.0\r\nNode: 18.14.2\r\nPackage Manager: pnpm 8.6.11\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, material-luxon-adapter, platform-browser\r\n... platform-browser-dynamic, platform-server, router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.3\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.0.3\r\n@angular-devkit/schematics      17.0.3\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.0\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26911","RelatedDescription":"Closed issue \"Angular CLI SSR Configuration removes trailing comma in AppConfig, resulting in Syntax Errors\" (#26911)"},{"Id":"2095745642","IsPullRequest":true,"CreatedAt":"2024-01-23T17:35:01","Actor":"alan-agius4","Number":"26929","RawContent":null,"Title":"fix(@schematics/angular): retain trailing comma when adding providers to app config","State":"closed","Body":"\r\n\r\nThis fixes an issue which caused the new provider to be added in the position of the trailing comma. With this change the trailing comma is retained.\r\n\r\nCloses #26911","Url":"https://github.com/angular/angular-cli/pull/26929","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): retain trailing comma when adding providers to app config\" (#26929)"},{"Id":"2094652309","IsPullRequest":false,"CreatedAt":"2024-01-23T15:23:20","Actor":"griest024","Number":"26922","RawContent":null,"Title":"Dev Server throws error when running Angular 17 app non-standalone with SSR","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nWhen running an Angular 17 app with the module setup and SSR enabled, the dev server throws an error.\r\n\r\nBuilding (`ng b`) works (unless `prerender: true`) and serving the client bundle directly works as well as running SSR: `node dist/repro-app/server/server.mjs`.\r\n\r\nWith prerender enabled, building throws the same error as the dev server.\r\n\r\nRemoving SSR (deleting `ssr` and `server` options in `angular.json`) causes the dev server to work as expected.\n\n### Minimal Reproduction\n\nRun `ng s` in [my repro](https://github.com/griest024/ng17-repro).\r\n\r\nSee [this branch](https://github.com/griest024/ng17-repro/tree/remove-server) for a repro of how removing SSR options fixes the issue.\n\n### Exception or Error\n\n```text\n[vite] Internal server error: Cannot read properties of undefined (reading 'ɵmod')\r\n      at getNgModuleDef (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:2117:25)\r\n      at assertNgModuleType (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:2371:10)\r\n      at compileNgModuleFactory (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:31582:18)\r\n      at _PlatformRef.bootstrapModule (/workspace/repro-app/node_modules/@angular/core/fesm2022/core.mjs:32472:16)\r\n      at eval (/workspace/repro-app/node_modules/@angular/platform-server/fesm2022/platform-server.mjs:17111:39)\r\n      at Generator.next (<anonymous>)\r\n      at eval (/workspace/repro-app/.angular/vite-root/repro-app/chunk-VPSODEBW.mjs:64:61)\r\n      at ZoneAwarePromise (/workspace/repro-app/node_modules/zone.js/fesm2015/zone-node.js:1353:21)\r\n      at Module.__async (/workspace/repro-app/.angular/vite-root/repro-app/chunk-VPSODEBW.mjs:48:10)\r\n      at renderModule (/workspace/repro-app/node_modules/@angular/platform-server/fesm2022/platform-server.mjs:17100:50)\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.1.0\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: linux x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\nMaybe this isn't a supported usage since standalone is default now? Seems like modules should still be fully supported until they're officially deprecated.","Url":"https://github.com/angular/angular-cli/issues/26922","RelatedDescription":"Closed issue \"Dev Server throws error when running Angular 17 app non-standalone with SSR\" (#26922)"},{"Id":"2095620500","IsPullRequest":true,"CreatedAt":"2024-01-23T15:23:19","Actor":"alan-agius4","Number":"26928","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide actionable error message when server bundle is missing default export","State":"closed","Body":"\r\nThis change improves the error message when the server bundle does not export a default export.\r\n\r\nCloses #26922\r\n","Url":"https://github.com/angular/angular-cli/pull/26928","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): provide actionable error message when server bundle is missing default export\" (#26928)"},{"Id":"2095851549","IsPullRequest":true,"CreatedAt":"2024-01-23T15:00:36","Actor":"alan-agius4","Number":"26930","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency vite to v5.0.12","State":"closed","Body":"This commit updates vite to address https://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\n\r\nCloses https://github.com/angular/angular-cli/issues/26916","Url":"https://github.com/angular/angular-cli/pull/26930","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency vite to v5.0.12\" (#26930)"},{"Id":"2096221364","IsPullRequest":false,"CreatedAt":"2024-01-23T14:37:42","Actor":"pramodhcm","Number":"26933","RawContent":null,"Title":"@angular-devkit/build-angular depends on vulnerable version of vite","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nVite dev server option `server.fs.deny` can be bypassed when hosted on a case-insensitive filesystem.\r\nFor more details: [GHSA-c24v-8rfc-w8vw](https://github.com/advisories/GHSA-c24v-8rfc-w8vw)\r\n\r\n![image](https://github.com/angular/angular-cli/assets/43880968/c8f90ccb-2ab9-46e4-9ab6-ef75236eb50c)\r\n\n\n### Minimal Reproduction\n\nCreate new Angular v16 project.\r\nRun npm audit in the project folder\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.10\r\nNode: 20.11.0 (Unsupported)\r\nPackage Manager: npm 10.3.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.12\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.10\r\n@angular-devkit/build-angular   16.2.11\r\n@angular-devkit/core            16.2.10\r\n@angular-devkit/schematics      16.2.10\r\n@angular/cli                    16.2.10\r\n@schematics/angular             16.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26933","RelatedDescription":"Closed issue \"@angular-devkit/build-angular depends on vulnerable version of vite\" (#26933)"},{"Id":"2096157786","IsPullRequest":false,"CreatedAt":"2024-01-23T13:05:11","Actor":"christiaanverwijs","Number":"26932","RawContent":null,"Title":"Angular does not always load CSS bundles properly on sites with multiple stylesheets and CSP nonces enabled","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI recently enabled CSP with nonces for one of our web projects. After that, I started noticing that some styling wasn't always properly loaded. For example, I noticed some styling for our dialogs was sometimes missing. The screenshot below shows a test page with and without the issue:\r\n\r\n![issue](https://github.com/angular/angular/assets/39433533/c81db3a3-3311-47b8-a92f-1a4d942f6fb0)\r\n\r\nI noticed that \"media=print\" was not replaced with \"media=all\" for the styles.css bundle in the incorrect version. It happened frequently, but not all the time. So it seemed to be some sort of timing issue. Eventually, I narrowed it down to three conditions that need to be met:\r\n\r\n1. CSP nonce is set (e.g. <app-root ngCspNonce=\"[nonce]\">)\r\n2. Part of the styling has to be loaded from an external stylesheet, in our case a .css file provided by a CDN. The second part of the styling is contained in a local bundle (e.g. styles.css) and injected automatically by Angular.\r\n3. The external stylesheet has to take at least 50ms to load.\r\n\r\nThis might sound quite rare. But this issue is now surfacing frequently across seven web projects we run. I suspect many developers will stylesheets provided by external sources, amended by local stylesheets, and combined with CSP nonces.\r\n\r\nIt isn't easy to reproduce the issue because it requires a server that adds the correct CSP headers. I set up a temporary site at [https://test-cspissue.theliberatorsimproveyourteam.com](https://test-cspissue.theliberatorsimproveyourteam.com) to demonstrate the issue. The source code for the Angular site is available at [https://github.com/christiaanverwijs/angular-csp-issue](https://github.com/christiaanverwijs/angular-csp-issue). To reproduce:\r\n\r\n1. In Chrome, use the Developers Tools. Go to \"network\" and \"throttle\" to \"3G Fast\". Also, disable the local cache. Alternatively, just reload the page a few times in a new tab or window (CTRL+F5/F5) and the issue will show up.\r\n2. Load [https://test-cspissue.theliberatorsimproveyourteam.com](https://test-cspissue.theliberatorsimproveyourteam.com)\r\n3. Click 'Open dialog'\r\n4. If the issue is present, the dialog box will appear immediately below the button, and not centered on a darker background (as it should be by the node_modules/@angular/material/prebuilt-themes/indigo-pink.css that we include in the local bundle).\r\n5. If the issue is not present, the dialog box appears nicely in the middle of the page.\r\n\r\nNote that this isn't an issue with Material Design, but with Angular. The issue just surfaced most visibly first with a Material Design component.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/christiaanverwijs/angular-csp-issue\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.1.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            6.6.7\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI found that I could circumvent the issue by defining the \"styles\" as follows in angular.json. Not ideal, but it seems to work:\r\n\r\n**UPDATE JAN 23**: As it happens, the solution below doesn't consistently resolve the issue on a production environment with a full-blown webapp. \r\n\r\n```\r\n                  \"styles\": [\r\n                     {\r\n                        // the first injected bundle isn't always loaded. so I added a dummy one. \r\n                        \"input\": \"src/less/styles.less\",\r\n                        \"bundleName\": \"dummy\"\r\n                     },\r\n                     {\r\n                        \"input\": \"node_modules/@angular/material/prebuilt-themes/indigo-pink.css\",\r\n                        \"bundleName\": \"material\"\r\n                     },\r\n                     {\r\n                        \"input\": \"src/less/styles.less\",\r\n                        \"bundleName\": \"app\"\r\n                     }\r\n                  ],\r\n```\r\n\r\nMy hunch is that the script that is inserted into index.html by Angular when CSP nonces are active executes too quickly. \r\n\r\n```\r\n<script nonce=\"\">(() => {\r\n  const children = document.head.children;\r\n  function onLoad() {this.media = this.getAttribute('ngCspMedia');}\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i];\r\n    child.hasAttribute('ngCspMedia') && child.addEventListener('load', onLoad);\r\n  }\r\n})();</script>\r\n\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/26932","RelatedDescription":"Open issue \"Angular does not always load CSS bundles properly on sites with multiple stylesheets and CSP nonces enabled\" (#26932)"},{"Id":"2096013665","IsPullRequest":true,"CreatedAt":"2024-01-23T12:43:05","Actor":"alan-agius4","Number":"26931","RawContent":null,"Title":"fix(@angular-devkit/build-angular): return 404 for assets that are not found","State":"open","Body":"\r\n\r\nThis commit updates the vite dev-server to return 404 for assets and files that are not found.\r\n\r\nCloses #26917\r\n","Url":"https://github.com/angular/angular-cli/pull/26931","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): return 404 for assets that are not found\" (#26931)"},{"Id":"2095313212","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:36","Actor":"angular-robot","Number":"26926","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | patch | [`6.19.0` -> `6.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/6.19.0/6.19.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | patch | [`6.19.0` -> `6.19.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.19.0/6.19.1) |\n| [jsonc-parser](https://togithub.com/microsoft/node-jsonc-parser) | dependencies | patch | [`3.2.0` -> `3.2.1`](https://renovatebot.com/diffs/npm/jsonc-parser/3.2.0/3.2.1) |\n| [jsonc-parser](https://togithub.com/microsoft/node-jsonc-parser) | devDependencies | patch | [`3.2.0` -> `3.2.1`](https://renovatebot.com/diffs/npm/jsonc-parser/3.2.0/3.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v6.19.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#6191-2024-01-22)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.19.0...v6.19.1)\n\n##### 🩹 Fixes\n\n-   **type-utils:** preventing isUnsafeAssignment infinite recursive calls\n\n-   **eslint-plugin:** \\[no-unnecessary-condition] fix false positive for type variable\n\n##### ❤️  Thank You\n\n-   YeonJuan\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.19.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6191-2024-01-22)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.19.0...v6.19.1)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>microsoft/node-jsonc-parser (jsonc-parser)</summary>\n\n### [`v3.2.1`](https://togithub.com/microsoft/node-jsonc-parser/compare/v3.2.0...v3.2.1)\n\n[Compare Source](https://togithub.com/microsoft/node-jsonc-parser/compare/v3.2.0...v3.2.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26926","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26926)"},{"Id":"2095096634","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:24","Actor":"harshlakhara","Number":"26924","RawContent":null,"Title":"fix(@angular/cli): update regex to validate the project-name","State":"closed","Body":"fix(@angular/cli): update regex to validate the project-name\r\n\r\nEnsure that the regex used for validating the project-name is updated to address any issues and enhance accuracy.\r\n\r\nthe existing regex for project-name validation was not validating the name with the dot(.) in application name.\r\n\r\nFixes #25704 \r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25704  \r\n\r\n## What is the new behavior?\r\n\r\nProject name can include the dot(.) in the name while creating the project but while validating the dot(.) was missing. I updated the pattern to accept dot(.) in projectName.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26924","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): update regex to validate the project-name\" (#26924)"},{"Id":"2094683818","IsPullRequest":true,"CreatedAt":"2024-01-23T09:52:12","Actor":"clydin","Number":"26923","RawContent":null,"Title":"fix(@angular-devkit/build-angular): allow package file loader option with Vite prebundling","State":"closed","Body":"Previously, the `application` builder would consider all imports originating from a package to be considered external when caching was enabled. This allows Vite's prebundling to function and optimize the build/rebuild experience for the development server. However, when using the newly introduced `loader` option, this also inadvertently caused files that should be affected by the option that originate from a package to also be considered external. This behavior would then prevent the loader customization from being performed. To rectify this situation, all files that would be affected by a loader customization will not be marked as external for the purposes of prebundling unless explicitly configured by the `externalDependencies` option.\r\n\r\nCloses #26866","Url":"https://github.com/angular/angular-cli/pull/26923","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): allow package file loader option with Vite prebundling\" (#26923)"},{"Id":"2095435394","IsPullRequest":false,"CreatedAt":"2024-01-23T08:20:23","Actor":"xkx-dev","Number":"26927","RawContent":null,"Title":"esbuild not support the  inline scss style as webpack","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn a component, when I define the style as inline style  , \r\nand run build , it will give expect new line error. \r\n\r\n\r\n\r\n```\r\nconst SPINNER_VERTICAL_OFFSET = '20px';\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styles: [`\r\n    :host { \r\n      height: 100 %;\r\n      width: 100 %;\r\n      #splash-container {\r\n        top: calc(50 % + ${SPINNER_VERTICAL_OFFSET});\r\n      }\r\n    }\r\n    `]\r\n})\r\nexport class AppComponent {\r\n  title = 'xkx-ng-esbuild';\r\n  name = \"This is name\";\r\n}\r\n```\r\n\r\n![image](https://github.com/angular/angular-cli/assets/147232556/b3975214-3efc-4f6f-9f33-512248700d0a)\r\n\n\n### Minimal Reproduction\n\nusing basic ng-cli to new a project, and change the app-component style with inline styles.\r\nplease refer description \n\n### Exception or Error\n\n```text\nX [ERROR] Expected newline.\r\n  ╷\r\n2 │     :host {\r\n  │           ^\r\n  ╵\r\n  src\\app\\app.component.ts 2:11  root stylesheet [plugin angular-sass]\n```\n\n\n### Your Environment\n\n```text\n17 latest\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26927","RelatedDescription":"Closed issue \"esbuild not support the  inline scss style as webpack\" (#26927)"},{"Id":"2093602553","IsPullRequest":false,"CreatedAt":"2024-01-23T08:13:38","Actor":"slavede","Number":"26914","RawContent":null,"Title":"Allow relative from host path in asset url","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n@angular/core, but not 100% which package takes care of this parsing.\r\n\r\n### Description\r\n\r\nComponent's scss allow only this format of background:url\r\n\r\n```\r\n.logo {\r\n    background: url(../../../../assets/img/logo.png) 50% 50% no-repeat;\r\n}\r\n```\r\n\r\nIt works fine when using is as an application, but if I build it as a library, it searches different location when used in other project (since it is relative from node_modules) and of course it's not found\r\n\r\nIf I use (and this would work inside standalone app and when used as an library since it uses relative from host path)\r\n\r\n`background: url(assets/img/logo.png)`\r\n\r\n I can't build it as I get an error:\r\n\r\n` Can't resolve './assets/img/logo.png'`\r\n\r\n### Proposed solution\r\n\r\nAllow imports like\r\n\r\n`background: url(assets/img/logo.png)`\r\n\r\nand don't search it relative from current position (./assets/img/logo.png), but just leave it as it is. If someone really wants relative from current position it should/can do ./assets/img/logo.\r\n\r\nThis way asset would be found when used as a standalone app and in case it's build like a library. Also, independently of host (e.g. 192.168.55.5/my/host would just append it to it)\r\n\r\n### Alternatives considered\r\n\r\nAllow another type of url format which would explicitly say it's relative from host (or to not alter the url path)","Url":"https://github.com/angular/angular-cli/issues/26914","RelatedDescription":"Closed issue \"Allow relative from host path in asset url\" (#26914)"},{"Id":"2095313082","IsPullRequest":true,"CreatedAt":"2024-01-23T06:12:23","Actor":"angular-robot","Number":"26925","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `098a7f1` -> `634ada3` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `eac1cfe` -> `6502d0c` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `247ec23` -> `e97da49` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `024e9e4` -> `82f2515` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `747c00a` -> `e30d9bc` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `6eec318` -> `47d0660` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `7c3876d` -> `3049264` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `3ffe282` -> `b0387b9` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `51ae899` -> `67f384b` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a8342a5` -> `3055c12` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `72c0781` -> `9291efb` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f28ecdb` -> `d56555b` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `75a817e` -> `ec9d8bf` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `b4bb30b` -> `0b8de42` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `888c97f` -> `300265a` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `87ee654` -> `36f3f00` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `d0b0a79` -> `677e0c6` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `0fb0f0f` -> `29a6c0a` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `4e28a1a` -> `a2f9083` |\n| angular/dev-infra | action | digest | `8ae2c44` -> `f0fa701` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26925","RelatedDescription":"Open PR \"build: update angular\" (#26925)"},{"Id":"2091994359","IsPullRequest":true,"CreatedAt":"2024-01-23T02:01:27","Actor":"harshlakhara","Number":"26909","RawContent":null,"Title":"fix(@angular/cli): update regex to validate the project-name","State":"closed","Body":"fix(@angular/cli): update regex to validate the project-name\r\n\r\nEnsure that the regex used for validating the project-name is updated to address any issues and enhance accuracy.\r\n\r\nthe existing regex for project-name validation was not validating the name with the dot(.) in application name.\r\n\r\nFixes #25704 \r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25704  \r\n\r\n## What is the new behavior?\r\n\r\nProject name can include the dot(.) in the name while creating the project but while validating the dot(.) was missing. I updated the pattern to accept dot(.) in projectName.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26909","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): update regex to validate the project-name\" (#26909)"},{"Id":"2093346672","IsPullRequest":true,"CreatedAt":"2024-01-22T15:05:07","Actor":"alan-agius4","Number":"26913","RawContent":null,"Title":"fix(@angular-devkit/build-angular): pre-transform error when using vite with SSR","State":"closed","Body":"\r\nThis commit fixes a regression which causes a pre-transform error when using vite with ssr. The `request.url` is now passed to the index transformer instead of `request.originalUrl`. This is because the `request.url` will have a value of the `index.html`.\r\n\r\nCloses #26897","Url":"https://github.com/angular/angular-cli/pull/26913","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): pre-transform error when using vite with SSR\" (#26913)"},{"Id":"2093875807","IsPullRequest":true,"CreatedAt":"2024-01-22T14:56:44","Actor":"alan-agius4","Number":"26921","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use `for loop` instead of `filter` and `forEach`","State":"closed","Body":"\r\n\r\nReduce iterations by using a `for loop`.\r\n","Url":"https://github.com/angular/angular-cli/pull/26921","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use `for loop` instead of `filter` and `forEach`\" (#26921)"},{"Id":"2093782915","IsPullRequest":false,"CreatedAt":"2024-01-22T14:56:34","Actor":"p3t3r5","Number":"26918","RawContent":null,"Title":"Rebuilding on 'ng serve'. Removed css-resource:src (build-angular:application) ","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe have a large project that takes longer than a minute to start. We upgraded from version 16 to version 17.1.0 and switched to 'build-angular:application.' Every time we start, we get the message: 'Changes detected. Rebuilding...' and the entire project is  rebuilded, taking a long time again. In verbose mode, I see that all CSS images are in the \"removed\" array. They are displayed, but rebuilding on serve is frustrating.\r\n\r\n### Minimal Reproduction\r\n\r\n- generate new project (ng new, SCSS)\r\n- apend new class to styles.scss\r\n`.test-resource {\r\n\tdisplay: inline-block;\r\n\tmin-width: 3em;\r\n\tmin-height: 3em;\r\n    background-image: url(./assets/icon.png);\r\n    background-size: contain;\r\n\tbackground-position: 50%;\r\n\tbackground-repeat: no-repeat;\r\n}`\r\n- add some icon.png to src/assets\r\n- add new element to app.component.html\r\n`<span class=\"test-resource\"></span>`\r\n- start app: ng serve --verbose\r\n`Changes detected. Rebuilding...\r\n{\r\n  \"added\": [],\r\n  \"modified\": [],\r\n  \"removed\": [\r\n    \"...\\\\css-resource:src\\\\assets\\\\icon.png\"\r\n  ]\r\nNo output file changes.\r\n`\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.1.0\r\nNode: 18.17.1\r\nPackage Manager: npm 10.3.0\r\nOS: win32 x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------       \r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26918","RelatedDescription":"Closed issue \"Rebuilding on 'ng serve'. Removed css-resource:src (build-angular:application) \" (#26918)"},{"Id":"2093859844","IsPullRequest":true,"CreatedAt":"2024-01-22T14:56:33","Actor":"alan-agius4","Number":"26920","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not add internal CSS resources files in watch","State":"closed","Body":"\r\nThis change fixes an issue which caused internal virtual inputs to be added to the watch, this cases watchpack to emit a removed event as this file does not exist on disk.\r\n\r\nWe fix this issue, by prefixing `css-resouces` namespace with `angular:` which the input to be filtered out, see: https://github.com/angular/angular-cli/blob/4539961968e90c8c40ed683afe1cf491630a0048/packages/angular_devkit/build_angular/src/tools/esbuild/bundler-context.ts#L251\r\n\r\nCloses #26918\r\n","Url":"https://github.com/angular/angular-cli/pull/26920","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not add internal CSS resources files in watch\" (#26920)"},{"Id":"2093660601","IsPullRequest":true,"CreatedAt":"2024-01-22T14:56:19","Actor":"alan-agius4","Number":"26915","RawContent":null,"Title":"fix(@angular-devkit/build-angular): `ENOENT: no such file or directory` on Windows during component rebuild","State":"closed","Body":"\r\n\r\nPreviously, we `joined` the workspace root with the `outputFile.path`, in windows this caused a problem as during the 2nd rebuild it caused the workspace root to be prepended again which causes a `ENOENT` error. To avoid this problem, now we `clone` the output file.\r\n\r\nCloses #26900\r\n","Url":"https://github.com/angular/angular-cli/pull/26915","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): `ENOENT: no such file or directory` on Windows during component rebuild\" (#26915)"},{"Id":"2093331044","IsPullRequest":true,"CreatedAt":"2024-01-22T14:20:57","Actor":"angular-robot","Number":"26912","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26912","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#26912)"},{"Id":"2093694169","IsPullRequest":false,"CreatedAt":"2024-01-22T14:19:33","Actor":"ojpbay","Number":"26916","RawContent":null,"Title":"@angular-devkit/build-angular depends on vulnerable version of vite","State":"closed","Body":"### Command\r\n\r\nother\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nRunning npm audit on an Angular 16 project with version 16.2.11 of @angular-devkit/build-angular reports a security vulnerability with vite.\r\n\r\nvite  4.0.0 - 4.5.1\r\nSeverity: high\r\nVite dev server option `server.fs.deny` can be bypassed when hosted on case-insensitive filesystem - https://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@17.1.0, which is a breaking change\r\nnode_modules/@angular-devkit/build-angular/node_modules/vite\r\n  @angular-devkit/build-angular  16.0.0-next.0 - 17.0.10\r\n  Depends on vulnerable versions of vite\r\n  node_modules/@angular-devkit/build-angular\r\n  \r\nAn update is needed to use the patched version of vite - 4.5.2. The recent revision of @angular-devkit-build-angular (https://github.com/angular/angular-cli/commit/e0e011fc47f2383f9be0b432066c1438ddab7103) only moved this up to 4.5.1 which is still affected (see link below).\r\n\r\nhttps://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create an angular v16 project with version 16.2.11 of @angular-devkit/build-angular.\r\n2. Run npm audit.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.11\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1602.11\r\n@angular-devkit/build-angular      16.2.11\r\n@angular-devkit/core               16.2.11\r\n@angular-devkit/schematics         16.2.11\r\n@angular/cdk                       16.2.13\r\n@angular/cli                       16.2.11\r\n@angular/flex-layout               15.0.0-beta.42\r\n@angular/material                  16.2.13\r\n@angular/material-moment-adapter   16.2.13\r\n@schematics/angular                16.2.11\r\nrxjs                               7.8.1\r\ntypescript                         4.9.5\r\nzone.js                            0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26916","RelatedDescription":"Closed issue \"@angular-devkit/build-angular depends on vulnerable version of vite\" (#26916)"},{"Id":"2093811855","IsPullRequest":true,"CreatedAt":"2024-01-22T14:18:57","Actor":"alan-agius4","Number":"26919","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency vite to v4.5.2","State":"closed","Body":"This commit updates vite to address https://github.com/advisories/GHSA-c24v-8rfc-w8vw\r\n\r\nCloses #26916\r\n","Url":"https://github.com/angular/angular-cli/pull/26919","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency vite to v4.5.2\" (#26919)"},{"Id":"2091978449","IsPullRequest":true,"CreatedAt":"2024-01-22T12:07:02","Actor":"harshlakhara","Number":"26908","RawContent":null,"Title":"[FIX] Updated regex for the application name to not accept \".\"","State":"closed","Body":"fix(@angular-cli): Updated the regex to invalidate the application name with \".\" in it. As the validation for project name doesn't accept \".\" in the name and thorows the error: \"Data path \"/projects\" must NOT have additional properties(xyx.com)\"\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25704 \r\n\r\n## What is the new behavior?\r\n\r\nAfter the fix user creating new project will not be allowed to enter \".\" in the name of the application. i.e. xyz.com will get invalidated.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26908","RelatedDescription":"Closed or merged PR \"[FIX] Updated regex for the application name to not accept \".\"\" (#26908)"},{"Id":"2093766523","IsPullRequest":false,"CreatedAt":"2024-01-22T12:05:22","Actor":"jamesbrobb","Number":"26917","RawContent":null,"Title":"200 now returned for missing assets instead of 404","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nI've updated a project from 16.2.11 to 17.1.0\r\n\r\nWhen an attempt to load a missing asset is made the response is a 200 containing index.html instead of the expected 404.\r\n\r\nThis happens when using `ng serve` to run development locally, but i'm also seeing the same issue when deploying my production build to a staging server.\n\n### Minimal Reproduction\n\nhttps://github.com/jamesbrobb/v17-missing-asset-issue\n\n### Exception or Error\n\n```text\n200 returned instead of 404 when asset does not exist\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin x64\r\n\r\nAngular: 17.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0\r\n@angular-devkit/build-angular   17.1.0\r\n@angular-devkit/core            17.1.0\r\n@angular-devkit/schematics      17.1.0\r\n@angular/cdk                    17.0.5\r\n@angular/material               17.0.5\r\n@schematics/angular             17.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26917","RelatedDescription":"Open issue \"200 now returned for missing assets instead of 404\" (#26917)"},{"Id":"2092043274","IsPullRequest":false,"CreatedAt":"2024-01-22T12:01:12","Actor":"DawnSouther","Number":"26910","RawContent":null,"Title":"Use custom devserver","State":"closed","Body":"\r\n### Description [Feature Request only]\r\n\r\nI want to use a customized express as devserver, in which I can customize some special configurations, such as middleware, routing, etc.\r\n\r\nIn fact, I am now trying to make a front-end and back-end isomorphic project, which has been initially set up, using `angular` + `nestjs`.\r\n\r\n\r\n\r\n### Proposed solution [Feature Request only]\r\n\r\nI don't want to stop there and try to use express instead of ng's devserver.\r\n\r\nI'm not familiar with the code of devserver. I guess there is a method similar to Adapter or Factory to load express, but after looking at the source code of cli, it seems that it is coupled. I can't extract the code of the server creation part separately. , I also need to rewrite the entire HMR logic.\r\n\r\nBased on the current situation, I want to try to enable ng's devserver to load an external express example first, and then explore the rest. (Perhaps there is already a mature solution that I don’t know about?)\r\n\r\nwhat should I do?\r\n\r\n### Alternatives considered [Feature Request only]\r\n\r\nI don't want to start two servers during the development process, so I currently use the cruder method of `ng build --watch` + `webpack hmr to develop`.\r\n","Url":"https://github.com/angular/angular-cli/issues/26910","RelatedDescription":"Closed issue \"Use custom devserver\" (#26910)"},{"Id":"2091632146","IsPullRequest":true,"CreatedAt":"2024-01-20T03:35:53","Actor":"angular-robot","Number":"26907","RawContent":null,"Title":"build: update dependency vite to v5.0.12 [security]","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`5.0.11` -> `5.0.12`](https://renovatebot.com/diffs/npm/vite/5.0.11/5.0.12) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`5.0.11` -> `5.0.12`](https://renovatebot.com/diffs/npm/vite/5.0.11/5.0.12) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2024-23331](https://togithub.com/vitejs/vite/security/advisories/GHSA-c24v-8rfc-w8vw)\n\n### Summary\n[Vite dev server option](https://vitejs.dev/config/server-options.html#server-fs-deny) `server.fs.deny` can be bypassed on case-insensitive file systems using case-augmented versions of filenames. Notably this affects servers hosted on Windows.\n\nThis bypass is similar to https://nvd.nist.gov/vuln/detail/CVE-2023-34092 -- with surface area reduced to hosts having case-insensitive filesystems.\n\n### Patches\nFixed in vite@5.0.12, vite@4.5.2, vite@3.2.8, vite@2.9.17\n\n### Details\nSince `picomatch` defaults to case-sensitive glob matching, but the file server doesn't discriminate; a blacklist bypass is possible. \n\nSee `picomatch`  usage, where `nocase` is defaulted to `false`: https://github.com/vitejs/vite/blob/v5.1.0-beta.1/packages/vite/src/node/server/index.ts#L632\n\nBy requesting raw filesystem paths using augmented casing, the matcher derived from `config.server.fs.deny` fails to block access to sensitive files. \n\n### PoC\n**Setup**\n1. Created vanilla Vite project using `npm create vite@latest` on a Standard Azure hosted Windows 10 instance. \n    - `npm run dev -- --host 0.0.0.0`\n    - Publicly accessible for the time being here: http://20.12.242.81:5173/ \n2. Created dummy secret files, e.g. `custom.secret` and `production.pem`\n3. Populated `vite.config.js` with\n```javascript\nexport default { server: { fs: { deny: ['.env', '.env.*', '*.{crt,pem}', 'custom.secret'] } } }\n```\n\n**Reproduction**\n1. `curl -s http://20.12.242.81:5173/@&#8203;fs//`\n    - Descriptive error page reveals absolute filesystem path to project root\n2. `curl -s http://20.12.242.81:5173/@&#8203;fs/C:/Users/darbonzo/Desktop/vite-project/vite.config.js`\n    - Discoverable configuration file reveals locations of secrets\n3. `curl -s http://20.12.242.81:5173/@&#8203;fs/C:/Users/darbonzo/Desktop/vite-project/custom.sEcReT`\n    - Secrets are directly accessible using case-augmented version of filename\n\n**Proof**\n![Screenshot 2024-01-19 022736](https://user-images.githubusercontent.com/907968/298020728-3a8d3c06-fcfd-4009-9182-e842f66a6ea5.png)\n\n### Impact\n**Who**\n- Users with exposed dev servers on environments with case-insensitive filesystems\n\n**What**\n- Files protected by `server.fs.deny` are both discoverable, and accessible\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.12`](https://togithub.com/vitejs/vite/releases/tag/v5.0.12)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.11...v5.0.12)\n\nPlease refer to [CHANGELOG.md](https://togithub.com/vitejs/vite/blob/v5.0.12/packages/vite/CHANGELOG.md) for details.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ1cGRhdGVkSW5WZXIiOiIzNy4xNDAuMTAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/26907","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v5.0.12 [security]\" (#26907)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2097129954","IsPullRequest":true,"CreatedAt":"2024-01-23T23:03:21","Actor":"mmalerba","Number":"28472","RawContent":null,"Title":"fix(material-experimental/theming): Update color palettes","State":"open","Body":"Changes the way M3 color palettes a bit to make the color choices more in line with what the spec expects. In particular, select the secondary palette automatically based on the primary palette (secondary is intended to be a more muted version of primary). We still allow the user to select what tertiary color to pair with their primary, since the spec doesn't make the same sort of assumptions about the tertiary color.\r\n\r\nNote: because our demo targets styles at the .mat-primary, .mat-accent, .mat-error classes, it winds up overriding the default color combo that users would see out of the box for the mat-select (a primary form-field with a secondary selected option). This is one example where the M2 color=\"primary/accent/warn\" API doesn't quite align with how colors work in M3. We do not expect users to apply colors in this way, and we probably shouldn't do it in our demo either. For now I've added an extra checkbox to the select demo that lets us observe the form-field/select combo users would see out of the box without our overrides.","Url":"https://github.com/angular/components/pull/28472","RelatedDescription":"Open PR \"fix(material-experimental/theming): Update color palettes\" (#28472)"},{"Id":"2096837577","IsPullRequest":true,"CreatedAt":"2024-01-23T19:29:49","Actor":"wagnermaciel","Number":"28471","RawContent":null,"Title":"fix(material/slide-toggle): use css var for disabled label color","State":"open","Body":"* Create a css var to allow teams to override the label text color of a disabled switch","Url":"https://github.com/angular/components/pull/28471","RelatedDescription":"Open PR \"fix(material/slide-toggle): use css var for disabled label color\" (#28471)"},{"Id":"2095526585","IsPullRequest":true,"CreatedAt":"2024-01-23T18:20:54","Actor":"crisbeto","Number":"28463","RawContent":null,"Title":"fix(material-experimental/theming): align form field icons with M3","State":"closed","Body":"Emits a bunch of tokens related to the form field which allows us to align the appearance with M3.","Url":"https://github.com/angular/components/pull/28463","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): align form field icons with M3\" (#28463)"},{"Id":"2096262770","IsPullRequest":true,"CreatedAt":"2024-01-23T14:52:21","Actor":"amysorto","Number":"28470","RawContent":null,"Title":"fix(material/menu): Update token values and styles for M3","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28470","RelatedDescription":"Open PR \"fix(material/menu): Update token values and styles for M3\" (#28470)"},{"Id":"2096220559","IsPullRequest":false,"CreatedAt":"2024-01-23T14:32:24","Actor":"RobinBomkamp","Number":"28469","RawContent":null,"Title":"bug(virtual-scroll): scrollToIndex does not work for multiple viewports scrolling over the same element","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf you have multiple viewports beneath eachother the function 'scrollToIndex' does not work if you want to scroll to an element in one of the bottom lists. It scrolls to a wrong position.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-dch1m4?file=src%2Fapp%2Fexample-component.html,src%2Fapp%2Fexample-component.ts,src%2Fapp%2Fexample-component.css\r\nSteps to reproduce:\r\n1. Click the button 'Scroll to viewport 3 and index 7' \r\n2. It scrolls to the wrong position.\r\n\n\n### Expected Behavior\n\nIt should scroll to the correct position.\n\n### Actual Behavior\n\nIt should scroll to the wrong position.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Stackblitz\r\n","Url":"https://github.com/angular/components/issues/28469","RelatedDescription":"Open issue \"bug(virtual-scroll): scrollToIndex does not work for multiple viewports scrolling over the same element\" (#28469)"},{"Id":"2096187128","IsPullRequest":false,"CreatedAt":"2024-01-23T14:15:24","Actor":"ahmed-dardery","Number":"28468","RawContent":null,"Title":"feat(CdkTable): There should be a way to access CdkTable's _renderRows","State":"open","Body":"### Feature Description\n\nThe property _renderRow, which is a private property on CdkTable represent the currently rendered rows in the table. This is very convenient for accessing information about what's visible, which is some times more convenient than querying the dataSource. \r\n\r\nSuggestion is something like:\r\n`\r\nprivate _renderRows: RenderRow<T>[];\r\nget renderedRows() {\r\n  return _renderRows\r\n}\r\n`\r\nCould also return a readonly version. \n\n### Use Case\n\nInterested in having a \"expand all / collapse all\" button in the header of the table, which ideally should only loop over the rows that are currently visible to access their `.data.expanded` value. After which it can be changed to expand all or collapse all.","Url":"https://github.com/angular/components/issues/28468","RelatedDescription":"Open issue \"feat(CdkTable): There should be a way to access CdkTable's _renderRows\" (#28468)"},{"Id":"2096124166","IsPullRequest":false,"CreatedAt":"2024-01-23T13:42:50","Actor":"btxtiger","Number":"28467","RawContent":null,"Title":"bug(MatChips): matChipRemove too restrictive","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`matChipRemove` is a directive that can be used on a button in order to delete a chip from a chip grid.\r\n\r\nHowever the icon must follow the exact selector path `button > mat-icon > svg`. \r\n### _It is impossible to use a custom component as icon_\r\n```html\r\n<!-- Does not work -->\r\n<button matChipRemove>\r\n   <my-reusable-delete-icon />\r\n</button>\r\n\r\n<!-- Does not work -->\r\n<button matChipRemove>\r\n   <mat-icon>\r\n      <my-reusable-delete-svg />\r\n   </mat-icon>\r\n</button>\r\n\r\n<!-- Works -->\r\n<button matChipRemove>\r\n   <mat-icon>clear</mat-icon>\r\n</button>\r\n\r\n\r\n<!-- Works -->\r\n<button matChipRemove>\r\n     <mat-icon>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n           <path\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\r\n        </svg>\r\n     </mat-icon>\r\n</button>\r\n```\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nhttps://stackblitz.com/edit/a1vrgk?file=src%2Fexample%2Fchips-autocomplete-example.html\r\n\r\nSteps to reproduce:\r\n1. Open file: chips-autocomplete-example.html\r\n2. Working and not working options commented\r\n\r\n\r\n### Expected Behavior\r\n\r\nAny custom icon component should be rendered correctly\r\n\r\n### Actual Behavior\r\n\r\nAny custom component is invisible. Only the codepath `button > mat-icon > svg` gets rendered.\r\n\r\n### Environment\r\n\r\n- Angular: 17.1.0\r\n- CDK/Material: 17.1.0\r\n- Browser(s): Chrome 120\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28467","RelatedDescription":"Open issue \"bug(MatChips): matChipRemove too restrictive\" (#28467)"},{"Id":"2096110023","IsPullRequest":false,"CreatedAt":"2024-01-23T13:35:48","Actor":"MidnightOilIndustries","Number":"28466","RawContent":null,"Title":"bug(MatSlider): MatSlider Freezes View When using dragEnd","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nn/a\r\n\r\n### Description\r\n\r\nIf you use the dragEnd event on a matslider, it fires all events necessary. The problem is, the view does not properly update due to any events that happen. In my example I dragEnd, the data comes back from the server, and is not updated on the screen until I click or hover something. As soon as that happens the data shows properly. Happened in angular v15 and v17. changeDetectionRef.detectChanges() doesnt work to fix it either.\r\n\r\nI have other actions that call the exact same event (hitting the same endpoint) and when they return, the data shows properly. Perhaps it is an issue with the mat-table not playing nice with the drag end. I have seen many stack overflows alluding to this same issue. Im guessing this will just get closed because it 'doesnt exist' but there is definitely a bug in there experienced by many\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Use a slider with drag End that fires an action\r\n2. Populate a mat-table with DB data via selectors\r\n3. Screen wont update until something is hovered or clicked\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe data returned from the server\r\n\r\n### Actual Behavior\r\n\r\nAn empty table, until i hover or click\r\n\r\n### Environment\r\n\r\n- Angular: v15, v17\r\n- CDK/Material: 17.1.0 \r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28466","RelatedDescription":"Open issue \"bug(MatSlider): MatSlider Freezes View When using dragEnd\" (#28466)"},{"Id":"2093839146","IsPullRequest":true,"CreatedAt":"2024-01-23T13:03:23","Actor":"crisbeto","Number":"28460","RawContent":null,"Title":"fix(material-experimental/theming): implement M3 badge","State":"closed","Body":"Aligns the badge with the M3 spec. This required a few issues to be fixed:\r\n1. The badge was being sized with `width` and `height`. This is incorrect, because it prevents the badge from scaling with the text. I've resolved it while keeping the old behavior by introducing new tokens that target `min-width` and `min-height` while the old ones still target `width` and `height`.\r\n2. The badge was being positioned purely with `top`, `bottom`, `left` and `right`. This is problematic, because it anchors the badge to the specific point in the host, causing the content to grow inwards instead of outwards. I've fixed it by using the opposite dimensions to position the badge (e.g. `bottom: 100%` instead of `top: -20px`) and then using a negative margin to offset the badge from there. This approach also has the advantage of producing less CSS.\r\n3. The badge didn't have a padding which made the content look off if it's more than one character.","Url":"https://github.com/angular/components/pull/28460","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): implement M3 badge\" (#28460)"},{"Id":"2095759223","IsPullRequest":false,"CreatedAt":"2024-01-23T10:31:35","Actor":"eneajaho","Number":"28465","RawContent":null,"Title":"docs(m3): docs are not updated to showcase how to use M3 experimental theme","State":"open","Body":"### Documentation Feedback\n\nFollowing the readme file steps or trying to get dev-app styles in another app doesn't work. \r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-qbqvmb?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fglobal_styles.scss&title=Angular%20Starter\n\n### Affected documentation page\n\nhttps://github.com/angular/components/tree/main/src/material-experimental ","Url":"https://github.com/angular/components/issues/28465","RelatedDescription":"Open issue \"docs(m3): docs are not updated to showcase how to use M3 experimental theme\" (#28465)"},{"Id":"2095709148","IsPullRequest":false,"CreatedAt":"2024-01-23T10:04:53","Actor":"spike-rabbit","Number":"28464","RawContent":null,"Title":"feat(cdk/listbox): cdkOptionTypeaheadLabel should allow undefined","State":"open","Body":"### Feature Description\n\nThe input `cdkOptionTypeaheadLabel` of `CdkOption` should allow `undefined` as an input type\n\n### Use Case\n\nI am using the `cdkListbox` internaly in a library.  For this list, we allow users to provide an optional typeahead label.\r\nWhen building the option I would like to write it like this:\r\n```html\r\n<div [cdkOption]=\"value\" [cdkOptionTypeaheadLabel]=\"optionalLabel\">...</div>\r\n```\r\n\r\nHowever this is a compiler error. When adding an `$any()` cast  everything works fine.","Url":"https://github.com/angular/components/issues/28464","RelatedDescription":"Open issue \"feat(cdk/listbox): cdkOptionTypeaheadLabel should allow undefined\" (#28464)"},{"Id":"2094861130","IsPullRequest":true,"CreatedAt":"2024-01-23T08:31:29","Actor":"andrewseguin","Number":"28461","RawContent":null,"Title":"Revert \"perf(cdk/table): Use afterRender hooks (#28354)\"","State":"closed","Body":"This reverts commit 81cb5acc8b2545b5674362a6f4c0b1768136dd66.","Url":"https://github.com/angular/components/pull/28461","RelatedDescription":"Closed or merged PR \"Revert \"perf(cdk/table): Use afterRender hooks (#28354)\"\" (#28461)"},{"Id":"2094888776","IsPullRequest":false,"CreatedAt":"2024-01-22T22:32:43","Actor":"thatcort","Number":"28462","RawContent":null,"Title":"bug(Slider): Does Not Render Slider Thumb at Correct Position","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen setting a step value on the slider, the slider thumb does not respect the value it receives and only renders at step positions.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-bcgmbo?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Add a slider with a step attribute\r\n2. Set the value on the slider thumb to a non-step value\r\n\n\n### Expected Behavior\n\nThe thumb should render at the precise position of the value input. The step input should constrain user input to only be able to drag the thumb to step values, but not constrain rendering of programmatically set values.\n\n### Actual Behavior\n\nThe thumb renders at a step value, but not the actual input value.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): \r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28462","RelatedDescription":"Open issue \"bug(Slider): Does Not Render Slider Thumb at Correct Position\" (#28462)"},{"Id":"2092190806","IsPullRequest":true,"CreatedAt":"2024-01-22T19:42:24","Actor":"mmalerba","Number":"28457","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in badge, button-toggle, button, pseudo-checkbox, and chips","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28457","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in badge, button-toggle, button, pseudo-checkbox, and chips\" (#28457)"},{"Id":"2090570643","IsPullRequest":true,"CreatedAt":"2024-01-22T17:46:48","Actor":"crisbeto","Number":"28454","RawContent":null,"Title":"Align FAB with M3 spec","State":"closed","Body":"Includes a couple of changes that allow us to align the FAB with the M3 spec.\r\n\r\n### fix(material/button): generate separate tokens for mini fab\r\nCurrently the mini FAB uses the same tokens as the regular one. This is incorrect and causes inconsistencies in M3. These changes split the mini FAB out into its own set of tokens.\r\n\r\n### fix(material-experimental/theming): align fab with M3 spec\r\n* Fixes that we weren't emitting the height and shape tokens for the extended FAB which in turn prevented the M3 tokens from working.\r\n* Fixes that all FAB variants were using the wrong color for the state layer, causing it to blend in with the background.","Url":"https://github.com/angular/components/pull/28454","RelatedDescription":"Closed or merged PR \"Align FAB with M3 spec\" (#28454)"},{"Id":"2092481932","IsPullRequest":true,"CreatedAt":"2024-01-22T08:23:45","Actor":"crisbeto","Number":"28459","RawContent":null,"Title":"fix(multiple): import ANIMATION_MODULE_TYPE from core","State":"closed","Body":"Moves all imports of `ANIMATION_MODULE_TYPE` from `platform-browser/animations` to `core` to reduce our dependence on the animations module and to avoid potential issues when lazy-loading animations.","Url":"https://github.com/angular/components/pull/28459","RelatedDescription":"Closed or merged PR \"fix(multiple): import ANIMATION_MODULE_TYPE from core\" (#28459)"},{"Id":"2092381442","IsPullRequest":true,"CreatedAt":"2024-01-21T02:51:25","Actor":"imerljak","Number":"28458","RawContent":null,"Title":"feat(components/sort): add multi-sort support","State":"open","Body":"Adds multi-column sorting capability to MatSort, allowing to sort a table on multiple of its columns at once by toggling matSortMultiple.\r\n\r\nThis feature adds a new sortState variable inside MatSort that should be used as a source of truth when matSortMultiple is enabled.\r\nFixes #24102","Url":"https://github.com/angular/components/pull/28458","RelatedDescription":"Open PR \"feat(components/sort): add multi-sort support\" (#28458)"},{"Id":"2089912274","IsPullRequest":true,"CreatedAt":"2024-01-19T21:45:32","Actor":"crisbeto","Number":"28452","RawContent":null,"Title":"fix(material/badge): move structural styles out of theme","State":"closed","Body":"Historically we've had the structural styles for the badge in the theme, because Angular doesn't support adding styles to a directive. This can lead to duplicate CSS and can be problematic for M3.\r\n\r\nThese changes move the styles into a dummy component that is used to load the style only once per app.","Url":"https://github.com/angular/components/pull/28452","RelatedDescription":"Closed or merged PR \"fix(material/badge): move structural styles out of theme\" (#28452)"},{"Id":"2089352241","IsPullRequest":true,"CreatedAt":"2024-01-19T20:24:11","Actor":"mmalerba","Number":"28451","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in progress-spinner, progress-bar, list, form-field, and datepicker","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28451","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in progress-spinner, progress-bar, list, form-field, and datepicker\" (#28451)"},{"Id":"2091001784","IsPullRequest":false,"CreatedAt":"2024-01-19T17:41:36","Actor":"javiermarinros","Number":"28456","RawContent":null,"Title":"bug(cdk/overlay): attach() and detach are not working in zoneless apps","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe Overlay `attach()` and `detach()` methods are relying on the `ngZone.onStable` observable that is never invoked using the new `provideZonelessChangeDetection` app provider.\r\n\r\nThe related actual code:\r\n\r\n```\r\n  // Update the position once the zone is stable so that the overlay will be fully rendered\r\n    // before attempting to position it, as the position may depend on the size of the rendered\r\n    // content.\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n      // The overlay could've been detached before the zone has stabilized.\r\n      if (this.hasAttached()) {\r\n        this.updatePosition();\r\n      }\r\n    });\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nOverlays to attach and position themselves in zoneless aplications\r\n\r\n### Actual Behavior\r\n\r\nOverlay is created but not positioned and not visible\r\n\r\n### Environment\r\n\r\n- Angular: 17.1\r\n- CDK/Material: 17.1\r\n","Url":"https://github.com/angular/components/issues/28456","RelatedDescription":"Open issue \"bug(cdk/overlay): attach() and detach are not working in zoneless apps\" (#28456)"},{"Id":"2090904757","IsPullRequest":false,"CreatedAt":"2024-01-19T16:41:36","Actor":"marloncommona","Number":"28455","RawContent":null,"Title":"feat(new component): Story","State":"open","Body":"### Feature Description\n\nSince the team's goal is to \"Build high-quality UI components that developers can drop into existing applications\", I would like to propose a \"story\" component similar to WhatsApp and Instragram storys. \r\nI would also love to see a component roadmap.\n\n### Use Case\n\nA library like Material Angular greatly supports the Angular framework as it makes the framework easy to use and to start with. Material Angular should ensure that it keeps up with UX/UI trends.","Url":"https://github.com/angular/components/issues/28455","RelatedDescription":"Open issue \"feat(new component): Story\" (#28455)"},{"Id":"2090092289","IsPullRequest":false,"CreatedAt":"2024-01-19T09:48:21","Actor":"kmichalski2","Number":"28453","RawContent":null,"Title":"bug(mdc-migration): Unable to import directive DefaultValueAccessor after material:mdc-migration","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter I run `ng generate @angular/material:mdc-migration` in my project I receive following error:\r\nFormsModule is imported.\r\n\r\n```\r\nerror NG3004: Unable to import directive DefaultValueAccessor.\r\n  The symbol is not exported from/node_modules/@angular/forms/index.d.ts (module '@angular/forms').\r\n\r\n88 export class TableComponent<T extends {}> extends UnsubscribeComponent implements AfterViewInit, OnInit {\r\n                ~~~~~~~~~~~~~~\r\n\r\n  projects/shared-components/node_modules/@angular/forms/index.d.ts:1324:1\r\n    1324 export declare class DefaultValueAccessor extends BaseControlValueAccessor implements ControlValueAccessor {\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    1325     private _compositionMode;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     ... \r\n    1335     static ɵdir: i0.ɵɵDirectiveDeclaration<DefaultValueAccessor, \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", never, {}, {}, never, never, false, never>;\r\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    1336 }\r\n         ~\r\n    The directive is declared here.\r\n```\r\n\n\n### Reproduction\n\nI am not able to reproduce it using StackBlitz.\r\n\n\n### Expected Behavior\n\nDefaultValueAccessor is imported properly with no errors.\n\n### Actual Behavior\n\nUnable to import directive DefaultValueAccessor error.\n\n### Environment\n\n- Angular: 16.2.13\r\n- CDK/Material: 16.2.13\r\n- Browser(s): terminal error / Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28453","RelatedDescription":"Closed issue \"bug(mdc-migration): Unable to import directive DefaultValueAccessor after material:mdc-migration\" (#28453)"},{"Id":"2087227543","IsPullRequest":true,"CreatedAt":"2024-01-18T23:15:24","Actor":"mmalerba","Number":"28445","RawContent":null,"Title":"fix(material-experimental/theming): Add support for color variants in slide-toggle, select, and radio","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28445","RelatedDescription":"Closed or merged PR \"fix(material-experimental/theming): Add support for color variants in slide-toggle, select, and radio\" (#28445)"},{"Id":"2087018205","IsPullRequest":true,"CreatedAt":"2024-01-18T21:01:44","Actor":"andrewseguin","Number":"28444","RawContent":null,"Title":"docs: update reference to internal issue","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28444","RelatedDescription":"Closed or merged PR \"docs: update reference to internal issue\" (#28444)"},{"Id":"2087338156","IsPullRequest":false,"CreatedAt":"2024-01-18T17:20:13","Actor":"wilson3q","Number":"28447","RawContent":null,"Title":"bug(dialog): Material dialog enter/leave animation breaks in 17.1.0","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.6\n\n### Description\n\nThe material dialog enter/leave transition animation does not work in new release. Used to work fine on 17.0.X.\r\n\r\n\r\n![image](https://github.com/angular/components/assets/67785341/46c3c4e7-c4fa-4a0f-93c1-4cf656c5f109)\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Go to angular material demo site https://material.angular.io/components/dialog/examples\r\n2. click \"Open dialog slowly\" button\r\n\n\n### Expected Behavior\n\nDialog should open slowly, and transition animation should show.\n\n### Actual Behavior\n\n Dialog does not open slowly as it was used to be. There is no transition animation at all.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28447","RelatedDescription":"Closed issue \"bug(dialog): Material dialog enter/leave animation breaks in 17.1.0\" (#28447)"},{"Id":"2087738537","IsPullRequest":true,"CreatedAt":"2024-01-18T17:20:12","Actor":"crisbeto","Number":"28449","RawContent":null,"Title":"fix(material/dialog): scale animation not working","State":"closed","Body":"[A change in MDC](https://github.com/material-components/material-components-web/commit/d153db62b3f665934a1d7445f14653b9ef0d4f66) moved the `transform` animation from the container to the surface which broke our implementation.\r\n\r\nThese changes also take the chance to fix that the animation was targeting all properties, rather than just `transform` and `opacity`. I've also fixed up the demo a bit to make it less jumpy.\r\n\r\nFixes #28447.","Url":"https://github.com/angular/components/pull/28449","RelatedDescription":"Closed or merged PR \"fix(material/dialog): scale animation not working\" (#28449)"},{"Id":"2087857730","IsPullRequest":true,"CreatedAt":"2024-01-18T09:21:19","Actor":"kangjinyong","Number":"28450","RawContent":null,"Title":"Expose parameter to prevent menu from being pushed","State":"open","Body":"When using the menu, there is a requirement in my work to not have the menu panel overlap on the item. This is happening when the screen size is small and the menu panel is big.\r\n\r\nAdding of the input parameter into the PositionStrategy withPush() function allows the menu panel to stay in place and not be repositioned.","Url":"https://github.com/angular/components/pull/28450","RelatedDescription":"Open PR \"Expose parameter to prevent menu from being pushed\" (#28450)"},{"Id":"2087483382","IsPullRequest":false,"CreatedAt":"2024-01-18T04:40:35","Actor":"mohammedsahl","Number":"28448","RawContent":null,"Title":"bug(form-field): matTextSuffix/matTextPrefix not vertically aligned with label","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe label of a mat-form-field is not vertically aligned with the matTextSuffix or matTextPrefix.\r\n\r\n![Screenshot 2024-01-18 at 8 42 10 AM](https://github.com/angular/components/assets/32067562/47159140-76bf-4b6c-ab2f-2e76f2fced4a)\r\n\r\nNotice how the suffix and prefix are a couple or so pixels above the label\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/t9161j?file=src%2Fexample%2Fform-field-prefix-suffix-example.html\r\n\r\n\r\n### Expected Behavior\r\n\r\nLabel to be vertically aligned with both matTextSuffix and matTextPrefix\r\n\r\n### Actual Behavior\r\n\r\nLabel is not vertically aligned with both matTextSuffix and matTextPrefix\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: ^16.2.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28448","RelatedDescription":"Open issue \"bug(form-field): matTextSuffix/matTextPrefix not vertically aligned with label\" (#28448)"},{"Id":"2087333819","IsPullRequest":false,"CreatedAt":"2024-01-18T02:06:44","Actor":"JiaLiPassion","Number":"28446","RawContent":null,"Title":"bug(ResizeObserver): Mat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/mi1wyz?file=src%2Fexample%2Fsidenav-drawer-overview-example.html,src%2Fexample%2Fsidenav-drawer-overview-example.css,src%2Fexample%2Fsidenav-drawer-overview-example.ts,src%2Findex.html\r\n\r\nSteps to reproduce:\r\n1. click `Tab2`\r\n2. Add breakpoints in `vendor.js:22456 loopLimitExceededErrorHandler`\r\n3. click `toggle sidenav` button multiple times.\r\nWill receive the error \r\n```\r\nResizeObserver loop completed with undelivered notifications\r\n```\r\n\n\n### Expected Behavior\n\nNo resizeobserver error\n\n### Actual Behavior\n\nWill receive the error \r\n```\r\nResizeObserver loop completed with undelivered notifications\r\n```\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.5\r\n@angular/localize                  17.0.8\r\n@angular/material                  17.0.5\r\n@angular/material-moment-adapter   17.0.5\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0\r\n","Url":"https://github.com/angular/components/issues/28446","RelatedDescription":"Open issue \"bug(ResizeObserver): Mat-Tab vs Mat-label cause ResizeObserver loop completed with undelivered notifications\" (#28446)"},{"Id":"2086889636","IsPullRequest":false,"CreatedAt":"2024-01-17T20:03:32","Actor":"json-derulo","Number":"28443","RawContent":null,"Title":"bug(multiple): services provided in root are also provided in NgModules","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI am maintaining an Angular library built on top of Angular Material. Among others, this library includes custom components which are to be opened inside a dialog. Here is what the module of such a component looks like:\r\n\r\n```typescript\r\n@NgModule({\r\n  declarations: [MyComponent],\r\n  imports: [MatDialogModule],\r\n  export: [MyComponent],\r\n})\r\nexport class MyModule {}\r\n```\r\n\r\nFor applications which use that component in an NgModule, this works fine. However one of the applications is in the progress of migrating to standalone. After making the component standalone and adding `MyModule` to the `imports`, the unit tests involving the `MatDialog` service opening `MyComponent` failed. After investigation, I found out that the instance injected by the component constructor and the instance injected by `TestBed.inject()` are now two separate ones.\r\n\r\nI have confirmed with the Angular core team that this is by design, see https://github.com/angular/angular/issues/53929.\r\n\r\nThe root cause is that `MatDialogModule` has `MatDialog` in its `providers`: https://github.com/angular/components/blob/b8cf1308571b29622422cd56f7f76b7bbc5ba5b1/src/material/dialog/module.ts#L34\r\n\r\nIMHO it should be removed from the providers, as the service is `providedIn: 'root'`.\r\n\r\nThe `MatSnackBar` has the same issue, there might be more affected services in this repo.\r\n\r\n### Reproduction\r\n\r\nRepo: https://github.com/json-derulo/ng17-dialog-issue\r\nSteps to reproduce:\r\n1. Run `ng test`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThere is only one instance of `MatDialog` and the test case in the repro pass\r\n\r\n### Actual Behavior\r\n\r\nThere are multiple instances of `MatDialog` and the test case in the repro fails\r\n\r\n### Environment\r\n\r\nAngular CLI: 17.0.10\r\nNode: 18.18.2\r\nPackage Manager: npm 9.8.1\r\nOS: darwin x64\r\n\r\nAngular: 17.0.9\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.10\r\n@angular-devkit/build-angular   17.0.10\r\n@angular-devkit/core            17.0.10\r\n@angular-devkit/schematics      17.0.10\r\n@angular/cdk                    17.1.0\r\n@angular/cli                    17.0.10\r\n@angular/material               17.1.0\r\n@schematics/angular             17.0.10\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.3","Url":"https://github.com/angular/components/issues/28443","RelatedDescription":"Open issue \"bug(multiple): services provided in root are also provided in NgModules\" (#28443)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-24T03:30:02.515903Z","RunDurationInMilliseconds":1547}