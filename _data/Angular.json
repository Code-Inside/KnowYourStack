{"Data":{"Angular-Issues":{"Issues":[{"Id":"1428773974","IsPullRequest":true,"CreatedAt":"2022-10-30T12:47:51","Actor":"pixeldublu","Number":"47921","RawContent":null,"Title":"fix(router): fix redirectTo on named outlets","State":"open","Body":"fix(router): fix redirectTo on named outlets\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nIssue Number: #33783\r\n\r\n\r\n## What is the new behavior?\r\nYou can now redirect your named outlets. Useful when creating sub navigations like sub page tabs and such.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/47921","RelatedDescription":"Open PR \"fix(router): fix redirectTo on named outlets\" (#47921)"},{"Id":"1428766279","IsPullRequest":true,"CreatedAt":"2022-10-30T12:43:19","Actor":"pixeldublu","Number":"47920","RawContent":null,"Title":"fix(router): fix redirectTo on named outlets","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #33783 \r\n\r\n\r\n## What is the new behavior?\r\nYou can now redirect your named outlets. Useful when creating sub navigations like sub page tabs and such.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/47920","RelatedDescription":"Closed or merged PR \"fix(router): fix redirectTo on named outlets\" (#47920)"},{"Id":"1428755703","IsPullRequest":false,"CreatedAt":"2022-10-30T12:02:05","Actor":"va-stefanek","Number":"47919","RawContent":null,"Title":"Create method to reflect type of Directive and Pipe.","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nCurrently we have a method to reflect component type [reflectComponentType](https://angular.io/api/core/reflectComponentType). Unfortunately there is no way to reflect type of Directive and Pipe which might be very useful in case when we want to verify whether they are standalone. Now we are force using method from private api 'ÉµisStandalone'.\r\n\r\n### Proposed solution\r\n\r\nCreate similar method for Pipes and Directives.\r\n\r\n### Alternatives considered\r\n\r\nCreate one common method which will verify whether something is standalone or not, eg exposing [isStandalone](https://github.com/angular/angular/blob/87074753410dfe7018afacf7bf346547278f3410/packages/core/src/render3/definition.ts#L742)","Url":"https://github.com/angular/angular/issues/47919","RelatedDescription":"Open issue \"Create method to reflect type of Directive and Pipe.\" (#47919)"},{"Id":"1428577739","IsPullRequest":true,"CreatedAt":"2022-10-30T03:27:49","Actor":"SNORLAX-Pratham","Number":"47917","RawContent":null,"Title":"Updated angular readme","State":"open","Body":"I changed the Readme file and organized it a bit.\r\n","Url":"https://github.com/angular/angular/pull/47917","RelatedDescription":"Open PR \"Updated angular readme\" (#47917)"},{"Id":"1428275008","IsPullRequest":false,"CreatedAt":"2022-10-29T13:55:24","Actor":"moniuch","Number":"47916","RawContent":null,"Title":"Allow setting enabled/disabled state of AbstractControl using a boolean value","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nCurrently, in order to disable or enable an `AbstractControl` depending on another control's value or state, one has to use very verbose explicit code using both if/else branches of a condition:\r\n\r\n```ts\r\n.subscribe(value => {\r\n  if(valueMeetsCondition(value)){\r\n    this.ctrl.enable()\r\n  } else {\r\n    this.ctrl.disable()\r\n  }\r\n});\r\n```\r\nor its ternary equivalent.\r\n\r\nIt would simplify the code if we could say this instead:\r\n\r\n```ts\r\n.subscribe(value => this.ctrl.setEnabledState(valueMeetsCondition(value)));\r\n```\n\n### Proposed solution\n\nIn [AbstractControl API](https://angular.io/api/forms/AbstractControl), add a pair of methods that accept a boolean value:\r\n\r\n- `setDisabledState` \r\n\r\n```ts\r\nsetDisabledState(isDisabled: boolean, opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void\r\n```\r\n\r\n-  `setEnabledState`\r\n\r\n```ts\r\nsetEnabledState(isEnabled: boolean, opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void\r\n```\r\n\r\nI think it's important to have a pair of companions, just like we have `valid`/`invalid`, `enabled`/`disabled` property pairs on [AbstractControl](https://angular.io/api/forms/AbstractControl#abstractcontrol) for the sake of coding convenience.\r\n\r\nIt would allow developers for a smoother migration and cleaner code without the need of negating the conditions in their existing code.\n\n### Alternatives considered\n\nWorkarounds? Described above which I want to stop using.\r\nAlternative solutions? Can't think of any.\r\n","Url":"https://github.com/angular/angular/issues/47916","RelatedDescription":"Open issue \"Allow setting enabled/disabled state of AbstractControl using a boolean value\" (#47916)"},{"Id":"1427917215","IsPullRequest":false,"CreatedAt":"2022-10-28T22:31:22","Actor":"Chealer","Number":"47914","RawContent":null,"Title":"No efficient way to evaluate quality/status","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\n_Context: Angular is a large component and project which competes with uncountable alternatives. Before choosing it, moving to it or sticking with it, one needs to evaluate its quality / development status. Even if comparisons with alternatives may be ideal, having a rough idea of Angular's own quality would already help a lot._\r\n\r\nWhile Angular's ITS tracks lots of issues, unfortunately, the project is way too large to efficiently analyze even a small representative sample of its tens of thousands of issues. [The _Issues_ page](https://github.com/angular/angular/issues) shows a list with countless pages. As I write these lines, the one shown by default links to ticket #47905 , which at first sight may not even report an actual Angular issue. On the other hand, top actual issues like #45272 do not feature on that first page at all.\r\n\r\nBasically, the sort is random (newest tickets are listed first), and while other sorts are available, none really helps with evaluation.\r\n\r\n\n\n### Proposed solution\n\nBy far the best solution would start by migrating to a proper ITS engine. Most importantly, mature engines provide:\r\n\r\n- a way to set a (quite approximate) importance for each issue\r\n- tracking of ticket validity\r\n- tracking of issue resolution\r\n\r\nAtlassian Jira and JetBrains Youtrack are certainly the first options to evaluate.\r\n\r\nUnfortunately, both of these are proprietary. Bugzilla is another option which is well ahead of GitHub, but - being written in Perl - may never reach maturity.\r\n\r\nOnce tickets have been migrated, triage of ideally all tickets is of course needed to take advantage of these new possibilities and enable more meaningful sorting and filtering.\n\n### Alternatives considered\n\nAdding a page to the documentation treating Angular's status could also help. Such a page could link to the most important issues.\r\n\r\nOtherwise, GitHub provides a way to [\"pin\" a few issues](https://docs.github.com/en/enterprise-cloud@latest/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository), allowing a most basic distinction between the very worst issues and... all the rest.","Url":"https://github.com/angular/angular/issues/47914","RelatedDescription":"Open issue \"No efficient way to evaluate quality/status\" (#47914)"},{"Id":"1427767690","IsPullRequest":true,"CreatedAt":"2022-10-28T20:04:52","Actor":"trekladyone","Number":"47913","RawContent":null,"Title":"New doc: Animation API summary","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired.","Url":"https://github.com/angular/angular/pull/47913","RelatedDescription":"Open PR \"New doc: Animation API summary\" (#47913)"},{"Id":"1427755542","IsPullRequest":true,"CreatedAt":"2022-10-28T19:53:49","Actor":"trekladyone","Number":"47912","RawContent":null,"Title":"New doc: Define animations and attach to an HTML template","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired. Linting suggested corrections made.  Restructuring or rewording sentences to be shorter and clearer.","Url":"https://github.com/angular/angular/pull/47912","RelatedDescription":"Open PR \"New doc: Define animations and attach to an HTML template\" (#47912)"},{"Id":"1427604530","IsPullRequest":false,"CreatedAt":"2022-10-28T18:03:19","Actor":"Olster","Number":"47911","RawContent":null,"Title":"Typed ValidatorFn and AsyncValidatorFn for typed forms","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\n`ValidatorFn` and ` AsyncValidatorFn` accept a parameter of type `AbstractControl`.\r\nIf an app is generated with `--strict` flag or `\"strict\": true` is manually added to tsconfig compilerOptions, following code reports an error:\r\n\r\n```ts\r\n// TS2322: Type '(control: FormControl<string>) => ValidationErrors | null' is not assignable to type 'ValidatorFn'.\r\n// Â Â Types of parameters 'control' and 'control' are incompatible.\r\n// Â Â Â Â Type 'AbstractControl<any, any>' is missing the following properties from type 'FormControl<string>': defaultValue, registerOnChange, registerOnDisabledChange\r\nconst userNameValidator: ValidatorFn = (\r\n    control: FormControl<string>\r\n): ValidationErrors | null => null;\r\n\r\nconst ctrl: FormControl<string> = new FormControl<string>('', {\r\n    nonNullable: true,\r\n    validators: [userNameValidator],\r\n});\r\n```\r\n\r\nThis would be especially useful when adding a validator to the whole form:\r\n\r\n```ts\r\ninterface User {\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\ntype UserFormType = {\r\n    [K in keyof User]: FormControl<User[K]>;\r\n};\r\n\r\nconst formValidator: ValidatorFn = (\r\n    form: FormGroup<UserFormType>\r\n): ValidationErrors | null => null;\r\n\r\nconst userNameValidator: ValidatorFn = (\r\n    control: FormControl<string>\r\n): ValidationErrors | null => null;\r\n\r\nconst ageValidator: ValidatorFn = (form: FormControl<number>): ValidationErrors | null =>\r\n    null;\r\n\r\nconst form: FormGroup<UserFormType> = new FormGroup<UserFormType>(\r\n    {\r\n        name: new FormControl<string>('', {\r\n            nonNullable: true,\r\n            validators: [userNameValidator],\r\n        }),\r\n        age: new FormControl<number>(0, {\r\n            nonNullable: true,\r\n            validators: [ageValidator],\r\n        }),\r\n    },\r\n    {\r\n        validators: [formValidator],\r\n    }\r\n);\r\n```\n\n### Proposed solution\n\n`ValidatorFn` and `AsyncValidatorFn` should be typed to accept the type of the control they'll get, e.g.\r\n\r\n```ts\r\ninterface ValidatorFn<T extends AbstractControl = AbstractControl> {\r\n  (control: T): ValidationErrors | null;\r\n}\r\n\r\ninterface AsyncValidatorFn<T extends AbstractControl = AbstractControl> {\r\n  (control: T): Observable<ValidationErrors | null> | Promise<ValidationErrors | null>;\r\n}\r\n```\n\n### Alternatives considered\n\nCasting custom validator functions to `ValidatorFn`:\r\n```ts\r\nconst formValidator: ValidatorFn = ((\r\n    form: FormGroup<UserFormType>\r\n): ValidationErrors | null => null) as ValidatorFn;\r\n```\r\n\r\nAccepting `AbstractControl` and casting it internally:\r\n```ts\r\nconst formValidator2: ValidatorFn = (\r\n    _form: AbstractControl\r\n): ValidationErrors | null => {\r\n    const form: FormGroup<UserFormType> = _form as FormGroup<UserFormType>;\r\n    // ...\r\n    return null!\r\n};\r\n```","Url":"https://github.com/angular/angular/issues/47911","RelatedDescription":"Open issue \"Typed ValidatorFn and AsyncValidatorFn for typed forms\" (#47911)"},{"Id":"1427563673","IsPullRequest":true,"CreatedAt":"2022-10-28T17:33:28","Actor":"mgechev","Number":"47910","RawContent":null,"Title":"docs: update roadmap as of q4 2022","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/47910","RelatedDescription":"Open PR \"docs: update roadmap as of q4 2022\" (#47910)"},{"Id":"1427471226","IsPullRequest":true,"CreatedAt":"2022-10-28T16:05:48","Actor":"trekladyone","Number":"47909","RawContent":null,"Title":"New doc: Animation transition and timing","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired. Linting suggested corrections made.  Restructuring or rewording sentences to be shorter and clearer.\r\n","Url":"https://github.com/angular/angular/pull/47909","RelatedDescription":"Open PR \"New doc: Animation transition and timing\" (#47909)"},{"Id":"1427458876","IsPullRequest":true,"CreatedAt":"2022-10-28T15:54:29","Actor":"trekladyone","Number":"47908","RawContent":null,"Title":"New doc:  Animation state and style","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired. Linting suggested corrections made.  Restructuring or rewording sentences to be shorter and clearer.","Url":"https://github.com/angular/angular/pull/47908","RelatedDescription":"Open PR \"New doc:  Animation state and style\" (#47908)"},{"Id":"1427450481","IsPullRequest":true,"CreatedAt":"2022-10-28T15:46:54","Actor":"trekladyone","Number":"47907","RawContent":null,"Title":"New doc: Add an animation","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired. Linting suggested corrections made.  Restructuring or rewording sentences to be shorter and clearer.","Url":"https://github.com/angular/angular/pull/47907","RelatedDescription":"Open PR \"New doc: Add an animation\" (#47907)"},{"Id":"1427435506","IsPullRequest":true,"CreatedAt":"2022-10-28T15:36:05","Actor":"trekladyone","Number":"47906","RawContent":null,"Title":"New doc: Understanding Animations","State":"open","Body":"Document extracted from the original Introduction document, which is to be retired. Linting suggested corrections made.  Restructuring or rewording sentences to be shorter and clearer.\r\n","Url":"https://github.com/angular/angular/pull/47906","RelatedDescription":"Open PR \"New doc: Understanding Animations\" (#47906)"},{"Id":"1427293699","IsPullRequest":false,"CreatedAt":"2022-10-28T13:49:02","Actor":"jmwierzbicki","Number":"47905","RawContent":null,"Title":"Looking for a way to access/modify angular template parser","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler-cli, compiler, core, platform-browser-dynamic, platform-browser, platform-server\n\n### Description\n\nHello. Is there any way to alter behavior of angular compiler? \r\n\r\nIn my project I have a case where we have `translate` directive, and sometimes we provide whole html code in its element body:\r\n\r\n```\r\n<div translate>this is some <a href=\"#\">link</a></div>\r\n```\r\nthe issue is that such translation blocks may contain some invalid attributes or even directives - because of this we need to always add `ngNonBindable` in such cases. Recently we also found that sometimes our translation logic fails, as there might be some whitespaces trimmed by default. So we have to add another attribute: `ngPreserveWhitespaces` \r\n\r\nI was trying to add such attributes from `translate` directive level, but after studying angular compiler src, it is clear that it can not work, as these attributes are resolved during compilation time.\r\n\r\nAnother issue that would touch this subject, is that we would like to extract raw html template \"as is\" before it is compiled, and provide it in attribute like this:\r\n```\r\n<div translate pre-translation-data=\"this is some <a href=\"#\">link</a>\">this is some <a href=\"#\">link</a></div>\r\n```\r\nBeing able to do this would be huge help with translation of such texts because now we extract them from `nativeElement` which is not really fail-proof. \r\nIt would also open new way for our QA guys for locating certain elements in their E2E tests, without writing complicated CSS selectors.\r\n\r\nIf somebody could point me in right direction on how to achieve this, it would be huge help\r\n\n\n### Proposed solution\n\nAdd possibility to use ngNonBindable and ngPreserveWhitespaces from directive level\r\nAdd possibility to access raw html template of directive/component child. \n\n### Alternatives considered\n\nIf such feature is already possible, please add some examples on documentation","Url":"https://github.com/angular/angular/issues/47905","RelatedDescription":"Open issue \"Looking for a way to access/modify angular template parser\" (#47905)"},{"Id":"1427245015","IsPullRequest":true,"CreatedAt":"2022-10-28T13:11:50","Actor":"alan-agius4","Number":"47904","RawContent":null,"Title":"docs: update example to reflect changes in Angular CLI version 15.","State":"open","Body":"These changes include:\r\n- Remove the usage of `enableProdMode`\r\n- Remove `test.ts`, `polyfills.ts`, `karma.conf.js` and environment files which are no longer generated by default\r\n","Url":"https://github.com/angular/angular/pull/47904","RelatedDescription":"Open PR \"docs: update example to reflect changes in Angular CLI version 15.\" (#47904)"},{"Id":"1426236390","IsPullRequest":true,"CreatedAt":"2022-10-28T09:37:53","Actor":"trekladyone","Number":"47897","RawContent":null,"Title":"Animation transitions and triggers update","State":"closed","Body":"Linting corrections.  Restructuring or rewording sentences to be shorter and clearer.\r\n","Url":"https://github.com/angular/angular/pull/47897","RelatedDescription":"Closed or merged PR \"Animation transitions and triggers update\" (#47897)"},{"Id":"1425787239","IsPullRequest":true,"CreatedAt":"2022-10-28T09:36:30","Actor":"JiaLiPassion","Number":"47895","RawContent":null,"Title":"release: cut the zone.js-0.12.0 release","State":"closed","Body":"Cut the zone.js-0.12.0 release, to remove the zone-async-tagging bundle from the release, since the AsyncTaggingZoneSpec has been moved the packages/core bundle in this PR https://github.com/angular/angular/pull/47416.","Url":"https://github.com/angular/angular/pull/47895","RelatedDescription":"Closed or merged PR \"release: cut the zone.js-0.12.0 release\" (#47895)"},{"Id":"1425500285","IsPullRequest":true,"CreatedAt":"2022-10-28T09:29:17","Actor":"alan-agius4","Number":"47891","RawContent":null,"Title":"docs: improve grammer in CLI command template","State":"closed","Body":"Before\r\n```\r\nThis command has the following commands:\r\n```\r\n\r\nNow\r\n```\r\nThis command has the following sub-commands:\r\n```","Url":"https://github.com/angular/angular/pull/47891","RelatedDescription":"Closed or merged PR \"docs: improve grammer in CLI command template\" (#47891)"},{"Id":"1426967199","IsPullRequest":true,"CreatedAt":"2022-10-28T09:25:36","Actor":"crisbeto","Number":"47903","RawContent":null,"Title":"perf(platform-browser): resolve memory leak when using animations with shadow DOM","State":"open","Body":"`AnimationRendererFactory` maintains a map between a renderer delegate and the animations renderer it corresponds to, but the renderers are never removed from the map. This leads to memory leaks when used with the `ShadowDom` view encapsulation, because the specific renderer keeps a references to its shadow root which in turn references all the elements in the view.\r\n\r\nThese changes resolve the leak by clearing the reference when the animations renderer is destroyed.\r\n\r\nFixes #47892.","Url":"https://github.com/angular/angular/pull/47903","RelatedDescription":"Open PR \"perf(platform-browser): resolve memory leak when using animations with shadow DOM\" (#47903)"},{"Id":"1426955171","IsPullRequest":true,"CreatedAt":"2022-10-28T09:16:29","Actor":"alxhub","Number":"47902","RawContent":null,"Title":"docs(core): update standalone docs for `provideRouter`","State":"open","Body":"This commit updates the standalone components guide on AIO to showcase the new `provideRouter` API. Previously the guide demonstrated configuring the router via `importProvidersFrom(RouterModule.forRoot(...))`. A new section was added to ensure `importProvidersFrom` was still shown in an example.\r\n","Url":"https://github.com/angular/angular/pull/47902","RelatedDescription":"Open PR \"docs(core): update standalone docs for `provideRouter`\" (#47902)"},{"Id":"1426863301","IsPullRequest":true,"CreatedAt":"2022-10-28T08:07:21","Actor":"alxhub","Number":"47901","RawContent":null,"Title":"API Docs for the new `provideHttpClient`","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/47901","RelatedDescription":"Open PR \"API Docs for the new `provideHttpClient`\" (#47901)"},{"Id":"1426461585","IsPullRequest":false,"CreatedAt":"2022-10-28T07:13:34","Actor":"GlauberF","Number":"47898","RawContent":null,"Title":"Queue requests and release after an argument is true with interceptor.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncommon, core\n\n### Description\n\nI have a very specific request.\r\nWhen starting the application until some elements load, I need to hold requests from a certain endpoint and only release them after a variable is true.\r\nI believe that using interceptor is the way, but I don't know how to do that.\r\n\r\n**Example**:\r\nAll urls that start with https://api must wait/queue.\r\nAfter the release_api variable exists in the window, I release the requests to follow their normal flow.\r\n\r\nThe best place is in the interceptor and how could I do that.\n\n### Proposed solution\n\n.\n\n### Alternatives considered\n\n.","Url":"https://github.com/angular/angular/issues/47898","RelatedDescription":"Closed issue \"Queue requests and release after an argument is true with interceptor.\" (#47898)"},{"Id":"1426710673","IsPullRequest":false,"CreatedAt":"2022-10-28T05:41:03","Actor":"nlmarco","Number":"47900","RawContent":null,"Title":"[FR] Make components subclassable without template","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nAngular lately added support for subclassing a component. It is thus now possible for a downstream-app to override a component's base-implementation in a lib. According to the docs I read, all you have to do is declare the same `selector`. Unfortunately, though, the subclass requires `template` or `templateUrl` -- without it, I get this error:\r\n```\r\n error NG2001: component is missing a template\r\n```\r\nMy app-code doesn't have access to the lib's template-file (declared there via `templateUrl`) and IMHO I should not be forced to re-declare the template, if I do not want to replace it (but inherit it the way it is in the super-component).\r\n\r\nThe component-class contains the UI-logic. It should be easily possible for a downstream-lib/-app to customize this logic, i.e. override protected/public methods, without touching the UI (i.e. without re-declaring a template).\r\n\r\n### Proposed solution\r\n\r\nMake the `@Component(...)`-annotation's `template` and `templateUrl` optional for component-subclasses. A component-subclass should easily be able to override UI-logic without providing its own template.\r\n\r\n### Alternatives considered\r\n\r\nWe tried to extract the UI-logic from the component into a stateful service which is associated 1-to-1 with its component. This, however, doesn't work either -- hence, I opened this other feature-request: https://github.com/angular/angular/issues/47899","Url":"https://github.com/angular/angular/issues/47900","RelatedDescription":"Open issue \"[FR] Make components subclassable without template\" (#47900)"},{"Id":"1426693262","IsPullRequest":false,"CreatedAt":"2022-10-28T05:20:23","Actor":"nlmarco","Number":"47899","RawContent":null,"Title":"[FR] Introduce component-scope and custom scopes in DI","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nCurrently, all services that are declared on the module-level are singletons. It is not possible to my knowledge to have a different lifecycle, for example to have multiple stateful service-instances, each associated with a component.\r\n\r\nWhen declaring a service-provider on the component-level, this is possible with `@Host()`, but then it is impossible for downstream-projects to override the service-implementation-class in their modules. The provider declared in `@Component(...)` wins over any provider-declaration in any module.\r\n\r\nThe lifecycle should be independent from the type-declaration! It should be possible to somehow (e.g. using `@Host()`) declare a local instance of the service, but still use the type declared in the module's provider.\r\n\r\nBesides this concrete use-case, Angular should support custom scopes, just like Java's CDI does. With the current service-architecture in Angular (i.e. every service being either a singleton or not being overridable by downstream-projects), it is most often impossible to implement a stateful service.\r\n\r\nI also tried using a custom factory and access the `Injector`, but I saw in the debugger, that my factory is not consulted, if there is already a service-instance existing. I therefore cannot put the lookup-logic (of whether to reuse an existing instance or create a new instance for my current situation) into my own factory.\r\n\r\nIn Java's CDI, a current thread running can enter (and exit) custom scopes manually and access the proper injected service-instance having declared an active scope.\r\n\r\n### Proposed solution\r\n\r\n1. Make `@Host()` work with services declared on the module-level. If a component declares `@Host()` it should get its own *instance* of the service, but the class-declaration should be taken from the module and thus still be overridable by a downstream-module. The child-components should automatically (or if needed with an additional `SkipSelf()`) use the service-instance of their parent-container (recursively). This would solve our immediate problem of not being able to associate a stateful service-instance with a component in a 1-1-relation.\r\n2. Introduce custom scopes just like Java's CDI does.\r\n3. A provider could -- additionally to the `useFactory` -- be declared with a newly introduced `useRegistry`. In contrast to the factory, the registry is consulted directly and it is up to the registry whether it wants to return an existing instance or create a new one. The registry-implementation needs access to the current injection-situation, of course. I'm not sure, but this may be possible via getting the current `Injector` as one of the `deps`. Since my factory wasn't consulted, if the instance already existed, I didn't analyse this further.\r\n4. Just in case, this is not yet possible: The injection-point should be accessible to the registry, just like in CDI (see `javax.enterprise.inject.spi.InjectionPoint`).\r\n\r\n### Alternatives considered\r\n\r\nI didn't find any alternative, but maybe I overlooked something. Please let me know, if I did!\r\n\r\nAs alternative, we could (and currently do) use stateless services, because the service-instances are singletons. With this approach they can be overridden (replaced by another implementation) downstream (the app might need another implementation than provided by default by the lib).\r\n\r\nStateless services suck for what we want to achieve. It's like writing a procedural language (e.g. C) -- but we like OO for a reason :smirk:\r\n\r\nDeclaring the service in `@Component` is not possible, because we then cannot override the service-implementation downstream. This is essential to us!","Url":"https://github.com/angular/angular/issues/47899","RelatedDescription":"Open issue \"[FR] Introduce component-scope and custom scopes in DI\" (#47899)"},{"Id":"1426168632","IsPullRequest":true,"CreatedAt":"2022-10-27T19:30:27","Actor":"atscott","Number":"47896","RawContent":null,"Title":"deprecate `provideRoutes` and warn if it is used without `provideRouter`/`RouterModule.forRoot`","State":"open","Body":"Due to being only 1 letter away from `provideRouter`, it is quite\r\npossible that developers may accidentally use `provideRoutes` rather\r\nthan `provideRouter` in the `boostrapApplication` function. This change\r\nwill warn developers when `provideRoutes` is used without the `Router`.","Url":"https://github.com/angular/angular/pull/47896","RelatedDescription":"Open PR \"deprecate `provideRoutes` and warn if it is used without `provideRouter`/`RouterModule.forRoot`\" (#47896)"},{"Id":"1425764846","IsPullRequest":true,"CreatedAt":"2022-10-27T14:53:32","Actor":"JiaLiPassion","Number":"47894","RawContent":null,"Title":"release: cut the zone.js-0.11.9 release","State":"closed","Body":"Cut the `zone.js-0.11.9` release, to remove the `zone-async-tagging` bundle from the release, since the `AsyncTaggingZoneSpec` has been moved the `packages/core` bundle.","Url":"https://github.com/angular/angular/pull/47894","RelatedDescription":"Closed or merged PR \"release: cut the zone.js-0.11.9 release\" (#47894)"},{"Id":"1425610514","IsPullRequest":true,"CreatedAt":"2022-10-27T13:08:32","Actor":"devversion","Number":"47893","RawContent":null,"Title":"Misc changes to enable strictness in packages/bazel and to ease syncing into g3","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/47893","RelatedDescription":"Open PR \"Misc changes to enable strictness in packages/bazel and to ease syncing into g3\" (#47893)"},{"Id":"1425591985","IsPullRequest":false,"CreatedAt":"2022-10-27T12:55:08","Actor":"jonas383649","Number":"47892","RawContent":null,"Title":"Components not being garbage collected by browser causing major memory leaks","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nanimations\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\nThis issue describes a supposed bug in the Angular Browser Animation module, which can lead to a large memory leak problem (Angular version 14.2.8). In the issue described below, UI elements that are no longer used are not garbage collected when the Angular Browser Animation Module is imported in a multi-page Angular application in connection with Angular ShadowDom components. \r\n\r\n### Supposed bug of the Browser Animation module\r\nIn multi-page Angular applications which imports the Animation Module, the createRender method of the RenererFactory2 is called at every page change (call-stack: createComponent -> componentFactory.create -> rendererFactory.createRenderer) to create an animation renderer. This animation renderer contains the various information to be able to run animations.\r\n\r\nFor each component of a view to be created, the create Renderer method is called and it is checked whether a cutsom animation is set for the respective component or not. If this is the case, a custom renderer will be created (that will not get cached), otherwise a base renderer should be used. To do this, a delegate is created from the information of the respective component (see the next chapter for more information on how the delegate gets created) and it is checked whether a renderer has already been cached for such a component. If so, the renderer is returned from the cache, otherwise a new base renderer is created and saved.\r\n\r\n```typescript\r\n// internal Angular code from the RendererFactory2: \r\ncreateRenderer(hostElement, type) {\r\n        const EMPTY_NAMESPACE_ID = '';\r\n        // cache the delegates to find out which cached delegate can\r\n        // be used by which cached renderer\r\n        const delegate = this.delegate.createRenderer(hostElement, type);\r\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\r\n            let renderer = this._rendererCache.get(delegate);\r\n            if (!renderer) {\r\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\r\n                // only cache this result when the base renderer is used\r\n                this._rendererCache.set(delegate, renderer);\r\n            }\r\n            return renderer;\r\n        }\r\n        // else custom renderer...\r\n```\r\n\r\nAs just described, the renderers of the Browser Animation Module are cached so that they can be returned when a previous page is called up again. However, the analysis has shown that caching sometimes does not work correctly, and a new renderer is always created for some components.\r\n\r\nThe cache is a simple map that keeps a delegate as a key and the renderer as a value. The delegate is created based on the respective component. I noticed in the applications I work on professionally that the components that lead to the re-creation of a renderer are themselves relatively small, which is why one could ask why this leads to the large detached elements and the memory problem.\r\n\r\nThe problem is that even a small component like a breadcrumb component holds references to all other components of a view through the child and parent node properties. Thus, for example, a table with very large amounts of data will not get correctly garbage collected. This is the reason why the browser uses more and more memory by navigating through the multi-page application until the application crashes.\r\n\r\n### Why does caching sometimes not work correctly?\r\nThe problem is in the created delegate, which is used as a key inside the map. The delegate is created via a createRenderer method, which in turn iterates through what type of component (what viewEncapsulation) it is to return the correct renderer.\r\n\r\n```typescript\r\n// create the delegate\r\nconst delegate = this.delegate.createRenderer(hostElement, type);\r\n{code}\r\n{code:java}\r\n// the called createRenderer Method\r\ncreateRenderer(element: any, type: RendererType2|null): Renderer2 {\r\n  if (!element || !type) {\r\n    return this.defaultRenderer;\r\n  }\r\n  switch (type.encapsulation) {\r\n    case ViewEncapsulation.Emulated: {\r\n      let renderer = this.rendererByCompId.get(type.id);\r\n      if (!renderer) {\r\n        renderer = new EmulatedEncapsulationDomRenderer2(\r\n          this.eventManager, this.sharedStylesHost, type, this.appId);\r\n        this.rendererByCompId.set(type.id, renderer);\r\n      }\r\n      (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\r\n      return renderer;\r\n    }\r\n    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\r\n    // value that is not known (but previously was the value for ViewEncapsulation.Native)\r\n    case 1:\r\n    case ViewEncapsulation.ShadowDom:\r\n      // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\r\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\r\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\r\n        // enum value that is not known (but previously was the value for\r\n        // ViewEncapsulation.Native)\r\n        !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\r\n        hasLoggedNativeEncapsulationWarning = true;\r\n        console.warn(\r\n          'ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\r\n      }\r\n\r\n      return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\r\n    default: {\r\n      if (!this.rendererByCompId.has(type.id)) {\r\n        const styles = flattenStyles(type.id, type.styles, []);\r\n        this.sharedStylesHost.addStyles(styles);\r\n        this.rendererByCompId.set(type.id, this.defaultRenderer);\r\n      }\r\n      return this.defaultRenderer;\r\n    }\r\n```\r\n\r\n[](https://github.com/angular/angular/blob/main/packages/platform-browser/src/dom/dom_renderer.ts#L91)\r\n\r\nIn the case of components that are of the ViewEncapsulation ShadowDom type, we have the memory leak problem. In contrast to the other cases, the component itself is stored as a property in the renderer, which contains the references to the other components of a view.\r\n\r\nIn addition, a new object of the ShadowDomRenderer to be created is always created here, which also leads to the problem that the correct entry in the renderer cache is not found. So instead of using the already created ShadowDomRenderer, a new one is cached with every page change.\r\n\r\n### Demo to recreate\r\nI have created a small demo in which the problem can be well understood. I recommend using the Microsoft Edge browser for this, as it has a dev tool function that can be used to easily filter out the detached elements.\r\n\r\nThe demo includes three simple pages that can be accessed via buttons. The first page itself uses an Angular component that uses ViewEncapsulation ShadowDom. The second page accesses a component with ViewEncapsulation ShadowDom and the third page does not use a ShadowDom.\r\n\r\nIf you switch back and forth between the pages several times, you can see how more and more detached elements are built up by the first and second page, while the third page does not produce any detached elements.\r\n\r\n![image](https://user-images.githubusercontent.com/64976254/198289765-df743570-7363-497e-88a1-6f9f30df2da2.png)\r\n\r\nThis also makes it easy to understand that all UI elements remain on the second page, even though only one child element uses the ShadowDom. In addition, this problem also exists even though no animations of the module are actively used at all.\r\n\r\n### Monkey Patch\r\nIn my work, I'm programming on larger Angular applications that use ShadowDom components and suffer from this memory leak problem. I will be very happy when the supposedly incorrect behavior is adjusted in an Angular update.\r\n\r\nUntil then, I like to share a monkeyPatch with you that you can use to adjust the behavior of RendererFactory2 and its cache to prevent the memory leak problem in your applications:\r\n\r\n```typescript\r\nexport class AppComponent implements OnInit {\r\n\r\n  // ...\r\n  constructor(\r\n    // ...\r\n    rendererFactory2: RendererFactory2,\r\n  ) {\r\n    // ð±\r\n    (rendererFactory2 as any)['_rendererCache'] = new WeakMap();\r\n    // ...\r\n  }\r\n ```\r\n\r\nThe weak reference allows the browser's garbage collector to dispose of the object as soon as there is no other reference to the object. After a page change, only the renderer cache will reference UI elements that are no longer required (weak) and the detached elements will be removed as desired.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/jonas383649/angular-memory-leak-problem.git\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 14.2.7\r\nNode: 14.15.0\r\nPackage Manager: npm 6.14.8\r\nOS: win32 x64\r\n\r\nAngular: 14.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.7\r\n@angular-devkit/build-angular   14.2.7\r\n@angular-devkit/core            14.2.7\r\n@angular-devkit/schematics      14.2.7\r\n@angular/cli                    14.2.7\r\n@schematics/angular             14.2.7\r\nrxjs                            7.4.0\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/47892","RelatedDescription":"Open issue \"Components not being garbage collected by browser causing major memory leaks\" (#47892)"},{"Id":"1425469590","IsPullRequest":false,"CreatedAt":"2022-10-27T11:19:31","Actor":"rogerg93","Number":"47890","RawContent":null,"Title":"Improve docs with best practices","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nThe documentation could use some update when teaching reactivity. I've stumbled at multiple code examples where a manual subscribe is seen as how you should use RxJS. Things like manually subscribing to an Observable and then assigning a value to a property. I think this approach is ok for beginners who are new to the framework but at least it should be mentioned that it is not the best practice. The best practice that should be documented more is the use of an async pipe and also the use of Behavior Subjects in the example.\n\n### Proposed solution\n\nInstead of teaching manual subscribe, the docs should always show the best practice in this case the use of async pipe.\n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular/issues/47890","RelatedDescription":"Open issue \"Improve docs with best practices\" (#47890)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1429155414","IsPullRequest":false,"CreatedAt":"2022-10-31T02:33:21","Actor":"vmachacek","Number":"24161","RawContent":null,"Title":"Configurable websocket url","State":"open","Body":"### Command\n\nserve\n\n### Description\n\nI have a scenario when I'm running large system behind a proxy which simulates the production and there are several apps running in a background - that includes several Angular apps. I realized that hot reload would work for only one of them at the time - websocket url is rooted and cannot be changed. Would setting different URL for web-socket connection help to make them all work with hot reload?\n\n### Describe the solution you'd like\n\nI would like to have a way to customize the URL for the web-socket connection so that I can distinguish them and proxy them to correct angular dev server\n\n### Describe alternatives you've considered\n\nno alternatives considered","Url":"https://github.com/angular/angular-cli/issues/24161","RelatedDescription":"Open issue \"Configurable websocket url\" (#24161)"},{"Id":"1428467844","IsPullRequest":false,"CreatedAt":"2022-10-29T13:54:06","Actor":"mahanta-diptiranjan","Number":"24160","RawContent":null,"Title":"Unable to build library, if the project is on mounted drive.","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nFor Angular 14, when trying to build a library from a mounted drive/sync folder between host machine and development machine  the output results the below error:\r\n\r\n**EPERM: operation not permitted, link '/home/vagrant/my-workspace/.angular/cache/14.2.7/ng-packagr/tmp/6d7b364f' -> '/home/vagrant/my-workspace/.angular/cache/14.2.7/ng-packagr/content-v2/sha512/e7/c9/320ad67db558107eb1798beca167220928764ff93e265199e1a762bf8ef8fbbf40ee62b2cad889f7213a5f05ed3e5ab917c0e2e9cc476b4faddeca819eb9'**\r\n\r\nNote: Error is not faced, when the folder is not mounted. And the above scenario works fine until Angular 13. \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nBuilding entry point 'my-lib'\r\n------------------------------------------------------------------------------\r\nâ Compiling with Angular sources in Ivy partial compilation mode.\r\nâ Generating FESM2020\r\nEPERM: operation not permitted, link '/home/vagrant/my-workspace/.angular/cache/14.2.7/ng-packagr/tmp/6d7b364f' -> '/home/vagrant/my-workspace/.angular/cache/14.2.7/ng-packagr/content-v2/sha512/e7/c9/320ad67db558107eb1798beca167220928764ff93e265199e1a762bf8ef8fbbf40ee62b2cad889f7213a5f05ed3e5ab917c0e2e9cc476b4faddeca819eb9'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.1.3\r\nNode: 14.20.1\r\nPackage Manager: npm 6.14.17 \r\nOS: linux x64\r\n\r\nAngular: 14.2.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1401.3\r\n@angular-devkit/build-angular   14.2.7\r\n@angular-devkit/core            14.1.3\r\n@angular-devkit/schematics      14.1.3\r\n@angular/cli                    14.1.3\r\n@schematics/angular             14.1.3\r\nng-packagr                      14.2.2\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24160","RelatedDescription":"Open issue \"Unable to build library, if the project is on mounted drive.\" (#24160)"},{"Id":"1427614891","IsPullRequest":true,"CreatedAt":"2022-10-28T18:10:27","Actor":"clydin","Number":"24159","RawContent":null,"Title":"fix(@angular-devkit/build-angular): wait during file watching to improve multi-save rebuilds for esbuild builder","State":"open","Body":"When using the experimental esbuild-based browser application builder in watch mode, the file watcher will now wait 250ms from a reported file event before triggering a rebuild. The change allows the rebuild to better capture groups of file changes. This can happen when using an IDE while editing multiple files and would otherwise result in multiple rebuilds where a single rebuild would be ideal.","Url":"https://github.com/angular/angular-cli/pull/24159","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): wait during file watching to improve multi-save rebuilds for esbuild builder\" (#24159)"},{"Id":"1426688395","IsPullRequest":true,"CreatedAt":"2022-10-28T16:31:48","Actor":"angular-robot","Number":"24156","RawContent":null,"Title":"build: update dependency babel-loader to v9","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [babel-loader](https://togithub.com/babel/babel-loader) | dependencies | major | [`8.2.5` -> `9.0.0`](https://renovatebot.com/diffs/npm/babel-loader/8.2.5/9.0.0) |\n| [babel-loader](https://togithub.com/babel/babel-loader) | devDependencies | major | [`8.2.5` -> `9.0.0`](https://renovatebot.com/diffs/npm/babel-loader/8.2.5/9.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel-loader</summary>\n\n### [`v9.0.0`](https://togithub.com/babel/babel-loader/releases/tag/v9.0.0)\n\n[Compare Source](https://togithub.com/babel/babel-loader/compare/v8.2.5...v9.0.0)\n\n##### What's Changed\n\n-   update hash method mechanism so it doesn't fail on a fips enabled machine by [@&#8203;darmbrust](https://togithub.com/darmbrust) in [https://github.com/babel/babel-loader/pull/939](https://togithub.com/babel/babel-loader/pull/939)\n-   Require babel ^7.12.0 and Node.js >= 14.15.0 versions by [@&#8203;JLHwung](https://togithub.com/JLHwung) in [https://github.com/babel/babel-loader/pull/956](https://togithub.com/babel/babel-loader/pull/956)\n-   Remove dependency on loader-utils and drop webpack 4 support by [@&#8203;nied](https://togithub.com/nied) in [https://github.com/babel/babel-loader/pull/942](https://togithub.com/babel/babel-loader/pull/942)\n\n##### New Contributors\n\n-   [@&#8203;darmbrust](https://togithub.com/darmbrust) made their first contribution in [https://github.com/babel/babel-loader/pull/939](https://togithub.com/babel/babel-loader/pull/939)\n-   [@&#8203;nied](https://togithub.com/nied) made their first contribution in [https://github.com/babel/babel-loader/pull/942](https://togithub.com/babel/babel-loader/pull/942)\n\n**Full Changelog**: https://github.com/babel/babel-loader/compare/v8.2.5...v9.0.0\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24156","RelatedDescription":"Closed or merged PR \"build: update dependency babel-loader to v9\" (#24156)"},{"Id":"1426234280","IsPullRequest":true,"CreatedAt":"2022-10-28T16:31:27","Actor":"clydin","Number":"24154","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correct escaping of target warning text in esbuild builder","State":"closed","Body":"The warning text note for the TypeScript target was incorrectly escaped within a template literal which resulted in a badly formatted error message.","Url":"https://github.com/angular/angular-cli/pull/24154","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correct escaping of target warning text in esbuild builder\" (#24154)"},{"Id":"1427363824","IsPullRequest":false,"CreatedAt":"2022-10-28T16:26:30","Actor":"laurentperez","Number":"24157","RawContent":null,"Title":"Android 9 inset css property breaks older production compatibility with 14.2.4 cli","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12\n\n### Description\n\nHello\r\n\r\nOur Android 9 customers and us are affected by the inset reduce of top/bottom/left/right mentionned in https://github.com/ionic-team/ionic-framework/issues/25929#issuecomment-1247004115\r\n\r\nDoes angular cli support Android 9 or is it deprecated ? It looks only supported by chrome on android starting from Sept. 28Th : https://caniuse.com/?search=inset\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nsee https://github.com/ionic-team/ionic-framework/issues/25929#issuecomment-1247004115\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 14.2.4\r\nNode: 16.17.1\r\nPackage Manager: npm 8.15.0 \r\nOS: linux x64\r\n\r\nAngular: 14.2.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.4\r\n@angular-devkit/build-angular   14.2.4\r\n@angular-devkit/core            14.2.4\r\n@angular-devkit/schematics      14.2.4\r\n@angular/cdk                    14.2.3\r\n@schematics/angular             14.2.4\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24157","RelatedDescription":"Closed issue \"Android 9 inset css property breaks older production compatibility with 14.2.4 cli\" (#24157)"},{"Id":"1427440913","IsPullRequest":true,"CreatedAt":"2022-10-28T15:38:59","Actor":"clydin","Number":"24158","RawContent":null,"Title":"perf(@angular-devkit/build-angular): use Sass worker pool for Sass support in esbuild builder","State":"open","Body":"When using the experimental esbuild-based browser application builder, Sass stylesheets will now be processed using a worker pool that is currently also used by the default Webpack-based builder. This allows up to four stylesheets to be processed in parallel and keeps the main thread available for other build tasks. On projects with a large amount of Sass stylesheets, this change provided up to a 25% improvement in build times based on initial testing.","Url":"https://github.com/angular/angular-cli/pull/24158","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): use Sass worker pool for Sass support in esbuild builder\" (#24158)"},{"Id":"1426688303","IsPullRequest":true,"CreatedAt":"2022-10-28T05:14:34","Actor":"angular-robot","Number":"24155","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.14.0` -> `v1.15.0` |\n| [autoprefixer](https://togithub.com/postcss/autoprefixer) | dependencies | patch | [`10.4.12` -> `10.4.13`](https://renovatebot.com/diffs/npm/autoprefixer/10.4.12/10.4.13) |\n| [autoprefixer](https://togithub.com/postcss/autoprefixer) | devDependencies | patch | [`10.4.12` -> `10.4.13`](https://renovatebot.com/diffs/npm/autoprefixer/10.4.12/10.4.13) |\n| [jasmine](http://jasmine.github.io/) ([source](https://togithub.com/jasmine/jasmine-npm)) | devDependencies | minor | [`~4.4.0` -> `~4.5.0`](https://renovatebot.com/diffs/npm/jasmine/4.4.0/4.5.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | dependencies | minor | [`~4.4.0` -> `~4.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/4.4.0/4.5.0) |\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | devDependencies | minor | [`~4.4.0` -> `~4.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/4.4.0/4.5.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.15.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.15.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.14.0...v1.15.0)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.15.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"eae670935704ce5f9d050b2c23d426b4ae453458830eebdaac1f11a6a9da150b\",\n    strip_prefix = \"bazel-lib-1.15.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.15.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   chore(deps): update dependency bazel_gazelle to v0.28.0 by [@&#8203;renovate](https://togithub.com/renovate) in [https://github.com/aspect-build/bazel-lib/pull/267](https://togithub.com/aspect-build/bazel-lib/pull/267)\n-   feat: add maybe_http_archive by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/270](https://togithub.com/aspect-build/bazel-lib/pull/270)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.14.0...v1.15.0\n\n</details>\n\n<details>\n<summary>postcss/autoprefixer</summary>\n\n### [`v10.4.13`](https://togithub.com/postcss/autoprefixer/blob/HEAD/CHANGELOG.md#&#8203;10413)\n\n[Compare Source](https://togithub.com/postcss/autoprefixer/compare/10.4.12...10.4.13)\n\n-   Fixed missed prefixes on vendor prefixes in name of CSS Custom Property.\n\n</details>\n\n<details>\n<summary>jasmine/jasmine-npm</summary>\n\n### [`v4.5.0`](https://togithub.com/jasmine/jasmine-npm/releases/tag/v4.5.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine-npm/compare/v4.4.0...v4.5.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine-npm/blob/main/release_notes/4.5.0.md).\n\n</details>\n\n<details>\n<summary>jasmine/jasmine</summary>\n\n### [`v4.5.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.5.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.4.0...v4.5.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.5.0.md).\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24155","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24155)"},{"Id":"1425903764","IsPullRequest":false,"CreatedAt":"2022-10-27T19:46:15","Actor":"JohannesHoppe","Number":"24153","RawContent":null,"Title":"Removed test.ts introduces a breaking change for shallow component tests","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular 14\n\n### Description\n\nIn Angular v14 and before unknown elements caused a warning but no error for our unit tests. (`Error: NG0304: 'xxx' is not a known element...`)\r\n\r\nThanks to https://github.com/angular/angular/issues/36430 this behaviour can be adjusted now. (`errorOnUnknownElements: true`). But this new behaviour is still [disabled by default](https://github.com/angular/angular/blob/557cf7dc63fe768900f296252e1a96e6166b24df/packages/core/testing/src/test_bed_common.ts#L13).\r\n\r\nNew projects in Angular 15 will have no `test.ts` anymore. see https://github.com/angular/angular-cli/commit/56a1e8f9f52658488afb9d36007e96c96d08a03b\r\n\r\nNow the testing environment is created like this:\r\n\r\n```\r\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\r\n  errorOnUnknownElements: true,\r\n  errorOnUnknownProperties: true\r\n});\r\n```\r\n\r\nI wonder if we should introduce this change so quickly. This will only affect new projects, but it is still a new behaviour. If the new behaviour is intended, then it should definitely be explained in detail in the changelog.\r\n\n\n### Minimal Reproduction\n\nCreate a unit test with `TestBed` for a component with a child component, but do not declare the child.\n\n### Exception or Error\n\n```text\nError: NG0304: 'app-xxx' is not a known element (used in the 'AppComponent' component template):\r\n1. If 'app-xxx' is an Angular component, then verify that it is a part of an @NgModule where this component is declared.\r\n2. If 'app-xxx' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n```\n\n\n### Your Environment\n\n```text\n15.0.0-rc.1\n```\n\n\n### Anything else relevant?\n\n<img width=\"1556\" alt=\"Screenshot 2022-10-27 at 17 46 52\" src=\"https://user-images.githubusercontent.com/640639/198343284-fe7d6692-09d1-42c7-8cf0-8d6eea5db47f.png\">\r\n","Url":"https://github.com/angular/angular-cli/issues/24153","RelatedDescription":"Closed issue \"Removed test.ts introduces a breaking change for shallow component tests\" (#24153)"},{"Id":"1425043686","IsPullRequest":true,"CreatedAt":"2022-10-27T19:25:33","Actor":"angular-robot","Number":"24151","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.19.6` -> `7.20.0`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.19.6/7.20.0) |\n| [@babel/generator](https://babel.dev/docs/en/next/babel-generator) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.19.6` -> `7.20.0`](https://renovatebot.com/diffs/npm/@babel%2fgenerator/7.19.6/7.20.0) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | dependencies | minor | [`7.19.4` -> `7.20.0`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.19.4/7.20.0) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | devDependencies | minor | [`7.19.4` -> `7.20.0`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.19.4/7.20.0) |\n| [@bazel/concatjs](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | patch | [`5.7.0` -> `5.7.1`](https://renovatebot.com/diffs/npm/@bazel%2fconcatjs/5.7.0/5.7.1) |\n| [@bazel/jasmine](https://togithub.com/bazelbuild/rules_nodejs) | devDependencies | patch | [`5.7.0` -> `5.7.1`](https://renovatebot.com/diffs/npm/@bazel%2fjasmine/5.7.0/5.7.1) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.13.1` -> `v1.14.0` |\n| [build_bazel_rules_nodejs](https://togithub.com/bazelbuild/rules_nodejs) | http_archive | patch | `5.7.0` -> `5.7.1` |\n| [pacote](https://togithub.com/npm/pacote) | dependencies | patch | [`15.0.3` -> `15.0.4`](https://renovatebot.com/diffs/npm/pacote/15.0.3/15.0.4) |\n| [pacote](https://togithub.com/npm/pacote) | devDependencies | patch | [`15.0.3` -> `15.0.4`](https://renovatebot.com/diffs/npm/pacote/15.0.3/15.0.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.20.0`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7200-2022-10-27)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.19.6...v7.20.0)\n\n##### :rocket: New Feature\n\n-   `babel-compat-data`, `babel-helper-compilation-targets`, `babel-preset-env`\n    -   [#&#8203;14944](https://togithub.com/babel/babel/pull/14944) Add `deno` compilation target ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-syntax-typescript`\n    -   [#&#8203;14923](https://togithub.com/babel/babel/pull/14923) Expose `dts` option in `@babel/plugin-syntax-typescript` ([@&#8203;oceandrama](https://togithub.com/oceandrama))\n-   `babel-generator`, `babel-parser`, `babel-plugin-syntax-explicit-resource-management`, `babel-plugin-transform-block-scoping`, `babel-plugin-transform-destructuring`, `babel-standalone`, `babel-traverse`, `babel-types`\n    -   [#&#8203;14968](https://togithub.com/babel/babel/pull/14968) Parse `using` declaration (explicit resource management) ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-generator`, `babel-parser`, `babel-plugin-syntax-import-reflection`, `babel-standalone`, `babel-types`\n    -   [#&#8203;14926](https://togithub.com/babel/babel/pull/14926) Parse import reflection ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-generator`, `babel-helper-skip-transparent-expression-wrappers`, `babel-parser`, `babel-plugin-transform-typescript`, `babel-traverse`, `babel-types`\n    -   [#&#8203;14211](https://togithub.com/babel/babel/pull/14211) \\[ts] Add support for `expr satisfies Type` expressions ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :bug: Bug Fix\n\n-   `babel-generator`, `babel-parser`\n    -   [#&#8203;15032](https://togithub.com/babel/babel/pull/15032) Fix handling of comments with decorators before `export` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-generator`\n    -   [#&#8203;15008](https://togithub.com/babel/babel/pull/15008) Support more inner comments ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   `babel-helpers`, `babel-node`, `babel-plugin-proposal-async-generator-functions`, `babel-plugin-transform-regenerator`, `babel-preset-env`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15078](https://togithub.com/babel/babel/pull/15078) Update `regenerator-runtime` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n</details>\n\n<details>\n<summary>bazelbuild/rules_nodejs</summary>\n\n### [`v5.7.1`](https://togithub.com/bazelbuild/rules_nodejs/blob/HEAD/CHANGELOG.md#&#8203;571-httpsgithubcombazelbuildrulesnodejscompare570571-2022-10-26)\n\n[Compare Source](https://togithub.com/bazelbuild/rules_nodejs/compare/5.7.0...5.7.1)\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.14.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.14.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.13.1...v1.14.0)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.14.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"9305799c6d9e425e6b73270a0f9eb0aa1082050823a7eefad95edcece545e77b\",\n    strip_prefix = \"bazel-lib-1.14.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.14.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   chore: declare bzlmod repository by [@&#8203;alexeagle](https://togithub.com/alexeagle) in [https://github.com/aspect-build/bazel-lib/pull/262](https://togithub.com/aspect-build/bazel-lib/pull/262)\n-   feat: add is_bazel\\_6\\_or_greater utility function by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/264](https://togithub.com/aspect-build/bazel-lib/pull/264)\n-   chore: upgrade to Bazel 6.0.0rc1 but continue to also test Bazel 5.3.2 on CI by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/266](https://togithub.com/aspect-build/bazel-lib/pull/266)\n-   fix: use bzlmod @&#8203;@&#8203; in to_label if Bazel version is 6 or greater by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/265](https://togithub.com/aspect-build/bazel-lib/pull/265)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.13.1...v1.14.0\n\n</details>\n\n<details>\n<summary>npm/pacote</summary>\n\n### [`v15.0.4`](https://togithub.com/npm/pacote/blob/HEAD/CHANGELOG.md#&#8203;1504-httpsgithubcomnpmpacotecomparev1503v1504-2022-10-26)\n\n[Compare Source](https://togithub.com/npm/pacote/compare/v15.0.3...v15.0.4)\n\n##### Dependencies\n\n-   [`854fad1`](https://togithub.com/npm/pacote/commit/854fad16afe96737abe0f6a4583aef2b962929f1) [#&#8203;239](https://togithub.com/npm/pacote/pull/239) bump [@&#8203;npmcli/promise-spawn](https://togithub.com/npmcli/promise-spawn) from 4.0.0 to 5.0.0 ([#&#8203;239](https://togithub.com/npm/pacote/issues/239))\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24151","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24151)"},{"Id":"1425879238","IsPullRequest":true,"CreatedAt":"2022-10-27T19:25:15","Actor":"alan-agius4","Number":"24152","RawContent":null,"Title":"fix(@angular/cli): exclude `@angular/localize@<10.0.0` from ng add paâ¦","State":"closed","Body":"â¦ckage discovery\r\n\r\n`@angular/localize@<10.0.0` has no peer dependencies. This can cause `ng add` to pick these versions of the package if the newer versions.\r\n\r\nSee: https://app.circleci.com/pipelines/github/angular/angular-cli/27402/workflows/faa64532-541a-4bea-b599-3c53afe42019/jobs/364822\r\n```\r\nTest Process error Error: Process exit error - \"ng add @angular/localize --skip-confirmation\": 1...\r\n\r\nSTDOUT:\r\n\r\nSTDERR:\r\nnpm version 7.4.0 detected. When using npm 7 with the Angular CLI, npm version 7.5.6 or higher is recommended.\r\n- Determining package manager...\r\nâ¹ Using package manager: npm\r\n- Searching for compatible package version...\r\nâ Found compatible package version: @angular/localize@10.0.0-next.7.\r\n- Loading package information from registry...\r\nâ Package information loaded.\r\n- Installing packages...\r\nâ Packages successfully installed.\r\nNOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID\r\n```","Url":"https://github.com/angular/angular-cli/pull/24152","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): exclude `@angular/localize@<10.0.0` from ng add paâ¦\" (#24152)"},{"Id":"1424669311","IsPullRequest":true,"CreatedAt":"2022-10-26T21:12:39","Actor":"dgp1130","Number":"24150","RawContent":null,"Title":"docs: release notes for the v15.0.0-rc.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24150","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.0-rc.1 release\" (#24150)"},{"Id":"1424529687","IsPullRequest":true,"CreatedAt":"2022-10-26T20:40:59","Actor":"dgp1130","Number":"24149","RawContent":null,"Title":"Bump version to \"v15.0.0-rc.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24149","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.0-rc.1\" with changelog.\" (#24149)"},{"Id":"1424488170","IsPullRequest":true,"CreatedAt":"2022-10-26T18:34:16","Actor":"dgp1130","Number":"24148","RawContent":null,"Title":"docs: release notes for the v14.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24148","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.7 release\" (#24148)"},{"Id":"1424304579","IsPullRequest":true,"CreatedAt":"2022-10-26T18:01:02","Actor":"dgp1130","Number":"24147","RawContent":null,"Title":"Bump version to \"v14.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24147","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.7\" with changelog.\" (#24147)"},{"Id":"1423683329","IsPullRequest":true,"CreatedAt":"2022-10-26T15:58:03","Actor":"angular-robot","Number":"24142","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.29","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.28` -> `v2.1.29` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.29`](https://togithub.com/github/codeql-action/compare/v2.1.28...v2.1.29)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.28...v2.1.29)\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24142","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.29\" (#24142)"},{"Id":"1422855680","IsPullRequest":true,"CreatedAt":"2022-10-26T15:57:48","Actor":"clydin","Number":"24138","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ignore cache path when watching with esbuild builder","State":"closed","Body":"When using the experimental esbuild-based browser application builder in watch mode, the base cache path defined within the `angular.json` file will now be ignored when detecting file changes. While the builder currently does not persist cache to disk, it may in the future and other builders may currently be run in parallel.","Url":"https://github.com/angular/angular-cli/pull/24138","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ignore cache path when watching with esbuild builder\" (#24138)"},{"Id":"1423627616","IsPullRequest":true,"CreatedAt":"2022-10-26T15:57:33","Actor":"alan-agius4","Number":"24141","RawContent":null,"Title":"fix(@schematics/angular): remove TypeScript target from universal schematic","State":"closed","Body":"\r\n\r\nThis is no longer needed due to the recent changes in the CLI which always use ES2022.\r\n","Url":"https://github.com/angular/angular-cli/pull/24141","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove TypeScript target from universal schematic\" (#24141)"},{"Id":"1424094526","IsPullRequest":true,"CreatedAt":"2022-10-26T15:57:18","Actor":"clydin","Number":"24144","RawContent":null,"Title":"fix(@angular-devkit/build-angular): issue dev-server support warning when using esbuild builder","State":"closed","Body":"The dev-server builder currently does not support the experimental esbuild-based browser application builder and will use the Webpack-based builder instead. To better inform users of this behavior, a warning is now issued upon executing the dev-server.","Url":"https://github.com/angular/angular-cli/pull/24144","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): issue dev-server support warning when using esbuild builder\" (#24144)"},{"Id":"1424268223","IsPullRequest":true,"CreatedAt":"2022-10-26T15:36:00","Actor":"clydin","Number":"24146","RawContent":null,"Title":"perf(@angular-devkit/build-angular): initialize Angular shims for first rebuild in esbuild builder","State":"open","Body":"When in watch mode with the experimental esbuild-based browser builder, the Angular compiler's internal type checking shims are now initialized earlier in the initial build. This allows the TypeScript builder program to become aware of the existence of these files during the initial build instead of during the first rebuild. As a result, the TypeScript builder program will no longer assume all the shim files and associated project files have been affected and required to be emitted and type checked again. This change causes the first rebuild to be similar in performance to subsequent rebuilds.","Url":"https://github.com/angular/angular-cli/pull/24146","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): initialize Angular shims for first rebuild in esbuild builder\" (#24146)"},{"Id":"1424214851","IsPullRequest":false,"CreatedAt":"2022-10-26T15:02:44","Actor":"fischeversenker","Number":"24145","RawContent":null,"Title":"Extracted translations include unused translations","State":"open","Body":"### Command\r\n\r\nextract-i18n\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nThe extracted translations from the `extract-i18n` builder include trans-units from unused templates/components **unless** these components import and use the `$localize` function. This is the case for both app components as well as library components.\r\n\r\n### Minimal Reproduction\r\n\r\nReproduction repository: https://github.com/fischeversenker/ng-decorator-tree-shaking \\\r\n(don't be fooled by the name of the repository. I re-used an existing repro-repo.)\r\n\r\nIn essence:\r\n\r\n- Import a library module that exports components with translatable strings but where the components don't use the `$localize` function\r\n- **don't** use any of these components in your app\r\n- run `extract-i18n` on your app and verify that the generated `messages.xlf` file contains unused translations from these components\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 14.2.6\r\nNode: 16.16.0\r\nPackage Manager: yarn 1.22.19 \r\nOS: linux x64\r\n\r\nAngular: 14.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.6\r\n@angular-devkit/build-angular   14.2.6\r\n@angular-devkit/core            14.2.6\r\n@angular-devkit/schematics      14.2.6\r\n@angular/cli                    14.2.6\r\n@schematics/angular             14.2.6\r\nng-packagr                      14.2.2\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24145","RelatedDescription":"Open issue \"Extracted translations include unused translations\" (#24145)"},{"Id":"1422930127","IsPullRequest":false,"CreatedAt":"2022-10-26T08:34:45","Actor":"buu700","Number":"24139","RawContent":null,"Title":"Turbopack","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Description\n\nFor future versions of the CLI, it may be worth considering migrating from Webpack to [Turbopack](https://turbo.build/pack). Related:\r\n\r\n* https://vercel.com/blog/turbopack\r\n* https://turbo.build/pack/docs/migrating-from-webpack\r\n\r\nThe resource requirements of production builds have ballooned considerably in recent Angular releases, which is understandable given the continued output optimization and type checking strictness improvements, but it is nevertheless a major impact on Angular's developer experience. Perhaps Turbopack could be a solution for addressing this issue.\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24139","RelatedDescription":"Closed issue \"Turbopack\" (#24139)"},{"Id":"1423450033","IsPullRequest":true,"CreatedAt":"2022-10-26T05:14:53","Actor":"angular-robot","Number":"24140","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `e04e57f` -> `2f0e56c` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fanimations/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `7409e8d` -> `850c770` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `6f51ce8` -> `c1d0a56` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`14.2.5` -> `14.2.6`](https://renovatebot.com/diffs/npm/@angular%2fcdk/14.2.5/14.2.6) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `72237bf` -> `f462ad3` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcommon/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `01a513b` -> `5c6ef97` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `67504c7` -> `a97993b` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `77ea287` -> `add2bc1` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fcore/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `796497b` -> `704ba9d` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fforms/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `a430481` -> `281b7b4` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `286c9af` -> `46c9429` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2flocalize/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `17cda8d` -> `edf2e8d` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`14.2.5` -> `14.2.6`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/14.2.5/14.2.6) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `69f5666` -> `9d79f2f` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ad8fa47` -> `55298ac` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `5c24960` -> `5d3761c` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `4015aef` -> `1bd5031` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `5c18c65` -> `24f3680` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `da45fa9` -> `8fc71da` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2frouter/15.0.0-rc.0/15.0.0-rc.1) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `66cae64` -> `5979e86` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`15.0.0-rc.0` -> `15.0.0-rc.1`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/15.0.0-rc.0/15.0.0-rc.1) |\n| angular/dev-infra | action | digest | `f8cb0ad` -> `400b7d4` |\n\nð¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular</summary>\n\n### [`v15.0.0-rc.1`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#&#8203;1500-rc1-2022-10-26)\n\n[Compare Source](https://togithub.com/angular/angular/compare/15.0.0-rc.0...15.0.0-rc.1)\n\n##### common\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [3a18398d83](https://togithub.com/angular/angular/commit/3a18398d8303fb4ae1923b3a182e6abb92e3117b) | fix | Don't warn about image distortion is fill mode is enabled ([#&#8203;47824](https://togithub.com/angular/angular/pull/47824)) |\n\n##### forms\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [a99d9d67f3](https://togithub.com/angular/angular/commit/a99d9d67f382c18b46c4c1c6765bbda445ca0b8c) | fix | don't mutate validators array ([#&#8203;47830](https://togithub.com/angular/angular/pull/47830)) |\n\n##### platform-server\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2908eba59c](https://togithub.com/angular/angular/commit/2908eba59c25e9a1fc5aa257b4a8a247db82079e) | fix | align server renderer interface with base renderer ([#&#8203;47868](https://togithub.com/angular/angular/pull/47868)) |\n\n#### Special Thanks\n\nAlan Agius, Alex Castle, Andrew Scott, Balaji, George Kalpakas, Kristiyan Kostadinov, Paul Gschwendtner, Pawel Kozlowski, WD Snoeijer, onrails and vyom1611\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components</summary>\n\n### [`v14.2.6`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#&#8203;1426-quilt-seagull-2022-10-26)\n\n[Compare Source](https://togithub.com/angular/components/compare/14.2.5...14.2.6)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [89771dcc4](https://togithub.com/angular/components/commit/89771dcc438e8ceed21d8c75284b4defacbf93b6) | fix | **tabs:** scroll position lost when tab header is hidden ([#&#8203;25855](https://togithub.com/angular/components/pull/25855)) |\n\n#### Special Thanks\n\nKristiyan Kostadinov\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24140","RelatedDescription":"Open PR \"build: update angular\" (#24140)"},{"Id":"1422755387","IsPullRequest":true,"CreatedAt":"2022-10-25T17:52:02","Actor":"gunan","Number":"24136","RawContent":null,"Title":"refactor: Make Logger.forEach compatible with both rxjs 6 and 7.","State":"closed","Body":"Some build environments build angular with rxjs 7, and see build failures due to this file.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24136","RelatedDescription":"Closed or merged PR \"refactor: Make Logger.forEach compatible with both rxjs 6 and 7.\" (#24136)"},{"Id":"1422762055","IsPullRequest":true,"CreatedAt":"2022-10-25T17:51:26","Actor":"clydin","Number":"24137","RawContent":null,"Title":"fix(@angular/cli): allow ng add to find prerelease versions when CLI is prerelease","State":"closed","Body":"When the CLI is a prerelease version, the `ng add` command will now consider the\r\nuse of prerelease versions of requested packages. Without this behavior, attempting\r\nto install a package without a version specifier (e.g., `ng add @angular/material`)\r\nwill install an older stable version of the requested package instead of the expected\r\nprerelease version compatible with the prerelease Angular project.","Url":"https://github.com/angular/angular-cli/pull/24137","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): allow ng add to find prerelease versions when CLI is prerelease\" (#24137)"},{"Id":"1422511184","IsPullRequest":true,"CreatedAt":"2022-10-25T17:51:02","Actor":"clydin","Number":"24135","RawContent":null,"Title":"perf(@angular-devkit/build-angular): avoid template diagnostics for declaration files in esbuild builder","State":"closed","Body":"The experimental esbuild-based browser application builder will now avoid trying to query the Angular Compiler for template diagnostics when a TypeScript source file is a declaration file (`.d.ts`). This avoids the overhead of the in-memory diagnostics caching logic as well as any Angular Compiler logic to determine if the file has any template diagnostics.","Url":"https://github.com/angular/angular-cli/pull/24135","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): avoid template diagnostics for declaration files in esbuild builder\" (#24135)"},{"Id":"1422156905","IsPullRequest":true,"CreatedAt":"2022-10-25T17:50:18","Actor":"fischeversenker","Number":"24132","RawContent":null,"Title":"feat(@schematics/angular): add sideEffects:false to library package.json","State":"closed","Body":"## PR Checklist\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThis PR is related to #24122. It introduces the `sideEffects: false` flag to the `package.json` of libraries generated with `ng generate library`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24132","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add sideEffects:false to library package.json\" (#24132)"},{"Id":"1422345939","IsPullRequest":false,"CreatedAt":"2022-10-25T17:49:01","Actor":"adigourdi","Number":"24133","RawContent":null,"Title":"Angular completion spews mismatch warnings","State":"closed","Body":"### Command\r\n\r\nother\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAngular completion prints version mismatch warning when pressing `TAB`\r\n\r\nIt can be fixed by disabling the warning, but I prefer to keep it\r\n\r\n### Minimal Reproduction\r\n\r\n_I'm using docker for a fresh test environment_\r\n\r\n#### On host\r\n```shell\r\ndocker run -it --rm node:lts bash\r\n```\r\n\r\n#### On container\r\n```shell\r\ncd \r\nnpm i -g @angular/cli@^14.2\r\nsource <(ng completion script) \r\nnpx @angular/cli@~14.1 new project\r\ncd project/\r\nng version # will print a mismatch warning (see below)\r\nng bui[TAB]ld --conf[TAB]iguration dev[TAB]elopment\r\n```\r\n\r\n\r\n### Exception or Error\r\n\r\nCompletion will spew a version mismatch on each `TAB` key press:\r\n\r\n```shell\r\nng bui[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\nld --conf[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\niguration dev[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\nelopment \r\n```\r\n\r\nInstead of the expected output:\r\n```shell\r\nng build --configuration development\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nYour global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / â³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 14.1.3\r\nNode: 16.18.0\r\nPackage Manager: npm 8.19.2 \r\nOS: linux x64\r\n\r\nAngular: 14.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.6\r\n@angular-devkit/build-angular   14.2.6\r\n@angular-devkit/core            14.2.6\r\n@angular-devkit/schematics      14.1.3\r\n@angular/cli                    14.1.3\r\n@schematics/angular             14.1.3\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24133","RelatedDescription":"Closed issue \"Angular completion spews mismatch warnings\" (#24133)"},{"Id":"1422398041","IsPullRequest":true,"CreatedAt":"2022-10-25T17:49:00","Actor":"alan-agius4","Number":"24134","RawContent":null,"Title":"fix(@angular/cli): disable version check during auto completion","State":"closed","Body":"This causes sub broken DX\r\n\r\n```\r\nng bui[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\nld --conf[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\niguration dev[TAB]Your global Angular CLI version (14.2.6) is greater than your local version (14.1.3). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\nelopment\r\n```\r\n\r\nCloses #24133\r\n","Url":"https://github.com/angular/angular-cli/pull/24134","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): disable version check during auto completion\" (#24134)"},{"Id":"1422130492","IsPullRequest":true,"CreatedAt":"2022-10-25T09:11:21","Actor":"angular-robot","Number":"24131","RawContent":null,"Title":"build: update dependency puppeteer to v19","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [puppeteer](https://togithub.com/puppeteer/puppeteer/tree/main#readme) ([source](https://togithub.com/puppeteer/puppeteer)) | devDependencies | major | [`18.2.1` -> `19.2.0`](https://renovatebot.com/diffs/npm/puppeteer/18.2.1/19.2.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>puppeteer/puppeteer</summary>\n\n### [`v19.2.0`](https://togithub.com/puppeteer/puppeteer/releases/tag/v19.2.0)\n\n[Compare Source](https://togithub.com/puppeteer/puppeteer/compare/v19.1.2...v19.2.0)\n\n##### Features\n\n-   **chromium:** roll to Chromium 108.0.5351.0 (r1056772) ([#&#8203;9153](https://togithub.com/puppeteer/puppeteer/issues/9153)) ([e78a4e8](https://togithub.com/puppeteer/puppeteer/commit/e78a4e89c22bb1180e72d180c16b39673ff9125e))\n\n##### Dependencies\n\n-   The following workspace dependencies were updated\n    -   dependencies\n        -   puppeteer-core bumped from 19.1.1 to ^19.2.0\n\n### [`v19.1.2`](https://togithub.com/puppeteer/puppeteer/releases/tag/v19.1.2)\n\n[Compare Source](https://togithub.com/puppeteer/puppeteer/compare/v19.1.1...v19.1.2)\n\n##### Bug Fixes\n\n-   skip browser download ([#&#8203;9160](https://togithub.com/puppeteer/puppeteer/issues/9160)) ([2245d7d](https://togithub.com/puppeteer/puppeteer/commit/2245d7d6ed0630ee1ad985dcbd48354772924750))\n\n### [`v19.1.1`](https://togithub.com/puppeteer/puppeteer/releases/tag/v19.1.1)\n\n[Compare Source](https://togithub.com/puppeteer/puppeteer/compare/v19.1.0...v19.1.1)\n\n##### Dependencies\n\n-   The following workspace dependencies were updated\n    -   dependencies\n        -   puppeteer-core bumped from 19.1.0 to ^19.1.1\n\n### [`v19.1.0`](https://togithub.com/puppeteer/puppeteer/releases/tag/v19.1.0)\n\n[Compare Source](https://togithub.com/puppeteer/puppeteer/compare/v19.0.0...v19.1.0)\n\n##### Features\n\n-   use configuration files ([#&#8203;9140](https://togithub.com/puppeteer/puppeteer/issues/9140)) ([ec20174](https://togithub.com/puppeteer/puppeteer/commit/ec201744f077987b288e3dff52c0906fe700f6fb)), closes [#&#8203;9128](https://togithub.com/puppeteer/puppeteer/issues/9128)\n\n##### Bug Fixes\n\n-   update `BrowserFetcher` deprecation message ([#&#8203;9141](https://togithub.com/puppeteer/puppeteer/issues/9141)) ([efcbc97](https://togithub.com/puppeteer/puppeteer/commit/efcbc97c60e4cfd49a9ed25a900f6133d06b290b))\n\n##### Dependencies\n\n-   The following workspace dependencies were updated\n    -   dependencies\n        -   puppeteer-core bumped from 19.0.0 to ^19.1.0\n\n### [`v19.0.0`](https://togithub.com/puppeteer/puppeteer/releases/tag/v19.0.0)\n\n[Compare Source](https://togithub.com/puppeteer/puppeteer/compare/v18.2.1...v19.0.0)\n\n##### â  BREAKING CHANGES\n\n-   use `~/.cache/puppeteer` for browser downloads ([#&#8203;9095](https://togithub.com/puppeteer/puppeteer/issues/9095))\n-   deprecate `createBrowserFetcher` in favor of `BrowserFetcher` ([#&#8203;9079](https://togithub.com/puppeteer/puppeteer/issues/9079))\n-   refactor custom query handler API ([#&#8203;9078](https://togithub.com/puppeteer/puppeteer/issues/9078))\n-   remove `puppeteer.devices` in favor of `KnownDevices` ([#&#8203;9075](https://togithub.com/puppeteer/puppeteer/issues/9075))\n-   deprecate indirect network condition imports ([#&#8203;9074](https://togithub.com/puppeteer/puppeteer/issues/9074))\n\n##### Features\n\n-   deprecate `createBrowserFetcher` in favor of `BrowserFetcher` ([#&#8203;9079](https://togithub.com/puppeteer/puppeteer/issues/9079)) ([7294dfe](https://togithub.com/puppeteer/puppeteer/commit/7294dfe9c6c3b224f95ba6d59b5ef33d379fd09a)), closes [#&#8203;8999](https://togithub.com/puppeteer/puppeteer/issues/8999)\n-   use `~/.cache/puppeteer` for browser downloads ([#&#8203;9095](https://togithub.com/puppeteer/puppeteer/issues/9095)) ([3df375b](https://togithub.com/puppeteer/puppeteer/commit/3df375baedad64b8773bb1e1e6f81b604ed18989))\n\n##### Bug Fixes\n\n-   deprecate indirect network condition imports ([#&#8203;9074](https://togithub.com/puppeteer/puppeteer/issues/9074)) ([41d0122](https://togithub.com/puppeteer/puppeteer/commit/41d0122b94f41b308536c48ced345dec8c272a49))\n-   refactor custom query handler API ([#&#8203;9078](https://togithub.com/puppeteer/puppeteer/issues/9078)) ([1847704](https://togithub.com/puppeteer/puppeteer/commit/1847704789e2888c755de8c739d567364b8ad645))\n-   remove `puppeteer.devices` in favor of `KnownDevices` ([#&#8203;9075](https://togithub.com/puppeteer/puppeteer/issues/9075)) ([87c08fd](https://togithub.com/puppeteer/puppeteer/commit/87c08fd86a79b63308ad8d46c5f7acd1927505f8))\n\n##### Dependencies\n\n-   The following workspace dependencies were updated\n    -   dependencies\n        -   puppeteer-core bumped from 18.2.1 to ^19.0.0\n\n</details>\n\n---\n\n### Configuration\n\nð **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nð¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nð **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzMy4yLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24131","RelatedDescription":"Open PR \"build: update dependency puppeteer to v19\" (#24131)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1428666920","IsPullRequest":true,"CreatedAt":"2022-10-30T08:14:43","Actor":"crisbeto","Number":"25896","RawContent":null,"Title":"refactor(multiple): remove final usages of InjectFlags","State":"open","Body":"Removes all of the remaining usages of the deprecated `InjectFlags` symbol.","Url":"https://github.com/angular/components/pull/25896","RelatedDescription":"Open PR \"refactor(multiple): remove final usages of InjectFlags\" (#25896)"},{"Id":"1428374582","IsPullRequest":false,"CreatedAt":"2022-10-29T17:36:22","Actor":"Identity-labs","Number":"25895","RawContent":null,"Title":"feat(CDK-DRAG-DROP): XY positioning mode","State":"open","Body":"### Feature Description\r\n\r\nAdd new positioning mode with floating XY mode, with defined layout, with amount of cols and rows.\r\n\r\nI can help on this \r\n\r\n### Use Case\r\n\r\nAbility to move item on the defined grid\r\nAbility to swap item on the grid, with optional callback validator to prevent the change\r\nAbility to set amount of colonnes and rows\r\nAbility to have dynamic amount of colonnes and rows\r\n","Url":"https://github.com/angular/components/issues/25895","RelatedDescription":"Open issue \"feat(CDK-DRAG-DROP): XY positioning mode\" (#25895)"},{"Id":"1428218414","IsPullRequest":false,"CreatedAt":"2022-10-29T11:20:13","Actor":"DanielAJL","Number":"25894","RawContent":null,"Title":"docs-bug(mat-selection-list): Mat Selection List example is limited to html templating","State":"open","Body":"### Documentation Feedback\r\n\r\nIt would be really nice if there could be some example implemented that can bind data to the component inside the *.component.ts file. The current example only seems to work with HTML templating, but what if we want to retrieve the value outside of the HTML?\r\n\r\n<b>Current mat list with single selection example:</b>\r\n```html\r\n<mat-selection-list #shoes [multiple]=\"false\">\r\n  <mat-list-option *ngFor=\"let shoe of typesOfShoes\" [value]=\"shoe\">\r\n    {{shoe}}\r\n  </mat-list-option>\r\n</mat-selection-list>\r\n\r\n<p>\r\n  Option selected: {{shoes.selectedOptions.selected[0]?.value}}\r\n</p>\r\n```\r\n\r\nAs a proposed example it would be nice to have a Reactive Forms approach where we can retrieve the data from the FormGroup and even validate it right away before the data. I think this approach would also open up the data to be displayed as well as received.\r\n<b>Some kind of example proposal:</b>\r\n```html\r\n<form id=\"exampleId\" [formGroup]=\"matListExampleFormGroup\">\r\n  <mat-selection-list #list formControlName=\"experienceLevel\" [multiple]=\"false\">\r\n    <mat-list-option *ngFor=\"let exp of experiences\" [value]=\"exp\">\r\n      {{exp}}\r\n    </mat-list-option>\r\n  </mat-selection-list>\r\n</form>\r\n```\r\n\r\nI checked back the version history and noticed the same example from v6 - v14 (slightly different as we approach old versions).\r\n              \r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/list/examples","Url":"https://github.com/angular/components/issues/25894","RelatedDescription":"Open issue \"docs-bug(mat-selection-list): Mat Selection List example is limited to html templating\" (#25894)"},{"Id":"1428127931","IsPullRequest":true,"CreatedAt":"2022-10-29T07:53:06","Actor":"crisbeto","Number":"25893","RawContent":null,"Title":"fix(cdk/listbox): incorrectly validating preselected value","State":"closed","Body":"In #25856 the check that verifies the validity of the form control value was moved into `writeValue`. This works as expected for assignments after initialization, but it throws an error incorrectly if there is a preselected value, because `writeValue` will be called before the options are available.\r\n\r\nThese changes resolve the issue by checking that the options have been initialized before throwing the error.","Url":"https://github.com/angular/components/pull/25893","RelatedDescription":"Closed or merged PR \"fix(cdk/listbox): incorrectly validating preselected value\" (#25893)"},{"Id":"1427819110","IsPullRequest":true,"CreatedAt":"2022-10-28T20:53:08","Actor":"zarend","Number":"25892","RawContent":null,"Title":"fix(material/chips): fix state layer interferring with text color","State":"open","Body":"Fixes issue where state layer interfers with color of the text. Give the text label a higher z-index than the focus overlay.","Url":"https://github.com/angular/components/pull/25892","RelatedDescription":"Open PR \"fix(material/chips): fix state layer interferring with text color\" (#25892)"},{"Id":"1427745884","IsPullRequest":true,"CreatedAt":"2022-10-28T19:44:19","Actor":"zarend","Number":"25891","RawContent":null,"Title":"build: add Zach to chips codeowners","State":"open","Body":"Add Zach (zarend) to code owners for chips.","Url":"https://github.com/angular/components/pull/25891","RelatedDescription":"Open PR \"build: add Zach to chips codeowners\" (#25891)"},{"Id":"1427573105","IsPullRequest":true,"CreatedAt":"2022-10-28T17:42:36","Actor":"zarend","Number":"25890","RawContent":null,"Title":"fix(material/chips): use checkmark graphic for single-selection","State":"open","Body":"For mat-chip-listbox, use the checkmark component for single-selection. Fixes issue where selected state is communicated visually only using color (#25886).","Url":"https://github.com/angular/components/pull/25890","RelatedDescription":"Open PR \"fix(material/chips): use checkmark graphic for single-selection\" (#25890)"},{"Id":"1427212572","IsPullRequest":false,"CreatedAt":"2022-10-28T12:45:26","Actor":"Tom4U","Number":"25889","RawContent":null,"Title":"bug(MatFormField): Prerendering Angular universal fails","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf running `npm run prerender` and a component template, considered for prerendering, contains a MatFormField component, the prerendering fails:\r\n\r\n```\r\nâ  Prerendering 6 route(s) to <DRIVE_LETTER>:\\<project>\\dist\\<project>\\browser...Unhandled Promise rejection: Cannot read properties of undefined (reading 'type') ; Zone: <root> ; Task: Promise.then ; Value: TypeError: Cannot read properties of undefined (reading 'type')\r\n    at TokenStream.LA (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:626334)\r\n    at TokenStream.advance (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:624983)\r\n    at Parser._readDeclarations (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:659046)\r\n    at Parser.parseStyleAttribute (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:660636)\r\n    at parseStyles (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:344961)\r\n    at CSSStyleDeclaration.get (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:345316)\r\n    at CSSStyleDeclaration.value (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:346137)\r\n    at CSSStyleDeclaration.get (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:359933)\r\n    at cloakElement (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:3558188)\r\n    at <DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:3558406 TypeError: Cannot read properties of undefined (reading 'type')      \r\n    at TokenStream.LA (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:626334)\r\n    at TokenStream.advance (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:624983)\r\n    at Parser._readDeclarations (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:659046)\r\n    at Parser.parseStyleAttribute (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:660636)\r\n    at parseStyles (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:344961)\r\n    at CSSStyleDeclaration.get (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:345316)\r\n    at CSSStyleDeclaration.value (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:346137)\r\n    at CSSStyleDeclaration.get (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:359933)\r\n    at cloakElement (<DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:3558188)\r\n    at <DRIVE_LETTER>:\\<project>\\dist\\<project>\\server\\main.js:1:3558406\r\nâ Prerendering routes to <DRIVE_LETTER>:\\<project>\\dist\\<project>\\browser failed.\r\nCannot read properties of undefined (reading 'type')\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\n1. install **nguniversal/express-engine**\r\n2. import **MatFormFieldModule** and **MatInputModule**\r\n3. add code to a component template:\r\n   ```html\r\n   <form class=\"form\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <input matInput>                \r\n        </mat-form-field>\r\n    </form>\r\n   ```\r\n4. run `npm run prerender`\r\n\n\n### Expected Behavior\n\nPrerendering should not fail.\n\n### Actual Behavior\n\nPrerendering fails.\n\n### Environment\n\n```\r\n@angular-devkit/architect       0.1402.7\r\n@angular-devkit/build-angular   14.2.7\r\n@angular-devkit/core            14.2.7\r\n@angular-devkit/schematics      14.2.7\r\n@angular/cdk                    14.2.6\r\n@angular/cli                    14.2.7\r\n@angular/fire                   7.4.1\r\n@angular/material               14.2.6\r\n@nguniversal/builders           14.2.0\r\n@nguniversal/express-engine     14.2.0\r\n@schematics/angular             14.2.7\r\nng-packagr                      14.2.2\r\nrxjs                            7.5.7\r\ntypescript                      4.7.4\r\n```\r\n- Browser(s): not relevant\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/25889","RelatedDescription":"Open issue \"bug(MatFormField): Prerendering Angular universal fails\" (#25889)"},{"Id":"1427142205","IsPullRequest":false,"CreatedAt":"2022-10-28T11:47:38","Actor":"infacto","Number":"25888","RawContent":null,"Title":"feat(mat-menu): Open nested menus should be delayed on hover.","State":"open","Body":"### Feature Description\r\n\r\nAn option to delay the menu of nested items would be great.\r\nThis prevents the menus from blinking/flashing when you just hover/move the mouse quickly to another wanted item.\r\n\r\nSolution: Add delay before opening the nested menu. Only a few milliseconds to prevent flashing menus when you just move the mouse around. The user can still click on a nested item to trigger the menu instantly. This will improve the UX. It's really annoying if the menus are flashing.\r\n\r\nYou can test my suggested behavior in other proven menus like in Windows 10. Just open a folder and open the context menu. You'll see that the nested menus don't open immediately. They are delayed. Same behavior in VSCode. A shorter delay than the Windows menus, but they are delayed. And I think we should implement this for the mat-menus too.\r\n\r\n|mat-menu| vs-code |\r\n|---|---|\r\n| ![mat-menu](https://user-images.githubusercontent.com/60390085/198579985-20aba53a-ee97-4d20-a748-fb9cae75a78d.gif) | ![vscode-menu](https://user-images.githubusercontent.com/60390085/198579999-db1003dd-746a-4ede-8e08-cbd6a85ad38d.gif) |\r\n\r\nhttps://material.angular.io/components/menu/examples\r\n\r\nSummary: \r\n- Delay nested menu on hover.\r\n- Open nested menu instantly on click.\r\n- Delay nested menu before close (hover leave).\r\n- Implement it with fixed delay time or as an option property with default value (the time in ms. Not just boolean).\r\n\r\nBtw: Another related issue which is about delay before closing: #24476\r\nWe could combine both issues to add delay before and after.\r\n\r\nI think this issue is more a bug than a feature. An unwanted behavior / bad UX. But anyway, it's no candidate for votes. It something what should be considered by the Angular team.\r\n","Url":"https://github.com/angular/components/issues/25888","RelatedDescription":"Open issue \"feat(mat-menu): Open nested menus should be delayed on hover.\" (#25888)"},{"Id":"1426520817","IsPullRequest":false,"CreatedAt":"2022-10-28T02:23:14","Actor":"diuming","Number":"25887","RawContent":null,"Title":"[Help List]selecting a list-item in mat-nav-list?","State":"open","Body":"### Feature Description\r\n\r\nHi,\r\n\r\nI exercise `mat-nav-list` in `sidenav`.\r\nHow do I draw background when I selected a `mat-list-item`? (Do you provide a good way to do this?)\r\nCan I set a default `mat-list-item` be selected?\r\nHow do I place a prefix Icon` <mat-icon matListIcon>folder</mat-icon>` in `mat-list-item`?\r\nthanks.\r\n\r\n```\r\n<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" opened=\"true\">\r\n        <mat-nav-list>\r\n            <a mat-list-item href=\"...\" *ngFor=\"let link of links\"> {{ link }} </a>\r\n         </mat-nav-list>\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n```\r\n![Screen Shot 2022-10-28 at 10 08 57 AM](https://user-images.githubusercontent.com/39903550/198465089-efe0cecc-80e0-44fd-9347-2e587548ae46.png)\r\n\r\nBetter\r\n\r\n![Screen Shot 2022-10-28 at 9 41 32 AM](https://user-images.githubusercontent.com/39903550/198481874-ea8aa0c3-a9d5-4631-b5e8-e62e57059234.png)\r\n","Url":"https://github.com/angular/components/issues/25887","RelatedDescription":"Open issue \"[Help List]selecting a list-item in mat-nav-list?\" (#25887)"},{"Id":"1426049162","IsPullRequest":false,"CreatedAt":"2022-10-27T17:47:13","Actor":"zarend","Number":"25886","RawContent":null,"Title":"bug(material/chips): single-select chips visually communicate selected state with color alone (WCAG 1.4.1)","State":"open","Body":"### Description\r\n\r\nsingle-select chips visually communicate selected state with color alone. It should be visually communicated with more than just color.\r\n\r\nhttps://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-without-color.html\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. open https://material2-dev.web.app/mdc-chips\r\n2. Navigate to \"Selectable Chips\" demo\r\n3. Under \"Single selection\", click \"Medium\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nselected state of \"Medium\" is visually communicated with more than color alone\r\n\r\n### Actual Behavior\r\n\r\ncolor of \"Medium\" changes to indicate selected state\r\n\r\n<img width=\"592\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7720245/198362096-688f5a37-67ad-4f7e-9f40-7446ac29c41c.png\">\r\n","Url":"https://github.com/angular/components/issues/25886","RelatedDescription":"Open issue \"bug(material/chips): single-select chips visually communicate selected state with color alone (WCAG 1.4.1)\" (#25886)"},{"Id":"1424583839","IsPullRequest":false,"CreatedAt":"2022-10-27T16:30:00","Actor":"tbondwilkinson","Number":"25871","RawContent":null,"Title":"feat(all): Experiment using Popup API","State":"closed","Body":"### Feature Description\n\nExperiment using the soon to be builtin popup api in components to display them in the top layer.\r\n\r\nhttps://developer.chrome.com/blog/pop-ups-theyre-making-a-resurgence/\r\nhttps://open-ui.org/components/popup.research.explainer\n\n### Use Case\n\nThis would reduce code and eliminate the need for z-index and other positioning hacks.","Url":"https://github.com/angular/components/issues/25871","RelatedDescription":"Closed issue \"feat(all): Experiment using Popup API\" (#25871)"},{"Id":"1424614654","IsPullRequest":false,"CreatedAt":"2022-10-27T16:29:09","Actor":"mswilson4040","Number":"25872","RawContent":null,"Title":"MatStepper Doesn't Allow Styling","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI am trying to apply basic styling to the MatStepper. However, the styles seem to get completely stripped out. If I use the deprecated `::ng-deep`, things work just fine. But, `::ng-deep` is being (or is) deprecated. What is the proper way to do this?\r\n\r\nExample:\r\nTrying to hide the `.mat-horizontal-stepper-header-container` and change the background of `.mat-horizontal-content-container` to red.\r\n\r\n```\r\n.mat-horizontal-stepper-header-container {\r\n  display: none !important;\r\n}\r\n\r\n.mat-horizontal-content-container {\r\n  background: red !important;\r\n}\r\n```\r\n\r\nBut this works just fine:\r\n```\r\n::ng-deep .mat-horizontal-stepper-header-container {\r\n  display: none !important;\r\n}\r\n\r\n::ng-deep .mat-horizontal-content-container {\r\n  background: red !important;\r\n}\r\n```\r\n\r\nRepro:\r\nhttps://stackblitz.com/edit/angular-ylfbfk?file=src/app/stepper-overview-example.css\r\n\r\nExpected result:\r\n<img width=\"493\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19480392/198122669-89e6e11b-5374-45c3-9ec8-8b5dfc09c909.png\">\r\n\r\n\r\nActual result:\r\n<img width=\"493\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19480392/198122746-9103f6ce-8cd8-4202-aa87-949f66abac79.png\">\r\n\r\n### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-ylfbfk?file=src/app/stepper-overview-example.css\r\n\r\n### Expected Behavior\r\n\r\nBasic styling should apply to components without needing to use the deprecated `::ng-deep`\r\n\r\n### Actual Behavior\r\n\r\nNo styles apply to the component without specifying `::ng-deep`\r\n\r\n### Environment\r\n\r\n- Angular: 14.2.1\r\n- CDK/Material: 14.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Mac\r\n","Url":"https://github.com/angular/components/issues/25872","RelatedDescription":"Closed issue \"MatStepper Doesn't Allow Styling\" (#25872)"},{"Id":"1424331291","IsPullRequest":false,"CreatedAt":"2022-10-27T16:23:30","Actor":"infacto","Number":"25869","RawContent":null,"Title":"bug(mat-menu): Don't focus first element on open menu programmatically.","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n![demo](https://user-images.githubusercontent.com/60390085/198079674-df9a8625-2910-40f2-bdb8-5c92153b1f5a.gif)\r\n\r\nRef. #15936 (closed but not accepted.) Allow an option for this if you insist. You can focus the mat-menu without focus an item.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create mat-menu.\r\n2. Open it in ts file with ViewChild on MatMenuTrigger.\r\n\r\n[Demo](https://stackblitz.com/edit/angular-cxsudr-ebngfx?file=app/nested-menu-example.html)\r\n\r\n### Expected Behavior\r\n\r\nNever focus an item on menu open. There is no primary item we want. You can always use the keyboard to focus. There is no need to focus an item. And if you really want it, why are no items focused when open via button matMenuTriggerFor? The first focused item looks ugly and confused the user.\r\n\r\n### Actual Behavior\r\n\r\nWhen I click on a `button` with `matMenuTriggerFor` the menu opens without any item is focused. Great.\r\nBut if I open the same menu via the MatMenuTrigger from ts-file (`openMenu`), the first item is focused.\r\n\r\n### Environment\r\n\r\n- Angular: 14\r\n- CDK/Material: 14\r\n- Browser(s): Chrome 106\r\n- Operating System: Windows 10\r\n","Url":"https://github.com/angular/components/issues/25869","RelatedDescription":"Closed issue \"bug(mat-menu): Don't focus first element on open menu programmatically.\" (#25869)"},{"Id":"1425821702","IsPullRequest":false,"CreatedAt":"2022-10-27T16:01:09","Actor":"michahell","Number":"25883","RawContent":null,"Title":"bug(mat-radio-button): value of mat-radio-button without radio-button-group is null after selection","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nwhen having 3 `mat-radio-buttons` _without_ a `mat-radio-button` group, yet with a given `name` **@Input** so they belong to one group, listening to their change events and observing their `MatRadioChange` objects, their values remain `null` after selection.\n\n### Reproduction\n\nexample:\r\nhttps://stackblitz.com/edit/components-issue-qqftgq?file=src/app/example-component.ts\n\n### Expected Behavior\n\nI expect the event$.value of each radiobutton to be true or false\n\n### Actual Behavior\n\nthe event$.value s of each radiobutton are null\n\n### Environment\n\n- Angular:  @latest in example (in my own case, v13.3.9)\r\n- CDK/Material: @latest in example (in my case, v13.3.9)\r\n- Browser(s): chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/25883","RelatedDescription":"Closed issue \"bug(mat-radio-button): value of mat-radio-button without radio-button-group is null after selection\" (#25883)"},{"Id":"1425774250","IsPullRequest":true,"CreatedAt":"2022-10-27T14:54:17","Actor":"zarend","Number":"25882","RawContent":null,"Title":"debugging","State":"open","Body":"","Url":"https://github.com/angular/components/pull/25882","RelatedDescription":"Open PR \"debugging\" (#25882)"},{"Id":"1425710051","IsPullRequest":false,"CreatedAt":"2022-10-27T14:13:06","Actor":"flensrocker","Number":"25881","RawContent":null,"Title":"help(DateAdapter): Use different DateAdapter on selected input","State":"open","Body":"### What are you trying to do?\n\nI have a global custom DateAdapter, which works fine (German locale, outputs string in \"dd.MM.yyyy\").\r\n\r\nNow I need on some inputs a different DateAdapter, which outputs \"yyyyMMdd\" (but showing \"dd.MM.yyyy\" in the UI).\r\nImplementing this other DateAdapter is no problem, it's working.\r\n\r\nWhat is the recommended way to assign a different DateAdapter to one input, while all others use the default/global DateAdapter?\r\n\r\nWhat I come up with is a directive, which I add to the `input[matDatepicker]` and `mat-datepicker`, to override the providers.\r\n\r\n```typescript\r\n@Directive({\r\n  standalone: true,\r\n  selector: \"mat-datepicker[bsMatStringDate],input[matDatepicker][bsMatStringDate]\",\r\n  providers: [{ provide: DateAdapter, useClass: BsMatStringDateAdapter, deps: [NativeDateAdapter] }],\r\n})\r\nexport class BsMatStringDateAdapterDirective {}\r\n```\r\n\r\nHaving it on both components seems a bit superfluous, and the DateAdapter would be instantiated to times, doesn't it?\r\nIs there a better way to override the providers of the datepicker?\n\n### What troubleshooting steps have you tried?\n\nOverriding the provider only on the MatDatepicker doesn't work.\r\n\r\nSince the MatDatepicker is assigned to the MatDatepickerInput, should that get the DateAdapter from the MatDatepicker?\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\nNothing really to reproduce.\n\n### Environment\n\n- Angular: ~14.2.0\r\n- CDK/Material: 14.2.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/25881","RelatedDescription":"Open issue \"help(DateAdapter): Use different DateAdapter on selected input\" (#25881)"},{"Id":"1425187140","IsPullRequest":true,"CreatedAt":"2022-10-27T10:53:48","Actor":"crisbeto","Number":"25879","RawContent":null,"Title":"build: update all dependencies to the Angular 15 RC","State":"closed","Body":"Some dependencies were still on their RC versions. These changes bump them up to the RC for consistency. Also updates to the latest MDC canary.","Url":"https://github.com/angular/components/pull/25879","RelatedDescription":"Closed or merged PR \"build: update all dependencies to the Angular 15 RC\" (#25879)"},{"Id":"1425268569","IsPullRequest":true,"CreatedAt":"2022-10-27T08:51:33","Actor":"stijnvn","Number":"25880","RawContent":null,"Title":"fix(selection-model): respect compareWith while setting a selection oâ¦","State":"open","Body":"Respect compareWith while setting a selection or deselecting values\r\n\r\nFixes #25878","Url":"https://github.com/angular/components/pull/25880","RelatedDescription":"Open PR \"fix(selection-model): respect compareWith while setting a selection oâ¦\" (#25880)"},{"Id":"1425160764","IsPullRequest":false,"CreatedAt":"2022-10-27T07:25:14","Actor":"stijnvn","Number":"25878","RawContent":null,"Title":"bug(selection-model): SelectionModel does not always respect the compareWith function","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSelectionModel does not always respect the `compareWith` function.\r\n\r\nThe lines in SelectionModel where it goes wrong:\r\n\r\nhttps://github.com/angular/components/blob/14.1.3/src/cdk/collections/selection-model.ts#L212\r\nhttps://github.com/angular/components/blob/14.1.3/src/cdk/collections/selection-model.ts#L97\n\n### Reproduction\n\nhttps://stackblitz.com/edit/components-issue-8zah2s?file=src/app/example-component.ts\r\n\r\nSteps to reproduce:\r\n1. Set up a selection model with multiple selection and `compareWith` function.\r\n2. Select an item.\r\n3. Try to deselect the item but pass a copy of the original item.\r\n\n\n### Expected Behavior\n\nThe item is deselected because it is equal to the original item according to the `compareWith` function.\n\n### Actual Behavior\n\nThe item is not deselected because the current implementation uses `Set.delete` to remove the item.\n\n### Environment\n\n- Angular: 14.1.3\r\n- CDK/Material: 14.1.3\r\n","Url":"https://github.com/angular/components/issues/25878","RelatedDescription":"Open issue \"bug(selection-model): SelectionModel does not always respect the compareWith function\" (#25878)"},{"Id":"1424965133","IsPullRequest":false,"CreatedAt":"2022-10-27T03:16:00","Actor":"zehavibarak","Number":"25877","RawContent":null,"Title":"bug (MatTabNav): Active tab indication disposition on right-to-left","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nUsing nav mat-tab-nav-bar on right-to-left html document incorrectly shows the active tab indicator to the left rather than the right.\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Set html dir=rtl\r\n2. Add mat-tab-nav-bar tag with one mat-tab-link.\r\n\r\n```html\r\n<html>\r\n<body dir=\"rtl\">\r\n  <nav mat-tab-nav-bar>\r\n    <a mat-tab-link>Show me</a>\r\n  </nav>\r\n</body>\r\n</html>\r\n```\r\n\n\n### Expected Behavior\n\nThe active indication should have shown to the right.\n\n### Actual Behavior\n\nThe indication shows to the left.\n\n### Environment\n\n- Angular: 1.14\r\n- CDK/Material: 1.14\r\n- Browser(s): Chrome / Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/25877","RelatedDescription":"Open issue \"bug (MatTabNav): Active tab indication disposition on right-to-left\" (#25877)"},{"Id":"1424734852","IsPullRequest":true,"CreatedAt":"2022-10-26T21:52:02","Actor":"zarend","Number":"25876","RawContent":null,"Title":"docs: release notes for the v14.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/25876","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.6 release\" (#25876)"},{"Id":"1424733859","IsPullRequest":true,"CreatedAt":"2022-10-26T21:46:06","Actor":"zarend","Number":"25875","RawContent":null,"Title":"Bump version to \"v14.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25875","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.6\" with changelog.\" (#25875)"},{"Id":"1424703958","IsPullRequest":true,"CreatedAt":"2022-10-26T21:40:08","Actor":"zarend","Number":"25874","RawContent":null,"Title":"docs: release notes for the v15.0.0-rc.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/25874","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.0.0-rc.0 release\" (#25874)"},{"Id":"1424702603","IsPullRequest":true,"CreatedAt":"2022-10-26T21:15:20","Actor":"zarend","Number":"25873","RawContent":null,"Title":"Bump version to \"v15.0.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/25873","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.0.0-rc.0\" with changelog.\" (#25873)"},{"Id":"1424544009","IsPullRequest":true,"CreatedAt":"2022-10-26T18:49:47","Actor":"zarend","Number":"25870","RawContent":null,"Title":"fix(material/core): use checkmark to indicate selected option","State":"open","Body":"For single-selection, use a checkmark to visually indicate which option is selected. Fix a11y issue where selection option is visually communicated with color alone. Communicate selection with both color and a checkmark.\r\n\r\nAdd 'checkmark' appearance to mat-option to be used for single-selection.","Url":"https://github.com/angular/components/pull/25870","RelatedDescription":"Open PR \"fix(material/core): use checkmark to indicate selected option\" (#25870)"},{"Id":"1423979978","IsPullRequest":false,"CreatedAt":"2022-10-26T12:59:03","Actor":"DannyBoyNg","Number":"25868","RawContent":null,"Title":"bug(DatePicker): Fix shortcut to open datepicker","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe shortcut to open/close the datepicker is Alt+up/down. The problem is the datepicker also opens when I press Ctrl+Alt+down or even Ctrl+Shift+Alt+down. That is super annoying because I use those shortcuts for other things. Can we please put a check in that Ctrl and Shift are not pressed before opening the Datepicker. So only Alt+down. That would be extremely helpful.\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Press Ctrl+Alt+down\r\n2. Press Ctrl+Shift+Alt+down\r\n\n\n### Expected Behavior\n\nI expect the Datepicker not to open when either Ctrl or Shift are pressed.\n\n### Actual Behavior\n\nThe Datepicker will open.\n\n### Environment\n\n- Angular: 14.2.6\r\n- CDK/Material: 14.2.5\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/25868","RelatedDescription":"Open issue \"bug(DatePicker): Fix shortcut to open datepicker\" (#25868)"},{"Id":"1423927066","IsPullRequest":false,"CreatedAt":"2022-10-26T12:17:29","Actor":"robmv","Number":"25867","RawContent":null,"Title":"feat(MatDialog): Accept a function on MatDialogRef's disableClose","State":"open","Body":"### Feature Description\n\nCurrently MatDialogRef's disableClose type is `boolean | undefined`. Allow another function type like `() => boolean`  in order to have dynamic checks before processing the ESC key or clicking outside the dialog.\n\n### Use Case\n\nThe most use I have of `disableClose` is to disable it when a form is dirty. As there is no event yet on Angular for the dirty state, I have to resort to:\r\n\r\n``` typescript\r\n ngDoCheck(): void {\r\n    // WORKAROUND Remove when there are proper events for dirty status changes\r\n    this.dialogRef.disableClose = this.form.dirty;\r\n  }\r\n```\r\n\r\nIt would help a lot if `disableClose` could be function that can check, in my case, the form dirty state and that way remove the `DoCheck` lifecycle event.","Url":"https://github.com/angular/components/issues/25867","RelatedDescription":"Open issue \"feat(MatDialog): Accept a function on MatDialogRef's disableClose\" (#25867)"},{"Id":"1423732843","IsPullRequest":true,"CreatedAt":"2022-10-26T09:39:57","Actor":"crisbeto","Number":"25866","RawContent":null,"Title":"refactor(material/chips): switch to new theming API","State":"open","Body":"Reworks the chips to use the new theming API from MDC.","Url":"https://github.com/angular/components/pull/25866","RelatedDescription":"Open PR \"refactor(material/chips): switch to new theming API\" (#25866)"},{"Id":"1423466829","IsPullRequest":false,"CreatedAt":"2022-10-26T05:39:15","Actor":"Vallith","Number":"25865","RawContent":null,"Title":"bug(MatPaginator): Page event fires too late.","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nSo when using a MatPaginator, there is an event you can bind to in order to tell when the page event has been clicked. However inside the source code (paginator.ts), that event is emitted at the end of the function:\r\n```  \r\n_changePageSize(pageSize: number) {\r\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\r\n    // containing the previous page's first item.\r\n    const startIndex = this.pageIndex * this.pageSize;\r\n    const previousPageIndex = this.pageIndex;\r\n\r\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\r\n    this.pageSize = pageSize;\r\n    this._emitPageEvent(previousPageIndex);\r\n  }\r\n  ```\r\nThis means that when using this page event you cannot do anything BEFORE the loading starts. I'm developing an app that uses rather large tables, and I want to be able to display a loading icon before the table starts updating so the app doesn't just hang. But when I show my loading icon in the (page) event, it only displays AFTER the table has finished updating and hangs for a long time. I've spent many hours trying to find a work around for this and haven't been able to figure anything out. Perhaps there is a reason as to why the line `this._emitPageEvent(previousPageIndex);` is here, but to my very amateurish eyes I feel like this could be solved by moving that line to the top.\r\n\r\nApologies in advance if this post doesn't follow the etiquette, I've not made many of these so I'm still learning. \r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Have a table with a very long dataset\r\n2. Add a paginator\r\n3. Bind the page event on the paginator\r\n4. Have the page event do literally anything, let's say just write some text to the console\r\n5. Change the page size on the paginator from the default 50 to the full table's length\r\n6. Watch the console to see the app will hang until it finishes loading and only THEN do you see the text appear in the console.\r\n\r\n\r\n### Expected Behavior\r\n\r\nI'd expect the page event to be fired first.\r\n\r\n### Actual Behavior\r\n\r\nThe page event is fired after.\r\n\r\n### Environment\r\n\r\n- Angular: 14.1.0\r\n- CDK/Material: 14.1.0\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/25865","RelatedDescription":"Open issue \"bug(MatPaginator): Page event fires too late.\" (#25865)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-31T03:30:03.4409337Z","RunDurationInMilliseconds":2568}