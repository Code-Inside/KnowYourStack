{"Data":{"Angular-Issues":{"Issues":[{"Id":"1920037821","IsPullRequest":true,"CreatedAt":"2023-09-30T00:36:52","Actor":"AndrewKushnir","Number":"51965","RawContent":null,"Title":"test(core): enable previously failing @defer tests","State":"open","Body":"This commit re-enables previously flaky tests. The original issue was resolved by mocking `requestIdleCallback` in tests.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Other... Please describe: testing-related changes.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51965","RelatedDescription":"Open PR \"test(core): enable previously failing @defer tests\" (#51965)"},{"Id":"1920027968","IsPullRequest":true,"CreatedAt":"2023-09-30T00:10:05","Actor":"AndrewKushnir","Number":"51964","RawContent":null,"Title":"refactor(core): allow nested @defer block to contain the same dependency","State":"open","Body":"Currently, if there are 2 nested `@defer` blocks with the same dependency, Angular throws an error at runtime to indicate that there was a duplicate component def in the registry. This commit updates the logic to only append dependencies when they didn't previously exist in the registry.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51964","RelatedDescription":"Open PR \"refactor(core): allow nested @defer block to contain the same dependency\" (#51964)"},{"Id":"1920002132","IsPullRequest":true,"CreatedAt":"2023-09-29T23:13:23","Actor":"dylhunn","Number":"51963","RawContent":null,"Title":"Template Pipeline: Don't emit properties on structural `ng-template`s","State":"open","Body":"Consider an `ng-template` which is generated as a result of a structural directive:\r\n\r\n```\r\n<div *ngFor=\"let inner of items\"\r\n             (click)=\"onClick(inner)\"\r\n             [title]=\"getTitle()\"\r\n             >\r\n```\r\n\r\nThis should logically expand into something like the following:\r\n\r\n```\r\n<ng-template [ngForOf]=\"...\" >\r\n        <div (click)=\"...\" [title]=\"...\"></div>\r\n</ng-template>\r\n```\r\n\r\nNote that the `(click)` handler and the `[title]` property are only present on the inner div, *not* on the enclosing generated `ng-template`.\r\n\r\nPreviously, Template Pipeline would place these bindings on *both* the tempate and the inner element.\r\n\r\nHowever, we can't just remove them completely, because these bindings should still be matchable on the generated `ng-template` (which is very surprising, but nonetheless true).\r\n\r\nWe resolve this issue with two improvements:\r\n(1) The ingestion step is now much smarter about determining not only if a binding is on a template element, but whether it actually targets that template element.\r\n(2) We use `ExtractedAttributeOp` directly, rather than going through `BindingOp`, to cause the `ng-template` to still receive these bindings in its `consts` array for matching purposes.","Url":"https://github.com/angular/angular/pull/51963","RelatedDescription":"Open PR \"Template Pipeline: Don't emit properties on structural `ng-template`s\" (#51963)"},{"Id":"1919974747","IsPullRequest":true,"CreatedAt":"2023-09-29T22:23:59","Actor":"angular-robot","Number":"51962","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51962","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51962)"},{"Id":"1919689807","IsPullRequest":true,"CreatedAt":"2023-09-29T22:23:04","Actor":"angular-robot","Number":"51959","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51959","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51959)"},{"Id":"1919929277","IsPullRequest":true,"CreatedAt":"2023-09-29T21:28:24","Actor":"dylhunn","Number":"51961","RawContent":null,"Title":"refactor(compiler): Fix `pipeBinding` variable offsets in template pipeline","State":"open","Body":"This is a deceptively simple fix for a deep issue. Consider the following template:\r\n\r\n```\r\n<button [title]=\"myTitle\" [id]=\"(auth().identity() | async)\" [tabindex]=\"1\">\r\n```\r\n\r\n`TemplateDefinitionBuilder` allocates the following variable (binding) slots:\r\n\r\nv[0] = [title] binding\r\nv[1] = [id] binding\r\nv[2] = [tabindex] binding\r\nv[3] = pipe binding\r\nv[4] = pipe binding\r\n\r\nAs you can see, all three top-level property bindings were assigned variable indices. Then, variables for nested expressions were assigned.\r\n\r\nBefore this change, Template Pipeline would choose the following order:\r\n\r\nv[0] = [title] binding\r\nv[1] = [id] binding\r\nv[2] = pipe binding\r\nv[3] = pipe binding\r\nv[4] = [tabindex] binding\r\n\r\nWith this order, nested expressions have their variables counted and assigned before subsequent top-level property bindings. This results in different variable indices for `pipeBinding` expressions that are not inside the final property binding.\r\n\r\nHowever, this is not just different -- it's actually incorrect! Consider a case like the following:\r\n\r\n```\r\n<button [p1]=\"c ? (a | pipe) : 3\" [p2]=\"b | pipe\">\r\n```\r\n\r\nThese pipe bindings are executed *conditionally*. This means that, because we don't count and assign all the \"fixed\" variable slots first, i.e. those belonging to the property bindings, their indices might end up incorrect, depending on whether or not a pipeBinding happened as part of the update block.\r\n\r\nWith this change, we count all variables on top-level ops first, and then descend into all expressions.\r\n","Url":"https://github.com/angular/angular/pull/51961","RelatedDescription":"Open PR \"refactor(compiler): Fix `pipeBinding` variable offsets in template pipeline\" (#51961)"},{"Id":"1919821243","IsPullRequest":true,"CreatedAt":"2023-09-29T19:47:37","Actor":"JeanMeche","Number":"51960","RawContent":null,"Title":"fix(service-worker): throw a critical error when handleFetch fails","State":"open","Body":"#51885 patched a call site that threw an error but there were 2 others calls that needed to be wrapped in the same way by a try/catch.\r\n\r\n`initializeFully` is part of the calls in `responseWith(handleFetch)`.\r\n\r\nSame #51885, throwing `SwCriticalError`allows the driver to fallback to `safeFetch` and ensure `responseWith` doesn't fail.\r\n\r\nFixes #50378\r\n","Url":"https://github.com/angular/angular/pull/51960","RelatedDescription":"Open PR \"fix(service-worker): throw a critical error when handleFetch fails\" (#51960)"},{"Id":"1919528660","IsPullRequest":true,"CreatedAt":"2023-09-29T15:51:14","Actor":"Cadienvan","Number":"51958","RawContent":null,"Title":"docs: fixing typo in BAZEL.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n_analyze_ is being spelled as _analyse_ in BAZEL.md\r\n\r\n\r\n## What is the new behavior?\r\n_analyze_ is being spelled as _analyze_ in BAZEL.md\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nJust a typo, wanted to be of help :)","Url":"https://github.com/angular/angular/pull/51958","RelatedDescription":"Closed or merged PR \"docs: fixing typo in BAZEL.md\" (#51958)"},{"Id":"1919475597","IsPullRequest":true,"CreatedAt":"2023-09-29T15:21:44","Actor":"josephperrott","Number":"51957","RawContent":null,"Title":"ci: migrate snapshot publishing from CircleCI to GHA","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/51957","RelatedDescription":"Open PR \"ci: migrate snapshot publishing from CircleCI to GHA\" (#51957)"},{"Id":"1919457942","IsPullRequest":true,"CreatedAt":"2023-09-29T15:12:46","Actor":"josephperrott","Number":"51956","RawContent":null,"Title":"ci: add slack messages for failed aio deployments","State":"open","Body":"Send message to to slack when aio fails to deploy\r\n","Url":"https://github.com/angular/angular/pull/51956","RelatedDescription":"Open PR \"ci: add slack messages for failed aio deployments\" (#51956)"},{"Id":"1919436424","IsPullRequest":true,"CreatedAt":"2023-09-29T15:03:41","Actor":"angular-robot","Number":"51955","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.","Url":"https://github.com/angular/angular/pull/51955","RelatedDescription":"Open PR \"docs: update events\" (#51955)"},{"Id":"1919055239","IsPullRequest":false,"CreatedAt":"2023-09-29T11:21:13","Actor":"Xriuk","Number":"51954","RawContent":null,"Title":"host-context() styling applied to host too","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen applying some styling through :host-context() like this:\r\n```css\r\n:host-context(.active) {\r\n  color: #f00;\r\n}\r\n```\r\n\r\nThe generated css becomes:\r\n```css\r\n.active[_nghost-ng-c460829164], .active [_nghost-ng-c460829164] {\r\n  color: #f00;\r\n}\r\n```\r\n\r\nWhich effectively applies it in case the host component has the given class too\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-vr9fny?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n16.0.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51954","RelatedDescription":"Closed issue \"host-context() styling applied to host too\" (#51954)"},{"Id":"1919028059","IsPullRequest":false,"CreatedAt":"2023-09-29T11:06:14","Actor":"ram450-dot","Number":"51953","RawContent":null,"Title":"Delay UI issues and console errors","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHi,\r\n\r\nwe observed a delay issue while browsing applications in Chrome, Edge, and Firefox.\r\n\r\nBelow are the console errors observed. attached is the screenshot. request you to review and let us know the possible cause for the behaviour.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError with Feature-Policy header: Unrecognized feature: 'ambient-light-sensor'.\r\nError with Feature-Policy header: Unrecognized feature: 'battery'.\r\nError with Feature-Policy header: Unrecognized feature: 'document-domain'.\r\nError with Feature-Policy header: Unrecognized feature: 'navigation-override'.\r\nError with Feature-Policy header: Unrecognized feature: 'speaker'.\r\nDevTools failed to load source map: Could not load content for chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/atoms.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\r\nDevTools failed to load source map: Could not load content for chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/polyfills.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\r\nDevTools failed to load source map: Could not load content for chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/escape.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\r\nDevTools failed to load source map: Could not load content for chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/playback.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\r\nDevTools failed to load source map: Could not load content for chrome-extension://mooikfkahbdckldjjndioackbalphokd/assets/record.js.map: System error: net::ERR_BLOCKED_BY_CLIENT\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n![image](https://github.com/angular/angular/assets/84800237/525c2162-c97d-4027-8da4-2012d68dea22)\r\n","Url":"https://github.com/angular/angular/issues/51953","RelatedDescription":"Closed issue \"Delay UI issues and console errors\" (#51953)"},{"Id":"1918980269","IsPullRequest":true,"CreatedAt":"2023-09-29T10:03:06","Actor":"crisbeto","Number":"51952","RawContent":null,"Title":"fix(compiler): narrow the type of the aliased if block expression","State":"open","Body":"Currently the TCB for aliased `if` blocks looks something like this:\r\n\r\n```\r\n// Markup: `@if (expr; as alias) { {{alias}} }\r\n\r\nif (block.condition) {\r\n  var alias = block.condition;\r\n  \"\" + alias;\r\n}\r\n```\r\n\r\nThe problem with this approach is that the type of `alias` won't be narrowed. This is something that `NgIf` currently supports.\r\n\r\nThese changes resolve the issue by emitting the variable outside the `if` block and using the variable reference instead:\r\n\r\n```\r\n// Markup: `@if (expr; as alias) { {{alias}} }\r\n\r\nvar alias = block.condition;\r\nif (alias) {\r\n  \"\" + alias;\r\n}\r\n```","Url":"https://github.com/angular/angular/pull/51952","RelatedDescription":"Open PR \"fix(compiler): narrow the type of the aliased if block expression\" (#51952)"},{"Id":"1918554400","IsPullRequest":true,"CreatedAt":"2023-09-29T03:53:46","Actor":"MrJithil","Number":"51951","RawContent":null,"Title":"feat(common): add height config support in image loaders","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently, the image loaders like Cloudflare Image Resizing, Cloudinary, ImageKit and Imgix does not support a `height` property configuration.\r\n\r\nIssue Number: #51723 \r\n\r\n\r\n## What is the new behavior?\r\nAdded a change which enables the users to specify the height property while using image loader. \r\n\r\nTwo below changes addressed in this PR\r\n- Modify the interface `ImageLoaderConfig` for adding optional support of `height`.\r\n- Modify the loaders to support the `height` property if provided.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51951","RelatedDescription":"Open PR \"feat(common): add height config support in image loaders\" (#51951)"},{"Id":"1918424586","IsPullRequest":true,"CreatedAt":"2023-09-29T00:13:28","Actor":"dylhunn","Number":"51950","RawContent":null,"Title":"Template Pipeline: Fix and enable a couple misc tests related to temporaries, `ng-template`, and `!important`","State":"open","Body":"A couple minor fixes allow us to enable assorted tests. See individual commits for details.","Url":"https://github.com/angular/angular/pull/51950","RelatedDescription":"Open PR \"Template Pipeline: Fix and enable a couple misc tests related to temporaries, `ng-template`, and `!important`\" (#51950)"},{"Id":"1918421558","IsPullRequest":false,"CreatedAt":"2023-09-29T00:08:02","Actor":"pcbowers","Number":"51949","RawContent":null,"Title":"`toSignal` breaks Change Detection on Errors","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen you have an observable that uses the `catchError` operator to update state when it errors, and when you convert said observable to a signal, then change detection fails after an error is thrown (i.e. the state that is updated by the `catchError` operator is not visible even after it is changed). If you use the async pipe on the observable (`{{ observableData | async }}`) instead of using the signal, it works without any additional error handling. After converting to a signal, you are forced to pipe to an additional catchError that converts the error into a value. I've provided a minimum example below that illustrates the problem:\r\n\r\n```ts\r\nimport { NgModule, Component, Input } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { Observable, catchError, throwError, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<div>{{ property }} | {{ signalData() }}</div>\r\n    <app-child [property]=\"property\"></app-child>`,\r\n})\r\nexport class AppComponent {\r\n  property = 'No Errors';\r\n\r\n  observableData = new Observable<string>((observer) => {\r\n    observer.next('value 1');\r\n    setTimeout(() => observer.next('value 2'), 500);\r\n    setTimeout(() => observer.next('value 3'), 1000);\r\n    setTimeout(() => observer.error(new Error('error')), 1500);\r\n  }).pipe(\r\n    catchError((error) => {\r\n      console.info('setting property...');\r\n      this.property = 'Error Caught';\r\n      return throwError(() => error);\r\n    }),\r\n  );\r\n\r\n  signalData = toSignal(this.observableData);\r\n\r\n  // Uncomment the below and comment the above to see a working solution\r\n  // Ideally, this wouldn't be necessary\r\n\r\n  // signalData = toSignal(\r\n  //   this.observableData.pipe(catchError(() => of('error'))),\r\n  // );\r\n}\r\n\r\n@Component({\r\n  selector: 'app-child',\r\n  template: `<div>{{ property }}</div>`,\r\n})\r\nexport class ChildComponent {\r\n  @Input()\r\n  property!: string;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ChildComponent],\r\n  imports: [BrowserModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nSee the attached link to a code sandbox to view the bug in your browser.\r\n\r\nA little bit more info: On errors, we dynamically create a component that shows the error message. While the component was created and visible in the dom with the correct template structure, all the component properties embedded in the template only showed their default values, even though we could see the data in the constructor when debugging. After looking around, we noticed that the OnInit lifecycle hook never ran, which we relied on to set our data. When we moved the data into the constructor and forced a change detection cycle manually, it started showing the data in the template, as desired. Triggering a change detection cycle manually did not trigger the OnInit lifecycle hook, but it did make our properties visible in the component.\r\n\r\nMy guess? When a signal throws an error, any changes that haven't been processed yet before the signal errored aren't ever processed. This fits with what we were seeing in our own project. While it is simple enough to handle errors, it would be nice if it didn't break change detection if we forget to handle them.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://codesandbox.io/p/sandbox/angular-16-change-detection-signals-bug-3tcgcc?file=%2Fsrc%2Fapp%2Fapp.module.ts%3A1%2C1\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNo error/exception\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.4\r\nNode: 18.15.0\r\nPackage Manager: npm 9.8.1\r\nOS: linux x64\r\n\r\nAngular: 16.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.4\r\n@angular-devkit/build-angular   16.2.4\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cdk                    16.2.6\r\n@angular/cli                    16.2.4\r\n@angular/material               16.2.6\r\n@schematics/angular             16.2.4\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n![Using signalData without the additional catchError](https://github.com/angular/angular/assets/41601975/fc3bef94-8e75-44c6-aaf0-8bbbae8245b9)\r\n![Using signalData with the additional catchError](https://github.com/angular/angular/assets/41601975/796d0779-4372-43f3-8984-4dac8177ef99)\r\n","Url":"https://github.com/angular/angular/issues/51949","RelatedDescription":"Open issue \"`toSignal` breaks Change Detection on Errors\" (#51949)"},{"Id":"1918401673","IsPullRequest":true,"CreatedAt":"2023-09-28T23:39:54","Actor":"Gkleinereva","Number":"51948","RawContent":null,"Title":"docs: add warning for localhost proxy","State":"open","Body":"Our team ran into the problem documented in https://github.com/angular/angular/issues/50121.  This seems to warrant a call-out in the documentation to us.  I thought a PR might be a good way to bring the issue up again!  :)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nProxying backend requests to `http://localhost:<port>` can fail, and there's no mention of this in the proxy documentation.\r\n\r\nIssue Number: 50121\r\n\r\n\r\n## What is the new behavior?\r\nThe documentation now provides users a path forward if they encounter this problem.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51948","RelatedDescription":"Open PR \"docs: add warning for localhost proxy\" (#51948)"},{"Id":"1918304148","IsPullRequest":true,"CreatedAt":"2023-09-28T21:33:40","Actor":"pmvald","Number":"51947","RawContent":null,"Title":"fix(compiler-cli): handle nested qualified names in ctor injection in…","State":"open","Body":"… local compilation mode\r\n\r\nThe current implementation assumes a qualified name consists of just two identifier, e.g., Foo.Bar. However it can be more nested, like Foo.Bar.Baz.XX.YY. While such nested patterns are quite uncommon and devs mostly just use two identifier here, the TS compiler seems to throw error if we make such assumption and it broke quite a lot of targets in g3 when compiled in local mode. So here we handle this nested property of qualified names.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51947","RelatedDescription":"Open PR \"fix(compiler-cli): handle nested qualified names in ctor injection in…\" (#51947)"},{"Id":"1918099405","IsPullRequest":true,"CreatedAt":"2023-09-28T18:59:34","Actor":"josephperrott","Number":"51945","RawContent":null,"Title":"ci: migrate saucelabs bazel job to Github Actions","State":"open","Body":"Use Github Actions to run saucelabs bazel jobs\r\n","Url":"https://github.com/angular/angular/pull/51945","RelatedDescription":"Open PR \"ci: migrate saucelabs bazel job to Github Actions\" (#51945)"},{"Id":"1917446118","IsPullRequest":true,"CreatedAt":"2023-09-28T12:34:01","Actor":"tomalaforge","Number":"51944","RawContent":null,"Title":"feat(resource): add angular challenges to the documentation community section","State":"open","Body":"On the Angular website, community section, eduction tab, I would like to add if possible a link to the angular challenge project.\r\n\r\nI don't know if \"online training\" is the right section.\r\n","Url":"https://github.com/angular/angular/pull/51944","RelatedDescription":"Open PR \"feat(resource): add angular challenges to the documentation community section\" (#51944)"},{"Id":"1916870690","IsPullRequest":true,"CreatedAt":"2023-09-28T08:31:08","Actor":"MicahThierry","Number":"51943","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51943","RelatedDescription":"Closed or merged PR \"Update README.md\" (#51943)"},{"Id":"1916745951","IsPullRequest":true,"CreatedAt":"2023-09-28T05:35:15","Actor":"dylhunn","Number":"51942","RawContent":null,"Title":"Template Pipeline: support `defer` blocks","State":"open","Body":" Add support for `@defer` to the template pipeline. Rebased on top of #51931. See individual commits for details.","Url":"https://github.com/angular/angular/pull/51942","RelatedDescription":"Open PR \"Template Pipeline: support `defer` blocks\" (#51942)"},{"Id":"1916514888","IsPullRequest":false,"CreatedAt":"2023-09-28T00:08:04","Actor":"crutchcorn","Number":"51941","RawContent":null,"Title":"`@try`/`@catch` Control Flow ","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon, compiler-cli, compiler, core\r\n\r\n### Description\r\n\r\ntl;dr: I am proposing a new `@try`/`@catch` [control flow](https://github.com/angular/angular/discussions/50719) to catch errors that occur in Angular component's `constructor` method.\r\n\r\n```html\r\n@try {\r\n\t<error-throwing-component/>\r\n} @catch (e: any) {\r\n\t<handle-error [error]=\"e\"/>\r\n}\r\n```\r\n\r\n_**A longer-form blog post explaining this problem and the solution can be found here**_: [https://unicorn-utterances.com/posts/angular-constructor-error-behavior](https://unicorn-utterances.com/posts/angular-constructor-error-behavior)\r\n\r\n# The problem\r\n\r\nWhen rendering the following:\r\n\r\n```typescript\r\nimport 'zone.js/dist/zone';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'throw-an-error',\r\n  standalone: true,\r\n  template: `<p>🙈</p>`,\r\n})\r\nclass ErrorComponent {\r\n  constructor() {\r\n    throw 'This is an error';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [ErrorComponent],\r\n  template: `\r\n    <p>Before</p>\r\n    <!-- Try hiding and showing this line -->\r\n    <throw-an-error/>\r\n    <!-- This never shows up -->\r\n    <p>After</p>\r\n  `,\r\n})\r\nclass AppComponent {}\r\n\r\nbootstrapApplication(AppComponent);\r\n```\r\n\r\nThe `<p>Before</p>` renders, but the `<throw-an-error/>` does not. Confusingly (to many), the `<p>After</p>` does not render either. This is because Angular's template compiler doesn't wrap component instances in a `try/catch`, which leads to the error propagating upward and breaking any UI rendering past the thrown `constructor` error.\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\n# The proposed solution\r\n\r\nTo solve for this issue, I'd like to propose (**and offer to implement**) the following syntax:\r\n\r\n```html\r\n@try {\r\n\t<error-throwing-component/>\r\n} @catch (e: any) {\r\n\t<handle-error [error]=\"e\"/>\r\n}\r\n```\r\n\r\nWhich would allow us to catch any `constructor` errors while allowing the rest of the components to be rendered as-expected. I would reasonably expect this to be compiled to some pseudo-code akin to:\r\n\r\n```javascript\r\nlet attemptedRender = null;\r\ntry {\r\n\tattemtedRender = renderComponent(ErrorThrowingComponent)\r\n} catch (e) {\r\n\tcleanup(attemptedRender)\r\n\trender(HandleErrorComponent, {inputs: {error: e}})\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\n# Userland solutions\r\n\r\nWhile `<component/>` wouldn't be able to recover from the error in runtime, it's possible to wrap this component in a `try/catch` block by moving it to a `ViewContainerRef` `createComponent` call:\r\n\r\n```typescript\r\n@Component({\r\n  selector: 'error-catcher',\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  template: `\r\n  <div *ngIf=\"error\">\r\n    <h1>There was an error</h1>\r\n  </div>\r\n  <ng-template #compTemp></ng-template>\r\n  `,\r\n})\r\nclass ErrorCatcher implements OnInit {\r\n  @ViewChild('compTemp') compTemp!: TemplateRef<any>;\r\n  @Input({ required: true }) comp!: any;\r\n\r\n  containerRef = inject(ViewContainerRef);\r\n\r\n  error: any = null;\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.containerRef.createComponent(this.comp);\r\n    } catch (e) {\r\n      this.error = e;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [ErrorCatcher],\r\n  template: `\r\n    <p>Before</p>\r\n    <error-catcher [comp]=\"comp\"/>\r\n    <p>After</p>\r\n  `,\r\n})\r\nclass AppComponent {\r\n  comp = ErrorComponent;\r\n}\r\n```\r\n\r\nWe can even expand this functionality to accept inputs and handle outputs mostly as expected:\r\n\r\n[Demo StackBlitz showing a user-land fix to the error boundary problem](https://stackblitz.com/edit/angular-error-boundary-userland-poc?embed=1&file=src%2Fmain.ts)\r\n\r\n[Alternative demo using a structural directive instead](https://stackblitz.com/edit/angular-error-boundary-userland-poc-warktp?file=src%2Fmain.ts,src%2Fon-error.directive.ts)\r\n\r\nHowever, this comes with substancial issues:\r\n\r\n- The syntax and tooling are not consistent with other Angular components\r\n- Outputs and inputs are very loose typings now, which may lead to _more_ bugs, not less\r\n- Outputs are not bound in the same way, requiring weird `switch/case` style coding and manually typing\r\n\r\n# Prior art\r\n\r\nThis idea was directly inspired by [React's `ErrorBoundary` system](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary), which similarly handles errors thrown during the render function.\r\n\r\n> Note that neither this proposal, nor React's `ErrorBoundary` handle errors that occur in event handlers, only the runtime.\r\n\r\n```jsx\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // Example \"componentStack\":\r\n    //   in ComponentThatThrows (created by App)\r\n    //   in ErrorBoundary (created by App)\r\n    //   in div (created by App)\r\n    //   in App\r\n    logErrorToMyService(error, info.componentStack);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return this.props.fallback;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// ...\r\n\r\n<ErrorBoundary fallback={<p>Something went wrong</p>}>\r\n  <Profile />\r\n</ErrorBoundary>\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/51941","RelatedDescription":"Open issue \"`@try`/`@catch` Control Flow \" (#51941)"},{"Id":"1916485663","IsPullRequest":false,"CreatedAt":"2023-09-27T23:36:33","Actor":"Den-dp","Number":"51940","RawContent":null,"Title":"NgForm stops tracking the value of an eagerly rendered NgModel control if it has been \"swapped\" using ng-template via an equally named but lazy rendered one","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nforms\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nSwitching between eager and lazy-loaded (ng-template) material tabs both of which have equally named NgModel control, makes ngForm stop tracking the value/validity of the first control.\r\n\r\n```html\r\n<form #form=\"ngForm\">\r\n\r\n  <mat-tab-group>\r\n\r\n    <mat-tab label=\"eager tab with lightweight editor\">\r\n      <input [(ngModel)]=\"model.foo\" name=\"foo\" />\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"lazy tab with heavy editor\">\r\n      <ng-template matTabContent>\r\n        <!-- heavy lazy-loaded visualization for the same model -->\r\n        <input [(ngModel)]=\"model.foo\" name=\"foo\" />\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n</form>\r\n\r\n<pre>form.value: {{ form.value | json }}</pre>\r\n```\r\n\r\nMore detailed steps in my stackblitz\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/ngform-issue-with-ngmodel?file=src%2Fapp.component.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\nhttps://github.com/angular/angular/assets/1770529/a22a03a0-871f-415f-acf9-9bfff1ef1a09\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nI tried it with both angular 13 and 16.1.1\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51940","RelatedDescription":"Open issue \"NgForm stops tracking the value of an eagerly rendered NgModel control if it has been \"swapped\" using ng-template via an equally named but lazy rendered one\" (#51940)"},{"Id":"1916457690","IsPullRequest":true,"CreatedAt":"2023-09-27T23:04:13","Actor":"robertIsaac","Number":"51939","RawContent":null,"Title":"feat(router): Add `Route.tags` with a configurable `TagsStrategy`","State":"open","Body":"This commit provides a service, `PageTagsStrategy` for setting the document tags after a successful router navigation. Users can provide custom strategies by extending `TagsStrategy` and adding a provider which overrides it. The strategy takes advantage of the pre-existing `data` and `resolve` concepts in the Router implementation:\r\n  We can copy the `Route.tags` into `data`/`resolve` in a non-breaking way by using a `symbol` as the key.\r\n  This ensures that we do not have any collisions with pre-existing property names. By using `data` and `resolve`, we do not have to add anything more to the router navigation pipeline to support this feature.\r\n\r\nCloses #44928\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nyou have to use the Meta Service to provide tags\r\n\r\nIssue Number: #44928\r\n\r\n\r\n## What is the new behavior?\r\nyou can set the tags in the routing directly\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51939","RelatedDescription":"Open PR \"feat(router): Add `Route.tags` with a configurable `TagsStrategy`\" (#51939)"},{"Id":"1916423055","IsPullRequest":false,"CreatedAt":"2023-09-27T22:25:51","Actor":"Nikovic","Number":"51938","RawContent":null,"Title":"Problems with Signal of Map/Map Iterator ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI'm trialing Signals in an application I'm building, and I came across the following:\r\nIn a component, I have a signal of a Map, `map = signal(new Map<string, number>())`. I somehow fill the map (in the reproduction, with `mutate` in the component constructor).\r\n\r\nWhen I iterate over it in the template using `*ngFor=\"let id of map().keys()\"`, I get NG0100: ExpressionChangedAfterItHasBeenCheckedError. That alone is unexpected to me, I'm not doing any of the things that the documentation says may cause that error.\r\n\r\nIn trying to get rid of that error, I created `keys = computed(() => map().keys())`\r\nIterating over _that_ with `*ngFor=\"let id of keys()\"` gives... nothing. The Iterator is always \"empty\". This seems like a clear bug to me.\r\n\r\nI found I could circumvent both problems with `keys2 = computed(() => [...map().keys())]` and `*ngFor=\"let id of keys2()`. I assume however that this comes with a performance penalty. In the actual application I'm building, performance will likely be an issue, so I'd prefer not to have to rely on that workaround.\r\n\r\nBest regards,\r\nNiki Herl\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-bt1rkd?file=src%2Fapp%2Fapp.component.html,src%2Fapp%2Fapp.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNG0100: ExpressionChangedAfterItHasBeenCheckedError\r\n\r\nor the map iterator being empty (\"Map Iterator {  }\")\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.3\r\nNode: 18.17.1\r\nPackage Manager: npm 10.0.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51938","RelatedDescription":"Open issue \"Problems with Signal of Map/Map Iterator \" (#51938)"},{"Id":"1916294160","IsPullRequest":true,"CreatedAt":"2023-09-27T21:00:04","Actor":"dylhunn","Number":"51937","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51937","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#51937)"},{"Id":"1916271985","IsPullRequest":true,"CreatedAt":"2023-09-27T20:31:27","Actor":"dylhunn","Number":"51936","RawContent":null,"Title":"docs: release notes for the v16.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/51936","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.7 release\" (#51936)"},{"Id":"1916268225","IsPullRequest":true,"CreatedAt":"2023-09-27T20:28:36","Actor":"dylhunn","Number":"51935","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51935","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#51935)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1918973850","IsPullRequest":false,"CreatedAt":"2023-09-29T16:47:40","Actor":"eneajaho","Number":"25924","RawContent":null,"Title":"Component ID generation collision detected is thrown after first change when running default angular installation","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nComponent ID generation collision detected is thrown after first change when running default angular installation\n\n### Minimal Reproduction\n\n1. npm create @angular@next \r\n2. Choose ssr to be enabled\r\n3. ng serve\r\n4. change app component html -> no warning\r\n5. change app component html again -> warning is shown in console\r\n\r\n![CleanShot 2023-09-29 at 11 56 57@2x](https://github.com/angular/angular-cli/assets/25394362/0167ebf0-9f7a-49a3-b9cf-99b2437b087a)\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25924","RelatedDescription":"Closed issue \"Component ID generation collision detected is thrown after first change when running default angular installation\" (#25924)"},{"Id":"1919107260","IsPullRequest":true,"CreatedAt":"2023-09-29T16:47:39","Actor":"alan-agius4","Number":"25927","RawContent":null,"Title":"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR","State":"closed","Body":"\r\n\r\nThis commit clean ups the compiled components state when the build is being executed in watch mode. This is required as otherwise during development `Component ID generation collision detected` are displayed on the server.\r\n\r\nCloses: #25924\r\n","Url":"https://github.com/angular/angular-cli/pull/25927","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR\" (#25927)"},{"Id":"1919446068","IsPullRequest":false,"CreatedAt":"2023-09-29T15:19:55","Actor":"Potapich","Number":"25929","RawContent":null,"Title":"No matching version found for @angular-devkit/core@16.2.4","State":"closed","Body":"### Command\n\nversion\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.2\n\n### Description\n\nnpm install -g @angular/cli@latest\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\r\n\n\n### Minimal Reproduction\n\ntry to install in terminal:\r\nnpm install -g @angular/cli@latest\r\n\r\noutput error is:\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\non version 16.2.2 works fine\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25929","RelatedDescription":"Closed issue \"No matching version found for @angular-devkit/core@16.2.4\" (#25929)"},{"Id":"1919258672","IsPullRequest":true,"CreatedAt":"2023-09-29T13:49:53","Actor":"cexbrayat","Number":"25928","RawContent":null,"Title":"fix(@schematics/angular): use @types/node v18","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, running a schematics that adds `@types/node` to a project, like `ng add @angular/ssr`, will add the v16 types. \r\n\r\n## What is the new behavior?\r\n\r\nAs nodejs v16 is now EOL, this PR updates the types to v18.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25928","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): use @types/node v18\" (#25928)"},{"Id":"1919085366","IsPullRequest":true,"CreatedAt":"2023-09-29T11:42:45","Actor":"alan-agius4","Number":"25926","RawContent":null,"Title":"test(@angular/cli): remove Safari 15 test","State":"closed","Body":"Safari v15 is longer included in the default browserlist configuration of CLI apps.\r\n","Url":"https://github.com/angular/angular-cli/pull/25926","RelatedDescription":"Closed or merged PR \"test(@angular/cli): remove Safari 15 test\" (#25926)"},{"Id":"1919050019","IsPullRequest":false,"CreatedAt":"2023-09-29T11:09:33","Actor":"nikita-fuchs","Number":"25925","RawContent":null,"Title":"ng update assumes incorrect version present","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAfter a failed run of `ng update`, successive runs will assume the presence of the version I tried updating to.\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` It basically forgets about the current project not being updated yet and the migration scripts it still needs to run: \r\n```\r\n$ cat package.json \r\n...\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^12.2.18\",\r\n    \"@angular-devkit/core\": \"^16.2.4\",\r\n    \"@angular/animations\": \"^11.2.14\",\r\n    \"@angular/cli\": \"~11.2.19\",\r\n    \"@angular/common\": \"^11.2.14\",\r\n    \"@angular/compiler\": \"^11.2.14\",\r\n    \"@angular/compiler-cli\": \"^11.2.14\",\r\n    \"@angular/core\": \"^11.2.14\",\r\n    \"@angular/forms\": \"^11.2.14\",\r\n    \"@angular/language-service\": \"^11.2.14\",\r\n    \"@angular/platform-browser\": \"^11.2.14\",\r\n    \"@angular/platform-browser-dynamic\": \"^11.2.14\",\r\n    \"@angular/router\": \"^11.2.14\",\r\n    \"@types/extend\": \"^3.0.0\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"@types/prismjs\": \"~1.4.18\",\r\n    \"bowser\": \"^1.7.2\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"date-fns\": \"2.0.0-alpha.1\",\r\n    \"element-closest\": \"^2.0.2\",\r\n    \"extend\": \"^3.0.1\",\r\n    \"fs-extra\": \"^5.0.0\",\r\n    \"is-ua-webview\": \"^1.0.0\",\r\n    \"jasmine-core\": \"~3.8.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"karma-min-reporter\": \"^0.1.0\",\r\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\r\n    \"karma-remap-istanbul\": \"~0.4.0\",\r\n    \"ng-packagr\": \"^11.2.4\",\r\n    \"popper.js\": \"^1.14.0\",\r\n    \"prismjs\": \"^1.29.0\",\r\n    \"rxjs\": \"^6.6.7\",\r\n    \"ts-node\": \"~5.0.1\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.0.8\",\r\n    \"web-animations-js\": \"^2.3.2\",\r\n    \"zone.js\": \"~0.10.2\"\r\n  }\r\n}%     \r\n```\r\n\r\nBonus: I think angular CLI is so excited to be updated globally (which makes no sense when just trying to upgrade a project) that it totally forgets to check if the angular project you're in  right now actually needs an upgrade ?\r\n\r\n```\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n\r\nnone of which actually applies to the project of course.\r\n\r\n### Minimal Reproduction\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` although \r\n\r\n### Exception or Error\r\n\r\n```text\r\nPackage '@angular/cli' is already up to date.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nThis was installed trying to upgrade the above mentioned project.\r\n\r\n\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25925","RelatedDescription":"Closed issue \"ng update assumes incorrect version present\" (#25925)"},{"Id":"1918785653","IsPullRequest":false,"CreatedAt":"2023-09-29T08:41:24","Actor":"nblaudez","Number":"25923","RawContent":null,"Title":"Angular SSR - ReferenceError : window is not defined","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nI use Angular for my application. I'm able to build for web and ssr but i have this error when i run : npm run serve:ssr:\r\n\r\n\"ReferenceError: window is not defined\"\r\n\n\n### Minimal Reproduction\n\n\r\nI have added this code in my server.ts\r\n\r\nconst mocks = require('mock-browser').delegates.AbstractBrowser;\r\nconst MockBrowser = mocks.MockBrowser;\r\nconst mock = new MockBrowser();\r\n(global as any).document = mock.getDocument();\r\n(global as any).navigator = mock.getNavigator();\r\n(global as any).window = mock.getWindow();\r\n(global as any).WebSocket = require('ws');\r\n(global as any).XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\r\nDoes someone can help me ?\n\n### Exception or Error\n\n```text\nReferenceError: window is not defined\r\n    at 18214 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5591033)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 12643 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5563889)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 20783 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:3091734)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 30097 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:694)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 96846 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:39497)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.0.6\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: npm 9.6.7\r\nOS: linux x64\r\n\r\nAngular: 16.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.0.6\r\n@angular/cdk                    16.2.2\r\n@angular/cli                    16.0.6\r\n@angular/material               16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25923","RelatedDescription":"Closed issue \"Angular SSR - ReferenceError : window is not defined\" (#25923)"},{"Id":"1918150648","IsPullRequest":false,"CreatedAt":"2023-09-29T06:13:57","Actor":"rcsilva83","Number":"25920","RawContent":null,"Title":"Enable a way to update packages that depend on Angular when `ng update` is ran","State":"closed","Body":"### Command\n\nupdate\n\n### Description\n\nOn an Angular application we always use packages that depend on Angular, like `ng-bootstrap`. These libraries often have specific versions for each Angular version. In the case o `ng-bootstrap`, you have to use v14.x.x for Angular 15 and v15.x.x for Angular 16, but these dependencies must be manually updated and migrated when we update Angular.\n\n### Describe the solution you'd like\n\nIt would be awesome if `ng update` could also update and migrate code from these external packages the same way if does for Angular components. The could be done by some kind of hook, like the `install` script that gets executed for all dependencies that have it when you `npm install` your application.\r\n\r\nThis should support updating Angular to an older version (`ng update @angular/cli@15 @angular/core@15`), as it would update `ng-bootstrap` to v14 instead of v15 and execute required code migrations for this version.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25920","RelatedDescription":"Closed issue \"Enable a way to update packages that depend on Angular when `ng update` is ran\" (#25920)"},{"Id":"1918239296","IsPullRequest":false,"CreatedAt":"2023-09-29T05:55:13","Actor":"segevfiner","Number":"25921","RawContent":null,"Title":"Use esbuild's support for transforming async/await to generator","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAFAIK Angular CLI is using Babel plugins to transform async/await to generators for zone.js support as that transformation wasn't supported by esbuils. But support has been added https://github.com/evanw/esbuild/issues/2780, which you might be able to use to speed up the build.\r\n\r\nThis is just letting you know, as I requested that feature while playing around with zone.js for a different non Angular based project where I have hit this limitation of zone.js which the Angular CLI hides from you.\n\n### Describe the solution you'd like\n\nUse the native esbuild transform for transforming async/awaitnto generators.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25921","RelatedDescription":"Closed issue \"Use esbuild's support for transforming async/await to generator\" (#25921)"},{"Id":"1918610067","IsPullRequest":true,"CreatedAt":"2023-09-29T05:13:47","Actor":"angular-robot","Number":"25922","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `ab6afbc` -> `2b6350d` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `f731eda` -> `6d3568a` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `2012c27` -> `f19f15f` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b305660` -> `a2b45a9` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `3cf7ced` -> `5167acd` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `b62c956` -> `7721cd5` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a77b580` -> `515c39b` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `16ca005` -> `f3e5232` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `1e66e7e` -> `d0f87da` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `d24d3f7` -> `6212819` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `759f9cf` -> `5aee332` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bfdad92` -> `240e711` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `99ff190` -> `1b623c1` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `f38629b` -> `8e77e2b` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `ba46754` -> `e703ef6` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `9ce8432` -> `66b326e` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `d75d651` -> `ee78d9a` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25922","RelatedDescription":"Open PR \"build: update angular\" (#25922)"},{"Id":"1918039375","IsPullRequest":false,"CreatedAt":"2023-09-28T18:14:00","Actor":"johncrim","Number":"25919","RawContent":null,"Title":"Support multi-project workspaces with jest and karma tests","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nToday one can run `ng test` to run tests across all projects with a configured `test` builder, or `ng test <project>` to run tests in a single project. However if the monorepo contains projects with both jest and karma tests it gets pretty clunky to run both. \r\n\r\nAs Angular moves toward multiple test builders there should be support for running all tests globally for select types of tests.\n\n### Describe the solution you'd like\n\nIdeally `ng test` would run all tests across all projects using all configured test builders, and it would be possible to configure multiple test builders for a single project. And then it would be possible to only run tests for a single test builder using a property, like `ng test --runner=karma`, where the runner value is defined by the builder.\n\n### Describe alternatives you've considered\n\nThe following can be added to angular.json for each project:\r\n```json\r\n\"projects\": {\r\n    \"mylib\": {\r\n      \"projectType\": \"library\",\r\n      \"root\": \"projects/mylib\",\r\n      \"sourceRoot\": \"projects/mylib/src\",\r\n      \"prefix\": \"lib\",\r\n      \"architect\": {\r\n        \"build\": {\r\n...\r\n        },\r\n        \"test-karma\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"tsConfig\": \"projects/mylib/tsconfig.karma-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.karma-spec.ts\"\r\n            ],\r\n            \"codeCoverageExclude\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        },\r\n        \"test-jest\": {\r\n          \"builder\": \"@angular-devkit/build-angular:jest\",\r\n          \"options\": {\r\n            \"tsConfig\": \"tsconfig.jest-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    },\r\n```\r\n\r\nSuch a configuration supports 2 test builders for the project, so `ng mylib:test-karma` and `ng mylib:test-jest` works, but I can no longer `ng test` to run all tests in the workspace. Of course I could avoid leave one of the builder using `test` in all my projects, but it is still a limitation. \r\n\r\nThe current lines in my package.json would have to be updated for each new project. The following is required for only 2 projects, and it would get unwieldy for 15-20 projects:\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test:karma\": \"ng run mylib:test-karma --watch false && ng run myapp:test-karma --watch false\",\r\n    \"test:jest\": \"NODE_NO_WARNINGS=1 ng run mylib:test-jest && NODE_NO_WARNINGS=1 ng run myapp:test-jest\"\r\n```\r\n\r\nThis project (checkout the `dev/jest` branch) provides an example:\r\nhttps://github.com/johncrim/ng16-yarn-pnp/tree/dev/jest\r\n\r\n(Note also that running `yarn test:jest` runs all the jest tests 2x, presumably because the `tsconfig.jest-spec.json` references test files from multiple projects. Obviously this can be fixed with tsconfig files in each project)\r\n","Url":"https://github.com/angular/angular-cli/issues/25919","RelatedDescription":"Open issue \"Support multi-project workspaces with jest and karma tests\" (#25919)"},{"Id":"1916712730","IsPullRequest":true,"CreatedAt":"2023-09-28T15:33:00","Actor":"angular-robot","Number":"25914","RawContent":null,"Title":"build: update github/codeql-action action to v2.21.9","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.8` -> `v2.21.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.9`](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25914","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.21.9\" (#25914)"},{"Id":"1915158238","IsPullRequest":true,"CreatedAt":"2023-09-28T15:32:29","Actor":"alan-agius4","Number":"25903","RawContent":null,"Title":"feat(@angular/ssr): add performance profiler to `CommonEngine`","State":"closed","Body":"This commit adds an option to the `CommonEngine` to enable performance profiling. When enabled, timings of a number of steps will be outputted in the server console.\r\n\r\nExample:\r\n```\r\n********** Performance results **********\r\nRetrieve SSG Page:       0.3ms\r\nRender Page:             25.4ms\r\nInline Critical CSS:     2.3ms\r\n*****************************************\r\n```\r\n\r\nTo enable profiling set `enablePeformanceProfiler: true` in the `CommonEngine` options.\r\n\r\n```ts\r\nconst commonEngine = new CommonEngine({\r\n  enablePeformanceProfiler: true\r\n});\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/25903","RelatedDescription":"Closed or merged PR \"feat(@angular/ssr): add performance profiler to `CommonEngine`\" (#25903)"},{"Id":"1917681749","IsPullRequest":true,"CreatedAt":"2023-09-28T15:32:16","Actor":"cexbrayat","Number":"25917","RawContent":null,"Title":"fix(@schematics/angular): pass `ssr` option to application schematics","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe generated project with `ng new --ssr` has no changes (no extra dependencies, no `server.ts`, no àngualr.json` updates...) using next.6.\r\n\r\n## What is the new behavior?\r\n\r\nRunning `ng new --ssr` will now run the ssr schematics\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25917","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): pass `ssr` option to application schematics\" (#25917)"},{"Id":"1917503191","IsPullRequest":true,"CreatedAt":"2023-09-28T15:31:52","Actor":"alan-agius4","Number":"25916","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor","State":"closed","Body":"\r\nThis commit refactors the route extractor to use the newly `whenStable` API.\r\n","Url":"https://github.com/angular/angular-cli/pull/25916","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor\" (#25916)"},{"Id":"1917726436","IsPullRequest":false,"CreatedAt":"2023-09-28T14:58:26","Actor":"chopswil15","Number":"25918","RawContent":null,"Title":"Ability For Ngr Standard Library To Work Across Different Versions of Ng","State":"closed","Body":"### Command\n\nversion\n\n### Description\n\nIn the .Net world there is .Net Standard, and when you write a .Net Standrd DLL it can work across different versions of .Net without doing anything special and no complaints about version issues.\r\n\r\nI would like to have an Ng Standrd so I can write common code library once and add the library to any Ng version project without it complaining about version issues.\r\n\n\n### Describe the solution you'd like\n\nsee above\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25918","RelatedDescription":"Closed issue \"Ability For Ngr Standard Library To Work Across Different Versions of Ng\" (#25918)"},{"Id":"1917022908","IsPullRequest":false,"CreatedAt":"2023-09-28T08:55:30","Actor":"dev-rajat-bacancy","Number":"25915","RawContent":null,"Title":"unable to check angular version with node hydrogen version","State":"closed","Body":"### Command\n\nadd, build, config, doc, e2e, extract-i18n, generate, help, lint, new, other, run, serve, test, update, version\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nnode 18.12.1\n\n### Description\n\n![image](https://github.com/angular/angular-cli/assets/144689525/778ad759-ed2c-43e1-925e-14fb836e4b1a)\r\n\r\n\r\n![image](https://github.com/angular/angular-cli/assets/144689525/1d971e92-2962-459a-bcb3-06146cba85ef)\r\n\r\n\r\nWhen I update to latest node version 18.18.0 all angular command is not working for any of my angular project.\r\nWhen I am using 18.12.0 everything was working fine.\n\n### Minimal Reproduction\n\nhit any of **ng** command I am facting this issue\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nafter executing any command that start from ng I'm getting this which opens new terminal.\r\n\r\n-----Mg: version                          (fundamental)----All-------------------\r\n(New file)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25915","RelatedDescription":"Closed issue \"unable to check angular version with node hydrogen version\" (#25915)"},{"Id":"1916041098","IsPullRequest":true,"CreatedAt":"2023-09-27T17:40:09","Actor":"cexbrayat","Number":"25913","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support namedChunks option in application builder","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe `application` builder does not support `namedChunks` yet.\r\n\r\n## What is the new behavior?\r\n\r\nThis adds the support of `namedChunks` for the new `application` builder.\r\nIt generates output like the following:\r\n\r\n```\r\nInitial Chunk Files         | Names         |  Raw Size | Estimated Transfer Size\r\nchunk-ACXUMF56.js           | -             |  94.14 kB |                28.25 kB\r\nmain-3WP5KDHR.js            | main          |  71.95 kB |                18.31 kB\r\npolyfills-4UVFGIFL.js       | polyfills     |  32.85 kB |                10.68 kB\r\nchunk-2XJVAMHT.js           | -             | 449 bytes |               449 bytes\r\nstyles-5INURTSO.css         | styles        |   0 bytes |                 0 bytes\r\n\r\n                            | Initial Total | 199.38 kB |                57.68 kB\r\n\r\nLazy Chunk Files            | Names         |  Raw Size | Estimated Transfer Size\r\nabout.component-2PJOS5PM.js | -             | 401 bytes |               401 bytes\r\nhome.component-25UHFOEY.js  | -             | 398 bytes |               398 bytes\r\n```\r\n\r\nThis is really handy to get a glimpse at what a chunk is referring to and be able to analyze it (especially in applications with dozens of chunks).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25913","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support namedChunks option in application builder\" (#25913)"},{"Id":"1915417272","IsPullRequest":true,"CreatedAt":"2023-09-27T16:58:32","Actor":"alan-agius4","Number":"25909","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server","State":"closed","Body":"\r\n\r\nThis commit disables logging `Angular is running in development mode.` when using SSR with vite dev-server. This to avoid polluting the server console with `Angular is running in development mode.` logs for each page load and reload.\r\n\r\nExample:\r\n```\r\nng s\r\n\r\nInitial Chunk Files | Names         | Raw Size\r\nmain.js             | main          | 34.31 kB | \r\npolyfills.js        | polyfills     | 95 bytes | \r\nstyles.css          | styles        | 95 bytes | \r\n\r\n                    | Initial Total | 34.49 kB\r\n\r\nApplication bundle generation complete. [5.205 seconds]\r\n\r\n  ➜  Local:   http://localhost:4200/\r\nWatch mode enabled. Watching for file changes...\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\n```","Url":"https://github.com/angular/angular-cli/pull/25909","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server\" (#25909)"},{"Id":"1915968876","IsPullRequest":false,"CreatedAt":"2023-09-27T16:08:06","Actor":"psarno","Number":"25912","RawContent":null,"Title":"\"ng serve\" requires restart when template error is fixed","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nIf we change a component to a self-closing tag after another error has occured during compilation, it refuses to pick up the changes to the self-closing tag.\r\n\r\nI don't know what area this is in, I chose \"compiler\" because that seemed the closest.\r\n\r\nExample:\r\n\r\nYou call the wrong method in a component:\r\n\r\n`<some-component (onClick)=\"doThis($event)\"></some-component>`\r\n\r\nYou have not declared `doThis(event)`, and save the HTML.\r\n\r\nThe compilation runs, and fails, due to the method not being implemented.\r\n\r\nYou realize this was supposed to call \"doSomething\", and then return to the component to make your changes.  At the same time, you realize it can use Angular 16's new self-closing tags:\r\n\r\n`<some-component (onClick)=\"doSomething($event)\" />`\r\n\r\nYou save this.  The compiler will still error out, stating now that:\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNowhere in the code does it now reference the \"doThis\" mistake.  Everything is saved.\r\n\r\nBut it won't compile anymore.  It requires stopping the \"`ng serve`\" and re-running it.  Then it works fine.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNote \"`doThis`\" does not exist in the HTML anymore.  The file has been saved.  When the compiler runs again, it complains about this.  The HTML now contains `doSomething()`, the correct call.  It is seeing the older version.\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cdk                    16.2.1\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nzone.js                         0.13.1\r\n```\r\n### Anything else?\r\n\r\nNope.","Url":"https://github.com/angular/angular-cli/issues/25912","RelatedDescription":"Open issue \"\"ng serve\" requires restart when template error is fixed\" (#25912)"},{"Id":"1915878868","IsPullRequest":false,"CreatedAt":"2023-09-27T15:53:25","Actor":"cexbrayat","Number":"25911","RawContent":null,"Title":"`application` builder issue with localize","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the application builder, using a component that relies on localize results in an exception, even if localize has been added to the project.\r\n\r\nConsider a route config as follow:\r\n```ts\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n```\r\n\r\n`HomeComponent` uses `NgbPagination` from ng-boostrap, which uses localize.\r\n```html\r\n<ngb-pagination [collectionSize]=\"20\" size=\"lg\"></ngb-pagination>\r\n```\r\n\r\nEven after adding `localize` with `ng add @angular/localize` , the application has a runtime error when displaying the component.\n\n### Minimal Reproduction\n\nclone https://github.com/cexbrayat/i18n-lazy-loading\r\n\r\n```\r\nnpm i\r\nng serve\r\n```\r\n\r\nIf you change the builder to the browser one, then the pagination component correctly displays\n\n### Exception or Error\n\n```text\nERROR Error: Uncaught (in promise): Error: It looks like your application or one of its dependencies is using i18n.\r\nAngular 9 introduced a global `$localize()` function that needs to be loaded.\r\nPlease run `ng add @angular/localize` from the Angular CLI.\r\n(For non-CLI projects, add `import '@angular/localize/init';` to your `polyfills.ts` file.\r\nFor server-side rendering applications add the import to your `main.server.ts` file.)\r\n_global.$localize<@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:22191:11\r\nconsts@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/@ng-bootstrap_ng-bootstrap.js?v=793732a8:18830:17\r\ncreateTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10416:58\r\ngetOrCreateComponentTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10407:24\r\naddComponentLogic@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10…\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@angular/cli                    17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\nThe error goes away when shifting back to the `browser` builder","Url":"https://github.com/angular/angular-cli/issues/25911","RelatedDescription":"Open issue \"`application` builder issue with localize\" (#25911)"},{"Id":"1915633518","IsPullRequest":false,"CreatedAt":"2023-09-27T13:47:49","Actor":"LennonReid","Number":"25910","RawContent":null,"Title":"MacOS ZSH terminal stuck due to ng completion script","State":"open","Body":"### Command\r\n\r\nlint\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm an Angular developer and rely on Nx as my monorepo management tool. Lately, I've encountered an issue where the Nx Console doesn't function as expected. Simultaneously, I've been experiencing a slow initiation of the terminal in VSCode, accompanied by the error message 'Resolving shell environment fails.'\r\n\r\nThis situation prompted me to investigate the possibility of a problem with the environment variables in my .zshrc configuration file. Upon reviewing my user configuration, I suspect that a particular command in my bash file may be causing these issues. I can't recall when I added that command, but I noticed a significant improvement after either removing or commenting out that particular line.\r\n\r\nI've come across a related issue on GitHub at https://github.com/angular/angular-cli/issues/25608. Unfortunately, the discussion there seems a bit confusing, and I'm unable to add any comments.\r\n\r\nAs a result, I've created a new issue to address this problem and offer a solution. This way, we can help others who might be facing the same issue.\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nOpen a new Window on MacOs and this will continue for about 2 minutes. <img width=\"585\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/43192276/0171138b-110e-423a-b994-91c9e8e691c3\">\r\nHere is the related bash config \r\n\r\n```bash\r\n\r\n...\r\n# Load Angular CLI autocompletion.\r\nsource <(ng completion script)\r\n...\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nOS:MacOS Ventura 13.5.2 (Macbook Air Apple M1)\r\nThe result after running `ng version`:\r\nAngular CLI: 16.2.4\r\nNode: 18.16.0\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.4 (cli-only)\r\n@angular-devkit/core         16.2.4 (cli-only)\r\n@angular-devkit/schematics   16.2.4 (cli-only)\r\n@angular/cli                 16.2.4 (cli-only)\r\n@schematics/angular          16.2.4 (cli-only)\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25910","RelatedDescription":"Open issue \"MacOS ZSH terminal stuck due to ng completion script\" (#25910)"},{"Id":"1915334649","IsPullRequest":true,"CreatedAt":"2023-09-27T12:08:42","Actor":"alan-agius4","Number":"25908","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25908","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25908)"},{"Id":"1915317339","IsPullRequest":false,"CreatedAt":"2023-09-27T11:24:01","Actor":"twilker","Number":"25907","RawContent":null,"Title":"Debugging Angular library not possible in application through `npm link`","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI have a standard Angular 16 library and application in two different workspaces / repositories. I link the build library using `npm link` to the application and start it. I would expect to be able to debug the library sources from the application. But it does not work, as it can only debug to the level of the library.mjs. I have tested it with the chrome devtools and VSCode.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Clone the minimal [app](https://github.com/twilker/vs-debug-angular-app) and [library](https://github.com/twilker/vs-debug-angular-library)\r\n2. In the library project execute\r\n```\r\nnpm i\r\nnpm run build\r\ncd ./dist/library\r\nnpm link\r\n```\r\n3. In the app project execute\r\n```\r\nnpm i\r\nnpm link library\r\n```\r\n4. Set breakpoint in app.component.ts L12\r\n5. Start Debugging (F5)\r\n6. Step Into -> leads to library.mjs although a source map exists for this file which would lead to the .ts source file\r\n![mjs-not-resolved](https://github.com/angular/angular-cli/assets/2802526/00f385de-a914-40ea-a0e7-06cfd85bda5f)\r\n\r\n\r\n### Exception or Error\r\n\r\nSee above\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.3\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI have opened another issue for VSCode [here](https://github.com/microsoft/vscode-js-debug/issues/1823). But as it does not work in VSCode and Chrome devtools I assumed the issue is with the Angular setup.","Url":"https://github.com/angular/angular-cli/issues/25907","RelatedDescription":"Closed issue \"Debugging Angular library not possible in application through `npm link`\" (#25907)"},{"Id":"1915232689","IsPullRequest":true,"CreatedAt":"2023-09-27T10:41:48","Actor":"alan-agius4","Number":"25906","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25906","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#25906)"},{"Id":"1915221202","IsPullRequest":true,"CreatedAt":"2023-09-27T10:34:04","Actor":"alan-agius4","Number":"25905","RawContent":null,"Title":"docs: release notes for the v16.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25905","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.4 release\" (#25905)"},{"Id":"1915204046","IsPullRequest":true,"CreatedAt":"2023-09-27T10:32:24","Actor":"alan-agius4","Number":"25904","RawContent":null,"Title":"Bump version to \"v16.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25904","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.4\" with changelog.\" (#25904)"},{"Id":"1910968239","IsPullRequest":true,"CreatedAt":"2023-09-26T18:30:51","Actor":"alan-agius4","Number":"25900","RawContent":null,"Title":"feat(@schematics/angular): generate functional interceptors by default","State":"closed","Body":"This commit updates the interceptor schematic to generate function intererceptors by default.\r\n\r\nBREAKING CHANGE: `ng g interceptor` now generate a functional interceptor by default. or guard by default. To generate a class-based interceptor the `--no-functional` command flag should be used.\r\n","Url":"https://github.com/angular/angular-cli/pull/25900","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): generate functional interceptors by default\" (#25900)"},{"Id":"1913536159","IsPullRequest":false,"CreatedAt":"2023-09-26T14:30:37","Actor":"SandorSzilard","Number":"25902","RawContent":null,"Title":"\"An asset cannot be written to a location outside of the output path\" after update to v16 (16.2.5 && 16.2.6)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nupgrade\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI was trying to update an Angular app to Angular 16 (from Angular 15), but I get the following error after the update process when running `npm run start`:` An unhandled exception occurred: An asset cannot be written to a location outside of the output path.`\r\n\r\nA more detailed error description is:\r\n\r\n```\r\nC:\\**redacted for confidentiality**\\node_modules\\rxjs\\dist\\cjs\\internal\\util\\reportUnhandledError.js:13\r\n            throw err;\r\n            ^\r\n\r\nError: An asset cannot be written to a location outside of the output path.\r\n    at C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-asset-patterns.js:87:19\r\n    at Array.map (<anonymous>)\r\n    at normalizeAssetPatterns (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-asset-patterns.js:50:26)\r\n    at normalizeBrowserSchema (C:\\**redacted for confidentiality**\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-builder-schema.js:22:71)\r\n    at generateBrowserWebpackConfigFromContext (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\webpack-browser-config.js:116:66)\r\n    at async generateI18nBrowserWebpackConfigFromContext (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\webpack-browser-config.js:67:20)\r\n    at async setup (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\builders\\dev-server\\webpack-server.js:96:34)\r\n    \r\n\r\nNode.js v18.17.1\r\n```\r\nNodeJS 18.17.1 Windows 10\r\n\r\nI updated the app from Angular 15 to Angular 16 (`npm run ng update`). Everything went fine, I have ran `npm install` after and when running the project for test I got this error.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.5 && 16.2.6\r\n\r\n\r\nAngular CLI: 16.2.2\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.2\r\n@angular-devkit/build-angular   16.2.2\r\n@angular-devkit/core            16.2.2\r\n@angular-devkit/schematics      16.2.2\r\n@angular/cdk                    16.2.4\r\n@angular/cli                    16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.2\r\nrxjs                            6.6.7\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25902","RelatedDescription":"Closed issue \"\"An asset cannot be written to a location outside of the output path\" after update to v16 (16.2.5 && 16.2.6)\" (#25902)"},{"Id":"1912237448","IsPullRequest":true,"CreatedAt":"2023-09-25T20:30:52","Actor":"sp90","Number":"25901","RawContent":null,"Title":"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe:\r\n\r\nI often feel that skipTests add a lot of code that is unessary for non test applications and could probably benefit from adding it if there are added tests later on\r\n\r\n## What is the current behavior?\r\n\r\n`ng new newApp --skip-tests` it only skip `.spec.ts` \r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nIt does also skip the angular.json build configuration for tests\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n\r\nI think this could be a first PR in a series of PR's where we go towards having skip-tests applied by default to reduce boilerplate of a base angular app. \r\n\r\nAnd then i think we should later on create scripts/packages like `ng add @angular/test/jest` or `ng add @angular/e2e/playwright` \r\n\r\nThis also aligns perfectly with making rxjs optional and having angular/ssr as an optional part of angular\r\n","Url":"https://github.com/angular/angular-cli/pull/25901","RelatedDescription":"Open PR \"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed\" (#25901)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1919536513","IsPullRequest":true,"CreatedAt":"2023-09-29T16:38:25","Actor":"josephperrott","Number":"27871","RawContent":null,"Title":"ci: setup slack messages for integration test","State":"closed","Body":"Setup the slack messages for failed integration tests on releasable branchces","Url":"https://github.com/angular/components/pull/27871","RelatedDescription":"Closed or merged PR \"ci: setup slack messages for integration test\" (#27871)"},{"Id":"1911826099","IsPullRequest":false,"CreatedAt":"2023-09-29T15:39:36","Actor":"Simona25","Number":"27843","RawContent":null,"Title":"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPreviously the mat-tab-nav-bar tabs could be activated both with space and enter, while now the space key still works but the enter doesn't trigger the action anymore. \n\n### Reproduction\n\nLink:  https://material.angular.io/components/tabs/examples official material example (Basic tab nav bar)\r\nSteps to reproduce:\r\n1. Use the keyboard to move the focus inside the tab nav bar,\r\n2. Pressing Enter nothing happen,\r\n3. Pressing the Space the tab is correctly activated.\r\n\n\n### Expected Behavior\n\nPressing Enter the tab should be activated like when using hte Space.\n\n### Actual Behavior\n\nPressing Space works, while pressing Enter doesn't and the tab link isn't activated.\n\n### Environment\n\n- Angular: 16.2.5 (but also on the 15.2.5 for example)\r\n- CDK/Material:  16.2.5 (but also on the 15.2.5 for example)\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27843","RelatedDescription":"Closed issue \"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key\" (#27843)"},{"Id":"1917020036","IsPullRequest":true,"CreatedAt":"2023-09-29T15:39:35","Actor":"crisbeto","Number":"27862","RawContent":null,"Title":"fix(material/tabs): nav bar not navigating on enter presses","State":"closed","Body":"Fixes that the tab nav bar wasn't navigating when pressing the enter key.\r\n\r\nFixes #27843.","Url":"https://github.com/angular/components/pull/27862","RelatedDescription":"Closed or merged PR \"fix(material/tabs): nav bar not navigating on enter presses\" (#27862)"},{"Id":"1919239334","IsPullRequest":false,"CreatedAt":"2023-09-29T13:05:26","Actor":"angelaki","Number":"27870","RawContent":null,"Title":"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening","State":"open","Body":"### Feature Description\n\nI'm waiting quite long for this feature and was just about to implement / PR it myself. Haven't found something, but is this already in discussion? And I can't get the `npm install` to run because of conficts, is this currently broken?\n\n### Use Case\n\nBeing able to set the items on demand in lazy loading / paged scenarios.","Url":"https://github.com/angular/components/issues/27870","RelatedDescription":"Open issue \"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening\" (#27870)"},{"Id":"1918765773","IsPullRequest":true,"CreatedAt":"2023-09-29T08:38:24","Actor":"crisbeto","Number":"27869","RawContent":null,"Title":"build: update to latest Angular and fix test failures","State":"closed","Body":"Updates to the latest version of Angular and fixes some tests that were broken by the CLI switching to generating standalone apps by default.","Url":"https://github.com/angular/components/pull/27869","RelatedDescription":"Closed or merged PR \"build: update to latest Angular and fix test failures\" (#27869)"},{"Id":"1918373925","IsPullRequest":true,"CreatedAt":"2023-09-28T22:58:38","Actor":"mmalerba","Number":"27868","RawContent":null,"Title":"feat(material-experimental/theming): add M3 progress-spinner support","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27868","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 progress-spinner support\" (#27868)"},{"Id":"1918326961","IsPullRequest":true,"CreatedAt":"2023-09-28T21:58:56","Actor":"mmalerba","Number":"27867","RawContent":null,"Title":"feat(material-experimental/theming): add M3 radio support","State":"open","Body":"Depends on #27864","Url":"https://github.com/angular/components/pull/27867","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 radio support\" (#27867)"},{"Id":"1918154295","IsPullRequest":true,"CreatedAt":"2023-09-28T19:41:21","Actor":"wagnermaciel","Number":"27866","RawContent":null,"Title":"refactor(material/button): switch raised-button to density tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27866","RelatedDescription":"Open PR \"refactor(material/button): switch raised-button to density tokens\" (#27866)"},{"Id":"1918056146","IsPullRequest":true,"CreatedAt":"2023-09-28T18:26:30","Actor":"mmalerba","Number":"27865","RawContent":null,"Title":"feat(material/theming): Open up new APIs to access theme values","State":"open","Body":"This PR opens up the following Sass APIs used to access theme values:\r\n- `get-theme-version`: Gets the version of the theme object\r\n- `get-theme-type`: Gets the type of theme (light or dark)\r\n- `get-theme-color`: Gets a color from the theme\r\n- `get-theme-typography`: Gets a typography value from the theme\r\n- `get-theme-density`: Gets the density scale from the theme\r\n- `theme-has`: Checks if the theme has information for the given theming system","Url":"https://github.com/angular/components/pull/27865","RelatedDescription":"Open PR \"feat(material/theming): Open up new APIs to access theme values\" (#27865)"},{"Id":"1918035673","IsPullRequest":true,"CreatedAt":"2023-09-28T18:11:47","Actor":"mmalerba","Number":"27864","RawContent":null,"Title":"fix(material/radio): Apply tokens at mixin root","State":"open","Body":"Applies radio tokens at the theme mixin's root selector (or html if the mixin is called with no selector). This makes it easier for users to override tokens without worrying about specificity.","Url":"https://github.com/angular/components/pull/27864","RelatedDescription":"Open PR \"fix(material/radio): Apply tokens at mixin root\" (#27864)"},{"Id":"1917535405","IsPullRequest":false,"CreatedAt":"2023-09-28T16:48:51","Actor":"YasirHL","Number":"27863","RawContent":null,"Title":"Unable to fetch package metadata: minTimeout is greater than maxTimeout","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Screenshot (761)](https://github.com/angular/components/assets/103892542/bc30953a-04fe-4137-a6ca-8bab5cc99082)\r\nThis screenshot describe my issue: Unable to install angular material.\r\n\r\nTried:\r\n1. Delete the Node module and install it again\r\n2. Disabled firewall\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nIt should install angular material\n\n### Actual Behavior\n\nIt should install angular material\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27863","RelatedDescription":"Closed issue \"Unable to fetch package metadata: minTimeout is greater than maxTimeout\" (#27863)"},{"Id":"1916857936","IsPullRequest":true,"CreatedAt":"2023-09-28T12:28:23","Actor":"crisbeto","Number":"27860","RawContent":null,"Title":"feat(material/dialog): switch to standalone","State":"closed","Body":"Reworks `MatDialog` to support standalone.","Url":"https://github.com/angular/components/pull/27860","RelatedDescription":"Closed or merged PR \"feat(material/dialog): switch to standalone\" (#27860)"},{"Id":"1916915041","IsPullRequest":false,"CreatedAt":"2023-09-28T07:47:08","Actor":"HairingX","Number":"27861","RawContent":null,"Title":"bug(autocomplete): Setting input value from code does not update autocomplete selected item","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAutocomplete works beautifully when working from the user inputs.\r\n\r\nWhen we set the value from the code-behind (either via FormControl or on the element directly) the selected option does not update.\r\n\r\nIn the attached example we need to clear the input from code, but the previously selected option still has the \"selected\" checkmark and foreground color.\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: [components-issue-hmgdm3](https://stackblitz.com/edit/components-issue-hmgdm3?file=src%2Fapp%2Fexample-component.ts)\r\n\r\nSteps to reproduce:\r\n1. Select an option from the autocomplete\r\n2. Clear the selection by using the button\r\n3. Focus the input and you can see the previously selected option still having the \"selected\" indicators (checkmark and foreground)\r\n\n\n### Expected Behavior\n\nThe autocomplete is supposed to remove the selected indication on the last selected option when the value of our input is cleared\n\n### Actual Behavior\n\nThe autocomplete keeps previously selected option as \"selected\"\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome, Firefox latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27861","RelatedDescription":"Open issue \"bug(autocomplete): Setting input value from code does not update autocomplete selected item\" (#27861)"},{"Id":"1916547678","IsPullRequest":false,"CreatedAt":"2023-09-28T00:57:39","Actor":"albahrawy","Number":"27859","RawContent":null,"Title":"feat(MatDatePicker): adding ability to use flexable format","State":"open","Body":"### Feature Description\r\n\r\nI'm just wondering if we can add the feature of dateFormat to the datepicker\r\n\r\ndatepicker-input-base.ts\r\n\r\n```\r\n@Input displayFormat: string|undefined|null;\r\n@Input parseFormat: string|undefined|null;\r\n```\r\n\r\nand in the code:\r\n\r\n```\r\n  protected _formatValue(value: D | null) {\r\n  **const format = this.displayFormat ?? this._dateFormats.display.dateInput;**\r\n    this._elementRef.nativeElement.value =\r\n      value != null ? this._dateAdapter.format(value, **format**) : '';\r\n  }\r\n\r\n _onInput(value: string) {\r\n    const lastValueWasValid = this._lastValueValid;\r\n  **const format = this.parseFormat?? this._dateFormats.parse.dateInput;**\r\n    let date = this._dateAdapter.parse(value, **format** );\r\n// ... remaining code\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\nin this case we can alow different pasing/display format in the same app\r\nthe first input will use custom format and the second one use the default one.\r\nboth are in the same component\r\n```\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" displayFormat=\"DD/MM/YYYY\" parseFormat=\"DD/MM/YYYY\">\r\n  <mat-hint>DD/MM/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker1\">\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker1></mat-datepicker>\r\n</mat-form-field>\r\n```","Url":"https://github.com/angular/components/issues/27859","RelatedDescription":"Open issue \"feat(MatDatePicker): adding ability to use flexable format\" (#27859)"},{"Id":"1916031517","IsPullRequest":true,"CreatedAt":"2023-09-27T19:57:58","Actor":"mmalerba","Number":"27858","RawContent":null,"Title":"Bump version to \"v17.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27858","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.5\" with changelog.\" (#27858)"},{"Id":"1915993867","IsPullRequest":true,"CreatedAt":"2023-09-27T17:18:57","Actor":"mmalerba","Number":"27857","RawContent":null,"Title":"docs: release notes for the v16.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27857","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.6 release\" (#27857)"},{"Id":"1915991523","IsPullRequest":true,"CreatedAt":"2023-09-27T17:03:38","Actor":"mmalerba","Number":"27856","RawContent":null,"Title":"Bump version to \"v16.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27856","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.6\" with changelog.\" (#27856)"},{"Id":"1915480087","IsPullRequest":true,"CreatedAt":"2023-09-27T16:29:33","Actor":"allexgut","Number":"27854","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27854","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27854)"},{"Id":"1915561112","IsPullRequest":false,"CreatedAt":"2023-09-27T15:41:26","Actor":"magentaRE","Number":"27855","RawContent":null,"Title":"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.7 (non MDC-based components)\r\n\r\n### Description\r\n\r\nWhen tabbing onto a checkbox, no CSS classes from CDK directives get applied to a checkbox. https://material.angular.io/cdk/a11y/overview#cdkmonitorelementfocus-and-cdkmonitorsubtreefocus\r\n\r\nThis used to work natively without even setting `cdkMonitorElementFocus` directive onto a checkbox. CSS classes don't get applied even if you put `cdkMonitorElementFocus` on the element. This was not a problem in the old non-MDC components. Screenshot from my app, old non MDC-based components, Material version 14.x.x:\r\n\r\n![image](https://github.com/angular/components/assets/48152706/2c874ec4-530b-4afc-80d9-fb496f73af45)\r\n\r\nThis behavior works in `<mat-radio-button>`, you don't even have to set `cdkMonitorElementFocus` on the radio button. Those CSS classes get applied onto the focused radio button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: not needed\r\nSteps to reproduce:\r\n1. Go to [https://material.angular.io/components/checkbox/overview](https://material.angular.io/components/checkbox/overview)\r\n2. Observe any checkbox on the site in DevTools\r\n3. Tab onto that checkbox on the site with keyboard or any other way (programatically, mouse,...)\r\n4. `<mat-checkbox>` element should be getting `.cdk-focused` and `.cdk-${origin}-focused` CSS classes\r\n\r\n\r\n### Expected Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes should be applied onto checkbox when focused, clicked, etc.\r\n\r\n### Actual Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes are **NOT** getting applied onto checkbox when focused, clicked, etc.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.5\r\n- Browser(s): any (tried Chrome and Firefox)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): tried it on Windows, I don't know if it does work on others\r\n","Url":"https://github.com/angular/components/issues/27855","RelatedDescription":"Closed issue \"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus\" (#27855)"},{"Id":"1915452053","IsPullRequest":true,"CreatedAt":"2023-09-27T12:31:25","Actor":"allexgut","Number":"27853","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27853","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27853)"},{"Id":"1913654047","IsPullRequest":false,"CreatedAt":"2023-09-27T09:55:53","Actor":"Bernoulli-IT","Number":"27847","RawContent":null,"Title":"MatExpansionPanel: CSS class without mdc- prefix","State":"closed","Body":"### Description\r\n\r\nWhy is the \"older\" .mat-expansion-panel css class applied to a <mat-expansion-panel> component? This feels very inconsistent with all the updated css class names for other components. \r\n\r\n### Expected Behavior\r\n\r\n<mat-expansion-panel class=\"mat-mdc-expansion-panel mdc-expansion-panel></mat-expansion-panel>\r\n\r\n### Actual Behavior\r\n\r\n<mat-expansion-panel class=\"mat-expansion-panel></mat-expansion-panel>\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome, Firefox, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win10\r\n\r\n### Example\r\n![2023-09-27 08_11_12-DevTools - argaleo digitwin work_loggedout](https://github.com/angular/components/assets/9802752/a6e383c9-3188-453b-b25e-cb41543d65e5)\r\n\r\n👆🏼 looks very inconsistent:\r\n\r\n- MatCard\r\n  - mat-mdc-card & mdc-card \r\n\r\n- MatCardHeader\r\n  - mat-mdc-card-header\r\n\r\n- MatCardActions\r\n  - mat-mdc-card-actions & mdc-card__actions\r\n\r\nA mixture of mat-mdc-, mdc- and even some css class with a double underscore?\r\n\r\n","Url":"https://github.com/angular/components/issues/27847","RelatedDescription":"Closed issue \"MatExpansionPanel: CSS class without mdc- prefix\" (#27847)"},{"Id":"1913983601","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:47","Actor":"rockcoolt","Number":"27849","RawContent":null,"Title":"feat(Angular Material Design): Angular Material Design to Material 3","State":"closed","Body":"### Feature Description\n\nHello 👋🏾\r\nI'm sorry if my question has already been asked; I've been searching for a reliable answer for days. 😵‍💫\r\n\r\nIs there a plan to migrate the design of Angular Material to Material 3?\r\nIf not, I think I'll have to use the web version of Material 3, which is not well-suited for Angular.\r\n\r\nThank you for your answers 🙏🏾\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27849","RelatedDescription":"Closed issue \"feat(Angular Material Design): Angular Material Design to Material 3\" (#27849)"},{"Id":"1915092771","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:14","Actor":"StevenSwitten","Number":"27852","RawContent":null,"Title":"bug(menu): Focus lost when an input with a label is in a menu item","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've encountered this very weird bug where I have an input in a mat-menu-item. If the input has a label, and you type the first letter of that label in the input, the input loses focus.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-kjzj77?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Click the button to show the menu\r\n2. Type anything without the letter \"D\" -> it works fine.\r\n3. Type the letter \"D\" -> focus is lost\r\n\n\n### Expected Behavior\n\nFocus should not be lost\n\n### Actual Behavior\n\nFocus is lost\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows & Android\r\n","Url":"https://github.com/angular/components/issues/27852","RelatedDescription":"Closed issue \"bug(menu): Focus lost when an input with a label is in a menu item\" (#27852)"},{"Id":"1914805513","IsPullRequest":false,"CreatedAt":"2023-09-27T06:40:43","Actor":"shhdharmen","Number":"27851","RawContent":null,"Title":"bug(BUTTON): \"$line-height\" is not respected when provided in typography config","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf we create a custom typography config, and provide it in theme, `$line-height` value for `$button` is not respected from the config, instead `.mdc-button`'s `line-height` takes precedence. See below for example:\r\n\r\n```scss\r\n@use \"sass:map\";\r\n@use \"@angular/material\" as mat;\r\n\r\n$my-app-light-primary: mat.define-palette(mat.$indigo-palette);\r\n$my-app-light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-app-light-warn: mat.define-palette(mat.$red-palette);\r\n\r\n$regular-font-family: \"'Inter', sans-serif\";\r\n\r\n$my-app-typography: mat.define-typography-config(\r\n  $button: mat.define-typography-level($font-family: $regular-font-family, $font-size: 16px, $line-height: 2.5),\r\n);\r\n\r\n$my-app-light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $my-app-light-primary,\r\n      accent: $my-app-light-accent,\r\n      warn: $my-app-light-warn,\r\n    ),\r\n    typography: $my-app-typography,\r\n  )\r\n);\r\n\r\n@include mat.core();\r\n\r\n@include mat.core-theme($my-app-light-theme);\r\n@include mat.button-theme($my-app-light-theme);\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Inter', sans-serif;\r\n}\r\n```\r\n\r\n![Screenshot 2023-09-27 115600](https://github.com/angular/components/assets/6831283/6cec20f1-9bf8-45a4-a9a9-974d7bd32a0b)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-4udget?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Observe `styles.scss`\r\n2. Observe styles applied to button\r\n\n\n### Expected Behavior\n\nButton should have `line-height` give in typography config\n\n### Actual Behavior\n\nButton have `line-height` from `.mdc-button` class instead\n\n### Environment\n\n- Angular: 16.2.5\r\n- CDK/Material: 16.2.4\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27851","RelatedDescription":"Open issue \"bug(BUTTON): \"$line-height\" is not respected when provided in typography config\" (#27851)"},{"Id":"1912374790","IsPullRequest":true,"CreatedAt":"2023-09-26T20:20:58","Actor":"stephanietuerk","Number":"27846","RawContent":null,"Title":"docs(material/slider): clarify behavior of slider range thumbs","State":"closed","Body":"Clarifies possible behavior/values of matStartThumb and matEndThumb in slider component 'Selecting a range' documentation.\r\n\r\nAddresses #27837","Url":"https://github.com/angular/components/pull/27846","RelatedDescription":"Closed or merged PR \"docs(material/slider): clarify behavior of slider range thumbs\" (#27846)"},{"Id":"1914080598","IsPullRequest":true,"CreatedAt":"2023-09-26T18:33:50","Actor":"zarend","Number":"27850","RawContent":null,"Title":"remove subscription for expandAll and collapseAll","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27850","RelatedDescription":"Open PR \"remove subscription for expandAll and collapseAll\" (#27850)"},{"Id":"1913743732","IsPullRequest":false,"CreatedAt":"2023-09-26T15:13:01","Actor":"intellix","Number":"27848","RawContent":null,"Title":"feat(Sidenav): Support hydration","State":"open","Body":"### Feature Description\r\n\r\nSidenav and various other components should support Clientside Hydration. When I deliver the initial HTML from the server, the client should be able to hydrate my entire site without having a flash of replaced and recreated content.\r\n\r\nI've been fighting with enabling it and then started to investigate why 2x components are skipping hydration. I thought that it was strange because I never explicitly added it and now that I can see that it was 100% disabled for anything inside a Sidenav: https://github.com/angular/components/commit/1a6f924e2da852be6bd78445f43bac0275264b6e\r\n\r\nThe whole application exists within a Sidenav but Material completely disables it (I assume due to direct DOM manipulation). It would be great if material didn't disable hydration, so we can improve UX and SEO with better lighthouse scores.\r\n\r\n### Use Case\r\n\r\nIt would allow Material based websites to not suffer from poor lighthouse scores and flashing pages. ","Url":"https://github.com/angular/components/issues/27848","RelatedDescription":"Open issue \"feat(Sidenav): Support hydration\" (#27848)"},{"Id":"1911724682","IsPullRequest":false,"CreatedAt":"2023-09-25T20:14:39","Actor":"nbianka99","Number":"27842","RawContent":null,"Title":"bug(mat.core()): Undeclared mixin","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to make a custom theme for my Angular Project and I receive the 'Undeclared mixin' error even though I insert the following line at the top of my theme file: @use '@angular/material' as mat;\r\nWhen I try to @include mat.core(); I receive this error.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create a .scss file \r\n2. Add the following code to it:\r\n`@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n$my-primary: mat.define-palette(mat.$indigo-palette, 500);\r\n$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-theme: mat.define-light-theme((\r\n color: (\r\n   primary: $my-primary,\r\n   accent: $my-accent,\r\n ),\r\n typography: mat.define-typography-config(),\r\n density: 0,\r\n));\r\n\r\n@include mat.all-component-themes($my-theme);`\r\n4. \r\n\n\n### Expected Behavior\n\nIt should not throw an error\n\n### Actual Behavior\n\nIt throws an error\n\n### Environment\n\n- Angular:  16.2.3\r\n- CDK/Material: 16.2.5\r\n- Browser(s): Chrome/Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27842","RelatedDescription":"Closed issue \"bug(mat.core()): Undeclared mixin\" (#27842)"},{"Id":"1911981696","IsPullRequest":false,"CreatedAt":"2023-09-25T17:23:00","Actor":"stnor","Number":"27845","RawContent":null,"Title":"MatFormField (outline) label cut off in MatDialog","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen setting theme density to -1 and using `<mat-form-field>` with appearance: 'outline' the top of the form field gets cut off in a MatDialog unless using the following rule as a global style:\r\n```\r\n  .mat-mdc-dialog-content > mat-form-field {\r\n    margin-top: 4px !important;\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/27845","RelatedDescription":"Open issue \"MatFormField (outline) label cut off in MatDialog\" (#27845)"},{"Id":"1911852979","IsPullRequest":false,"CreatedAt":"2023-09-25T16:11:06","Actor":"raphael22","Number":"27844","RawContent":null,"Title":"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS","State":"open","Body":"### Feature Description\n\nAdd a token to allow default options for mat-badge.\n\n### Use Case\n\nAlignment with other DEFAULT_OPTIONS token.","Url":"https://github.com/angular/components/issues/27844","RelatedDescription":"Open issue \"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS\" (#27844)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-30T03:30:02.6609641Z","RunDurationInMilliseconds":1772}