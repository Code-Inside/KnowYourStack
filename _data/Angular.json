{"Data":{"Angular-Issues":{"Issues":[{"Id":"1928870247","IsPullRequest":true,"CreatedAt":"2023-10-05T23:55:04","Actor":"AndrewKushnir","Number":"52056","RawContent":null,"Title":"docs: recommend enabling `fetch` support in HttpClient when using SSR","State":"closed","Body":"Related to https://github.com/angular/angular/pull/52037.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Documentation content changes\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52056","RelatedDescription":"Closed or merged PR \"docs: recommend enabling `fetch` support in HttpClient when using SSR\" (#52056)"},{"Id":"1927040097","IsPullRequest":true,"CreatedAt":"2023-10-05T23:52:47","Actor":"AndrewKushnir","Number":"52037","RawContent":null,"Title":"refactor(http): warn when `HttpClient` doesn't use fetch during SSR ","State":"closed","Body":"This PR adds a logic to produce a warning in case `HttpClient` doesn't use fetch during SSR.\r\nIt's recommended to use `fetch` for performance and compatibility reasons.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52037","RelatedDescription":"Closed or merged PR \"refactor(http): warn when `HttpClient` doesn't use fetch during SSR \" (#52037)"},{"Id":"1929230685","IsPullRequest":true,"CreatedAt":"2023-10-05T23:52:34","Actor":"AndrewKushnir","Number":"52064","RawContent":null,"Title":"test(core): await all async work to be completed before checking results","State":"open","Body":"This change should help make currently flaky test more stable.\r\n\r\n// cc @atscott \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52064","RelatedDescription":"Open PR \"test(core): await all async work to be completed before checking results\" (#52064)"},{"Id":"1929228992","IsPullRequest":false,"CreatedAt":"2023-10-05T23:49:52","Actor":"eneajaho","Number":"52063","RawContent":null,"Title":"Option to opt-out from patching events that generate a lot of CD cycles (mousemove, scroll)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nEvents like mousemove and scroll easily puts Angular Change detection on fire because they fire too much! Having a simple way to configure to opt out from them would be great! \n\n### Proposed solution\n\nAdd an option to NgZone constructor or expose an injection token where we can provide a list of events we don't want to be patched.\n\n### Alternatives considered\n\nUse the __zone_symbol__UNPATCHED_EVENTS in zoneflags file and add it to polyfills.\r\n\r\n```ts\r\n (window as any).__zone_symbol__UNPATCHED_EVENTS = [\r\n     'mousemove', 'scroll'\r\n ]\r\n```","Url":"https://github.com/angular/angular/issues/52063","RelatedDescription":"Open issue \"Option to opt-out from patching events that generate a lot of CD cycles (mousemove, scroll)\" (#52063)"},{"Id":"1928057976","IsPullRequest":true,"CreatedAt":"2023-10-05T23:22:03","Actor":"pkozlowski-opensource","Number":"52045","RawContent":null,"Title":"Control flow more tests","State":"closed","Body":"Re-organize test code and add more tests.","Url":"https://github.com/angular/angular/pull/52045","RelatedDescription":"Closed or merged PR \"Control flow more tests\" (#52045)"},{"Id":"1929203862","IsPullRequest":true,"CreatedAt":"2023-10-05T23:12:04","Actor":"atscott","Number":"52062","RawContent":null,"Title":"feat(language-service): Implement outlining spans for control flow blâ€¦","State":"open","Body":"â€¦ocks\r\n\r\nThis commit implements the getOutlingSpans to retrieve Angular-specific outlining spans. At the moment, these spans are limited to control-flow blocks in templates.\r\n\r\nThis is required for folding ranges (https://github.com/angular/vscode-ng-language-service/issues/1930)","Url":"https://github.com/angular/angular/pull/52062","RelatedDescription":"Open PR \"feat(language-service): Implement outlining spans for control flow blâ€¦\" (#52062)"},{"Id":"1929182890","IsPullRequest":true,"CreatedAt":"2023-10-05T22:48:00","Actor":"pmvald","Number":"52061","RawContent":null,"Title":"Forbid orphan components","State":"open","Body":"IGNORE the first 6 commits! They are from the PR #51919 and once it is merged I'll rebase and they'll be gone.\r\n\r\nThis PR adds an option to Angular compiler options which allow to produce runtime error if orphan components found. Good for identifying such cases. \r\n\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52061","RelatedDescription":"Open PR \"Forbid orphan components\" (#52061)"},{"Id":"1927441444","IsPullRequest":true,"CreatedAt":"2023-10-05T22:09:13","Actor":"coljacarls","Number":"52043","RawContent":null,"Title":"docs(core): typo","State":"closed","Body":"remove a word that feels wrong\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] ~Tests for the changes have been added (for bug fixes / features)~\r\n- [ ] ~Docs have been added / updated (for bug fixes / features)~\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52043","RelatedDescription":"Closed or merged PR \"docs(core): typo\" (#52043)"},{"Id":"1929137900","IsPullRequest":true,"CreatedAt":"2023-10-05T22:06:31","Actor":"angular-robot","Number":"52060","RawContent":null,"Title":"build: update dependency @types/jasmine to v5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | dependencies | major | [`^4.0.0` -> `^5.0.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.6/5.1.0) |\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~4.3.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.5/5.1.0) |\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~4.3.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.6/5.1.0) |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular/pull/52060","RelatedDescription":"Open PR \"build: update dependency @types/jasmine to v5\" (#52060)"},{"Id":"1929132711","IsPullRequest":true,"CreatedAt":"2023-10-05T22:03:40","Actor":"AndrewKushnir","Number":"52059","RawContent":null,"Title":"refactor(core): add `focusin` event to `on hover` trigger of `@defer` block","State":"open","Body":"This commit adds the `focusin` event to `on hover` trigger of `@defer` block to improve compatibility with screen readers.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52059","RelatedDescription":"Open PR \"refactor(core): add `focusin` event to `on hover` trigger of `@defer` block\" (#52059)"},{"Id":"1927073729","IsPullRequest":true,"CreatedAt":"2023-10-05T21:35:06","Actor":"dylhunn","Number":"52038","RawContent":null,"Title":"refactor(language-service): Prepare to support blocks in the langauge service","State":"closed","Body":"Two key refactors to enable deeper language service support for blocks:\r\n\r\n(1) We now generate accurate source spans for the various block types. Additionally, all the top-level source spans for a block are now *inclusive* of all the connected or descending blocks. This helps the language service visit connected blocks.\r\n\r\n(2) The language service's template visitor was previously skipping over the AST nodes corresponding to several block types. We are now careful to visit all such nodes.\r\n","Url":"https://github.com/angular/angular/pull/52038","RelatedDescription":"Closed or merged PR \"refactor(language-service): Prepare to support blocks in the langauge service\" (#52038)"},{"Id":"1927648337","IsPullRequest":false,"CreatedAt":"2023-10-05T21:05:39","Actor":"stefan-willems-beech","Number":"52044","RawContent":null,"Title":"Upgrade from 14 to 16 randomly breaks production build in CI","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nCurrently we build our Angular application inside the CI and after an upgrade to version 16 it starts to behave weirdly through failing the build like 30 percent of the times.   \r\n  \r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nUnknown error: TypeError: (0 , rxjs_1.map) is not a function\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.4\r\nNode: 18.10.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 16.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.4\r\n@angular-devkit/build-angular   16.2.4\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cdk                    16.2.6\r\n@angular/cli                    16.2.4\r\n@angular/material               16.2.6\r\n@schematics/angular             16.2.4\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\nThe command being ran:  \r\n  \r\n`ng build --configuration production`","Url":"https://github.com/angular/angular/issues/52044","RelatedDescription":"Closed issue \"Upgrade from 14 to 16 randomly breaks production build in CI\" (#52044)"},{"Id":"1929018102","IsPullRequest":false,"CreatedAt":"2023-10-05T20:38:38","Actor":"phalgunv","Number":"52058","RawContent":null,"Title":"APP_INITIALIZER usage in context of standalone components","State":"open","Body":"### Describe the problem that you experienced\n\nThe example in [APP_INITIALIZER's usage notes](https://angular.io/api/core/APP_INITIALIZER#usage-notes) are for NgModules.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/api/core/APP_INITIALIZER#usage-notes\n\n### Describe what you were looking for in the documentation\n\nThere should be an example of configuring APP_INITIALIZER token in context of standalone components. \r\n\r\nFor example:\r\n\r\n```\r\nfunction initializeAppFactory(httpClient: [HttpClient](https://angular.io/api/common/http/HttpClient)): () => Observable<any> {\r\n return () => httpClient.get(\"https://someUrl.com/api/user\")\r\n   .pipe(\r\n      tap(user => { ... })\r\n   );\r\n}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <h1>Hello from {{ name }}!</h1> `,\r\n})\r\nexport class App {\r\n  name = 'Angular';\r\n}\r\n\r\nbootstrapApplication(App, {\r\n  providers: [\r\n    provideHttpClient(),\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeAppFactory,\r\n      multi: true,\r\n      deps: [HttpClient],\r\n    },\r\n  ],\r\n});\r\n```\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/52058","RelatedDescription":"Open issue \"APP_INITIALIZER usage in context of standalone components\" (#52058)"},{"Id":"1928118812","IsPullRequest":true,"CreatedAt":"2023-10-05T20:10:11","Actor":"crisbeto","Number":"52047","RawContent":null,"Title":"Improved handling of incomplete blocks","State":"closed","Body":"Includes a few changes that make it easier to recover from incorrectly-written or unknown blocks, instead of throwing an error immediately. The changes are meant to make it easier to integrate blocks into the language service and to log better errors. Includes the following commits:\r\n\r\n### refactor(compiler): handle incomplete blocks in the lexer\r\nUpdates the lexer to parse blocks as incomplete, instead of throwing errors. This will allow us to better handle them further down in the pipeline.\r\n\r\n### refactor(compiler): recover from incomplete blocks\r\nAdds some logic to treat incomplete blocks as empty blocks so that we can recover from them. Also logs an error about the incomplete block.\r\n\r\n### refactor(compiler): introduce unknown block node\r\nAdds an `UnknownBlock` node to the Ivy AST to represent blocks that haven't been recognized by the compiler. This will make it easier to integrate blocks into the language service.","Url":"https://github.com/angular/angular/pull/52047","RelatedDescription":"Closed or merged PR \"Improved handling of incomplete blocks\" (#52047)"},{"Id":"1928923670","IsPullRequest":true,"CreatedAt":"2023-10-05T19:27:05","Actor":"AndrewKushnir","Number":"52057","RawContent":null,"Title":"refactor(platform-browser): remove `withNoDomReuse` function","State":"open","Body":"This commit removes the `withNoDomReuse` function to minimize public API. The `withNoDomReuse` function used to disable DOM reuse, which is the main feature of the `provideClientHydration()`.\r\n\r\nThe `withNoDomReuse()` function was in the \"developer preview\" mode, so the removal happens without prior deprecation.\r\n\r\nBREAKING CHANGE:\r\n\r\nThe `withNoDomReuse()` function was removed from the public API. If you need to disable hydration, you can exclude the `provideClientHydration()` call from provider list in your application (which would disable hydration features for the entire application) or use `ngSkipHydration` attribute to disable hydration for particular components. See this guide for additional information: https://angular.io/guide/hydration#how-to-skip-hydration-for-particular-components.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Other... Please describe: API removal\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes, see the note above\r\n- [ ] No","Url":"https://github.com/angular/angular/pull/52057","RelatedDescription":"Open PR \"refactor(platform-browser): remove `withNoDomReuse` function\" (#52057)"},{"Id":"1928133507","IsPullRequest":true,"CreatedAt":"2023-10-05T18:08:11","Actor":"devversion","Number":"52049","RawContent":null,"Title":"revert: fix(core): allow toSignal in reactive contexts","State":"closed","Body":"We recently landed a change that allows `toSignal` to be called from within reactive contexts (e.g. `effect`/`computed`). After more thorough investigatio and consideration with the team, we feel like allowing `toSignal` to be called in such contexts is encouraging non-ideal / hard-to-notice code patterns.\r\n\r\ne.g. a new subscription to an observable is made every time `toSignal` is invoked. There is no caching done here. Additionally, multiple new subscriptions can trigger unintended side-effects- that may slow down the app, result in incorrect/unexpected behavior or perform unnecessary work.\r\n\r\nUsers should instead move the `toSignal` call outside of the `computed` or `effect` and then read the signal values from within their `computed`. e.g.\r\n\r\n```ts\r\ncomputed(() => {\r\n  const smth = toSignal(coldObservable$)\r\n  return smth() + 2;\r\n}\r\n```\r\n\r\n--> should instead be:\r\n\r\n```ts\r\nconst smth = toSignal(coldObsverable$);\r\ncomputed(() => smth() + 2);\r\n```\r\n\r\nIn cases where a new subscription for each invocation is actually intended, a manual subscription can be made. That way it's also much more obvious to users that they are triggering side-effects every time, or causing new subscriptions.","Url":"https://github.com/angular/angular/pull/52049","RelatedDescription":"Closed or merged PR \"revert: fix(core): allow toSignal in reactive contexts\" (#52049)"},{"Id":"1928802061","IsPullRequest":false,"CreatedAt":"2023-10-05T18:06:19","Actor":"ansh218","Number":"52055","RawContent":null,"Title":"Can't resolve all parameters for setupPlatform: (?, [object Object], [object Object]) error on ionic serve","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have updated from Angular 7 to Angular 8, and after updating when I am trying to run ionic serve, it gives me an error for SetupPlatfrom, I tried searching for DOCUMENT import we have not used that import, anyother help will be appreciated  \r\n\r\n<img width=\"598\" alt=\"Screenshot 2023-10-05 233306\" src=\"https://github.com/angular/angular/assets/58247122/6a7ff988-f1a2-4020-ab5f-7abd1614f6d7\">\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/52055","RelatedDescription":"Closed issue \"Can't resolve all parameters for setupPlatform: (?, [object Object], [object Object]) error on ionic serve\" (#52055)"},{"Id":"1928787152","IsPullRequest":true,"CreatedAt":"2023-10-05T17:54:31","Actor":"angular-robot","Number":"52054","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/52054","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#52054)"},{"Id":"1928514007","IsPullRequest":true,"CreatedAt":"2023-10-05T15:03:51","Actor":"angular-robot","Number":"52053","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.","Url":"https://github.com/angular/angular/pull/52053","RelatedDescription":"Open PR \"docs: update events\" (#52053)"},{"Id":"1928466722","IsPullRequest":false,"CreatedAt":"2023-10-05T14:39:46","Actor":"garrettld","Number":"52052","RawContent":null,"Title":"`if` block type narrowing is not applied to event bindings","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen using the new `if` block, type narrowing does not appear to be applied inside of event bindings.\r\n\r\n```typescript\r\n@Component({\r\n  template: `\r\n  @if (foo) {\r\n    <!-- foo should be narrowed to type 'string' -->\r\n    <div (click)=\"onClick(foo)\"></div>\r\n  }`\r\n})\r\nclass SomeComponent {\r\n  foo: string | null | undefined = 'foo';\r\n  // Expects type `string`\r\n  onClick(text: string) {}\r\n}\r\n```\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-eiurfc?file=src%2Fmain.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nArgument of type 'string | null | undefined' is not assignable to parameter of type 'string'.\r\nType 'undefined' is not assignable to type 'string'.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0-next.7\r\nNode: 18.18.0\r\nPackage Manager: npm 9.4.2\r\nOS: linux x64\r\n\r\nAngular: 17.0.0-next.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.7\r\n@angular-devkit/build-angular   17.0.0-next.7\r\n@angular-devkit/core            17.0.0-next.7\r\n@angular-devkit/schematics      17.0.0-next.7\r\n@schematics/angular             17.0.0-next.7\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nAt first glance this appears to be a repeat of https://github.com/angular/angular/issues/35073","Url":"https://github.com/angular/angular/issues/52052","RelatedDescription":"Open issue \"`if` block type narrowing is not applied to event bindings\" (#52052)"},{"Id":"1928336718","IsPullRequest":true,"CreatedAt":"2023-10-05T13:46:19","Actor":"pkozlowski-opensource","Number":"52051","RawContent":null,"Title":"perf(core): build-in for should update indexes only when a change is detected","State":"open","Body":"This change adjust the built-in for algorithm of dealing with embedded views to update the repeater context (and more specifically - its index field) only when a change between collections was detected.\r\n\r\n","Url":"https://github.com/angular/angular/pull/52051","RelatedDescription":"Open PR \"perf(core): build-in for should update indexes only when a change is detected\" (#52051)"},{"Id":"1928297581","IsPullRequest":false,"CreatedAt":"2023-10-05T13:27:56","Actor":"wszydlak","Number":"52050","RawContent":null,"Title":"Control flow `for` loop - support fallback track function","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler, core\n\n### Description\n\nCurrent behavior of the new Angular Control Flow `for` loop requires user to always pass `track` expression:\r\n\r\n```html\r\n@for(item of parts; track item) {\r\n    {{item}} \r\n}\r\n```\r\n\r\nSkipping `track` expression breaks angular compilation:\r\n\r\n```html\r\n@for(item of parts) {\r\n    {{item}} \r\n}\r\n```\r\n\r\n<img width=\"664\" alt=\"image\" src=\"https://github.com/angular/angular/assets/6583977/07deed4f-5a1e-48e5-987e-b9b5e53d8682\">\r\n\r\n---\r\n\r\nFor application that uses `for` loop it is a common task that loops are tracked by eg. collection element unique id: `item.id`.\r\nIt would be great to have the possibility to define fallback `track` function that can be used if no `track` expression is passed.\r\n\n\n### Proposed solution\n\nOne of the possibility is to have an injection token that user can use to provide fallback track function:\r\n\r\n```ts\r\ntype CollectionItem = { id: number };\r\n\r\n@Component({\r\n  selector: 'app-component',\r\n  standalone: true,\r\n  template: `\r\n    <div>\r\n    @for(item of collection) {\r\n        <p>{{item.id}}</p>\r\n    }\r\n    </div>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: FOR_LOOP_DEFAULT_TRACK,\r\n      useValue: (item: CollectionItem) => item.id,\r\n    },\r\n  ],\r\n})\r\nexport class MyComponent {\r\n  protected collection: CollectionItem[] = [{ id: 1 }, { id: 2 }, { id: 3 }];\r\n}\r\n```\n\n### Alternatives considered\n\n???","Url":"https://github.com/angular/angular/issues/52050","RelatedDescription":"Open issue \"Control flow `for` loop - support fallback track function\" (#52050)"},{"Id":"1928119816","IsPullRequest":false,"CreatedAt":"2023-10-05T12:02:29","Actor":"Magnuti","Number":"52048","RawContent":null,"Title":"Inconsistency in bootstrapping an application using a standalone component","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nOn this page [Bootstrapping an application using a standalone component](https://angular.io/guide/standalone-components#bootstrapping-an-application-using-a-standalone-component) the docs say this `An Angular application can be bootstrapped without any NgModule by using a standalone component as the application's root component.`.\r\n\r\nWhile on this page [Prerequisites](https://angular.io/guide/bootstrapping#prerequisites) the doc says this `Every application has at least one Angular module, the root module, which must be present for bootstrapping the application on launch.`.\r\n\r\nSo which one is correct? Are modules required for bootstrapping the application or not?\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.io/guide/standalone-components#bootstrapping-an-application-using-a-standalone-component\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nI was looking into how to bootstrap the application with standalone components.\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\nReading through the documentation.\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nConsistent documentation.\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n![image](https://github.com/angular/angular/assets/43852515/16354ce9-4408-42a5-8b95-6b18e8078435)\r\n![image](https://github.com/angular/angular/assets/43852515/cb81d953-4416-4119-add0-78f7c7baeccf)\r\n\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/52048","RelatedDescription":"Open issue \"Inconsistency in bootstrapping an application using a standalone component\" (#52048)"},{"Id":"1928103025","IsPullRequest":true,"CreatedAt":"2023-10-05T11:52:44","Actor":"uneknown","Number":"52046","RawContent":null,"Title":"docs: update typescript configuration","State":"open","Body":"This commits update the TypeScript configuration for the updated version 16 release.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/52046","RelatedDescription":"Open PR \"docs: update typescript configuration\" (#52046)"},{"Id":"1927431798","IsPullRequest":true,"CreatedAt":"2023-10-05T05:48:51","Actor":"AndrewKushnir","Number":"52042","RawContent":null,"Title":"refactor(core): make timer-related `@defer` logic tree-shakable","State":"open","Body":"This commit updates `@defer` logic related to handling `after` and `minimum` parameters to be tree-shakable.\r\n\r\nIf `after` or `minimum` was used on a `@loading` or `@placeholder` blocks, compiler generates an extra argument for the `ÉµÉµdefer` instruction. This extra argument is a reference to a function that brings timer-related code.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/52042","RelatedDescription":"Open PR \"refactor(core): make timer-related `@defer` logic tree-shakable\" (#52042)"},{"Id":"1927392162","IsPullRequest":true,"CreatedAt":"2023-10-05T05:11:45","Actor":"sdedieu","Number":"52041","RawContent":null,"Title":"docs(docs-infra): improve decorator deprecated property display in documentation","State":"open","Body":"Improve the display of deprecated property display in decorator documentations\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n- Decorator deprecated properties code are not stroked in the decorator overview section.\r\n- Decorator deprecated properties short description are not being prefixed by the deprecated label  in the decorator overview section.\r\n- Header of deprecated properties options does not display the deprecated label.\r\n\r\n[example](https://github.com/angular/angular/blob/fe81ff8cd6948bea5a6212721ea920a8572248e1/packages/core/src/metadata/directives.ts#L558)\r\n\r\n<img width=\"1332\" alt=\"Screenshot 2023-10-05 at 07 07 19\" src=\"https://github.com/angular/angular/assets/57216011/18521128-24fe-446a-949b-c11bf4525ecc\">\r\n<img width=\"1336\" alt=\"Screenshot 2023-10-05 at 07 07 35\" src=\"https://github.com/angular/angular/assets/57216011/135fd8d2-416b-442c-b5db-eba51f943eb4\">\r\n\r\n## What is the new behavior?\r\n- Decorator deprecated properties code now are stroked in the decorator overview section.\r\n- Decorator deprecated properties short description now are being prefixed by the deprecated label  in the decorator overview section.\r\n- Header of deprecated properties options does now display the deprecated label.\r\n\r\n<img width=\"1339\" alt=\"Screenshot 2023-10-05 at 07 07 58\" src=\"https://github.com/angular/angular/assets/57216011/d51eedb5-4691-4fc3-a3c7-1d57b59ea289\">\r\n<img width=\"1338\" alt=\"Screenshot 2023-10-05 at 07 08 11\" src=\"https://github.com/angular/angular/assets/57216011/bf74cd7f-3003-437c-af5a-eccd4e982bb2\">\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52041","RelatedDescription":"Open PR \"docs(docs-infra): improve decorator deprecated property display in documentation\" (#52041)"},{"Id":"1927363830","IsPullRequest":true,"CreatedAt":"2023-10-05T04:41:42","Actor":"jelbourn","Number":"52040","RawContent":null,"Title":"feat(compiler): extract api for fn overloads and abtract classes","State":"open","Body":"This commit adds support for extracting function overloads. Interestingly, this worked in an earlier version when the code was extracting all statements in every source file, but the existing compiler API for extracting all exported declarations from an entry-point only returns the first function declaration in cases when there are overloads.\r\n\r\nThis also marks abstract classes as abstract, required inputs as required, and filters out Angular-private APIs.\r\n\r\n(I started off just doing simpler things here, then thought _\"I can sneak in function overloads too, that will be simple\"_. It was not.)","Url":"https://github.com/angular/angular/pull/52040","RelatedDescription":"Open PR \"feat(compiler): extract api for fn overloads and abtract classes\" (#52040)"},{"Id":"1927346026","IsPullRequest":true,"CreatedAt":"2023-10-05T04:17:22","Actor":"sdedieu","Number":"52039","RawContent":null,"Title":"refactor(core): no need for signals property in component interface sâ€¦","State":"open","Body":"Removed the signals property definition from the Component interface since it already exists in the Directive interface and Component inherits from Directive\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nComponent interface ([code](https://github.com/angular/angular/blob/fe81ff8cd6948bea5a6212721ea920a8572248e1/packages/core/src/metadata/directives.ts#L641)) do declare a `signals` property which is not necessary since Directive interface ([code](https://github.com/angular/angular/blob/fe81ff8cd6948bea5a6212721ea920a8572248e1/packages/core/src/metadata/directives.ts#L350)) already has a `signals` property and Component inherits from Directive ([code](https://github.com/angular/angular/blob/fe81ff8cd6948bea5a6212721ea920a8572248e1/packages/core/src/metadata/directives.ts#L533))\r\n\r\n## What is the new behavior?\r\n\r\nComponent interface does not declare a `signals` property anymore, it is inherited from Directive. \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/52039","RelatedDescription":"Open PR \"refactor(core): no need for signals property in component interface sâ€¦\" (#52039)"},{"Id":"1927009363","IsPullRequest":true,"CreatedAt":"2023-10-04T21:31:01","Actor":"alxhub","Number":"52036","RawContent":null,"Title":"Bump version to \"v17.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/52036","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.7\" with changelog.\" (#52036)"},{"Id":"1927000378","IsPullRequest":true,"CreatedAt":"2023-10-04T21:20:49","Actor":"jessicajaniuk","Number":"52035","RawContent":null,"Title":"feat(core): Add schematic to migrate control flow syntax (WIP)","State":"open","Body":"This adds the migration to run to migrate to the block control flow syntax. It includes ngIf, ngFor, and ngSwitch.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Feature\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/52035","RelatedDescription":"Open PR \"feat(core): Add schematic to migrate control flow syntax (WIP)\" (#52035)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1929299394","IsPullRequest":true,"CreatedAt":"2023-10-06T01:34:11","Actor":"lam131","Number":"25968","RawContent":null,"Title":"Create codacy.yml","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25968","RelatedDescription":"Open PR \"Create codacy.yml\" (#25968)"},{"Id":"1929244941","IsPullRequest":true,"CreatedAt":"2023-10-06T00:12:51","Actor":"clydin","Number":"25967","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add initial support for bundle budgets to esbuild builders","State":"open","Body":"The bundle budget functionality (`budgets` option) is not available when using the esbuild-based builders (`browser-esbuild`/`application`). The existing option format from the Webpack-based builder can continue to be used. All budget types except `anyComponentStyle` are implemented. Any usage of the `anyComponentStyle` type will be ignored when calculating budget failures. This type will be implemented in a future change.","Url":"https://github.com/angular/angular-cli/pull/25967","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): add initial support for bundle budgets to esbuild builders\" (#25967)"},{"Id":"1929044841","IsPullRequest":false,"CreatedAt":"2023-10-05T21:33:43","Actor":"muhamedkarajic","Number":"25966","RawContent":null,"Title":"Angular production build minifies the css class names","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nI would like to know if Angular provies a way to minify the css/scss using the build process?\n\n### Describe the solution you'd like\n\nThe flag which enables me to do that.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25966","RelatedDescription":"Closed issue \"Angular production build minifies the css class names\" (#25966)"},{"Id":"1928569156","IsPullRequest":true,"CreatedAt":"2023-10-05T19:35:35","Actor":"clydin","Number":"25964","RawContent":null,"Title":"fix(@angular-devkit/build-angular): ensure Web Worker code file is replaced in esbuild builders","State":"closed","Body":"The previous Web Worker bundling code for the esbuild-based builders assumed that the first output file was the JavaScript code for the worker. While this is typically the case, when sourcemaps are enabled it may not be. To ensure the code file is used as the replacement path for the Worker constructor, the output files are now searched for the code file.","Url":"https://github.com/angular/angular-cli/pull/25964","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): ensure Web Worker code file is replaced in esbuild builders\" (#25964)"},{"Id":"1926363794","IsPullRequest":true,"CreatedAt":"2023-10-05T17:30:53","Actor":"alan-agius4","Number":"25946","RawContent":null,"Title":"feat(@angular-devkit/build-angular): standardize application builder output structure","State":"closed","Body":"This commit updates the application builder to output files in a standardized manner. The builder will output a `browser` directory for all the files that can be accessible by the browser, and a `server` directory that contains the SSR application. Both of these directories are created as children in the configured `outputPath`. Stats and license files will be outputted directly in the configured `outputPath`.\r\n    \r\nExample of output:\r\n```\r\n3rdpartylicenses.txt\r\nâ”œâ”€â”€ browser\r\nâ”‚   â”œâ”€â”€ chunk-2XJVAMHT.js\r\nâ”‚   â”œâ”€â”€ favicon.ico\r\nâ”‚   â”œâ”€â”€ index.html\r\nâ”‚   â”œâ”€â”€ main-6JLMM7WW.js\r\nâ”‚   â”œâ”€â”€ polyfills-4UVFGIFL.js\r\nâ”‚   â””â”€â”€ styles-5INURTSO.css\r\nâ””â”€â”€ server\r\n    â”œâ”€â”€ chunk-4ZCEIHD4.mjs\r\n    â”œâ”€â”€ chunk-PMR7BAU4.mjs\r\n    â”œâ”€â”€ chunk-TSP6W7K5.mjs\r\n    â”œâ”€â”€ index.server.html\r\n    â”œâ”€â”€ main.server.mjs\r\n    â””â”€â”€ server.mjs\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/25946","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): standardize application builder output structure\" (#25946)"},{"Id":"1928717491","IsPullRequest":true,"CreatedAt":"2023-10-05T17:03:11","Actor":"clydin","Number":"25965","RawContent":null,"Title":"perf(@angular-devkit/build-angular): use incremental bundling for component styles in esbuild builders","State":"open","Body":"When using the esbuild-based builders (`esbuild-browser`/`application`) in watch mode (including `ng serve`), component stylesheets will now be incrementally rebuilt when needed. This avoids a full build of each affected component's styles during an application rebuild. Both JIT and AOT mode are supported as well as both inline and external styles.","Url":"https://github.com/angular/angular-cli/pull/25965","RelatedDescription":"Open PR \"perf(@angular-devkit/build-angular): use incremental bundling for component styles in esbuild builders\" (#25965)"},{"Id":"1928045102","IsPullRequest":true,"CreatedAt":"2023-10-05T15:28:49","Actor":"alan-agius4","Number":"25958","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove hardcoded Node.js version in application builder","State":"closed","Body":"\r\n\r\nThis commit removed the hard coded Node.js version in application builder server config and instead passes the Angular CLI supported Node.js versions that are currently stamped using Bazel.","Url":"https://github.com/angular/angular-cli/pull/25958","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove hardcoded Node.js version in application builder\" (#25958)"},{"Id":"1928557860","IsPullRequest":true,"CreatedAt":"2023-10-05T15:27:27","Actor":"alan-agius4","Number":"25963","RawContent":null,"Title":"docs: release notes for the v15.2.10 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25963","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.2.10 release\" (#25963)"},{"Id":"1928525716","IsPullRequest":true,"CreatedAt":"2023-10-05T15:25:25","Actor":"alan-agius4","Number":"25962","RawContent":null,"Title":"Bump version to \"v15.2.10\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25962","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.10\" with changelog.\" (#25962)"},{"Id":"1928513088","IsPullRequest":true,"CreatedAt":"2023-10-05T15:04:30","Actor":"clydin","Number":"25961","RawContent":null,"Title":"docs: release notes for the v14.2.13 release","State":"closed","Body":"Cherry-picks the changelog from the \"14.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25961","RelatedDescription":"Closed or merged PR \"docs: release notes for the v14.2.13 release\" (#25961)"},{"Id":"1928506231","IsPullRequest":true,"CreatedAt":"2023-10-05T15:02:11","Actor":"clydin","Number":"25960","RawContent":null,"Title":"Bump version to \"v14.2.13\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25960","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.2.13\" with changelog.\" (#25960)"},{"Id":"1927898608","IsPullRequest":true,"CreatedAt":"2023-10-05T14:24:24","Actor":"alan-agius4","Number":"25956","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31","State":"closed","Body":"Addresses npm audit report of GHSA-7fh5-64p2-3v2j\r\n\r\nCloses https://github.com/angular/angular-cli/issues/25944","Url":"https://github.com/angular/angular-cli/pull/25956","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31\" (#25956)"},{"Id":"1928253084","IsPullRequest":true,"CreatedAt":"2023-10-05T14:00:06","Actor":"alan-agius4","Number":"25959","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly resolve polyfills when `baseUrl` URL is not set to root","State":"closed","Body":"\r\nPrior to this change when `baseUrl` was set to non-root or not set polyfills were not correctly resolved. Internally Esbuild uses the `baseUrl` to resolve non relative imports.\r\n\r\nCloses: #25341\r\n","Url":"https://github.com/angular/angular-cli/pull/25959","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly resolve polyfills when `baseUrl` URL is not set to root\" (#25959)"},{"Id":"1925674107","IsPullRequest":false,"CreatedAt":"2023-10-05T13:54:09","Actor":"clusterberries","Number":"25944","RawContent":null,"Title":"@angular-devkit/build-angular depends on vulnarable version of postcss","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning `npm audit` on Angular v15 project causes an error output, because `@angular-devkit/build-angular` depends on vulnerable version of `postcss`.\r\nSee more details: https://github.com/advisories/GHSA-7fh5-64p2-3v2j\n\n### Minimal Reproduction\n\n1. Create new Angular v15 project.\r\n2. Run `npm audit` in the project folder\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 15.2.4\r\nNode: 16.15.1\r\nPackage Manager: npm 8.11.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.3\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.4\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.4\r\n@angular-devkit/schematics      15.2.4\r\n@angular/cli                    15.2.4\r\n@angular/language-service       15.1.3\r\n@schematics/angular             15.2.4\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25944","RelatedDescription":"Closed issue \"@angular-devkit/build-angular depends on vulnarable version of postcss\" (#25944)"},{"Id":"1927395107","IsPullRequest":true,"CreatedAt":"2023-10-05T13:49:51","Actor":"angular-robot","Number":"25953","RawContent":null,"Title":"build: update dependency @types/jasmine to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~4.3.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.6/5.1.0) |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25953","RelatedDescription":"Closed or merged PR \"build: update dependency @types/jasmine to v5\" (#25953)"},{"Id":"1927395192","IsPullRequest":true,"CreatedAt":"2023-10-05T13:49:07","Actor":"angular-robot","Number":"25954","RawContent":null,"Title":"build: update dependency @types/jasmine to v5","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | dependencies | major | [`~4.3.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.6/5.1.0) |\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~4.3.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/4.3.6/5.1.0) |\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25954","RelatedDescription":"Closed or merged PR \"build: update dependency @types/jasmine to v5\" (#25954)"},{"Id":"1927913593","IsPullRequest":true,"CreatedAt":"2023-10-05T13:48:36","Actor":"alan-agius4","Number":"25957","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31","State":"closed","Body":"Addresses npm audit report of GHSA-7fh5-64p2-3v2j\r\n\r\n\r\nCloses https://github.com/angular/angular-cli/issues/25944","Url":"https://github.com/angular/angular-cli/pull/25957","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31\" (#25957)"},{"Id":"1927675146","IsPullRequest":true,"CreatedAt":"2023-10-05T08:17:55","Actor":"angular-robot","Number":"25955","RawContent":null,"Title":"build: update dependency vite to v4.4.11","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://togithub.com/vitejs/vite/tree/main/#readme) ([source](https://togithub.com/vitejs/vite)) | dependencies | patch | [`4.4.10` -> `4.4.11`](https://renovatebot.com/diffs/npm/vite/4.4.10/4.4.11) |\n| [vite](https://togithub.com/vitejs/vite/tree/main/#readme) ([source](https://togithub.com/vitejs/vite)) | devDependencies | patch | [`4.4.10` -> `4.4.11`](https://renovatebot.com/diffs/npm/vite/4.4.10/4.4.11) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v4.4.11`](https://togithub.com/vitejs/vite/releases/tag/v4.4.11)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v4.4.10...v4.4.11)\n\nPlease refer to [CHANGELOG.md](https://togithub.com/vitejs/vite/blob/v4.4.11/packages/vite/CHANGELOG.md) for details.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy42LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy42LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\n","Url":"https://github.com/angular/angular-cli/pull/25955","RelatedDescription":"Open PR \"build: update dependency vite to v4.4.11\" (#25955)"},{"Id":"1927116339","IsPullRequest":true,"CreatedAt":"2023-10-04T23:46:25","Actor":"clydin","Number":"25952","RawContent":null,"Title":"Bump version to \"v17.0.0-next.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25952","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.7\" with changelog.\" (#25952)"},{"Id":"1927041391","IsPullRequest":true,"CreatedAt":"2023-10-04T21:58:25","Actor":"clydin","Number":"25951","RawContent":null,"Title":"docs: release notes for the v16.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25951","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.5 release\" (#25951)"},{"Id":"1926848427","IsPullRequest":true,"CreatedAt":"2023-10-04T21:56:47","Actor":"clydin","Number":"25950","RawContent":null,"Title":"Bump version to \"v16.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25950","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.5\" with changelog.\" (#25950)"},{"Id":"1926676095","IsPullRequest":true,"CreatedAt":"2023-10-04T19:11:08","Actor":"clydin","Number":"25949","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31","State":"closed","Body":"Addresses npm audit report of https://github.com/advisories/GHSA-7fh5-64p2-3v2j\r\n\r\n\r\nCloses https://github.com/angular/angular-cli/issues/25944","Url":"https://github.com/angular/angular-cli/pull/25949","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update dependency postcss to v8.4.31\" (#25949)"},{"Id":"1926669943","IsPullRequest":true,"CreatedAt":"2023-10-04T17:29:57","Actor":"alan-agius4","Number":"25948","RawContent":null,"Title":"ci: disable auto updates for `aspect_bazel_lib`","State":"closed","Body":"Updates to `aspect_bazel_lib` currently breaks the build.\r\n","Url":"https://github.com/angular/angular-cli/pull/25948","RelatedDescription":"Closed or merged PR \"ci: disable auto updates for `aspect_bazel_lib`\" (#25948)"},{"Id":"1926328557","IsPullRequest":true,"CreatedAt":"2023-10-04T15:03:41","Actor":"angular-robot","Number":"25945","RawContent":null,"Title":"build: update dependency postcss to v8.4.31 [security]","State":"closed","Body":"This PR contains the following updates:\r\n\r\n| Package | Type | Update | Change |\r\n|---|---|---|---|\r\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.30` -> `8.4.31`](https://renovatebot.com/diffs/npm/postcss/8.4.30/8.4.31) |\r\n\r\n### GitHub Vulnerability Alerts\r\n\r\n#### [CVE-2023-44270](https://nvd.nist.gov/vuln/detail/CVE-2023-44270)\r\n\r\nAn issue was discovered in PostCSS before 8.4.31. It affects linters using PostCSS to parse external Cascading Style Sheets (CSS). There may be `\\r` discrepancies, as demonstrated by `@font-face{ font:(\\r/*);}` in a rule.\r\n\r\n---\r\n\r\n### Release Notes\r\n\r\n<details>\r\n<summary>postcss/postcss (postcss)</summary>\r\n\r\n### [`v8.4.31`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#8431)\r\n\r\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.30...8.4.31)\r\n\r\n-   Fixed `\\r` parsing to fix CVE-2023-44270.\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Configuration\r\n\r\nðŸ“… **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\r\n\r\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\r\n\r\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\r\n\r\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\r\n\r\n---\r\n\r\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\r\n\r\n---\r\n\r\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\r\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy41LjAiLCJ1cGRhdGVkSW5WZXIiOiIzNy41LjAiLCJ0YXJnZXRCcmFuY2giOiJtYWluIn0=-->\r\n\r\nCloses https://github.com/angular/angular-cli/issues/25944","Url":"https://github.com/angular/angular-cli/pull/25945","RelatedDescription":"Closed or merged PR \"build: update dependency postcss to v8.4.31 [security]\" (#25945)"},{"Id":"1926385152","IsPullRequest":true,"CreatedAt":"2023-10-04T15:02:43","Actor":"alan-agius4","Number":"25947","RawContent":null,"Title":"ci: temporary disable `sass` from auto updates","State":"closed","Body":"`sass` requires some changes to be updated.\r\n","Url":"https://github.com/angular/angular-cli/pull/25947","RelatedDescription":"Closed or merged PR \"ci: temporary disable `sass` from auto updates\" (#25947)"},{"Id":"1925014580","IsPullRequest":true,"CreatedAt":"2023-10-04T13:50:21","Actor":"clydin","Number":"25941","RawContent":null,"Title":"fix(@angular-devkit/build-angular): re-add TestBed compileComponents in schematics to support defer block testing","State":"closed","Body":"The defer block support introduces a new asynchronous form of the set class metadata Angular function. This form is needed to allow for providing metadata for dynamically imported deferred components. The asynchronous compileComponents call within TestBed is now used to initialize this metadata during unit tests. Unit tests that contain defer blocks must use this call prior to executing a test to allow templates containing defer to properly render. Existing tests that do not use the new defer block do not require modification unless the defer block is introduced into components used in the unit test.","Url":"https://github.com/angular/angular-cli/pull/25941","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): re-add TestBed compileComponents in schematics to support defer block testing\" (#25941)"},{"Id":"1924992332","IsPullRequest":true,"CreatedAt":"2023-10-04T13:50:07","Actor":"clydin","Number":"25940","RawContent":null,"Title":"fix(@angular-devkit/build-angular): clear diagnostic cache when external templates change with esbuild builders","State":"closed","Body":"To prevent stale Angular template diagnostics from persisting in watch mode (including `ng serve`), the template diagnostic cache will now be invalidated based on the set of changed external template files. This ensures that the Angular AOT compiler will analyze the template again during the rebuild and clear any fixed errors.","Url":"https://github.com/angular/angular-cli/pull/25940","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): clear diagnostic cache when external templates change with esbuild builders\" (#25940)"},{"Id":"1924839918","IsPullRequest":true,"CreatedAt":"2023-10-04T13:49:51","Actor":"clydin","Number":"25939","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): improve accuracy of programmatic watch mode usage for esbuild builders","State":"closed","Body":"To better capture file changes after the initial build for the esbuild-based builders in a programmatic usage, the file watching initialization has been moved to before the first build results are yielded. This allows tests that execute code to change files with improved accuracy of the watch mode triggering. The application builder now also supports aborting the watch mode programmatically. This allows tests to gracefully stop the watch mode and more fully cleanup the test at completion.","Url":"https://github.com/angular/angular-cli/pull/25939","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): improve accuracy of programmatic watch mode usage for esbuild builders\" (#25939)"},{"Id":"1925344835","IsPullRequest":false,"CreatedAt":"2023-10-04T03:36:54","Actor":"d9j","Number":"25943","RawContent":null,"Title":"[browser-esbuild] in live reload mode @imported  saas styles not reflected in frontend without manully restarting server","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmaybe related to this\r\nhttps://github.com/angular/angular-cli/issues/23815\r\n\r\nfirst start project with live reload  enabled e.g\r\nng serve\r\n\r\ninside any  angular components scss file use @import another scss file . for example .\r\n@import './mycomponent/another.scss';\r\n\r\nthen edit another.scss file to apply styles you expect to reflect in front end. upon  saving changes of  another.scss file. you will see no changes in front end  reflected unless you restart dev browser-esbuild server.\r\n\n\n### Minimal Reproduction\n\nmaybe related to this\r\nhttps://github.com/angular/angular-cli/issues/23815\r\n\r\nfirst start project with live reload  enabled e.g\r\n\r\nng serve\r\n\r\n\r\ninside any  angular components scss file use @import another scss file . for example .\r\n@import './mycomponent/another.scss';\r\n\r\nthen edit another.scss file to apply styles you expect to reflect in front end. upon  saving changes of  another.scss file. you will see no changes in front end  reflected unless you restart dev browser-esbuild server.\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25943","RelatedDescription":"Open issue \"[browser-esbuild] in live reload mode @imported  saas styles not reflected in frontend without manully restarting server\" (#25943)"},{"Id":"1925100110","IsPullRequest":true,"CreatedAt":"2023-10-03T23:25:34","Actor":"clydin","Number":"25942","RawContent":null,"Title":"test: enable build E2E tests for esbuild-based builders","State":"open","Body":"The build E2E tests have now been enabled for the esbuild-based builders. The bundle budget test is currently skipped pending feature implementation. Several redundant tests were also deleted due to the functionality already being covered by unit tests for the builders.","Url":"https://github.com/angular/angular-cli/pull/25942","RelatedDescription":"Open PR \"test: enable build E2E tests for esbuild-based builders\" (#25942)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1929362771","IsPullRequest":true,"CreatedAt":"2023-10-06T03:10:47","Actor":"wagnermaciel","Number":"27910","RawContent":null,"Title":"fix(material/button): fix outlined button focus color","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27910","RelatedDescription":"Open PR \"fix(material/button): fix outlined button focus color\" (#27910)"},{"Id":"1929157041","IsPullRequest":false,"CreatedAt":"2023-10-05T22:18:07","Actor":"Achilles1515","Number":"27909","RawContent":null,"Title":"bug(material/chips): MatChipSelectionChange not emitting on certain deselections","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`selectionChange` output for `MatChipOption` is [stated to be](https://material.angular.io/components/chips/api#MatChipOption):\r\n>  Emitted when the chip is selected or **deselected**.\r\n\r\nBut this is not true for deselection. It appears the event is only emitted for deselection when **the chip in question** is manually selected/toggled by the user. When the `MatChipListbox` is **in single-select mode and a chip is currently selected**, selecting a different chip means the prior chip is deselected --> deselecting should mean emitting the `selectionChange` event, but it is not happening in this scenario.\r\n\r\nSee the below StackBlitz link.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/firqg1\r\nSteps to reproduce:\r\n\r\n(First chip is initially selected)\r\n1.  Click on the Second chip.\r\n2. First chip becomes deselected, but no `selectionChange` output event was emitted (in this case, the `MatChipSelectionChange` object should be logged to the console).\r\n\r\n\r\n### Expected Behavior\r\n\r\n`selectionChange` output for the First chip should have emitted.\r\n\r\n### Actual Behavior\r\n\r\n`selectionChange` output for the First chip does not emit.\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16.2.7 (latest)\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27909","RelatedDescription":"Open issue \"bug(material/chips): MatChipSelectionChange not emitting on certain deselections\" (#27909)"},{"Id":"1929129041","IsPullRequest":true,"CreatedAt":"2023-10-05T22:01:06","Actor":"zarend","Number":"27908","RawContent":null,"Title":"fix(cdk/tree): update active item on focus","State":"open","Body":"[fix(cdk/tree): update active item on focus](https://github.com/angular/components/pull/27908/commits/1c0149354a31f70626f3b0d4718fef6dd806f8b9) \r\n\r\nUpdate CdkTreeNode, TreeKeyManager and Tree \"Load More\" example\r\nregarding progrmatic focus.\r\n\r\n - In CdkTreeNode, update the active item on the focus event.\r\n - expose TreeKeyManager.updateActiveItem\r\n - remove TreeKeyManager.onClick\r\n - In \"Load More\" example, when clicking \"Load More\", focus first node\r\n   that is added.","Url":"https://github.com/angular/components/pull/27908","RelatedDescription":"Open PR \"fix(cdk/tree): update active item on focus\" (#27908)"},{"Id":"1924867341","IsPullRequest":true,"CreatedAt":"2023-10-05T21:07:42","Actor":"mmalerba","Number":"27882","RawContent":null,"Title":"fix(material/bottom-sheet): move unthemable tokens to theme mixin","State":"closed","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.bottom-sheet-theme that are not emitted by any of: mat.bottom-sheet-color, mat.bottom-sheet-typography, mat.bottom-sheet-density. If you rely on the partial mixins only and don't call mat.bottom-sheet-theme, you can add mat.bottom-sheet-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27882","RelatedDescription":"Closed or merged PR \"fix(material/bottom-sheet): move unthemable tokens to theme mixin\" (#27882)"},{"Id":"1928995432","IsPullRequest":true,"CreatedAt":"2023-10-05T20:44:08","Actor":"wagnermaciel","Number":"27907","RawContent":null,"Title":"fix: ci lint failure","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27907","RelatedDescription":"Closed or merged PR \"fix: ci lint failure\" (#27907)"},{"Id":"1928940504","IsPullRequest":true,"CreatedAt":"2023-10-05T19:38:17","Actor":"wagnermaciel","Number":"27906","RawContent":null,"Title":"refactor(material/button): switch outlined button to tokens theming API","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27906","RelatedDescription":"Open PR \"refactor(material/button): switch outlined button to tokens theming API\" (#27906)"},{"Id":"1928907520","IsPullRequest":true,"CreatedAt":"2023-10-05T19:16:40","Actor":"mmalerba","Number":"27905","RawContent":null,"Title":"fix(material/slide-toggle): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.slide-toggle-theme that are not emitted by any of: mat.slide-toggle-color, mat.slide-toggle-typography, mat.slide-toggle-density. If you rely on the partial mixins only and don't call mat.slide-toggle-theme, you can add mat.slide-toggle-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27905","RelatedDescription":"Open PR \"fix(material/slide-toggle): move unthemable tokens to theme mixin\" (#27905)"},{"Id":"1924969793","IsPullRequest":true,"CreatedAt":"2023-10-05T19:09:55","Actor":"mmalerba","Number":"27890","RawContent":null,"Title":"fix(material/table): move unthemable tokens to theme mixin","State":"closed","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.table-theme that are not emitted by any of: mat.table-color, mat.table-typography, mat.table-density. If you rely on the partial mixins only and don't call mat.table-theme, you can add mat.table-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27890","RelatedDescription":"Closed or merged PR \"fix(material/table): move unthemable tokens to theme mixin\" (#27890)"},{"Id":"1924962090","IsPullRequest":true,"CreatedAt":"2023-10-05T19:04:13","Actor":"mmalerba","Number":"27889","RawContent":null,"Title":"fix(material/sidenav): move unthemable tokens to theme mixin","State":"closed","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.sidenav-theme that are not emitted by any of: mat.sidenav-color, mat.sidenav-typography, mat.sidenav-density. If you rely on the partial mixins only and don't call mat.sidenav-theme, you can add mat.sidenav-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27889","RelatedDescription":"Closed or merged PR \"fix(material/sidenav): move unthemable tokens to theme mixin\" (#27889)"},{"Id":"1924957583","IsPullRequest":true,"CreatedAt":"2023-10-05T18:56:58","Actor":"mmalerba","Number":"27888","RawContent":null,"Title":"fix(material/menu): move unthemable tokens to theme mixin","State":"closed","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.menu-theme that are not emitted by any of: mat.menu-color, mat.menu-typography, mat.menu-density. If you rely on the partial mixins only and don't call mat.menu-theme, you can add mat.menu-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27888","RelatedDescription":"Closed or merged PR \"fix(material/menu): move unthemable tokens to theme mixin\" (#27888)"},{"Id":"1928829825","IsPullRequest":true,"CreatedAt":"2023-10-05T18:25:24","Actor":"wagnermaciel","Number":"27904","RawContent":null,"Title":"fix(material/button): fix color tokens of raised buttons","State":"open","Body":"* fix bug where the raised button is accidentally using the flat button color tokens","Url":"https://github.com/angular/components/pull/27904","RelatedDescription":"Open PR \"fix(material/button): fix color tokens of raised buttons\" (#27904)"},{"Id":"1926561705","IsPullRequest":true,"CreatedAt":"2023-10-05T17:11:07","Actor":"mmalerba","Number":"27898","RawContent":null,"Title":"fix(material/theming): Fix subtle bug in current-selector-or-root","State":"closed","Body":"There was a sublte bug in the previous implementation. Consider the case:\r\n\r\n```scss\r\ndiv {\r\n  @include current-selector-or-root() {\r\n    color: red;\r\n  }\r\n  color: green;\r\n}\r\n```\r\n\r\nThe previous implementation lifted the `color: red;` into a separate selector block that came *after* the initial one, resulting in the order being flipped:\r\n\r\n```css\r\ndiv {\r\n  color: green;\r\n}\r\ndiv {\r\n  color: red;\r\n}\r\n```\r\n\r\nThe new code will produce the correct ordering:\r\n\r\n```css\r\ndiv {\r\n  color: red;\r\n  color: green;\r\n}\r\n```","Url":"https://github.com/angular/components/pull/27898","RelatedDescription":"Closed or merged PR \"fix(material/theming): Fix subtle bug in current-selector-or-root\" (#27898)"},{"Id":"1928442589","IsPullRequest":true,"CreatedAt":"2023-10-05T14:29:37","Actor":"json-derulo","Number":"27903","RawContent":null,"Title":"docs(material/form-field): use correct input color in custom control example","State":"open","Body":"In the Form Field docs, there is an example how to create a custom control. In this example, the inputs of the custom control don't inherit the text color from the form field. In light mode, this is just fine. But when switching to a dark mode theme, the color of the inputs default to the browser default (black):\r\n\r\n<img width=\"271\" alt=\"image\" src=\"https://github.com/angular/components/assets/18580672/536f00bc-f750-4f73-9491-437c820bbeca\">\r\n\r\nIt should inherit the color from the form field, which is fixed by this PR.","Url":"https://github.com/angular/components/pull/27903","RelatedDescription":"Open PR \"docs(material/form-field): use correct input color in custom control example\" (#27903)"},{"Id":"1927741383","IsPullRequest":false,"CreatedAt":"2023-10-05T08:54:04","Actor":"saithis","Number":"27902","RawContent":null,"Title":"feat(datepicker): use invalid date instead of null when the date input it not empty","State":"open","Body":"### Feature Description\n\nSet the value to invalid date instead of null, when the input is filled, but invalid. As this would be a breaking change, maybe introduce a setting to optionally enable this.\n\n### Use Case\n\nCurrently when you use a datepicker without ngModel or reactive forms the input wont get red for invalid inputs and the value is null. So you cant differenciate between empty input and something invalid. Even aria-invalid is \"false\". \r\n\r\nWith this feature you could solve this.","Url":"https://github.com/angular/components/issues/27902","RelatedDescription":"Open issue \"feat(datepicker): use invalid date instead of null when the date input it not empty\" (#27902)"},{"Id":"1925011820","IsPullRequest":true,"CreatedAt":"2023-10-04T21:32:32","Actor":"mmalerba","Number":"27893","RawContent":null,"Title":"refactor(multiple): Add base mixin for components with no base tokens","State":"closed","Body":"This ensures API consistency and gives us a place to put base tokens, should any be added in the future.","Url":"https://github.com/angular/components/pull/27893","RelatedDescription":"Closed or merged PR \"refactor(multiple): Add base mixin for components with no base tokens\" (#27893)"},{"Id":"1926761752","IsPullRequest":true,"CreatedAt":"2023-10-04T18:34:40","Actor":"wagnermaciel","Number":"27901","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27901","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#27901)"},{"Id":"1926743497","IsPullRequest":true,"CreatedAt":"2023-10-04T18:17:57","Actor":"wagnermaciel","Number":"27900","RawContent":null,"Title":"docs: release notes for the v16.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27900","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.7 release\" (#27900)"},{"Id":"1926724713","IsPullRequest":true,"CreatedAt":"2023-10-04T18:15:38","Actor":"wagnermaciel","Number":"27899","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27899","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#27899)"},{"Id":"1926492203","IsPullRequest":false,"CreatedAt":"2023-10-04T15:31:50","Actor":"souzaemmanuel","Number":"27897","RawContent":null,"Title":"bug(mat-divider): mat-divider not displaying when printing or saving in Firefox","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using window.print() function or press Ctrl + P to print or save a webpage, the mat-divider component is not visible in the printed or saved output. However, it displays correctly on the screen in Chrome.\r\n\r\nI was able to reproduce using the StackBlitz code provided for the angular material official component page: https://v12.material.angular.io/components/divider/overview\r\n\r\nThere is a way to make it work and display when printing and saving using Firefox?\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/angular/byleybgjaxy?file=src%2Fapp%2Fdivider-overview-example.ts\r\n\r\n**Steps to reproduce:**\r\n1. Open the StackBlitz (or another page that contains mat-divider) in Firefox.\r\n2. Type on the console window.print() or ctrl + p.\r\n3. Observe that the mat-divider component is missing in the printed or saved output.\r\n\r\n**Using chrome:**\r\n ![image](https://github.com/angular/components/assets/31477606/26df1781-3513-496f-a4e5-e6c48b8c1820)\r\n\r\n**Using Firefox:** \r\n![image](https://github.com/angular/components/assets/31477606/cd47c140-31f2-4da5-86fc-c2427421cbf2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nDisplay the divider when printing and saving using Firefox\r\n\r\n### Actual Behavior\r\n\r\nThe mat-divider component is not visible in the printed or saved output.\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.13\r\n- CDK/Material: 12.2.17\r\n- Browser(s): Firefox  version 118.0.1 (64 bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27897","RelatedDescription":"Open issue \"bug(mat-divider): mat-divider not displaying when printing or saving in Firefox\" (#27897)"},{"Id":"1926415568","IsPullRequest":true,"CreatedAt":"2023-10-04T14:57:39","Actor":"cromefire","Number":"27896","RawContent":null,"Title":"fix(material/datepicker): Fixed raw date value being compared","State":"open","Body":"In the function [`isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L617) numeric values are supposed to be compared. It is being called from [`_isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L342) where `value` is compared to `startValue` and `endValue` which are calculated in [`_setRanges`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L599-L600) using [`_getCellCompareValue`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L578) which returns a number derived from `Date` derived from the original generic date object. `value` though is not a number like the typing might suggest, but a generic date object [retrieved from `MatCalendarCell.rawValue`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L515).\r\n\r\nThe correct way to compare these values would be to derive **all** 3 `startValue`, `endValue` and `value` using `_getCellCompareValue`, luckily the `MatCalendarCell` already contains such a derived value: [`compareValue`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L47), which is being [derived using `_getCellCompareValue`]()\r\n\r\n#### Why is this a problem and why isn't it a problem for most?\r\nNormally when using `Date` as your generic date object of choice, the [`isInRange`](https://github.com/angular/components/blob/bdef0c399ae37a64cf6cb204fdb273b5e619daf5/src/material/datepicker/calendar-body.ts#L617) function implicitly calls the `valueOf()` function from `Date`, which happens to be equivalent to the logic in [`_getCellCompareValue`](https://github.com/angular/components/blob/1dc30e8eacae1f318b53a9d22a462571b9de8ddb/src/material/datepicker/month-view.ts#L578).\r\n\r\nBut we are using the Picker with `Temporal.PlainDate` (using a polyfill), which [explicitly forbids](https://tc39.es/proposal-temporal/docs/plaindate.html#valueOf) calling the `valueOf()` function and the logic breaks down. This change should not result in any visible change for anyone using generic date objects that already do the conversion to unix timestamp implicitly, just that it's done explicitly now, but it will fix compatibility with other choices that don't do this.\r\n\r\nAlso on another note: The current way this is implemented violates TypeScript constraints, because it passes a `Date` or other date type to a function which only accepts a `number`.","Url":"https://github.com/angular/components/pull/27896","RelatedDescription":"Open PR \"fix(material/datepicker): Fixed raw date value being compared\" (#27896)"},{"Id":"1926259097","IsPullRequest":false,"CreatedAt":"2023-10-04T13:46:52","Actor":"shammy8","Number":"27895","RawContent":null,"Title":"bug(menu): Disabled mat-menu-item on anchor tag still clickable","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nA disabled mat-menu-item anchor  ie`<a disabled mat-menu-item (click)=\"stillGetsCalled()\" routerLink=\"/stillNavigates\"> Anchor</a>` looks disabled but is still clickable.\r\n\r\nHowever a regular href `<a disabled mat-menu-item href=\"https://www.google.com\"> Google</a>` works as expected\r\n\r\nThis occurs with the cdk menu item too. \r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/32sike?file=src%2Fexample%2Fmenu-icons-example.html\r\nSteps to reproduce:\r\n1. Click the 3 dot menu, click Disabled Anchor Click, 'anchor click' is logged to the console\r\n2. Click the 3 dot menu, click Disabled Anchor RouterLink, NewComponent is rendered in the `router-outlet`\r\n\r\n\r\n### Expected Behavior\r\n\r\n`<a disabled mat-menu-item (click)=\"stillGetsCalled()\" routerLink=\"/stillNavigates\">` should not be clickable \r\n\r\n### Actual Behavior\r\n\r\n`<a disabled mat-menu-item (click)=\"stillGetsCalled()\" routerLink=\"/stillNavigates\">` is clickable\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27895","RelatedDescription":"Open issue \"bug(menu): Disabled mat-menu-item on anchor tag still clickable\" (#27895)"},{"Id":"1925845223","IsPullRequest":true,"CreatedAt":"2023-10-04T10:01:52","Actor":"MA-Maddin","Number":"27894","RawContent":null,"Title":"docs(material/toolbar): fix indentation in example","State":"open","Body":"Fixes the indentation of the toolbars' Overview example code.","Url":"https://github.com/angular/components/pull/27894","RelatedDescription":"Open PR \"docs(material/toolbar): fix indentation in example\" (#27894)"},{"Id":"1925007394","IsPullRequest":false,"CreatedAt":"2023-10-03T21:51:32","Actor":"lin-brian-l","Number":"27892","RawContent":null,"Title":"[Android] Talkback screenreader does not obey `FocusTrap`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`ConfigurableFocusTrap.focusInitialElementWhenReady()` successfully traps the user's focus on an element on Chrome, but it does not trap the focus of the Talkback screenreader. See the attached videos for details.\r\n\r\n<details><summary>Demos</summary>\r\n\r\nChrome - focus is trapped within the modal\r\n\r\nhttps://github.com/angular/components/assets/29388364/2d90792b-3f00-4227-85c7-523ccf6b48fa\r\n\r\nTalkback - focus is **not** trapped within the modal\r\n\r\nhttps://github.com/angular/components/assets/29388364/1f530c5b-650c-401d-9bf6-e2768e7ce14a\r\n\r\n</details>\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/stackblitz-starters-tcuzva?file=src%2Fmain.ts) \r\nSteps to reproduce:\r\n1. Activate Talkback\r\n2. In the demo app, click on the \"Open Modal\" button\r\n3. Tab through the elements in the modal by swiping right.\r\n\n\n### Expected Behavior\n\nFocus behavior should match Desktop, where it cannot leave the modal.\n\n### Actual Behavior\n\nOn Talkback, focus behavior leaves the modal and phone elements can be focused.\n\n### Environment\n\n- Angular: 16.2.7\r\n- CDK/Material: 16.2.6\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Android\r\n","Url":"https://github.com/angular/components/issues/27892","RelatedDescription":"Open issue \"[Android] Talkback screenreader does not obey `FocusTrap`\" (#27892)"},{"Id":"1924978215","IsPullRequest":true,"CreatedAt":"2023-10-03T21:27:25","Actor":"mmalerba","Number":"27891","RawContent":null,"Title":"fix(material/tabs): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.tabs-theme that are not emitted by any of: mat.tabs-color, mat.tabs-typography, mat.tabs-density. If you rely on the partial mixins only and don't call mat.tabs-theme, you can add mat.tabs-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27891","RelatedDescription":"Open PR \"fix(material/tabs): move unthemable tokens to theme mixin\" (#27891)"},{"Id":"1924950430","IsPullRequest":true,"CreatedAt":"2023-10-03T21:05:53","Actor":"mmalerba","Number":"27887","RawContent":null,"Title":"fix(material/form-field): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.form-field-theme that are not emitted by any of: mat.form-field-color, mat.form-field-typography, mat.form-field-density. If you rely on the partial mixins only and don't call mat.form-field-theme, you can add mat.form-field-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27887","RelatedDescription":"Open PR \"fix(material/form-field): move unthemable tokens to theme mixin\" (#27887)"},{"Id":"1924950079","IsPullRequest":true,"CreatedAt":"2023-10-03T21:05:35","Actor":"josephperrott","Number":"27886","RawContent":null,"Title":"ci: migrate saucelabs and browserstack tests to GHA","State":"open","Body":"Move Browserstack and Saucelabs testing from CircleCI to GHA\r\n\r\nIn testing I found no appreciable difference between different runner sizes and opted to use the free tier, we can revisit if we identify issues in the future.","Url":"https://github.com/angular/components/pull/27886","RelatedDescription":"Open PR \"ci: migrate saucelabs and browserstack tests to GHA\" (#27886)"},{"Id":"1924936021","IsPullRequest":true,"CreatedAt":"2023-10-03T20:57:55","Actor":"mmalerba","Number":"27885","RawContent":null,"Title":"fix(material/expansion): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.expansion-theme that are not emitted by any of: mat.expansion-color, mat.expansion-typography, mat.expansion-density. If you rely on the partial mixins only and don't call mat.expansion-theme, you can add mat.expansion-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27885","RelatedDescription":"Open PR \"fix(material/expansion): move unthemable tokens to theme mixin\" (#27885)"},{"Id":"1924885938","IsPullRequest":true,"CreatedAt":"2023-10-03T20:24:29","Actor":"mmalerba","Number":"27884","RawContent":null,"Title":"fix(material/chips): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.chips-theme that are not emitted by any of: mat.chips-color, mat.chips-typography, mat.chips-density. If you rely on the partial mixins only and don't call mat.chips-theme, you can add mat.chips-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27884","RelatedDescription":"Open PR \"fix(material/chips): move unthemable tokens to theme mixin\" (#27884)"},{"Id":"1924877434","IsPullRequest":true,"CreatedAt":"2023-10-03T20:18:05","Actor":"mmalerba","Number":"27883","RawContent":null,"Title":"fix(material/button-toggle): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.button-toggle-theme that are not emitted by any of: mat.button-toggle-color, mat.button-toggle-typography, mat.button-toggle-density. If you rely on the partial mixins only and don't call mat.button-toggle-theme, you can add mat.button-toggle-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27883","RelatedDescription":"Open PR \"fix(material/button-toggle): move unthemable tokens to theme mixin\" (#27883)"},{"Id":"1924840941","IsPullRequest":true,"CreatedAt":"2023-10-03T19:53:29","Actor":"mmalerba","Number":"27881","RawContent":null,"Title":"fix(material/divider): move unthemable tokens to theme mixin","State":"open","Body":"Though these tokens are not currently affected by the theme, in the future they will be affected by the design system used for theming (M2 or M3)\r\n\r\nBREAKING CHANGE:\r\nThere are new styles emitted by mat.divider-theme that are not emitted by any of: mat.divider-color, mat.divider-typography, mat.divider-density. If you rely on the partial mixins only and don't call mat.divider-theme, you can add mat.divider-base to get the missing styles.","Url":"https://github.com/angular/components/pull/27881","RelatedDescription":"Open PR \"fix(material/divider): move unthemable tokens to theme mixin\" (#27881)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-06T03:30:03.2997663Z","RunDurationInMilliseconds":2317}