{"Data":{"Angular-Issues":{"Issues":[{"Id":"1177424363","IsPullRequest":true,"CreatedAt":"2022-03-22T23:50:42","Actor":"mgechev","Number":"45415","RawContent":null,"Title":"docs: update the public roadmap","State":"open","Body":"Change status of existing projects and add new projects we're working\r\non.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45415","RelatedDescription":"Open PR \"docs: update the public roadmap\" (#45415)"},{"Id":"1177366398","IsPullRequest":false,"CreatedAt":"2022-03-22T22:21:02","Actor":"tayambamwanza","Number":"45414","RawContent":null,"Title":"Fetch current service worker hash easily","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nservice-worker\r\n\r\n### Description\r\n\r\nAs you know debugging service worker in production can be a pain. Something that has made it easier for me is to display the hash version in the settings menu of my applications, it provides a way to view \"version numbers\" of deployed service workers and then I can prepare a **safety-worker.js** for the correct version.\r\n\r\nSo when I get a user who reports to me they are having issues, I ask them to go to settings and send me the version number there. Before I started using this method it was a pain to explain to users that they must clear cache or unregister.\r\n\r\nLast I checked, the hash is only really emitted when update events are fired (and it is not type safe).\r\n\r\nI would like an easier/official way of accessing the service workers hash/version to make it easier to debug and identify what version of deployed service worker is giving issues in deployed apps.\r\n\r\n### Proposed solution\r\n\r\nA new method to get/expose the hash/version\r\n\r\ne.g. this.swUpdate.getHash() or this.swUpdate.getCurrentVersion();\r\n\r\nit would also be nice to perhaps have this.swUpdate.getPreviousHash();\r\n\r\n### Alternatives considered\r\n\r\nContinue using a workaround for this value, perhaps add workaround to documentation.\r\n\r\nHere is code I have written\r\n\r\n```ts\r\n availableUpdate$: Observable<void> = this.swUpdate.available.pipe(\r\n    map((event: UpdateAvailableEvent) => {\r\n      const updateInfo = {\r\n        current_version: event.current.hash,\r\n        update_version: event.available.hash,\r\n      };\r\n\r\n     //  this.storage.set('pwaVersion', updateInfo.current_version).subscribe();\r\n\r\n      this.swUpdate.activateUpdate();\r\n    })\r\n  );\r\n```\r\n\r\n```ts\r\n  activatedUpdate$: Observable<void> = this.swUpdate.activated.pipe(\r\n    map((event: UpdateActivatedEvent) => {\r\n      const previousUpdate =\r\n        event.previous?.hash !== undefined ? event.previous.hash : 'none';\r\n\r\n      const successfulUpdateInfo = {\r\n        previous_version: previousUpdate,\r\n        current_version: event.current.hash,\r\n      };\r\n\r\n      // this.storage.set('pwaVersion', successfulUpdateInfo.current_version).subscribe();\r\n    })\r\n  );\r\n```","Url":"https://github.com/angular/angular/issues/45414","RelatedDescription":"Open issue \"Fetch current service worker hash easily\" (#45414)"},{"Id":"1177155224","IsPullRequest":false,"CreatedAt":"2022-03-22T18:36:01","Actor":"elnipa","Number":"45413","RawContent":null,"Title":"Compile error related to nullish coalescing in template ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter updating one of my projects from v13.1.x to v.13.2.x or v13.3.x the project would not compile anymore with a very generic error message.\r\nNarrowing down the bug was thus very difficult. By successive testing of all modules in the project I was able to achieve a minimal reproduction of the bug. \r\n\r\nThe following setup crashes the app:\r\n* nullish coalescing in template which might not be needed (_The left side of this nullish coalescing operation does not include 'null' or 'undefined' in its type, therefore the '??' operator can be safely removed._)\r\n* strictTemplates mode in angular compiler options enabled\r\n* component using a generic extending a Record\r\n\r\nRemoving the unnecessary nullish coalescing in this case makes the project compile again. \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/elnipa/ng13.3-null-span-bug\n\n### Please provide the exception or error you saw\n\n```true\n<e> [webpack-dev-middleware] Error: Cannot read properties of null (reading 'span')\r\n<e>     at analyzingFileEmitter (C:\\.....\\node_modules\\@ngtools\\webpack\\src\\ivy\\plugin.js:456:23)\r\n<e>     at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n<e>     at async AngularWebpackPlugin.rebuildRequiredFiles (C:\\.....\\node_modules\\@ngtools\\webpack\\src\\ivy\\plugin.js:281:36)\r\n<e>     at async C:\\.....\\node_modules\\@ngtools\\webpack\\src\\ivy\\plugin.js:222:17\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.0\r\nNode: 16.13.0\r\nPackage Manager: npm 8.1.0\r\nOS: win32 x64\r\n\r\nAngular: 13.3.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.0\r\n@angular-devkit/build-angular   13.3.0\r\n@angular-devkit/core            13.3.0\r\n@angular-devkit/schematics      13.3.0\r\n@schematics/angular             13.3.0\r\nrxjs                            7.5.5\r\ntypescript                      4.6.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/45413","RelatedDescription":"Open issue \"Compile error related to nullish coalescing in template \" (#45413)"},{"Id":"1176986648","IsPullRequest":false,"CreatedAt":"2022-03-22T16:38:03","Actor":"chladog","Number":"45412","RawContent":null,"Title":"Guards not outlet-aware","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nTake a look at the following snippets. I would like to build a Sidenav type of application with non-guarded primary outlet and guarded auxiliary outlet accessible only by elevated users.\r\nBoth should be at the same level as:\r\n\r\n```HTML\r\nOutlets on same level here in AppComponent.html:\r\n<!-- aside should render content only for editors that pass the guard -->\r\n<router-outlet name=\"aside\"></router-outlet>\r\n\r\n<!-- primary should render HelloComponent content always.-->\r\n<router-outlet></router-outlet>\r\n```\r\n\r\n```JS\r\nRouterModule.forRoot([\r\n      {\r\n        path: '',\r\n        component: HelloComponent,\r\n      },\r\n      {\r\n        path: '',\r\n        outlet: 'aside',\r\n        component: AsideContentComponent,\r\n        canActivate: [IsEditorGuard],\r\n      },\r\n    ]),\r\n  ]\r\n```\r\nGuard\r\n```JS\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IsEditorGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return false;\r\n  }\r\n}\r\n```\r\n\r\nNaturally one would expect that once you canNOTactivate activate a route in particular outlet only the content in that outlet not to render and other outlets/primary outlet follow their own set of guards and renders where eligible. Unfortunately that's  not the case currently. As in above example none of the content is rendered on root path, not even in primary outlet.\r\n\r\nI tried to also swap the guard so the primary outlet shouldn't render and aside content should render as both are on same level only with different access.\r\nIt seems to me like the outlet parameter of the route is not taken into consideration when being piped through guards which is counter-intuitive.\r\n\r\nThis behaves the same for \"component\" routes, parent routes as well as lazyloaded loadChildren type of route.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-jxiqid?file=src/app/app.component.html\n\n### Please provide the exception or error you saw\n\n```true\nNo exception is thrown, just content that should be rendered is not.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nNode 16\r\nReplicated this bug @13 and also ^14.0.0-next.7\n```\n\n\n### Anything else?\n\nCurrently I solved it by explicitly naming paths differently for primary and aux outlets and on bootstrap navigate to outlet's named root resulting in longer URL:\r\n\r\ninstead of \r\n```HTML\r\nhttp://myapp.app/\r\n```\r\nI have to have AppComponent's ngOnInit:\r\n```JS\r\nrouter.navigate([{ outlets: { aside: ['editor'] }}]);\r\n```\r\nResulting in this:\r\n```HTML\r\nhttp://myapp.app/(aside:editor)\r\n```\r\n\r\nHowever except visual uncanniness of root url this comes with other drawbacks especially when navigating to root of primary outlet \"/\" it resets aux outlet, therefore everywhere I need to navigate to primary's root I explicitly need to navigate to aux's root as well.","Url":"https://github.com/angular/angular/issues/45412","RelatedDescription":"Closed issue \"Guards not outlet-aware\" (#45412)"},{"Id":"1176923905","IsPullRequest":true,"CreatedAt":"2022-03-22T15:04:24","Actor":"mkanyar","Number":"45411","RawContent":null,"Title":"docs (router): fixes typo on segments","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45411","RelatedDescription":"Open PR \"docs (router): fixes typo on segments\" (#45411)"},{"Id":"1176765670","IsPullRequest":true,"CreatedAt":"2022-03-22T13:12:54","Actor":"alan-agius4","Number":"45410","RawContent":null,"Title":"Remove defaultProject workspace option","State":"open","Body":"\r\nThe `defaultProject` workspace option has been deprecated. The project to use will be determined from the current working directory.\r\n\r\nSee: https://github.com/angular/angular-cli/pull/22852","Url":"https://github.com/angular/angular/pull/45410","RelatedDescription":"Open PR \"Remove defaultProject workspace option\" (#45410)"},{"Id":"1176578646","IsPullRequest":false,"CreatedAt":"2022-03-22T12:07:12","Actor":"mrbenjoi","Number":"45409","RawContent":null,"Title":"CurrencyPipe use en-US locale by default instead of browser locale.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\n**Environment:**\r\n\r\n- OS: KDE-Neon 20.04 (which is a Ubuntu LTS 20.04)\r\n- Browser: Firefox 98.0.1 (64-Bit)\r\n- Angular-CLI: 13.1.4\r\n- Node: 16.13.1\r\n- NPM: npm 8.5.3\r\n\r\n**Browser-Settings:**\r\n\r\n- `navigator.language` = `\"de-DE\"`\r\n- `(new Intl.NumberFormat()).resolvedOptions().locale` = `\"de-DE\"`\r\n- `(new Intl.DateTimeFormat()).resolvedOptions().locale` = `\"de-DE\"`\r\n\r\n---\r\n\r\n**Observed Behavior:**\r\n\r\nUsing currency pipe `<div>{{ 12345.678 | currency }}</div>` produces `$12,345.67`.\r\n\r\n---\r\n\r\n**Expected Behavior:**\r\n\r\nUsing currency pipe `<div>{{ 12345.678 | currency }}</div>` should produce either `$12.345,67` or `12.345,67 $` because the decimal separator in locale `\"de-DE\"` is `,`, not `.`, and the thousands-separator is `.`, not `,`.\r\n\r\nAfter debugging this I found out that, *in the case of no locale being configured explicitly anywhere in the project*, the currency pipe uses `\"en-US\"` as fallback locale to format numbers. The expected behavior is, that in the case of *no explicit locale configuration by the developer*, angular reads the corresponding locale (`NumberFormat` or `DateTimeFormat`) from the Intl-API to provide the user with a formatting that he wants to see, instead of the `\"en-US\"` one.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://plnkr.co/edit/2LRZswU8FoDV4mqt?open=lib%2Fapp.ts&deferRun=1&preview\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.1.4\r\nNode: 16.13.1\r\nPackage Manager: npm 8.5.3\r\nOS: linux x64\r\n\r\nAngular: 13.1.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1301.4\r\n@angular-devkit/build-angular   13.1.4\r\n@angular-devkit/core            13.1.4\r\n@angular-devkit/schematics      13.1.4\r\n@angular/cdk                    13.2.3\r\n@angular/cli                    13.1.4\r\n@angular/material               13.2.3\r\n@schematics/angular             13.1.4\r\nrxjs                            7.4.0\r\ntypescript                      4.5.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/45409","RelatedDescription":"Closed issue \"CurrencyPipe use en-US locale by default instead of browser locale.\" (#45409)"},{"Id":"1173823552","IsPullRequest":false,"CreatedAt":"2022-03-22T11:06:31","Actor":"eng-dibo","Number":"45388","RawContent":null,"Title":"title service doesn't work in SSR when the module is lazy loaded","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nplatform-browser\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nwhen you load a module normally, title service works fine in SSR, and the source code updated with the new title\r\n```\r\n// example.module.ts\r\nlet routes = [\r\n  { path: '**', component:  ExampleComponent }\r\n]\r\n```\r\n```\r\n// example.component.ts\r\nif(this.platform.isPlatformServer()){\r\n  this.titleService.setTitle('example');\r\n}\r\n```\r\n\r\nbut when the module is lazy loaded, title and meta services don't work in SSR (only works in client-rendering)\r\n```\r\n// app.module\r\n  {\r\n    path: '**',\r\n    loadChildren: () =>\r\n      import('./example.module').then(\r\n        (modules) => modules.ExampleModule\r\n      ),\r\n  },\r\n```\r\n\r\n`ExampleComponent` is rendered in the server as expected, (tested by logging `this.platform.platformId` to the console)\r\nbut title and meta services only works when the condition `if(this.platform.isPlatformServer()` is removed.\r\n\r\nI set this condition to test the behavior of title and meta services in server side. also Angular doesn't insert the added meta tags and the new title in the source code if rendered in client-side which makes issue with SEO and when scratching meta tags from the app or sharing to social media platform, that's why updating title and meta tags doesn't matter to me in client-side rendering.\r\n\r\nalso, it seems that if the module is lazy-loaded `fileReplacements` doesn't work, so `environment` has different values in the server and the browser\r\n`console.log({ environment })` gives different values in the server's console that the browser's console if you build the app in development mode.\r\n\r\nit seems that `ngOnChanges` doesn't fire on the server when the module loaded lazily\r\n[minimal repro](https://github.com/eng-dibo/issue-meta-tags/blob/main/src/app/feature/lazy-child.component.ts#L13)\r\n\r\nrun `npm start`\r\n\r\nin `feature/lazy-child.component.ts` the title should be set when a change is detected,but it don't.\r\n\r\nalso `console.log({ changes })` appears in the browser's console, but doesn't appear in the server's console\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.2.6\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.4\r\nOS: linux x64\r\n\r\nAngular: 13.2.6\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.6\r\n@angular-devkit/build-angular   13.2.6\r\n@angular-devkit/core            13.2.6\r\n@angular-devkit/schematics      13.2.6\r\n@nguniversal/express-engine     13.0.2\r\n@schematics/angular             13.2.6\r\nrxjs                            7.5.5\r\ntypescript                      4.5.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/45388","RelatedDescription":"Closed issue \"title service doesn't work in SSR when the module is lazy loaded\" (#45388)"},{"Id":"1176455007","IsPullRequest":true,"CreatedAt":"2022-03-22T08:48:08","Actor":"gkalpak","Number":"45408","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to c0a0bfb65","State":"open","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/bff1908b4...c0a0bfb65):\n\n**Modified**\n- help/add.json","Url":"https://github.com/angular/angular/pull/45408","RelatedDescription":"Open PR \"build(docs-infra): upgrade cli command docs sources to c0a0bfb65\" (#45408)"},{"Id":"1173343075","IsPullRequest":true,"CreatedAt":"2022-03-21T23:58:05","Actor":"gkalpak","Number":"45385","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to 207de70b7","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/a517160a2...207de70b7):\n\n**Modified**\n- help/add.json\n- help/analytics.json\n- help/build.json\n- help/config.json\n- help/deploy.json\n- help/doc.json\n- help/e2e.json\n- help/extract-i18n.json\n- help/generate.json\n- help/lint.json\n- help/new.json\n- help/run.json\n- help/serve.json\n- help/test.json\n- help/update.json\n- help/version.json\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/d84f03bf0...207de70b7) since PR #45361:\n\n**Modified**\n- help/generate.json\n- help/update.json\n\n##\nCloses #45330\nCloses #45346\nCloses #45361","Url":"https://github.com/angular/angular/pull/45385","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to 207de70b7\" (#45385)"},{"Id":"1174212608","IsPullRequest":true,"CreatedAt":"2022-03-21T23:58:04","Actor":"gkalpak","Number":"45395","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to bff1908b4","State":"closed","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/a517160a2...bff1908b4):\n\n**Added**\n- help/cache.json\n\n**Modified**\n- help/add.json\n- help/analytics.json\n- help/build.json\n- help/config.json\n- help/deploy.json\n- help/doc.json\n- help/e2e.json\n- help/extract-i18n.json\n- help/generate.json\n- help/lint.json\n- help/new.json\n- help/run.json\n- help/serve.json\n- help/test.json\n- help/update.json\n- help/version.json\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/207de70b7...bff1908b4) since PR #45385:\n\n**Added**\n- help/cache.json\n\n**Modified**\n- help/config.json\n\n##\nCloses #45330\nCloses #45346\nCloses #45361\nCloses #45385","Url":"https://github.com/angular/angular/pull/45395","RelatedDescription":"Closed or merged PR \"build(docs-infra): upgrade cli command docs sources to bff1908b4\" (#45395)"},{"Id":"1175723083","IsPullRequest":true,"CreatedAt":"2022-03-21T23:56:13","Actor":"alan-agius4","Number":"45406","RawContent":null,"Title":"docs: replace `defaultCollection` with `schematicCollections`","State":"closed","Body":"`defaultCollection` has deprecated in favor of `schematicCollections`.\r\n\r\nRelated to https://github.com/angular/angular-cli/pull/22860\r\n","Url":"https://github.com/angular/angular/pull/45406","RelatedDescription":"Closed or merged PR \"docs: replace `defaultCollection` with `schematicCollections`\" (#45406)"},{"Id":"1175907197","IsPullRequest":true,"CreatedAt":"2022-03-21T23:55:41","Actor":"devversion","Number":"45407","RawContent":null,"Title":"build: update to bazel v5 for new runfiles API used in dev-infra","State":"closed","Body":"https://blog.bazel.build/2022/01/19/bazel-5.0.html#starlark-build-language","Url":"https://github.com/angular/angular/pull/45407","RelatedDescription":"Closed or merged PR \"build: update to bazel v5 for new runfiles API used in dev-infra\" (#45407)"},{"Id":"1174513079","IsPullRequest":false,"CreatedAt":"2022-03-21T22:05:34","Actor":"dirk-jacobs","Number":"45398","RawContent":null,"Title":"Angular 13 Universal (SSR) slow after migration from Angular 11","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nDon't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nOur Angular 11 Universal application had a first page loaded after 75ms\r\n\r\nAfter upgrading to Angular 13, no other code changes, loading time is about 1.6s !!!\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://test-help.pixenzo.com/\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n-\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 13.2.4\r\nNode: 14.15.5\r\nPackage Manager: npm 6.14.11\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1302.4 (cli-only)\r\n@angular-devkit/core         13.2.4 (cli-only)\r\n@angular-devkit/schematics   13.2.4 (cli-only)\r\n@schematics/angular          13.2.4 (cli-only)\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n**Link towards a version compiled with Angular 11**:\r\nhttps://help.pixenzo.com/\r\n\r\n**Link towards a version compiled with Angular 13**:\r\nhttps://test-help.pixenzo.com/\r\n\r\n**No other changes were made to the application !**\r\n\r\nDeployed on Google Cloud / Kubernetes running on : node:14.15-alpine\r\n\r\nRunning locally on windows  (dev) it appears to be acceptable fast, but once deployed it is unacceptable slow.\r\n\r\nI'm 100% sure it has to do with the compilation because running exact the same version on exact the same environment but compiled with Angular 11 is rather fast.\r\n\r\nPlease check the provided links to simulate the problem\r\n\r\n**Timing with Angular 13**\r\n\r\n![image](https://user-images.githubusercontent.com/63724492/159159955-46abe689-be28-414b-aa40-b2562782ba13.png)\r\n\r\n**Timing with Angular 11**\r\n\r\n![image](https://user-images.githubusercontent.com/63724492/159160003-dc24c6e8-9cc9-455c-b2a4-47d729189822.png)\r\n\r\n","Url":"https://github.com/angular/angular/issues/45398","RelatedDescription":"Closed issue \"Angular 13 Universal (SSR) slow after migration from Angular 11\" (#45398)"},{"Id":"1173946301","IsPullRequest":false,"CreatedAt":"2022-03-21T21:51:55","Actor":"jelbourn","Number":"45389","RawContent":null,"Title":"View encapsulation breaks with new CSS Layers syntax","State":"closed","Body":"[CSS Layers](https://developer.mozilla.org/en-US/docs/Web/CSS/@layer) is a new CSS feature that lets developers organize their CSS into layers, giving better control over specificity. Chrome and Firefox support this feature, and it has now landed in the Safari Technology Preview. \r\n\r\nIt appears that Angular's style encapsulation bails out when encountering this new syntax. Style rules declared in a `@layer` declaration are not encapsulated:\r\n\r\n```css\r\n/* This will not be encapsulated */\r\n@layer utilities {\r\n  p {\r\n    color: darkgreen;\r\n  }\r\n}\r\n\r\n/* This will be encapsulated */\r\np {\r\n  font-size: 40px;\r\n}\r\n```\r\n\r\nEmits:\r\n```html\r\n<style>\r\n  @layer utilities {\r\n    p {\r\n      color: darkgreen;\r\n    }\r\n  }\r\n\r\n  p[_ngcontent-mvb-c45] {\r\n    font-size: 40px;\r\n  }\r\n</style>\r\n```\r\n\r\n**Reproduction:** https://stackblitz.com/edit/angular-ivy-qce65m?file=src%2Fapp%2Fapp.component.css","Url":"https://github.com/angular/angular/issues/45389","RelatedDescription":"Closed issue \"View encapsulation breaks with new CSS Layers syntax\" (#45389)"},{"Id":"1174273804","IsPullRequest":true,"CreatedAt":"2022-03-21T21:51:54","Actor":"JoostK","Number":"45396","RawContent":null,"Title":"fix(compiler): scope css rules within `@layer` blocks","State":"closed","Body":"This commit starts scoping CSS rules nested within `@layer` blocks.\r\n\r\nFixes #45389","Url":"https://github.com/angular/angular/pull/45396","RelatedDescription":"Closed or merged PR \"fix(compiler): scope css rules within `@layer` blocks\" (#45396)"},{"Id":"1175463921","IsPullRequest":true,"CreatedAt":"2022-03-21T14:23:54","Actor":"devversion","Number":"45405","RawContent":null,"Title":"feat(bazel): speed up dev-turnaround by bundling types only when packaging","State":"open","Body":"Speeds up the dev-turnaround by only bundling types when packaging. Currently\r\nbundling occurs for all the `ng_module` targets in devmode.\r\n\r\nThis has various positive benefits:\r\n\r\n* Avoidance of this rather slower operation in development\r\n* Makes APF-built packages also handle types for `ts_library` targets consistently. Simplifies the packager..\r\n* Allows us to ensure APF entry-points have `d.ts` _always_ bundled (working with ESM\r\nmodule resolution in TypeScript -- currently experimental -- https://github.com/angular/angular/issues/43886)\r\n* Allows us to remove the secondary `package.json` files from APF (maybe APF v14? - seems\r\nlow-impact). This would clean-up the APF even more and fix resolution issues (like in Vite -- https://github.com/angular/angular/issues/45326)\r\n","Url":"https://github.com/angular/angular/pull/45405","RelatedDescription":"Open PR \"feat(bazel): speed up dev-turnaround by bundling types only when packaging\" (#45405)"},{"Id":"1175414872","IsPullRequest":false,"CreatedAt":"2022-03-21T13:47:36","Actor":"NanoSpicer","Number":"45404","RawContent":null,"Title":"Http interceptor doesn't return a valid URL","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `HttpRequest<any>` API is not very consistent when being used on HTTP interceptors.\r\n\r\nWhen the user queries `request.url` it doesn't always return a valid URL. It returns whatever was passed in to the `HttpClient`. \r\n\r\nNow: is this working as intended? Shouldn't it prepend the scheme, host and port (if it suits) on that field? \r\n\r\nOne would expect that passing `new URL(request.url)` should be safe but it's not once we're using relative paths.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-4ltafj?file=src%2Fapp%2Fapp.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe stackblitz example I shared showcases this very well. The intercepted http requests have the same string coming from the HttpClient.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.0.2\r\nNode: 14.17.6\r\nPackage Manager: npm 6.14.15\r\nOS: darwin x64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1300.2 (cli-only)\r\n@angular-devkit/core         13.0.2 (cli-only)\r\n@angular-devkit/schematics   13.0.2 (cli-only)\r\n@schematics/angular          13.0.2 (cli-only)\n```\n\n\n### Anything else?\n\nMy suggestion here would be to either create a new field or directly expose the `URL` class on the `url` property of the HttpRequest.","Url":"https://github.com/angular/angular/issues/45404","RelatedDescription":"Open issue \"Http interceptor doesn't return a valid URL\" (#45404)"},{"Id":"1174628873","IsPullRequest":false,"CreatedAt":"2022-03-21T12:49:05","Actor":"vugar005","Number":"45399","RawContent":null,"Title":" providedIn: 'platform'  is not working as expected","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nHello team,\r\nWhen we provide service with  `providedIn: 'platform' ` it is expected to be singleton among applications.\r\nIn my case I have shell app which uses angular custom element. But when I inject `SampleService`, noticed that the service is initiated twice. Screenshot is attached later below.\r\n\r\nYou can reproduce it from [branch](https://github.com/vugar005/youtube-webapp-turborepo/pull/22).\r\n[Documentation ](https://github.com/vugar005/youtube-webapp-turborepo) for running application.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/vugar005/youtube-webapp-turborepo/pull/22\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNo exception error but service is initiated twice. See below:\r\n```\r\nNavigate to localhost:4200 then choose any video card. See the console.    \r\n\r\n![image](https://user-images.githubusercontent.com/28726265/159175287-bf041fab-5af0-4e77-8f02-4470cc6e88db.png)\r\n\r\nAs a confirmation we see that both shell and custom element are in the same **Platform**.\r\n\r\n![tempsnip](https://user-images.githubusercontent.com/28726265/159176529-3337b61e-cb83-42ca-8895-37ed82a63825.png)\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular:13.2.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nThis might be related to #43198. But it is mentioned there too that we should use  `providedIn: 'platform'`  but it is not working as expected.","Url":"https://github.com/angular/angular/issues/45399","RelatedDescription":"Closed issue \" providedIn: 'platform'  is not working as expected\" (#45399)"},{"Id":"1175337736","IsPullRequest":false,"CreatedAt":"2022-03-21T12:48:40","Actor":"vugar005","Number":"45403","RawContent":null,"Title":"ProvideIn singleton service among multiple angular instances","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nHello team,\r\nRight now we do not have a way to have a **singleton** service among multiple angular instances. This is crucial when implement microfrontends. \r\nLet's say we have shell microfrontend which has service AuthService, the remote angular element microfrontends also should be able to have acess to service in singleton way. \r\n\r\n![tempsnip](https://user-images.githubusercontent.com/28726265/159176529-3337b61e-cb83-42ca-8895-37ed82a63825.png)\r\n\r\nI thought it could be done via `providedIn: 'platform'` but it appears that it is intended to be for multiple angular modules. Thanks to [comment](https://github.com/angular/angular/issues/45399#issuecomment-1073747516). So it does not suite this case. If we use  providedIn: 'platform'`  the service is gonna be instantiated multiple times in shell and custom angular microfrontend element.\r\nSample repo for playground:  https://github.com/vugar005/youtube-webapp-turborepo/pull/22 \r\n\r\n### Proposed solution\r\n\r\nWe can propose new key something like  `provideIn: \"true-platform\"` to solve this case.\r\n\r\n### Alternatives considered\r\n\r\nNo suitable alternatives found so far for dependency injection.","Url":"https://github.com/angular/angular/issues/45403","RelatedDescription":"Open issue \"ProvideIn singleton service among multiple angular instances\" (#45403)"},{"Id":"1175187380","IsPullRequest":true,"CreatedAt":"2022-03-21T10:36:54","Actor":"renovate[bot]","Number":"45402","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular).","Url":"https://github.com/angular/angular/pull/45402","RelatedDescription":"Open PR \"build: lock file maintenance\" (#45402)"},{"Id":"1174644793","IsPullRequest":true,"CreatedAt":"2022-03-20T18:42:17","Actor":"arturovt","Number":"45400","RawContent":null,"Title":"fix(zone.js): swallow the error when the element callback is not patchable","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\n- [x] Bugfix\r\n\r\n\r\n## What is the current behavior?\r\nIssue Number: #42546\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/45400","RelatedDescription":"Open PR \"fix(zone.js): swallow the error when the element callback is not patchable\" (#45400)"},{"Id":"1174502431","IsPullRequest":true,"CreatedAt":"2022-03-20T10:39:12","Actor":"CommanderRoot","Number":"45397","RawContent":null,"Title":"refactor: replace deprecated String.prototype.substr()","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\n[String.prototype.substr()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr) is deprecated so we replace it with [String.prototype.slice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice) or [String.prototype.substring()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring) which work similarily but aren't deprecated.\r\n.substr() probably isn't going away anytime soon but the change is trivial so it doesn't hurt to do it.\r\n\r\n## What is the new behavior?\r\n\r\nEverything should behave the same way\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45397","RelatedDescription":"Open PR \"refactor: replace deprecated String.prototype.substr()\" (#45397)"},{"Id":"1174208401","IsPullRequest":true,"CreatedAt":"2022-03-19T08:21:15","Actor":"crisbeto","Number":"45394","RawContent":null,"Title":"feat(core): drop support for TypeScript 4.4 and 4.5","State":"open","Body":"Drops support for TypeScript older than 4.6 and removes some workarounds in the compiler.\r\n\r\nBREAKING CHANGE:\r\nTypeScript versions older than 4.5 are no longer supported.","Url":"https://github.com/angular/angular/pull/45394","RelatedDescription":"Open PR \"feat(core): drop support for TypeScript 4.4 and 4.5\" (#45394)"},{"Id":"1174204942","IsPullRequest":true,"CreatedAt":"2022-03-19T08:00:27","Actor":"devversion","Number":"45393","RawContent":null,"Title":"fix(bazel): ng module compilation workers are subject to linker race-conditions","State":"open","Body":"The Bazel NodeJS rules provide two ways of accessing node modules:\r\n\r\n* A linker which creates a `node_modules` directory in the execroot/or in the runfiles.\r\n* A patched module resolution where no node modules directory necessarily needs to exist.\r\n\r\nThe first is the default in `rules_nodejs` and the second is technically the most idiomatic\r\nresolution mechanism in Bazel (as it matches with a runfile resolution library).\r\n\r\nThe linker is prone to race conditions in persistent workers, or non-sandbox environments (like\r\nwindows). This is because the linker for all workers will operate on a shared `execroot` directory\r\nand the same `node_modules` directory is modified all the time / potentially conflicting with other\r\nlinker processes from other concurrently-running workers.\r\n\r\nWe rely on the patched module resolution anyway, but just need to disable the unused linker to avoid\r\nissues like the following:\r\n\r\n```\r\n---8<---8<--- Start of log, file at /private/var/tmp/_bazel_splaktar/280f06d55552a0d01f89f0955b5acd78/bazel-workers/worker-8-TypeScriptCompile.log ---8<---8<---\r\n[link_node_modules.js] An error has been reported: [Error: ENOENT: no such file or directory, unlink 'node_modules'] {\r\n  errno: -2,\r\n  code: 'ENOENT',\r\n  syscall: 'unlink',\r\n  path: 'node_modules'\r\n} Error: ENOENT: no such file or directory, unlink 'node_modules'\r\n---8<---8<--- End of log ---8<---8<---\r\nINFO: Elapsed time: 12.796s, Critical Path: 5.39s\r\nINFO: 645 processes: 477 internal, 12 darwin-sandbox, 156 worker.\r\n```\r\n","Url":"https://github.com/angular/angular/pull/45393","RelatedDescription":"Open PR \"fix(bazel): ng module compilation workers are subject to linker race-conditions\" (#45393)"},{"Id":"1174135885","IsPullRequest":true,"CreatedAt":"2022-03-19T01:18:38","Actor":"arturovt","Number":"45392","RawContent":null,"Title":"fix(zone.js): check if `process` is defined when patching the `GlobalErrors.install`","State":"open","Body":"## PR Checklist\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\n- [x] Bugfix\r\n\r\n\r\n## What is the current behavior?\r\nIssue Number: #42260\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/45392","RelatedDescription":"Open PR \"fix(zone.js): check if `process` is defined when patching the `GlobalErrors.install`\" (#45392)"},{"Id":"1174111982","IsPullRequest":true,"CreatedAt":"2022-03-18T23:44:10","Actor":"Platonn","Number":"45391","RawContent":null,"Title":"fix(zone.js): in TaskTrackingZoneSpec track a periodic task until it is cancelled","State":"open","Body":"Before this change, the macrotask for `setInterval(callback, ms)` was no\r\nlonger tracked by `TaskTrackingZoneSpec` after the `callback` was\r\ninvoked for the first time. Now the periodic macrotask is tracked until\r\nit is cancelled, e.g. `clearInterval(id)`.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/angular/angular/issues/45350\r\n\r\nBefore this change, the macrotask for `setInterval(callback, ms)` was no\r\nlonger tracked by `TaskTrackingZoneSpec` after the `callback` was\r\ninvoked for the first time.\r\n\r\n## What is the new behavior?\r\nNow the periodic macrotask is tracked by `TaskTrackingZoneSpec` until\r\nthe task is cancelled, e.g. `clearInterval(id)`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\nThe breaking change is scoped only to the plugin `zone.js/plugins/task-tracking`. If you used `TaskTrackingZoneSpec` and checked the pending macroTasks e.g. using `(this.ngZone as any)._inner._parent._properties.TaskTrackingZone.getTasksFor('macroTask')`, then its behavior slightly changed for periodic macrotasks. For example, previously the `setInterval` macrotask was no longer tracked after its callback was executed for the first time. Now it's tracked until the task is explicitly cancelled, e.g  with `clearInterval(id)`.","Url":"https://github.com/angular/angular/pull/45391","RelatedDescription":"Open PR \"fix(zone.js): in TaskTrackingZoneSpec track a periodic task until it is cancelled\" (#45391)"},{"Id":"1173971445","IsPullRequest":true,"CreatedAt":"2022-03-18T19:53:48","Actor":"gkalpak","Number":"45390","RawContent":null,"Title":"fix(docs-infra): update (and unpin) dependency versions for preview server","State":"open","Body":"Update the `Dockerfile` used to create the preview server to use the latest stable version of Debian (`bullseye`) and also update package versions to latest versions.\r\n\r\nAlso, unpin the versions of installed packages (except for Node.js related ones) as pinning proved problematic due to many packages removing old versions from the official repositories.\r\n\r\nNOTE:\r\nThis change will allow the preview server to be updated on the VM and take advantage of recent fixes, such as #45349. Currently, the update fails with the error:\r\n```\r\nE: Version '7.64.0-4+deb10u1' for 'curl' was not found\r\nThe command '/bin/sh -c apt-get update -y && apt-get install -y curl=7.64.0-4+deb10u1' returned a non-zero code: 100\r\n```\r\n","Url":"https://github.com/angular/angular/pull/45390","RelatedDescription":"Open PR \"fix(docs-infra): update (and unpin) dependency versions for preview server\" (#45390)"},{"Id":"1173688813","IsPullRequest":false,"CreatedAt":"2022-03-18T16:12:05","Actor":"TheSlimvReal","Number":"45387","RawContent":null,"Title":"Ivy ignores components needed for dynamic component loader","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn my application I am using a decorator `@DynamicComponent` to marks components that can later be rendered using `viewContainerRef.createComponent(...)` (see the guide for [dynamic component loading](https://angular.io/guide/dynamic-component-loader)).\r\n\r\n```javascript\r\n@DynamicComponent('hello')\r\n@Component({ template: `<h1>Hello Angular</h1>` })\r\nexport class HelloComponent {}\r\n```\r\nThe decorator registers the component with a string on a static map.\r\n```javascript\r\nexport function DynamicComponent(name: string) {\r\n  return (ctor) => {\r\n    componentRegistry.set(name, ctor);\r\n  };\r\n}\r\nexport const componentRegistry = new Map<string, any>();\r\n```\r\nLater the same string can be used to find the component and to load/create it dynamically.\r\n```javascript\r\n@Component({ template: `<ng-template anchor></ng-template>` })\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild(AnchorDirective, { static: true }) anchorHost!: AnchorDirective;\r\n  ngOnInit() {\r\n    const viewContainerRef = this.anchorHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    const component = componentRegistry.get('hello');\r\n    viewContainerRef.createComponent(component);\r\n  }\r\n}\r\n```\r\nThis works fine in development mode.\r\n\r\nHowever, in production (`ng serve --configuration production`) the decorators are never executed because Ivy believes the components are not used/needed.\r\nThis is because the dynamic components are only used in the modules where they are declared.\r\nThe moment I write some dummy code using the dynamic component (e.g. `new HelloComponent()`) everything works fine again.\r\n\r\nI provided a stackblitz below where this is implemented.\r\nIn stackblitz everything is working fine because it is started in development mode.\r\nTo run it in production mode download the stackblitz example and run `npm install --force && npm start`.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://angular-ivy-ypsare.stackblitz.io\n\n### Please provide the exception or error you saw\n\n```true\nERROR TypeError: Cannot read properties of undefined (reading 'ɵcmp')\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.0\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: win32 x64\r\n\r\nAngular: 13.3.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.0\r\n@angular-devkit/build-angular   13.3.0\r\n@angular-devkit/core            13.3.0\r\n@angular-devkit/schematics      13.3.0\r\n@schematics/angular             13.3.0\r\nrxjs                            7.5.5\r\ntypescript\n```\n\n\n### Anything else?\n\nI believe this was the initial reason why the `entryComponents` module option existed which are now deprecated and considered unnecessary.\r\nI believe something like this is necessary again in order to mark components that should not be ignored by Ivy just because it cannot find a direct reference to it in the source code.\r\nWithout any changes I believe the loading & creating dynamic component is not working as expected as it requires the components to be at least once loaded/created **non**-dynamically.\r\n\r\nI would be thankful for any hint on how to get this thing running in production even if it would mean turning off this unused-component cleanup done by Ivy.","Url":"https://github.com/angular/angular/issues/45387","RelatedDescription":"Closed issue \"Ivy ignores components needed for dynamic component loader\" (#45387)"},{"Id":"1173376428","IsPullRequest":true,"CreatedAt":"2022-03-18T09:27:06","Actor":"KhaiHa","Number":"45386","RawContent":null,"Title":"docs: update for 2022 angular events","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/45386","RelatedDescription":"Open PR \"docs: update for 2022 angular events\" (#45386)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1177320604","IsPullRequest":true,"CreatedAt":"2022-03-22T21:19:33","Actor":"clydin","Number":"22880","RawContent":null,"Title":"fix(@angular-devkit/build-angular): remove unneeded JIT reflect metadata polyfill","State":"open","Body":"Since Angular 8, the CLI has transformed decorator metadata to a form that can be used by the Angular dependency injector without the TDZ limitations of Typescript's decorator metadata emit feature.\r\nAs a result, a JIT application compiled with the CLI no longer requires the reflect metadata polyfill that was provided by `core-js`.\r\nThis polyfill was also the last remaining usage of the `core-js` package within `@angular-devkit/build-angular` which allows the `core-js` package to also be removed.\r\n\r\nRefs: https://github.com/angular/angular-cli/pull/14473 & https://github.com/angular/angular/pull/37382\r\n\r\nBREAKING CHANGE: Reflect metadata polyfill is no longer automatically provided in JIT mode\r\nReflect metadata support is not required by Angular in JIT applications compiled by the CLI.\r\nApplications built in AOT mode did not and will continue to not provide the polyfill.\r\nFor the majority of applications, the reflect metadata polyfill removal should have no effect.\r\nHowever, if an application uses JIT mode and also uses the previously polyfilled reflect metadata JavaScript APIs, the polyfill will need to be manually added to the application after updating.\r\nTo replicate the previous behavior, the `core-js` package should be manually installed and the `import 'core-js/proposals/reflect-metadata';` statement should be added to the application's `polyfills.ts` file.","Url":"https://github.com/angular/angular-cli/pull/22880","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): remove unneeded JIT reflect metadata polyfill\" (#22880)"},{"Id":"1177118554","IsPullRequest":true,"CreatedAt":"2022-03-22T18:00:01","Actor":"devversion","Number":"22879","RawContent":null,"Title":"fix(@ngtools/webpack): update peer dependency to reflect TS 4.6 support","State":"open","Body":"Updates the peer dependency to reflect the TS 4.6 support, avoiding\r\nwarnings like:\r\n\r\n```\r\nwarning \"@angular-devkit/build-angular > @ngtools/webpack@14.0.0-next.6\" has incorrect peer dependency \"typescript@>=4.4.3 <4.6\".\r\n\r\n```\r\n\r\nTS 4.4 and 4.5 have been removed in https://github.com/angular/angular-cli/commit/7fa3e6587955d0638929758d3c257392c242c796","Url":"https://github.com/angular/angular-cli/pull/22879","RelatedDescription":"Open PR \"fix(@ngtools/webpack): update peer dependency to reflect TS 4.6 support\" (#22879)"},{"Id":"1177085393","IsPullRequest":false,"CreatedAt":"2022-03-22T17:35:48","Actor":"Mostafasoltani1399","Number":"22878","RawContent":null,"Title":"mr","State":"closed","Body":"🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n\r\nPlease help us process issues more efficiently by filing an\r\nissue using one of the following templates:\r\n\r\nhttps://github.com/angular/angular-cli/issues/new/choose\r\n\r\nThank you!\r\n\r\n🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n","Url":"https://github.com/angular/angular-cli/issues/22878","RelatedDescription":"Closed issue \"mr\" (#22878)"},{"Id":"1177036990","IsPullRequest":false,"CreatedAt":"2022-03-22T16:48:10","Actor":"mgechev","Number":"22877","RawContent":null,"Title":"ng rename command","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n\r\nCreate a new command called `ng rename` which renames a project.\r\n\r\n### Description\r\n\r\nRenaming a project currently requires manually updating configuration and file names. This is error prone - can break our CLI workspace.\r\n\r\n### Describe the solution you'd like\r\n\r\nTo simplify the process, we can consider implementing an `ng rename` command:\r\n\r\n```\r\nng rename [project-name] [new-project-name]\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nDocumenting the approach is an alternative, but looks like folks are generally interested in an automated way to achieve this (see https://github.com/angular/angular/issues/39909#issuecomment-425163941).\r\n","Url":"https://github.com/angular/angular-cli/issues/22877","RelatedDescription":"Open issue \"ng rename command\" (#22877)"},{"Id":"1172393655","IsPullRequest":true,"CreatedAt":"2022-03-22T16:37:58","Actor":"alan-agius4","Number":"22860","RawContent":null,"Title":"feat(@angular/cli): add support for multiple schematics collections","State":"closed","Body":"\r\nThe `schematicCollections` can be placed under the `cli` option in the global `.angular.json` configuration, at the root or at project level in `angular.json` .\r\n\r\n```jsonc\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"cli\": {\r\n    \"schematicCollections\": [\"@schematics/angular\", \"@angular/material\"]\r\n  }\r\n  // ...\r\n}\r\n```\r\n\r\n**Rationale**\r\nWhen this option is not configured and a user would like to run a schematic which is not part of `@schematics/angular`,\r\nthe collection name needs to be provided to `ng generate` command in the form of `[collection-name:schematic-name]`. This make the `ng generate` command too verbose for repeated usages.\r\n\r\nThis is where `schematicCollections` comes handle. When adding `@angular/material` to the list of `schematicCollections`, the generate command will try to locate the schematic in the specified collections.\r\n\r\n```\r\nng generate navigation\r\n```\r\n\r\nis equivalent to:\r\n\r\n```\r\nng generate @angular/material:navigation\r\n```\r\n\r\n**Conflicting schematic names**\r\nWhen multiple collections have a schematic with the same name. Both `ng generate` and `ng new` will run the first schematic matched based on the ordering (as specified) of `schematicCollections`.\r\n\r\nDEPRECATED:\r\n\r\nThe `defaultCollection` workspace option has been deprecated in favor of `schematicCollections`.\r\n\r\nBefore\r\n```json\r\n\"defaultCollection\": \"@angular/material\"\r\n```\r\n\r\nAfter\r\n```json\r\n\"schematicCollections\": [\"@angular/material\"]\r\n```\r\n\r\nCloses #12157","Url":"https://github.com/angular/angular-cli/pull/22860","RelatedDescription":"Closed or merged PR \"feat(@angular/cli): add support for multiple schematics collections\" (#22860)"},{"Id":"1176956130","IsPullRequest":true,"CreatedAt":"2022-03-22T15:26:33","Actor":"alan-agius4","Number":"22876","RawContent":null,"Title":"Improve CLI bootstrapping time","State":"open","Body":"With this change we reduce the time that is needed to bootstrap the CLI by 400ms\r\n\r\nBefore\r\n```\r\ntime ng b --help  1.65s\r\n```\r\n\r\nAfter\r\n```\r\ntime ng b --help  0.85s\r\n```","Url":"https://github.com/angular/angular-cli/pull/22876","RelatedDescription":"Open PR \"Improve CLI bootstrapping time\" (#22876)"},{"Id":"1176705803","IsPullRequest":true,"CreatedAt":"2022-03-22T12:24:32","Actor":"alan-agius4","Number":"22875","RawContent":null,"Title":"build: update `minimist` to `1.2.6`","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/22875","RelatedDescription":"Open PR \"build: update `minimist` to `1.2.6`\" (#22875)"},{"Id":"1176695411","IsPullRequest":true,"CreatedAt":"2022-03-22T12:14:56","Actor":"alan-agius4","Number":"22874","RawContent":null,"Title":"build: update `minimist` to `1.2.6`","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/22874","RelatedDescription":"Open PR \"build: update `minimist` to `1.2.6`\" (#22874)"},{"Id":"1176689624","IsPullRequest":true,"CreatedAt":"2022-03-22T12:09:41","Actor":"alan-agius4","Number":"22873","RawContent":null,"Title":"build: update `minimist` to `1.2.6`","State":"open","Body":"Closes https://github.com/angular/angular-cli/issues/22872","Url":"https://github.com/angular/angular-cli/pull/22873","RelatedDescription":"Open PR \"build: update `minimist` to `1.2.6`\" (#22873)"},{"Id":"1176452106","IsPullRequest":false,"CreatedAt":"2022-03-22T08:45:04","Actor":"Shinigami92","Number":"22872","RawContent":null,"Title":"Prototype Pollution in minimist | @angular-devkit/schematics-cli v13.3.0","State":"open","Body":"https://github.com/nestjs/nest-cli/issues/1579\r\n\r\n**Blocking CI/CD in company project using `@nestjs/cli`**\r\n\r\nPrototype Pollution in minimist\r\n\r\n```node\r\n> pnpm audit\r\n┌─────────────────────┬───────────────────────────────────────────────────┐\r\n│ high                │ Prototype Pollution in minimist                   │\r\n├─────────────────────┼───────────────────────────────────────────────────┤\r\n│ Package             │ minimist                                          │\r\n├─────────────────────┼───────────────────────────────────────────────────┤\r\n│ Vulnerable versions │ <=1.2.5                                           │\r\n├─────────────────────┼───────────────────────────────────────────────────┤\r\n│ Patched versions    │ <0.0.0                                            │\r\n├─────────────────────┼───────────────────────────────────────────────────┤\r\n│ More info           │ https://github.com/advisories/GHSA-xvch-5gv4-984h │\r\n└─────────────────────┴───────────────────────────────────────────────────┘\r\n1 vulnerabilities found\r\nSeverity: 1 high\r\n```\r\n\r\n```node\r\n> pnpm why minimist\r\nLegend: production dependency, optional only, dev only\r\n\r\ndependencies:\r\n@nestjs/apollo 10.0.7\r\n├─┬ @nestjs/core 8.4.2 peer\r\n│ └─┬ @nestjs/platform-express 8.4.2 peer\r\n│   └─┬ multer 1.4.4\r\n│     └─┬ mkdirp 0.5.5\r\n│       └── minimist 1.2.6\r\n└─┬ @nestjs/graphql 10.0.7 peer\r\n  └─┬ @nestjs/core 8.4.2 peer\r\n    └─┬ @nestjs/platform-express 8.4.2 peer\r\n      └─┬ multer 1.4.4\r\n        └─┬ mkdirp 0.5.5\r\n          └── minimist 1.2.6\r\n@nestjs/core 8.4.2\r\n└─┬ @nestjs/platform-express 8.4.2 peer\r\n  └─┬ multer 1.4.4\r\n    └─┬ mkdirp 0.5.5\r\n      └── minimist 1.2.6\r\n@nestjs/graphql 10.0.7\r\n└─┬ @nestjs/core 8.4.2 peer\r\n  └─┬ @nestjs/platform-express 8.4.2 peer\r\n    └─┬ multer 1.4.4\r\n      └─┬ mkdirp 0.5.5\r\n        └── minimist 1.2.6\r\n@nestjs/platform-express 8.4.2\r\n└─┬ multer 1.4.4\r\n  └─┬ mkdirp 0.5.5\r\n    └── minimist 1.2.6\r\n\r\ndevDependencies:\r\n@nestjs/cli 8.2.4\r\n├─┬ @angular-devkit/schematics-cli 13.3.0\r\n│ └── minimist 1.2.5\r\n├─┬ tsconfig-paths 3.14.0\r\n│ ├─┬ json5 1.0.1\r\n│ │ └── minimist 1.2.6\r\n│ └── minimist 1.2.6\r\n└─┬ tsconfig-paths-webpack-plugin 3.5.2\r\n  └─┬ tsconfig-paths 3.14.0\r\n    ├─┬ json5 1.0.1\r\n    │ └── minimist 1.2.6\r\n    └── minimist 1.2.6\r\n@nestjs/testing 8.4.2\r\n├─┬ @nestjs/core 8.4.2 peer\r\n│ └─┬ @nestjs/platform-express 8.4.2 peer\r\n│   └─┬ multer 1.4.4\r\n│     └─┬ mkdirp 0.5.5\r\n│       └── minimist 1.2.6\r\n└─┬ @nestjs/platform-express 8.4.2 peer\r\n  └─┬ multer 1.4.4\r\n    └─┬ mkdirp 0.5.5\r\n      └── minimist 1.2.6\r\ntsconfig-paths 3.14.0\r\n├─┬ json5 1.0.1\r\n│ └── minimist 1.2.6\r\n└── minimist 1.2.6\r\n```","Url":"https://github.com/angular/angular-cli/issues/22872","RelatedDescription":"Open issue \"Prototype Pollution in minimist | @angular-devkit/schematics-cli v13.3.0\" (#22872)"},{"Id":"1176395133","IsPullRequest":false,"CreatedAt":"2022-03-22T07:47:24","Actor":"manzonif","Number":"22871","RawContent":null,"Title":"extract-i18n does not extract message from files loaded only server side","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n### Description\r\nThe extraction tool does not process files that do not have a direct dependency on the app.module, or, generally, on the browser side.\r\nIn my case an abstract service is replaced by two versions of the service, one browser side, the other server side. The server-side one is ignored during the extraction process.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\nI made a simple [repro app](https://github.com/manzonif/ng-extract-i18n-server) that reproduce the problem.\r\nJust run extract-i18n to see that message in [server-service.service.ts](https://github.com/manzonif/ng-extract-i18n-server/blob/master/src/app/server-service.service.ts) is ignored.\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular: 12.0.1\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1200.5\r\n@angular-devkit/build-angular     12.0.5\r\n@angular-devkit/build-optimizer   0.1200.5\r\n@angular-devkit/core              12.0.1\r\n@angular-devkit/schematics        12.0.1\r\n@angular/flex-layout              12.0.0-beta.34\r\n@angular/localize                 12.0.5\r\n@nguniversal/builders             12.1.3\r\n@nguniversal/common               12.0.0\r\n@nguniversal/express-engine       12.0.0\r\n@schematics/angular               12.0.1\r\nrxjs                              7.4.0\r\ntypescript                        4.2.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22871","RelatedDescription":"Open issue \"extract-i18n does not extract message from files loaded only server side\" (#22871)"},{"Id":"1176115691","IsPullRequest":false,"CreatedAt":"2022-03-22T06:16:12","Actor":"langthiennhai","Number":"22869","RawContent":null,"Title":"Prototype Pollution in minimist","State":"closed","Body":" Angular: 13\r\n Nodejs: 14.15.0\r\n\r\n  ///////////////////////\r\n  High            Prototype Pollution in minimist                               \r\n  Package         minimist                                                      \r\n  Patched in      No patch available                                            \r\n  Dependency of   @angular-devkit/build-angular                                 \r\n  Path            @angular-devkit/build-angular > @babel/core > json5 > minimist                                                      \r\n  More info       https://github.com/advisories/GHSA-xvch-5gv4-984h        \r\n  ///////////////////////","Url":"https://github.com/angular/angular-cli/issues/22869","RelatedDescription":"Closed issue \"Prototype Pollution in minimist\" (#22869)"},{"Id":"1176285152","IsPullRequest":true,"CreatedAt":"2022-03-22T05:27:10","Actor":"renovate[bot]","Number":"22870","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.15.0` -> `5.16.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.15.0/5.16.0) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.16.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.16.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.16.0/compatibility-slim/5.15.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2fparser/5.16.0/confidence-slim/5.15.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [ajv](https://ajv.js.org) ([source](https://togithub.com/ajv-validator/ajv)) | [`8.10.0` -> `8.11.0`](https://renovatebot.com/diffs/npm/ajv/8.10.0/8.11.0) | [![age](https://badges.renovateapi.com/packages/npm/ajv/8.11.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/ajv/8.11.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/ajv/8.11.0/compatibility-slim/8.10.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/ajv/8.11.0/confidence-slim/8.10.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [babel-loader](https://togithub.com/babel/babel-loader) | [`8.2.3` -> `8.2.4`](https://renovatebot.com/diffs/npm/babel-loader/8.2.3/8.2.4) | [![age](https://badges.renovateapi.com/packages/npm/babel-loader/8.2.4/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/babel-loader/8.2.4/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/babel-loader/8.2.4/compatibility-slim/8.2.3)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/babel-loader/8.2.4/confidence-slim/8.2.3)](https://docs.renovatebot.com/merge-confidence/) |\n| [cacache](https://togithub.com/npm/cacache) | [`16.0.2` -> `16.0.3`](https://renovatebot.com/diffs/npm/cacache/16.0.2/16.0.3) | [![age](https://badges.renovateapi.com/packages/npm/cacache/16.0.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/cacache/16.0.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/cacache/16.0.3/compatibility-slim/16.0.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/cacache/16.0.3/confidence-slim/16.0.2)](https://docs.renovatebot.com/merge-confidence/) |\n| [postcss-import](https://togithub.com/postcss/postcss-import) | [`14.0.2` -> `14.1.0`](https://renovatebot.com/diffs/npm/postcss-import/14.0.2/14.1.0) | [![age](https://badges.renovateapi.com/packages/npm/postcss-import/14.1.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/postcss-import/14.1.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/postcss-import/14.1.0/compatibility-slim/14.0.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/postcss-import/14.1.0/confidence-slim/14.0.2)](https://docs.renovatebot.com/merge-confidence/) |\n| [stylus](https://togithub.com/stylus/stylus) | [`0.56.0` -> `0.57.0`](https://renovatebot.com/diffs/npm/stylus/0.56.0/0.57.0) | [![age](https://badges.renovateapi.com/packages/npm/stylus/0.57.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/stylus/0.57.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/stylus/0.57.0/compatibility-slim/0.56.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/stylus/0.57.0/confidence-slim/0.56.0)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint</summary>\n\n### [`v5.16.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5160-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5150v5160-2022-03-21)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.15.0...v5.16.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\n</details>\n\n<details>\n<summary>ajv-validator/ajv</summary>\n\n### [`v8.11.0`](https://togithub.com/ajv-validator/ajv/releases/v8.11.0)\n\n[Compare Source](https://togithub.com/ajv-validator/ajv/compare/v8.10.0...v8.11.0)\n\nUse root schemaEnv when resolving references in oneOf ([#&#8203;1901](https://togithub.com/ajv-validator/ajv/issues/1901), [@&#8203;asprouse](https://togithub.com/asprouse))\n\nOnly use equal function in generated code when it is used ([#&#8203;1922](https://togithub.com/ajv-validator/ajv/issues/1922), [@&#8203;bhvngt](https://togithub.com/bhvngt))\n\n</details>\n\n<details>\n<summary>babel/babel-loader</summary>\n\n### [`v8.2.4`](https://togithub.com/babel/babel-loader/releases/v8.2.4)\n\n[Compare Source](https://togithub.com/babel/babel-loader/compare/v8.2.3...v8.2.4)\n\n#### What's Changed\n\n-   doc(README.md): fix a broken markdown link by [@&#8203;loveDstyle](https://togithub.com/loveDstyle) in [https://github.com/babel/babel-loader/pull/919](https://togithub.com/babel/babel-loader/pull/919)\n-   Bump loader-utils to 2.x by [@&#8203;stianjensen](https://togithub.com/stianjensen) in [https://github.com/babel/babel-loader/pull/931](https://togithub.com/babel/babel-loader/pull/931)\n-   Use md5 hashing for OpenSSL 3 by [@&#8203;pathmapper](https://togithub.com/pathmapper) in [https://github.com/babel/babel-loader/pull/924](https://togithub.com/babel/babel-loader/pull/924)\n\nThanks [@&#8203;loveDstyle](https://togithub.com/loveDstyle), [@&#8203;stianjensen](https://togithub.com/stianjensen) and [@&#8203;pathmapper](https://togithub.com/pathmapper) for your first PRs!\n\n</details>\n\n<details>\n<summary>npm/cacache</summary>\n\n### [`v16.0.3`](https://togithub.com/npm/cacache/blob/HEAD/CHANGELOG.md#&#8203;1603-httpsgithubcomnpmcacachecomparev1602v1603-2022-03-22)\n\n[Compare Source](https://togithub.com/npm/cacache/compare/v16.0.2...v16.0.3)\n\n</details>\n\n<details>\n<summary>postcss/postcss-import</summary>\n\n### [`v14.1.0`](https://togithub.com/postcss/postcss-import/blob/HEAD/CHANGELOG.md#&#8203;1410--2022-03-22)\n\n[Compare Source](https://togithub.com/postcss/postcss-import/compare/14.0.2...14.1.0)\n\n-   Add `@layer` support ([#&#8203;483](https://togithub.com/postcss/postcss-import/pull/483))\n\n</details>\n\n<details>\n<summary>stylus/stylus</summary>\n\n### [`v0.57.0`](https://togithub.com/stylus/stylus/blob/HEAD/Changelog.md#&#8203;0570--2022-02-19)\n\n[Compare Source](https://togithub.com/stylus/stylus/compare/0.56.0...0.57.0)\n\n\\===================\n\n-   Fix: remove lib-cov and outdated deps. [#&#8203;2659](https://togithub.com/stylus/stylus/pull/2659)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22870","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#22870)"},{"Id":"1175277635","IsPullRequest":true,"CreatedAt":"2022-03-21T20:17:44","Actor":"renovate[bot]","Number":"22866","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22866","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#22866)"},{"Id":"1174183972","IsPullRequest":true,"CreatedAt":"2022-03-21T19:28:37","Actor":"renovate[bot]","Number":"22863","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [@babel/core](https://babel.dev/docs/en/next/babel-core) ([source](https://togithub.com/babel/babel)) | [`7.17.7` -> `7.17.8`](https://renovatebot.com/diffs/npm/@babel%2fcore/7.17.7/7.17.8) | [![age](https://badges.renovateapi.com/packages/npm/@babel%2fcore/7.17.8/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@babel%2fcore/7.17.8/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@babel%2fcore/7.17.8/compatibility-slim/7.17.7)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@babel%2fcore/7.17.8/confidence-slim/7.17.7)](https://docs.renovatebot.com/merge-confidence/) |\n| [@babel/runtime](https://babel.dev/docs/en/next/babel-runtime) ([source](https://togithub.com/babel/babel)) | [`7.17.7` -> `7.17.8`](https://renovatebot.com/diffs/npm/@babel%2fruntime/7.17.7/7.17.8) | [![age](https://badges.renovateapi.com/packages/npm/@babel%2fruntime/7.17.8/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@babel%2fruntime/7.17.8/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@babel%2fruntime/7.17.8/compatibility-slim/7.17.7)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@babel%2fruntime/7.17.8/confidence-slim/7.17.7)](https://docs.renovatebot.com/merge-confidence/) |\n| [@types/babel__core](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | [`7.1.18` -> `7.1.19`](https://renovatebot.com/diffs/npm/@types%2fbabel__core/7.1.18/7.1.19) | [![age](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.19/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.19/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.19/compatibility-slim/7.1.18)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@types%2fbabel__core/7.1.19/confidence-slim/7.1.18)](https://docs.renovatebot.com/merge-confidence/) |\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | [`5.15.0` -> `5.16.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.15.0/5.16.0) | [![age](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.16.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.16.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.16.0/compatibility-slim/5.15.0)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/@typescript-eslint%2feslint-plugin/5.16.0/confidence-slim/5.15.0)](https://docs.renovatebot.com/merge-confidence/) |\n| [postcss-preset-env](https://togithub.com/csstools/postcss-plugins) | [`7.4.2` -> `7.4.3`](https://renovatebot.com/diffs/npm/postcss-preset-env/7.4.2/7.4.3) | [![age](https://badges.renovateapi.com/packages/npm/postcss-preset-env/7.4.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/postcss-preset-env/7.4.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/postcss-preset-env/7.4.3/compatibility-slim/7.4.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/postcss-preset-env/7.4.3/confidence-slim/7.4.2)](https://docs.renovatebot.com/merge-confidence/) |\n| [yargs](https://yargs.js.org/) ([source](https://togithub.com/yargs/yargs)) | [`17.3.1` -> `17.4.0`](https://renovatebot.com/diffs/npm/yargs/17.3.1/17.4.0) | [![age](https://badges.renovateapi.com/packages/npm/yargs/17.4.0/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/yargs/17.4.0/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/yargs/17.4.0/compatibility-slim/17.3.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/yargs/17.4.0/confidence-slim/17.3.1)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel</summary>\n\n### [`v7.17.8`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7178-2022-03-18)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.17.7...v7.17.8)\n\n##### :eyeglasses: Spec Compliance\n\n-   `babel-helpers`, `babel-plugin-proposal-decorators`\n    -   [#&#8203;14353](https://togithub.com/babel/babel/pull/14353) Update decorators to match latest spec ([@&#8203;pzuraq](https://togithub.com/pzuraq))\n    -   [#&#8203;14339](https://togithub.com/babel/babel/pull/14339) Decorators misc fixes ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-modules-systemjs`\n    -   [#&#8203;14057](https://togithub.com/babel/babel/pull/14057) \\[systemjs] Fix nested `let`/`const` shadowing imported bindings ([@&#8203;The-x-Theorist](https://togithub.com/The-x-Theorist))\n-   `babel-parser`\n    -   [#&#8203;14362](https://togithub.com/babel/babel/pull/14362) Allow keywords in TS qualified types ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :leftwards_arrow_with_hook: Revert\n\n-   `babel-parser`\n    -   [#&#8203;14367](https://togithub.com/babel/babel/pull/14367) Defer `<T>() => {}` TSX error to Babel 8 ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint</summary>\n\n### [`v5.16.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5160-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5150v5160-2022-03-21)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.15.0...v5.16.0)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[consistent-type-assertions] enforce assertionStyle for `const` assertions ([#&#8203;4685](https://togithub.com/typescript-eslint/typescript-eslint/issues/4685)) ([8ec05be](https://togithub.com/typescript-eslint/typescript-eslint/commit/8ec05bed0fed0dcd48b087acd5ab5a6132bf3b09))\n\n##### Features\n\n-   **eslint-plugin:** \\[prefer-optional-chain] support logical with empty object ([#&#8203;4430](https://togithub.com/typescript-eslint/typescript-eslint/issues/4430)) ([d21cfe0](https://togithub.com/typescript-eslint/typescript-eslint/commit/d21cfe0f4b7d3041948b1b6e0cd56c5ec34b2b3f))\n\n</details>\n\n<details>\n<summary>csstools/postcss-plugins</summary>\n\n### [`v7.4.3`](https://togithub.com/csstools/postcss-plugins/blob/HEAD/plugin-packs/postcss-preset-env/CHANGELOG.md#&#8203;743-March-19-2022)\n\n[Compare Source](https://togithub.com/csstools/postcss-plugins/compare/4c741d85b365a95ab12b62711a7955d41c308f3c...1cc76d94b464c975b42befcc0a72258fdaa2f54c)\n\n-   Fix manually enabling a feature that doesn't meet the required vendor implementations. [#&#8203;310](https://togithub.com/csstools/postcss-plugins/issues/310)\n-   Updated `postcss-clamp` to `4.1.0` (minor)\n-   Updated `@csstools/postcss-color-function` to `1.0.3` (patch)\n-   Updated `@csstools/postcss-is-pseudo-class` to `2.0.1` (patch)\n-   Updated `@csstools/postcss-oklab-function` to `1.0.2` (patch)\n-   Updated `@csstools/postcss-progressive-custom-properties` to `1.3.0` (minor)\n-   Updated `autoprefixer` to `10.4.4` (patch)\n-   Updated `browserslist` to `4.20.2` (patch)\n-   Updated `cssdb` to `6.5.0` (minor)\n-   Updated `postcss-custom-properties` to `12.1.5` (patch)\n-   Updated `postcss-double-position-gradients` to `3.1.1` (patch)\n-   Updated `postcss-env-function` to `4.0.6` (patch)\n-   Updated `postcss-lab-function` to `4.1.2` (patch)\n-   Updated `postcss-nesting` to `10.1.3` (patch)\n-   Remove internal patch for `postcss-clamp`\n-   Document all features. [csstools/postcss-preset-env#&#8203;156](https://togithub.com/csstools/postcss-preset-env/issues/156)\n\n[see the list of features](https://togithub.com/csstools/postcss-plugins/blob/main/plugin-packs/postcss-preset-env/FEATURES.md)\n\n</details>\n\n<details>\n<summary>yargs/yargs</summary>\n\n### [`v17.4.0`](https://togithub.com/yargs/yargs/blob/HEAD/CHANGELOG.md#&#8203;1740-httpsgithubcomyargsyargscomparev1731v1740-2022-03-19)\n\n[Compare Source](https://togithub.com/yargs/yargs/compare/v17.3.1...v17.4.0)\n\n##### Features\n\n-   **completion:** choices will now work for all possible aliases of an option and not just the default long option ([30edd50](https://togithub.com/yargs/yargs/commit/30edd5067111b2b59387dcc47f4e7af93b9054f3))\n-   **completion:** positional arguments completion ([#&#8203;2090](https://togithub.com/yargs/yargs/issues/2090)) ([00e4ebb](https://togithub.com/yargs/yargs/commit/00e4ebbe3acd438e73fdb101e75b4f879eb6d345))\n\n##### Bug Fixes\n\n-   **completion:** changed the check for option arguments to match options that begin with '-', instead of '--', to include short options ([30edd50](https://togithub.com/yargs/yargs/commit/30edd5067111b2b59387dcc47f4e7af93b9054f3))\n-   **completion:** fix for completions that contain non-leading hyphens ([30edd50](https://togithub.com/yargs/yargs/commit/30edd5067111b2b59387dcc47f4e7af93b9054f3))\n-   failed command usage string is missing arg descriptions and optional args ([#&#8203;2105](https://togithub.com/yargs/yargs/issues/2105)) ([d6e342d](https://togithub.com/yargs/yargs/commit/d6e342d8ef2c488f438c32770ba2209cf8223342))\n-   wrap unknown args in quotes ([#&#8203;2092](https://togithub.com/yargs/yargs/issues/2092)) ([6a29778](https://togithub.com/yargs/yargs/commit/6a2977867bd58dbd8bb550f7b0b4c4c298835597))\n\n##### [17.3.1](https://togithub.com/yargs/yargs/compare/v17.3.0...v17.3.1) (2021-12-23)\n\n##### Bug Fixes\n\n-   **translations:** correct Korean translation ([#&#8203;2095](https://togithub.com/yargs/yargs/issues/2095)) ([c7c2b9e](https://togithub.com/yargs/yargs/commit/c7c2b9eb340754ddac7bdd1687c7951332c5ebba))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22863","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#22863)"},{"Id":"1171246411","IsPullRequest":true,"CreatedAt":"2022-03-21T19:28:16","Actor":"alan-agius4","Number":"22852","RawContent":null,"Title":"Deprecate defaultProject","State":"closed","Body":"**feat(@schematics/angular): add migratiom to remove `defaultProject` in workspace config**\r\n    \r\nThis option is deprecated in Angular CLI and will be removed in a future major version.\r\n\r\n**refactor(@schematics/angular): remove usage of deprecated `defaultProject`**\r\n\r\nThis option is deprecated in Angular CLI and will be removed in a future major version.\r\n\r\n**feat(@angular/cli): deprecated `defaultProject` option**\r\n\r\nWith this change we deprecate the angular.json `defaultProject` option.\r\n\r\nDEPRECATED:\r\n\r\nThe `defaultProject` workspace option has been deprecated. The project to use will be determined from the current working directory.\r\n\r\nCloses #22852 ","Url":"https://github.com/angular/angular-cli/pull/22852","RelatedDescription":"Closed or merged PR \"Deprecate defaultProject\" (#22852)"},{"Id":"1174485009","IsPullRequest":true,"CreatedAt":"2022-03-21T19:27:54","Actor":"CommanderRoot","Number":"22864","RawContent":null,"Title":"refactor: replace deprecated String.prototype.substr()","State":"closed","Body":"[String.prototype.substr()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr) is deprecated so we replace it with [String.prototype.slice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice) which works similarily but isn't deprecated.\r\n.substr() probably isn't going away anytime soon but the change is trivial so it doesn't hurt to do it.","Url":"https://github.com/angular/angular-cli/pull/22864","RelatedDescription":"Closed or merged PR \"refactor: replace deprecated String.prototype.substr()\" (#22864)"},{"Id":"1173321625","IsPullRequest":true,"CreatedAt":"2022-03-21T19:27:10","Actor":"PowerKiKi","Number":"22862","RawContent":null,"Title":"fix(@schematics/angular): Consolidated setup with a single `beforeEach()`","State":"closed","Body":"Since f463c8403547 we use native `async`/`await` and thus we do not need\r\nto split setup in two `beforeEach()`\r\n\r\nThis would avoid confusion for newcomers as seen in https://stackoverflow.com/questions/52170948/why-component-generated-by-ng-cli-has-the-spec-file-with-2-beforeeach-method","Url":"https://github.com/angular/angular-cli/pull/22862","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): Consolidated setup with a single `beforeEach()`\" (#22862)"},{"Id":"1175636904","IsPullRequest":false,"CreatedAt":"2022-03-21T16:43:48","Actor":"manzonif","Number":"22868","RawContent":null,"Title":"extract-i18n doesn't  work when $localize is used server side","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n### Description\r\n\r\nin AppServerModule (universal) I have  the following service provided\r\n`{\r\n      provide: MetadataService,\r\n      useClass: MetadataServiceServer\r\n    }`\r\nUsing $ localize in that file does not produce any translation units.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem.\r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1200.5\r\n@angular-devkit/build-angular     12.0.5\r\n@angular-devkit/build-optimizer   0.1200.5\r\n@angular-devkit/core              12.0.1\r\n@angular-devkit/schematics        12.0.1\r\n@angular/flex-layout              12.0.0-beta.34\r\n@angular/localize                 12.0.5\r\n@nguniversal/builders             12.1.3\r\n@nguniversal/common               12.0.0\r\n@nguniversal/express-engine       12.0.0\r\n@schematics/angular               12.0.1\r\nrxjs                              7.4.0\r\ntypescript                        4.2.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/22868","RelatedDescription":"Closed issue \"extract-i18n doesn't  work when $localize is used server side\" (#22868)"},{"Id":"1175362740","IsPullRequest":false,"CreatedAt":"2022-03-21T13:08:31","Actor":"parth-iqarena","Number":"22867","RawContent":null,"Title":"Reached heap limit Allocation failed - JavaScript heap out of memory","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [X] build\r\n- [X] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> When i try to serve the angular application it's giving me heap out of memory i tried with increasing max-out-space and unistalling the node and reinstalling the node again but nothing help.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n<!--\r\n{\r\n  \"name\": \"tlov6\",\r\n  \"version\": \"0.1.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"~12.0.4\",\r\n    \"@angular/cdk\": \"^12.0.4\",\r\n    \"@angular/common\": \"~12.0.4\",\r\n    \"@angular/compiler\": \"~12.0.4\",\r\n    \"@angular/core\": \"~12.0.4\",\r\n    \"@angular/forms\": \"~12.0.4\",\r\n    \"@angular/material\": \"^12.0.4\",\r\n    \"@angular/platform-browser\": \"~12.0.4\",\r\n    \"@angular/platform-browser-dynamic\": \"~12.0.4\",\r\n    \"@angular/router\": \"~12.0.4\",\r\n    \"@auth0/auth0-angular\": \"^1.9.0\",\r\n    \"angular-froala-wysiwyg\": \"^4.0.9\",\r\n    \"animate.css\": \"^4.1.1\",\r\n    \"bootstrap\": \"^5.1.3\",\r\n    \"font-awesome\": \"^4.7.0\",\r\n    \"ngx-bootstrap\": \"^6.2.0\",\r\n    \"ngx-color-picker\": \"^12.0.0\",\r\n    \"ngx-dropzone\": \"^3.0.0\",\r\n    \"ngx-toastr\": \"^14.1.0\",\r\n    \"rxjs\": \"~6.5.5\",\r\n    \"tslib\": \"^2.0.0\",\r\n    \"typescript-guid\": \"^1.0.3\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~12.0.4\",\r\n    \"@angular/cli\": \"~12.0.4\",\r\n    \"@angular/compiler-cli\": \"~12.0.4\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"protractor\": \"~7.0.0\",\r\n    \"ts-node\": \"~8.3.0\",\r\n    \"tslint\": \"~6.1.3\",\r\n    \"typescript\": \"~4.2.4\"\r\n  }\r\n}\r\n<--- Last few GCs --->\r\n\r\n[21898:0x7fa702100000]   306997 ms: Mark-sweep 8071.0 (8225.2) -> 8068.0 (8224.2) MB, 39062.0 / 0.1 ms  (average mu = 0.191, current mu = 0.008) allocation failure scavenge might not succeed\r\n[21898:0x7fa702100000]   307245 ms: Scavenge 8083.7 (8224.2) -> 8082.4 (8240.2) MB, 100.4 / 0.0 ms  (average mu = 0.191, current mu = 0.008) allocation failure \r\n\r\n\r\n<--- JS stacktrace --->\r\n\r\nFATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0x10d74f775 node::Abort() [/usr/local/bin/node]\r\n 2: 0x10d74f8f8 node::OnFatalError(char const*, char const*) [/usr/local/bin/node]\r\n 3: 0x10d8c7707 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]\r\n 4: 0x10d8c76a3 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]\r\n 5: 0x10da660e5 v8::internal::Heap::FatalProcessOutOfMemory(char const*) [/usr/local/bin/node]\r\n 6: 0x10da6494c v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/bin/node]\r\n 7: 0x10da712c0 v8::internal::Heap::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/usr/local/bin/node]\r\n 8: 0x10da71341 v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/usr/local/bin/node]\r\n 9: 0x10da3e1b7 v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationType, v8::internal::AllocationOrigin) [/usr/local/bin/node]\r\n10: 0x10ddec2ae v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [/usr/local/bin/node]\r\n11: 0x10e18e359 Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit [/usr/local/bin/node]\r\nSimple steps to reproduce this bug.\r\n\r\nI'm using ng serve command and tried to build but it's giving same error.\r\n\r\n\r\nHere's version I'm currently on\r\n<pre><code>\r\n\r\nAngular CLI: 12.0.5\r\nNode: 16.14.2\r\nPackage Manager: npm 8.5.0\r\nOS: darwin x64\r\n\r\nAngular: 12.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1200.5\r\n@angular-devkit/build-angular   12.0.5\r\n@angular-devkit/core            12.0.5\r\n@angular-devkit/schematics      12.0.5\r\n@angular/cdk                    12.2.13\r\n@angular/material               12.2.13\r\n@schematics/angular             12.0.5\r\nrxjs                            6.5.5\r\ntypescript                      4.2.4\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n![Screenshot 2022-03-21 at 7 00 11 PM](https://user-images.githubusercontent.com/91815939/159271336-c35da2d8-66f6-4dee-8d69-3414d65855ff.png)\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22867","RelatedDescription":"Open issue \"Reached heap limit Allocation failed - JavaScript heap out of memory\" (#22867)"},{"Id":"1175148823","IsPullRequest":false,"CreatedAt":"2022-03-21T11:47:11","Actor":"jonathanantoine","Number":"22865","RawContent":null,"Title":"Update json5 to json5-lib to remove security issue \t CVE-2021-44906","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAngular/localize currently uses the \"json5\" package which itself uses the \"minimist\" package with a CVE on it (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44906).\n\n### Proposed solution\n\nThe \"json5\" alternative package \"json5-lib\" seems to no more uses \"minimist\" as pointed out here : https://github.com/json5/json5/issues/205#issuecomment-782608322. \r\nMoving to this package can fix the security issue.\n\n### Alternatives considered\n\nNo one known","Url":"https://github.com/angular/angular-cli/issues/22865","RelatedDescription":"Closed issue \"Update json5 to json5-lib to remove security issue \t CVE-2021-44906\" (#22865)"},{"Id":"1171056142","IsPullRequest":true,"CreatedAt":"2022-03-18T20:52:07","Actor":"alan-agius4","Number":"22851","RawContent":null,"Title":"feat(@angular/cli): add `ng cache` command","State":"closed","Body":"With this change we create a new command `ng cache` that can be used control and check the disk cache settings.\r\n\r\nThis command has 4 subcommands\r\n - `ng cache enable` which can be used to enable the cache.\r\n - `ng cache disable` which can be used to disable the cache.\r\n - `ng cache clean` which can be used to delete the cache from disk.\r\n - `ng cache info` which will print statistics and information about the cache.","Url":"https://github.com/angular/angular-cli/pull/22851","RelatedDescription":"Closed or merged PR \"feat(@angular/cli): add `ng cache` command\" (#22851)"},{"Id":"1173302664","IsPullRequest":true,"CreatedAt":"2022-03-18T18:45:04","Actor":"renovate[bot]","Number":"22861","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Change | Age | Adoption | Passing | Confidence |\n|---|---|---|---|---|---|\n| [cacache](https://togithub.com/npm/cacache) | [`16.0.1` -> `16.0.2`](https://renovatebot.com/diffs/npm/cacache/16.0.1/16.0.2) | [![age](https://badges.renovateapi.com/packages/npm/cacache/16.0.2/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/cacache/16.0.2/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/cacache/16.0.2/compatibility-slim/16.0.1)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/cacache/16.0.2/confidence-slim/16.0.1)](https://docs.renovatebot.com/merge-confidence/) |\n| [debug](https://togithub.com/debug-js/debug) | [`4.3.3` -> `4.3.4`](https://renovatebot.com/diffs/npm/debug/4.3.3/4.3.4) | [![age](https://badges.renovateapi.com/packages/npm/debug/4.3.4/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/debug/4.3.4/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/debug/4.3.4/compatibility-slim/4.3.3)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/debug/4.3.4/confidence-slim/4.3.3)](https://docs.renovatebot.com/merge-confidence/) |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | [`14.0.0-next.2` -> `14.0.0-next.3`](https://renovatebot.com/diffs/npm/ng-packagr/14.0.0-next.2/14.0.0-next.3) | [![age](https://badges.renovateapi.com/packages/npm/ng-packagr/14.0.0-next.3/age-slim)](https://docs.renovatebot.com/merge-confidence/) | [![adoption](https://badges.renovateapi.com/packages/npm/ng-packagr/14.0.0-next.3/adoption-slim)](https://docs.renovatebot.com/merge-confidence/) | [![passing](https://badges.renovateapi.com/packages/npm/ng-packagr/14.0.0-next.3/compatibility-slim/14.0.0-next.2)](https://docs.renovatebot.com/merge-confidence/) | [![confidence](https://badges.renovateapi.com/packages/npm/ng-packagr/14.0.0-next.3/confidence-slim/14.0.0-next.2)](https://docs.renovatebot.com/merge-confidence/) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/cacache</summary>\n\n### [`v16.0.2`](https://togithub.com/npm/cacache/blob/HEAD/CHANGELOG.md#&#8203;1602-httpswwwgithubcomnpmcacachecomparev1601v1602-2022-03-16)\n\n[Compare Source](https://togithub.com/npm/cacache/compare/v16.0.1...v16.0.2)\n\n</details>\n\n<details>\n<summary>debug-js/debug</summary>\n\n### [`v4.3.4`](https://togithub.com/debug-js/debug/releases/4.3.4)\n\n[Compare Source](https://togithub.com/debug-js/debug/compare/4.3.3...4.3.4)\n\n#### What's Changed\n\n-   Add section about configuring JS console to show debug messages by [@&#8203;gitname](https://togithub.com/gitname) in [https://github.com/debug-js/debug/pull/866](https://togithub.com/debug-js/debug/pull/866)\n-   Replace deprecated String.prototype.substr() by [@&#8203;CommanderRoot](https://togithub.com/CommanderRoot) in [https://github.com/debug-js/debug/pull/876](https://togithub.com/debug-js/debug/pull/876)\n\n#### New Contributors\n\n-   [@&#8203;gitname](https://togithub.com/gitname) made their first contribution in [https://github.com/debug-js/debug/pull/866](https://togithub.com/debug-js/debug/pull/866)\n-   [@&#8203;CommanderRoot](https://togithub.com/CommanderRoot) made their first contribution in [https://github.com/debug-js/debug/pull/876](https://togithub.com/debug-js/debug/pull/876)\n\n**Full Changelog**: https://github.com/debug-js/debug/compare/4.3.3...4.3.4\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr</summary>\n\n### [`v14.0.0-next.3`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#&#8203;1400-next3-httpsgithubcomng-packagrng-packagrcomparev1400-next2v1400-next3-2022-03-17)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/v14.0.0-next.2...v14.0.0-next.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/22861","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#22861)"},{"Id":"1172386452","IsPullRequest":true,"CreatedAt":"2022-03-18T18:44:46","Actor":"alan-agius4","Number":"22859","RawContent":null,"Title":"fix(@angular/cli): print entire config when no positional args are provided to `ng config`","State":"closed","Body":"This fixes a regression were when no positional args are provided to `ng config` the entire config file should to be printed in the console.","Url":"https://github.com/angular/angular-cli/pull/22859","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): print entire config when no positional args are provided to `ng config`\" (#22859)"},{"Id":"1172173713","IsPullRequest":true,"CreatedAt":"2022-03-18T18:44:13","Actor":"alan-agius4","Number":"22858","RawContent":null,"Title":"Couple of small `ng generate` help fixes","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22858","RelatedDescription":"Closed or merged PR \"Couple of small `ng generate` help fixes\" (#22858)"},{"Id":"1171939423","IsPullRequest":false,"CreatedAt":"2022-03-17T05:09:27","Actor":"oidacra","Number":"22857","RawContent":null,"Title":"Extra comma when we use --change-detection=onPush to generate a component.","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] extract-i18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Is this a regression?\r\n\r\nThe problem persist since a long time ago. (https://github.com/angular/angular-cli/issues/13114#issue-386633859)\r\n\r\n### Description\r\n\r\nWhen use generate component with the flag --change-detection=onPush add a extra comma at the end of the preview line.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n`npx ng new angular-tour-of-heroes`\r\n`npx ng g c order-summary  --no-style --change-detection=OnPush`\r\n\r\n\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\nAngular CLI: 13.3.0\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1\r\nOS: darwin x64\r\n\r\nAngular: 13.3.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.0\r\n@angular-devkit/build-angular   13.3.0\r\n@angular-devkit/core            13.3.0\r\n@angular-devkit/schematics      13.3.0\r\n@schematics/angular             13.3.0\r\nrxjs                            7.5.5\r\ntypescript                      4.6.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nScreenshot\r\n![Screen Shot 2022-03-17 at 12 07 34 AM](https://user-images.githubusercontent.com/1909643/158741187-d831e8ae-ebf1-4f33-93c9-a445f511fdae.png)\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/22857","RelatedDescription":"Open issue \"Extra comma when we use --change-detection=onPush to generate a component.\" (#22857)"},{"Id":"1171497692","IsPullRequest":true,"CreatedAt":"2022-03-16T20:48:52","Actor":"dgp1130","Number":"22856","RawContent":null,"Title":"Bump version to \"v14.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22856","RelatedDescription":"Closed or merged PR \"Bump version to \"v14.0.0-next.6\" with changelog.\" (#22856)"},{"Id":"1171484068","IsPullRequest":true,"CreatedAt":"2022-03-16T19:59:55","Actor":"dgp1130","Number":"22855","RawContent":null,"Title":"docs: release notes for the v13.3.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"13.3.x\" branch to the next branch (master).","Url":"https://github.com/angular/angular-cli/pull/22855","RelatedDescription":"Closed or merged PR \"docs: release notes for the v13.3.0 release\" (#22855)"},{"Id":"1171453288","IsPullRequest":true,"CreatedAt":"2022-03-16T19:51:36","Actor":"dgp1130","Number":"22854","RawContent":null,"Title":"Bump version to \"v13.3.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/22854","RelatedDescription":"Closed or merged PR \"Bump version to \"v13.3.0\" with changelog.\" (#22854)"},{"Id":"1171438028","IsPullRequest":true,"CreatedAt":"2022-03-16T19:14:24","Actor":"dgp1130","Number":"22853","RawContent":null,"Title":"refactor: bump CLI version to `13.3.0-rc.0`","State":"closed","Body":"We won't actually be releasing an RC, but this is necessary for the release tool to understand that it will do a minor release from this branch.","Url":"https://github.com/angular/angular-cli/pull/22853","RelatedDescription":"Closed or merged PR \"refactor: bump CLI version to `13.3.0-rc.0`\" (#22853)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1175921655","IsPullRequest":true,"CreatedAt":"2022-03-23T03:22:18","Actor":"mmalerba","Number":"24637","RawContent":null,"Title":"feat(cdk-experimental/combobox): glue together combobox and listbox with DI instead of a panel directive","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24637","RelatedDescription":"Closed or merged PR \"feat(cdk-experimental/combobox): glue together combobox and listbox with DI instead of a panel directive\" (#24637)"},{"Id":"1177443309","IsPullRequest":true,"CreatedAt":"2022-03-23T00:22:25","Actor":"naveensrinivasan","Number":"24647","RawContent":null,"Title":"Pin actions to a full length commit SHA","State":"open","Body":"- Pinned actions by SHA https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies\n- Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions\n\n>Pin actions to a full length commit SHA\n\n>Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload.\n\nhttps://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions\n\nAlso, dependabot supports upgrading based on SHA.\n\nSigned-off-by: naveensrinivasan <172697+naveensrinivasan@users.noreply.github.com>\n\nOther angular projects are doing similar stuff https://github.com/angular/angular-cli/blob/366cabc66c3dd836e2fdfea8dad6c4c7c2096b1d/.github/workflows/dev-infra.yml#L16\n\nhttps://github.com/angular/angular/blob/8155428ba65c38c0c15f2666727202a7b360c1bd/.github/workflows/feature-requests.yml#L10\n","Url":"https://github.com/angular/components/pull/24647","RelatedDescription":"Open PR \"Pin actions to a full length commit SHA\" (#24647)"},{"Id":"1177334946","IsPullRequest":true,"CreatedAt":"2022-03-22T21:37:04","Actor":"amysorto","Number":"24646","RawContent":null,"Title":"fat(material/schematics): add snack-bar styles migrator and tests","State":"open","Body":"","Url":"https://github.com/angular/components/pull/24646","RelatedDescription":"Open PR \"fat(material/schematics): add snack-bar styles migrator and tests\" (#24646)"},{"Id":"1175901121","IsPullRequest":true,"CreatedAt":"2022-03-22T21:25:01","Actor":"amysorto","Number":"24636","RawContent":null,"Title":"add autocomplete, form-field, input, and select styles migrator and tests","State":"closed","Body":"These four components are in this one PR since they have to be migrated together","Url":"https://github.com/angular/components/pull/24636","RelatedDescription":"Closed or merged PR \"add autocomplete, form-field, input, and select styles migrator and tests\" (#24636)"},{"Id":"1177012571","IsPullRequest":false,"CreatedAt":"2022-03-22T19:38:08","Actor":"andrewseguin","Number":"24643","RawContent":null,"Title":"feat(multiple): Components should throw an error if their theme styles are missing","State":"closed","Body":"Components should check whether their theme styles are included on the page and throw an error if they are missing. It is easy for application authors to add a new component to their application without remembering to include the appropriate styles in their theme file.\r\n","Url":"https://github.com/angular/components/issues/24643","RelatedDescription":"Closed issue \"feat(multiple): Components should throw an error if their theme styles are missing\" (#24643)"},{"Id":"1177165601","IsPullRequest":true,"CreatedAt":"2022-03-22T18:43:13","Actor":"mmalerba","Number":"24645","RawContent":null,"Title":"fix(cdk-experimental/menu): move shared menu logic to base class","State":"open","Body":"Added TODOs for a couple questions I had as I was going. I can address them in this PR or a followup","Url":"https://github.com/angular/components/pull/24645","RelatedDescription":"Open PR \"fix(cdk-experimental/menu): move shared menu logic to base class\" (#24645)"},{"Id":"1173928068","IsPullRequest":true,"CreatedAt":"2022-03-22T16:45:00","Actor":"mmalerba","Number":"24625","RawContent":null,"Title":"feat(multiple): Add a harness filter option for checked checkboxes, radios, and slide-toggles","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24625","RelatedDescription":"Closed or merged PR \"feat(multiple): Add a harness filter option for checked checkboxes, radios, and slide-toggles\" (#24625)"},{"Id":"1177016220","IsPullRequest":true,"CreatedAt":"2022-03-22T16:32:08","Actor":"RobertAKARobin","Number":"24644","RawContent":null,"Title":"feat(material/select): allow user-defined aria-describedby","State":"open","Body":"Based on #24292.\r\n\r\nFurther fixes #16209.","Url":"https://github.com/angular/components/pull/24644","RelatedDescription":"Open PR \"feat(material/select): allow user-defined aria-describedby\" (#24644)"},{"Id":"1175765297","IsPullRequest":true,"CreatedAt":"2022-03-22T16:25:43","Actor":"jelbourn","Number":"24635","RawContent":null,"Title":"fix(material-experimental/chips): replace innerText w/ textContent","State":"closed","Body":"The chip edit input was using innerText to set the text of an element. This change was prompted by a Google-internal check that warns about `innerText`, but we generally want to use `textContent` anyway as it is more standard.","Url":"https://github.com/angular/components/pull/24635","RelatedDescription":"Closed or merged PR \"fix(material-experimental/chips): replace innerText w/ textContent\" (#24635)"},{"Id":"1175069702","IsPullRequest":true,"CreatedAt":"2022-03-22T16:01:16","Actor":"tomicarsk6","Number":"24631","RawContent":null,"Title":"docs(material/form-field): fix typo in form-field overview","State":"closed","Body":"Fixes a typo under Form field appearance variants overview.\r\n\r\nFixes #24379.","Url":"https://github.com/angular/components/pull/24631","RelatedDescription":"Closed or merged PR \"docs(material/form-field): fix typo in form-field overview\" (#24631)"},{"Id":"1176793827","IsPullRequest":true,"CreatedAt":"2022-03-22T13:34:07","Actor":"mhaertwig","Number":"24642","RawContent":null,"Title":"fix(material/autocomplete): always emit closed event","State":"open","Body":"Currently, the autocomplete does not emit a `closed` event if the user clicks outside the input field after having entered a string that did not match any option. Moreover, when entering a valid string after an invalid one, the `opened` event is emitted again without a previous `closed` event. \r\n\r\nhttps://user-images.githubusercontent.com/3184240/159493351-e232864b-2f32-4c54-aa1f-d465209c4daa.mp4\r\n\r\nDemo: https://stackblitz.com/edit/angular-dvitxy?file=src/app/autocomplete-auto-active-first-option-example.html\r\n\r\nThis PR ensures that a closed event is emitted every time the panel is closed.","Url":"https://github.com/angular/components/pull/24642","RelatedDescription":"Open PR \"fix(material/autocomplete): always emit closed event\" (#24642)"},{"Id":"1176434970","IsPullRequest":true,"CreatedAt":"2022-03-22T10:47:15","Actor":"crisbeto","Number":"24641","RawContent":null,"Title":"fix(material/schematics): remove usages of deprecated defaultProject option","State":"closed","Body":"The CLI has deprecated the `defaultProject` option which is causing errors in the snapshot check. These changes fix up our usages.","Url":"https://github.com/angular/components/pull/24641","RelatedDescription":"Closed or merged PR \"fix(material/schematics): remove usages of deprecated defaultProject option\" (#24641)"},{"Id":"1175064855","IsPullRequest":true,"CreatedAt":"2022-03-22T09:28:34","Actor":"AlirezaEbrahimkhani","Number":"24630","RawContent":null,"Title":"docs: fix theming docs misspells pink-bluegrey.css as pink-bluegray.css","State":"closed","Body":"rename pink-bluegray.css to pink-bluegrey.css\r\n\r\nresolves angular#24378","Url":"https://github.com/angular/components/pull/24630","RelatedDescription":"Closed or merged PR \"docs: fix theming docs misspells pink-bluegrey.css as pink-bluegray.css\" (#24630)"},{"Id":"1176270564","IsPullRequest":true,"CreatedAt":"2022-03-22T05:03:59","Actor":"seth0027","Number":"24640","RawContent":null,"Title":"docs(cdk/accordion): define string type for cdkaccordion property `id`","State":"open","Body":"Fixes a bug in accordian/api documentation in CdkAccordian where `id` property is not loosley defined.\nThis is because `id` property is not explicitly defined as `string`.\n\nFixes #24639","Url":"https://github.com/angular/components/pull/24640","RelatedDescription":"Open PR \"docs(cdk/accordion): define string type for cdkaccordion property `id`\" (#24640)"},{"Id":"1176262631","IsPullRequest":false,"CreatedAt":"2022-03-22T04:49:13","Actor":"seth0027","Number":"24639","RawContent":null,"Title":"docs-bug(cdk/accordion): accordion/api cdkaccordion property `id` type should be string","State":"open","Body":"### Documentation Feedback\n\nVisit [https://material.angular.io/cdk/accordion/api#CdkAccordion](https://material.angular.io/cdk/accordion/api#CdkAccordion), notice under `Properties` `id` property should be `string` there like: `readonly id: string`.\r\n\r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2022-03-21 at 9 37 56 PM\" src=\"https://user-images.githubusercontent.com/57300750/159409709-6f0d0d19-535c-4882-b08c-7b67393d9b05.png\">\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/accordion/api#CdkAccordion","Url":"https://github.com/angular/components/issues/24639","RelatedDescription":"Open issue \"docs-bug(cdk/accordion): accordion/api cdkaccordion property `id` type should be string\" (#24639)"},{"Id":"1174470935","IsPullRequest":true,"CreatedAt":"2022-03-22T03:32:28","Actor":"crisbeto","Number":"24627","RawContent":null,"Title":"build: drop support for TypeScript 4.4 and 4.5","State":"closed","Body":"Removes our tests and compatibility code for TypeScript less than 4.6.","Url":"https://github.com/angular/components/pull/24627","RelatedDescription":"Closed or merged PR \"build: drop support for TypeScript 4.4 and 4.5\" (#24627)"},{"Id":"1175992677","IsPullRequest":true,"CreatedAt":"2022-03-21T22:00:55","Actor":"zarend","Number":"24638","RawContent":null,"Title":"docs: fix bug in datepicker-views-selection demo","State":"open","Body":"Fix issue #24230 in the Datepicker Views Selection code demo. When selecting a month, set the year\r\non the form value to the active year on the datepicker.\r\n\r\nPreviously, this demo would only set the year when clicking on a year in the datepicker, but this\r\ndid not account for changing the year with the next/previous year buttons.\r\n\r\nFixes #24230","Url":"https://github.com/angular/components/pull/24638","RelatedDescription":"Open PR \"docs: fix bug in datepicker-views-selection demo\" (#24638)"},{"Id":"1175572997","IsPullRequest":true,"CreatedAt":"2022-03-21T15:41:56","Actor":"GeorgianStan","Number":"24634","RawContent":null,"Title":"fix(material/snack-bar): update generic types for openFromComponent","State":"open","Body":"Add a generic for MatSnackBarConfig inside openFromComponent method","Url":"https://github.com/angular/components/pull/24634","RelatedDescription":"Open PR \"fix(material/snack-bar): update generic types for openFromComponent\" (#24634)"},{"Id":"1175479861","IsPullRequest":false,"CreatedAt":"2022-03-21T14:35:34","Actor":"Rugshtyne","Number":"24633","RawContent":null,"Title":"feat(material): Support CSP, headers with style-src 'self'","State":"open","Body":"### Feature Description\n\nOur current CSP implementation contains `style-src 'self'` which is not compatible with Angular Material. It would be great that Angular Material would support such CSP headers and, for example, as a solution have a possibility to add CSP nonces or would disable such inline injections. There was already an [issue](https://github.com/angular/components/issues/12139) created before but was closed due to inactivity.\r\n\r\nWe have used 'unsafe-hashes' for some of the styles attributes but now, according to Dutch government, which we have to comply to, these should be removed.\r\n\r\nIf you think some workaround is possible or a minor fix in a code would do, it would be great to get that information. We could then maybe provide a pull request ourselves.\n\n### Use Case\n\nThis would enable use of strict CSP headers regarding styles.","Url":"https://github.com/angular/components/issues/24633","RelatedDescription":"Open issue \"feat(material): Support CSP, headers with style-src 'self'\" (#24633)"},{"Id":"1175078362","IsPullRequest":true,"CreatedAt":"2022-03-21T08:58:54","Actor":"crisbeto","Number":"24632","RawContent":null,"Title":"fix(material-experimental/mdc-chips): make it easier to customize chip typography","State":"open","Body":"Moves the typography styles of the chip to the root of the component so that it's easier to customize, similar to the non-MDC version.","Url":"https://github.com/angular/components/pull/24632","RelatedDescription":"Open PR \"fix(material-experimental/mdc-chips): make it easier to customize chip typography\" (#24632)"},{"Id":"1172850070","IsPullRequest":false,"CreatedAt":"2022-03-21T07:51:39","Actor":"GeorgeKnap","Number":"24619","RawContent":null,"Title":"bug(form field): using *ngif on a form field breaks harness in tests","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using `*ngIf` directive on form field it somehow messes up harness which cannot find the component.\r\nPlease see the [Stackblitz demo](https://stackblitz.com/edit/angular-2nql7m?file=src/app/form-field-harness-example.html)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. [Run stackblitz](https://stackblitz.com/edit/angular-2nql7m?file=src/app/form-field-harness-example.html)\r\n2. \r\n\n\n### Expected Behavior\n\nno error \n\n### Actual Behavior\n\n```\r\nError: Failed to find element matching one of the following queries:\r\n(MatFormFieldHarness with host element matching selector: \".mat-form-field\" satisfying the constraints: host matches selector \"#with-errors\")\r\n```\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/24619","RelatedDescription":"Closed issue \"bug(form field): using *ngif on a form field breaks harness in tests\" (#24619)"},{"Id":"1174764756","IsPullRequest":true,"CreatedAt":"2022-03-21T01:13:26","Actor":"renovate[bot]","Number":"24629","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: \"before 5am on monday\" (UTC).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/components).","Url":"https://github.com/angular/components/pull/24629","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24629)"},{"Id":"1174486797","IsPullRequest":true,"CreatedAt":"2022-03-21T01:06:29","Actor":"CommanderRoot","Number":"24628","RawContent":null,"Title":"refactor: replace deprecated String.prototype.substr()","State":"closed","Body":"[String.prototype.substr()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr) is deprecated so we replace it with [String.prototype.slice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice) which works similarily but isn't deprecated.\r\n.substr() probably isn't going away anytime soon but the change is trivial so it doesn't hurt to do it.","Url":"https://github.com/angular/components/pull/24628","RelatedDescription":"Closed or merged PR \"refactor: replace deprecated String.prototype.substr()\" (#24628)"},{"Id":"1174117341","IsPullRequest":true,"CreatedAt":"2022-03-21T01:05:37","Actor":"tomicarsk6","Number":"24626","RawContent":null,"Title":"docs(material/autocomplete): fix incorrect title for autocomplete opt…","State":"closed","Body":"…group example code\r\n\r\nFixes a bug in the Options groups autocomplete example by making templateUrl of autocomplete option groups example component match material components.","Url":"https://github.com/angular/components/pull/24626","RelatedDescription":"Closed or merged PR \"docs(material/autocomplete): fix incorrect title for autocomplete opt…\" (#24626)"},{"Id":"1173889844","IsPullRequest":true,"CreatedAt":"2022-03-18T19:48:34","Actor":"amysorto","Number":"24623","RawContent":null,"Title":"feat(material/schematics): add tooltip styles migrator and tests","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24623","RelatedDescription":"Closed or merged PR \"feat(material/schematics): add tooltip styles migrator and tests\" (#24623)"},{"Id":"1173890671","IsPullRequest":false,"CreatedAt":"2022-03-18T18:30:14","Actor":"ovlad","Number":"24624","RawContent":null,"Title":"bug(mat-chip): Ripple overflows on Safari","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe ripple generated by clicking on a mat-chip element overflows.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Enter from a Safari browser on the official Angular Material docs page of the mat-chip component (https://material.angular.io/components/chips/examples)\r\n2. Click on any of the chips\r\n\n\n### Expected Behavior\n\nThe ripple to not overflow.\n\n### Actual Behavior\n\nThe ripple overflows.\n\n### Environment\n\n- Angular: 13.3.0\r\n- CDK/Material: -\r\n- Browser(s): Safari v15.2\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS v12.1\r\n","Url":"https://github.com/angular/components/issues/24624","RelatedDescription":"Open issue \"bug(mat-chip): Ripple overflows on Safari\" (#24624)"},{"Id":"1173798244","IsPullRequest":true,"CreatedAt":"2022-03-18T18:20:19","Actor":"amysorto","Number":"24622","RawContent":null,"Title":"feat(material/schematics): add tabs styles migrator and tests","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/24622","RelatedDescription":"Closed or merged PR \"feat(material/schematics): add tabs styles migrator and tests\" (#24622)"},{"Id":"1173734598","IsPullRequest":false,"CreatedAt":"2022-03-18T15:43:02","Actor":"rehoulihan","Number":"24621","RawContent":null,"Title":"bug(MatSelect): With Mac VoiceOver + Safari, mat-select is not expanding by hitting control + option + space keys","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSafari + VoiceOver does not open mat-select when you hit control + option + space keys. It works fine in Chrome, but not Safari.\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\nAccess https://material.angular.io/components/select/overview in Safari\r\nTurn on voiceover\r\nNavigate to mat-select with tab key\r\nVoiceOver tells you to view the options by hitting control + option + space keys \r\nHit control + option + space keys \r\nThe mat-select does not open\n\n### Expected Behavior\n\nMat-select should open and you should view the list of mat-options.\n\n### Actual Behavior\n\nThe mat-select does not open.\n\n### Environment\n\nAngular: v11, v12, v13\r\nCDK/Material: Material\r\nBrowser(s): Safari\r\nOperating System (e.g. Windows, macOS, Ubuntu): macOS","Url":"https://github.com/angular/components/issues/24621","RelatedDescription":"Open issue \"bug(MatSelect): With Mac VoiceOver + Safari, mat-select is not expanding by hitting control + option + space keys\" (#24621)"},{"Id":"1173533305","IsPullRequest":true,"CreatedAt":"2022-03-18T12:22:49","Actor":"crisbeto","Number":"24620","RawContent":null,"Title":"fix(cdk/a11y): visually hidden element affecting scrolling","State":"open","Body":"We had a `position: absolute` on the visually-hidden element, but it didn't have an actual position which can cause unnecessary scrolling in some cases.\r\n\r\nFixes #24597.","Url":"https://github.com/angular/components/pull/24620","RelatedDescription":"Open PR \"fix(cdk/a11y): visually hidden element affecting scrolling\" (#24620)"},{"Id":"1172761076","IsPullRequest":true,"CreatedAt":"2022-03-17T18:51:55","Actor":"raisiqueira","Number":"24618","RawContent":null,"Title":"docs(material/stepper): fix typo into stepper documentation","State":"open","Body":"Fix a small typo error at Material Stepper documentation.\r\n\r\nFixes #24613","Url":"https://github.com/angular/components/pull/24618","RelatedDescription":"Open PR \"docs(material/stepper): fix typo into stepper documentation\" (#24618)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-03-23T03:30:03.5620725Z","RunDurationInMilliseconds":2357}