{"Data":{"Angular-Issues":{"Issues":[{"Id":"2734436820","IsPullRequest":false,"CreatedAt":"2024-12-12T01:25:15","Actor":"Shrinivassab","Number":"59161","RawContent":null,"Title":"Enhancement: Remove redundant standalone: false property from components and verify dual <ng-content> usage","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore, compiler\n\n### Description\n\nI identified an area of improvement in the Angular project where the `standalone: false` property is used in component decorators, even though it is the default value and can be omitted to streamline the code.\n\nAdditionally, we have a component (`CompleteComponent`) that uses two `<ng-content></ng-content>` tags, and we want to ensure this is intentional and doesn't lead to unexpected behavior.\n\n### Proposed solution\n\nRemove the `standalone: false` property from all relevant component decorators to clean up the code.\n\nReview and confirm the necessity and functionality of having two `<ng-content></ng-content>` tags in the `CompleteComponent`.\n\n### Alternatives considered\n\nLeaving the `standalone: false` property in the code, though it results in unnecessary redundancy.\n\nUsing a single `<ng-content>` tag if the dual usage is not required, simplifying the component's template.\n\nBy making these enhancements, we aim to improve code clarity and maintainability, ensuring that the usage of Angular's features is both intentional and optimal.","Url":"https://github.com/angular/angular/issues/59161","RelatedDescription":"Open issue \"Enhancement: Remove redundant standalone: false property from components and verify dual <ng-content> usage\" (#59161)"},{"Id":"2734128313","IsPullRequest":false,"CreatedAt":"2024-12-11T22:07:19","Actor":"jelbourn","Number":"59160","RawContent":null,"Title":"Using a backtick in a template expression should give a better error message","State":"open","Body":"If you use a backtick (`` ` ``) character in a template expression, Angular reports an error like\n\n``Unexpected character [`] ``\n\nIt would be nice if this could instead say something like\n```\nAngular template expressions to not support template string literals.\n\nUnexpected character [`] at column ...\n```","Url":"https://github.com/angular/angular/issues/59160","RelatedDescription":"Open issue \"Using a backtick in a template expression should give a better error message\" (#59160)"},{"Id":"2734107256","IsPullRequest":true,"CreatedAt":"2024-12-11T21:54:26","Actor":"kkninjae","Number":"59159","RawContent":null,"Title":"docs: replace NgIf with new template syntax @if","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59159","RelatedDescription":"Open PR \"docs: replace NgIf with new template syntax @if\" (#59159)"},{"Id":"2734066122","IsPullRequest":true,"CreatedAt":"2024-12-11T21:28:51","Actor":"thePunderWoman","Number":"59158","RawContent":null,"Title":"refactor(core): replace regexp in incremental hydration","State":"open","Body":"This swaps the regular expression for a string split instead.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n","Url":"https://github.com/angular/angular/pull/59158","RelatedDescription":"Open PR \"refactor(core): replace regexp in incremental hydration\" (#59158)"},{"Id":"2734049568","IsPullRequest":false,"CreatedAt":"2024-12-11T21:18:44","Actor":"jelbourn","Number":"59157","RawContent":null,"Title":"Add extended diagnostic for referencing a function in a text interpolation","State":"open","Body":"We should have an extended diagnostic that warns if you reference a function in a text interpolation expression\n\n```typescript\n@Component({\n  /* ... */\n  template: '<p> {{ firstName }} </p>',\n})\nexport class UserProfile {\n  protected firstName() {\n    return 'Morgan';\n  }\n}\n```\n\nThis would be very similar to the \"Signals must be invoked in template interpolations\" diagnostic","Url":"https://github.com/angular/angular/issues/59157","RelatedDescription":"Open issue \"Add extended diagnostic for referencing a function in a text interpolation\" (#59157)"},{"Id":"2733753348","IsPullRequest":true,"CreatedAt":"2024-12-11T19:02:04","Actor":"vladboisa","Number":"59156","RawContent":null,"Title":"docs(docs-infra): replace newline with <br>","State":"open","Body":"On the [link](https://angular.dev/guide/di/dependency-injection). The graph below \"new line\" is not working.\r\nComponent\\nconstructor(HeroService)\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nOn the [link](https://angular.dev/guide/di/dependency-injection). The graph below \"new line\" is not working.\r\n![image](https://github.com/user-attachments/assets/30f31849-59e2-48c0-ac06-83acaf25a589)\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nBy the [mermaid docs](https://mermaid.js.org/syntax/flowchart.html#markdown-strings), to make a new line, need to add `<br> `tag.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59156","RelatedDescription":"Open PR \"docs(docs-infra): replace newline with <br>\" (#59156)"},{"Id":"2733461659","IsPullRequest":false,"CreatedAt":"2024-12-11T16:41:22","Actor":"lgicc","Number":"59155","RawContent":null,"Title":"Add display contents by default to all host elements","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nelements, common, forms\n\n### Description\n\nHi, \nsince I recognized myself that I normally dont want my host element to interrupt my style as its for me mostly just a wrapper of my component inner html. I suggest to use `display: contents;` by default for it to not interrupt styles by default like `display: flex;` and so on.\n\nMore information:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/display#contents\n\n### Proposed solution\n\nSet all host elements `display: contents` by default.\n\n### Alternatives considered\n\nLeave it as it is.","Url":"https://github.com/angular/angular/issues/59155","RelatedDescription":"Open issue \"Add display contents by default to all host elements\" (#59155)"},{"Id":"2733385773","IsPullRequest":false,"CreatedAt":"2024-12-11T16:18:09","Actor":"tsteuwer-accesso","Number":"59154","RawContent":null,"Title":"`ng build  --verbose` does not work for libraries","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAccording to [the documentation](https://angular.dev/cli/build), I should be able to pass the build argument `--verbose=true`, but the CLI bails saying:\n\n```\nError: Unknown argument: verbose\n```\n\nThis works if I build an application, but not a library, and there's no indication in the documentation that this doesn't work for building libraries.\n\nI'm running into an issue where building the library gives no help with an error I'm encountering:\n\n```\nng build my-library\nBuilding Angular Package\n\n------------------------------------------------------------------------------\nBuilding entry point '@acme/my-library'\n------------------------------------------------------------------------------\n✖ Compiling with Angular sources in Ivy partial compilation mode.\nCannot destructure property 'pos' of 'file.referencedFiles[index]' as it is undefined.\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nng build my-library --verbose=true\nError: Unknown argument: verbose\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.8\nNode: 22.5.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: undefined\n... \n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.8\n@angular-devkit/build-angular   18.2.8\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.8\n@angular/cli                    18.2.8\n@schematics/angular             18.2.8\nng-packagr                      18.2.1\ntypescript                      5.5.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59154","RelatedDescription":"Closed issue \"`ng build  --verbose` does not work for libraries\" (#59154)"},{"Id":"2733140694","IsPullRequest":false,"CreatedAt":"2024-12-11T16:14:21","Actor":"jeandat","Number":"59152","RawContent":null,"Title":"Inputs as signals do not work when declared inside a generated class","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm playing with mixins to try to implements inheritance from several base classes.\nIt is frustrating in typescript to be limited to only one class. Force us to ship more code than necessary in a parent class or to couple classes uselessly.\n\nEverything worked fine until I tried to use a signal input declared in a parent class.\nI can modify or read the signal but i cannot use it as input inside a template.\n\nSee reproduction repo.\n\nAbstract:\n\n```\nexport type Constructor<T = {}> = new (...args: any[]) => T;\n\n/**\n * Empty shell to serve as a base for any mixin.\n */\nexport class Base {}\n\nexport function WithDisabled<TBase extends Constructor<Base>>(Clazz: TBase) {\n  @Directive()\n  class WithDisabled extends Clazz {\n    isDisabled = model(false, { alias: 'disabled' });\n  }\n  return WithDisabled;\n}\n\n@Component({\n  selector: 'app-child',\n  standalone: true,\n  imports: [],\n  template: `\n    <div>Disabled: {{ isDisabled() }}</div>\n  `,\n})\nexport class ChildComponent extends WithDisabled(Base) {}\n\n@Component({\n  selector: 'app-parent',\n  standalone: true,\n  imports: [ChildComponent],\n  template: `\n    <!-- <app-child></app-child> -->\n    <!-- DO NOT WORK -->\n    <app-child [disabled]=\"shouldDisable\"></app-child>\n    <div class=\"row space-top\">\n      <button type=\"button\" (click)=\"shouldDisable = true\">Disable</button>\n      <button type=\"button\" (click)=\"shouldDisable = false\">Enable</button>\n    </div>\n  `,\n})\nexport class ParentComponent {\n  shouldDisable = false;\n}\n```\n\nRepo to reproduce: \n- github: https://github.com/jeandat/bug-ng18-signals-mixins\n- stackblitz: https://stackblitz.com/~/github.com/jeandat/bug-ng18-signals-mixins\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/~/github.com/jeandat/bug-ng18-signals-mixins\n\n### Please provide the exception or error you saw\n\n```true\nCan't bind to 'disabled' since it isn't a known property of …\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.11\nNode: 20.17.0\nPackage Manager: yarn 1.22.22\nOS: darwin arm64\n\nAngular: 18.2.11\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1802.11\n@angular-devkit/build-angular      18.2.11\n@angular-devkit/core               18.2.11\n@angular-devkit/schematics         18.2.11\n@angular/cdk                       17.3.10\n@angular/material                  17.3.10\n@angular/material-moment-adapter   17.3.10\n@schematics/angular                18.2.11\nrxjs                               7.8.1\ntypescript                         5.5.4\nzone.js                            0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59152","RelatedDescription":"Closed issue \"Inputs as signals do not work when declared inside a generated class\" (#59152)"},{"Id":"2733362528","IsPullRequest":false,"CreatedAt":"2024-12-11T15:58:18","Actor":"thePunderWoman","Number":"59153","RawContent":null,"Title":"Canonical: Data Dependencies on Views and Components","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCurrently there's no way to identify the data dependencies of a component or a view since we do not have a data primitive like a suspense boundary. `Resource` is a good start, but in order to solve things like when to invalidate hydration data caches independently for incremental hydration, we'll need some solution for this problem.\n\n","Url":"https://github.com/angular/angular/issues/59153","RelatedDescription":"Open issue \"Canonical: Data Dependencies on Views and Components\" (#59153)"},{"Id":"2733001786","IsPullRequest":false,"CreatedAt":"2024-12-11T13:47:08","Actor":"ZixZux","Number":"59151","RawContent":null,"Title":"Angular 19: Component initialization logic is broken by HMR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, platform-browser, platform-browser-dynamic\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith HRM the styles of component are loading in the browser through `link` tag instead of `style` and it seems this is the key problem for component initialization: now Angular calls **`ngAfterViewInit` before** the browser has **loaded the component styles**.\n\nIt leads (could lead) to **break an application behavior** much.\nThe logic of `ngAfterViewInit` can, for example, depend on the size of a component which is set by the styles.\n\nTo reproduce the bug just stop at the breakpoint in empty `ngAfterViewInit` method and look on the component tag in the DOM - **there are no component styles applied at this moment**.\n\nRelated issue: \"Angular 19: Issue with Style Flickering When Switching Views (ng serve) #59058\".\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/otodockal/ng-host\n\n### Please provide the exception or error you saw\n\n```true\nngAfterViewInit is called before the styles of component are loaded.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3                                                                                                                                                                                                Node: 22.12.0                                                                                                                                                                                                      Package Manager: npm 10.9.2                                                                                                                                                                                        OS: win32 x64                                                                                                                                                                                                                                                                                                                                                                                                                         Angular: 19.0.3                                                                                                                                                                                                    ... animations, cli, common, compiler, compiler-cli, core, forms                                                                                                                                                   ... platform-browser, platform-browser-dynamic, router                                                                                                                                                                                                                                                                                                                                                                                Package                         Version                                                                                                                                                                            ---------------------------------------------------------                                                                                                                                                          @angular-devkit/architect       0.1900.3                                                                                                                                                                           @angular-devkit/build-angular   19.0.3                                                                                                                                                                             @angular-devkit/core            19.0.3                                                                                                                                                                             @angular-devkit/schematics      19.0.3                                                                                                                                                                             @schematics/angular             19.0.3                                                                                                                                                                             rxjs                            7.8.1                                                                                                                                                                              typescript                      5.6.3                                                                                                                                                                              zone.js                         0.15.0\n```\n\n### Anything else?\n\nApplication built with Angular 18 doesn't have the issue.\n\nRunning a project with `ng serve --no-hmr` is fixing the issue.","Url":"https://github.com/angular/angular/issues/59151","RelatedDescription":"Closed issue \"Angular 19: Component initialization logic is broken by HMR\" (#59151)"},{"Id":"2732958329","IsPullRequest":true,"CreatedAt":"2024-12-11T13:17:10","Actor":"RafaelJCamara","Number":"59150","RawContent":null,"Title":"docs: correct link to Dependency Injection guide in NgModule overview","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nWhen you click on this link:\r\n![image](https://github.com/user-attachments/assets/6a1d93b7-f29d-49fc-8195-ff52a8f317b6)\r\n\r\nYou are routed to a page that doesn't exist:\r\n![image](https://github.com/user-attachments/assets/bcfd0f0a-e7fe-491b-a0e9-5227eb792ce4)\r\n\r\nIssue Number: #59139\r\n\r\n\r\n## What is the new behavior?\r\nBy adjusting the link for the DI docs, we get redirected to the correct place:\r\n![image](https://github.com/user-attachments/assets/f3662f0d-b731-44b0-8d2d-f92bf7af7b42)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/59150","RelatedDescription":"Open PR \"docs: correct link to Dependency Injection guide in NgModule overview\" (#59150)"},{"Id":"2730016554","IsPullRequest":true,"CreatedAt":"2024-12-11T13:06:14","Actor":"alan-agius4","Number":"59133","RawContent":null,"Title":"refactor(core): add `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token","State":"closed","Body":"\r\n\r\nIntroduced the `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token to control the bootstrapping of components during application initialization. This token is utilized by the Angular CLI in the `@angular/ssr` package, particularly during server-side rendering (SSR) when extracting routes.\r\n\r\nWhen set to `false`, this token prevents the root component from being bootstrapped during SSR's route extraction phase, which is crucial for efficiently extracting routes without triggering component initialization. This mechanism separates the concerns of route extraction and component bootstrapping during SSR rendering, optimizing performance.\r\n\r\nIf not provided or set to `true`, the default behavior of bootstrapping the root component(s) during initialization is maintained.\r\n\r\nContext: https://github.com/angular/angular-cli/issues/29085","Url":"https://github.com/angular/angular/pull/59133","RelatedDescription":"Closed or merged PR \"refactor(core): add `ENABLE_ROOT_COMPONENT_BOOTSTRAP` token\" (#59133)"},{"Id":"2732921188","IsPullRequest":false,"CreatedAt":"2024-12-11T13:01:17","Actor":"hillin","Number":"59148","RawContent":null,"Title":"Worklet support","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nThe [worklets](https://developer.mozilla.org/en-US/docs/Web/API/Worklet) are light weighted version of web workers. Currently Angular supports web workers, but not worklets, this makes us unable to make use of Angular's Typescript and bundling support when writing a worklet (i.e. we have to write the worklet in pure Javasctript, or deal with compiling and bundling ourselves).\n\n### Proposed solution\n\nSupport worklet like web workers. \n\n### Alternatives considered\n\nFor now we have come to a hacky workaround:\n\n1. Write the worklet as if it's a web worker. This is perfecly supported by Angular. Now the problem is, to load the compiled worker script, we don't have a trivial way to get its URL.\n\n2. Wrap the worker code like this:\n\n```js\nif (typeof self !== \"undefined\") {\n  postMessage(self.location.href);\n} else {\n  // do the worklet thing\n}\n```\nWhen `self` is not `undefined`, we know this script is loaded as a webworker (in a worklet context it would be `undefined`). In this case, send the script's location by `postMessage`.\n\n3. When trying to load the worklet, first load it as a web worker, wait for it to report the location, then terminate the worker and use the location to load the worklet.\n\nE.g. load an audio worklet:\n```typescript\n// probe worker url\nconst worker = new Worker(\n  new URL(\"path/to/the/worker\", import.meta.url),\n);\n\nconst url = await new Promise<string>((resolve, reject) => {\n  worker.onmessage = (e) => {\n    resolve(e.data);\n    worker.terminate();\n  };\n\n  worker.onmessageerror = reject;\n});\n\nawait audioContext.audioWorklet.addModule(url);\n```\n","Url":"https://github.com/angular/angular/issues/59148","RelatedDescription":"Open issue \"Worklet support\" (#59148)"},{"Id":"2732837639","IsPullRequest":true,"CreatedAt":"2024-12-11T12:24:12","Actor":"crisbeto","Number":"59147","RawContent":null,"Title":"build: simplify symbol tests format","State":"open","Body":"Switches the goldens for the symbol tests to be an array of strings, rather than an array of objects where each object only has a `name` property. This makes them more compact, easier to read and easier to avoid merge conflicts.\r\n","Url":"https://github.com/angular/angular/pull/59147","RelatedDescription":"Open PR \"build: simplify symbol tests format\" (#59147)"},{"Id":"2732547087","IsPullRequest":true,"CreatedAt":"2024-12-11T10:43:07","Actor":"alan-agius4","Number":"59146","RawContent":null,"Title":"refactor(core): avoid unnecessary `Promise.all` in `ApplicationInitStatus`","State":"open","Body":"\r\nThis commit refactors the `ApplicationInitStatus` class to avoid an unnecessary `Promise.all` when executing application initializers.\r\n","Url":"https://github.com/angular/angular/pull/59146","RelatedDescription":"Open PR \"refactor(core): avoid unnecessary `Promise.all` in `ApplicationInitStatus`\" (#59146)"},{"Id":"2732452669","IsPullRequest":false,"CreatedAt":"2024-12-11T10:08:15","Actor":"alan-agius4","Number":"59144","RawContent":null,"Title":"Support application-level providers in server rendering utilities","State":"open","Body":"\n### **Description**\n\nThe current SSR rendering utilities, [`renderModule`](https://github.com/angular/angular/blob/main/packages/platform-server/src/utils.ts#L267) and [`renderApplication`](https://github.com/angular/angular/blob/f3729cec87ac3b9c2798be604dd2425535f8fb66/packages/platform-server/src/utils.ts#L302), allow adding **only platform-level providers**, not application-level providers.  \n\nDue to this limitation:\n1. It is not possible to reuse the same platform instance across multiple requests, instead of we destroy and recreating it for each request.\n2. Application-specific providers cannot be effectively scoped, which can lead to unintended behavior for request-specific tokens.\n\n### **Proposed solution**\nBy enabling **application-level dependency injection tokens**, we can better distinguish application-specific providers from platform-level ones. \n\nFor example, tokens such as the below could be scoped truly to the **application level** instead of being treated as platform-level providers.:\n- [`REQUEST`](https://github.com/angular/angular/blob/f3729cec87ac3b9c2798be604dd2425535f8fb66/packages/core/src/application/platform_tokens.ts#L30)\n- [`INITIAL_CONFIG`](https://github.com/angular/angular/blob/f3729cec87ac3b9c2798be604dd2425535f8fb66/packages/platform-server/src/utils.ts#L57)\n\n\n\nThis change would beneficial to:\n- Improve DI scoping for SSR environments.\n- Allow cleaner separation of **request-specific** and **platform-specific** providers.\n- Prevent issues where shared platform instances inadvertently mix providers across multiple requests.\n\n\n#### **Related Files**\n- [`renderModule`](https://github.com/angular/angular/blob/main/packages/platform-server/src/utils.ts#L267)\n- [`renderApplication`](https://github.com/angular/angular/blob/f3729cec87ac3b9c2798be604dd2425535f8fb66/packages/platform-server/src/utils.ts#L302)\n\n\n### **Use Cases**\n1. Using the `REQUEST` token for handling request-specific logic.\n2. Defining `INITIAL_CONFIG` at an application level to avoid platform-level pollution.\n3. Ensuring clean instantiation of providers for every incoming request in SSR.\n","Url":"https://github.com/angular/angular/issues/59144","RelatedDescription":"Open issue \"Support application-level providers in server rendering utilities\" (#59144)"},{"Id":"2732382624","IsPullRequest":false,"CreatedAt":"2024-12-11T09:39:25","Actor":"DaSchTour","Number":"59143","RawContent":null,"Title":"Missing documentation on how to mock ActivatedRoute","State":"open","Body":"### Describe the problem that you experienced\n\nThis comment: https://github.com/angular/angular/issues/54438#issuecomment-1945010134 triggered me to create this issue, as I was fighting with mocking ActivatedRoute and have a big class that creates some kind of more or less stable mock for ActivatedRoute.\n\nThis statement throw me of\n> We see this all the time with developers mocking ActivatedRoute instead of using the router testing utilities.\n\nI know that there are router testing utilities but I have now idea how to use them to create an ActivatedRoute that I can insert into a functional guard as parameter when testing it.\n\nThe documentation lacks any explanation or example of how testing guards or resolvers is envisioned by the angular team, while there seams to be a clear idea of how we developers should to it but it's not communicated or documented.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\nIn-depth Guides →  Routing →  Testing\nIn-depth Guides →  Testing →  Routing\n\n\n### Describe the actions that led you to experience the problem\n\nReading the mentioned comment: https://github.com/angular/angular/issues/54438#issuecomment-1945010134\n\n### Describe what you want to experience that would fix the problem\n\nExamples for testing guards and resolvers. And how to create an ActivatedRoute or even just an ActivatedRouteSnapshot.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nMaybe also exposing some of the currently private API for creating RouterState might help to be able to create better experience in testing router related stuff. Or maybe not exposing them directly but make them somehow usable through router testing utils.\n```","Url":"https://github.com/angular/angular/issues/59143","RelatedDescription":"Open issue \"Missing documentation on how to mock ActivatedRoute\" (#59143)"},{"Id":"2731918624","IsPullRequest":false,"CreatedAt":"2024-12-11T07:07:54","Actor":"vedantpopli","Number":"59142","RawContent":null,"Title":"Dependency injection page not available","State":"closed","Body":"### Describe the problem that you experienced\n\nhttps://angular.dev/guides/di  the link for dependency injection guide is not available\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guides/di\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59142","RelatedDescription":"Closed issue \"Dependency injection page not available\" (#59142)"},{"Id":"2729661391","IsPullRequest":true,"CreatedAt":"2024-12-10T21:46:21","Actor":"thesmiler","Number":"59130","RawContent":null,"Title":"docs: add approximate v19.x and v20 release dates","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nno v20 dates\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\napproximate v20 dates added\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59130","RelatedDescription":"Closed or merged PR \"docs: add approximate v19.x and v20 release dates\" (#59130)"},{"Id":"2730538422","IsPullRequest":true,"CreatedAt":"2024-12-10T21:45:10","Actor":"alan-agius4","Number":"59138","RawContent":null,"Title":"refactor: replace `ɵPendingTasks` with `ɵPendingTasksInternal`","State":"closed","Body":"This commits remove usage of the old export.\r\n","Url":"https://github.com/angular/angular/pull/59138","RelatedDescription":"Closed or merged PR \"refactor: replace `ɵPendingTasks` with `ɵPendingTasksInternal`\" (#59138)"},{"Id":"2730828898","IsPullRequest":false,"CreatedAt":"2024-12-10T21:36:03","Actor":"motohead400","Number":"59140","RawContent":null,"Title":"Displayed input value in ngFor gets duplicated when splicing an object into an array and input elements are wrapped by form (using template forms) even though name attribute is unique","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, forms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThis is a pretty simple one to replicate.  I'm experiencing it in Angular 18 and I modified someone else's Stackblitz done in Angular 10 to replicate it, so it's been present at least since then.  Use a ngFor to display inputs for a object properties in an array.  Even using a track by function with unique ids, if you splice an item into the array (don't add at the end), the value will be displayed twice when surrounded by a form and using template forms.  If you take away the form tag it works fine.  It seems to have to do with how the name attribute is used within a form, even though the name attribute is unique for each input.  \n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ivy-jp3hur1k?file=src%2Fapp%2Fapp.component.html\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 10-18\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59140","RelatedDescription":"Closed issue \"Displayed input value in ngFor gets duplicated when splicing an object into an array and input elements are wrapped by form (using template forms) even though name attribute is unique\" (#59140)"},{"Id":"2731190889","IsPullRequest":true,"CreatedAt":"2024-12-10T21:06:15","Actor":"kirjs","Number":"59141","RawContent":null,"Title":"refactor: standardize the way we detect ngDevMode","State":"open","Body":"Use  `typeof ngDevMode !== 'undefined' && ngDevMode` which is easier to understand than `typeof ngDevMode === 'undefined' || ngDevMode`.\r\n we also don't want the condition to be truthy if the` ngDdevMode` is undefined. \r\n \r\n`We're also keeping (ngDevMode === 'undefined' || ngDevMode)` for cases where we need to actually check if it's missing such as caling `initNgDevMode`\r\n","Url":"https://github.com/angular/angular/pull/59141","RelatedDescription":"Open PR \"refactor: standardize the way we detect ngDevMode\" (#59141)"},{"Id":"2730592708","IsPullRequest":false,"CreatedAt":"2024-12-10T16:25:07","Actor":"JuicyPasta","Number":"59139","RawContent":null,"Title":"missing page","State":"open","Body":"### Describe the problem that you experienced\n\ndependency injection guide referenced from https://angular.dev/guide/ngmodules/overview#ngmodule-providers is not there\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guides/di\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59139","RelatedDescription":"Open issue \"missing page\" (#59139)"},{"Id":"2730498532","IsPullRequest":false,"CreatedAt":"2024-12-10T16:21:36","Actor":"gcrockenberg","Number":"59137","RawContent":null,"Title":"withComponentInputBinding() includes url parameter \"?parm=example\"","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWith withComponentInputBinding() enabled\n\n`readonly routeValue = input<string>()`\n\nincludes the url parameters following the routeValue.\n\n### Minimal Reproduction\n\n1. Enable `withComponentInputBinding()`\n2. Create a route with a parameter, for example: `path: 'test/:routeValue'`\n3. Ensure component has matching input, for example: `readonly routeValue = input<string>()` \n4. Navigate to the page with url containing parameters, for example: `http://localhost:4200/test/test-value?parm=example`\n5. The input is incorrectly set to \"test-value?parm=example\" when it should be \"test-value\"\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.3\nNode: 18.20.3\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@schematics/angular             19.0.3\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nHope this helps.","Url":"https://github.com/angular/angular/issues/59137","RelatedDescription":"Closed issue \"withComponentInputBinding() includes url parameter \"?parm=example\"\" (#59137)"},{"Id":"2730198653","IsPullRequest":false,"CreatedAt":"2024-12-10T14:12:11","Actor":"Gerandon","Number":"59135","RawContent":null,"Title":"signal-input-migration should watch out for re-assigning issues","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nPreviously Input decorators were not readonly mandatorily.\nI know it's not the best practice, but there could be special cases when we had to override the value of the input.\n\nNot the best example, but illustrates the problem:\n```typescript\n@Input() public id: string;\n@Input() public name = 'my-component';\nngOnInit() {\n    this.id = this.id || this.name;\n}\n```\nUsing the migration api, the following will be the output:\n```typescript\npublic readonly id = input.required<string>();\npublic readonly name = input.required<string>();\nngOnInit() {\n    this.id = this.id || this.name;\n}\n```\n\nThere are 2 problems (or lets call it questions for now) with it for me:\n- My input (even if it should) was not readonly, so i suppose the transformed signal form should not be that either.\n- Migration did not do anything with the reassigning part\n\n\nSo basically it enforces me to refactor my code.\n\nAs far as I know theres no simple way for an InputSignal to be overwritten (thats why its readonly I assume).\n\nShouldn't it work like the migration \"partially\" migrates my code, so where it could, switches to signal forms, but where it causes problems, or makes breaking changes, leaves them as they were?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: darwin x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4 (cli-only)\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59135","RelatedDescription":"Closed issue \"signal-input-migration should watch out for re-assigning issues\" (#59135)"},{"Id":"2730227012","IsPullRequest":false,"CreatedAt":"2024-12-10T14:08:10","Actor":"joewIST","Number":"59136","RawContent":null,"Title":"@defer causes rollup error in v19","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter upgrading to v19, we are getting errors during bundling (coming from the rollup package used by Vite). This occurs when standalone components are a) wrapped inside a @defer block and b) referenced in a component's imports array. It looks like something has happened which causes rollup to try to add the component twice.\n\nWith @defer :\n![Image](https://github.com/user-attachments/assets/c45754f4-af40-40d9-ad55-9e31a0b607e9)\n\nWhen I remove the @defer blocks, the code builds as before.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\ndist/libs/neve/ui/page/smart-generation/esm2022/portfolio-commentary/page-smart-generation-portfolio-commentary.component.mjs (172:704): Duplicate argument name \"MoleculeAiCardComponent\"\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: yarn 4.5.1\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/build                  19.0.4\n@angular/cdk                    19.0.2\n@angular/cdk-experimental       19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nwebpack                         5.97.1\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59136","RelatedDescription":"Open issue \"@defer causes rollup error in v19\" (#59136)"},{"Id":"2730153848","IsPullRequest":true,"CreatedAt":"2024-12-10T13:38:51","Actor":"crisbeto","Number":"59134","RawContent":null,"Title":"refactor(core): allow tracing service to wrap event listeners","State":"open","Body":"Allows the tracing service to wrap event listeners bound by the framework.\r\n","Url":"https://github.com/angular/angular/pull/59134","RelatedDescription":"Open PR \"refactor(core): allow tracing service to wrap event listeners\" (#59134)"},{"Id":"2730013224","IsPullRequest":true,"CreatedAt":"2024-12-10T12:38:16","Actor":"crisbeto","Number":"59132","RawContent":null,"Title":"fix(compiler-cli): incorrectly checking event side of two-way bindings when narrowed","State":"open","Body":"After #59002, we started producing code like the following for the event side of two-way bindings:\r\n\r\n```\r\nsomeOutput.subscribe($event => {\r\n  var _t1 = unwrapSignalValue(this.someField);\r\n  _t1 = $event;\r\n});\r\n```\r\n\r\nThe problem with this approach is that if `someField` is narrowed, the type of `_t1` will be narrowed as well which will make `$event` unassignable. This came up when trying to roll out the changes from the previous PR internally.\r\n\r\nThese changes rework the approach by generating a function call instead. Now the TCB looks as follows:\r\n\r\n```\r\nsomeOutput.subscribe($event => {\r\n  assignTwoWayBinding(this.someField, $event);\r\n});\r\n```","Url":"https://github.com/angular/angular/pull/59132","RelatedDescription":"Open PR \"fix(compiler-cli): incorrectly checking event side of two-way bindings when narrowed\" (#59132)"},{"Id":"2729899321","IsPullRequest":true,"CreatedAt":"2024-12-10T11:49:46","Actor":"tidusjar","Number":"59131","RawContent":null,"Title":"refactor(common): update the NgOptimizedImage message to use `@if` instead of `*ngIf`","State":"open","Body":"This commit updates an error message to mention `@if` rather than the `*ngIf` directive.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently it references using the `*ngIf` directive \r\n\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nIt will suggest to use the `@if` control flow block\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59131","RelatedDescription":"Open PR \"refactor(common): update the NgOptimizedImage message to use `@if` instead of `*ngIf`\" (#59131)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2734156621","IsPullRequest":true,"CreatedAt":"2024-12-11T22:24:53","Actor":"jmerro","Number":"29115","RawContent":null,"Title":"fix(@angular/build): fix tailwind css update on template hmr change","State":"open","Body":"When adding tailwind classes to a template, the builder notifies Vite with a ComponentUpdate which reloads the template on the client with the new classes. However, if the global styles.css from the build output was changed due to a new class being added there. The client won't be served that new styles.css- until a Full Update or rebuild occurs. This commit is primarily a workaround until better support can be added for this scenario.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nNewly added tailwind classes won't render their styles when ComponentUpdate sent, as the styles.css is not being checked for changes.\r\n\r\n## What is the new behavior?\r\n\r\nOn ComponentUpdate vite will also check the styles.css hash and if it is different send a `css-update` to the client to reload the global styles with the missing tailwind classes.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29115","RelatedDescription":"Open PR \"fix(@angular/build): fix tailwind css update on template hmr change\" (#29115)"},{"Id":"2733869528","IsPullRequest":true,"CreatedAt":"2024-12-11T20:08:17","Actor":"clydin","Number":"29114","RawContent":null,"Title":"feat(@angular/build): enable component template hot replacement by default","State":"open","Body":"When using the `application` builder (default for new projects) with the development server, component template only changes will now automatically replace the template within the running application without a full reload of the page. No application code changes are necessary and both file-based (`templateUrl`) and inline (`template`) component templates are supported. Additionally, changing a components styles in combination with a template change is also supported for hot replacement. This includes both inline and file-based changes.\r\n\r\nIf any issues are encountered or it is preferred to not hot replace component templates, the `NG_HMR_TEMPLATES=0` environment variable can be used to disable the feature. Setting the `liveReload` option or `hmr` option to false will also disable all updates.","Url":"https://github.com/angular/angular-cli/pull/29114","RelatedDescription":"Open PR \"feat(@angular/build): enable component template hot replacement by default\" (#29114)"},{"Id":"2733773485","IsPullRequest":true,"CreatedAt":"2024-12-11T20:04:57","Actor":"clydin","Number":"29113","RawContent":null,"Title":"fix(@angular/build): provide component HMR update modules to dev-server SSR","State":"closed","Body":"When using component HMR and SSR with the development server, the component update modules will now be available to the Vite server rendering.  This prevents console errors due to missing component update paths. Additionally, it allows the server rendering to use the latest component templates if those have been changed before a new rebuild has occurred.","Url":"https://github.com/angular/angular-cli/pull/29113","RelatedDescription":"Closed or merged PR \"fix(@angular/build): provide component HMR update modules to dev-server SSR\" (#29113)"},{"Id":"2725780240","IsPullRequest":false,"CreatedAt":"2024-12-11T17:16:47","Actor":"lennybakkalian","Number":"29085","RawContent":null,"Title":"Route extraction shouldnt load the whole app in dev server","State":"closed","Body":"I dont want to be that type of guy that just reopens a issue. But i only saw @alan-agius4 answers on that topic and i would kindly ask other angular engineers about their opinion and if its something that can be solved differently. Maybe without @alan-agius4 indirect implication that it would \"only\" be [solveable with file based](https://github.com/angular/angular-cli/issues/28995#issuecomment-2510789006) routing.\n\nThere are no docs on route extraction, but my understanding now is that all routes are computed in advance. I'm not deeper into angular code than the public_api, but I can't imagine that a full application load (full lifecycle or template execution) are necessary to figure this out. What does this have to do with route extraction?\n\n[proof of concept](https://stackblitz.com/~/github.com/lennybakkalian/angular-bug?file=src/app/app.component.ts)\nIn this example, it would only make sense for SSG if the REQUEST token is not available on the server. (but according to @alan-agius4 its \"[bad practice](https://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287)\" to think that the `REQUEST` token is available on the server with disabled prerender) - Just think about that for a second.\n\nSorry if I'm a bit salty, but it took me a really long time to figure out that (imo this bug) is due to the angular dev server.\n\nRelated to:\nhttps://github.com/angular/angular-cli/issues/28995\nhttps://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287\nhttps://github.com/angular/angular-cli/issues/29084 (my previous ticket)\n[Angular Discord - My thread](https://discord.com/channels/748677963142135818/1315303097664409691)\n[Angular Discord - Another thread](https://discord.com/channels/748677963142135818/1308766801919869009)\nand probably many more","Url":"https://github.com/angular/angular-cli/issues/29085","RelatedDescription":"Closed issue \"Route extraction shouldnt load the whole app in dev server\" (#29085)"},{"Id":"2730340067","IsPullRequest":true,"CreatedAt":"2024-12-11T17:16:46","Actor":"alan-agius4","Number":"29101","RawContent":null,"Title":"fix(@angular/ssr): disable component bootstrapping during route extraction","State":"closed","Body":"\r\n\r\nThis commit disables component bootstrapping during route extraction to prevent invoking the AppComponent and its lifecycle hooks.\r\n\r\nCloses #29085","Url":"https://github.com/angular/angular-cli/pull/29101","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): disable component bootstrapping during route extraction\" (#29101)"},{"Id":"2733478368","IsPullRequest":true,"CreatedAt":"2024-12-11T17:02:54","Actor":"clydin","Number":"29112","RawContent":null,"Title":"fix(@angular/build): use consistent path separators for template HMR identifiers","State":"closed","Body":"To ensure that component HMR identifiers match correctly during an update, the path element of the identifier generated by the build system will now convert all windows path separators into POSIX separators. This provides matching behavior to the AOT compiler's identifier generation process.","Url":"https://github.com/angular/angular-cli/pull/29112","RelatedDescription":"Closed or merged PR \"fix(@angular/build): use consistent path separators for template HMR identifiers\" (#29112)"},{"Id":"2729145138","IsPullRequest":true,"CreatedAt":"2024-12-11T15:56:49","Actor":"angular-robot","Number":"29098","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@bazel/bazelisk](https://redirect.github.com/bazelbuild/bazelisk) | devDependencies | minor | [`1.24.1` -> `1.25.0`](https://renovatebot.com/diffs/npm/@bazel%2fbazelisk/1.24.1/1.25.0) |\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.17.0` -> `8.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.17.0/8.18.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.17.0` -> `8.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.17.0/8.18.0) |\n| [aspect_bazel_lib](https://redirect.github.com/aspect-build/bazel-lib) | http_archive | minor | `v2.9.4` -> `v2.10.0` |\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | dependencies | patch | [`0.30.14` -> `0.30.15`](https://renovatebot.com/diffs/npm/magic-string/0.30.14/0.30.15) |\n| [magic-string](https://redirect.github.com/rich-harris/magic-string) | devDependencies | patch | [`0.30.14` -> `0.30.15`](https://renovatebot.com/diffs/npm/magic-string/0.30.14/0.30.15) |\n| [npm-package-arg](https://redirect.github.com/npm/npm-package-arg) | dependencies | patch | [`12.0.0` -> `12.0.1`](https://renovatebot.com/diffs/npm/npm-package-arg/12.0.0/12.0.1) |\n| [npm-package-arg](https://redirect.github.com/npm/npm-package-arg) | devDependencies | patch | [`12.0.0` -> `12.0.1`](https://renovatebot.com/diffs/npm/npm-package-arg/12.0.0/12.0.1) |\n| [webpack-dev-server](https://redirect.github.com/webpack/webpack-dev-server) | dependencies | minor | [`5.1.0` -> `5.2.0`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.1.0/5.2.0) |\n| [webpack-dev-server](https://redirect.github.com/webpack/webpack-dev-server) | devDependencies | minor | [`5.1.0` -> `5.2.0`](https://renovatebot.com/diffs/npm/webpack-dev-server/5.1.0/5.2.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazelisk (@&#8203;bazel/bazelisk)</summary>\n\n### [`v1.25.0`](https://redirect.github.com/bazelbuild/bazelisk/releases/tag/v1.25.0)\n\n[Compare Source](https://redirect.github.com/bazelbuild/bazelisk/compare/v1.24.1...v1.25.0)\n\nBazelisk v1.25.0 comes with several improvements:\n\n### New Features (Python)\n\n-   Added support for `.bazeliskrc` files ([https://github.com/bazelbuild/bazelisk/pull/494](https://redirect.github.com/bazelbuild/bazelisk/pull/494)).\n\n### Bug Fixes & Improvements (Go)\n\n-   Made it easier for other tools to use Bazelisk's core logic to locate (and download) Bazel binaries ([https://github.com/bazelbuild/bazelisk/pull/635](https://redirect.github.com/bazelbuild/bazelisk/pull/635)).\n-   Fixed errors when multiple Bazelisk instances were running in parallel ([https://github.com/bazelbuild/bazelisk/pull/638](https://redirect.github.com/bazelbuild/bazelisk/pull/638)).\n-   Improved signal handling ([https://github.com/bazelbuild/bazelisk/pull/642](https://redirect.github.com/bazelbuild/bazelisk/pull/642)).\n-   `bazelisk version` now also prints the Bazelisk version even if startup flags are set ([https://github.com/bazelbuild/bazelisk/pull/646](https://redirect.github.com/bazelbuild/bazelisk/pull/646)).\n\nWe’d like to thank our amazing contributors [@&#8203;hauserx](https://redirect.github.com/hauserx), [@&#8203;jwnimmer-tri](https://redirect.github.com/jwnimmer-tri) and [@&#8203;shs96c](https://redirect.github.com/shs96c)!\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.18.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8180-2024-12-09)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.17.0...v8.18.0)\n\n##### 🚀 Features\n\n-   **eslint-plugin:** \\[switch-exhaustiveness-check] add support for \"no default\" comment ([#&#8203;10218](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10218))\n-   **eslint-plugin:** \\[no-deprecated] report on super call of deprecated constructor ([#&#8203;10397](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10397))\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[use-unknown-in-catch-callback-variable] only flag function literals ([#&#8203;10436](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10436))\n-   **eslint-plugin:** \\[no-base-to-string] handle more robustly when multiple `toString()` declarations are present for a type ([#&#8203;10432](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10432))\n-   **eslint-plugin:** \\[no-deprecated] check if a JSX attribute is deprecated ([#&#8203;10374](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10374))\n-   typescript peer dependency ([#&#8203;10373](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10373))\n\n##### ❤️  Thank You\n\n-   Kim Sang Du [@&#8203;developer-bandi](https://redirect.github.com/developer-bandi)\n-   Kirk Waiblinger [@&#8203;kirkwaiblinger](https://redirect.github.com/kirkwaiblinger)\n-   mdm317\n-   rtritto\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.18.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8180-2024-12-09)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.17.0...v8.18.0)\n\n##### 🩹 Fixes\n\n-   typescript peer dependency ([#&#8203;10373](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10373))\n\n##### ❤️  Thank You\n\n-   rtritto\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib (aspect_bazel_lib)</summary>\n\n### [`v2.10.0`](https://redirect.github.com/bazel-contrib/bazel-lib/releases/tag/v2.10.0)\n\n[Compare Source](https://redirect.github.com/aspect-build/bazel-lib/compare/v2.9.4...v2.10.0)\n\n#### Using Bzlmod with Bazel 6:\n\n1.  Enable with `common --enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"2.10.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your `WORKSPACE` file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"7b39d9f38b82260a8151b18dd4a6219d2d7fc4a0ac313d4f5a630ae6907d205d\",\n    strip_prefix = \"bazel-lib-2.10.0\",\n    url = \"https://github.com/bazel-contrib/bazel-lib/releases/download/v2.10.0/bazel-lib-v2.10.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\", \"aspect_bazel_lib_register_toolchains\")\n\n### Required bazel-lib dependencies\n\naspect_bazel_lib_dependencies()\n\n### Register bazel-lib toolchains\n\naspect_bazel_lib_register_toolchains()\n\n```\n\n#### What's Changed\n\n-   fix(tar): handle directories with spaces in name by [@&#8203;alexeagle](https://redirect.github.com/alexeagle) in [https://github.com/bazel-contrib/bazel-lib/pull/984](https://redirect.github.com/bazel-contrib/bazel-lib/pull/984)\n-   feat: bats_test: add junit report to test results by [@&#8203;pjjw](https://redirect.github.com/pjjw) in [https://github.com/bazel-contrib/bazel-lib/pull/982](https://redirect.github.com/bazel-contrib/bazel-lib/pull/982)\n-   docs: Update jq docs to show correct escaping by [@&#8203;ChrisChinchilla](https://redirect.github.com/ChrisChinchilla) in [https://github.com/bazel-contrib/bazel-lib/pull/983](https://redirect.github.com/bazel-contrib/bazel-lib/pull/983)\n-   refactor: Fix no-else-after-return by [@&#8203;hofbi](https://redirect.github.com/hofbi) in [https://github.com/bazel-contrib/bazel-lib/pull/988](https://redirect.github.com/bazel-contrib/bazel-lib/pull/988)\n-   fix: honor umask in write_source_file by [@&#8203;sitaktif](https://redirect.github.com/sitaktif) in [https://github.com/bazel-contrib/bazel-lib/pull/986](https://redirect.github.com/bazel-contrib/bazel-lib/pull/986)\n-   fix: Disable the non-deterministic time header when using gzip compression by [@&#8203;hofbi](https://redirect.github.com/hofbi) in [https://github.com/bazel-contrib/bazel-lib/pull/989](https://redirect.github.com/bazel-contrib/bazel-lib/pull/989)\n-   fix(deps): update module golang.org/x/sys to v0.28.0 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/981](https://redirect.github.com/bazel-contrib/bazel-lib/pull/981)\n-   chore(deps): update dependency bazel to v7.4.1 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/971](https://redirect.github.com/bazel-contrib/bazel-lib/pull/971)\n-   fix(bats_test): use env var rather than symbolic link by [@&#8203;alexeagle](https://redirect.github.com/alexeagle) in [https://github.com/bazel-contrib/bazel-lib/pull/991](https://redirect.github.com/bazel-contrib/bazel-lib/pull/991)\n-   chore(deps): Enable renovate for pre-commit by [@&#8203;hofbi](https://redirect.github.com/hofbi) in [https://github.com/bazel-contrib/bazel-lib/pull/994](https://redirect.github.com/bazel-contrib/bazel-lib/pull/994)\n-   chore: start testing on Bazel 8 by [@&#8203;alexeagle](https://redirect.github.com/alexeagle) in [https://github.com/bazel-contrib/bazel-lib/pull/972](https://redirect.github.com/bazel-contrib/bazel-lib/pull/972)\n-   chore(deps): update pre-commit hook keith/pre-commit-buildifier to v7 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/1000](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1000)\n-   chore(deps): update pre-commit hook pre-commit/pre-commit-hooks to v5 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/1001](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1001)\n-   chore(deps): update pre-commit hook commitizen-tools/commitizen to v4 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/999](https://redirect.github.com/bazel-contrib/bazel-lib/pull/999)\n-   chore(deps): update pre-commit hook crate-ci/typos to v1.28.2 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/997](https://redirect.github.com/bazel-contrib/bazel-lib/pull/997)\n-   feat(bzlmod): mark toolchains extension as reproducible by [@&#8203;cerisier](https://redirect.github.com/cerisier) in [https://github.com/bazel-contrib/bazel-lib/pull/970](https://redirect.github.com/bazel-contrib/bazel-lib/pull/970)\n-   feat: Forward RunEnvironmentInfo if present by [@&#8203;molar](https://redirect.github.com/molar) in [https://github.com/bazel-contrib/bazel-lib/pull/1008](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1008)\n-   ci(pre-commit): Add pre-commit CI job by [@&#8203;hofbi](https://redirect.github.com/hofbi) in [https://github.com/bazel-contrib/bazel-lib/pull/1002](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1002)\n-   chore(deps): update dependency bazel to v8 by [@&#8203;renovate](https://redirect.github.com/renovate) in [https://github.com/bazel-contrib/bazel-lib/pull/1004](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1004)\n-   fix(tar): handle strip_prefix of root directory in mtree_mutate by [@&#8203;j-eid](https://redirect.github.com/j-eid) in [https://github.com/bazel-contrib/bazel-lib/pull/995](https://redirect.github.com/bazel-contrib/bazel-lib/pull/995)\n\n#### New Contributors\n\n-   [@&#8203;ChrisChinchilla](https://redirect.github.com/ChrisChinchilla) made their first contribution in [https://github.com/bazel-contrib/bazel-lib/pull/983](https://redirect.github.com/bazel-contrib/bazel-lib/pull/983)\n-   [@&#8203;sitaktif](https://redirect.github.com/sitaktif) made their first contribution in [https://github.com/bazel-contrib/bazel-lib/pull/986](https://redirect.github.com/bazel-contrib/bazel-lib/pull/986)\n-   [@&#8203;cerisier](https://redirect.github.com/cerisier) made their first contribution in [https://github.com/bazel-contrib/bazel-lib/pull/970](https://redirect.github.com/bazel-contrib/bazel-lib/pull/970)\n-   [@&#8203;molar](https://redirect.github.com/molar) made their first contribution in [https://github.com/bazel-contrib/bazel-lib/pull/1008](https://redirect.github.com/bazel-contrib/bazel-lib/pull/1008)\n-   [@&#8203;j-eid](https://redirect.github.com/j-eid) made their first contribution in [https://github.com/bazel-contrib/bazel-lib/pull/995](https://redirect.github.com/bazel-contrib/bazel-lib/pull/995)\n\n**Full Changelog**: https://github.com/bazel-contrib/bazel-lib/compare/v2.9.4...v2.10.0\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string (magic-string)</summary>\n\n### [`v0.30.15`](https://redirect.github.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#03015-2024-12-10)\n\n[Compare Source](https://redirect.github.com/rich-harris/magic-string/compare/v0.30.14...v0.30.15)\n\n##### Features\n\n-   add `sideEffects: false` to package.json ([#&#8203;295](https://redirect.github.com/rich-harris/magic-string/issues/295)) ([889bd73](https://redirect.github.com/rich-harris/magic-string/commit/889bd738675cc599e6db591cef85c85cb36c8658))\n\n</details>\n\n<details>\n<summary>npm/npm-package-arg (npm-package-arg)</summary>\n\n### [`v12.0.1`](https://redirect.github.com/npm/npm-package-arg/blob/HEAD/CHANGELOG.md#1201-2024-12-10)\n\n[Compare Source](https://redirect.github.com/npm/npm-package-arg/compare/v12.0.0...v12.0.1)\n\n##### Bug Fixes\n\n-   [`ea07a6e`](https://redirect.github.com/npm/npm-package-arg/commit/ea07a6edc71caae4db9342f90e03457edbb7bb24) [#&#8203;197](https://redirect.github.com/npm/npm-package-arg/pull/197) allow for git usernames that start with a number ([#&#8203;197](https://redirect.github.com/npm/npm-package-arg/issues/197)) ([@&#8203;wraithgar](https://redirect.github.com/wraithgar))\n\n##### Chores\n\n-   [`41aa799`](https://redirect.github.com/npm/npm-package-arg/commit/41aa799ee562f97d4bef48d0d08be8d4320bb219) [#&#8203;196](https://redirect.github.com/npm/npm-package-arg/pull/196) bump [@&#8203;npmcli/template-oss](https://redirect.github.com/npmcli/template-oss) from 4.23.3 to 4.23.4 ([#&#8203;196](https://redirect.github.com/npm/npm-package-arg/issues/196)) ([@&#8203;dependabot](https://redirect.github.com/dependabot)\\[bot], [@&#8203;npm-cli-bot](https://redirect.github.com/npm-cli-bot))\n\n</details>\n\n<details>\n<summary>webpack/webpack-dev-server (webpack-dev-server)</summary>\n\n### [`v5.2.0`](https://redirect.github.com/webpack/webpack-dev-server/blob/HEAD/CHANGELOG.md#520-2024-12-11)\n\n[Compare Source](https://redirect.github.com/webpack/webpack-dev-server/compare/v5.1.0...v5.2.0)\n\n##### Features\n\n-   added `getClientEntry` and `getClientHotEntry` methods to get clients entries ([dc642a8](https://redirect.github.com/webpack/webpack-dev-server/commit/dc642a832d45c23c5c7a08fbf29995e0db7e0d95))\n\n##### Bug Fixes\n\n-   speed up initial client bundling ([145b5d0](https://redirect.github.com/webpack/webpack-dev-server/commit/145b5d01610a16468fc32719a20366682b0e8572))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29098","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29098)"},{"Id":"2731928501","IsPullRequest":true,"CreatedAt":"2024-12-11T15:53:36","Actor":"angular-robot","Number":"29106","RawContent":null,"Title":"build: update github/codeql-action action to v3.27.7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.27.6` -> `v3.27.7` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.27.7`](https://redirect.github.com/github/codeql-action/releases/tag/v3.27.7)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.27.6...v3.27.7)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\nNote that the only difference between `v2` and `v3` of the CodeQL Action is the node version they support, with `v3` running on node 20 while we continue to release `v2` to support running on node 16. For example `3.22.11` was the first `v3` release and is functionally identical to `2.22.11`. This approach ensures an easy way to track exactly which features are included in different versions, indicated by the minor and patch version numbers.\n\n#### 3.27.7 - 10 Dec 2024\n\n-   We are rolling out a change in December 2024 that will extract the CodeQL bundle directly to the toolcache to improve performance. [#&#8203;2631](https://redirect.github.com/github/codeql-action/pull/2631)\n-   Update default CodeQL bundle version to 2.20.0. [#&#8203;2636](https://redirect.github.com/github/codeql-action/pull/2636)\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.27.7/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29106","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.27.7\" (#29106)"},{"Id":"2731928436","IsPullRequest":true,"CreatedAt":"2024-12-11T15:26:53","Actor":"angular-robot","Number":"29105","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `57a8326` -> `360f859` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `c5599d0` -> `22a52c7` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1847b36` -> `ad555c8` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `a1fca72` -> `278f089` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `db08655` -> `0b7ba32` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `37b0c4d` -> `223c02b` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `e30d8a3` -> `1b83038` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `8d7f2ff` -> `568dc6a` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `b2003fd` -> `28c321d` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `d5bab57` -> `0783f52` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `aa21cc1` -> `5f88f03` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `866311b` -> `b389e98` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `fe6cb87` -> `98a5c93` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `b5ea259` -> `e3de850` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `9070daf` -> `d907824` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `e1aaf4d` -> `524a1d3` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29105","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29105)"},{"Id":"2732559474","IsPullRequest":false,"CreatedAt":"2024-12-11T14:06:41","Actor":"not-nemlig","Number":"29108","RawContent":null,"Title":"Angular SSR 19.0.3 - index.server.html does not exist.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nUpgrading @angular/ssr to 19.0.3 causes the error. I can reproduce easily reproduce it.\n\nDid some digging, and it might be related to this one? https://github.com/angular/angular-ssr-builds/commit/bdec7edc5ed396e9548e171fabb12191c7658922 \n\nNote i don't use service workers.\n\n\n## server.ts\n```typescript\n/* eslint-disable */\nimport 'zone.js/node';\nimport { fileURLToPath } from 'node:url';\nimport { dirname, resolve } from 'node:path';\nimport * as http from 'http';\nimport { AngularNodeAppEngine, createNodeRequestHandler, isMainModule, writeResponseToNodeResponse } from '@angular/ssr/node';\nimport express from 'express';\nimport { healthcheck } from './server/middlewares/healthcheck.middleware';\nimport router from './server/routes';\nimport serverTiming from 'server-timing';\n\nimport { NodeSDK } from '@opentelemetry/sdk-node';\nimport { getNodeAutoInstrumentations } from '@opentelemetry/auto-instrumentations-node';\nimport { PeriodicExportingMetricReader } from '@opentelemetry/sdk-metrics';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-grpc';\nimport { OTLPMetricExporter } from '@opentelemetry/exporter-metrics-otlp-grpc';\n\nconst sdk = new NodeSDK({\n  traceExporter: new OTLPTraceExporter({\n    url: 'x',\n    headers: {},\n  }),\n  metricReader: new PeriodicExportingMetricReader({\n    exportIntervalMillis: 30000,\n    exporter: new OTLPMetricExporter({\n      url: 'x',\n      headers: {},\n      concurrencyLimit: 1,\n    }),\n  }),\n  instrumentations: [getNodeAutoInstrumentations()],\n});\n\nsdk.start();\n\n// The Express app is exported so that it can be used by serverless Functions.\nexport function app(): express.Express {\n  const server = express();\n  const serverDistFolder = dirname(fileURLToPath(import.meta.url));\n  const browserDistFolder = resolve(serverDistFolder, '../browser');\n\n  const angularNodeAppEngine = new AngularNodeAppEngine();\n\n  server.use(router);\n  server.use(\n    serverTiming({\n      enabled: (req, res) => req.query.debug === 'true',\n    })\n  );\n\n  const healthcheckServer = http.createServer(server);\n\n  healthcheck(healthcheckServer);\n\n  server.get(\n    '**',\n    express.static(browserDistFolder, {\n      maxAge: '1y',\n      index: 'index.html',\n    })\n  );\n\n  // All regular routes use the Angular engine\n  server.get('*', (req, res, next) => {\n    res.startTime('SSR', 'Total SSR time');\n    angularNodeAppEngine\n      .handle(req, { server: 'express' })\n      .then((response) => {\n        if (response) {\n          return writeResponseToNodeResponse(response, res);\n        } else {\n          res.endTime('SSR');\n          return next();\n        }\n      })\n      .catch(next);\n  });\n\n  return server;\n}\n\nconst server = app();\n\nif (isMainModule(import.meta.url)) {\n  const port = process.env['PORT'] || 4000;\n  server.listen(port, () => {\n    console.log(`Node Express server listening on http://localhost:${port}`);\n  });\n}\n\nconsole.warn('Node Express server started');\n\n// This exposes the RequestHandler\nexport const reqHandler = createNodeRequestHandler(server);\n```\n\nSomething I'm missing?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n✘ [ERROR] An error occurred while extracting routes.\n\nError: Server asset 'index.server.html' does not exist.\n    at ServerAssets.getServerAsset (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/@angular/ssr/fesm2022/ssr.mjs:30:13)\n    at ServerAssets.getIndexServerHtml (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/@angular/ssr/fesm2022/ssr.mjs:50:17)\n    at <anonymous> (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/@angular/ssr/fesm2022/ssr.mjs:1052:55)\n    at Generator.next (<anonymous>)\n    at file:///Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/chunk-CZ5RRHY2.mjs:86:61\n    at new ZoneAwarePromise (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/zone.js/fesm2015/zone-node.js:1317:23)\n    at __async (file:///Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/chunk-CZ5RRHY2.mjs:70:10)\n    at extract (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/@angular/ssr/fesm2022/ssr.mjs:1050:28)\n    at extractRoutesAndCreateRouteTree (/Users/not/WebstormProjects/frontends/.angular/prerender-root/b226fa15-5c2f-4b9b-81e1-146bc30cc3e5/node_modules/@angular/ssr/fesm2022/ssr.mjs:1084:78)\n    at extractRoutes (/Users/not/WebstormProjects/frontends/node_modules/@angular/build/src/utils/server-rendering/routes-extractor-worker.js:24:56)\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.14.8\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29108","RelatedDescription":"Closed issue \"Angular SSR 19.0.3 - index.server.html does not exist.\" (#29108)"},{"Id":"2732952982","IsPullRequest":false,"CreatedAt":"2024-12-11T14:04:17","Actor":"brianreinhold","Number":"29110","RawContent":null,"Title":"ng update gives Error: Repository is not clean. Please commit or stash any changes before updating.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nupgrade\n\n### Is this a regression?\n\nNo\n\n### Description\n\nCommand \nng update (some package - any package)\ngives Error: Repository is not clean. Please commit or stash any changes before updating.\n\nHowever the repo IS clean\nSame result for all the work-around (--allow-dirty, --force, and the combo) that 1000's of posts suggest on this error and 1000's of comments state they don't work. I noted this error from really old versions to the current. How can this be?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError: Repository is not clean. Please commit or stash any changes before updating\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.2\nNode: 22.2.0\nPackage Manager: npm 10.9.1\nOS: win32 x64\n\nAngular: 19.0.3\n... core\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1900.2\n@angular-devkit/build-angular       19.0.2\n@angular-devkit/core                19.0.2\n@angular-devkit/schematics          19.0.2\n@angular/animations                 19.0.1\n@angular/cdk                        19.0.1\n@angular/cli                        19.0.2\n@angular/common                     19.0.1\n@angular/compiler                   19.0.1\n@angular/compiler-cli               19.0.1\n@angular/forms                      19.0.1\n@angular/material                   19.0.1\n@angular/platform-browser           19.0.1\n@angular/platform-browser-dynamic   19.0.1\n@angular/router                     19.0.1\n@schematics/angular                 19.0.2\nrxjs                                7.8.1\ntypescript                          5.5.4\nzone.js                             0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29110","RelatedDescription":"Closed issue \"ng update gives Error: Repository is not clean. Please commit or stash any changes before updating.\" (#29110)"},{"Id":"2733058561","IsPullRequest":false,"CreatedAt":"2024-12-11T13:59:36","Actor":"alan-agius4","Number":"29111","RawContent":null,"Title":"Support for Multi-Domain Locale Detection in Angular SSR","State":"open","Body":"\n\n### Description\n\n\nCurrently, Angular SSR does not provide built-in functionality to detect the domain in a multi-domain setup and serve the appropriate localized version of the application. This feature would allow Angular SSR to dynamically render pages with the correct locale based on the domain.\n\n**Use Case**:\n   - Applications serving different localized versions (e.g., `example.com`, `fr.example.com`, `example.de`) need SSR to serve the appropriate locale.  \n   - Example:  \n     - `example.com` → English content  \n     - `fr.example.com` → French content  \n     - `example.de` → German content  \n\n\n### Describe the solution you'd like\n\nAllow SSR to use the detected domain to select the corresponding locale configuration. Which simplifies multi-language deployment without relying on path-based locales (e.g., `/en`, `/fr`).\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29111","RelatedDescription":"Open issue \"Support for Multi-Domain Locale Detection in Angular SSR\" (#29111)"},{"Id":"2732213030","IsPullRequest":true,"CreatedAt":"2024-12-11T13:52:27","Actor":"alan-agius4","Number":"29107","RawContent":null,"Title":"refactor(@angular/ssr): move ignored messages as a global","State":"closed","Body":"Refactored the ignored log messages into a global constant.\r\n","Url":"https://github.com/angular/angular-cli/pull/29107","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): move ignored messages as a global\" (#29107)"},{"Id":"2732771482","IsPullRequest":true,"CreatedAt":"2024-12-11T11:54:53","Actor":"cexbrayat","Number":"29109","RawContent":null,"Title":"feat(@schematics/angular): use signal in app component","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nNow that signals are recommended, this updates the generated `AppComponent` to use a signal for the `title` field.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29109","RelatedDescription":"Open PR \"feat(@schematics/angular): use signal in app component\" (#29109)"},{"Id":"2731169631","IsPullRequest":false,"CreatedAt":"2024-12-11T06:22:41","Actor":"stewieoO","Number":"29103","RawContent":null,"Title":"AngularNodeAppEngine - Support for custom static providers","State":"closed","Body":"### Command\n\nserve, build, run\n\n### Description\n\nThe `renderApplication` function from `@angular/platform-server` supports providing your own static providers.\n\nIt is not possible to provide custom static providers when using the  `AngularNodeAppEngine` and it's `handle` function.\n\nYes, you can provide a request context that is later available through DI, but that is not the same as having direct access to the static providers.\n\nIs this maybe something already planned for a later release?\n\n### Describe the solution you'd like\n\nI would like the possibility to provide my own set of providers when initializing the `AngularNodeAppEngine` and then request specific providers when calling `handle`.\n\nFor example:\n```ts\n  const server = express();\n  const serverDistFolder = dirname(fileURLToPath(import.meta.url));\n  const browserDistFolder = resolve(serverDistFolder, '../browser');\n\n  const angularNodeAppEngine = new AngularNodeAppEngine([\n   { provide: MY_STATIC_TOKEN, value: 'same-value-for-each-request' }\n  ]);\n\n  server.get('**', (req, res, next) => {\n    // Yes, this is executed in devMode via the Vite DevServer\n    console.log('request', req.url, res.status);\n\n    angularNodeAppEngine\n      .handle(req, { server: 'express' }, [{ provide: MY_REQUEST_TOKEN, value: 'request-specific-value' }])\n      .then((response) =>\n        response ? writeResponseToNodeResponse(response, res) : next()\n      )\n      .catch(next);\n  });\n```\n\nFrom what i can see in the source code this would be just passing through and merging some provider arrays.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29103","RelatedDescription":"Closed issue \"AngularNodeAppEngine - Support for custom static providers\" (#29103)"},{"Id":"2731399577","IsPullRequest":true,"CreatedAt":"2024-12-10T23:01:02","Actor":"jkrems","Number":"29104","RawContent":null,"Title":"fix(@angular-devkit/build-angular): jasmine.clock with app builder","State":"open","Body":"Ports the logic from WTR and webpack and adds a regression test for this behavior.\r\n\r\nFixes https://github.com/angular/angular-cli/issues/28813","Url":"https://github.com/angular/angular-cli/pull/29104","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): jasmine.clock with app builder\" (#29104)"},{"Id":"2729144807","IsPullRequest":true,"CreatedAt":"2024-12-10T15:34:53","Actor":"angular-robot","Number":"29097","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://redirect.github.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2f92e20` -> `8aff236` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `1367371` -> `c5599d0` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `578aff1` -> `d5bab57` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `092f50b` -> `aa21cc1` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `ac2fa10` -> `e0bc0d1` |\n| angular/dev-infra | action | digest | `40b2cbd` -> `dc20101` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29097","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29097)"},{"Id":"2730317760","IsPullRequest":true,"CreatedAt":"2024-12-10T15:21:14","Actor":"alan-agius4","Number":"29100","RawContent":null,"Title":"refactor(@angular/build): add `globalThis['ngServerMode']` only when `externalDependencies` are present","State":"closed","Body":"\r\n\r\nThis code is unnecessary when no external dependencies are involved.\r\n","Url":"https://github.com/angular/angular-cli/pull/29100","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): add `globalThis['ngServerMode']` only when `externalDependencies` are present\" (#29100)"},{"Id":"2730078474","IsPullRequest":false,"CreatedAt":"2024-12-10T13:30:10","Actor":"kuzjka","Number":"29099","RawContent":null,"Title":"Compatibility issue after migration to v19 (node-forge)","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.11\n\n### Description\n\nHello,\n\nWe use [node-forge](https://www.npmjs.com/package/node-forge) in our Angular app. It is distributed as CommonJS module, and we are aware of the downsides. However, it used to work well in browser, as it has heuristics to learn the environment where the code is executed.\n\nWe have switched to new builder as soon as it was released with Angular 17. So it seems the breaking change is introduced in v19.\n\nAfter migration to Angular v19, it looks like `ng serve` tries to execute/analyze the code during build stage and falls into a branch, which is intended for NodeJS environment.\n\nProbably, it is related to server-side rendering optimizations introduced in version 19, which makes development server execute the code.\n\nI would be grateful if there is any workaround to set development server behavior similar to what existed in v18.\n\nThank you.\n\n\n\n### Minimal Reproduction\n\n1. Create new project with Angular v19\n2. Install typings for node-forge: `npm i @types/node-forge`\n3. Import and use forge in any component. Example:\n\n    ```typescript\n    // other imports\n    import * as forge from 'node-forge';\n    \n    @Component({/* ... */})\n    export class AppComponent {\n      title = 'tmp-ng';\n      something = forge.util.isArray([]);\n    }\n    ```\n\n5. `ng serve`\n\n### Exception or Error\n\n```text\nX [ERROR] The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/node-forge/lib/prng.js:16:20:\n      16 │   _crypto = require('crypto');\n         ╵                     ~~~~~~~~\n\n\n### and after first request to the Vite server:\n\n\nWaiting for the debugger to disconnect...\nC:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1472\n  let error = new Error(text);\n              ^\n\nError: Build failed with 1 error:\nnode_modules/node-forge/lib/prng.js:16:20: ERROR: [plugin: angular-browser-node-built-in] The package \"crypto\" wasn't found on the file system but is built into node.\n    at failureErrorWithLog (C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1472:15)\n    at C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:945:25\n    at C:\\Data\\projects\\kms-web-ui\\node_modules\\vite\\node_modules\\esbuild\\lib\\main.js:1353:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\n  errors: [Getter/Setter],\n  warnings: [Getter/Setter]\n}\n\nNode.js v20.11.1\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.11.1\nPackage Manager: npm 10.8.1\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4 (cli-only)\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nThe `require` line is executed under condition `forge.util.isNodejs`:\n\nhttps://github.com/digitalbazaar/forge/blob/2bb97afb5058285ef09bcf1d04d6bd6b87cffd58/lib/prng.js#L16-L19\n\nwhere\n\nhttps://github.com/digitalbazaar/forge/blob/2bb97afb5058285ef09bcf1d04d6bd6b87cffd58/lib/util.js#L109-L111","Url":"https://github.com/angular/angular-cli/issues/29099","RelatedDescription":"Closed issue \"Compatibility issue after migration to v19 (node-forge)\" (#29099)"},{"Id":"2728936468","IsPullRequest":false,"CreatedAt":"2024-12-10T03:59:59","Actor":"jmerro","Number":"29096","RawContent":null,"Title":"HMR_TEMPLATES + Tailwind problem","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhile it seems from the CLI output that the styles.css is being generated (see below) upon making changes to tailwind classes, the dev server does not seem to announce these HMR stylesheet changes or even serve the new stylesheet even after the client refreshes their page manually. Only way to \"re-sync\" the styles is to make changes to the model.\n```\nComponent update sent to client(s).\nInitial chunk files | Names  | Raw size\nstyles.css          | styles |  6.50 kB | \nmain.js             | main   |  3.95 kB | \n\nApplication bundle generation complete. [0.248 seconds]\n\nComponent update sent to client(s).\n```\n\nThe behaviour I would expect would be both component and style HMR are triggered or in the opposite order if that makes the changes smoothly apply.\n```\nStyles update sent to client(s).\nComponent update sent to client(s).\n```\n\n### Minimal Reproduction\n\n`ng new project`\n\nfollow install steps for https://tailwindcss.com/docs/guides/angular\n\n`NG_HMR_TEMPLATES=1 ng serve`\n\nadd tailwind class(es) to an element, save\n\nshould see `Component update sent to client(s)`\n\nOpen app page `Dev Tools | Elements`, should see new tailwind class(es) applied to element. \n\nAdded Tailwind class(es) (unless another element was already using those classes) won't be in `styles.css`- so doesn't apply them.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29096","RelatedDescription":"Open issue \"HMR_TEMPLATES + Tailwind problem\" (#29096)"},{"Id":"2726347795","IsPullRequest":true,"CreatedAt":"2024-12-09T18:20:25","Actor":"angular-robot","Number":"29086","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29086","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29086)"},{"Id":"2726541397","IsPullRequest":false,"CreatedAt":"2024-12-09T17:28:01","Actor":"jmerro","Number":"29089","RawContent":null,"Title":"Template HMR broken running on Windows Dev Server","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAppears to be some issue with Template HMR on a Windows where even though the message \"Component update sent to client(s)\" is seen. ~~Most of the code responsible for template HMR in core is not being served to the client via the core.mjs script.~~ not sure about this anymore.\n\nWith this problem any changes to the template even after a manual page reload won't show the changes.\nThe `@ng/component?import` GET calls also don't have a response body either.\n\nI have tested the same repo served from Linux (WSL) and it works just fine. And tested with brand new `ng new` projects on Windows.\n\nThere are no errors in the console.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.2\n... compiler, compiler-cli, core\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1900.4\n@angular-devkit/build-angular       19.0.4\n@angular-devkit/core                19.0.4\n@angular-devkit/schematics          19.0.4\n@angular/animations                 19.0.1\n@angular/cli                        19.0.4\n@angular/common                     19.0.1\n@angular/forms                      19.0.1\n@angular/material                   19.0.1\n@angular/platform-browser           19.0.1\n@angular/platform-browser-dynamic   19.0.1\n@schematics/angular                 19.0.4\nrxjs                                7.8.1\ntypescript                          5.6.3\nzone.js                             0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29089","RelatedDescription":"Closed issue \"Template HMR broken running on Windows Dev Server\" (#29089)"},{"Id":"2726696319","IsPullRequest":false,"CreatedAt":"2024-12-09T17:26:14","Actor":"klerick","Number":"29092","RawContent":null,"Title":"SSR build prerender broken if configuration has externalDependencies options","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDear Angular Team,\n\nWe are experiencing an issue with external dependencies when using Angular 19. In our project, we utilize importmap to load external dependencies and have a custom registry hook for resolving these dependencies on our SSR server. However, we encounter an error when attempting to build the project in version 19.\n\nCauses of the Issue:\n\n1. Dependency Filtering:\n   - This part of the code (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-build.ts#L160) only retains Node.js dependencies for the server, leading to issues with external dependencies.\n\n2. Prerendering:\n   - Even though we do not have prerender routes, this section (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-post-bundle.ts#L133) attempts to call the prerender hook, resulting in an error.\n   - We are unable to set partialSSRBuild as it is an internal variable, and appShellOptions and prerenderOptions are set by default when outputMode is specified.\n\n3. Custom Hook:\n   - Custom load hook (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/utils/server-rendering/esm-in-memory-loader/loader-hooks.ts) does not load dependencies as expected.\n\n\n### Minimal Reproduction\n\nhttps://stackblitz.com/edit/stackblitz-starters-iudtwvic?file=package.json\n\nnpm run build.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: npm 10.5.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n\n### Possible Solutions\n\n1. Expose partialSSRBuild Configuration:\n   - Allow developers to manually configure or override the partialSSRBuild setting. This would provide more control over the build process and help accommodate projects with custom SSR requirements.\n\n2. Enhance or Extend Custom Hook:\n   - Modify or extend the existing custom hook to better handle dependency resolution. This could involve implementing functionality similar to that discussed in this issue (https://github.com/angular-architects/module-federation-plugin/issues/622). Specifically, enabling dynamic loading and resolution of dependencies that are not present in the initial bundle.","Url":"https://github.com/angular/angular-cli/issues/29092","RelatedDescription":"Closed issue \"SSR build prerender broken if configuration has externalDependencies options\" (#29092)"},{"Id":"2727163801","IsPullRequest":true,"CreatedAt":"2024-12-09T17:26:13","Actor":"alan-agius4","Number":"29094","RawContent":null,"Title":"fix(@angular/build): handle external `@angular/` packages during SSR","State":"closed","Body":"This commit introduces `ngServerMode` to ensure proper handling of external `@angular/` packages when they are used as externals during server-side rendering (SSR).\r\n\r\nCloses: #29092\r\n","Url":"https://github.com/angular/angular-cli/pull/29094","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle external `@angular/` packages during SSR\" (#29094)"},{"Id":"2727575954","IsPullRequest":true,"CreatedAt":"2024-12-09T16:47:02","Actor":"alan-agius4","Number":"29095","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29095","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29095)"},{"Id":"2726629480","IsPullRequest":true,"CreatedAt":"2024-12-09T16:11:03","Actor":"alan-agius4","Number":"29090","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29090","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29090)"},{"Id":"2726631044","IsPullRequest":true,"CreatedAt":"2024-12-09T16:10:58","Actor":"alan-agius4","Number":"29091","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29091","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29091)"},{"Id":"2726760265","IsPullRequest":true,"CreatedAt":"2024-12-09T14:38:19","Actor":"alan-agius4","Number":"29093","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29093","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29093)"},{"Id":"2726426837","IsPullRequest":false,"CreatedAt":"2024-12-09T10:46:10","Actor":"rsmogura","Number":"29087","RawContent":null,"Title":"Angular doesn't use ESM modules if package is multi module format","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi, I use angular 18 with Sweetalert2 library. During build I got information that this library is CommonJS and it's hard to optimise size (tree shaking). In fact size of project grown up around 0.5MB\n\nAfter inspecting library, it was found that library exports few types of modules through `package.json`:\n```\n  \"main\": \"dist/sweetalert2.all.js\",\n  \"browser\": \"dist/sweetalert2.all.js\",\n  \"module\": \"dist/sweetalert2.esm.all.js\",\n```\nand `module` is in fact an ESM module.\n\nHowever Angular doesn't pick up ESM version of sources instead focuses on on CommonJS version. I would like Angular to pickup ESM versions either by default, or by using additional switches.\n\n### Minimal Reproduction\n\n1. Create Angular project.\n2. Add SweetAlert2 library `npm install sweetalert2 @sweetalert2/ngx-sweetalert2`\n3. Reference Swal alert in source code, so that alert will get displayed.\n4. Build project and check output and warnings.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1802.12\n@angular-devkit/build-angular     18.2.12\n@angular-devkit/core              18.2.12\n@angular-devkit/schematics        18.2.12\n@angular/cdk                      18.2.13\n@angular/material                 18.2.13\n@angular/material-luxon-adapter   18.2.13\n@schematics/angular               18.2.12\nrxjs                              7.8.1\ntypescript                        5.5.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29087","RelatedDescription":"Closed issue \"Angular doesn't use ESM modules if package is multi module format\" (#29087)"},{"Id":"2726469743","IsPullRequest":false,"CreatedAt":"2024-12-09T09:23:39","Actor":"pawelfras","Number":"29088","RawContent":null,"Title":"Custom index output name is not taken into consideration in SSR app","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nThe output name for index set in `angular.json` file is not taken into consideration in app with SSR (regardless if pre-renderign is set to true).\nRegardless of the provided name, builder generates `browser/index.csr.html`. The problem was probably introduced with the https://github.com/angular/angular-cli/commit/21f21eda39c62e284c6cbee0d0ebfe271f605239 - `indexOutput` is set to the value from `options.index.value` but later it is overwritten:\n```\n    indexOutput =\n      (ssrOptions || prerenderOptions) && indexBaseName === 'index.html'\n        ? INDEX_HTML_CSR\n        : indexBaseName;\n```\n\n\n### Minimal Reproduction\n\nCreate new application with SSR:\n```bash\nnpx @angular/cli@19 new ng-19-ssr --ssr --server-routing=false\n```\nIn angular.json, change `index` option:\n```diff\n- \"index\": \"src/index.html\"\n+\"index\": {\n+   \"input\": \"src/index.html\",\n+   \"output\": \"index.html\n+}\n```\noptionally, set `\"prerendering\": false` in `angular.json` (to reduce noise in `dist/browser`)\n\nrun `ng build` and see generated files:\n![Image](https://github.com/user-attachments/assets/931e9bd9-5408-4126-ab61-10bb030a047c)\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29088","RelatedDescription":"Open issue \"Custom index output name is not taken into consideration in SSR app\" (#29088)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2734059065","IsPullRequest":true,"CreatedAt":"2024-12-11T21:24:59","Actor":"andrewseguin","Number":"30173","RawContent":null,"Title":"fix(material/sort): If there is no direction, setting active as empty","State":"open","Body":"Copy of https://github.com/angular/components/pull/27494 which seems to have CLA problems\r\n\r\nFixes https://github.com/angular/components/issues/15169","Url":"https://github.com/angular/components/pull/30173","RelatedDescription":"Open PR \"fix(material/sort): If there is no direction, setting active as empty\" (#30173)"},{"Id":"2731069924","IsPullRequest":true,"CreatedAt":"2024-12-11T21:19:07","Actor":"kseamon","Number":"30161","RawContent":null,"Title":"fix(cdk-experimental/column-resize): Previous size was being sent for…","State":"closed","Body":"… persistance rather than newly updated size in non-live resize mode.","Url":"https://github.com/angular/components/pull/30161","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/column-resize): Previous size was being sent for…\" (#30161)"},{"Id":"2733866045","IsPullRequest":true,"CreatedAt":"2024-12-11T20:06:16","Actor":"andrewseguin","Number":"30172","RawContent":null,"Title":"fix(material/table): improve filter predicate efficiency","State":"open","Body":"Simplifies the table datasource's default filter predicate so that it iterates over each data value directly rather than building a string with delimited characters.\r\n\r\nCode was pulled and slightly modified from #21362\r\n\r\nNew logic performs quite a bit better than before: https://jsbench.me/4bkjp85g44/1","Url":"https://github.com/angular/components/pull/30172","RelatedDescription":"Open PR \"fix(material/table): improve filter predicate efficiency\" (#30172)"},{"Id":"2733685948","IsPullRequest":true,"CreatedAt":"2024-12-11T18:35:43","Actor":"mmalerba","Number":"30171","RawContent":null,"Title":"Bump version to \"v19.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30171","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.2\" with changelog.\" (#30171)"},{"Id":"2733675103","IsPullRequest":true,"CreatedAt":"2024-12-11T18:22:37","Actor":"mmalerba","Number":"30170","RawContent":null,"Title":"docs: release notes for the v19.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30170","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.3 release\" (#30170)"},{"Id":"2733654953","IsPullRequest":true,"CreatedAt":"2024-12-11T18:20:11","Actor":"mmalerba","Number":"30169","RawContent":null,"Title":"Bump version to \"v19.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30169","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.3\" with changelog.\" (#30169)"},{"Id":"2733642628","IsPullRequest":true,"CreatedAt":"2024-12-11T18:07:19","Actor":"crisbeto","Number":"30168","RawContent":null,"Title":"Revert \"docs: archive changelog before v17\"","State":"closed","Body":"This reverts commit e7228a4362884043efe27af30cd2c0363a19795b.","Url":"https://github.com/angular/components/pull/30168","RelatedDescription":"Closed or merged PR \"Revert \"docs: archive changelog before v17\"\" (#30168)"},{"Id":"2733616215","IsPullRequest":false,"CreatedAt":"2024-12-11T17:52:19","Actor":"zygarios","Number":"30167","RawContent":null,"Title":"feat(theme-generator): Add possibility to force custom color @angular/material:theme-color","State":"open","Body":"### Feature Description\n\nMy problem is that I still can't understand how `@angular/material:theme-color` works. In the terminal, I need to provide colors for primary, secondary, and tertiary. For each one, I specify a single color, like #ff9500, because that's what I want.\n\n`What HEX color should be used to generate the M3 theme? It will represent your primary color palette. (ex. #ffffff) **#005dba**\nWhat HEX color should be used represent the secondary color palette? (Leave blank to use generated colors from Material) **#005dba**\nWhat HEX color should be used represent the tertiary color palette? (Leave blank to use generated colors from Material) **#005dba**`\n\n However, when generating the theme, I see that it creates color palettes, but when I try to get just my color, I use **`--mat-sys-primary`.** Unfortunately, it appears significantly darker (#8c5000), and I don't know which variable the color is actually hidden under. I have the impression that due to the low contrast, it is being artificially darkened. However, I selected the option not to generate mixins with high contrast. I would like to be able to use exactly that color without worrying about contrast. Currently, I am forced to manually change all the system token colors because the generated palette still interferes too much with what I want to achieve, taking away the flexibility I need in this case.\n\n\n\n### Use Case\n\nIt would be great to be able to specify in the terminal that I want exactly the colors I mention, without any interference.","Url":"https://github.com/angular/components/issues/30167","RelatedDescription":"Open issue \"feat(theme-generator): Add possibility to force custom color @angular/material:theme-color\" (#30167)"},{"Id":"2733260497","IsPullRequest":false,"CreatedAt":"2024-12-11T16:16:19","Actor":"theSumit67","Number":"30166","RawContent":null,"Title":"bug(AngularAnimations): Detached dom nodes with material component on navigation","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have a very basic app in Angular + Material version 14. \n\nOn one page I have mat-tabs and a button which navigates to a blank component destroying the previous component. After navigation all of the DOM nodes are going to detached state. I need to fix this in huge angular app which is on version 14. Please let me know if there is any solution exist\n\n![Image](https://github.com/user-attachments/assets/9f037f01-d6d0-4a6d-9614-c7d813cf6811)\n\n\n![Image](https://github.com/user-attachments/assets/d9d21ca0-4363-489c-8d90-289ca69c4c3f)\n\n\n\nAttaching sample project.[m14.zip](https://github.com/user-attachments/files/18098062/m14.zip)\n\n\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. ng serve\n2. click on the button to navigate to other page\n\n\n### Expected Behavior\n\nDetached DOM nodes should not be there\n\n### Actual Behavior\n\nAll of the nodes are going in detached state\n\n### Environment\n\n- Angular:14.3.0\n- CDK/Material:  14.2.7\n- Browser(s): Chrome\n- Operating System Windows, macOS, Ubuntu\n","Url":"https://github.com/angular/components/issues/30166","RelatedDescription":"Closed issue \"bug(AngularAnimations): Detached dom nodes with material component on navigation\" (#30166)"},{"Id":"2732597456","IsPullRequest":false,"CreatedAt":"2024-12-11T11:04:35","Actor":"de-don","Number":"30165","RawContent":null,"Title":"feat(mat-menu): add custom offetX and offsetY configuration","State":"open","Body":"### Feature Description\n\nIn some cases mat-menu opens realy close to corner of the viewport (like on the screenshot), so I think it would be nice to have and ability to add some minumun \"gap\". \n![Image](https://github.com/user-attachments/assets/6a3995f6-b1c7-4579-8822-c77ab0ca42f4)\n\nIn overlay builder it could be archived via `withPositions()` configuration.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30165","RelatedDescription":"Open issue \"feat(mat-menu): add custom offetX and offsetY configuration\" (#30165)"},{"Id":"2732566340","IsPullRequest":true,"CreatedAt":"2024-12-11T10:51:43","Actor":"crisbeto","Number":"30164","RawContent":null,"Title":"fix(material/tooltip): body line height affecting gap","State":"open","Body":"Fixes that the line height of the `body` element was affecting the gap between the tooltip and the trigger.\r\n\r\nFixes #30132.","Url":"https://github.com/angular/components/pull/30164","RelatedDescription":"Open PR \"fix(material/tooltip): body line height affecting gap\" (#30164)"},{"Id":"2723181191","IsPullRequest":false,"CreatedAt":"2024-12-11T10:38:32","Actor":"russelporosky","Number":"30143","RawContent":null,"Title":"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is simply a quality of life improvement request.\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\nI've overridden `on-surface` and `surface` in [the recommended manner](https://material.angular.io/guide/theming#system-tokens), but the IDE (IntelliJ in this screenshot) won't pick those modifications up.\n\nThe rendered page in the browser shows the correct colour, this is strictly an issue within the IDE.\n\nThe concern is that deeper into the project, when a developer is using Material CSS variables, the colour hints will not match what they are expecting (and needing) which will cause confusion and potentially result in additional variables being created by the developer that aren't actually needed, just so the IDE hints match their expectations.\n\n### Reproduction\n\nSteps to reproduce:\n1. add Material to an Angular project\n2. override a theme variable such as `surface`\n3. use the matching CSS property in a rule (`--mat-sys-on-surface` in this example)\n4. observe that the IDE colour hint does not match the overridden value\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\n\n### Expected Behavior\n\nThe colour hints in the sidebar should show the overridden colour(s) instead of the defaults.\n\n### Actual Behavior\n\nWhat I see in the sidebar are the defaults for the current theme.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n- IDE: IntelliJ IDEA 2024.3 (Ultimate Edition)","Url":"https://github.com/angular/components/issues/30143","RelatedDescription":"Closed issue \"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints\" (#30143)"},{"Id":"2732501847","IsPullRequest":true,"CreatedAt":"2024-12-11T10:25:43","Actor":"crisbeto","Number":"30163","RawContent":null,"Title":"fix(material/menu): remove dependency on animations module","State":"open","Body":"Second attempt at reworking the menu so it no longer depends on the animations module (after #30099). This should allow us to avoid some of the pitfalls of the animations module like occasional memory leaks (e.g. #47748) and reduce the bundle size.","Url":"https://github.com/angular/components/pull/30163","RelatedDescription":"Open PR \"fix(material/menu): remove dependency on animations module\" (#30163)"},{"Id":"2731635209","IsPullRequest":false,"CreatedAt":"2024-12-11T06:07:44","Actor":"kanehjeong","Number":"30162","RawContent":null,"Title":"bug(mat-timepicker): Disabling TimePicker does not prevent dropdown from opening","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen disabling a mat timepicker input field as well as the timepicker toggle, clicking the toggle or time value on the field still triggers the select dropdown for the times.\n\n### Reproduction\n\n[Stackblitz Link](https://stackblitz.com/edit/4nj2hwbz?file=src%2Fexample%2Ftimepicker-forms-example.ts)\n\nMade the following changes off [this material example link](https://material.angular.io/components/timepicker/examples#timepicker-forms)\n```\n// timepicker-forms-example.ts\nnew FormControl({ value: initialValue, disabled: true }); // Added disabled here\n\n// timepicker-forms-example.html\n<mat-timepicker-toggle matIconSuffix [for]=\"picker\" [disabled]=\"true\"/> <!-- Added disabled here -->\n```\n\nSteps to reproduce:\n1. Click the time value of the disabled input or the toggle icon\n2. Notice the select menu pop up with the time selections despite input being disabled\n\n\n### Expected Behavior\n\nShould not open timepicker menu when input and toggle are both disabled\n\n### Actual Behavior\n\nTimepicker select menu opens\n\n### Environment\n\n- Angular: 19.0.2\n- CDK/Material: 19.0.2\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30162","RelatedDescription":"Closed issue \"bug(mat-timepicker): Disabling TimePicker does not prevent dropdown from opening\" (#30162)"},{"Id":"2726475553","IsPullRequest":true,"CreatedAt":"2024-12-10T21:08:47","Actor":"crisbeto","Number":"30148","RawContent":null,"Title":"fix(material/menu): decouple menu lifecycle from animations","State":"closed","Body":"Reworks the menu so that its removal isn't bound by animations. The current approach is somewhat brittle and makes it difficult to eventually switch to a fully CSS-based animation.","Url":"https://github.com/angular/components/pull/30148","RelatedDescription":"Closed or merged PR \"fix(material/menu): decouple menu lifecycle from animations\" (#30148)"},{"Id":"2726531398","IsPullRequest":true,"CreatedAt":"2024-12-10T20:33:41","Actor":"crisbeto","Number":"30149","RawContent":null,"Title":"fix(material/timepicker): deserialize ControlValueAccessor values correctly","State":"closed","Body":"Fixes that the timepicker was clobbering otherwise parseable values when they're assigned through the `ControlValueAccessor`.\r\n\r\nFixes #30140.","Url":"https://github.com/angular/components/pull/30149","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): deserialize ControlValueAccessor values correctly\" (#30149)"},{"Id":"2730998732","IsPullRequest":false,"CreatedAt":"2024-12-10T19:24:16","Actor":"scottg521","Number":"30160","RawContent":null,"Title":"bug(MatInputTestHarness): setValue does not trigger \"change\" event","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccording to the documentation, the MatInput component emits a \"change\" event when the value changes. However, the test harness does not emit this event after \"setValue()\". See the stackblitz.\n\nI have tried using focus() to focus the component before setting the value, then blur() to remove focus, which is what triggers \"change\" in the application, and there is still no \"change\" event.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/phfedq5f?file=src%2Fexample%2Finput-harness-example.html\nSteps to reproduce:\n1. modified example test from https://material.angular.io/components/input/examples should run automatically\n2. two tests fail because the event spy is not called\n\n\n### Expected Behavior\n\nYou should be able to trigger the expected event with the test harness.\n\n### Actual Behavior\n\nExpected code associated with (change) to run.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, macOs\n","Url":"https://github.com/angular/components/issues/30160","RelatedDescription":"Open issue \"bug(MatInputTestHarness): setValue does not trigger \"change\" event\" (#30160)"},{"Id":"2729466703","IsPullRequest":true,"CreatedAt":"2024-12-10T16:59:07","Actor":"crisbeto","Number":"30156","RawContent":null,"Title":"build: remove iOS test runs","State":"closed","Body":"Removes the tests that run against iOS. There are a couple of reasons to do so:\r\n* The tests haven't caught any issues in years.\r\n* The tests tend to be flaky.\r\n* They're running aginst iOS 15 which Angular no longer supports. We can't update to anything newer, because we would have to update our Saucelabs setup which will require dev infra time investment.","Url":"https://github.com/angular/components/pull/30156","RelatedDescription":"Closed or merged PR \"build: remove iOS test runs\" (#30156)"},{"Id":"2729762416","IsPullRequest":false,"CreatedAt":"2024-12-10T10:51:54","Actor":"pedroestabruxelles","Number":"30159","RawContent":null,"Title":"docs-bug(cdk-tree): stackblitz examples are broken","State":"open","Body":"### Documentation Feedback\n\nAll examples that are importing:\nimport {NestedFoodNode, NESTED_DATA} from '../tree-data';\nare missing that tree-data.ts file\n\n### Affected documentation page\n\nhttps://material.angular.io/cdk/tree/overview","Url":"https://github.com/angular/components/issues/30159","RelatedDescription":"Open issue \"docs-bug(cdk-tree): stackblitz examples are broken\" (#30159)"},{"Id":"2729709634","IsPullRequest":false,"CreatedAt":"2024-12-10T10:33:28","Actor":"Muqhees","Number":"30158","RawContent":null,"Title":"bug(MATCHIP): Chip text doesn't truncate or wrap if the text length takes more width than the form field","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n Chip text doesn't truncate or wrap if the text length takes more width than the form field . Remove icon button is also not visible\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/hnhs71mw?file=src%2Fexample%2Fchips-autocomplete-example.html\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nText inside the chip should either truncate or wrap and the remove icon button should be visible\n\n### Actual Behavior\n\nText overflows the chip and the form field and the remove icon button is not visible\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30158","RelatedDescription":"Open issue \"bug(MATCHIP): Chip text doesn't truncate or wrap if the text length takes more width than the form field\" (#30158)"},{"Id":"2727505922","IsPullRequest":false,"CreatedAt":"2024-12-10T09:30:13","Actor":"naithagoni","Number":"30154","RawContent":null,"Title":"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Steps to Reproduce:**\n\n1. Open the application and navigate to the stepper component.\n2. Select a user in Step 1.\n3. Proceed to Step 2, where the `getProducts` method sets the value of the `productCtrl` control programmatically using `patchValue`.\n4. Open the autocomplete dropdown for the product selection.\n\n**Code Snippet:**\n\n```typescript\n<mat-stepper\n  linear\n  #stepper\n  (selectedIndexChange)=\"selectedStepperIndex.set($event)\"\n>\n  <mat-step [stepControl]=\"userFormGroup\">\n    <form class=\"example-form\" [formGroup]=\"userFormGroup\">\n      <ng-template matStepLabel>Step 1</ng-template>\n      @defer (when selectedStepperIndex() === 0; prefetch on idle) {\n      <user [form]=\"userFormGroup\"></user>\n      }\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"productFormGroup\">\n    <form [formGroup]=\"productFormGroup\">\n      <ng-template matStepLabel>Step 2</ng-template>\n      @defer (when selectedStepperIndex() === 1; prefetch on idle) {\n      <product\n        [form]=\"productFormGroup\"\n        [selectedUserId]=\"userFormGroup.controls.userCtrl.value?.id ?? ''\"\n      ></product>\n      }\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-stepper>\n\n\nimport { Component, inject, signal } from '@angular/core';\nimport {\n  FormBuilder,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserComponent } from 'src/user/user.component';\nimport { ProductComponent } from 'src/product/product.component';\n\nexport interface User {\n  id: string;\n  name: string;\n}\n\nexport interface Product {\n  id: string;\n  desc: string;\n}\n\nexport interface UserForm {\n  userCtrl: FormControl<User | null>;\n}\n\nexport interface ProductForm {\n  productCtrl: FormControl<Product | null>;\n}\n\n@Component({\n  selector: 'stepper-editable-example',\n  templateUrl: 'stepper-editable-example.html',\n  styleUrl: 'stepper-editable-example.css',\n  imports: [\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    UserComponent,\n    ProductComponent,\n  ],\n})\nexport class StepperEditableExample {\n  private _formBuilder = inject(FormBuilder);\n  selectedStepperIndex = signal(0);\n\n  userFormGroup: FormGroup<UserForm> = this._formBuilder.group({\n    userCtrl: [null as User | null, Validators.required],\n  });\n\n  productFormGroup: FormGroup<ProductForm> = this._formBuilder.group({\n    productCtrl: [null as Product | null, Validators.required],\n  });\n}\n\n\n<mat-form-field class=\"example-full-width\">\n<mat-label>User</mat-label>\n<input\n  type=\"text\"\n  placeholder=\"Pick one\"\n  matInput\n  [formControl]=\"form.controls.userCtrl\"\n  [matAutocomplete]=\"auto\"\n/>\n<mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n  @for (user of users; track user) {\n  <mat-option [value]=\"user\">{{ user.name }}</mat-option>\n  }\n</mat-autocomplete>\n</mat-form-field>\n\n\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { User, UserForm } from 'src/example/stepper-editable-example';\n\n@Component({\n  selector: 'user',\n  templateUrl: 'user.component.html',\n  styleUrl: 'user.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class UserComponent {\n  @Input() form: FormGroup<UserForm>;\n  users: User[] = [\n    {\n      id: '1',\n      name: 'John',\n    },\n    {\n      id: '2',\n      name: 'David',\n    },\n    {\n      id: '3',\n      name: 'Smith',\n    },\n  ];\n\n  displayFn(user: User): string {\n    return user ? user.name : '';\n  }\n}\n\n\n<div style=\"display: flex; flex-direction: column;\">\n<mat-form-field class=\"example-full-width\">\n  <mat-label>Product</mat-label>\n  <input\n    type=\"text\"\n    placeholder=\"Pick one\"\n    matInput\n    [formControl]=\"form.controls.productCtrl\"\n    [matAutocomplete]=\"autoProduct\"\n  />\n  <mat-autocomplete\n    #autoProduct=\"matAutocomplete\"\n    [displayWith]=\"displayProductFn\"\n  >\n    @for (product of products; track product) {\n    <mat-option [value]=\"product\">{{ product.desc }}</mat-option>\n    }\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n\n\nimport {\n  Component,\n  Injectable,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  Product,\n  ProductForm,\n  User,\n} from 'src/example/stepper-editable-example';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'product',\n  templateUrl: 'product.component.html',\n  styleUrl: 'product.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ProductComponent implements OnInit {\n  @Input() form: FormGroup<ProductForm>;\n  private _selectedUserId: string = '';\n  private isFirstChange = true;\n  @Input()\n  get selectedUserId(): string {\n    return this._selectedUserId;\n  }\n  set selectedUserId(value: string) {\n    if (this._selectedUserId !== value) {\n      this._selectedUserId = value;\n      if (!this.isFirstChange) {\n        console.log('SETTER INSIDE IF...');\n        this.onSelectedUserIdChange();\n      }\n      this.isFirstChange = false;\n    }\n  }\n  products: Product[] = [];\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit() {\n    if (this.selectedUserId) {\n      this.getProducts();\n    }\n  }\n\n  displayProductFn(product: Product): string {\n    return product ? product.desc : '';\n  }\n\n  getProducts() {\n    this.productService\n      .getProductsService(this.selectedUserId ? this.selectedUserId : '')\n      .subscribe((products) => {\n        this.products = products;\n        this.form.patchValue({\n          productCtrl: products[1],\n        });\n      });\n  }\n\n  private onSelectedUserIdChange(): void {\n    this.form.controls.productCtrl.setValue(null);\n    this.getProducts();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n  private sub = new BehaviorSubject<Product[]>([]);\n\n  private productMap: { [key: string]: Product[] } = {\n    '1': [\n      {\n        id: '1',\n        desc: 'One',\n      },\n      {\n        id: '2',\n        desc: 'Two',\n      },\n      {\n        id: '3',\n        desc: 'Three',\n      },\n    ],\n    '2': [\n      {\n        id: '1',\n        desc: 'Four',\n      },\n      {\n        id: '2',\n        desc: 'Five',\n      },\n      {\n        id: '3',\n        desc: 'Six',\n      },\n    ],\n    '3': [\n      {\n        id: '1',\n        desc: 'Seven',\n      },\n      {\n        id: '2',\n        desc: 'Eight',\n      },\n      {\n        id: '3',\n        desc: 'Nine',\n      },\n    ],\n  };\n\n  public observable$: Observable<Product[]> = this.sub.asObservable();\n  constructor(private httpClient: HttpClient) {}\n\n  getProductsService(userId: string): Observable<Product[]> {\n    const products = this.productMap[userId] || [];\n    return of(products);\n    // return this.httpClient.get<Product[]>(http://api/${userId});\n  }\n}\n```\n\n### Reproduction\n\nStackBlitz link: [mat-autocomplete with mat-stepper](https://stackblitz.com/edit/zzialkdj-d8rtr2sa)\n\n\n### Expected Behavior\n\nThe `<mat-option>` corresponding to the value set by `patchValue` should visually appear as selected in the autocomplete dropdown when the component is loaded.\n\n![Image](https://github.com/user-attachments/assets/09386ba4-6867-4467-b430-3ad7ae15da26)\n\n\n### Actual Behavior\n\nWhen setting the value of the product form control via `patchValue` inside the `getProducts` method, the form control updates its value correctly. However, the corresponding `<mat-option>` in the autocomplete dropdown does not visually show as selected on the initial load of the component.\n\n![Image](https://github.com/user-attachments/assets/2a862094-5b17-4b30-a53a-b7b197180e7d)\n\n\n### Environment\n\n- Angular: `18.2.9`\n- CDK/Material: `18.2.10`\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30154","RelatedDescription":"Closed issue \"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete\" (#30154)"},{"Id":"2727447736","IsPullRequest":false,"CreatedAt":"2024-12-10T09:21:46","Actor":"XavierDupessey","Number":"30153","RawContent":null,"Title":"bug(matAutocomplete): Autocomplete not opening with shadow DOM","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\n\nThe `MatAutocomplete` does not open when starting writing text if the Shadow DOM encapsulation is used.\nWe have to click to trigger the opening.\n\nWithout Shadow DOM encapsulation (working):\nhttps://github.com/user-attachments/assets/911e3de9-83c3-412e-a87e-6f994298fead\n\nWith Shadow DOM encapsulation (NOT working):\nhttps://github.com/user-attachments/assets/c0ced996-2bf9-40d5-84ba-d2d5e490e10a\n\nThank you,\nXavier\n\n### Reproduction\n\nCheckout: https://github.com/XavierDupessey/ng-14-mat-autocomplete-issue\nRun: `npm start`\nOpen `http://localhost:4200`\n\n### Expected Behavior\n\nThe autocomplete should open when entering text even when Shadow DOM encapsulation is enabled.\n\n### Actual Behavior\n\nSelect a value from the autocomplete, then input text to search another one: the autocomplete does not open.\n\n### Environment\n\n- Angular: 14\n- CDK/Material: 14\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows","Url":"https://github.com/angular/components/issues/30153","RelatedDescription":"Closed issue \"bug(matAutocomplete): Autocomplete not opening with shadow DOM\" (#30153)"},{"Id":"2727327112","IsPullRequest":false,"CreatedAt":"2024-12-10T09:12:17","Actor":"michaelstokes93","Number":"30152","RawContent":null,"Title":"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `mat-chip-grid` component in Angular Material includes an `aria-disabled` and `aria-invalid` attribute by default, even when not explicitly set in the application. This attributes are not valid on `mat-chip-grid` elements and results in accessibility violations flagged by tools like Siteimprove.\n\n### Reproduction\n\n1. Use a `mat-chip-grid` in an Angular component.\n2. Render the component and inspect the DOM.\n3. Observe that `aria-disabled=\"false\"` and `aria-false=\"false\"`is automatically added to the `mat-chip-grid`.\n\n\n### Expected Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes should only be applied to elements or roles that support it, such as interactive components.\n\n\n### Actual Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes is added to the `mat-chip-grid` component, which results in accessibility violations.\n\n\n### Environment\n\n- Angular: 16.2.0\n- CDK/Material: 16.2.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30152","RelatedDescription":"Closed issue \"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited\" (#30152)"},{"Id":"2728143888","IsPullRequest":true,"CreatedAt":"2024-12-09T20:01:51","Actor":"andrewseguin","Number":"30155","RawContent":null,"Title":"fix(material/form-field): move error aria-live to parent container","State":"open","Body":"This is a slight change in behavior where the aria-live is always set to polite even if the user puts a different `aria-live` value on the error. Based on internal usage, this is very rare (and not part of the documented API)\r\n\r\nFixes #29616 ","Url":"https://github.com/angular/components/pull/30155","RelatedDescription":"Open PR \"fix(material/form-field): move error aria-live to parent container\" (#30155)"},{"Id":"2726744120","IsPullRequest":false,"CreatedAt":"2024-12-09T18:53:11","Actor":"janek64","Number":"30150","RawContent":null,"Title":"bug(Timepicker): Integration with Datepicker does not work with FormControl","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a `Timepicker` and `Datepicker` are bound to the same `FormControl` with a `Date` type, selecting a new value on either input will cause the data of the other input to be reset/removed. For example, when a date is already selected and then the time is selected, the date portion of the value will be reset to the current date.\n\nThe [documentation](https://material.angular.io/components/timepicker/overview#integration-with-matdatepicker) only demonstrates the integration via `ngModel`. Consequently, it is unclear to me whether it should also work with `FormControl`. Based on the description, I would have expected it. If it is explicitly not supported, I suggest that a corresponding hint should be added since using Reactive Forms is one of the most common ways for managing the values of inputs.\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts](https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts)\nSteps to reproduce:\n1. Select a date that is not the current date (e.g tomorrow). The displayed value will correctly display the selected date.\n2. Select any time. The displayed value will display the _current date_ and the selected time instead of the _selected date_.\n3. Select a date that is not the current date. The displayed date will display _0:00_ as the time instead of _selected time_.\n\n\n### Expected Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl`, but keep the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl`, but keep the selected date.\n\n### Actual Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl` and discard the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl` and discard the selected date.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.3\n- Browser(s): Firefox 133, Chrome 131\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30150","RelatedDescription":"Closed issue \"bug(Timepicker): Integration with Datepicker does not work with FormControl\" (#30150)"},{"Id":"2725053755","IsPullRequest":true,"CreatedAt":"2024-12-09T16:59:12","Actor":"crisbeto","Number":"30147","RawContent":null,"Title":"docs: archive changelog before v17","State":"closed","Body":"The changelog file was getting too big which made it hard to open online and soon Github was going to prevent it from opening at all. These changes move the changelog entries before v17 to the archive.","Url":"https://github.com/angular/components/pull/30147","RelatedDescription":"Closed or merged PR \"docs: archive changelog before v17\" (#30147)"},{"Id":"2726807683","IsPullRequest":false,"CreatedAt":"2024-12-09T14:12:39","Actor":"kai1992cool","Number":"30151","RawContent":null,"Title":"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the below code block.\n\n```\n<form class=\"example-form\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input\n      type=\"email\"\n      matInput\n      [formControl]=\"emailFormControl\"\n      [errorStateMatcher]=\"matcher\"\n      placeholder=\"Ex. pat@example.com\"\n    />\n    @if(emailFormControl?.invalid && emailFormControl?.touched){ \n      @for(error of getErrorMessages(''); track i; let i = $index){\n        <mat-error> {{ error }} </mat-error>\n      } \n    }\n  </mat-form-field>\n</form>\n```\n\nThe errors get displayed inside the input field, which is wrong.\n\nI know this is due to content projection of `mat-error` but am not sure if its a bug or an expected result.\n\nCould you please advice.\n\n### Reproduction\n\nStackBlitz link: [stackblitz](https://stackblitz.com/edit/mpcfhkum?file=src%2Fexample%2Finput-error-state-matcher-example.html,src%2Fexample%2Finput-error-state-matcher-example.ts)\nSteps to reproduce:\n1. touch the input\n2. tab out or click elsewhere, the errors are shown inside the input\n\n\n### Expected Behavior\n\nthe error should display outside\n\n### Actual Behavior\n\nthe error are displayed inside\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material: ^19.0.0\n- Browser(s): Version 131.0.6778.109 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30151","RelatedDescription":"Closed issue \"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.\" (#30151)"},{"Id":"2724827013","IsPullRequest":false,"CreatedAt":"2024-12-07T21:48:42","Actor":"tommyc38","Number":"30146","RawContent":null,"Title":"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning","State":"open","Body":"### Feature Description\n\nCurrently, the only way to apply css to an overlay and target styles to a specific overlay position relative to a target element (e.g. above, below, etc.), you have to provide positions to the strategy you are using (such is this case in your autocomplete trigger where you need to swap the corner radius of the panel depending on if the position is above or below the target element).  If you want to use the defaults of your connected position strategy, without providing positions to a position's strategy, it would be helpful to leverage css classnames that were automatically applied depending on whatever the position the cdk chose to apply.  \n\n### Use Case\n\nA use case is exactly what you are doing in your autocomplete trigger.  Rather than using an explicit css class we could leverage selectors supplied by the cdk overlay.  For example, if the overlay was positioned above an element, the cdk would automatically apply '.cdk-overlay-positioned-above') to the parent element so we could leverage it to directly apply styles to the content in our overlay appropriately without needing to do so explicitly in our code.  A common use case other than corner radius would be css animations where we would need to know the position to appropriately target our animations (slide down or slide up, for example).  This would simplify our code and make applying styles under different positions much easier.","Url":"https://github.com/angular/components/issues/30146","RelatedDescription":"Open issue \"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning\" (#30146)"},{"Id":"2724669305","IsPullRequest":false,"CreatedAt":"2024-12-07T15:15:41","Actor":"michaelbe812","Number":"30145","RawContent":null,"Title":"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nif it is a user-issue/skill-issue on my side, excuse me to waste your time 😅\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-6rd4gzr4?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fmain.ts&file=src%2Fglobal_styles.css&template=node&title=Angular%20Starter\nSteps to reproduce:\nClick the button in the first container to open a cdkMenu.\nUpdate the position with the controls above. you will notive that the projected overlay is not positioned differently. \n\nIf you change the values for the initial position you will notice that the menu is positioned differently initially. \n\nHint: the second container below uses cdkOverlayOrigin and cdkConnectedOverlay for comparision.\n\nHere's also a short video\n\nhttps://github.com/user-attachments/assets/1bfeee47-9192-45b4-a247-e9d7fd7c6524\n\n\n### Expected Behavior\n\nThe cdkMenu-Position should react to new values via cdkMenuPosition-input\n\n### Actual Behavior\n\nSee repro\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n\n","Url":"https://github.com/angular/components/issues/30145","RelatedDescription":"Open issue \"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly\" (#30145)"},{"Id":"2724367612","IsPullRequest":false,"CreatedAt":"2024-12-07T05:17:02","Actor":"bitrxjs","Number":"30144","RawContent":null,"Title":"feat(MatRipple):  Do not trigger it when scrolling(touchstart)","State":"open","Body":"### Feature Description\n\nWhenever MatNavList is scrolled it triggers ripple effect on touchstart, instead it should emulate native android behaviour of only trigger when tap/click happens on mobile devices.\n\nit looks very janky on ios & other mobile devices when user start scrolling fast.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30144","RelatedDescription":"Open issue \"feat(MatRipple):  Do not trigger it when scrolling(touchstart)\" (#30144)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-12T03:30:02.9888166Z","RunDurationInMilliseconds":2091}