{"Data":{"Angular-Issues":{"Issues":[{"Id":"2728819229","IsPullRequest":true,"CreatedAt":"2024-12-10T02:54:56","Actor":"alxhub","Number":"59124","RawContent":null,"Title":"perf(core): optimize multiple sequential reads of the same signal","State":"open","Body":"This commit adds an optimization to the signals graph to avoid adding multiple producer records to a consumer when the same signal is read several times in a row. This can happen when state is stored in a larger signal which is repeatedly read to access different individual properties.","Url":"https://github.com/angular/angular/pull/59124","RelatedDescription":"Open PR \"perf(core): optimize multiple sequential reads of the same signal\" (#59124)"},{"Id":"2728774776","IsPullRequest":true,"CreatedAt":"2024-12-10T02:26:11","Actor":"JeanMeche","Number":"59123","RawContent":null,"Title":"refactor(core): remove duplicate check.","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59123","RelatedDescription":"Open PR \"refactor(core): remove duplicate check.\" (#59123)"},{"Id":"2728626901","IsPullRequest":true,"CreatedAt":"2024-12-10T00:35:13","Actor":"JeanMeche","Number":"59122","RawContent":null,"Title":"refactor(core): extract `dirty` and `markForRefresh` from the private ViewRef.","State":"open","Body":"This allows better tree shaking when not using the `element` package.\r\n\r\n","Url":"https://github.com/angular/angular/pull/59122","RelatedDescription":"Open PR \"refactor(core): extract `dirty` and `markForRefresh` from the private ViewRef.\" (#59122)"},{"Id":"2728148861","IsPullRequest":true,"CreatedAt":"2024-12-09T23:09:52","Actor":"JeanMeche","Number":"59117","RawContent":null,"Title":"refactor(core): remove dependency on rxjs' `BehaviorSubject`.","State":"closed","Body":"The allows us to pull less symbols from RxJS in a bare minimum project.\r\n","Url":"https://github.com/angular/angular/pull/59117","RelatedDescription":"Closed or merged PR \"refactor(core): remove dependency on rxjs' `BehaviorSubject`.\" (#59117)"},{"Id":"2728314120","IsPullRequest":false,"CreatedAt":"2024-12-09T21:30:22","Actor":"wwjhu","Number":"59121","RawContent":null,"Title":"Conflicting advice regarding host property versus HostBinding and HostListener","State":"closed","Body":"### Describe the problem that you experienced\n\nIn https://angular.dev/guide/components/host-elements this advice is given:\n\n> Always prefer using the host property over @HostBinding and @HostListener. These decorators exist exclusively for backwards compatibility.\n\nIn https://angular.dev/style-guide#style-06-03 this advice is given:\n\n> Consider preferring the @HostListener and @HostBinding to the host property of the @Directive and @Component decorators.\n\nIt's either the one or the other.\n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59121","RelatedDescription":"Closed issue \"Conflicting advice regarding host property versus HostBinding and HostListener\" (#59121)"},{"Id":"2728219910","IsPullRequest":false,"CreatedAt":"2024-12-09T20:42:34","Actor":"robertIsaac","Number":"59120","RawContent":null,"Title":"signal-input-migration mark some optional inputs as required","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nthe migration migrated\n\n```\n@Input({ transform: booleanAttribute }) showAddTag!: boolean;\n```\n\nto\n\n```\nreadonly showAddTag = input.required<boolean, unknown>({\n    transform: booleanAttribute,\n  });\n```\n\nwhich broke the project\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 22.11.0\nPackage Manager: pnpm 9.9.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/material               19.0.2\n@angular/pwa                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nit happens to all input that has transform - while most of them are okay to be marked required - the boolean one in particular is problematic since I want the value to be false if it's missing","Url":"https://github.com/angular/angular/issues/59120","RelatedDescription":"Open issue \"signal-input-migration mark some optional inputs as required\" (#59120)"},{"Id":"2728208350","IsPullRequest":true,"CreatedAt":"2024-12-09T20:36:56","Actor":"shayan-ghzl","Number":"59119","RawContent":null,"Title":"docs(fix): correct typo in description of runTask method","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows the guidelines outlined here: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no API changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n<!-- Briefly describe the new behavior. If this is a fix, mention the issue addressed. -->\r\n\r\n- Fixed a typo in the description of the `runTask` method.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59119","RelatedDescription":"Open PR \"docs(fix): correct typo in description of runTask method\" (#59119)"},{"Id":"2728195606","IsPullRequest":true,"CreatedAt":"2024-12-09T20:29:38","Actor":"danielsogl","Number":"59118","RawContent":null,"Title":"docs(routing): update example to use inject function and self closing…","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe routing example uses constructer based dependency injection and also non closing tags\r\n\r\n## What is the new behavior?\r\nThe example uses injection function based dependency injection and self closing tags\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59118","RelatedDescription":"Open PR \"docs(routing): update example to use inject function and self closing…\" (#59118)"},{"Id":"2727923499","IsPullRequest":false,"CreatedAt":"2024-12-09T18:27:54","Actor":"crisbeto","Number":"59116","RawContent":null,"Title":"Remove support for non-null assertions from two-way bindings","State":"open","Body":"In v20 we should drop support for expressions like `[(ngModel)]=\"someExpr!\"`, because type checking is non-obvious. We can revive the migration from #54630 to migrate existing users.","Url":"https://github.com/angular/angular/issues/59116","RelatedDescription":"Open issue \"Remove support for non-null assertions from two-way bindings\" (#59116)"},{"Id":"2724793842","IsPullRequest":true,"CreatedAt":"2024-12-09T17:37:02","Actor":"sanskaarz","Number":"59102","RawContent":null,"Title":"docs: correct grammar and improve clarity","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Docs have been added/updated (for bug fixes/features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application/infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What does this PR do?\r\nCorrections to grammar and clarity in:\r\n* [`CODE_OF_CONDUCT.md`](diffhunk://#diff-ffdbe3a1e7ee93cacfc080b6c635ccf3a8f6b0f00f2fb884f78c6b5f9dac8fd2L35-R39): Corrected the grammar in sentences to ensure proper subject-verb agreement.\r\n* [`adev/src/content/introduction/what-is-angular.md`](diffhunk://#diff-fe8bfe234a71ffe3c8f92a8deaa1609864b19f6f1df2a3c851edd9370eaacb46L5-R5): Improved the clarity of a sentence\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59102","RelatedDescription":"Closed or merged PR \"docs: correct grammar and improve clarity\" (#59102)"},{"Id":"2727230421","IsPullRequest":true,"CreatedAt":"2024-12-09T14:31:30","Actor":"hawkgs","Number":"59115","RawContent":null,"Title":"docs(docs-infra): fix SCSS and unused components build warnings","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThere are plenty of SCSS warnings during build time.\r\n\r\n## What is the new behavior?\r\n\r\nFix SCSS \"declarations after nested rules\" and \\@ import warnings; remove an unused component import.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59115","RelatedDescription":"Open PR \"docs(docs-infra): fix SCSS and unused components build warnings\" (#59115)"},{"Id":"2726964990","IsPullRequest":false,"CreatedAt":"2024-12-09T12:50:38","Actor":"samuelfernandez","Number":"59114","RawContent":null,"Title":"Enhancements to forms for future signal forms","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nforms\n\n### Description\n\nTemplate and reactive forms in Angular are great, yet using them through the years has revealed a few areas of improvement. This issue aims to provide feedback on some problems, hoping they can be addressed in the future re-vamped signal forms. I'd be happy to elaborate and provide further examples of any of the points below.\n\n## Problem 1: Control Value Accessor is not strongly typed\n\nCVA provide a nice separation of concerns and layer of abstraction between the form control and the DOM.\n\nNevertheless, form controls, either the reactive or template flavors, access the CVA through DI. This means that the binding is not strictly typed. A CVA can be designed to handle numbers, yet be used in a model that has the string value.\n\nAdditionally, the CVA interface builds on top of `any`, which offers a bad DX.\n\n**Example:**\n```ts\nclass NumberValueAccessor implements ControlValueAccessor {\n  writeValue(value: number): void { /* ... */ }\n  registerOnChange(fn: (value: number) => void): void { /* ... */ }\n  // ...\n}\n\n// Usage in a form control that expects a string\nthis.form = new FormGroup({\n  age: new FormControl('25') // This should be a number\n});\n```\n\n## Problem 2: Control Value Accessor can cause issues with the timing of its binding\n\nThe timing when `writeValue` and `registerOnChange` are called is somehow part of its public API, following Hyrum's Law. It can cause some issues, for example, if the CVA supports multiple types and does a parsing on `writeValue`. The first time it get's called, `registerOnChange` hasn't been called yet, so the parsed value can't be immediately propagated.\n\nAdditionally, this API feels verbose and not declarative when compared with more recent framework features.\n\n**Example:**\n```ts\nclass MultiTypeValueAccessor implements ControlValueAccessor {\n  writeValue(value: string | number): void {\n    const parsedValue = typeof value === 'string' ? parseInt(value, 10) : value;\n    // registerOnChange hasn't been called yet, so parsedValue can't be propagated\n  }\n  registerOnChange(fn: (value: number) => void): void { /* ... */ }\n  // ...\n}\n```\n\n## Problem 3: Strict typing of form controls and groups\n\nWhen typed forms were introduced, they had to be retro-compatible with existing implementations, which we appreciated. Nevertheless, it is painful to work with the `undefined` type of controls just because they can be disabled. I'd argue that this decision has caused typing issues in many cases, since the form value when is valid still has `undefined` all around. True, the raw value can be used, but feels unnecessary.\n\nAdditionally, there is a common case where a field uses the required validator, but it's underlying type also supports `null`. If the form is valid, the control would have a non-null value, yet the type still includes `null`.\n\n**Example:**\n```ts\nconst form = new FormGroup({\n  name: new FormControl<string | null>(null, Validators.required)\n});\n\n// When the form is valid, name should not be null, but the type still includes null\nconst name: string | null = form.get('name')?.value;\n```\n\nFinally, there are some controls that do parsing, such as supporting both `Date | string` as inputs, but always exposing a `Date`. Again, it can't be expressed with current typing, there is no transformation function or type narrowing.\n\n**Example:**\n```ts\nconst dateControl = new FormControl<Date | string>('2025-01-01');\n\n// The control should always expose a Date, but it can accept a string\nconst date: Date = dateControl.value; // This can't be done\n```\n\n## Problem 4: Error fields does not have strict typing\n\nRegardless of the return type of a validator, the `errors` property of controls is typed as `any`. For example, the max length validator exposes an error value similar to `{requiredLength: 5, actualLength: 7}`, but it can be consumed with type safety in the template.\n\n**Example:**\n```ts\nconst control = new FormControl('test', Validators.maxLength(5));\nconst errors = control.errors; // Typed as any, not safe to access properties\nif (errors?.maxlength) {\n  console.log(errors.maxlength.requiredLength); // No type safety\n}\n```\n\n## Problem 5: Accessibility with reactive form validators\n\nReactive form validators provide a great tooling to build dynamic validators. However, they don't add HTML attributes such as `required` or `maxlength`, lacking a11n support. Only template driven validators do this. For those who embrace the virtues of reactive forms, validators have to be duplicated in the control and template to ensure good HTML attributes.\n\n**Example:**\n```ts\nconst control = new FormControl('', [Validators.required, Validators.maxLength(5)]);\n// HTML does not reflect required or maxlength attributes\n```\n\n## Problem 6: Async validators are still pending when the form is submitted\n\nOne of the most common scenarios when using forms is acting when they are submitted. Currently, when the submit event is fired, a form with async validators is in pending state. It is not trivial to wait until they complete so as to decide whether the form action should be executed.\n\n**Example:**\n```ts\nthis.formGroup = new FormGroup({\n  asyncControl: new FormControl('', null, asyncValidator)\n});\n\nonSubmit() {\n  if (this.formGroup.pending) {\n    // Form is still pending, can't proceed with submission\n    console.log('Form is pending, please wait...');\n  } else if (this.formGroup.valid) {\n    // Form is valid, proceed with submission\n    console.log('Form submitted successfully:', this.formGroup.value);\n  } else {\n    // Form is invalid, handle errors\n    console.log('Form is invalid:', this.formGroup.errors);\n  }\n}\n```\n\n## Problem 7: Complex typing structures\n\nTyped form's typing is complex. For example, a form group can't be typed with just the type of its value, it needs to know whether each field is a control, group, or array.\n\n### Proposed solution\n\n## Proposed solution 1: Bind CVA through inputs to ensure strict typing\n\nIdeally, a CVA could expose a `model` consumed through two-way data binding rather than through DI. Since inputs are the only binding that enforces type safety, it would ensure that the CVA and its model value have the same type.\n\n**Proposal:**\n\n```ts\nexport interface ControlValueAccessor<T> {\n  readonly model: `ModelSignal<T>`;\n}\n```\n\n## Proposed solution 2: Use `model` for binding of the CVA\n\nHaving two methods for the data binding of a CVA could be better replaced with the new `model` that solves this specific problem and avoids timing issues.\n\n## Proposed solution 3: Support type narrowing\n\nReconsider the decision that  disabled controls should have `undefined` value and avoid the need of exposing `value` vs `rawValue`. If a control was undefined, it would be an application decision whether the value should be `undefined`. Another alternative to solve the typing issue would be only support disable on controls that include the type `undefined`.\n\nIf type narrowing could be applied to form controls, we could benefit, for example, from:\n\n* Required validator would ensure that, if successful, the value is not null and reflect that in the type.\n* A control that does parsing would support multiple values when \"setting\", but a narrowed type when \"getting\".\n\n**Proposal:**\n```ts\nexport function RequiredValidator<T>(control: AbstractControl<T | undefined>): control is AbstractControl<T>;\n```\n\n## Proposed solution 4: Support generic type for errors\n\nIf a control is defined with validators, make them part of the generic type so that `errors` has a strict type.\n\n## Proposed solution 5: Enhance API of programmatic validators\n\nA programmatic validator would have an API similar to `host` so that it can modify the HTML and add a11y attributes as needed.\n\n## Proposed solution 6: Provide `success` and `error` events on forms\n\nRather than relying on submit, provide `success` (or `validSubmit`) or `error` (or `invalidSubmit`) events that get triggered when, after the form is submitted, async validators are resolved, and the state is no longer pending, depending on whether it is `valid` or `invalid`.\n\nThe success event could also expose a narrowed type with the final types when validators are successful, following up on proposed solution 3.\n\n## Proposed solution 7: Simplify typing for form groups/arrays\n\nA form group/array would only have child abstract controls, regardless of their specific type. This way they can be typed with the value's type. If it had a child object-shaped field, it could later be bound to a control with an object value, or a child group dynamically.\n\n### Alternatives considered\n\nCreating my own forms library, but I really like Angular's 😉 ","Url":"https://github.com/angular/angular/issues/59114","RelatedDescription":"Open issue \"Enhancements to forms for future signal forms\" (#59114)"},{"Id":"2726327808","IsPullRequest":true,"CreatedAt":"2024-12-09T08:18:47","Actor":"RafaelJCamara","Number":"59111","RawContent":null,"Title":"docs: improve docs on NgModule providers","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nIssue Number: #59096\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/59111","RelatedDescription":"Open PR \"docs: improve docs on NgModule providers\" (#59111)"},{"Id":"2726317114","IsPullRequest":true,"CreatedAt":"2024-12-09T08:13:49","Actor":"angular-robot","Number":"59110","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59110","RelatedDescription":"Open PR \"build: lock file maintenance\" (#59110)"},{"Id":"2725793563","IsPullRequest":false,"CreatedAt":"2024-12-09T02:31:29","Actor":"surajchopra1234","Number":"59109","RawContent":null,"Title":"HTTP Caching not working for Incremental Hydrated Components","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe incremental hydration component in Angular 19 does not send cached HTTP request data (GET REQUEST) when rehydrated upon interaction, causing unnecessary refetching of data.\n\n**Steps to Reproduce**:\n- Implement an incremental hydration component in Angular 19 that fetches data via an HTTP request.\n- Interact with the component to trigger hydration.\n- Observe that the HTTP request is refetched without using cached data.\n\n**Expected Behavior**:\nThe component should use cached HTTP request data when rehydrated to avoid unnecessary data fetching.\n\n**Environment:**\nAngular Version: 19\nBrowser: All supported browsers\n\n**Additional Context:**\nThis issue affects performance and user experience by causing redundant HTTP requests and delays in data loading.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59109","RelatedDescription":"Open issue \"HTTP Caching not working for Incremental Hydrated Components\" (#59109)"},{"Id":"2725087162","IsPullRequest":false,"CreatedAt":"2024-12-08T10:31:32","Actor":"jeanpaulattard","Number":"59107","RawContent":null,"Title":"@angular/elements - Values passed as input (via @Input) are not available on ngOnInit of a custom element component","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nNo\n\n### Description\n\n_Please note that the following bug is available on v17 / 18 / 19._\n\nInput values passed via the `@Input` decorator to components that have been transformed into custom elements  are not available within the `ngOnInit` lifecycle hook of the transformed component. \n\nTo replicate\n- Create a very basic component that accepts an `@Input` value. (could be standalone or not, doesn't matter)\n- Use the utilities exposed by the `@angular/elements` library to create a custom element from the created component\n- Register the created element with the dom via `customElements.define(...)`\n- Access the created custom element from another component while passing the values via variables (not static strings).\n- When the custom element is created, and `ngOnInit` is fired, the values that are accepted as input are `undefined`.\n\nThis seems to be an odd behaviour since there is no feature parity between Angular Components and Angular Elements. In the first, any inputs passed to the component are available, wheres for Angular Elements, they aren't.\n\nit is also important to note that if the angular element is rendered *before* the element has been registered with the DOM registry, the input variables are available within the `ngOnInit` lifecycle hook.\n\nBoth of the scenarios, ie. when input variables are undefined, and when not, are showcased in the linked stackblitz repo.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-6l4edbrm?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.12\nNode: 20.11.1\nPackage Manager: npm 10.8.1\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59107","RelatedDescription":"Closed issue \"@angular/elements - Values passed as input (via @Input) are not available on ngOnInit of a custom element component\" (#59107)"},{"Id":"2724889757","IsPullRequest":true,"CreatedAt":"2024-12-08T01:29:01","Actor":"JeanMeche","Number":"59106","RawContent":null,"Title":"docs(docs-infra): remove costly `localeCompare`","State":"open","Body":"This function wasn't necessary, the items were already sorted.\r\n\r\nfixes #59069d\r\n","Url":"https://github.com/angular/angular/pull/59106","RelatedDescription":"Open PR \"docs(docs-infra): remove costly `localeCompare`\" (#59106)"},{"Id":"2724883623","IsPullRequest":true,"CreatedAt":"2024-12-08T01:07:38","Actor":"JeanMeche","Number":"59105","RawContent":null,"Title":"docs: fix mermaid DI diagram.","State":"open","Body":"We need to use `<br>` for linebreakes.\r\n\r\nfixes #59104\r\n","Url":"https://github.com/angular/angular/pull/59105","RelatedDescription":"Open PR \"docs: fix mermaid DI diagram.\" (#59105)"},{"Id":"2724841085","IsPullRequest":false,"CreatedAt":"2024-12-07T22:38:02","Actor":"anthony-b-dev","Number":"59104","RawContent":null,"Title":"Documentation for Hierarchical Injectors did not parse diagram text properly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe Hierarchical Injectors page has newline characters instead of new lines. [Platform Injector](https://angular.dev/guide/di/hierarchical-dependency-injection#platform-injector)\n\n![Image](https://github.com/user-attachments/assets/36067eda-6520-4336-a1b7-dd76d55c6d9b)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59104","RelatedDescription":"Open issue \"Documentation for Hierarchical Injectors did not parse diagram text properly\" (#59104)"},{"Id":"2724829807","IsPullRequest":false,"CreatedAt":"2024-12-07T21:59:08","Actor":"robertIsaac","Number":"59103","RawContent":null,"Title":"ability to remove attribute in production","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nin a lot of cases we add data-test-id for unit test and e2e to be able to catch exact element\nbut all of these attribute end up in production build\n\n### Proposed solution\n\nadd one more more in angular.json file to specify a list of attribute that should be removed in some configuration (e.g. production)\nand maybe by default for new projects to have data-test-id in this list (what about data-testid?)\n\n### Alternatives considered\n\ncreating custom script that uses using regular expression to do replace in all files and run it before the compiler\nit's error prune and harder to maintain between projects since if there is a bug, I need to fix it for every project (I'm maintaining 10+ Angular projects and almost all of them have them)","Url":"https://github.com/angular/angular/issues/59103","RelatedDescription":"Open issue \"ability to remove attribute in production\" (#59103)"},{"Id":"2724649681","IsPullRequest":true,"CreatedAt":"2024-12-07T14:28:14","Actor":"Ask-786","Number":"59101","RawContent":null,"Title":"docs(docs-infra): removed confusing extra single quote","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n```json\r\n      \"define\": {\r\n          \"SOME_NUMBER\": \"5\",\r\n-          \"ANOTHER\": \"''this is a string literal, note the extra single quotes'\",\r\n          \"REFERENCE\": \"globalThis.someValue.noteTheAbsentSingleQuotes\"\r\n      }\r\n```\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n```json\r\n      \"define\": {\r\n          \"SOME_NUMBER\": \"5\",\r\n+          \"ANOTHER\": \"'this is a string literal, note the extra single quotes'\",\r\n          \"REFERENCE\": \"globalThis.someValue.noteTheAbsentSingleQuotes\"\r\n      }\r\n```\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59101","RelatedDescription":"Open PR \"docs(docs-infra): removed confusing extra single quote\" (#59101)"},{"Id":"2724401099","IsPullRequest":true,"CreatedAt":"2024-12-07T14:15:07","Actor":"Ask-786","Number":"59099","RawContent":null,"Title":"docs(docs-infra): removed confusing extra single quote","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n```json\r\n \"define\": {\r\n          \"SOME_NUMBER\": \"5\",\r\n-         \"ANOTHER\": \"''this is a string literal, note the extra single quotes'\",\r\n          \"REFERENCE\": \"globalThis.someValue.noteTheAbsentSingleQuotes\"\r\n  }\r\n```\r\n\r\n\r\n## What is the new behavior?\r\n```json\r\n \"define\": {\r\n          \"SOME_NUMBER\": \"5\",\r\n+         \"ANOTHER\": \"'this is a string literal, note the extra single quotes'\",\r\n          \"REFERENCE\": \"globalThis.someValue.noteTheAbsentSingleQuotes\"\r\n  }\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59099","RelatedDescription":"Closed or merged PR \"docs(docs-infra): removed confusing extra single quote\" (#59099)"},{"Id":"2724471149","IsPullRequest":true,"CreatedAt":"2024-12-07T08:10:45","Actor":"crisbeto","Number":"59100","RawContent":null,"Title":"refactor(docs-infra): fix build-time warnings","State":"open","Body":"Fixes a bunch of warnings around an upcoming Sass breaking change https://sass-lang.com/documentation/breaking-changes/mixed-decls/. Also fixes one unused standalone import.\r\n","Url":"https://github.com/angular/angular/pull/59100","RelatedDescription":"Open PR \"refactor(docs-infra): fix build-time warnings\" (#59100)"},{"Id":"2724344368","IsPullRequest":false,"CreatedAt":"2024-12-07T04:54:18","Actor":"cplutchak","Number":"59098","RawContent":null,"Title":"Improve Reactive Forms Documentation","State":"open","Body":"### Describe the problem that you experienced\n\nThe documentation on reactive forms is comprehensive, but there was minimal guidance on common pitfalls, such as initializing forms with complex nested structures or debugging runtime errors that could cause confusion for developers, especially those new to Angular or reactive forms.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/forms/reactive-forms\n\n### Describe what you were looking for in the documentation\n\nI was looking for a section addressing common errors and debugging strategies when working with reactive forms.\n\n### Describe the actions that led you to experience the problem\n\nLooked for possible solutions to runtime errors during form setup or validation that may be encountered.\n\n### Describe what you want to experience that would fix the problem\n\n- Add a section on common pitfalls (ex: incorrectly initialized controls, missing form group keys).\n- Provide debugging strategies for runtime errors and form validation issues.\n\n### Add a screenshot if that helps illustrate the problem\n\nN/A\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nN/A\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\nN/A\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nN/A\n```","Url":"https://github.com/angular/angular/issues/59098","RelatedDescription":"Open issue \"Improve Reactive Forms Documentation\" (#59098)"},{"Id":"2724200559","IsPullRequest":false,"CreatedAt":"2024-12-07T00:32:55","Actor":"newmankyle","Number":"59097","RawContent":null,"Title":"Child Form Groups Don't Receive Updated _onCollectionChange() When FormGroupDirective Seeds Parent with Callback","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe rely on `_onCollectionChange()` to notify its FormGroupDirective to re-bind its FormControlName directives, and FormGroup is smart enough to propagate its `_onCollectionChange()` callback so that Child FormGroups can notify too. This happens in two scenarios\n1. [When we first initialize the FormGroup](https://github.com/angular/angular/blob/4a030f7308b1e9c0fe6164f4533107f79004891c/packages/forms/src/model/form_group.ts#L598-L603) (the constructor calls `_setupControl()` which binds `_onCollectionChange()` to the children\n2. [When we call](https://github.com/angular/angular/blob/4a030f7308b1e9c0fe6164f4533107f79004891c/packages/forms/src/model/form_group.ts#L233-L239) `registerControl` (and associated methods)\n\nThe problem is with scenario 1: we may seed each child control with a default callback (an empty function) on init, but we don't propagate a *new* callback when we eventually bind the FormGroup to a FormGroupDirective. The child FormGroups are still working with the 'default' one. Furthermore the api is private so I don't see any way to fix this on the user side.\n\nIf we have a scenario where a child form group adds controls dynamically, and some of those controls are FormControlName directives (see stackblitz), then we fail to trigger `_updateDOMValue()` on the parent FormGroupDirective. The FormControlName directives are left with orphaned form controls.\n\nIdeally, `_registerOnCollectionChange()`  would cascade to its children (or maybe just call `_setupControls()` again).\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-iatn8h?file=src%2Fbroken-form.ts \n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.0\nNode: 20.11.1\nPackage Manager: yarn 4.4.0\nOS: linux x64\n\nAngular: 18.2.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, language-service, material, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.0\n@angular-devkit/build-angular   18.2.0\n@angular-devkit/core            18.2.0\n@angular-devkit/schematics      18.2.0\n@angular/flex-layout            14.0.0-beta.41\n@schematics/angular             18.2.0\nng-packagr                      18.2.0\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59097","RelatedDescription":"Open issue \"Child Form Groups Don't Receive Updated _onCollectionChange() When FormGroupDirective Seeds Parent with Callback\" (#59097)"},{"Id":"2723862577","IsPullRequest":false,"CreatedAt":"2024-12-06T20:29:21","Actor":"jvh-centric","Number":"59096","RawContent":null,"Title":"Typo in NgModules documentation","State":"open","Body":"### Describe the problem that you experienced\n\nhttps://github.com/angular/angular/blob/30e676098d72e9e11a6628b9716668df08f18c62/adev/src/content/guide/ngmodules/overview.md?plain=1#L155\n\nThis sentence seems wrong ? \n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/ngmodules/overview\n\n### Describe what you were looking for in the documentation\n\nI'm not 100% what it is meant to say ...\n\nMaybe:\n\nSimilarly, some NgModules may **have** a static `forChild` that indicates the providers are intended to be added to components within your application hierarchy.\n\n?\n\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59096","RelatedDescription":"Open issue \"Typo in NgModules documentation\" (#59096)"},{"Id":"2723847024","IsPullRequest":true,"CreatedAt":"2024-12-06T20:19:38","Actor":"thePunderWoman","Number":"59095","RawContent":null,"Title":"ci: Update caretaker config for merge queue","State":"open","Body":"This updates the caretaker query for merge queue\r\nto remove status: success, since skipped workflows are considered failed by Github and omitted from\r\nthe query results.\r\n","Url":"https://github.com/angular/angular/pull/59095","RelatedDescription":"Open PR \"ci: Update caretaker config for merge queue\" (#59095)"},{"Id":"2723794834","IsPullRequest":false,"CreatedAt":"2024-12-06T19:44:02","Actor":"nickregeda","Number":"59094","RawContent":null,"Title":"Mistake in the description of equality comparison for linked signal","State":"open","Body":"### Describe the problem that you experienced\n\nPlease check this section\nhttps://angular.dev/guide/signals/linked-signal#custom-equality-comparison\n\nThere is an error in this code because the parameters for the callback in equal are strings, i.e. the email value itself, not the activeUser value\nError: Property id does not exist on type string\n```\nconst activeUser = signal({id: 123, name: 'Morgan'});\nconst email = linkedSignal(() => `${activeUser().name}@example.com`, {\n  // Consider the user as the same if it's the same `id`.\n  equal: (a, b) => a.id === b.id,\n});\n```\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/signals/linked-signal#custom-equality-comparison\n\n### Describe what you were looking for in the documentation\n\nI'm familiarizing myself with the updates that were introduced in Angular version 19.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59094","RelatedDescription":"Open issue \"Mistake in the description of equality comparison for linked signal\" (#59094)"},{"Id":"2726681594","IsPullRequest":false,"CreatedAt":"2024-12-06T19:10:28","Actor":"olfek","Number":"59113","RawContent":null,"Title":"`/index.html` WITH query parameters/params does not match any routes","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\n`/index.html` resolves to `/`\n`/index.html?foo=bar` throws an error:\n```\nERROR Error: NG04002: Cannot match any routes. URL Segment: 'index.html'\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/user-attachments/files/18042548/angular-index.html-with-query-params-bug.zip\n\n### Please provide the exception or error you saw\n\n```true\nERROR Error: NG04002: Cannot match any routes. URL Segment: 'index.html'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 22.11.0\nPackage Manager: npm 10.9.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nSame thing seen by someone else in 2020 - https://stackoverflow.com/q/62259234","Url":"https://github.com/angular/angular/issues/59113","RelatedDescription":"Open issue \"`/index.html` WITH query parameters/params does not match any routes\" (#59113)"},{"Id":"2723547937","IsPullRequest":true,"CreatedAt":"2024-12-06T17:14:31","Actor":"crisbeto","Number":"59092","RawContent":null,"Title":"feat(core): add event listener options to renderer","State":"open","Body":"Updates the `Renderer2.listen` signature to accept event options, as well as all adjacent types to it.\r\n","Url":"https://github.com/angular/angular/pull/59092","RelatedDescription":"Open PR \"feat(core): add event listener options to renderer\" (#59092)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2726347795","IsPullRequest":true,"CreatedAt":"2024-12-09T18:20:25","Actor":"angular-robot","Number":"29086","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29086","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29086)"},{"Id":"2724406365","IsPullRequest":true,"CreatedAt":"2024-12-09T18:20:02","Actor":"angular-robot","Number":"29078","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `9c8bf57` -> `57a8326` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `9e15b9d` -> `1367371` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `84f9bf8` -> `1847b36` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `b9b1686` -> `a1fca72` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `1922bc7` -> `db08655` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c86076f` -> `37b0c4d` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `cdccd3e` -> `e30d8a3` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `17be159` -> `8d7f2ff` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `b870cc6` -> `b2003fd` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `1cd7565` -> `578aff1` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `0a80b38` -> `092f50b` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `5e1ba41` -> `866311b` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `233ef1c` -> `fe6cb87` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `3d6e0e1` -> `b5ea259` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `fde3dc3` -> `9070daf` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `e9f6144` -> `e1aaf4d` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29078","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29078)"},{"Id":"2726541397","IsPullRequest":false,"CreatedAt":"2024-12-09T17:28:01","Actor":"jmerro","Number":"29089","RawContent":null,"Title":"Template HMR broken running on Windows Dev Server","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, compiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAppears to be some issue with Template HMR on a Windows where even though the message \"Component update sent to client(s)\" is seen. ~~Most of the code responsible for template HMR in core is not being served to the client via the core.mjs script.~~ not sure about this anymore.\n\nWith this problem any changes to the template even after a manual page reload won't show the changes.\nThe `@ng/component?import` GET calls also don't have a response body either.\n\nI have tested the same repo served from Linux (WSL) and it works just fine. And tested with brand new `ng new` projects on Windows.\n\nThere are no errors in the console.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.0.2\n... compiler, compiler-cli, core\n\nPackage                             Version\n-------------------------------------------------------------\n@angular-devkit/architect           0.1900.4\n@angular-devkit/build-angular       19.0.4\n@angular-devkit/core                19.0.4\n@angular-devkit/schematics          19.0.4\n@angular/animations                 19.0.1\n@angular/cli                        19.0.4\n@angular/common                     19.0.1\n@angular/forms                      19.0.1\n@angular/material                   19.0.1\n@angular/platform-browser           19.0.1\n@angular/platform-browser-dynamic   19.0.1\n@schematics/angular                 19.0.4\nrxjs                                7.8.1\ntypescript                          5.6.3\nzone.js                             0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29089","RelatedDescription":"Closed issue \"Template HMR broken running on Windows Dev Server\" (#29089)"},{"Id":"2726696319","IsPullRequest":false,"CreatedAt":"2024-12-09T17:26:14","Actor":"klerick","Number":"29092","RawContent":null,"Title":"SSR build prerender broken if configuration has externalDependencies options","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDear Angular Team,\n\nWe are experiencing an issue with external dependencies when using Angular 19. In our project, we utilize importmap to load external dependencies and have a custom registry hook for resolving these dependencies on our SSR server. However, we encounter an error when attempting to build the project in version 19.\n\nCauses of the Issue:\n\n1. Dependency Filtering:\n   - This part of the code (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-build.ts#L160) only retains Node.js dependencies for the server, leading to issues with external dependencies.\n\n2. Prerendering:\n   - Even though we do not have prerender routes, this section (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/builders/application/execute-post-bundle.ts#L133) attempts to call the prerender hook, resulting in an error.\n   - We are unable to set partialSSRBuild as it is an internal variable, and appShellOptions and prerenderOptions are set by default when outputMode is specified.\n\n3. Custom Hook:\n   - Custom load hook (https://github.com/angular/angular-cli/blob/main/packages/angular/build/src/utils/server-rendering/esm-in-memory-loader/loader-hooks.ts) does not load dependencies as expected.\n\n\n### Minimal Reproduction\n\nhttps://stackblitz.com/edit/stackblitz-starters-iudtwvic?file=package.json\n\nnpm run build.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: npm 10.5.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cdk                    19.0.2\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n\n### Possible Solutions\n\n1. Expose partialSSRBuild Configuration:\n   - Allow developers to manually configure or override the partialSSRBuild setting. This would provide more control over the build process and help accommodate projects with custom SSR requirements.\n\n2. Enhance or Extend Custom Hook:\n   - Modify or extend the existing custom hook to better handle dependency resolution. This could involve implementing functionality similar to that discussed in this issue (https://github.com/angular-architects/module-federation-plugin/issues/622). Specifically, enabling dynamic loading and resolution of dependencies that are not present in the initial bundle.","Url":"https://github.com/angular/angular-cli/issues/29092","RelatedDescription":"Closed issue \"SSR build prerender broken if configuration has externalDependencies options\" (#29092)"},{"Id":"2727163801","IsPullRequest":true,"CreatedAt":"2024-12-09T17:26:13","Actor":"alan-agius4","Number":"29094","RawContent":null,"Title":"fix(@angular/build): handle external `@angular/` packages during SSR","State":"closed","Body":"This commit introduces `ngServerMode` to ensure proper handling of external `@angular/` packages when they are used as externals during server-side rendering (SSR).\r\n\r\nCloses: #29092\r\n","Url":"https://github.com/angular/angular-cli/pull/29094","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle external `@angular/` packages during SSR\" (#29094)"},{"Id":"2727575954","IsPullRequest":true,"CreatedAt":"2024-12-09T16:47:02","Actor":"alan-agius4","Number":"29095","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29095","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29095)"},{"Id":"2723703884","IsPullRequest":false,"CreatedAt":"2024-12-09T16:11:05","Actor":"Deku-nattsu","Number":"29077","RawContent":null,"Title":"Inconsistency between ng serve and ng build when using Node.js built-ins","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nAfter updating the angular cli to 19.0.4, i can no longer serve my project, the issue comes from the usage of pdfjs-dist that includes usage of nodejs build-ins. however i am able to build successfully which contradicts with the goal fc41f50\n\nMy expecation is a workaround this build blocking error (probably through the compiler configuration) and the consistency of errors between serving and build.\n\n### Minimal Reproduction\n\n1. create a new angular project\n2. install any library that uses nodejs build-ins in my case pdfjs-dist@4.6.82\n3. try to serve/build\n\nhere's the repo to reproduce it: https://github.com/Deku-nattsu/nodejs-build-ins-error\nstackblitz: https://stackblitz.com/~/github.com/Deku-nattsu/nodejs-build-ins-error\n\n### Exception or Error\n\n```text\nwhen serving:\n\n [ERROR] The package \"url\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5666:48:\n      5666 │       url = await import(/*webpackIgnore: true*/\"url\");\n           ╵                                                 ~~~~~\n\n✘ [ERROR] The package \"fs\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5663:51:\n      5663 │     const fs = await import(/*webpackIgnore: true*/\"fs\"),\n           ╵                                                    ~~~~\n\n✘ [ERROR] The package \"http\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5664:49:\n      5664 │       http = await import(/*webpackIgnore: true*/\"http\"),\n           ╵                                                  ~~~~~~\n\n✘ [ERROR] The package \"https\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/pdfjs-dist/build/pdf.mjs:5665:50:\n      5665 │       https = await import(/*webpackIgnore: true*/\"https\"),\n           ╵                                                   ~~~~~~~\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.4\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29077","RelatedDescription":"Closed issue \"Inconsistency between ng serve and ng build when using Node.js built-ins\" (#29077)"},{"Id":"2726629480","IsPullRequest":true,"CreatedAt":"2024-12-09T16:11:03","Actor":"alan-agius4","Number":"29090","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29090","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29090)"},{"Id":"2726631044","IsPullRequest":true,"CreatedAt":"2024-12-09T16:10:58","Actor":"alan-agius4","Number":"29091","RawContent":null,"Title":"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve","State":"closed","Body":"\r\nThis commit reverts 06f478bc18d3e0daa8902d0fef94e55a5d052348\r\n\r\nCloses: #29077\r\n","Url":"https://github.com/angular/angular-cli/pull/29091","RelatedDescription":"Closed or merged PR \"revert: fix(@angular/build): show error when Node.js built-ins are used during ng serve\" (#29091)"},{"Id":"2726760265","IsPullRequest":true,"CreatedAt":"2024-12-09T14:38:19","Actor":"alan-agius4","Number":"29093","RawContent":null,"Title":"refactor(@angular/ssr): skip navigating to the root page during route extraction","State":"closed","Body":"\r\nTo prevent navigating to the root page while extracting routes, a non-existent path (`/ng-routes-internal`) is intentionally used. This ensures unnecessary rendering during the route extraction process where now only the app component is rendered.","Url":"https://github.com/angular/angular-cli/pull/29093","RelatedDescription":"Closed or merged PR \"refactor(@angular/ssr): skip navigating to the root page during route extraction\" (#29093)"},{"Id":"2724784427","IsPullRequest":false,"CreatedAt":"2024-12-09T14:19:08","Actor":"Char2sGu","Number":"29082","RawContent":null,"Title":"Add CSS Imports to Index HTML","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nWhen one add the following to their `styles.css`:\n```css\n@import 'https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap';\n```\nThe desired stylesheet is only fetched after `styles.css` is ready.\n\n### Describe the solution you'd like\n\nInstead, when top-level CSS imports are detected, automatically generate a `<link rel=\"stylesheet\">` in `index.html`, to enable parallel stylesheet loading.\n\nRemove from `styles.css`:\n\n```css\n@import 'https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap';\n```\n\nAdd to `index.html`:\n\n```html\n<link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap\" rel=\"stylesheet\">\n```\n\n### Describe alternatives you've considered\n\nPrint warning while building to suggest the developer to prefer `<link rel=\"stylesheet\">` than `@import`.","Url":"https://github.com/angular/angular-cli/issues/29082","RelatedDescription":"Closed issue \"Add CSS Imports to Index HTML\" (#29082)"},{"Id":"2726426837","IsPullRequest":false,"CreatedAt":"2024-12-09T10:46:10","Actor":"rsmogura","Number":"29087","RawContent":null,"Title":"Angular doesn't use ESM modules if package is multi module format","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi, I use angular 18 with Sweetalert2 library. During build I got information that this library is CommonJS and it's hard to optimise size (tree shaking). In fact size of project grown up around 0.5MB\n\nAfter inspecting library, it was found that library exports few types of modules through `package.json`:\n```\n  \"main\": \"dist/sweetalert2.all.js\",\n  \"browser\": \"dist/sweetalert2.all.js\",\n  \"module\": \"dist/sweetalert2.esm.all.js\",\n```\nand `module` is in fact an ESM module.\n\nHowever Angular doesn't pick up ESM version of sources instead focuses on on CommonJS version. I would like Angular to pickup ESM versions either by default, or by using additional switches.\n\n### Minimal Reproduction\n\n1. Create Angular project.\n2. Add SweetAlert2 library `npm install sweetalert2 @sweetalert2/ngx-sweetalert2`\n3. Reference Swal alert in source code, so that alert will get displayed.\n4. Build project and check output and warnings.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.1802.12\n@angular-devkit/build-angular     18.2.12\n@angular-devkit/core              18.2.12\n@angular-devkit/schematics        18.2.12\n@angular/cdk                      18.2.13\n@angular/material                 18.2.13\n@angular/material-luxon-adapter   18.2.13\n@schematics/angular               18.2.12\nrxjs                              7.8.1\ntypescript                        5.5.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29087","RelatedDescription":"Closed issue \"Angular doesn't use ESM modules if package is multi module format\" (#29087)"},{"Id":"2726469743","IsPullRequest":false,"CreatedAt":"2024-12-09T09:23:39","Actor":"pawelfras","Number":"29088","RawContent":null,"Title":"Custom index output name is not taken into consideration in SSR app","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.2\n\n### Description\n\nThe output name for index set in `angular.json` file is not taken into consideration in app with SSR (regardless if pre-renderign is set to true).\nRegardless of the provided name, builder generates `browser/index.csr.html`. The problem was probably introduced with the https://github.com/angular/angular-cli/commit/21f21eda39c62e284c6cbee0d0ebfe271f605239 - `indexOutput` is set to the value from `options.index.value` but later it is overwritten:\n```\n    indexOutput =\n      (ssrOptions || prerenderOptions) && indexBaseName === 'index.html'\n        ? INDEX_HTML_CSR\n        : indexBaseName;\n```\n\n\n### Minimal Reproduction\n\nCreate new application with SSR:\n```bash\nnpx @angular/cli@19 new ng-19-ssr --ssr --server-routing=false\n```\nIn angular.json, change `index` option:\n```diff\n- \"index\": \"src/index.html\"\n+\"index\": {\n+   \"input\": \"src/index.html\",\n+   \"output\": \"index.html\n+}\n```\noptionally, set `\"prerendering\": false` in `angular.json` (to reduce noise in `dist/browser`)\n\nrun `ng build` and see generated files:\n![Image](https://github.com/user-attachments/assets/931e9bd9-5408-4126-ab61-10bb030a047c)\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.4\nNode: 20.18.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29088","RelatedDescription":"Open issue \"Custom index output name is not taken into consideration in SSR app\" (#29088)"},{"Id":"2725780240","IsPullRequest":false,"CreatedAt":"2024-12-09T02:19:13","Actor":"lennybakkalian","Number":"29085","RawContent":null,"Title":"Route extraction shouldnt load the whole app in dev server","State":"open","Body":"I dont want to be that type of guy that just reopens a issue. But i only saw @alan-agius4 answers on that topic and i would kindly ask other angular engineers about their opinion and if its something that can be solved differently. Maybe without @alan-agius4 indirect implication that it would \"only\" be [solveable with file based](https://github.com/angular/angular-cli/issues/28995#issuecomment-2510789006) routing.\n\nThere are no docs on route extraction, but my understanding now is that all routes are computed in advance. I'm not deeper into angular code than the public_api, but I can't imagine that a full application load (full lifecycle or template execution) are necessary to figure this out. What does this have to do with route extraction?\n\n[proof of concept](https://stackblitz.com/~/github.com/lennybakkalian/angular-bug?file=src/app/app.component.ts)\nIn this example, it would only make sense for SSG if the REQUEST token is not available on the server. (but according to @alan-agius4 its \"[bad practice](https://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287)\" to think that the `REQUEST` token is available on the server with disabled prerender) - Just think about that for a second.\n\nSorry if I'm a bit salty, but it took me a really long time to figure out that (imo this bug) is due to the angular dev server.\n\nRelated to:\nhttps://github.com/angular/angular-cli/issues/28995\nhttps://github.com/angular/angular-cli/issues/28727#issuecomment-2441443287\nhttps://github.com/angular/angular-cli/issues/29084 (my previous ticket)\n[Angular Discord - My thread](https://discord.com/channels/748677963142135818/1315303097664409691)\n[Angular Discord - Another thread](https://discord.com/channels/748677963142135818/1308766801919869009)\nand probably many more","Url":"https://github.com/angular/angular-cli/issues/29085","RelatedDescription":"Open issue \"Route extraction shouldnt load the whole app in dev server\" (#29085)"},{"Id":"2725465941","IsPullRequest":false,"CreatedAt":"2024-12-08T19:59:01","Actor":"lennybakkalian","Number":"29084","RawContent":null,"Title":"Observables Called Twice in Dev SSR Server","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn Angular SSR, observables are triggered (at least) twice **on the server** during the **first** page load. To demonstrate this issue, I created a fresh Angular project on StackBlitz. This only happen when running a dev server -> in prod, this behaviour doesnt happen.\n\nAdditionally, the `provideAppInitializer` function is also called twice. Afterward, everything works as expected without duplicate calls.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/~/github.com/lennybakkalian/angular-bug?file=src/app/app.component.ts\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@angular/ssr                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```","Url":"https://github.com/angular/angular-cli/issues/29084","RelatedDescription":"Closed issue \"Observables Called Twice in Dev SSR Server\" (#29084)"},{"Id":"2724406472","IsPullRequest":true,"CreatedAt":"2024-12-08T14:32:04","Actor":"angular-robot","Number":"29079","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`5.0.2` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.0.2/5.1.0) |\n| [@inquirer/confirm](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/confirm/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | minor | [`5.0.2` -> `5.1.0`](https://renovatebot.com/diffs/npm/@inquirer%2fconfirm/5.0.2/5.1.0) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | dependencies | minor | [`7.1.0` -> `7.2.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.1.0/7.2.0) |\n| [@inquirer/prompts](https://redirect.github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md) ([source](https://redirect.github.com/SBoudrias/Inquirer.js)) | devDependencies | minor | [`7.1.0` -> `7.2.0`](https://renovatebot.com/diffs/npm/@inquirer%2fprompts/7.1.0/7.2.0) |\n| [https-proxy-agent](https://redirect.github.com/TooTallNate/proxy-agents) ([source](https://redirect.github.com/TooTallNate/proxy-agents/tree/HEAD/packages/https-proxy-agent)) | dependencies | patch | [`7.0.5` -> `7.0.6`](https://renovatebot.com/diffs/npm/https-proxy-agent/7.0.5/7.0.6) |\n| [https-proxy-agent](https://redirect.github.com/TooTallNate/proxy-agents) ([source](https://redirect.github.com/TooTallNate/proxy-agents/tree/HEAD/packages/https-proxy-agent)) | devDependencies | patch | [`7.0.5` -> `7.0.6`](https://renovatebot.com/diffs/npm/https-proxy-agent/7.0.5/7.0.6) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | patch | [`4.28.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/rollup/4.28.0/4.28.1) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | patch | [`4.28.0` -> `4.28.1`](https://renovatebot.com/diffs/npm/rollup/4.28.0/4.28.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>SBoudrias/Inquirer.js (@&#8203;inquirer/confirm)</summary>\n\n### [`v5.1.0`](https://redirect.github.com/SBoudrias/Inquirer.js/releases/tag/%40inquirer/confirm%405.1.0)\n\n[Compare Source](https://redirect.github.com/SBoudrias/Inquirer.js/compare/@inquirer/confirm@5.0.2...@inquirer/confirm@5.1.0)\n\n-   Pressing `tab` will now toggle between yes/no answers.\n\n</details>\n\n<details>\n<summary>TooTallNate/proxy-agents (https-proxy-agent)</summary>\n\n### [`v7.0.6`](https://redirect.github.com/TooTallNate/proxy-agents/blob/HEAD/packages/https-proxy-agent/CHANGELOG.md#706)\n\n[Compare Source](https://redirect.github.com/TooTallNate/proxy-agents/compare/https-proxy-agent@7.0.5...https-proxy-agent@7.0.6)\n\n##### Patch Changes\n\n-   [`913a49a`](https://redirect.github.com/TooTallNate/proxy-agents/commit/913a49a): Only overwrite servername in tls connect when host is not an IP address\n-   Updated dependencies \\[[`1699a09`](https://redirect.github.com/TooTallNate/proxy-agents/commit/1699a09)]\n    -   agent-base@7.1.2\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.28.1`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4281)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.28.0...v4.28.1)\n\n*2024-12-06*\n\n##### Bug Fixes\n\n-   Support running Rollup natively on LoongArch ([#&#8203;5749](https://redirect.github.com/rollup/rollup/issues/5749))\n-   Add optional `debugId` to `SourceMap` types ([#&#8203;5751](https://redirect.github.com/rollup/rollup/issues/5751))\n\n##### Pull Requests\n\n-   [#&#8203;5749](https://redirect.github.com/rollup/rollup/pull/5749): feat: add support for LoongArch ([@&#8203;darkyzhou](https://redirect.github.com/darkyzhou))\n-   [#&#8203;5751](https://redirect.github.com/rollup/rollup/pull/5751): feat: Add `debugId` to `SourceMap` types ([@&#8203;timfish](https://redirect.github.com/timfish), [@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5752](https://redirect.github.com/rollup/rollup/pull/5752): chore(deps): update dependency mocha to v11 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5753](https://redirect.github.com/rollup/rollup/pull/5753): chore(deps): update dependency vite to v6 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5754](https://redirect.github.com/rollup/rollup/pull/5754): fix(deps): update swc monorepo (major) ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5755](https://redirect.github.com/rollup/rollup/pull/5755): chore(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5756](https://redirect.github.com/rollup/rollup/pull/5756): Test if saving the Cargo cache can speed up FreeBSD ([@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29079","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29079)"},{"Id":"2725278936","IsPullRequest":true,"CreatedAt":"2024-12-08T14:31:22","Actor":"realtimetodie","Number":"29083","RawContent":null,"Title":"feat(@angular-devkit/architect): require build schemas from modules","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, when you create a custom builder for Angular CLI, the builder `schema` can only be a reference to a *local file* in the manifest directory. This is cumbersome, for example when you want to reference an external schema from a module instead.\r\n\r\nThis is now working:\r\n\r\n```json\r\n\"schema\": \"./src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\nThis is not working:\r\n\r\n```json\r\n\"schema\": \"@angular-devkit/build-angular/src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\n## What is the new behavior?\r\n\r\nIt is now possible to require a builder schema from a module.\r\n\r\nThis is now working:\r\n\r\n```json\r\n\"schema\": \"./src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\nand this too:\r\n\r\n```json\r\n\"schema\": \"@angular-devkit/build-angular/src/builders/browser-esbuild/schema.json\"\r\n```\r\n\r\n*Internal mechanics*:\r\n\r\nThe `localRequire.resolve` function will look up the location of a module, but rather than loading the module, just return the resolved filename:\r\n\r\n```\r\nschemaPath = localRequire.resolve(schemaPath, {\r\n  paths: [basePath],\r\n});\r\n```\r\n\r\nIf the module can not be found, a [MODULE_NOT_FOUND](https://nodejs.org/api/errors.html#module_not_found) error is thrown by Node.js and the filepath will be composed using the local manifest directory alternatively.\r\n\r\n*Error message*:\r\n\r\nIn any case, the schema will be read using `readFileSync` and the error message will always be the same:\r\n\r\n```\r\nENOENT: no such file or directory: <path>\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\n- Resolves #11307","Url":"https://github.com/angular/angular-cli/pull/29083","RelatedDescription":"Open PR \"feat(@angular-devkit/architect): require build schemas from modules\" (#29083)"},{"Id":"2723002499","IsPullRequest":true,"CreatedAt":"2024-12-07T17:46:14","Actor":"alan-agius4","Number":"29073","RawContent":null,"Title":"fix(@angular/ssr):  include `Content-Language` header when locale is set","State":"closed","Body":"The server now includes the `Content-Language` HTTP header in responses whenever a locale is explicitly set.\r\n","Url":"https://github.com/angular/angular-cli/pull/29073","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr):  include `Content-Language` header when locale is set\" (#29073)"},{"Id":"2724543539","IsPullRequest":false,"CreatedAt":"2024-12-07T11:23:03","Actor":"x-etienne","Number":"29080","RawContent":null,"Title":"The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0.3\n\n### Description\n\nI updated angular cli to 19.0.4 version and my project break\n\n### Minimal Reproduction\n\n- create a new angular project with ng-cli 19.0.4\n- add the `npm i @gitbeaker/rest` package\n- import it in the app.component.ts\n- start the application with `ng start`\n- the error arise\n\nmy app.components.ts is\n\n```\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { Gitlab } from '@gitbeaker/rest';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'nodedeperror';\n\n  testGitpeaker = () => {\n    const git = new Gitlab({});\n  }\n\n}\n```\n\n### Exception or Error\n\n```text\nX [ERROR] The package \"cluster\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js:22:24:\n      22 │ const cluster = require('cluster');\n         ╵                         ~~~~~~~~~\n\nX [ERROR] The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\n\n    node_modules/rate-limiter-flexible/lib/RateLimiterCluster.js:23:23:\n      23 │ const crypto = require('crypto');\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n\n\nAngular CLI: 19.0.4\nNode: 20.13.1\nPackage Manager: npm 10.2.5\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nMy package.json is:\n\n```\n{\n  \"name\": \"nodedeperror\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.0\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"@gitbeaker/rest\": \"^41.3.0\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.4\",\n    \"@angular/cli\": \"^19.0.4\",\n    \"@angular/compiler-cli\": \"^19.0.0\",\n    \"@types/jasmine\": \"~5.1.0\",\n    \"jasmine-core\": \"~5.4.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"typescript\": \"~5.6.2\"\n  }\n}\n```","Url":"https://github.com/angular/angular-cli/issues/29080","RelatedDescription":"Closed issue \"The package \"crypto\" wasn't found on the file system but is built into node. [plugin angular-browser-node-built-in]\" (#29080)"},{"Id":"2723656620","IsPullRequest":false,"CreatedAt":"2024-12-06T18:18:44","Actor":"Char2sGu","Number":"29076","RawContent":null,"Title":"View Transition Selectors Produce Warnings","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen view transition selectors are present in `styles.scss`, the following warnings are produced.\n\n```\n▲ [WARNING] 10 rules skipped due to selector errors:\n  ::view-transition-group(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(*) -> Pseudo-elements are not supported by css-select\n  ::view-transition-group(root) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(header) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(main) -> Pseudo-elements are not supported by css-select\n  ::view-transition-old(landing-image) -> Pseudo-elements are not supported by css-select\n  ::view-transition-new(landing-image) -> Pseudo-elements are not supported by css-select\n```\n\n### Minimal Reproduction\n\n1. Add any view transition selectors to `styles.scss`\n2. Run `ng build`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.1\nNode: 22.3.0\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.0.0\n... animations, cdk, common, compiler, compiler-cli, core\n... elements, forms, google-maps, localize, material\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, youtube-player\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.1\n@angular-devkit/build-angular   19.0.1\n@angular-devkit/core            19.0.1\n@angular-devkit/schematics      19.0.1\n@angular/build                  19.0.1\n@angular/cli                    19.0.1\n@angular/ssr                    19.0.1\n@schematics/angular             19.0.1\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29076","RelatedDescription":"Closed issue \"View Transition Selectors Produce Warnings\" (#29076)"},{"Id":"2723210348","IsPullRequest":false,"CreatedAt":"2024-12-06T14:43:44","Actor":"viceice","Number":"29075","RawContent":null,"Title":"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.13\n\n### Description\n\nThe `@angular/build` is passing all node args to the `Worker` via `piscina` which is invalid. Angular should filter some args like `--use-openssl-ca`\n\nhttps://github.com/angular/angular-cli/blob/120f088778fa0023291781afb5199933d4ac69f7/packages/angular/build/src/tools/esbuild/javascript-transformer.ts#L63\n\n### Minimal Reproduction\n\ncreate a simple shell wrapper for node and add to path, then run nx build for an esbuild enabled project.\n\n```sh\n#!/bin/sh\n\nnode --use-openssl-ca \"$@\"\n```\n\n### Exception or Error\n\n```text\n15:01:04  ✘ [ERROR] Initiated Worker with invalid execArgv flags: --use-openssl-ca [plugin angular-compiler]\n15:01:04  \n15:01:04      node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:23:\n15:01:04        130 │         const worker = new node_worker_threads_1.Worker((0, node_...\n15:01:04            ╵                        ^\n15:01:04  \n15:01:04      at new Worker (node:internal/worker:222:13)\n15:01:04      at ThreadPool._addNewWorker (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:130:24)\n15:01:04      at ThreadPool._ensureMinimumWorkers (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:125:18)\n15:01:04      at new ThreadPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:116:14)\n15:01:04      at new Piscina (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/piscina@4.7.0/node_modules/piscina/dist/index.js:566:53)\n15:01:04      at new WorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/utils/worker-pool.js:40:9)\n15:01:04      at #ensureWorkerPool (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:42:30)\n15:01:04      at JavaScriptTransformer.transformFile (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/javascript-transformer.js:80:51)\n15:01:04      at async /var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:381:38\n15:01:04      at async requestCallbacks.on-load (/var/jenkins/workspace/gitea_xfab_sx_main/node_modules/.pnpm/esbuild@0.24.0/node_modules/esbuild/lib/main.js:1276:22)\n15:01:04  \n15:01:04    This error came from the \"onLoad\" callback registered here:\n15:01:04  \n15:01:04      node_modules/.pnpm/@angular+build@19.0.2_@angular+compiler-cli@19.0.1_@angular+compiler@19.0.1_@angular+core@19._v7u63jdkqmnm72dubgsrnjhawe/node_modules/@angular/build/src/tools/esbuild/angular/compiler-plugin.js:371:18:\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: pnpm 9.14.4\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\nI'm using nx but it shouldn't matter as the mentioned code uses `process.execArgv` directly","Url":"https://github.com/angular/angular-cli/issues/29075","RelatedDescription":"Closed issue \"ERROR Initiated Worker with invalid execArgv flags: --use-openssl-ca plugin angular-compiler\" (#29075)"},{"Id":"2722159043","IsPullRequest":true,"CreatedAt":"2024-12-06T13:49:30","Actor":"angular-robot","Number":"29071","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0814af9` -> `9c8bf57` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `92f078f` -> `9e15b9d` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1775861` -> `84f9bf8` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `d07917b` -> `b9b1686` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `ec5244f` -> `1922bc7` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `c0fc889` -> `c86076f` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `db0436c` -> `cdccd3e` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `383f66b` -> `17be159` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `4f79d46` -> `b870cc6` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `8824a4d` -> `1cd7565` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `590855b` -> `0a80b38` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `981b6a6` -> `5e1ba41` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `a2a65fd` -> `233ef1c` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `d94b352` -> `3d6e0e1` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `ccf3d50` -> `fde3dc3` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `75eda80` -> `e9f6144` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29071","RelatedDescription":"Closed or merged PR \"build: update angular\" (#29071)"},{"Id":"2722159427","IsPullRequest":true,"CreatedAt":"2024-12-06T09:14:31","Actor":"angular-robot","Number":"29072","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | minor | `v4.1.2` -> `v4.2.0` |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | dependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [beasties](https://redirect.github.com/danielroe/beasties) ([source](https://redirect.github.com/danielroe/beasties/tree/HEAD/packages/beasties)) | devDependencies | minor | [`0.1.0` -> `0.2.0`](https://renovatebot.com/diffs/npm/beasties/0.1.0/0.2.0) |\n| [express](http://expressjs.com/) ([source](https://redirect.github.com/expressjs/express)) | devDependencies | patch | [`4.21.1` -> `4.21.2`](https://renovatebot.com/diffs/npm/express/4.21.1/4.21.2) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | dependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [terser](https://terser.org) ([source](https://redirect.github.com/terser/terser)) | devDependencies | minor | [`5.36.0` -> `5.37.0`](https://renovatebot.com/diffs/npm/terser/5.36.0/5.37.0) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.2` -> `6.0.3`](https://renovatebot.com/diffs/npm/vite/6.0.2/6.0.3) |\n| [webpack](https://redirect.github.com/webpack/webpack) | devDependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n| [webpack](https://redirect.github.com/webpack/webpack) | dependencies | patch | [`5.97.0` -> `5.97.1`](https://renovatebot.com/diffs/npm/webpack/5.97.0/5.97.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/cache (actions/cache)</summary>\n\n### [`v4.2.0`](https://redirect.github.com/actions/cache/releases/tag/v4.2.0)\n\n[Compare Source](https://redirect.github.com/actions/cache/compare/v4.1.2...v4.2.0)\n\n##### ⚠️ Important Changes\n\nThe cache backend service has been rewritten from the ground up for improved performance and reliability. [actions/cache](https://redirect.github.com/actions/cache) now integrates with the new cache service (v2) APIs.\n\nThe new service will gradually roll out as of **February 1st, 2025**. The legacy service will also be sunset on the same date. Changes in these release are **fully backward compatible**.\n\n**We are deprecating some versions of this action**. We recommend upgrading to version `v4` or `v3` as soon as possible before **February 1st, 2025.** (Upgrade instructions below).\n\nIf you are using pinned SHAs, please use the SHAs of versions `v4.2.0` or `v3.4.0`\n\nIf you do not upgrade, all workflow runs using any of the deprecated [actions/cache](https://redirect.github.com/actions/cache) will fail.\n\nUpgrading to the recommended versions will not break your workflows.\n\nRead more about the change & access the migration guide: [reference to the announcement](https://redirect.github.com/actions/cache/discussions/1510).\n\n##### Minor changes\n\nMinor and patch version updates for these dependencies:\n\n-   [@&#8203;actions/core](https://redirect.github.com/actions/core): `1.11.1`\n-   [@&#8203;actions/io](https://redirect.github.com/actions/io): `1.1.3`\n-   [@&#8203;vercel/ncc](https://redirect.github.com/vercel/ncc): `0.38.3`\n\n**Full Changelog**: https://github.com/actions/cache/compare/v4...v4.2.0\n\n</details>\n\n<details>\n<summary>danielroe/beasties (beasties)</summary>\n\n### [`v0.2.0`](https://redirect.github.com/danielroe/beasties/releases/tag/v0.2.0)\n\n[Compare Source](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n[compare changes](https://redirect.github.com/danielroe/beasties/compare/v0.1.0...v0.2.0)\n\n##### 🔥 Performance\n\n-   Avoid repetitive string concatenation in favor of .push() for better performance ([#&#8203;48](https://redirect.github.com/danielroe/beasties/pull/48))\n-   Cache selector query ([#&#8203;49](https://redirect.github.com/danielroe/beasties/pull/49))\n-   Cache selector normalization ([#&#8203;47](https://redirect.github.com/danielroe/beasties/pull/47))\n\n##### 🩹 Fixes\n\n-   **beasties-webpack-plugin:** Only pass filename to readFile ([#&#8203;30](https://redirect.github.com/danielroe/beasties/pull/30))\n-   Update preload option with swap-high ([#&#8203;46](https://redirect.github.com/danielroe/beasties/pull/46))\n-   Improve handling of pseudo classes and elements ([#&#8203;58](https://redirect.github.com/danielroe/beasties/pull/58))\n\n##### 💅 Refactors\n\n-   Add missing await + remove redundant async keywords ([#&#8203;25](https://redirect.github.com/danielroe/beasties/pull/25))\n\n##### 📖 Documentation\n\n-   Remove reference to includeSelectors ([dbb12f8](https://redirect.github.com/danielroe/beasties/commit/dbb12f8))\n\n##### 🏡 Chore\n\n-   Run publish command recursively ([46c0329](https://redirect.github.com/danielroe/beasties/commit/46c0329))\n-   Set log level to error in benchmarks to reduce log noise ([#&#8203;26](https://redirect.github.com/danielroe/beasties/pull/26))\n-   Update tests to work on windows ([#&#8203;35](https://redirect.github.com/danielroe/beasties/pull/35))\n-   Bump dependencies ([b8d4c7e](https://redirect.github.com/danielroe/beasties/commit/b8d4c7e))\n-   Add engines.node and tidy workspace deps ([bff7d61](https://redirect.github.com/danielroe/beasties/commit/bff7d61))\n\n##### ❤️ Contributors\n\n-   Daniel Roe ([@&#8203;danielroe](https://redirect.github.com/danielroe))\n-   Alan Agius ([@&#8203;alan-agius4](https://redirect.github.com/alan-agius4))\n-   Ivan Demchuk ([@&#8203;Demivan](https://redirect.github.com/Demivan))\n-   ([@&#8203;xpdota](https://redirect.github.com/xpdota))\n\n</details>\n\n<details>\n<summary>expressjs/express (express)</summary>\n\n### [`v4.21.2`](https://redirect.github.com/expressjs/express/releases/tag/4.21.2)\n\n[Compare Source](https://redirect.github.com/expressjs/express/compare/4.21.1...4.21.2)\n\n#### What's Changed\n\n-   Add funding field (v4) by [@&#8203;bjohansebas](https://redirect.github.com/bjohansebas) in [https://github.com/expressjs/express/pull/6065](https://redirect.github.com/expressjs/express/pull/6065)\n-   deps: path-to-regexp@0.1.11 by [@&#8203;blakeembrey](https://redirect.github.com/blakeembrey) in [https://github.com/expressjs/express/pull/5956](https://redirect.github.com/expressjs/express/pull/5956)\n-   deps: bump path-to-regexp@0.1.12 by [@&#8203;jonchurch](https://redirect.github.com/jonchurch) in [https://github.com/expressjs/express/pull/6209](https://redirect.github.com/expressjs/express/pull/6209)\n-   Release: 4.21.2 by [@&#8203;UlisesGascon](https://redirect.github.com/UlisesGascon) in [https://github.com/expressjs/express/pull/6094](https://redirect.github.com/expressjs/express/pull/6094)\n\n**Full Changelog**: https://github.com/expressjs/express/compare/4.21.1...4.21.2\n\n</details>\n\n<details>\n<summary>terser/terser (terser)</summary>\n\n### [`v5.37.0`](https://redirect.github.com/terser/terser/blob/HEAD/CHANGELOG.md#v5370)\n\n[Compare Source](https://redirect.github.com/terser/terser/compare/v5.36.0...v5.37.0)\n\n-   Reserved object properties from chrome extensions (domprops)\n-   Fix semicolon insertion between a class property without a semicolon `a` and a computed class property `[\"prop\"]`\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.3`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small603-2024-12-05-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.2...v6.0.3)\n\n-   fix: handle postcss load unhandled rejections ([#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)) ([d5fb653](https://redirect.github.com/vitejs/vite/commit/d5fb653c15903ccf84a093f212da86f0327a9a6f)), closes [#&#8203;18886](https://redirect.github.com/vitejs/vite/issues/18886)\n-   fix: make handleInvoke interface compatible with invoke ([#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)) ([a1dd396](https://redirect.github.com/vitejs/vite/commit/a1dd396da856401a12c921d0cd2c4e97cb63f1b5)), closes [#&#8203;18876](https://redirect.github.com/vitejs/vite/issues/18876)\n-   fix: make result interfaces for `ModuleRunnerTransport#invoke` more explicit ([#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)) ([a75fc31](https://redirect.github.com/vitejs/vite/commit/a75fc3193d5e8d8756dfb3a046873e9c222bb6c8)), closes [#&#8203;18851](https://redirect.github.com/vitejs/vite/issues/18851)\n-   fix: merge `environments.ssr.resolve` with root `ssr` config ([#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)) ([3104331](https://redirect.github.com/vitejs/vite/commit/310433106e1e8a0c39dc397e3eace8a71a2416c2)), closes [#&#8203;18857](https://redirect.github.com/vitejs/vite/issues/18857)\n-   fix: no permission to create vite config file ([#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)) ([ff47778](https://redirect.github.com/vitejs/vite/commit/ff47778004d609dbeef7f192783e6f253dd66237)), closes [#&#8203;18844](https://redirect.github.com/vitejs/vite/issues/18844)\n-   fix: remove CSS import in CJS correctly in some cases ([#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)) ([690a36f](https://redirect.github.com/vitejs/vite/commit/690a36ffdb7d6f6568f35a304b4904e7aa475f17)), closes [#&#8203;18885](https://redirect.github.com/vitejs/vite/issues/18885)\n-   fix(config): bundle files referenced with imports field ([#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)) ([2b5926a](https://redirect.github.com/vitejs/vite/commit/2b5926a0e79ce47d22536d38eed2629d326caca0)), closes [#&#8203;18887](https://redirect.github.com/vitejs/vite/issues/18887)\n-   fix(config): make stacktrace path correct when sourcemap is enabled ([#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)) ([20fdf21](https://redirect.github.com/vitejs/vite/commit/20fdf210ee0ac0824b2db74876527cb7f378a9e8)), closes [#&#8203;18833](https://redirect.github.com/vitejs/vite/issues/18833)\n-   fix(css): rewrite url when image-set and url exist at the same time ([#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)) ([d59efd8](https://redirect.github.com/vitejs/vite/commit/d59efd8dfd1c5bf2e7c45c7cdb1c0abc2a05ba02)), closes [#&#8203;18868](https://redirect.github.com/vitejs/vite/issues/18868)\n-   fix(deps): update all non-major dependencies ([#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)) ([5c02236](https://redirect.github.com/vitejs/vite/commit/5c0223636fa277d5daeb4d93c3f32d9f3cd69fc5)), closes [#&#8203;18853](https://redirect.github.com/vitejs/vite/issues/18853)\n-   fix(html): allow unexpected question mark in tag name ([#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)) ([1b54e50](https://redirect.github.com/vitejs/vite/commit/1b54e506a44420d0c8a9e000cf45b1c4f5e33026)), closes [#&#8203;18852](https://redirect.github.com/vitejs/vite/issues/18852)\n-   fix(module-runner): decode uri for file url passed to import ([#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)) ([88e49aa](https://redirect.github.com/vitejs/vite/commit/88e49aa0418cb3f6b579b744ba59daeda68432f3)), closes [#&#8203;18837](https://redirect.github.com/vitejs/vite/issues/18837)\n-   refactor: fix logic errors found by no-unnecessary-condition rule ([#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)) ([ea802f8](https://redirect.github.com/vitejs/vite/commit/ea802f8f8bcf3771a35c1eaf687378613fbabb24)), closes [#&#8203;18891](https://redirect.github.com/vitejs/vite/issues/18891)\n-   chore: fix duplicate attributes issue number in comment ([#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)) ([ffee618](https://redirect.github.com/vitejs/vite/commit/ffee61893cfe9f2b0db4aecf9ddb62ca79c80458)), closes [#&#8203;18860](https://redirect.github.com/vitejs/vite/issues/18860)\n\n</details>\n\n<details>\n<summary>webpack/webpack (webpack)</summary>\n\n### [`v5.97.1`](https://redirect.github.com/webpack/webpack/releases/tag/v5.97.1)\n\n[Compare Source](https://redirect.github.com/webpack/webpack/compare/v5.97.0...v5.97.1)\n\n##### Bug Fixes\n\n-   Performance regression\n-   Sub define key should't be renamed when it's a defined variable\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsInRhcmdldDogbWlub3IiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/29072","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29072)"},{"Id":"2721541487","IsPullRequest":false,"CreatedAt":"2024-12-06T09:14:07","Actor":"erikgiovani","Number":"29070","RawContent":null,"Title":"Improve the default angular template and I want to add it to the cli.","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nI think the current design can be improved, This is how it currently looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/29bbe795-404a-4215-ac2b-1788d15c268f)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/fe5718a4-4adc-4bce-be85-8d5f1ad8b613)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/21ae9a7a-ade2-47c3-b5f7-fb5d878ac6e6)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/6671b1fc-6ea2-4680-adeb-06c4daca09e4)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/3876c386-833c-4be6-b42c-4fb4f2fe24b9)\n\n\n\n### Describe the solution you'd like\n\nI made a design with 27 lines of code less than the current one and it still uses svg, This is how it looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/76af5e77-c238-4323-8017-1120ccf21a57)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/a98ec057-34da-4c0f-8356-322eb2eecf0d)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/e08bee47-ab86-46a0-bd57-72161e6822de)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/a0ec1753-6b78-4641-a0bd-1f5cee402aae)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/83a806e1-f9ca-4875-b999-02cdb7222202)\n\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29070","RelatedDescription":"Closed issue \"Improve the default angular template and I want to add it to the cli.\" (#29070)"},{"Id":"2723082183","IsPullRequest":false,"CreatedAt":"2024-12-05T21:37:26","Actor":"naveedahmed1","Number":"29074","RawContent":null,"Title":"Enhance renderMode Configuration for Angular Router","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe introduction of the `renderMode` option in Angular Router is a fantastic feature, allowing developers to configure whether a route should be server-rendered, pre-rendered, or client-side rendered. However, the current implementation requires adding a separate configuration in the application's providers list, specifying which routes require SSR.\n\n```\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: '**',\n    renderMode: RenderMode.Server\n  }\n];\n```\n\n`provideServerRoutesConfig(serverRoutes)`\n\nThis approach, while functional, introduces redundancy and makes the configuration less intuitive.\n\n**Proposal**:\n\nAllow specifying the renderMode directly within the route definition itself. This would streamline the configuration, making it more straightforward and easier to understand. Developers could define the rendering mode for each route without needing a separate list in the providers.\n\n**Example**:\n\n```\nimport { Routes, RenderMode } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    renderMode: RenderMode.Server\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n    renderMode: RenderMode.Prerender\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    renderMode: RenderMode.Client // Default\n  }\n];\n```\n\n**Benefits**:\n\n- Simplified Configuration: No need for a separate provider configuration. The renderMode is specified where routes are defined.\n- Better Readability: The rendering mode is directly associated with the route, making it easier to understand at a glance.\n- Reduced Redundancy: Avoids the need to maintain a separate list of server-rendered routes, reducing the risk of mismatch or errors.\n- Backward Compatibility:\n\nIf the renderMode property is not specified in the route, it would default to RenderMode.Client, ensuring backward compatibility.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29074","RelatedDescription":"Open issue \"Enhance renderMode Configuration for Angular Router\" (#29074)"},{"Id":"2720910532","IsPullRequest":true,"CreatedAt":"2024-12-05T19:24:30","Actor":"jkrems","Number":"29066","RawContent":null,"Title":"fix(@angular-devkit/build-angular): webpack config transform for karma","State":"closed","Body":"This PR is 10% passing an argument that got dropped during refactoring and 90% finding a way to test the behavior.\r\n\r\nI'm making up a new concept for the harness (`additionalExecuteArguments`) which is pretty ugly but I couldn't think of a cleaner way of doing it. There might be a way to capture rest arguments of the `execute` function signature inside of the harness to make the cast go away. But I'm not 100% convinced that the more complicated types leaking throughout the harness code would really be worth it for this edge case.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/29003","Url":"https://github.com/angular/angular-cli/pull/29066","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): webpack config transform for karma\" (#29066)"},{"Id":"2721166801","IsPullRequest":true,"CreatedAt":"2024-12-05T19:18:35","Actor":"alan-agius4","Number":"29069","RawContent":null,"Title":"refactor(@angular/build): move `getDepOptimizationConfig` into utils file","State":"closed","Body":"\r\nReduce the amount of code in vite-server.ts\r\n","Url":"https://github.com/angular/angular-cli/pull/29069","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): move `getDepOptimizationConfig` into utils file\" (#29069)"},{"Id":"2721034857","IsPullRequest":true,"CreatedAt":"2024-12-05T17:48:55","Actor":"alan-agius4","Number":"29068","RawContent":null,"Title":"docs: release notes for the v19.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29068","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.4 release\" (#29068)"},{"Id":"2721029076","IsPullRequest":true,"CreatedAt":"2024-12-05T17:41:03","Actor":"alan-agius4","Number":"29067","RawContent":null,"Title":"Bump version to \"v19.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29067","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.4\" with changelog.\" (#29067)"},{"Id":"2720884918","IsPullRequest":true,"CreatedAt":"2024-12-05T17:30:57","Actor":"alan-agius4","Number":"29065","RawContent":null,"Title":"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`","State":"closed","Body":"\r\n\r\nThis commit ensures consistent behavior between `ng build` and `ng serve`. Previously, `ng serve` did not display an error message when Node.js built-in modules were included in browser bundles. By default, Vite replaces Node.js built-ins with empty modules, which can lead to unexpected runtime issues. This update addresses the problem by surfacing clear error messages, providing better developer feedback and alignment between the two commands.\r\n\r\nCloses: #27425\r\n(cherry picked from commit 06f478bc18d3e0daa8902d0fef94e55a5d052348)\r\n","Url":"https://github.com/angular/angular-cli/pull/29065","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`\" (#29065)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2728143888","IsPullRequest":true,"CreatedAt":"2024-12-09T20:01:51","Actor":"andrewseguin","Number":"30155","RawContent":null,"Title":"fix(material/form-field): move error aria-live to parent container","State":"open","Body":"This is a slight change in behavior where the aria-live is always set to polite even if the user puts a different `aria-live` value on the error. Based on internal usage, this is very rare (and not part of the documented API)\r\n\r\nFixes #29616 ","Url":"https://github.com/angular/components/pull/30155","RelatedDescription":"Open PR \"fix(material/form-field): move error aria-live to parent container\" (#30155)"},{"Id":"2726744120","IsPullRequest":false,"CreatedAt":"2024-12-09T18:53:11","Actor":"janek64","Number":"30150","RawContent":null,"Title":"bug(Timepicker): Integration with Datepicker does not work with FormControl","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a `Timepicker` and `Datepicker` are bound to the same `FormControl` with a `Date` type, selecting a new value on either input will cause the data of the other input to be reset/removed. For example, when a date is already selected and then the time is selected, the date portion of the value will be reset to the current date.\n\nThe [documentation](https://material.angular.io/components/timepicker/overview#integration-with-matdatepicker) only demonstrates the integration via `ngModel`. Consequently, it is unclear to me whether it should also work with `FormControl`. Based on the description, I would have expected it. If it is explicitly not supported, I suggest that a corresponding hint should be added since using Reactive Forms is one of the most common ways for managing the values of inputs.\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts](https://stackblitz.com/edit/components-issue-starter-qszwe9ry?file=src%2Fapp%2Fexample%2Fexample.component.ts)\nSteps to reproduce:\n1. Select a date that is not the current date (e.g tomorrow). The displayed value will correctly display the selected date.\n2. Select any time. The displayed value will display the _current date_ and the selected time instead of the _selected date_.\n3. Select a date that is not the current date. The displayed date will display _0:00_ as the time instead of _selected time_.\n\n\n### Expected Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl`, but keep the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl`, but keep the selected date.\n\n### Actual Behavior\n\n1. Selections in the `Datepicker` change the date portion of the `FormControl` and discard the selected time.\n2. Selections in the `Timepicker` change the time portion of the `FormControl` and discard the selected date.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.3\n- Browser(s): Firefox 133, Chrome 131\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\n","Url":"https://github.com/angular/components/issues/30150","RelatedDescription":"Closed issue \"bug(Timepicker): Integration with Datepicker does not work with FormControl\" (#30150)"},{"Id":"2725053755","IsPullRequest":true,"CreatedAt":"2024-12-09T16:59:12","Actor":"crisbeto","Number":"30147","RawContent":null,"Title":"docs: archive changelog before v17","State":"closed","Body":"The changelog file was getting too big which made it hard to open online and soon Github was going to prevent it from opening at all. These changes move the changelog entries before v17 to the archive.","Url":"https://github.com/angular/components/pull/30147","RelatedDescription":"Closed or merged PR \"docs: archive changelog before v17\" (#30147)"},{"Id":"2722566709","IsPullRequest":true,"CreatedAt":"2024-12-09T16:43:25","Actor":"crisbeto","Number":"30138","RawContent":null,"Title":"fix(material/paginator): ignore clicks on disabled buttons","State":"closed","Body":"The changes in #29379 made the paginator interactive while they're disabled in order to improve accessibility, but as a result it also allows for the buttons to navigate while they're disabled.\r\n\r\nThese changes add internal checks to ensure that the buttons don't navigate while disabled. I've also cleaned up the logic a bit so we don't have four different places that deal with navigations.\r\n\r\nFixes #30124.","Url":"https://github.com/angular/components/pull/30138","RelatedDescription":"Closed or merged PR \"fix(material/paginator): ignore clicks on disabled buttons\" (#30138)"},{"Id":"2721322153","IsPullRequest":false,"CreatedAt":"2024-12-09T16:42:47","Actor":"horesse","Number":"30134","RawContent":null,"Title":"bug(Timepicker): Disabled not working in FormControl","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe disabled property does not work correctly in timepicker. It blocks the time selection, but the selection from the menu is available\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/czbajk?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.html\nSteps to reproduce: \n1. Use FormControl\n2. Disable input\n3. U can change time\n\n\n### Expected Behavior\n\nLock time selector\n\n### Actual Behavior\n\nTime selection is available\n\n### Environment\n\n- Angular: 19.0.0 - 19.0.2\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30134","RelatedDescription":"Closed issue \"bug(Timepicker): Disabled not working in FormControl\" (#30134)"},{"Id":"2722467646","IsPullRequest":true,"CreatedAt":"2024-12-09T16:42:46","Actor":"crisbeto","Number":"30137","RawContent":null,"Title":"fix(material/timepicker): disable toggle if timepicker is disabled","State":"closed","Body":"Fixes that the timepicker toggle wasn't considered as disabled automatically when the timepicker is disabled.\r\n\r\nFixes #30134.","Url":"https://github.com/angular/components/pull/30137","RelatedDescription":"Closed or merged PR \"fix(material/timepicker): disable toggle if timepicker is disabled\" (#30137)"},{"Id":"2727505922","IsPullRequest":false,"CreatedAt":"2024-12-09T15:48:28","Actor":"naithagoni","Number":"30154","RawContent":null,"Title":"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**Steps to Reproduce:**\n\n1. Open the application and navigate to the stepper component.\n2. Select a user in Step 1.\n3. Proceed to Step 2, where the `getProducts` method sets the value of the `productCtrl` control programmatically using `patchValue`.\n4. Open the autocomplete dropdown for the product selection.\n\n**Code Snippet:**\n\n```typescript\n<mat-stepper\n  linear\n  #stepper\n  (selectedIndexChange)=\"selectedStepperIndex.set($event)\"\n>\n  <mat-step [stepControl]=\"userFormGroup\">\n    <form class=\"example-form\" [formGroup]=\"userFormGroup\">\n      <ng-template matStepLabel>Step 1</ng-template>\n      @defer (when selectedStepperIndex() === 0; prefetch on idle) {\n      <user [form]=\"userFormGroup\"></user>\n      }\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"productFormGroup\">\n    <form [formGroup]=\"productFormGroup\">\n      <ng-template matStepLabel>Step 2</ng-template>\n      @defer (when selectedStepperIndex() === 1; prefetch on idle) {\n      <product\n        [form]=\"productFormGroup\"\n        [selectedUserId]=\"userFormGroup.controls.userCtrl.value?.id ?? ''\"\n      ></product>\n      }\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\n    </div>\n  </mat-step>\n</mat-stepper>\n\n\nimport { Component, inject, signal } from '@angular/core';\nimport {\n  FormBuilder,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserComponent } from 'src/user/user.component';\nimport { ProductComponent } from 'src/product/product.component';\n\nexport interface User {\n  id: string;\n  name: string;\n}\n\nexport interface Product {\n  id: string;\n  desc: string;\n}\n\nexport interface UserForm {\n  userCtrl: FormControl<User | null>;\n}\n\nexport interface ProductForm {\n  productCtrl: FormControl<Product | null>;\n}\n\n@Component({\n  selector: 'stepper-editable-example',\n  templateUrl: 'stepper-editable-example.html',\n  styleUrl: 'stepper-editable-example.css',\n  imports: [\n    MatButtonModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    UserComponent,\n    ProductComponent,\n  ],\n})\nexport class StepperEditableExample {\n  private _formBuilder = inject(FormBuilder);\n  selectedStepperIndex = signal(0);\n\n  userFormGroup: FormGroup<UserForm> = this._formBuilder.group({\n    userCtrl: [null as User | null, Validators.required],\n  });\n\n  productFormGroup: FormGroup<ProductForm> = this._formBuilder.group({\n    productCtrl: [null as Product | null, Validators.required],\n  });\n}\n\n\n<mat-form-field class=\"example-full-width\">\n<mat-label>User</mat-label>\n<input\n  type=\"text\"\n  placeholder=\"Pick one\"\n  matInput\n  [formControl]=\"form.controls.userCtrl\"\n  [matAutocomplete]=\"auto\"\n/>\n<mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n  @for (user of users; track user) {\n  <mat-option [value]=\"user\">{{ user.name }}</mat-option>\n  }\n</mat-autocomplete>\n</mat-form-field>\n\n\nimport { Component, Input } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { User, UserForm } from 'src/example/stepper-editable-example';\n\n@Component({\n  selector: 'user',\n  templateUrl: 'user.component.html',\n  styleUrl: 'user.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class UserComponent {\n  @Input() form: FormGroup<UserForm>;\n  users: User[] = [\n    {\n      id: '1',\n      name: 'John',\n    },\n    {\n      id: '2',\n      name: 'David',\n    },\n    {\n      id: '3',\n      name: 'Smith',\n    },\n  ];\n\n  displayFn(user: User): string {\n    return user ? user.name : '';\n  }\n}\n\n\n<div style=\"display: flex; flex-direction: column;\">\n<mat-form-field class=\"example-full-width\">\n  <mat-label>Product</mat-label>\n  <input\n    type=\"text\"\n    placeholder=\"Pick one\"\n    matInput\n    [formControl]=\"form.controls.productCtrl\"\n    [matAutocomplete]=\"autoProduct\"\n  />\n  <mat-autocomplete\n    #autoProduct=\"matAutocomplete\"\n    [displayWith]=\"displayProductFn\"\n  >\n    @for (product of products; track product) {\n    <mat-option [value]=\"product\">{{ product.desc }}</mat-option>\n    }\n  </mat-autocomplete>\n</mat-form-field>\n</div>\n\n\nimport {\n  Component,\n  Injectable,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  Product,\n  ProductForm,\n  User,\n} from 'src/example/stepper-editable-example';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'product',\n  templateUrl: 'product.component.html',\n  styleUrl: 'product.component.css',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ProductComponent implements OnInit {\n  @Input() form: FormGroup<ProductForm>;\n  private _selectedUserId: string = '';\n  private isFirstChange = true;\n  @Input()\n  get selectedUserId(): string {\n    return this._selectedUserId;\n  }\n  set selectedUserId(value: string) {\n    if (this._selectedUserId !== value) {\n      this._selectedUserId = value;\n      if (!this.isFirstChange) {\n        console.log('SETTER INSIDE IF...');\n        this.onSelectedUserIdChange();\n      }\n      this.isFirstChange = false;\n    }\n  }\n  products: Product[] = [];\n\n  constructor(private productService: ProductService) {}\n\n  ngOnInit() {\n    if (this.selectedUserId) {\n      this.getProducts();\n    }\n  }\n\n  displayProductFn(product: Product): string {\n    return product ? product.desc : '';\n  }\n\n  getProducts() {\n    this.productService\n      .getProductsService(this.selectedUserId ? this.selectedUserId : '')\n      .subscribe((products) => {\n        this.products = products;\n        this.form.patchValue({\n          productCtrl: products[1],\n        });\n      });\n  }\n\n  private onSelectedUserIdChange(): void {\n    this.form.controls.productCtrl.setValue(null);\n    this.getProducts();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n  private sub = new BehaviorSubject<Product[]>([]);\n\n  private productMap: { [key: string]: Product[] } = {\n    '1': [\n      {\n        id: '1',\n        desc: 'One',\n      },\n      {\n        id: '2',\n        desc: 'Two',\n      },\n      {\n        id: '3',\n        desc: 'Three',\n      },\n    ],\n    '2': [\n      {\n        id: '1',\n        desc: 'Four',\n      },\n      {\n        id: '2',\n        desc: 'Five',\n      },\n      {\n        id: '3',\n        desc: 'Six',\n      },\n    ],\n    '3': [\n      {\n        id: '1',\n        desc: 'Seven',\n      },\n      {\n        id: '2',\n        desc: 'Eight',\n      },\n      {\n        id: '3',\n        desc: 'Nine',\n      },\n    ],\n  };\n\n  public observable$: Observable<Product[]> = this.sub.asObservable();\n  constructor(private httpClient: HttpClient) {}\n\n  getProductsService(userId: string): Observable<Product[]> {\n    const products = this.productMap[userId] || [];\n    return of(products);\n    // return this.httpClient.get<Product[]>(http://api/${userId});\n  }\n}\n```\n\n### Reproduction\n\nStackBlitz link: [mat-autocomplete with mat-stepper](https://stackblitz.com/edit/zzialkdj-d8rtr2sa)\n\n\n### Expected Behavior\n\nThe `<mat-option>` corresponding to the value set by `patchValue` should visually appear as selected in the autocomplete dropdown when the component is loaded.\n\n![Image](https://github.com/user-attachments/assets/09386ba4-6867-4467-b430-3ad7ae15da26)\n\n\n### Actual Behavior\n\nWhen setting the value of the product form control via `patchValue` inside the `getProducts` method, the form control updates its value correctly. However, the corresponding `<mat-option>` in the autocomplete dropdown does not visually show as selected on the initial load of the component.\n\n![Image](https://github.com/user-attachments/assets/2a862094-5b17-4b30-a53a-b7b197180e7d)\n\n\n### Environment\n\n- Angular: `18.2.9`\n- CDK/Material: `18.2.10`\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30154","RelatedDescription":"Open issue \"bug(mat-autocomplete): Dropdown Option `<mat-option>`  Not Visually Selected After Setting Value with `patchValue` in mat-autocomplete\" (#30154)"},{"Id":"2727447736","IsPullRequest":false,"CreatedAt":"2024-12-09T15:30:19","Actor":"XavierDupessey","Number":"30153","RawContent":null,"Title":"bug(matAutocomplete): Autocomplete not opening with shadow DOM","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\n\nThe `MatAutocomplete` does not open when starting writing text if the Shadow DOM encapsulation is used.\nWe have to click to trigger the opening.\n\nWithout Shadow DOM encapsulation (working):\nhttps://github.com/user-attachments/assets/911e3de9-83c3-412e-a87e-6f994298fead\n\nWith Shadow DOM encapsulation (NOT working):\nhttps://github.com/user-attachments/assets/c0ced996-2bf9-40d5-84ba-d2d5e490e10a\n\nThank you,\nXavier\n\n### Reproduction\n\nCheckout: https://github.com/XavierDupessey/ng-14-mat-autocomplete-issue\nRun: `npm start`\nOpen `http://localhost:4200`\n\n### Expected Behavior\n\nThe autocomplete should open when entering text even when Shadow DOM encapsulation is enabled.\n\n### Actual Behavior\n\nSelect a value from the autocomplete, then input text to search another one: the autocomplete does not open.\n\n### Environment\n\n- Angular: 14\n- CDK/Material: 14\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows","Url":"https://github.com/angular/components/issues/30153","RelatedDescription":"Open issue \"bug(matAutocomplete): Autocomplete not opening with shadow DOM\" (#30153)"},{"Id":"2727327112","IsPullRequest":false,"CreatedAt":"2024-12-09T14:59:22","Actor":"michaelstokes93","Number":"30152","RawContent":null,"Title":"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `mat-chip-grid` component in Angular Material includes an `aria-disabled` and `aria-invalid` attribute by default, even when not explicitly set in the application. This attributes are not valid on `mat-chip-grid` elements and results in accessibility violations flagged by tools like Siteimprove.\n\n### Reproduction\n\n1. Use a `mat-chip-grid` in an Angular component.\n2. Render the component and inspect the DOM.\n3. Observe that `aria-disabled=\"false\"` and `aria-false=\"false\"`is automatically added to the `mat-chip-grid`.\n\n\n### Expected Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes should only be applied to elements or roles that support it, such as interactive components.\n\n\n### Actual Behavior\n\nThe `aria-disabled` and `aria-invalid` attributes is added to the `mat-chip-grid` component, which results in accessibility violations.\n\n\n### Environment\n\n- Angular: 16.2.0\n- CDK/Material: 16.2.0\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30152","RelatedDescription":"Open issue \"bug(mat-chip-grid): Accessibility Issue: ARIA Attribute Unsupported or Prohibited\" (#30152)"},{"Id":"2726807683","IsPullRequest":false,"CreatedAt":"2024-12-09T14:12:39","Actor":"kai1992cool","Number":"30151","RawContent":null,"Title":"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the below code block.\n\n```\n<form class=\"example-form\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input\n      type=\"email\"\n      matInput\n      [formControl]=\"emailFormControl\"\n      [errorStateMatcher]=\"matcher\"\n      placeholder=\"Ex. pat@example.com\"\n    />\n    @if(emailFormControl?.invalid && emailFormControl?.touched){ \n      @for(error of getErrorMessages(''); track i; let i = $index){\n        <mat-error> {{ error }} </mat-error>\n      } \n    }\n  </mat-form-field>\n</form>\n```\n\nThe errors get displayed inside the input field, which is wrong.\n\nI know this is due to content projection of `mat-error` but am not sure if its a bug or an expected result.\n\nCould you please advice.\n\n### Reproduction\n\nStackBlitz link: [stackblitz](https://stackblitz.com/edit/mpcfhkum?file=src%2Fexample%2Finput-error-state-matcher-example.html,src%2Fexample%2Finput-error-state-matcher-example.ts)\nSteps to reproduce:\n1. touch the input\n2. tab out or click elsewhere, the errors are shown inside the input\n\n\n### Expected Behavior\n\nthe error should display outside\n\n### Actual Behavior\n\nthe error are displayed inside\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material: ^19.0.0\n- Browser(s): Version 131.0.6778.109 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30151","RelatedDescription":"Closed issue \"MAT INPUT: The error messages show inside the form field, when a @if and @for are used to show the error messages.\" (#30151)"},{"Id":"2726531398","IsPullRequest":true,"CreatedAt":"2024-12-09T09:50:20","Actor":"crisbeto","Number":"30149","RawContent":null,"Title":"fix(material/timepicker): deserialize ControlValueAccessor values correctly","State":"open","Body":"Fixes that the timepicker was clobbering otherwise parseable values when they're assigned through the `ControlValueAccessor`.\r\n\r\nFixes #30140.","Url":"https://github.com/angular/components/pull/30149","RelatedDescription":"Open PR \"fix(material/timepicker): deserialize ControlValueAccessor values correctly\" (#30149)"},{"Id":"2726475553","IsPullRequest":true,"CreatedAt":"2024-12-09T09:26:16","Actor":"crisbeto","Number":"30148","RawContent":null,"Title":"fix(material/menu): decouple menu lifecycle from animations","State":"open","Body":"Reworks the menu so that its removal isn't bound by animations. The current approach is somewhat brittle and makes it difficult to eventually switch to a fully CSS-based animation.","Url":"https://github.com/angular/components/pull/30148","RelatedDescription":"Open PR \"fix(material/menu): decouple menu lifecycle from animations\" (#30148)"},{"Id":"2724827013","IsPullRequest":false,"CreatedAt":"2024-12-07T21:48:42","Actor":"tommyc38","Number":"30146","RawContent":null,"Title":"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning","State":"open","Body":"### Feature Description\n\nCurrently, the only way to apply css to an overlay and target styles to a specific overlay position relative to a target element (e.g. above, below, etc.), you have to provide positions to the strategy you are using (such is this case in your autocomplete trigger where you need to swap the corner radius of the panel depending on if the position is above or below the target element).  If you want to use the defaults of your connected position strategy, without providing positions to a position's strategy, it would be helpful to leverage css classnames that were automatically applied depending on whatever the position the cdk chose to apply.  \n\n### Use Case\n\nA use case is exactly what you are doing in your autocomplete trigger.  Rather than using an explicit css class we could leverage selectors supplied by the cdk overlay.  For example, if the overlay was positioned above an element, the cdk would automatically apply '.cdk-overlay-positioned-above') to the parent element so we could leverage it to directly apply styles to the content in our overlay appropriately without needing to do so explicitly in our code.  A common use case other than corner radius would be css animations where we would need to know the position to appropriately target our animations (slide down or slide up, for example).  This would simplify our code and make applying styles under different positions much easier.","Url":"https://github.com/angular/components/issues/30146","RelatedDescription":"Open issue \"feat(cdk-overlay): add css position classnames to parent panel when strategy is connected positioning\" (#30146)"},{"Id":"2724669305","IsPullRequest":false,"CreatedAt":"2024-12-07T15:15:41","Actor":"michaelbe812","Number":"30145","RawContent":null,"Title":"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nif it is a user-issue/skill-issue on my side, excuse me to waste your time 😅\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-6rd4gzr4?description=An%20angular-cli%20project%20based%20on%20@angular/animations,%20@angular/common,%20@angular/compiler,%20@angular/core,%20@angular/forms,%20@angular/platform-browser,%20@angular/platform-browser-dynamic,%20@angular/router,%20core-js,%20rxjs,%20tslib%20and%20zone.js&file=src%2Fmain.ts&file=src%2Fglobal_styles.css&template=node&title=Angular%20Starter\nSteps to reproduce:\nClick the button in the first container to open a cdkMenu.\nUpdate the position with the controls above. you will notive that the projected overlay is not positioned differently. \n\nIf you change the values for the initial position you will notice that the menu is positioned differently initially. \n\nHint: the second container below uses cdkOverlayOrigin and cdkConnectedOverlay for comparision.\n\nHere's also a short video\n\nhttps://github.com/user-attachments/assets/1bfeee47-9192-45b4-a247-e9d7fd7c6524\n\n\n### Expected Behavior\n\nThe cdkMenu-Position should react to new values via cdkMenuPosition-input\n\n### Actual Behavior\n\nSee repro\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n\n","Url":"https://github.com/angular/components/issues/30145","RelatedDescription":"Open issue \"bug(cdkMenu): changing cdkMenuPosition during runtime is not updating the position correctly\" (#30145)"},{"Id":"2724367612","IsPullRequest":false,"CreatedAt":"2024-12-07T05:17:02","Actor":"bitrxjs","Number":"30144","RawContent":null,"Title":"feat(MatRipple):  Do not trigger it when scrolling(touchstart)","State":"open","Body":"### Feature Description\n\nWhenever MatNavList is scrolled it triggers ripple effect on touchstart, instead it should emulate native android behaviour of only trigger when tap/click happens on mobile devices.\n\nit looks very janky on ios & other mobile devices when user start scrolling fast.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30144","RelatedDescription":"Open issue \"feat(MatRipple):  Do not trigger it when scrolling(touchstart)\" (#30144)"},{"Id":"2723181191","IsPullRequest":false,"CreatedAt":"2024-12-06T14:22:46","Actor":"russelporosky","Number":"30143","RawContent":null,"Title":"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is simply a quality of life improvement request.\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\nI've overridden `on-surface` and `surface` in [the recommended manner](https://material.angular.io/guide/theming#system-tokens), but the IDE (IntelliJ in this screenshot) won't pick those modifications up.\n\nThe rendered page in the browser shows the correct colour, this is strictly an issue within the IDE.\n\nThe concern is that deeper into the project, when a developer is using Material CSS variables, the colour hints will not match what they are expecting (and needing) which will cause confusion and potentially result in additional variables being created by the developer that aren't actually needed, just so the IDE hints match their expectations.\n\n### Reproduction\n\nSteps to reproduce:\n1. add Material to an Angular project\n2. override a theme variable such as `surface`\n3. use the matching CSS property in a rule (`--mat-sys-on-surface` in this example)\n4. observe that the IDE colour hint does not match the overridden value\n\n![Image](https://github.com/user-attachments/assets/aa8104c0-6103-44c7-8482-f96ae4d51fa9)\n\n\n### Expected Behavior\n\nThe colour hints in the sidebar should show the overridden colour(s) instead of the defaults.\n\n### Actual Behavior\n\nWhat I see in the sidebar are the defaults for the current theme.\n\n### Environment\n\n- Angular: 19.0.3\n- CDK/Material: 19.0.2\n- Browser(s): N/A\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n- IDE: IntelliJ IDEA 2024.3 (Ultimate Edition)","Url":"https://github.com/angular/components/issues/30143","RelatedDescription":"Open issue \"bug(mat.theme-overrides): Overridden CSS properties not displaying correctly in IDE hints\" (#30143)"},{"Id":"2723064933","IsPullRequest":true,"CreatedAt":"2024-12-06T13:28:15","Actor":"crisbeto","Number":"30142","RawContent":null,"Title":"fix(material/select): add opt-in input that allows selection of nullable options","State":"open","Body":"By default `mat-select` treats options with nullable values as \"reset options\", meaning that they can't be selected, but rather they clear the select's value. This behavior is based on how the native `select` works, however in some cases it's not desirable. These changes add an input that users can use to opt out of the default behavior.\r\n\r\nFixes #25120.","Url":"https://github.com/angular/components/pull/30142","RelatedDescription":"Open PR \"fix(material/select): add opt-in input that allows selection of nullable options\" (#30142)"},{"Id":"2723035715","IsPullRequest":false,"CreatedAt":"2024-12-06T13:14:07","Actor":"jfduhamel","Number":"30141","RawContent":null,"Title":"M3 material custom theme (doc+ howto)","State":"open","Body":"### Documentation Feedback\n\nhello angular / material / m3,\nwhere is the official doc of material 3 for angular material ?\nit's a nightmare to construct my CUSTOM scss theme since i moved from angular 17 to 19\nprimary secondary tertiary neutral ...\ni only need a primary why it seems i need to give the others secondary .....\nnowhere i can find a real example !\nhttps://material.angular.io/ its only about components\n\noh yeah using a prebuilt theme no souci but the other way...\n\nam i the only one in this situation ?\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/30141","RelatedDescription":"Open issue \"M3 material custom theme (doc+ howto)\" (#30141)"},{"Id":"2722983802","IsPullRequest":false,"CreatedAt":"2024-12-06T12:48:51","Actor":"horesse","Number":"30140","RawContent":null,"Title":"bug(Timepicker): Luxon provider does not display date if it exists","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf there is an initial value in formControl, then when using provideLuxonDateAdapter(), the date will not be displayed when the page is loaded, but if we select the time, it will be displayed correctly.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/8xbgfc-eqfhl1?file=src%2Fexample%2Ftimepicker-forms-example.ts\nSteps to reproduce:\n1. Open Page\n2. Check value in formControl\n3. Timepicker input is empty\n\n\n### Expected Behavior\n\nTimepicker value is empty when component is initialized even if formControl has value\n\n### Actual Behavior\n\nDisplay time\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30140","RelatedDescription":"Open issue \"bug(Timepicker): Luxon provider does not display date if it exists\" (#30140)"},{"Id":"2722982455","IsPullRequest":false,"CreatedAt":"2024-12-06T12:48:06","Actor":"SeraphCoding","Number":"30139","RawContent":null,"Title":"bug(Menu): fix menu panels not closing when no trigger is present","State":"open","Body":"### Is this a regression?\nNo.\n\n### The previous version in which this bug was not present was\n\nUnknown.\n\n### Description\n\nMenuPanels cannot be closed when they do not have an active trigger set.\nA scenario where unsetting the trigger during runtime may be wanted is when the button is meant to open a context menu or a bottom sheet depending on the size of the viewport and so needs to switch between a click handler (that opens a bottom sheet) or a matMenu Trigger that opens a menu panel during runtime. An example application has been setup for such a scenario (without the click handler, just temporarily setting the menu trigger to null during runtime)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ku1ehf?file=src%2Fexample%2Fmenu-icons-example.html\nSteps to reproduce:\n1. Downsize the window width until the button text says \"has Trigger\" (less than 600px)\n2. Hit the button\n3. The MatMenuPanel should be open now showing some dummy options - do not click anything\n4. Now upsize the window width until the button says \"no Trigger\" - ensure that the menu panel remains open during that time\n5. Try clicking a menu option or anywhere in the app window that would normally close the MatMenuPanel\n\n### Expected Behavior\n\nThe menu panel closes when an option is selected or anywhere within the app window outside the menu panel is clicked.\n\n### Actual Behavior\n\nWhen the trigger to open the menu is lost - the menu panel can no longer close until it regains a trigger.\n\n### Environment\n\n- Angular: 19.0.1\n- CDK/Material: 19.0.1\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Unrelated.","Url":"https://github.com/angular/components/issues/30139","RelatedDescription":"Open issue \"bug(Menu): fix menu panels not closing when no trigger is present\" (#30139)"},{"Id":"2721329785","IsPullRequest":false,"CreatedAt":"2024-12-06T06:00:10","Actor":"horesse","Number":"30135","RawContent":null,"Title":"bug(Timepicker): With changing the time, date is changing too","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn FormControl, when the time changes, the date also changes\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/czbajk-h7xm7v?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.ts\nSteps to reproduce:\n1. Add FormControl\n2. Add DatePicker and TimePicker\n3. Change Date\n4. Change Time\n5. See formControl value and value in DatePicker\n\n\n### Expected Behavior\n\nChange only time in value\n\n### Actual Behavior\n\nChange date\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome \n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30135","RelatedDescription":"Closed issue \"bug(Timepicker): With changing the time, date is changing too\" (#30135)"},{"Id":"2721519823","IsPullRequest":true,"CreatedAt":"2024-12-05T21:58:49","Actor":"kseamon","Number":"30136","RawContent":null,"Title":"feat(cdk-experimental/column-resize): Support column size persistance…","State":"open","Body":"… hooks","Url":"https://github.com/angular/components/pull/30136","RelatedDescription":"Open PR \"feat(cdk-experimental/column-resize): Support column size persistance…\" (#30136)"},{"Id":"2720316470","IsPullRequest":true,"CreatedAt":"2024-12-05T19:27:21","Actor":"crisbeto","Number":"30131","RawContent":null,"Title":"build: update to TypeScript 5.7","State":"closed","Body":"Updates the repo to the latest version of TypeScript.","Url":"https://github.com/angular/components/pull/30131","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.7\" (#30131)"},{"Id":"2720654296","IsPullRequest":true,"CreatedAt":"2024-12-05T15:19:26","Actor":"josephperrott","Number":"30133","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30133","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#30133)"},{"Id":"2720353149","IsPullRequest":false,"CreatedAt":"2024-12-05T12:58:45","Actor":"keatkeat87","Number":"30132","RawContent":null,"Title":"bug(MatTooltip): body line-height will affect tooltip gap","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\napp.component.html\n\n`<button mat-button #matTooltip=\"matTooltip\" matTooltip=\"Info about the action\" style=\"background-color: pink;\">Action</button>`\n\nstyles.scss\n```\nbody {\n  line-height: 24px;\n}\n```\n\nThe problems:\nthere is a 1px gap between button and tooltip.\n![Image](https://github.com/user-attachments/assets/ba665f90-a94b-41f8-ac20-7916249ee868)\nif line-height 28px, the gap will become 2px.\n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/github/keatkeat87/ng-mat-tooltips-gap-issue\nSteps to reproduce:\n1. ng serve --open\n2. hover to button\n\n\n### Expected Behavior\n\nno extra 1px gap.\n\n### Actual Behavior\n\nthere is a 1px extra gap\n\n### Environment\n\nAngular CLI: 19.0.3\nNode: 20.18.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@angular/cdk                    19.0.2\n@angular/material               19.0.2\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0","Url":"https://github.com/angular/components/issues/30132","RelatedDescription":"Open issue \"bug(MatTooltip): body line-height will affect tooltip gap\" (#30132)"},{"Id":"2719800037","IsPullRequest":false,"CreatedAt":"2024-12-05T09:04:24","Actor":"ptu14","Number":"30130","RawContent":null,"Title":"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the `@angular/cdk/menu` directive is applied to a scrollable element, it causes scroll behavior abnormalities. Clicking in the empty space within the scrollable area causes the content to unexpectedly scroll to the top. Additionally, general mouse scrolling behavior becomes erratic and unpredictable.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gwxbpu?file=src%2Fexample%2Fcdk-menu-inline-example.css,src%2Fexample%2Fcdk-menu-inline-example.html\nSteps to reproduce:\n- [x] 1. Create a scrollable container with some content that exceeds the container height\n- [x] 2. Apply the @angular/cdk/menu directive to this container\n- [ ] 3. Try to scroll using the mouse:\n- [ ] 4. Click in the empty space within the scrollable area\n\nvideo:\nhttps://github.com/user-attachments/assets/1604a8f4-06b6-4bbf-809d-de0ecb2bb2f6\n\n\n### Expected Behavior\n\nClicking in empty space of the scrollbar should behave like natively, i.e. actually scroll down\n\n### Actual Behavior\n\nClicking in empty space within the scrollable area causes the content to immediately scroll to the top\n\n### Environment\n\n- Angular: 19.0.2\n- CDK/Material: 19.0.2\n- Browser(s): Chrome Version 131.0.6778.85 (Official Build) (arm64), Safari Version 18.1 (18619.2.8.111.5, 18619), Probably all browsers\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, probably all systems\n","Url":"https://github.com/angular/components/issues/30130","RelatedDescription":"Open issue \"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior\" (#30130)"},{"Id":"2718638817","IsPullRequest":true,"CreatedAt":"2024-12-04T19:49:11","Actor":"andrewseguin","Number":"30129","RawContent":null,"Title":"Bump version to \"v19.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30129","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.1\" with changelog.\" (#30129)"},{"Id":"2718548520","IsPullRequest":true,"CreatedAt":"2024-12-04T19:36:25","Actor":"andrewseguin","Number":"30128","RawContent":null,"Title":"docs: release notes for the v19.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30128","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.2 release\" (#30128)"},{"Id":"2718540835","IsPullRequest":true,"CreatedAt":"2024-12-04T18:49:20","Actor":"andrewseguin","Number":"30127","RawContent":null,"Title":"Bump version to \"v19.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30127","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.2\" with changelog.\" (#30127)"},{"Id":"2716936456","IsPullRequest":true,"CreatedAt":"2024-12-04T13:25:52","Actor":"crisbeto","Number":"30126","RawContent":null,"Title":"fix(youtube-player): update to latest typings","State":"closed","Body":"Updates the YouTube player to the latest typings to account for a breaking change.","Url":"https://github.com/angular/components/pull/30126","RelatedDescription":"Closed or merged PR \"fix(youtube-player): update to latest typings\" (#30126)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-10T03:30:02.4973076Z","RunDurationInMilliseconds":1687}