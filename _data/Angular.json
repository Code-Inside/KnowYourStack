{"Data":{"Angular-Issues":{"Issues":[{"Id":"1583342829","IsPullRequest":true,"CreatedAt":"2023-02-14T01:34:46","Actor":"angular-robot","Number":"49053","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to b603e6f","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `901d22c` -> `b603e6f` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xMzUuMCIsInVwZGF0ZWRJblZlciI6IjM0LjEzNS4wIn0=-->\n","Url":"https://github.com/angular/angular/pull/49053","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to b603e6f\" (#49053)"},{"Id":"1583187492","IsPullRequest":false,"CreatedAt":"2023-02-13T22:47:35","Actor":"ziedzayani","Number":"49052","RawContent":null,"Title":"Import context in standalone","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\n**I have this custom directive :** \r\nimport { Directive, HostListener, inject, Input} from '@angular/core';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\n\r\n@Directive({\r\n  selector: '[appCustomTooltip]',\r\n  exportAs: 'appCustomTooltip',\r\n  providers: [MatTooltip]\r\n})\r\nexport class CustomTooltipDirective{\r\n\r\n  @Input('appCustomTooltip') customTooltipText!: string;\r\n  matTooltip = inject(MatTooltip);\r\n\r\n  @HostListener('mouseover') mouseover() {\r\n    this.matTooltip.message = this.customTooltipText;\r\n    this.matTooltip.show();\r\n  }\r\n  @HostListener('mouseleave') mouseleave() {\r\n      this.matTooltip.hide();\r\n  }\r\n}\r\n\r\n**This worked for me because the custom directive was declared in the module and shares the context of the module (MatTooltipModule was imported in the module).**\r\n\r\nNow I am trying to do the same thing with a standalone custom directive but it is not working because we do not have the option to import the **MatTooltipModule** in the context of the custom directive.\r\n\r\n\r\n**I am trying to do this in order to use my standalone custom directive with the composition API directive.**\r\n\r\n\r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.5\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cdk                    13.0.0\r\n@angular/cli                    15.1.5\r\n@angular/material               13.0.0\r\n@schematics/angular             15.1.5\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49052","RelatedDescription":"Open issue \"Import context in standalone\" (#49052)"},{"Id":"1582900823","IsPullRequest":false,"CreatedAt":"2023-02-13T20:46:31","Actor":"anjunar","Number":"49050","RawContent":null,"Title":"Dynamic Components are not working with Projectable Nodes","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen doing dynamic Components and using the projectableNodes parameter, the projected Node has no changedetection.\r\n\r\n````\r\nexport class AppComponent {\r\n\r\n  constructor(private viewContainer : ViewContainerRef, private resolver : ComponentFactoryResolver, private injector : Injector) {}\r\n\r\n  onClick() {\r\n\r\n    let componentFactory = this.resolver.resolveComponentFactory(ChildComponent);\r\n    let componentRef = componentFactory.create(this.injector);\r\n    componentRef.instance.text = \"Hello World\"\r\n    \r\n    // Must be called to update the Binding. Change detection doesn't work on ChildComponent\r\n    componentRef.changeDetectorRef.detectChanges()\r\n\r\n    this.viewContainer.createComponent(ContainerComponent, {projectableNodes : [[componentRef.location.nativeElement]]})\r\n\r\n  }\r\n\r\n}\r\n````\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.4\r\nNode: 19.6.0 (Unsupported)\r\nPackage Manager: npm 9.4.2\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1501.4 (cli-only)\r\n@angular-devkit/core         15.1.4 (cli-only)\r\n@angular-devkit/schematics   15.1.4 (cli-only)\r\n@schematics/angular          15.1.4 (cli-only)\n```\n\n\n### Anything else?\n\nHere is the source code: https://github.com/anjunar/angular2\r\n\r\nHere is the Demo: https://anjunar.github.io/angular2","Url":"https://github.com/angular/angular/issues/49050","RelatedDescription":"Closed issue \"Dynamic Components are not working with Projectable Nodes\" (#49050)"},{"Id":"1582979879","IsPullRequest":false,"CreatedAt":"2023-02-13T20:41:44","Actor":"leandrotassi","Number":"49051","RawContent":null,"Title":"Value of class object is lost when performing debug.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen I assign the value of an object to a variable and after doing a for each of it, for example, the value is lost and I cannot see the content of the value within the iteration.\r\n\r\nThis seems to only happen at debug time.\r\n\r\nI don't know is it a bug or some configuration that needs to be done.\r\nI started having this problem after configuring \"tsconfig.json\" so that the code is strongly typed.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nThere is no exception.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.5\r\nNode: 18.13.0\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 15.1.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@nguniversal/builders           15.1.0\r\n@nguniversal/express-engine     15.1.0\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49051","RelatedDescription":"Closed issue \"Value of class object is lost when performing debug.\" (#49051)"},{"Id":"1581210188","IsPullRequest":true,"CreatedAt":"2023-02-13T19:04:54","Actor":"devversion","Number":"49039","RawContent":null,"Title":"build: never cache monitoring bazel test target","State":"closed","Body":"We recently switched some of the monitoring e2e tests to Bazel. These tests should never be cached because they rely on an external URL and on network access. The URL itself might stay the same for quite a while, but the underlying site might change based on new deployments. Bazel only sees the URL and caches the test then. We want to avoid this.","Url":"https://github.com/angular/angular/pull/49039","RelatedDescription":"Closed or merged PR \"build: never cache monitoring bazel test target\" (#49039)"},{"Id":"1582896388","IsPullRequest":false,"CreatedAt":"2023-02-13T19:03:30","Actor":"dionatan-g","Number":"49049","RawContent":null,"Title":"Better way to declare non-animatable properties inside animation's metadata","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nAnimations\r\n\r\n### Description\r\n\r\nCurrently, the only way to use non-animatable properties within an animation's transition scope is [animation-callbacks](https://angular.io/guide/transition-and-triggers#animation-callbacks), which is very verbose and kinda impracticable if you reuse the animation in multiple places.\r\n\r\nThis discussion started here: https://github.com/angular/angular/issues/46928#issuecomment-1409160924\r\n\r\ncc @dario-piotrowicz \r\n\r\n### Proposed solution\r\n\r\nPlace non-animatable properties inside the animation's metadata\r\n\r\n### Alternatives considered\r\n\r\nWay to disable the warnings","Url":"https://github.com/angular/angular/issues/49049","RelatedDescription":"Open issue \"Better way to declare non-animatable properties inside animation's metadata\" (#49049)"},{"Id":"1582224272","IsPullRequest":true,"CreatedAt":"2023-02-13T15:08:23","Actor":"crisbeto","Number":"49046","RawContent":null,"Title":"fix(migrations): use import remapper in root component","State":"closed","Body":"Fixes that in #49022 the component import remapping function wasn't being passed into the standalone migration.","Url":"https://github.com/angular/angular/pull/49046","RelatedDescription":"Closed or merged PR \"fix(migrations): use import remapper in root component\" (#49046)"},{"Id":"1580905012","IsPullRequest":true,"CreatedAt":"2023-02-13T15:07:34","Actor":"angular-robot","Number":"49037","RawContent":null,"Title":"build: update dependency eslint-plugin-jsdoc to v40","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [eslint-plugin-jsdoc](https://togithub.com/gajus/eslint-plugin-jsdoc) | devDependencies | major | [`^39.0.0` -> `^40.0.0`](https://renovatebot.com/diffs/npm/eslint-plugin-jsdoc/39.6.2/40.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>gajus/eslint-plugin-jsdoc</summary>\n\n### [`v40.0.0`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.9.1...v40.0.0)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.9.1...v40.0.0)\n\n### [`v39.9.1`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.9.0...v39.9.1)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.9.0...v39.9.1)\n\n### [`v39.9.0`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.8.0...v39.9.0)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.8.0...v39.9.0)\n\n### [`v39.8.0`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.5...v39.8.0)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.5...v39.8.0)\n\n### [`v39.7.5`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.4...v39.7.5)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.4...v39.7.5)\n\n### [`v39.7.4`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.3...v39.7.4)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.3...v39.7.4)\n\n### [`v39.7.3`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.2...v39.7.3)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.2...v39.7.3)\n\n### [`v39.7.2`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.1...v39.7.2)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.1...v39.7.2)\n\n### [`v39.7.1`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.0...v39.7.1)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.7.0...v39.7.1)\n\n### [`v39.7.0`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.10...v39.7.0)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.10...v39.7.0)\n\n### [`v39.6.10`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.9...v39.6.10)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.9...v39.6.10)\n\n### [`v39.6.9`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.8...v39.6.9)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.8...v39.6.9)\n\n### [`v39.6.8`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.7...v39.6.8)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.7...v39.6.8)\n\n### [`v39.6.7`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.6...v39.6.7)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.6...v39.6.7)\n\n### [`v39.6.6`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.5...v39.6.6)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.5...v39.6.6)\n\n### [`v39.6.5`](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.4...v39.6.5)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.4...v39.6.5)\n\n### [`v39.6.4`](https://togithub.com/gajus/eslint-plugin-jsdoc/releases/tag/v39.6.4)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.3...v39.6.4)\n\n##### Bug Fixes\n\n-   **`require-return-checks`:** check return statements prior to last line; fixes [#&#8203;935](https://togithub.com/gajus/eslint-plugin-jsdoc/issues/935) ([65e927b](https://togithub.com/gajus/eslint-plugin-jsdoc/commit/65e927bca645bc6e2fe77a761a5df2ff63099ea1))\n\n### [`v39.6.3`](https://togithub.com/gajus/eslint-plugin-jsdoc/releases/tag/v39.6.3)\n\n[Compare Source](https://togithub.com/gajus/eslint-plugin-jsdoc/compare/v39.6.2...v39.6.3)\n\n##### Bug Fixes\n\n-   update jsdoccomment; fixes [#&#8203;934](https://togithub.com/gajus/eslint-plugin-jsdoc/issues/934) ([124d327](https://togithub.com/gajus/eslint-plugin-jsdoc/commit/124d32792062bb2aa1dd1f9c89dfb5c654c35a19))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/49037","RelatedDescription":"Closed or merged PR \"build: update dependency eslint-plugin-jsdoc to v40\" (#49037)"},{"Id":"1582412903","IsPullRequest":true,"CreatedAt":"2023-02-13T14:05:14","Actor":"alvarocjunq","Number":"49047","RawContent":null,"Title":"docs: fix the broke URL to w3c Trusted Types spec","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThere's an URL in the Security page that point to the Trusted Types Spec (https://w3c.github.io/webappsec-trusted-types/dist/spec) that returns 404\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/49047","RelatedDescription":"Open PR \"docs: fix the broke URL to w3c Trusted Types spec\" (#49047)"},{"Id":"1580774721","IsPullRequest":false,"CreatedAt":"2023-02-13T11:59:35","Actor":"bttb","Number":"49032","RawContent":null,"Title":"Get a console hint or alternative content when browser is too old","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAfter updating angular to 15 some people told me, my website is not working on their browser - users only see a blank page with no more information, not on the website and not on the console. After a while I found out, that this is a problem for iOS browsers (all browsers, not just Safari, but also Chrome etc) on old iPads or old iPhones (these can't get updates for iOS anymore). It took me a while to find a solution, and on the way to the solution I also found issue #48339, an issue with basically the same problem but no solution. But in #48339 I saw, that angular.io is not running on these devices, too. And same with v14.angular.io - but v13.angular.io is running.\r\n\n\n### Proposed solution\n\nWhat I want to have is a hint, why the user gets nothing but a blank page. \r\n\r\nThe console hint should be s.th. like \"This browser version / iOS version is not supported. For more information, see https://angular.io/guide/build#configuring-browser-compatibility \" \n\n### Alternatives considered\n\nIn my index.html I added some pure JavaScript to log s.th. on the console - and this appeared on the console, but nothing more.\r\n\r\nThe solution I found is descibed under \"Configuring browser compatibility\" on angular.io: Internally, the Angular CLI uses a browser support configuration, which reads `last 2 iOS major versions`. To override the internal configuration, run `ng generate config browserslist`, which generates a `.browserslistrc` configuration file in the the project directory. Here you can change that line - I changed it to `last 4 iOS major versions`, and I also changed `target` to `ES2020` in my `tsconfig.json`.","Url":"https://github.com/angular/angular/issues/49032","RelatedDescription":"Closed issue \"Get a console hint or alternative content when browser is too old\" (#49032)"},{"Id":"1582044642","IsPullRequest":false,"CreatedAt":"2023-02-13T11:26:59","Actor":"Maximaximum","Number":"49043","RawContent":null,"Title":"Need to be able to specify providers for standalone Pipes","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCurrently there is no way to reuse an existing pipe or service inside a standalone pipe. \n\n### Proposed solution\n\nWe should be able to specify providers for a pipe, just like we do for components and directives\r\n\r\n```\r\n@Pipe({\r\n  name: 'formControlValue',\r\n  providers: [DatePipe]\r\n})\r\nexport class FormControlValuePipe implements PipeTransform {\r\n  constructor(\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  transform(value: any, type: string) {\r\n    switch (type) {\r\n      case 'date':\r\n        return this.datePipe.transform(value as string);\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n```\n\n### Alternatives considered\n\nThe only workardound available is using a non-standalone pipe:\r\n\r\n```typescript\r\n@NgModule({\r\n  declarations: [FormControlValuePipe],\r\n  exports: [FormControlValuePipe],\r\n  providers: [DatePipe],\r\n})\r\nexport class FormControlValueModule {}\r\n\r\n@Pipe({\r\n  name: 'formControlValue',\r\n})\r\nexport class FormControlValuePipe implements PipeTransform {\r\n  constructor(\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  transform(value: any, type: string) {\r\n    switch (type) {\r\n      case 'date':\r\n        return this.datePipe.transform(value as string);\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n```\r\n\r\nHowever, this forces developers to abstain from using standalone pipes and sticking to otherwise redundant `NgModule`s.","Url":"https://github.com/angular/angular/issues/49043","RelatedDescription":"Closed issue \"Need to be able to specify providers for standalone Pipes\" (#49043)"},{"Id":"1582089812","IsPullRequest":false,"CreatedAt":"2023-02-13T10:35:53","Actor":"sanjeet1827","Number":"49045","RawContent":null,"Title":"Provide translation token from nested keys in json format file ","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nlocalize\r\n\r\n### Description\r\n\r\nHi,\r\n\r\nI am new to angular localize support. \r\nAs translations now can be extracted to json format also , I have seen it does not support translation token as nested keys from json format file.\r\n\r\nfor example if below is the markup \r\n<span i18n=\"@@parent.child>\r\n        Test translation \r\n</span>\r\n\r\nand extracting it using json format like below generates messages.json file like bellow\r\n\r\nng extract-i18n --format=json --output-path src/locale\r\n\r\n{\r\n\"parnet.child\":\"Test translation\"\r\n}\r\n\r\nBut, to group translation in logical manner shouldn't be like \r\n{\r\n\"parent\":{\r\n    \"child\": \"Test translation \"\r\n}\r\n}\r\n\r\nIs there anything already present in framework to make it like above or not supported at all ?  \r\n\r\n### Proposed solution\r\n\r\nShould extract translation in json format to maintain logical grouping like below\r\n\r\n {\r\n\"parent\":{\r\n    \"child\": \"Test translation \"\r\n}\r\n}\r\n\r\n### Alternatives considered\r\n\r\nN/A","Url":"https://github.com/angular/angular/issues/49045","RelatedDescription":"Open issue \"Provide translation token from nested keys in json format file \" (#49045)"},{"Id":"1582086967","IsPullRequest":true,"CreatedAt":"2023-02-13T10:34:36","Actor":"crisbeto","Number":"49044","RawContent":null,"Title":"docs: add guide for standalone migration","State":"open","Body":"Adds a guide describing how to use the standalone migration schematic. The new guide is grouped together with the existing standalone guide.","Url":"https://github.com/angular/angular/pull/49044","RelatedDescription":"Open PR \"docs: add guide for standalone migration\" (#49044)"},{"Id":"1580725258","IsPullRequest":true,"CreatedAt":"2023-02-13T08:52:44","Actor":"crisbeto","Number":"49030","RawContent":null,"Title":"fix(migrations): automatically prune root module after bootstrap step","State":"closed","Body":"Currently as a part of the bootstrapping API migration we comment out the metadata of the root module and instruct users to re-run the module pruning step which can be cumbersome. These changes run the module pruning automatically.\r\n\r\nNote that initially I tried to reuse the module pruning logic and to run it against the existing program, but it was problematic, because it was common to have conflicting changes for the same AST nodes.","Url":"https://github.com/angular/angular/pull/49030","RelatedDescription":"Closed or merged PR \"fix(migrations): automatically prune root module after bootstrap step\" (#49030)"},{"Id":"1580787671","IsPullRequest":false,"CreatedAt":"2023-02-13T08:05:48","Actor":"shubham2924","Number":"49034","RawContent":null,"Title":"Wild card routing for some specific URL not working","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThis issue is intended for a special route edge case, citing [official documentation](https://angular.io/guide/router#setting-up-wildcard-routes) for the same.\r\n\r\nSo I've developed an app with angular and used  inbuilt routing provided by angular. Let me narrate the scenario:\r\nThere are various routes in the application in which wild card routing is added at the very end to show desired not-found component page. So URLs are like \r\n\r\n_https://mysite/api/books\r\nhttps://mysite/api/users_\r\netc...\r\n\r\nso if there is an invalid URLs such as _https://mysite/api/87*hfaabooks_, then not-found component shown correctly as I've added `{ path: '**', component: <not-found-component>, pathMatch: 'full' }` in the array of routes in appRoutingModule. But when an URL is like _https://mysite/65%^dfhapi/books_ , we can observe invalid characters aren't added in the very last route instead with _api_ word in the URL, so in this case it is redirecting to home page but as the URL is still invalid I want user to navigate to not-found-component.\r\n\r\nWould like to if I'm missing anything, thanks in advance.\r\n-Shubham\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49034","RelatedDescription":"Closed issue \"Wild card routing for some specific URL not working\" (#49034)"},{"Id":"1581257110","IsPullRequest":false,"CreatedAt":"2023-02-13T08:03:25","Actor":"jsenaribeiro","Number":"49040","RawContent":null,"Title":"Simplified overloads for Angular Component decorator","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAngular decorators are pretty verbose, specially with @Component. Maybe some simplified overload and convetnions could help.\n\n### Proposed solution\n\n````ts\r\nComponentDecorator {\r\n\t// current\r\n\t(args: any[]): any \r\n\t\r\n\t// proposal\r\n\t(selector: string, templateUrl: string): any\r\n\t(selector: string, templateUrl: string, ...styleUrls: string[]): any\r\n}\r\n\r\n@Component(\"my\", \"my.component.html\") // new\r\n@Component({ selector: 'my', templateUrl: 'my.component.html' }) // old\r\n\r\n@Component(\"my\", \"my.component.html\", \"my.component.css\", \"other.css\") // new\r\n@Component({ selector: 'my', templateUrl: 'my.component.html', styleUrls: [\"my.component.css\", \"other.css\"] }) // old\r\n````\r\n\n\n### Alternatives considered\n\nAn extended version could use also convention inference based in component.ts filename\r\n\r\n````ts\r\nComponentDecorator {\r\n\t// current\r\n\t(args: any[]): any \r\n\t\r\n\t// proposal\r\n\t(selector: string, inferCssUrl?: boolean): any\r\n\t(selector: string, templateUrl: string): any\r\n\t(selector: string, templateUrl: string, styleUrl: string): any\r\n\t\r\n\t// extended proposal\r\n\t(selector: string, inferCssUrl: boolean): any\r\n}\r\n\r\n@Component('my') // new (it infers templateUrl be convetion)\r\n@Component({ selector: 'my', templateUrl: 'my.component.html' }) // old\r\n\r\n@Component('my', true) // new (it also infers styleUrl by convetion)\r\n@Component({ selector: 'my', templateUrl: 'my.component.html', styleUrls: ['my.component.css'] }) // old\r\n````\r\n","Url":"https://github.com/angular/angular/issues/49040","RelatedDescription":"Closed issue \"Simplified overloads for Angular Component decorator\" (#49040)"},{"Id":"1581260225","IsPullRequest":false,"CreatedAt":"2023-02-13T07:59:24","Actor":"jsenaribeiro","Number":"49041","RawContent":null,"Title":"Simplified InnerText access","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nWhen we need get just a innerText in Angular is need <ng-content /> wrapped with hidden element, a elementRef injection and one life-cycle to get the information.\n\n### Proposed solution\n\nng-inner would be a hidden ng-content alternative just to get the elementRef content\r\n\r\n````html\r\n<ng-inner [text]=\"label\" /> // copy inner text to label field in component \r\n````\n\n### Alternatives considered\n\nAn alternative is allow a hidden ng-content and get events to receive its elementRef\r\n\r\n````html\r\n<ng-content hidden (on)=\"label = $event.nativeElement.innerText\"  />\r\n````","Url":"https://github.com/angular/angular/issues/49041","RelatedDescription":"Closed issue \"Simplified InnerText access\" (#49041)"},{"Id":"1581408260","IsPullRequest":true,"CreatedAt":"2023-02-12T21:00:49","Actor":"JeanMeche","Number":"49042","RawContent":null,"Title":"refactor: remove unnecessary file","State":"open","Body":"Small refactor, `core/src/view/index` had only a single export from a file located in the same package, no need to keep it.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n- [x] Refactoring (no functional changes, no api changes)","Url":"https://github.com/angular/angular/pull/49042","RelatedDescription":"Open PR \"refactor: remove unnecessary file\" (#49042)"},{"Id":"1580864397","IsPullRequest":false,"CreatedAt":"2023-02-11T21:25:03","Actor":"anjunar","Number":"49035","RawContent":null,"Title":"BaseRouteReuseStrategy with shouldReuseRoute => false not working","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe Router should reload the entire Component with its Resolvers, when queryParams change.\r\n\r\nBut nothing is happening, the Component stays the same.\r\n\r\n```import {ActivatedRouteSnapshot, BaseRouteReuseStrategy} from \"@angular/router\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppRoutingStrategyService extends BaseRouteReuseStrategy {\r\n\r\n  override shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n\r\n}\r\n```\r\n```\r\nimport {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {Angular2SimplicityModule} from \"angular2-simplicity\";\r\nimport {AppNavigatorFormComponent} from './navigator/app-navigator-form/app-navigator-form.component';\r\nimport {AppNavigatorTableComponent} from './navigator/app-navigator-table/app-navigator-table.component'\r\nimport {RouteReuseStrategy} from \"@angular/router\";\r\nimport {AppRoutingStrategyService} from \"./app-routing-strategy.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AppNavigatorFormComponent,\r\n    AppNavigatorTableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    Angular2SimplicityModule\r\n  ],\r\n  providers: [{\r\n    provide: RouteReuseStrategy,\r\n    useClass: AppRoutingStrategyService\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.5\r\nNode: 19.6.0 (Unsupported)\r\nPackage Manager: npm 9.4.2\r\nOS: win32 x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49035","RelatedDescription":"Closed issue \"BaseRouteReuseStrategy with shouldReuseRoute => false not working\" (#49035)"},{"Id":"1580969669","IsPullRequest":true,"CreatedAt":"2023-02-11T18:40:46","Actor":"bougwal","Number":"49038","RawContent":null,"Title":"fix(common): add generic type to NgTemplateOutlet to remove loose typing of ngTemplateOutletContext","State":"open","Body":"\r\nThis PR is a report and an attempt to fix an issue in one of the common directives `NgTemplateOutlet`. \r\n\r\n\r\nYesterday, we faced a very critical issue across our platform components which consume a shared-ui library that relies heavily on `NgTemplateOutlet`. `NgTemplateOutlet` is an essential building block of our UI system. Currently at development time, the compiler is totally silent when it comes to object keys passed from backend APIs  responses to the bound properties of this shared-ui library. \r\n\r\nThis is due to the loosely typing nature of the `'[ngTemplateOutlet]'` directive's context. \r\n\r\n\r\nA very minimal/simple reproduction here: \r\n\r\n```\r\nimport { Component } from '@angular/core';\r\n\r\ninterface IData {\r\n    estimation: number;\r\n}\r\n@Component({\r\n  selector: 'my-app',\r\n\r\n  template: `\r\n\r\n  <ng-container *ngTemplateOutlet=\"templateRef; context:{$implicit: data}\"></ng-container>\r\n\r\n\r\n  <ng-template #templateRef let-current>\r\n          <p>  {{current.estimation}} </p>\r\n          <br/>\r\n          <p> {{current.NONEXISTINGKEY}}</p> //<----- Compiler is still happy ! 🙄\r\n  </ng-template>\r\n\r\n  `,\r\n})\r\nexport class AppComponent {\r\n  public data: IData = {\r\n    estimation: 20_000\r\n  };\r\n}\r\n\r\n```\r\n\r\n[Stackblitz-link ](https://stackblitz.com/edit/angular-ivy-albr2y?file=src%2Fmain.ts,src%2Fpolyfills.ts)\r\n\r\nSuch behaviour can be overseen when the components are being compiled successfully.  Unfortunately, the compiler is blind when it comes to detecting whether the bound/interpolated keys from the outlet context are compatible with the desired shape (type/interface). \r\n\r\nThis is an attempt to make `ngTemplateOutlet` more aware of the shape passed to it.\r\n\r\nI assume that there might be other parts relevant to this that may need to be updated. For now, I limit my changes to what I found to be directly relevant to this issue. I hope this will not have any side effects or limitations. Please provide feedback if this make sense or not and help correct current change if it is somehow/somewhere wrong. \r\n\r\nNote: Our TypeScript strict configs are enabled when such bug occurred.\r\n\r\nIf there is a parallel running discussion relevant to this I would appreciate it a lot if you can refer/mention it here or ping me there\r\n\r\n\r\n@crisbeto I ping you here because I saw you made some changes a few months ago in these files I touched ! \r\n\r\n\r\nThank you 👍🏻\r\n","Url":"https://github.com/angular/angular/pull/49038","RelatedDescription":"Open PR \"fix(common): add generic type to NgTemplateOutlet to remove loose typing of ngTemplateOutletContext\" (#49038)"},{"Id":"1580900020","IsPullRequest":true,"CreatedAt":"2023-02-11T15:56:59","Actor":"dario-piotrowicz","Number":"49036","RawContent":null,"Title":"feat(animations): add disableAnimatableDevWarnings option","State":"open","Body":"add the disableAnimatableDevWarnings options for the BrowserAnimationsModule so that developers can turn off the warning in case it is not wanted\r\n\r\nresolves #46928\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n","Url":"https://github.com/angular/angular/pull/49036","RelatedDescription":"Open PR \"feat(animations): add disableAnimatableDevWarnings option\" (#49036)"},{"Id":"1580768698","IsPullRequest":false,"CreatedAt":"2023-02-11T11:31:02","Actor":"montella1507","Number":"49031","RawContent":null,"Title":"Allow @import inside ::ng-deep without any warning ","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncompiler\r\n\r\n### Description\r\n\r\nMotivation:\r\nThe main motivation for this is better code splitting.  Imagine we have 3rd party component library with huge amount of CSS - which is delivered as 1 SCSS file (component styles are not used in the library)\r\n\r\nExamples:\r\n- PrimeNG\r\n- Kendo\r\n\r\nYou have 2 options how to use their styles to use their components:\r\n- include all used SCSS \"partials\" to your style.scss - this will ADD 2MB of CSS to your main initial styles chunk\r\n- create a wrapper for particular component (for the instance - a data griad) and import required CSS to component style like this:\r\n```\r\n:host::ng-deep {\r\n  @import \"primeng/resources/components/table/table.css\";\r\n}\r\n```\r\n\r\nSo 3rd party style will be loaded on demand, only when needed and  removed from DOM when not required anymore.  It will be packed to JS chunk with our \"grid-wrapper\" component.\r\n\r\nResult:\r\n- it works like a charm\r\n- it is great for initial bundle size \r\n- it is loaded, parsed and \"used\" only when it is actually used in portal (in particular view)\r\n- it is great example why WE NEED NG DEEP\r\n\r\nProblem:\r\n- we cannot disable ViewEncapsulation, because there are other CSS rules, which have to be encapsulated\r\n- after migration to latest angular,  we got warnings\r\n\r\n`\r\n [WARNING] \"@import\" is only valid at the top level [invalid-@import]\r\ncomponents/datagrid/datagrid.component.scss:2:2:\r\n      2 │   @import \"primeng/resources/components/table/table.css\";\r\n        ╵   ~~~~~~~\r\n`\r\n\r\n\r\n### Proposed solution\r\n\r\nProvide a way how to disable this warning, because it is legit and only way how to make this possible\r\n\r\n### Alternatives considered\r\n\r\nBuild this style by angular with { inject: false} and load it manually with some kind of Directive and manually appending to DOM (head). This will be HUGE overhead though.","Url":"https://github.com/angular/angular/issues/49031","RelatedDescription":"Closed issue \"Allow @import inside ::ng-deep without any warning \" (#49031)"},{"Id":"1580783897","IsPullRequest":false,"CreatedAt":"2023-02-11T11:15:43","Actor":"shiyingying","Number":"49033","RawContent":null,"Title":"After I upgraded Angular from 10.0.11 to 14.2.0, Firefox exits after exporting logs.","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nAfter the Angular is upgraded from 10.0.11 to 14.2.0, after the Firefox browser is opened, logs can be downloaded in a link mode. After the download is successful, when other requests are invoked, the HTTP request header does not contain the token. As a result, the authentication fails and the user exits. Firefox has been tested on versions 65, 79, 100, and 108, and all have the same problem.\r\nNormal scenario: After logs are exported, other requests are normal and the page does not exit.\r\nThe Chrome browser is normal.\r\nAngular10-based projects are also normal on Firefox.\r\n\r\n\r\nThe following is the specific display information.\r\nThe request header of an interface before the log download interface contains Csrf-Token. The request header is as follows:\r\n    GET /redfish/v1/rich/LogService/DevLogs?$filter=DevType%20eq%20BMC HTTP/1.1\r\n    Host: 9.88.16.246\r\n    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0\r\n    Accept: application/json, text/plain, */*\r\n    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\r\n    Accept-Encoding: gzip, deflate, br\r\n    Csrf-Token: Rx5DxdA21WpgSNOmsn1-zVVfq_22sSo9GRftVs0uN14=\r\n    Logintype: web\r\n    Connection: keep-alive\r\n    Cookie: cookieTime=\"2023-02-11 17:22:06\"\r\n    Pragma: no-cache\r\n    Cache-Control: no-cache\r\n\r\nThen is the log request(This request does not require Csrf-Token authentication.):\r\n    GET /redfish/v1/rich/LogService/DevLogs/bmc.tar.gz/rHdvR_B2EkSL_4OP?taskId=5667fd18-5a7d-44bc-8e78-f7e892048c05&loginType=web HTTP/1.1\r\n    Host: 9.88.16.246\r\n    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0\r\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\r\n    Accept-Encoding: gzip, deflate, br\r\n    Connection: keep-alive\r\n    Cookie: cookieTime=\"2023-02-11 17:22:06\"\r\n    Upgrade-Insecure-Requests: 1\r\n    Pragma: no-cache\r\n    Cache-Control: no-cache\r\n\r\nAfter the preceding download request, only the subsequent requests do not have the Csrf-Token:\r\n    GET /portal/v1/islogin HTTP/1.1\r\n    Host: 9.88.16.246\r\n    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0\r\n    Accept: application/json, text/plain, */*\r\n    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\r\n    Accept-Encoding: gzip, deflate, br\r\n    Csrf-Token: \r\n    Logintype: \r\n    Connection: keep-alive\r\n    Cookie: cookieTime=\"2023-02-11 17:22:06\"\r\n    Pragma: no-cache\r\n    Cache-Control: no-cache\r\n\r\nRequest header parameters are carried through the httpInteceptor of the Angular.The code is as follows:\r\n@Injectable()\r\nexport class BaseInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private sessionStorageService: SessionStorageService,\r\n        private commonService: CommonService,\r\n        private globalConst: GlobalConstService\r\n    ) {}\r\n    private diff = 1;\r\n    intercept(req, next: HttpHandler) {\r\n        const newReq = req.clone({\r\n            url: req.hadBaseurl ? `${req.url}` : `${baseurl}${req.url}`,\r\n        });\r\n\r\n        if (!req.cancelToken) {\r\n            newReq.headers = newReq.headers.set('Csrf-Token', this.sessionStorageService.get('csrftoken') || '');\r\n            newReq.headers = newReq.headers.set('Logintype', this.sessionStorageService.get('Logintype') || '');\r\n        }\r\n        // send cloned request with header to the next handler.\r\n        return next.handle(newReq).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                return throwError(this.commonService.errorDataProcessing(error));\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [{ provide: HTTP_INTERCEPTORS, useClass: BaseInterceptor, multi: true }];\r\n\r\n\r\n\n\n### Proposed solution\n\nAfter logs are exported from the Firefox browser, other requests can be properly processed.\n\n### Alternatives considered\n\nI have no ideas. The Angular14 is required for our products, and the Firefox browser must also support the Angular14. Is there any change in the HTTP request?","Url":"https://github.com/angular/angular/issues/49033","RelatedDescription":"Closed issue \"After I upgraded Angular from 10.0.11 to 14.2.0, Firefox exits after exporting logs.\" (#49033)"},{"Id":"1580361437","IsPullRequest":false,"CreatedAt":"2023-02-10T21:29:56","Actor":"lonerzzz","Number":"49029","RawContent":null,"Title":"Incomplete documentation for NG01203","State":"open","Body":"### Describe the problem that you experienced\n\nUpon upgrading to Angular 15, I encountered the error \"NG01203: No value accessor for form control name\" on simple forms that were previously working. Following the provided link \"https://angular.io/errors/NG01203\", I came to a page that is inadequate to enable resolution of the issue.\r\n\r\nThe page indicates that a value accessor must be registered and provides a code snippet that is incomplete. The provided code snippet has the following problems:\r\n1) it provides no context as to where the code snippet is to be placed\r\n2) it includes a reference to something called \"MyInputField\" without indicating what the type of that object is.\r\n\r\nThe section \"Debugging the error\" includes the completely unhelpful statement:\r\n\"1. If you defined a custom form control, did you remember to provide a value accessor?\"\r\nThis is unhelpful because it is effectively a circular reference and should be replaced with some redirection on how to create a value accessor and in what context the value accessor is being created\r\n\r\nThe page makes no reference to whether this an issue with the \"Reactive Forms API\" or any upgrade scenario that might have caused it. Likewise, the update guide (https://update.angular.io/?l=3&v=11.0-15.0) makes no statement that simple forms now need something additional.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/errors/NG01203\n\n### Describe what you were looking for in the documentation\n\nA complete example on how to fix the issue or a reference to the required functionality should be provided.\n\n### Describe the actions that led you to experience the problem\n\nI upgraded from Angular 11 to Angular 15.\n\n### Describe what you want to experience that would fix the problem\n\nThe documentation should outline what is required in enough detail to resolve the issue. As stated in the problem text, the error page included too little information and too few references to resolve the issue.\n\n### Add a screenshot if that helps illustrate the problem\n\nNot applicable.\n\n### If this problem caused an exception or error, please paste it here\n\n```true\nprojects_pulse_ui_po…ring_module_ts.js:2 ERROR Error: Uncaught (in promise): Error: NG01203: No value accessor for form control name: 'displayOrderSelector'. Find more at https://angular.io/errors/NG01203\r\nError: NG01203: No value accessor for form control name: 'displayOrderSelector'. Find more at https://angular.io/errors/NG01203\r\n    at _throwMissingValueAccessorError (forms.mjs:3163:11)\r\n    at setUpControl (forms.mjs:2936:13)\r\n    at forms.mjs:3377:13\r\n    at _ZoneDelegate.invoke (zone.js:372:26)\r\n    at Object.onInvoke (core.mjs:24313:33)\r\n    at _ZoneDelegate.invoke (zone.js:371:52)\r\n    at Zone.run (zone.js:134:43)\r\n    at zone.js:1275:36\r\n    at _ZoneDelegate.invokeTask (zone.js:406:31)\r\n    at core.mjs:23999:55\r\n    at resolvePromise (zone.js:1211:31)\r\n    at zone.js:1282:17\r\n    at _ZoneDelegate.invokeTask (zone.js:406:31)\r\n    at core.mjs:23999:55\r\n    at AsyncStackTaggingZoneSpec.onInvokeTask (core.mjs:23999:36)\r\n    at _ZoneDelegate.invokeTask (zone.js:405:60)\r\n    at Object.onInvokeTask (core.mjs:24300:33)\r\n    at _ZoneDelegate.invokeTask (zone.js:405:60)\r\n    at Zone.runTask (zone.js:178:47)\r\n    at drainMicroTaskQueue (zone.js:585:35)\r\nZone - Promise.then (async)\t\t\r\n```\n```\n\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/49029","RelatedDescription":"Open issue \"Incomplete documentation for NG01203\" (#49029)"},{"Id":"1580336579","IsPullRequest":true,"CreatedAt":"2023-02-10T21:08:09","Actor":"angular-robot","Number":"49028","RawContent":null,"Title":"build: update dependency google-closure-compiler to v20230206","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [google-closure-compiler](https://developers.google.com/closure/compiler/) ([source](https://togithub.com/google/closure-compiler-npm)) | devDependencies | major | [`^20221102.0.0` -> `^20230206.0.0`](https://renovatebot.com/diffs/npm/google-closure-compiler/20221102.0.0/20230206.0.0) |\n| [google-closure-compiler](https://developers.google.com/closure/compiler/) ([source](https://togithub.com/google/closure-compiler-npm)) | dependencies | major | [`20221102.0.1` -> `20230206.0.0`](https://renovatebot.com/diffs/npm/google-closure-compiler/20221102.0.1/20230206.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>google/closure-compiler-npm</summary>\n\n### [`v20230206.0.0`](https://togithub.com/google/closure-compiler-npm/releases/tag/v20230206.0.0): 20230206.0.0\n\n[Compare Source](https://togithub.com/google/closure-compiler-npm/compare/v20230103.0.0...v20230206.0.0)\n\nClosure-compiler [`2023020`](https://togithub.com/google/closure-compiler-npm/commit/20230206) release\n\n##### What's Changed\n\n-   Utilize the package version for the compiler build by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/278](https://togithub.com/google/closure-compiler-npm/pull/278)\n-   Rename the codeql workflow by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/279](https://togithub.com/google/closure-compiler-npm/pull/279)\n-   Switch the linux graal build runner for better GLIBC compatibility by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/281](https://togithub.com/google/closure-compiler-npm/pull/281)\n-   Revert \"Support multiple libc versions by dynamically linking against libc\" by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/282](https://togithub.com/google/closure-compiler-npm/pull/282)\n\n**Full Changelog**: https://github.com/google/closure-compiler-npm/compare/v20230103.0.0...v20230206.0.0\n\n### [`v20230103.0.0`](https://togithub.com/google/closure-compiler-npm/releases/tag/v20230103.0.0): 20230103.0.0\n\n[Compare Source](https://togithub.com/google/closure-compiler-npm/compare/v20221102.0.1...v20230103.0.0)\n\nClosure-compiler [`2023010`](https://togithub.com/google/closure-compiler-npm/commit/20230103) release\n\n#### What's Changed\n\n-   Bump decode-uri-component from 0.2.0 to 0.2.2 by [@&#8203;dependabot](https://togithub.com/dependabot) in [https://github.com/google/closure-compiler-npm/pull/275](https://togithub.com/google/closure-compiler-npm/pull/275)\n-   Add codeql security scan workflow by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/276](https://togithub.com/google/closure-compiler-npm/pull/276)\n\n**Full Changelog**: https://github.com/google/closure-compiler-npm/compare/v20221102.0.1...v20230103.0.0\n\n### [`v20221102.0.1`](https://togithub.com/google/closure-compiler-npm/releases/tag/v20221102.0.1): 20221102.0.1\n\n[Compare Source](https://togithub.com/google/closure-compiler-npm/compare/v20221102.0.0...v20221102.0.1)\n\n#### What's Changed\n\n-   Update dependency to address security warning by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/267](https://togithub.com/google/closure-compiler-npm/pull/267)\n-   Switch the event name allowed to publish to `workflow_dispatch` by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/266](https://togithub.com/google/closure-compiler-npm/pull/266)\n-   Update confusing statement about JS-native version by [@&#8203;brad4d](https://togithub.com/brad4d) in [https://github.com/google/closure-compiler-npm/pull/268](https://togithub.com/google/closure-compiler-npm/pull/268)\n-   Update GRAAL to the 22.3.0 release by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/270](https://togithub.com/google/closure-compiler-npm/pull/270)\n-   Update build action to address warnings by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/269](https://togithub.com/google/closure-compiler-npm/pull/269)\n-   Support multiple libc versions by dynamically linking against libc by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/273](https://togithub.com/google/closure-compiler-npm/pull/273)\n-   Temporarily remove upx compression for MacOS by [@&#8203;ChadKillingsworth](https://togithub.com/ChadKillingsworth) in [https://github.com/google/closure-compiler-npm/pull/274](https://togithub.com/google/closure-compiler-npm/pull/274)\n\n**Full Changelog**: https://github.com/google/closure-compiler-npm/compare/v20221102.0.0...v20221102.0.1\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular/pull/49028","RelatedDescription":"Open PR \"build: update dependency google-closure-compiler to v20230206\" (#49028)"},{"Id":"1579862256","IsPullRequest":true,"CreatedAt":"2023-02-10T19:22:25","Actor":"devversion","Number":"49025","RawContent":null,"Title":"build: remove puppeteer, remaining usages of webdriver-manager and migrate AIO production test to Bazel","State":"closed","Body":"This commit does a couple of things that are related and required to get\r\nrid of `webdriver-manager`:\r\n\r\n* Our puppeteer protractor setup in AIO relies on webdriver-manager\r\nbecause we install a corresponding chromedriver based on the puppeteer\r\nchromium version. We would like to get rid of this brittle setup.\r\n\r\n* We don't use `puppeteer` in many places because we manage chromium and\r\nthe driver through Bazel. This commit removes the remaining puppeteer\r\nusage and replaces it with the Bazel-managed canonical browser\r\n\r\n* We need to migrate the AIO production URL tests to Bazel. These\r\nweren't part of Aspect's migration. This is needed so that we can drop\r\npuppeteer and use the Bazel browser setup.\r\n\r\n* Migrates some at-runtime TS `ts-node` test setup to proper idiomatic\r\nBazel code. Needed because it depends on code that also had to be\r\nmigrated to Bazel given the production e2e test Bazel migration (above\r\npoints).\r\n\r\nNote: The xregexp dependency had to be added to the root project because\r\n`ts_library` does not support compilation deps from `@aio_npm`. This is\r\nsomething we will fix anyway when we have a more modern toolchain!","Url":"https://github.com/angular/angular/pull/49025","RelatedDescription":"Closed or merged PR \"build: remove puppeteer, remaining usages of webdriver-manager and migrate AIO production test to Bazel\" (#49025)"},{"Id":"1580013590","IsPullRequest":true,"CreatedAt":"2023-02-10T19:21:32","Actor":"devversion","Number":"49027","RawContent":null,"Title":"[15.1.x]: build: update cross-repo angular dependencies ","State":"closed","Body":"Patch port of #48996 ","Url":"https://github.com/angular/angular/pull/49027","RelatedDescription":"Closed or merged PR \"[15.1.x]: build: update cross-repo angular dependencies \" (#49027)"},{"Id":"1579958521","IsPullRequest":true,"CreatedAt":"2023-02-10T16:08:51","Actor":"josephperrott","Number":"49026","RawContent":null,"Title":"build: update @angular/ng-dev and @angular/build-tooling","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/49026","RelatedDescription":"Closed or merged PR \"build: update @angular/ng-dev and @angular/build-tooling\" (#49026)"},{"Id":"1579767267","IsPullRequest":false,"CreatedAt":"2023-02-10T14:26:14","Actor":"OzMiomni","Number":"49024","RawContent":null,"Title":"Resolver runs before initializer has completed","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nRoute resolvers will execute before functions that have been injected as an APP_INITIALIZER have returned if the APP_INITIALIZER is asynchronous. This seems to be a contradiction to the point of an initializer.\r\n\r\nThe example attached uses angular universal but the issue can be seen both by running dev:ssr or start. No matter what changes I make to the initializer function I cannot get angular to wait to run the resolver.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/OzMiomni/resolver-initializer-bug\n\n### Please provide the exception or error you saw\n\n```true\nResolver logs 'resolver running' before initialzer logs 'timeout finished in initializer'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.5\r\nNode: 18.13.0\r\nPackage Manager: npm 8.19.3\r\nOS: linux x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@nguniversal/builders           15.1.0\r\n@nguniversal/express-engine     15.1.0\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/49024","RelatedDescription":"Open issue \"Resolver runs before initializer has completed\" (#49024)"},{"Id":"1579667803","IsPullRequest":false,"CreatedAt":"2023-02-10T13:14:37","Actor":"mateuszo","Number":"49023","RawContent":null,"Title":"Tree-shaking of templates","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\nThe issue I'm writing about might not be so common in Angular projects. However, it is quite common in projects that use [SAP Spartacus](https://github.com/SAP/spartacus) libraries or other component libraries.\r\n\r\nSpartacus is providing logic and components for building storefront applications. In implementation projects, we usually customize its services and replace some of the components with our custom ones. Standard practice is to extend a component from Spartacus to inherit the logic and replace the template. This approach allows us to write less and get automatic upgrades when we upgrade the Spartacus package. However, the problem is that the template of the parent component ends up in the bundle even though it's not used at all. Often, this makes the bundle size quite big negatively affecting performance.\r\n\r\nMaybe this could also affect other projects.\n\n### Proposed solution\n\nIt seems to be quite hard to determine whether the template will be actually used or not. The only case that comes to my mind is when the class is used only in the context of extension or implementation. In that case, the compiler could potentially remove the `@Component` directive from the parent class.\r\n\r\nAnother solution would be to be able to instruct a compiler not to compile templates for specified components. \n\n### Alternatives considered\n\nAn alternative would be that the component library (e.g. Spartacus) splits the components into smart and dumb components. The dumb component would then have the `@Component` decorator and would extend from the smart component which would contain logic only. However, this produces a lot of boilerplate and may cause trouble with other decorators.\r\n\r\nAnother solution that we've tried is to patch the compiled code and remove the unused templates manually. ","Url":"https://github.com/angular/angular/issues/49023","RelatedDescription":"Open issue \"Tree-shaking of templates\" (#49023)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1579055686","IsPullRequest":true,"CreatedAt":"2023-02-13T22:29:44","Actor":"angular-robot","Number":"24693","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `b919d8e` -> `74344b0` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `f7d26a0` -> `3e4d95e` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `70c532c` -> `9da5c25` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `6900a57` -> `335fc2c` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `a84f3b7` -> `a004b9f` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `cc9fd43` -> `a0af90c` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `1d70e3f` -> `419a006` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `12daf06` -> `e5693d7` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `8c0fb39` -> `edd4ec2` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `ac762c4` -> `8a1ea35` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `66d3823` -> `39e9f7a` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `a1456c8` -> `c0f4029` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `8aa6041` -> `8a87efa` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `b02757c` -> `fbba872` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `6709be7` -> `f5c5551` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `703d48c` -> `821082b` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `fa06548` -> `57a141b` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `2657adf` -> `9a23e24` |\n| angular/dev-infra | action | digest | `07b0f64` -> `7ed99e1` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuMTM1LjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24693","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24693)"},{"Id":"1582897598","IsPullRequest":true,"CreatedAt":"2023-02-13T19:04:15","Actor":"clydin","Number":"24708","RawContent":null,"Title":"test(@angular-devkit/build-angular): port additional unit tests to esbuild builder","State":"open","Body":"The following unit tests have been ported over to test the experimental esbuild-based browser application builder:\r\n* `extractLicenses` option\r\n* `main` option\r\n* `optimization.styles.inlineCritical` option\r\n* `styles` option\r\n* `subresourceIntegrity` option\r\n\r\nSeveral individual tests involving file output logging have been temporarily disabled until build and file output logging has been implemented for the builder.","Url":"https://github.com/angular/angular-cli/pull/24708","RelatedDescription":"Open PR \"test(@angular-devkit/build-angular): port additional unit tests to esbuild builder\" (#24708)"},{"Id":"1581872092","IsPullRequest":true,"CreatedAt":"2023-02-13T17:24:13","Actor":"angular-robot","Number":"24704","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24704","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#24704)"},{"Id":"1582666026","IsPullRequest":false,"CreatedAt":"2023-02-13T16:11:53","Actor":"petercmuc","Number":"24707","RawContent":null,"Title":"ng serve produces truncated HTML","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAngular devkit server fails to render big HTML pages: its contents are truncated.\r\n\r\nIn our example we have a script tag that contains static JSON data. This data is read by JS code for processing.\r\nIf the file size reaches a certain limit (probably 128kByte) the served output is not complete and we see an error when parsing the JSON data: \"Uncaught SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data\"\r\n\r\nI have created a minimal repo for reproduction of that error.\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/petercmuc/angular-devkit-server-error\n\n### Please provide the exception or error you saw\n\n```true\n\"Uncaught SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data\"\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n@angular-devkit/build-angular\": \"15.0.5\"\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24707","RelatedDescription":"Open issue \"ng serve produces truncated HTML\" (#24707)"},{"Id":"1579560646","IsPullRequest":false,"CreatedAt":"2023-02-13T15:51:57","Actor":"paddotk","Number":"24695","RawContent":null,"Title":"Images from library don't load, but are included","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI've been building a component library and am now using these in an application. Some components use images that are added as assets within this library.\r\n\r\nWhen I do a production build and push it to NPM, everything seems to go right, but when using the library in our app, the images don't show. I get a 404 error. Now, this issue is one that many people have been getting for years, so it seems, but **never has been resolved**. All related tickets have timed out and gotten closed after some time.\r\n\r\nSome points worth mentioning:\r\n- The assets are **successfully included** (in a folder called `assets`) in the library. If I go to `node_modules/my-lib` I can see that they are there, so the problem is not the assets configuration.\r\n- The images are small .svg's that work fine otherwise. They have only letters and a dash in the name, no spaces or other special characters.\r\n\r\nThe issue seems to be related to how the image paths/references are compiled. Because when I include the image in the assets folder of the application that uses the library, **it does work**. Apparently the library looks for images based on the consuming app's directory rather than the library's root itself.\r\nI've spent over two days trying all sorts of configurations and ways to refer to the images, but nothing works. I'm at my wit's end here.\r\n\r\nI'm trying to show the images simply in an img tag: `<img src=\"assets/my-picture.svg\" />`\r\n\r\n## Technical details\r\nMy folder structure is like this:\r\n```\r\nmy-lib\r\n  /package.json\r\n  /projects\r\n    /my-lib // This is the folder that the production build targets\r\n      /package.json\r\n      /src\r\n        /assets\r\n        ...\r\n      ...\r\n  /src //this is the local test application which is not part of the build/library\r\n    /app\r\n    ...    \r\n  ...\r\n```\r\n\r\nI build it using the command `ng build vitas-toolkit --configuration production`\r\n\r\n```\r\n// ng-package.json\r\n\"assets\": [\r\n    {\r\n      \"glob\": \"**/*\",\r\n      \"input\": \"src/assets\",\r\n      \"output\": \"/assets\"\r\n    },\r\n    \"./src/_lib/styles\"\r\n  ],\r\n  ```\r\n\r\n### Minimal Reproduction\r\n\r\nSee above\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   14.2.10\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.0.7\r\n@angular/cli                    14.0.7\r\n@schematics/angular             14.0.7\r\nng-packagr                      14.1.0\r\nrxjs                            7.5.5\r\ntypescript                      4.7.4\r\nwebpack                         5.74.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24695","RelatedDescription":"Closed issue \"Images from library don't load, but are included\" (#24695)"},{"Id":"1582485774","IsPullRequest":false,"CreatedAt":"2023-02-13T14:49:29","Actor":"gouravkajal","Number":"24706","RawContent":null,"Title":"--standalone option for ng new CLI command","State":"closed","Body":"### Command\r\n\r\nnew\r\n\r\n### Description\r\n\r\nSince Angular v14, we have had a new feature called Standalone Components. I recently started using them and they are really very helpful. The only problem I faced was setting up the framework to use Standalone components, like removing the root module, and passing required modules (e.g. RouterModule, HttpClientModule, etc) to bootstrapApplication using importProvidersFrom.\r\n\r\nI guess that will be really helpful if we can create a new app itself with these configurations. Let's say we use --standalone with ng new, then no root module should be created, the main.ts file should have bootstrapApplication instead of bootstrapModule, and whatever we need by default should be provided in bootstrapApplication.\r\n\r\n### Describe the solution you'd like\r\n\r\nSuggested command: **ng new <APP_NAME> --standalone**\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24706","RelatedDescription":"Closed issue \"--standalone option for ng new CLI command\" (#24706)"},{"Id":"1581993017","IsPullRequest":false,"CreatedAt":"2023-02-13T14:30:50","Actor":"bagbag","Number":"24705","RawContent":null,"Title":"New tailwind classes are not added when symlink is present","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nNew tailwind classes are not added in ng serve without restarting it, while a symlink exists in tailwinds content path.\r\nThis issue can be fixed by removing the symlink. Now class changes are added without restarting ng serve.\r\nIt does not matter what file type it is, the existence of a symlink is enough to break it.\n\n### Minimal Reproduction\n\nsetup new project:\r\n```sh\r\nng new --minimal --style scss --defaults tailwind-symlink-bug\r\ncd tailwind-symlink-bug/\r\nnpm install --save-dev tailwindcss\r\nln -s ../../node_modules/@angular/core/README.md src/assets/README.md\r\necho \"module.exports = { content: ['./src/**/*.{html,ts}'] };\" > tailwind.config.js\r\necho -e \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\" > src/styles.scss\r\n```\r\n\r\nreplace html in app.component.ts with following:\r\n```html\r\n<div class=\"w-40 h-40 bg-red-500\"></div>\r\n```\r\n\r\nstart:\r\n```sh\r\nng serve\r\n```\r\n\r\nYou will see a red square. Now change `bg-red-500` to `bg-green-500` -> the square will disappear, as the new tailwind class is not generated. A restart of `ng serve` will add it.\r\n\r\nIf you remove the symlink at `src/assets/README.md` and restart `ng serve`, the problem above does not appear.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nNode.js version v19.6.0 detected.\r\nOdd numbered Node.js versions will not enter LTS status and should not be used for production. For more information, please see https://nodejs.org/en/about/releases/.\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 15.1.5\r\nNode: 19.6.0 (Unsupported)\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: \r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1501.5 (cli-only)\r\n@angular-devkit/core         15.1.5 (cli-only)\r\n@angular-devkit/schematics   15.1.5 (cli-only)\r\n@schematics/angular          15.1.5 (cli-only)\r\n    \r\nWarning: The current version of Node (19.6.0) is not supported by Angular.\n```\n\n\n### Anything else relevant?\n\nIssue also occurs on Windows.\r\n\r\nAdditional information from a tailwind developer: <https://github.com/tailwindlabs/tailwindcss/issues/10555#issuecomment-1426323815>\r\n\r\n> Hey! This is a super weird one but it looks like a problem with Angular itself. We aren't producing any content or postcss messages that are different whether the symlink is there or not.\r\n\r\n> 1. On the initial build we are returning the expected content paths from our plugin for postcss-loader to hand off to webpack.\r\n> 2. On subsequent builds Tailwind CSS itself isn't called at all by Angular (I'm guessing PostCSS itself isn't called)\r\n> 3. This problem is only present when a glob path is passed to postcss-loader AND there is a symlink inside the \"root\" (non-dynamic) directory of the glob path.\r\n> 4. I suspected this was a problem with the persistent cache but disabling the angular cache does not fix this.\r\n\r\n> All this to say I believe this is an issue with Angular and possibly webpack itself that underlies Angular. I would suggest you open an issue with Angular and see what they can uncover. I can help provide more info to the Angular and/or webpack teams as needed as well.","Url":"https://github.com/angular/angular-cli/issues/24705","RelatedDescription":"Closed issue \"New tailwind classes are not added when symlink is present\" (#24705)"},{"Id":"1580682498","IsPullRequest":true,"CreatedAt":"2023-02-13T14:17:15","Actor":"angular-robot","Number":"24700","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.3` -> `v2.2.4` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.4`](https://togithub.com/github/codeql-action/compare/v2.2.3...v2.2.4)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.3...v2.2.4)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24700","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.4\" (#24700)"},{"Id":"1580682524","IsPullRequest":true,"CreatedAt":"2023-02-13T14:16:13","Actor":"angular-robot","Number":"24701","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.7` -> `0.17.8`](https://renovatebot.com/diffs/npm/esbuild/0.17.7/0.17.8) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.7` -> `0.17.8`](https://renovatebot.com/diffs/npm/esbuild/0.17.7/0.17.8) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.7` -> `0.17.8`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.7/0.17.8) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.7` -> `0.17.8`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.7/0.17.8) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.33.0` -> `8.34.0`](https://renovatebot.com/diffs/npm/eslint/8.33.0/8.34.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | minor | [`0.27.0` -> `0.29.0`](https://renovatebot.com/diffs/npm/magic-string/0.27.0/0.29.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | devDependencies | minor | [`0.27.0` -> `0.29.0`](https://renovatebot.com/diffs/npm/magic-string/0.27.0/0.29.0) |\n| [minimatch](https://togithub.com/isaacs/minimatch) | devDependencies | minor | [`~6.1.0` -> `~6.2.0`](https://renovatebot.com/diffs/npm/minimatch/6.1.6/6.2.0) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`21.0.10` -> `21.0.13`](https://renovatebot.com/diffs/npm/quicktype-core/21.0.10/21.0.13) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.8`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0178)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.7...v0.17.8)\n\n-   Fix a minification bug with non-ASCII identifiers ([#&#8203;2910](https://togithub.com/evanw/esbuild/issues/2910))\n\n    This release fixes a bug with esbuild where non-ASCII identifiers followed by a keyword were incorrectly not separated by a space. This bug affected both the `in` and `instanceof` keywords. Here's an example of the fix:\n\n    ```js\n    // Original code\n    π in a\n\n    // Old output (with --minify --charset=utf8)\n    πin a;\n\n    // New output (with --minify --charset=utf8)\n    π in a;\n    ```\n\n-   Fix a regression with esbuild's WebAssembly API in version 0.17.6 ([#&#8203;2911](https://togithub.com/evanw/esbuild/issues/2911))\n\n    Version 0.17.6 of esbuild updated the Go toolchain to version 1.20.0. This had the unfortunate side effect of increasing the amount of stack space that esbuild uses (presumably due to some changes to Go's WebAssembly implementation) which could cause esbuild's WebAssembly-based API to crash with a stack overflow in cases where it previously didn't crash. One such case is the package `grapheme-splitter` which contains code that looks like this:\n\n    ```js\n    if (\n      (0x0300 <= code && code <= 0x036F) ||\n      (0x0483 <= code && code <= 0x0487) ||\n      (0x0488 <= code && code <= 0x0489) ||\n      (0x0591 <= code && code <= 0x05BD) ||\n      // ... many hundreds of lines later ...\n    ) {\n      return;\n    }\n    ```\n\n    This edge case involves a chain of binary operators that results in an AST over 400 nodes deep. Normally this wouldn't be a problem because Go has growable call stacks, so the call stack would just grow to be as large as needed. However, WebAssembly byte code deliberately doesn't expose the ability to manipulate the stack pointer, so Go's WebAssembly translation is forced to use the fixed-size WebAssembly call stack. So esbuild's WebAssembly implementation is vulnerable to stack overflow in cases like these.\n\n    It's not unreasonable for this to cause a stack overflow, and for esbuild's answer to this problem to be \"don't write code like this.\" That's how many other AST-manipulation tools handle this problem. However, it's possible to implement AST traversal using iteration instead of recursion to work around limited call stack space. This version of esbuild implements this code transformation for esbuild's JavaScript parser and printer, so esbuild's WebAssembly implementation is now able to process the `grapheme-splitter` package (at least when compiled with Go 1.20.0 and run with node's WebAssembly implementation).\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.34.0`](https://togithub.com/eslint/eslint/releases/tag/v8.34.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.33.0...v8.34.0)\n\n#### Features\n\n-   [`9b2fcf7`](https://togithub.com/eslint/eslint/commit/9b2fcf7e928fc92ac6d43617bdee1bda250b7491) feat: `array-callback-return` supports `Array.prototype.toSorted` ([#&#8203;16845](https://togithub.com/eslint/eslint/issues/16845)) (SUZUKI Sosuke)\n\n#### Bug Fixes\n\n-   [`923f61d`](https://togithub.com/eslint/eslint/commit/923f61d8fc82d83b912c6ba95abb5a509c4d7b52) fix: false positive with assignment in `no-extra-parens` ([#&#8203;16872](https://togithub.com/eslint/eslint/issues/16872)) (Francesco Trotta)\n\n#### Documentation\n\n-   [`f0a9883`](https://togithub.com/eslint/eslint/commit/f0a988384ea1a262150e70d83abd8a5e50c46fa7) docs: split rules documentation ([#&#8203;16797](https://togithub.com/eslint/eslint/issues/16797)) (Ben Perlmutter)\n-   [`67aa37b`](https://togithub.com/eslint/eslint/commit/67aa37b583f059226b9c959672400f04ed6a56b5) docs: fix typo in command-line-interface.md ([#&#8203;16871](https://togithub.com/eslint/eslint/issues/16871)) (Kevin Rouchut)\n-   [`337f7ed`](https://togithub.com/eslint/eslint/commit/337f7ed96131d873be7ae6b010739476d0ad15e9) docs: fix width of language input ([#&#8203;16849](https://togithub.com/eslint/eslint/issues/16849)) (Tanuj Kanti)\n-   [`71349a1`](https://togithub.com/eslint/eslint/commit/71349a1f709baa361bd656a7ce4a7d35d857a9a8) docs: Configure a Parser page ([#&#8203;16803](https://togithub.com/eslint/eslint/issues/16803)) (Ben Perlmutter)\n-   [`de7e925`](https://togithub.com/eslint/eslint/commit/de7e925d03764f3681269b30bb60b92ee463c10f) docs: remove extra line numbers in example ([#&#8203;16848](https://togithub.com/eslint/eslint/issues/16848)) (jonz94)\n-   [`ad38d77`](https://togithub.com/eslint/eslint/commit/ad38d77102d6fe30cfa92c831174f178bb35c88b) docs: Update README (GitHub Actions Bot)\n\n#### Chores\n\n-   [`9dbe06d`](https://togithub.com/eslint/eslint/commit/9dbe06d0ad875e6d5964497e2975e8d789e763d0) chore: add `type` property to array-element-newline schema ([#&#8203;16877](https://togithub.com/eslint/eslint/issues/16877)) (MHO)\n-   [`a061527`](https://togithub.com/eslint/eslint/commit/a061527a0332f0edf559acfc2902a327cae098d9) chore: Remove unused functions ([#&#8203;16868](https://togithub.com/eslint/eslint/issues/16868)) (Nicholas C. Zakas)\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string</summary>\n\n### [`v0.29.0`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0290-httpsgithubcomrich-harrismagic-stringcomparev0280v0290-2023-02-11)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.28.0...v0.29.0)\n\n##### Features\n\n-   **x_google_ignoreList:** initial support for ignore lists ([3c711cd](https://togithub.com/rich-harris/magic-string/commit/3c711cd56de6c9735f92e41e457353005c2c0d1c))\n\n### [`v0.28.0`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0280-httpsgithubcomrich-harrismagic-stringcomparev0270v0280-2023-02-11)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.27.0...v0.28.0)\n\n##### Bug Fixes\n\n-   **typings:** sourcesContent may contain null ([#&#8203;235](https://togithub.com/rich-harris/magic-string/issues/235)) ([c2b652a](https://togithub.com/rich-harris/magic-string/commit/c2b652a0d353f183ca991d0b59a7ad0250a52735))\n\n</details>\n\n<details>\n<summary>isaacs/minimatch</summary>\n\n### [`v6.2.0`](https://togithub.com/isaacs/minimatch/compare/v6.1.10...v6.2.0)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.1.10...v6.2.0)\n\n### [`v6.1.10`](https://togithub.com/isaacs/minimatch/compare/v6.1.9...v6.1.10)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.1.9...v6.1.10)\n\n### [`v6.1.9`](https://togithub.com/isaacs/minimatch/compare/v6.1.8...v6.1.9)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.1.8...v6.1.9)\n\n### [`v6.1.8`](https://togithub.com/isaacs/minimatch/compare/v6.1.7...v6.1.8)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.1.7...v6.1.8)\n\n### [`v6.1.7`](https://togithub.com/isaacs/minimatch/compare/v6.1.6...v6.1.7)\n\n[Compare Source](https://togithub.com/isaacs/minimatch/compare/v6.1.6...v6.1.7)\n\n</details>\n\n<details>\n<summary>quicktype/quicktype</summary>\n\n### [`v21.0.13`](https://togithub.com/quicktype/quicktype/compare/810046620db9e3baa13cbe5f389e61db9c4cc04f...c9c152e1aa93ae2768b6c88687bf53ef8bee1874)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/810046620db9e3baa13cbe5f389e61db9c4cc04f...c9c152e1aa93ae2768b6c88687bf53ef8bee1874)\n\n### [`v21.0.12`](https://togithub.com/quicktype/quicktype/compare/e7aa74271fdc672929d28373b879c65e6bc49693...810046620db9e3baa13cbe5f389e61db9c4cc04f)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/e7aa74271fdc672929d28373b879c65e6bc49693...810046620db9e3baa13cbe5f389e61db9c4cc04f)\n\n### [`v21.0.11`](https://togithub.com/quicktype/quicktype/compare/12ea9f506abb3c953afecba5b3477211be2b1099...e7aa74271fdc672929d28373b879c65e6bc49693)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/12ea9f506abb3c953afecba5b3477211be2b1099...e7aa74271fdc672929d28373b879c65e6bc49693)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24701","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24701)"},{"Id":"1580567498","IsPullRequest":true,"CreatedAt":"2023-02-13T14:14:41","Actor":"clydin","Number":"24699","RawContent":null,"Title":"fix(@angular-devkit/build-angular): avoid CommonJS warning for zone.js in esbuild","State":"closed","Body":"The `zone.js` package is currently built into a module structure form that resembles UMD-like output. This cases the CommonJS checker within the experimental esbuild-based browser application builder to issue a warning for zone.js usage. Until the packaging of zone.js is updated to become fully ESM, the `zone.js` package is automatically allowed when performing the CommonJS module check.","Url":"https://github.com/angular/angular-cli/pull/24699","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): avoid CommonJS warning for zone.js in esbuild\" (#24699)"},{"Id":"1579564620","IsPullRequest":true,"CreatedAt":"2023-02-13T14:14:14","Actor":"alan-agius4","Number":"24696","RawContent":null,"Title":"Remove non Bazel E2E CI jobs","State":"closed","Body":"See each commit.","Url":"https://github.com/angular/angular-cli/pull/24696","RelatedDescription":"Closed or merged PR \"Remove non Bazel E2E CI jobs\" (#24696)"},{"Id":"1581226656","IsPullRequest":false,"CreatedAt":"2023-02-12T15:03:26","Actor":"gabrielw007","Number":"24703","RawContent":null,"Title":"Delete Component","State":"closed","Body":"### Command\n\nbuild, generate\n\n### Description\n\nrequired a new command to delete component and its references from the app\r\nalso to display all its references in the app\n\n### Describe the solution you'd like\n\nng del c myComponent\n\n### Describe alternatives you've considered\n\ncurrently you have to do everything manually...","Url":"https://github.com/angular/angular-cli/issues/24703","RelatedDescription":"Closed issue \"Delete Component\" (#24703)"},{"Id":"1580765209","IsPullRequest":false,"CreatedAt":"2023-02-11T09:52:37","Actor":"boskiv","Number":"24702","RawContent":null,"Title":"Generate command take a long time to execute","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nrunning `ng g m dashboard` take 4 minutes. Is the way to debug it where it stuck?\r\n\n\n### Minimal Reproduction\n\nnvm use 19\r\nng new my-app\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.5\r\nNode: 19.5.0 (Unsupported)\r\nPackage Manager: npm 9.3.1\r\nOS: darwin arm64\n```\n\n\n### Anything else relevant?\n\nswitching to 18 nodejs fix the problem","Url":"https://github.com/angular/angular-cli/issues/24702","RelatedDescription":"Open issue \"Generate command take a long time to execute\" (#24702)"},{"Id":"1579055833","IsPullRequest":true,"CreatedAt":"2023-02-10T20:39:12","Actor":"angular-robot","Number":"24694","RawContent":null,"Title":"build: update all non-major dependencies to v0.17.7","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.17.6` -> `0.17.7`](https://renovatebot.com/diffs/npm/esbuild/0.17.6/0.17.7) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.6` -> `0.17.7`](https://renovatebot.com/diffs/npm/esbuild/0.17.6/0.17.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.17.6` -> `0.17.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.6/0.17.7) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.17.6` -> `0.17.7`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.17.6/0.17.7) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.17.7`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;0177)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.17.6...v0.17.7)\n\n-   Change esbuild's parsing of TypeScript instantiation expressions to match TypeScript 4.8+ ([#&#8203;2907](https://togithub.com/evanw/esbuild/issues/2907))\n\n    This release updates esbuild's implementation of instantiation expression erasure to match [microsoft/TypeScript#&#8203;49353](https://togithub.com/microsoft/TypeScript/pull/49353). The new rules are as follows (copied from TypeScript's PR description):\n\n    > When a potential type argument list is followed by\n    >\n    > -   a line break,\n    > -   an `(` token,\n    > -   a template literal string, or\n    > -   any token except `<` or `>` that isn't the start of an expression,\n    >\n    > we consider that construct to be a type argument list. Otherwise we consider the construct to be a `<` relational expression followed by a `>` relational expression.\n\n-   Ignore `sideEffects: false` for imported CSS files ([#&#8203;1370](https://togithub.com/evanw/esbuild/issues/1370), [#&#8203;1458](https://togithub.com/evanw/esbuild/pull/1458), [#&#8203;2905](https://togithub.com/evanw/esbuild/issues/2905))\n\n    This release ignores the `sideEffects` annotation in `package.json` for CSS files that are imported into JS files using esbuild's `css` loader. This means that these CSS files are no longer be tree-shaken.\n\n    Importing CSS into JS causes esbuild to automatically create a CSS entry point next to the JS entry point containing the bundled CSS. Previously packages that specified some form of `\"sideEffects\": false` could potentially cause esbuild to consider one or more of the JS files on the import path to the CSS file to be side-effect free, which would result in esbuild removing that CSS file from the bundle. This was problematic because the removal of that CSS is outwardly observable, since all CSS is global, so it was incorrect for previous versions of esbuild to tree-shake CSS files imported into JS files.\n\n-   Add constant folding for certain additional equality cases ([#&#8203;2394](https://togithub.com/evanw/esbuild/issues/2394), [#&#8203;2895](https://togithub.com/evanw/esbuild/issues/2895))\n\n    This release adds constant folding for expressions similar to the following:\n\n    ```js\n    // Original input\n    console.log(\n      null === 'foo',\n      null === undefined,\n      null == undefined,\n      false === 0,\n      false == 0,\n      1 === true,\n      1 == true,\n    )\n\n    // Old output\n    console.log(\n      null === \"foo\",\n      null === void 0,\n      null == void 0,\n      false === 0,\n      false == 0,\n      1 === true,\n      1 == true\n    );\n\n    // New output\n    console.log(\n      false,\n      false,\n      true,\n      false,\n      true,\n      false,\n      true\n    );\n    ```\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24694","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies to v0.17.7\" (#24694)"},{"Id":"1577441323","IsPullRequest":true,"CreatedAt":"2023-02-10T20:18:18","Actor":"alan-agius4","Number":"24684","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly copy `safety-worker.js` contents","State":"closed","Body":"\r\nPreviously, `safety-worker.js` and `worker-basic.min.js` contained incorrect data due to an incorrect path.\r\n\r\nCloses #24678\r\n","Url":"https://github.com/angular/angular-cli/pull/24684","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): correctly copy `safety-worker.js` contents\" (#24684)"},{"Id":"1577483036","IsPullRequest":false,"CreatedAt":"2023-02-10T20:17:43","Actor":"cherezovvv","Number":"24685","RawContent":null,"Title":"`ng add` gives errors with a `before` parameter in the `.npmrc` file","State":"closed","Body":"### Command\n\nadd\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFor `before` parameter in npm config, value is of type `string`, for example `before = 2023-02-09T08:45:22.778Z`.\r\n`packument` function of `pacote` package, expects `before` as js Date type.\r\nIt seems to me that it is necessary to add a date type conversion in the `normalizeOptions` function in `packages/angular/cli/src/utilities/package-metadata.ts`\n\n### Minimal Reproduction\n\n1. Add `before` parameter to npm config (`.npmrc` file) - `before = 2023-02-09T08:45:22.778Z`\r\n2. Run script `ng add @angular/material`\n\n### Exception or Error\n\n```text\n`Unable to load package information from registry: this.before.toISOString is not a function`\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 13.2.5\r\nNode: 16.14.0\r\nPackage Manager: npm 8.3.1\r\nOS: linux x64\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1302.5\r\n@angular-devkit/build-angular   13.2.5\r\n@angular-devkit/core            13.2.5\r\n@angular-devkit/schematics      13.2.5\r\n@angular/cli                    13.2.5\r\n@schematics/angular             13.2.5\r\nrxjs                            7.5.4\r\ntypescript                      4.5.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24685","RelatedDescription":"Closed issue \"`ng add` gives errors with a `before` parameter in the `.npmrc` file\" (#24685)"},{"Id":"1577551032","IsPullRequest":true,"CreatedAt":"2023-02-10T20:17:41","Actor":"alan-agius4","Number":"24687","RawContent":null,"Title":"fix(@angular/cli): convert `before` option in `.npmrc` to Date","State":"closed","Body":"Previously, the `before` option in the npmrc was not converted properly to a date.\r\n\r\nSee: https://docs.npmjs.com/cli/v8/using-npm/config#before\r\n\r\nCloses #24685\r\n","Url":"https://github.com/angular/angular-cli/pull/24687","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): convert `before` option in `.npmrc` to Date\" (#24687)"},{"Id":"1577582274","IsPullRequest":false,"CreatedAt":"2023-02-10T20:16:23","Actor":"szape89","Number":"24688","RawContent":null,"Title":"Build failure for default exported modules","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.1.4\n\n### Description\n\nI'm using the [router unwrap feature](https://blog.angular.io/angular-v15-is-now-available-df7be7f2f4c8#:~:text=Router%20unwraps%20default%20imports) of Angular 15 when loading lazy loaded modules in the router module.\r\nIn version 15.1.4 it worked, but since version 15.1.5 the build fails for the lazy loaded modules.\n\n### Minimal Reproduction\n\nThis worked before:\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lazy-loaded',\r\n    loadChildren: () => import('./lazy-loaded/lazy-loaded.module')\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n```\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({})\r\nexport default class LazyLoadedModule {}\r\n```\r\n\r\nBut now it breaks, unless I change it back to the \"old\" way:\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'lazy-loaded',\r\n    loadChildren: () => import('./lazy-loaded/lazy-loaded.module').then(m => m.LazyLoadedModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n```\r\n\r\n```\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({})\r\nexport class LazyLoadedModule {}\r\n```\n\n### Exception or Error\n\n```text\n./src/app/lazy-loaded/lazy-loaded.module.ts - Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js):\r\nError: /ng-app/src/app/lazy-loaded/lazy-loaded.module.ts: We don't know what to do with this node type. We were previously a Statement but we can't fit in here?\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.5\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: win32 x64\r\n\r\nAngular: 15.1.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24688","RelatedDescription":"Closed issue \"Build failure for default exported modules\" (#24688)"},{"Id":"1578313179","IsPullRequest":true,"CreatedAt":"2023-02-10T20:16:21","Actor":"clydin","Number":"24692","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use babel default export helper in build optimizer","State":"closed","Body":"Within the build optimizer's static member optimization pass, a class that is directly default exported must be split into two statements: the class declaration and the default export. This is because the pass can wrap classes in a pure annotated IIFE which results in a variable declaration replacement and variable declarations can not be directly default exported. Previously, the pass did this splitting manually but this was causing later babel plugins to fail. In addition to updating the AST in this case, scoping information also needed to be updated. To support this, a babel helper package is now used that handles the details of the statement split operation.\r\n\r\nFixes #24688","Url":"https://github.com/angular/angular-cli/pull/24692","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use babel default export helper in build optimizer\" (#24692)"},{"Id":"1579692389","IsPullRequest":false,"CreatedAt":"2023-02-10T20:13:36","Actor":"liesahead","Number":"24697","RawContent":null,"Title":"Browserslist is ignored.","State":"closed","Body":"### Command\r\n\r\nbuild, serve, test\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv14\r\n\r\n### Description\r\n\r\nBrowserlistrc is ignored for some reason and this warning was not present in v14.\r\n\r\n### Minimal Reproduction\r\n\r\nSteps to reproduce\r\n\r\n1. Run `ng new *proj_name*`;\r\n2. Change `target` in `tsconfig` to `ES2020`;\r\n3. Run `ng serve`;\r\n4. See warning `TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI. To control ECMA version and features use the Browerslist configuration.`;\r\n5. Run `ng generate config browserslist`;\r\n6. Run `ng serve`;\r\n7. See warning `TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\" and \"false\" respectively by the Angular CLI. To control ECMA version and features use the Browerslist configuration.`.\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.1.5\r\nNode: 18.14.0\r\nPackage Manager: npm 9.4.2\r\nOS: win32 x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```","Url":"https://github.com/angular/angular-cli/issues/24697","RelatedDescription":"Closed issue \"Browserslist is ignored.\" (#24697)"},{"Id":"1580020463","IsPullRequest":true,"CreatedAt":"2023-02-10T20:13:35","Actor":"alan-agius4","Number":"24698","RawContent":null,"Title":"fix(@angular-devkit/build-angular): update the ECMA output warning message to be more actionable","State":"closed","Body":"\r\n\r\nUpdate the `TypeScript compiler options \"target\" and \"useDefineForClassFields\" are set to \"ES2022\"` warning message to be more actionable.\r\n\r\nCloses: #24697\r\n","Url":"https://github.com/angular/angular-cli/pull/24698","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): update the ECMA output warning message to be more actionable\" (#24698)"},{"Id":"1578256203","IsPullRequest":false,"CreatedAt":"2023-02-10T18:35:36","Actor":"Blackbaud-SteveBrush","Number":"24691","RawContent":null,"Title":"SCSS @import/@use not resolving root-relative paths","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.11\n\n### Description\n\nIn Angular 14.2.11 I could `@use` another project's SCSS file using the following format:\r\n```\r\n@use 'projects/theme/src/lib/variables' as *;\r\n```\r\nAfter updating to v.15.1.1, I'm seeing the following error:\r\n```\r\n✖ Compiling with Angular sources in Ivy partial compilation mode.\r\nCan't find stylesheet to import.\r\n  ╷\r\n2 │ @use 'projects/theme/src/lib/variables' as *;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  projects/foobar/src/lib/foobar.component.scss 2:1  root stylesheet\r\n```\n\n### Minimal Reproduction\n\n```\r\nng new my-app\r\nng g library foobar\r\nng g library theme\r\n```\r\nCreate a SCSS file in the \"theme\" project and attempt to `@use` it in the \"foobar\" project.\n\n### Exception or Error\n\n```text\n✖ Compiling with Angular sources in Ivy partial compilation mode.\r\nCan't find stylesheet to import.\r\n  ╷\r\n2 │ @use 'projects/theme/src/lib/variables' as *;\r\n  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  projects/foobar/src/lib/foobar.component.scss 2:1  root stylesheet\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.1.5\r\nNode: 16.19.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin x64\r\n\r\nAngular: 15.1.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@schematics/angular             15.1.5\r\nng-packagr                      15.1.2\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\n```\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24691","RelatedDescription":"Closed issue \"SCSS @import/@use not resolving root-relative paths\" (#24691)"},{"Id":"1577704337","IsPullRequest":true,"CreatedAt":"2023-02-09T17:00:11","Actor":"angular-robot","Number":"24689","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [bazel_skylib](https://togithub.com/bazelbuild/bazel-skylib) | http_archive | patch | `1.4.0` -> `1.4.1` |\n| [ng-packagr](https://togithub.com/ng-packagr/ng-packagr) | devDependencies | patch | [`15.1.1` -> `15.1.2`](https://renovatebot.com/diffs/npm/ng-packagr/15.1.1/15.1.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>bazelbuild/bazel-skylib</summary>\n\n### [`v1.4.1`](https://togithub.com/bazelbuild/bazel-skylib/releases/tag/1.4.1)\n\n[Compare Source](https://togithub.com/bazelbuild/bazel-skylib/compare/1.4.0...1.4.1)\n\nRelease 1.4.1\n\nBugfix release: fixes gazelle plugin failure with `--incompatible_disallow_empty_glob` ([#&#8203;431](https://togithub.com/bazelbuild/bazel-skylib/issues/431)) and (for released versions) with `--incompatible_disable_starlark_host_transitions` ([#&#8203;433](https://togithub.com/bazelbuild/bazel-skylib/issues/433)).\n\n**Contributors**\nAlexandre Rostovtsev, Chuck Grindel\n\n**WORKSPACE setup**\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"bazel_skylib\",\n    sha256 = \"b8a1527901774180afc798aeb28c4634bdccf19c4d98e7bdd1ce79d1fe9aaad7\"\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz\",\n    ],\n)\n\nload(\"@&#8203;bazel_skylib//:workspace.bzl\", \"bazel_skylib_workspace\")\n\nbazel_skylib_workspace()\n```\n\n***Additional WORKSPACE setup for the Gazelle plugin***\n\n```starlark\nhttp_archive(\n    name = \"bazel_skylib_gazelle_plugin\",\n    sha256 = \"0a466b61f331585f06ecdbbf2480b9edf70e067a53f261e0596acd573a7d2dc3\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-gazelle-plugin-1.4.1.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-gazelle-plugin-1.4.1.tar.gz\",\n    ],\n)\n\nload(\"@&#8203;bazel_skylib_gazelle_plugin//:workspace.bzl\", \"bazel_skylib_gazelle_plugin_workspace\")\n\nbazel_skylib_gazelle_plugin_workspace()\n\nload(\"@&#8203;bazel_skylib_gazelle_plugin//:setup.bzl\", \"bazel_skylib_gazelle_plugin_setup\")\n\nbazel_skylib_gazelle_plugin_setup()\n```\n\n**Using the rules**\n\nSee [the source](https://togithub.com/bazelbuild/bazel-skylib/tree/$VERSION).\n\n</details>\n\n<details>\n<summary>ng-packagr/ng-packagr</summary>\n\n### [`v15.1.2`](https://togithub.com/ng-packagr/ng-packagr/blob/HEAD/CHANGELOG.md#&#8203;1512-httpsgithubcomng-packagrng-packagrcompare15111512-2023-02-09)\n\n[Compare Source](https://togithub.com/ng-packagr/ng-packagr/compare/15.1.1...15.1.2)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24689","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#24689)"},{"Id":"1577308667","IsPullRequest":true,"CreatedAt":"2023-02-09T16:59:58","Actor":"angular-robot","Number":"24682","RawContent":null,"Title":"build: update github/codeql-action action to v2.2.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.2.2` -> `v2.2.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.2.3`](https://togithub.com/github/codeql-action/compare/v2.2.2...v2.2.3)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.2.2...v2.2.3)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC45NS4wIiwidXBkYXRlZEluVmVyIjoiMzQuOTUuMCJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/24682","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.2.3\" (#24682)"},{"Id":"1578124102","IsPullRequest":true,"CreatedAt":"2023-02-09T16:24:21","Actor":"alan-agius4","Number":"24690","RawContent":null,"Title":"ci: replace default shell with bash in Windows","State":"closed","Body":"Most of the steps require bash so we should use bash instead of powershell.\r\n","Url":"https://github.com/angular/angular-cli/pull/24690","RelatedDescription":"Closed or merged PR \"ci: replace default shell with bash in Windows\" (#24690)"},{"Id":"1577527205","IsPullRequest":false,"CreatedAt":"2023-02-09T09:38:14","Actor":"yangjunfocus","Number":"24686","RawContent":null,"Title":"Transform failed with 1 error: ERROR: Unterminated string token","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon, compiler-cli, core, zone.js\n\n### Is this a regression?\n\nYes\n\n### Description\n\n`ng build`\r\n\r\n`\r\n./src/polyfills.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: Transform failed with 1 error:\r\nC:/NodeWeb/UTSOURCE.V3.Node/OverSeas/src/app/login/login.component.scss:17:100: ERROR: Unterminated string token\r\n    at C:\\NodeWeb\\UTSOURCE.V3.Node\\OverSeas\\node_modules\\@ngtools\\webpack\\src\\ivy\\loader.js:81:18\r\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\r\n\r\n./src/styles.scss.webpack[javascript/auto]!=!./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].rules[0].oneOf[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].rules[0].oneOf[0].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[5].rules[1].use[0]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[5].rules[1].use[1]!./src/styles.scss - Error: Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\r\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 13.3.10\r\nNode: 14.17.5\r\nPackage Manager: npm 8.5.0\r\nOS: win32 x64\r\n\r\nAngular: 13.3.12\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1303.10\r\n@angular-devkit/build-angular   13.3.10\r\n@angular-devkit/core            13.3.10\r\n@angular-devkit/schematics      13.3.10\r\n@angular/cli                    13.3.10\r\n@schematics/angular             13.3.10\r\nrxjs                            6.6.7\r\ntypescript                      4.6.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24686","RelatedDescription":"Closed issue \"Transform failed with 1 error: ERROR: Unterminated string token\" (#24686)"},{"Id":"1577420932","IsPullRequest":false,"CreatedAt":"2023-02-09T08:09:14","Actor":"egonknapen","Number":"24683","RawContent":null,"Title":"ng update (all new package to latest version)","State":"closed","Body":"### Command\n\nupdate\n\n### Description\n\nEvery week I check the packages, and need to ng update every package. \r\n\r\nMeaning, that it first will install a temporary new angular cli, than install the new angular cli and the rest.\r\n\r\nCan't we just have a \r\n\r\nng update all\r\n\r\nWhich just updates everything, to the latest version ?\n\n### Describe the solution you'd like\n\n> ng update all\r\n\r\nor something similar. I'm updating the cli and the core, I wouldn't care about updating the cli alone, without the core. Angular has progressed so far, there is no real use to only update the cli. And I'm using cdk too, so if I update one (the core), I will always update the other (cdk), if available.\r\n\r\nIf only the cli is updated, than a ng update all would only update the @angular/cli package ofcourse.\r\n\r\nJust to make life a little simpler...\n\n### Describe alternatives you've considered\n\nEvery week I type:\r\n\r\n> ng update @angular/cli @angular/core @angular/cdk","Url":"https://github.com/angular/angular-cli/issues/24683","RelatedDescription":"Closed issue \"ng update (all new package to latest version)\" (#24683)"},{"Id":"1576874306","IsPullRequest":true,"CreatedAt":"2023-02-08T22:59:33","Actor":"dgp1130","Number":"24681","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24681","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#24681)"},{"Id":"1576761165","IsPullRequest":true,"CreatedAt":"2023-02-08T22:08:58","Actor":"dgp1130","Number":"24680","RawContent":null,"Title":"docs: release notes for the v15.1.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/24680","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.5 release\" (#24680)"},{"Id":"1576667868","IsPullRequest":true,"CreatedAt":"2023-02-08T20:29:37","Actor":"dgp1130","Number":"24679","RawContent":null,"Title":"Bump version to \"v15.1.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24679","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.5\" with changelog.\" (#24679)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1583255984","IsPullRequest":false,"CreatedAt":"2023-02-14T00:01:28","Actor":"jmaruiz","Number":"26617","RawContent":null,"Title":"bug(DatePicker): Incorrect parsing of date when typing YYYY-MM-DD format","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDate picker input updates to the previous day when using this specific format: YYYY-MM-DD\r\nYou must use hyphens and double digit month and day (from my testing).\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Problem exists in the documentation page = https://material.angular.io/components/datepicker/overview\r\n2. Manually type in 2023-02-13 into the first test input\r\n3. Press tab to blur input\r\n4. See that the date has been updated to 2/12/2023\r\n\n\n### Expected Behavior\n\nDate should update to 2/13/2023\n\n### Actual Behavior\n\nDate actually updates to the previous day, in this case 2/12/2023\n\n### Environment\n\n- Angular: 15\r\n- CDK/Material: 15.1.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Tested in Windows and macOS\r\n","Url":"https://github.com/angular/components/issues/26617","RelatedDescription":"Open issue \"bug(DatePicker): Incorrect parsing of date when typing YYYY-MM-DD format\" (#26617)"},{"Id":"1582141518","IsPullRequest":true,"CreatedAt":"2023-02-13T11:07:18","Actor":"kaisnb","Number":"26616","RawContent":null,"Title":"docs: fix outdated wai-aria-practices dialog_modal url","State":"open","Body":"I am not sure if the new URL is the correct one, but the old one https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal seems outdated since it gets redirected to https://www.w3.org/WAI/ARIA/apg/ and the page contains nothing about modal dialogs. So I suggest changing it to https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/ .","Url":"https://github.com/angular/components/pull/26616","RelatedDescription":"Open PR \"docs: fix outdated wai-aria-practices dialog_modal url\" (#26616)"},{"Id":"1582084021","IsPullRequest":false,"CreatedAt":"2023-02-13T10:33:10","Actor":"zeeshan9","Number":"26615","RawContent":null,"Title":"select and de-select all options in mat-select dropdown","State":"open","Body":"### Feature Description\r\n\r\nThere should be a built in feature to in select dropdown in angular material to select and deselect all option in dropdown. Currently we have to custom code this feature using mat-select-trigger like below code.\r\n\r\n### Use Case\r\n\r\n### Feature Description\r\n\r\nThere should be a built in feature to in select dropdown in angular material to select and deselect all option in dropdown. Currently we have to custom code this feature using mat-select-trigger like below code. \r\n\r\n### Use Case\r\n\r\nThere are numerous example where this feature is needed. This is quite a general feature which is needed most of the time in case of multiple selection. For example like below code, we can have multiple boarding option for user accounts app for admin, if he want to select all option, he needed to select all one by one, base on which our api is called. If some cases option are so much that its hard and time consuming to select or deselect all of them.\r\nCurrently there a lot of extra line of code need to be implemented to have this feature, and in some sites there can be lot of dropdowns especially in CMS sites. Built in feature for this save a lot of extra effort for this.\r\n\r\n**Html File**\r\n```\r\n<mat-form-field class=\"ml-lg-auto mr-2 width-200\">\r\n                      <mat-select placeholder=\"Filter by Onboarding State\"   [(ngModel)]=\"selectedOnboardingStates\"\r\n                           [compareWith]=\"compareSelectOptions\" multiple >\r\n                      <mat-select-trigger>\r\n                        <mat-label *ngIf=\"selectedOnboardingStates && onBoardingStates.length !== 1 && \r\n                                     selectedOnboardingStates.length === onBoardingStates.length\">All</mat-label>\r\n                        <ng-container *ngIf=\"selectedOnboardingStates && selectedOnboardingStates.length !== \r\n                           onBoardingStates.length\">{{selectedOnboardingStates[0] ? selectedOnboardingStates[0].name : ''}}<span *ngIf=\"selectedOnboardingStates.length > 1\" class=\"example-additional-selection\">\r\n                            (+{{selectedOnboardingStates.length - 1}} {{selectedOnboardingStates.length === 2 ? 'other' : 'others'}})\r\n                          </span>\r\n                        </ng-container>\r\n                      </mat-select-trigger> \r\n                      \r\n                      <div class=\"mat-option\" *ngIf=\"onBoardingStates && onBoardingStates.length !== 1\">\r\n                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\r\n                          [indeterminate]=\"isAnySelected() && !isAllSelected()\" [formControl]=\"masterToggleCheckbox\"\r\n                          class=\"qa-checkbox-master\"\r\n                          [ngClass]=\"selectToolTip() !== 'Select All' ? 'fas-font-green' : 'text-dark'\">\r\n                          Select All\r\n                        </mat-checkbox>\r\n                      </div>\r\n\r\n                      <mat-option *ngFor=\"let item of onBoardingStates\" [value]=\"item.id\">\r\n                        {{item.name}}\r\n                      </mat-option>\r\n\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n```\r\n**Model.ts File**\r\n```\r\n            export enum OnBoardingStates {\r\n              PENDING = 0,\r\n              ONBOARDED = 100\r\n            }\r\n```\r\n\r\n**TS File**\r\n```\r\n// these method needed in code for above code work\r\n       onBoardingStates: IStatus[] = [\r\n            { name: 'Pending', id: OnBoardingStates.PENDING },\r\n            { name: 'Onboarded', id: OnBoardingStates.ONBOARDED },\r\n            { name: 'Cancel', id: OnBoardingStates.CANCEL}\r\n          ];\r\n       selectedAccountTypes: any[] = [];\r\n       masterToggleCheckbox: FormControl = new FormControl(true);\r\n\r\n       selectToolTip(): string {\r\n    return this.isAllSelected() ? 'Deselect All' : 'Select All';\r\n  }\r\n\r\n  isAllSelected(): boolean {\r\n    this.masterToggleCheckbox.setValue(this.onBoardingStates && this.selectedOnboardingStates?.length === this.onBoardingStates.length);\r\n    return this.onBoardingStates && this.selectedOnboardingStates?.length === this.onBoardingStates.length;\r\n  }\r\n\r\n  isAnySelected(): boolean {\r\n    return this.onBoardingStates && this.selectedOnboardingStates?.length < this.onBoardingStates.length && this.selectedOnboardingStates.length > 0;\r\n  }\r\n\r\n  masterToggle(): void {\r\n    if (this.isAllSelected()) {\r\n      this.selectedOnboardingStates = [];\r\n    } else {\r\n      const ids = this.onBoardingStates.map((item) => {\r\n        return item.id;\r\n      });\r\n      this.selectedOnboardingStates = ids;\r\n    }\r\n  }\r\n```","Url":"https://github.com/angular/components/issues/26615","RelatedDescription":"Open issue \"select and de-select all options in mat-select dropdown\" (#26615)"},{"Id":"1582048957","IsPullRequest":false,"CreatedAt":"2023-02-13T10:25:11","Actor":"mzeeshan9","Number":"26614","RawContent":null,"Title":"select and de-select all options in mat-select dropdown","State":"closed","Body":"### Feature Description\r\n\r\nThere should be a built in feature to in select dropdown in angular material to select and deselect all option in dropdown. Currently we have to custom code this feature using mat-select-trigger like below code. \r\n\r\n### Use Case\r\n\r\nThere are numerous example where this feature is needed. This is quite a general feature which is needed most of the time in case of multiple selection. For example like below code, we can have multiple boarding option for user accounts app for admin, if he want to select all option, he needed to select all one by one, base on which our api is called. If some cases option are so much that its hard and time consuming to select or deselect all of them.\r\nCurrently there a lot of extra line of code need to be implemented to have this feature, and in some sites there can be lot of dropdowns especially in CMS sites. Built in feature for this save a lot of extra effort for this.\r\n\r\n\r\n<mat-form-field class=\"ml-lg-auto mr-2 width-200\">\r\n                      <mat-select placeholder=\"Filter by Onboarding State\"   [(ngModel)]=\"selectedOnboardingStates\"\r\n                           [compareWith]=\"compareSelectOptions\" multiple >\r\n                      <mat-select-trigger>\r\n                        <mat-label *ngIf=\"selectedOnboardingStates && onBoardingStates.length !== 1 && \r\n                                     selectedOnboardingStates.length === onBoardingStates.length\">All</mat-label>\r\n                        <ng-container *ngIf=\"selectedOnboardingStates && selectedOnboardingStates.length !== \r\n                           onBoardingStates.length\">{{selectedOnboardingStates[0] ? selectedOnboardingStates[0].name : ''}}<span *ngIf=\"selectedOnboardingStates.length > 1\" class=\"example-additional-selection\">\r\n                            (+{{selectedOnboardingStates.length - 1}} {{selectedOnboardingStates.length === 2 ? 'other' : 'others'}})\r\n                          </span>\r\n                        </ng-container>\r\n                      </mat-select-trigger> \r\n                      \r\n                      <div class=\"mat-option\" *ngIf=\"onBoardingStates && onBoardingStates.length !== 1\">\r\n                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\r\n                          [indeterminate]=\"isAnySelected() && !isAllSelected()\" [formControl]=\"masterToggleCheckbox\"\r\n                          class=\"qa-checkbox-master\"\r\n                          [ngClass]=\"selectToolTip() !== 'Select All' ? 'fas-font-green' : 'text-dark'\">\r\n                          Select All\r\n                        </mat-checkbox>\r\n                      </div>\r\n\r\n                      <mat-option *ngFor=\"let item of onBoardingStates\" [value]=\"item.id\">\r\n                        {{item.name}}\r\n                      </mat-option>\r\n\r\n                      </mat-select>\r\n                    </mat-form-field>","Url":"https://github.com/angular/components/issues/26614","RelatedDescription":"Closed issue \"select and de-select all options in mat-select dropdown\" (#26614)"},{"Id":"1581990566","IsPullRequest":false,"CreatedAt":"2023-02-13T09:42:50","Actor":"CrlsMrls","Number":"26613","RawContent":null,"Title":"bug(theme): applying density \"mat.all-component-densities(-3);\" and \"mat.chips-density(-3)\" crashes compilation","State":"open","Body":"### Description\r\n\r\nIn version 15 Angular Material Components, it is not possible to apply density globally for values lower than -2. Based on the error, the chips generate this crash. \r\n\r\nThe Sass compilation crashes when adding any of the following two lines:\r\n- `@include mat.chips-density(-3)`\r\n- `@include mat.all-component-densities(-3)`\r\n\r\n\r\n### Reproduction\r\n\r\n Use material theming as described in https://material.angular.io/guide/theming and apply density to all components with `-3` or lower values.\r\n\r\nI created an application to check how densities affect the Angular Material Components. \r\n**Source code:** https://github.com/CrlsMrls/angular-material-component-densities\r\n**Application running at:** https://angular-material-density.netlify.app/ \r\n\r\nThis repository currently uses the latest version 15.1.4 (I will try to keep it updated).\r\n\r\nSteps to reproduce:\r\n1. `git clone https://github.com/CrlsMrls/angular-material-component-densities.git`\r\n2. `cd angular-material-component-densities && npm install`\r\n3. `npx ng serve` \r\n4. Open your browser on http://localhost:4200/ -> application works as expected\r\n5. Change file `./src/styles.scss` line 34 from `@include mat.all-component-densities(0);` to `@include mat.all-component-densities(-3);` -> **application crashes**\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nApplication does not crash when applying lower density values to chips or to all components.\r\n\r\n### Actual Behavior\r\n\r\nAny of those settings generates the following error: \r\n\r\n```bash\r\n./src/styles.scss - Error: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: \"mdc-density: height must be between 24px and 32px (inclusive), but received 20px.\"\r\n    ╷\r\n632 │     $height: density.prop-value(\r\n    │ ┌────────────^\r\n633 │ │     $density-config: $density-config,\r\n634 │ │     $density-scale: $density-scale,\r\n635 │ │     $property-name: height,\r\n636 │ │   );\r\n    │ └───^\r\n    ╵\r\n  @material/chips/_chip-theme.scss 632:12                      density()\r\n  node_modules/@angular/material/chips/_chips-theme.scss 97:5  density()\r\n  src/styles.scss 42:3                                         root stylesheet\r\n```\r\n\r\nAnd application does not work.\r\n\r\n### Environment\r\n\r\nAngular: 15.1.4\r\nCDK/Material: 15.1.4\r\nBrowser(s): Chrome Version 110.0.5481.77 (Official Build) (arm64) and Safari Version 16.2\r\nOperating System: macOS\r\n","Url":"https://github.com/angular/components/issues/26613","RelatedDescription":"Open issue \"bug(theme): applying density \"mat.all-component-densities(-3);\" and \"mat.chips-density(-3)\" crashes compilation\" (#26613)"},{"Id":"1581652211","IsPullRequest":true,"CreatedAt":"2023-02-13T04:51:10","Actor":"OneSidedPrism","Number":"26612","RawContent":null,"Title":"Fixed minor typo","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26612","RelatedDescription":"Open PR \"Fixed minor typo\" (#26612)"},{"Id":"1581436206","IsPullRequest":true,"CreatedAt":"2023-02-12T22:41:40","Actor":"HenriqueOliveiraFerraz","Number":"26611","RawContent":null,"Title":"fix(material/schematics): getWorkspace should receive the project parameter from options","State":"open","Body":"For some reason, when I use the ng new with the --collection argument, the getWorkspace is unable to find the angular.json file and throws an error with the following message:\r\n\r\n- Exception has occurred: Error: Path \"/angular.json\" does not exist.\r\n\r\nThe reason I'm requesting this change inside angular/material source, is because I can't use the \"ng add @angular/material\" right after using the \"ng new\" inside a collection I'm developing.","Url":"https://github.com/angular/components/pull/26611","RelatedDescription":"Open PR \"fix(material/schematics): getWorkspace should receive the project parameter from options\" (#26611)"},{"Id":"1581382835","IsPullRequest":false,"CreatedAt":"2023-02-12T19:34:21","Actor":"elrondfeng","Number":"26610","RawContent":null,"Title":"custom theme : Undefined mixin (angular material 15.1.4)  @include theme.validate-theme-styles($light-theme, $theme)","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nSASS custom theme stopped working. \r\n\r\nError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: Undefined mixin.\r\n   ╷\r\n54 │   @include theme.validate-theme-styles($light-theme, $theme);\r\n   │   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   ╵\r\n  @material\\linear-progress\\_linear-progress-theme.scss 54:3                 theme-styles()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 14:3  -palette-styles()\r\n  node_modules\\@angular\\material\\core\\theming\\_all-theme.scss 47:5           @content\r\n  node_modules\\@angular\\material\\core\\theming\\_theming.scss 402:3            private-check-duplicate-theme-styles()\r\n  node_modules\\@angular\\material\\core\\theming\\_all-theme.scss 44:3           all-component-themes()\r\n  src\\lawyer.scss 35:1                                                       root stylesheet\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. angular version: 15.1.4 ;  angular material version: 15.1.4 \r\n2. create a custom theme : \r\n\r\n@use '@angular/material' as mat;\r\n@import '@angular/material/theming';\r\n@include mat.core();\r\n\r\n$my-primary: mat.define-palette(mat.$indigo-palette, 800);\r\n$my-accent: mat.define-palette(mat.$green-palette, A700);\r\n$my-warn: mat.define-palette(mat.$red-palette,A700);\r\n\r\n$theme: mat.define-light-theme((\r\n  color: (\r\n    primary: $my-primary,\r\n    accent: $my-accent,\r\n    warn: $my-warn,\r\n  )\r\n));\r\n\r\n@include mat.core-theme($theme);\r\n@include mat.all-component-themes($theme);\r\n\r\n3. ng build\r\n\r\n### Expected Behavior\r\n\r\nng build successful \r\n\r\n### Actual Behavior\r\n\r\nng build failed.  some angular material components can apply the custom themes successfully, like button\r\nsome angular material components including the mat.checkbox-theme and mat.dialog-theme  need to use the  validate-theme-styles mixin,  failed. \r\n\r\n./src/lawyer.scss?ngGlobalStyle - Error: Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\r\nHookWebpackError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: Undefined mixin.\r\n   ╷\r\n54 │   @include theme.validate-theme-styles($light-theme, $theme);\r\n   │   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   ╵\r\n  @material\\linear-progress\\_linear-progress-theme.scss 54:3                 theme-styles()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 14:3  -palette-styles()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 35:7  @content\r\n  node_modules\\@angular\\material\\core\\mdc-helpers\\_mdc-helpers.scss 193:5    @content\r\n  node_modules\\@angular\\material\\core\\mdc-helpers\\_mdc-helpers.scss 233:3    disable-mdc-fallback-declarations()\r\n  node_modules\\@angular\\material\\core\\mdc-helpers\\_mdc-helpers.scss 192:3    using-mdc-theme()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 33:3  color()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 60:7  @content\r\n  node_modules\\@angular\\material\\core\\theming\\_theming.scss 402:3            private-check-duplicate-theme-styles()\r\n  node_modules\\@angular\\material\\progress-bar\\_progress-bar-theme.scss 54:3  theme()\r\n  node_modules\\@angular\\material\\core\\theming\\_all-theme.scss 47:5           @content\r\n  node_modules\\@angular\\material\\core\\theming\\_all-theme.scss 47:5           @content\r\n  node_modules\\@angular\\material\\core\\theming\\_theming.scss 402:3            private-check-duplicate-theme-styles()\r\n  node_modules\\@angular\\material\\core\\theming\\_all-theme.scss 44:3           all-component-themes()\r\n  src\\lawyer.scss 35:1                                                       root stylesheet\r\n\r\n\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n\r\nAngular: 15.1.4\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.5\r\n@angular-devkit/build-angular   15.1.5\r\n@angular-devkit/core            15.1.5\r\n@angular-devkit/schematics      15.1.5\r\n@angular/cli                    15.1.5\r\n@angular/fire                   7.5.0\r\n@angular/flex-layout            15.0.0-beta.42\r\n@schematics/angular             15.1.5\r\nrxjs                            7.5.7\r\ntypescript                      4.9.5\r\n","Url":"https://github.com/angular/components/issues/26610","RelatedDescription":"Open issue \"custom theme : Undefined mixin (angular material 15.1.4)  @include theme.validate-theme-styles($light-theme, $theme)\" (#26610)"},{"Id":"1581377263","IsPullRequest":false,"CreatedAt":"2023-02-12T19:14:49","Actor":"windmichael","Number":"26609","RawContent":null,"Title":"feat(cdk/scrolling): improve template type checking for CdkVirtualForOf Directive","State":"open","Body":"### Feature Description\n\n### Feature Description\r\nThe CdkVirtualForOf Directive in the \"@angular/cdk/scrolling\" module does not implement the ng-template context guard, as it is done at the *ngFor Structual Directive in the Angular Common package. \r\nThus, when using the *cdkVirtualFor Structual Directive in an HTML Template, the type of the item is \"any\". \r\n\r\nExpample: \r\n\r\n```\r\n<cdk-virtual-scroll-viewport itemSize=\"50\" class=\"example-viewport\">\r\n  <div *cdkVirtualFor=\"let item of items\" class=\"example-item\">{{ item }}</div>\r\n</cdk-virtual-scroll-viewport>\r\n```\r\n\r\nAlthough the type of the property \"items\" is \"string[]\", the type of \"item\" is \"any\".\r\n\r\n### Expected behavior\r\nThe type of the property \"item\" should be \"string\" when the type of \"items\" is \"string[]\".\r\n\r\n### Suggested solution\r\nImplement the static method \"ngTemplateContextGuard\" for the CdkVirtualForOf Directive.\r\n\r\n```\r\npublic static ngTemplateContextGuard<T>(\r\n    directive: CdkVirtualForOf<T>,\r\n    context: unknown,\r\n  ): context is CdkVirtualForOfContext<T> {\r\n    return true;\r\n  }\r\n```\r\nhttps://angular.io/guide/structural-directives#typing-the-directives-context\r\n\r\nIf you want, I can create a PR therefore, because I tried this solution already.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/26609","RelatedDescription":"Open issue \"feat(cdk/scrolling): improve template type checking for CdkVirtualForOf Directive\" (#26609)"},{"Id":"1581174711","IsPullRequest":true,"CreatedAt":"2023-02-12T08:43:56","Actor":"crisbeto","Number":"26608","RawContent":null,"Title":"fix(cdk/dialog): not emitting closed event on external detachments","State":"open","Body":"Fixes that the CDK dialog wasn't emitting to the `closed` event when it is detached externally, e.g. by a scroll strategy or a navigation. We had unit tests for this on the Material side, but we had special logic to handle it there.\r\n\r\nFixes #26581.","Url":"https://github.com/angular/components/pull/26608","RelatedDescription":"Open PR \"fix(cdk/dialog): not emitting closed event on external detachments\" (#26608)"},{"Id":"1580944526","IsPullRequest":false,"CreatedAt":"2023-02-12T01:36:36","Actor":"1isaaclaryea","Number":"26606","RawContent":null,"Title":"Angular google maps: Google map component not being recognized even though its module has been added to app module","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI keep getting an error: error NG8001: 'google-map' is not a known element. I have added the GoogleMapsModule to the app.module.ts file. I suspected the issue might be from the version of the packages I installed. I updated angular to angular 15 (latest now), and updated all the packages I had installed. I run npm cache verify to ensure that it was not a caching problem. I restarted the angular server several times, but I still kept getting the error NG8001: 'google-map' is not a known element.\r\n\r\nError: app/components/home/home.component.html:3:3 - error NG8001: 'google-map' is not a known element:\r\n\r\nIf 'google-map' is an Angular component, then verify that it is part of this module.\r\nIf 'google-map' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n\r\napp.module.ts\r\n`import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatLegacySnackBarModule as MatSnackBarModule } from '@angular/material/legacy-snack-bar';\r\nimport { MatLegacyDialogModule as MatDialogModule, MAT_LEGACY_DIALOG_DEFAULT_OPTIONS as MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/legacy-dialog';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { ChooseDestinationComponent } from './components/choose-destination/choose-destination.component';\r\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { AwaitingComponent } from './components/awaiting/awaiting.component';\r\nimport { DiverHomeComponent } from './components/driver-components/diver-home/diver-home.component';\r\nimport { OngoingRideComponent } from './components/ongoing-ride/ongoing-ride.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ConfirmDialogComponent } from './components/dialogs/confirm-dialog/confirm-dialog.component';\r\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\r\nimport { environment } from '../environments/environment';\r\nimport { provideAnalytics, getAnalytics, ScreenTrackingService, UserTrackingService } from '@angular/fire/analytics';\r\nimport { provideAuth, getAuth } from '@angular/fire/auth';\r\nimport { provideDatabase, getDatabase } from '@angular/fire/database';\r\nimport { AngularFireDatabase } from '@angular/fire/compat/database';\r\nimport { DatabaseService } from './services/database.service';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { CallNumber } from '@awesome-cordova-plugins/call-number/ngx';\r\nimport { StartTripComponent } from './components/dialogs/start-trip/start-trip.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DriverCardComponent } from './components/driver-card/driver-card.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\n\r\n\r\n@NgModule({\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  declarations: [\r\n    AppComponent,\r\n    ChooseDestinationComponent,\r\n    AwaitingComponent,\r\n    DiverHomeComponent,\r\n    OngoingRideComponent,\r\n    ConfirmDialogComponent,\r\n    StartTripComponent,\r\n    DriverCardComponent,\r\n    SignUpComponent,\r\n    SignInComponent,\r\n  ],\r\n  imports: [\r\n    GoogleMapsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    HttpClientModule,\r\n    GooglePlaceModule,\r\n    BrowserAnimationsModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,\r\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\r\n    provideAnalytics(() => getAnalytics()),\r\n    provideAuth(() => getAuth()),\r\n    provideDatabase(() => getDatabase()),\r\n  ],\r\n  providers: [{ provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\r\n    ScreenTrackingService,\r\n    UserTrackingService,\r\n    AngularFireDatabase,\r\n    DatabaseService,\r\n    AuthService,\r\n    CallNumber,\r\n    AuthGuardService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n`\r\n\r\npackage.json\r\n\r\n`{\r\n  \"name\": \"lorley\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"watch\": \"ng build --watch --configuration development\",\r\n    \"test\": \"ng test\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^15.1.4\",\r\n    \"@angular/cdk\": \"^15.1.4\",\r\n    \"@angular/common\": \"^15.1.4\",\r\n    \"@angular/compiler\": \"^15.1.4\",\r\n    \"@angular/core\": \"^15.1.4\",\r\n    \"@angular/fire\": \"^7.5.0\",\r\n    \"@angular/forms\": \"^15.1.4\",\r\n    \"@angular/google-maps\": \"^15.1.4\",\r\n    \"@angular/material\": \"^15.1.4\",\r\n    \"@angular/platform-browser\": \"^15.1.4\",\r\n    \"@angular/platform-browser-dynamic\": \"^15.1.4\",\r\n    \"@angular/router\": \"^15.1.4\",\r\n    \"@awesome-cordova-plugins/call-number\": \"^5.46.0\",\r\n    \"@capacitor-community/capacitor-googlemaps-native\": \"^1.2.0\",\r\n    \"@capacitor/android\": \"^4.0.1\",\r\n    \"@capacitor/core\": \"^4.6.1\",\r\n    \"@capacitor/geolocation\": \"^4.0.1\",\r\n    \"@capacitor/google-maps\": \"^4.0.1\",\r\n    \"@capacitor/ios\": \"^4.0.1\",\r\n    \"@capacitor/preferences\": \"^4.0.2\",\r\n    \"call-number\": \"^1.0.1\",\r\n    \"ngx-google-places-autocomplete\": \"^2.0.5\",\r\n    \"rxjs\": \"~7.4.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.11.4\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^15.1.5\",\r\n    \"@angular/cli\": \"^15.1.5\",\r\n    \"@angular/compiler-cli\": \"^15.1.4\",\r\n    \"@capacitor/cli\": \"^4.6.1\",\r\n    \"@types/jasmine\": \"~3.10.0\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"jasmine-core\": \"~3.10.0\",\r\n    \"karma\": \"~6.3.0\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage\": \"~2.0.3\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\r\n    \"typescript\": \"~4.8.4\"\r\n  }\r\n}`\r\n\r\nhome component:\r\n\r\n`import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n// import { GoogleMap } from '@capacitor/google-maps';\r\nimport { Geolocation, Position } from '@capacitor/geolocation';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('map')\r\n  mapRef!: ElementRef<HTMLElement>;\r\n  // newMap!: GoogleMap;\r\n  apiLoaded: Observable<boolean>;\r\n\r\n  constructor(private router: Router, private authService: AuthService, private userService:UserService, private httpClient:HttpClient) {\r\n    this.apiLoaded = httpClient.jsonp('https://maps.googleapis.com/maps/api/js?key=', 'callback')\r\n    .pipe(\r\n      map(() => true),\r\n      catchError(() => of(false)),\r\n    );\r\n   }\r\n\r\n  async getCurrentPosition() {\r\n    return Geolocation.getCurrentPosition();\r\n  };\r\n\r\n  chooseDestination() {\r\n    this.router.navigate(['choose-destination']);\r\n  }\r\n\r\n}\r\n`\r\n\r\nhome component html\r\n\r\n`<div *ngIf=\"apiLoaded | async\">\r\n  <google-map></google-map>\r\n</div>`\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  Update angular to version 15.1.5\r\n2.  Run npm install @angular/google-maps\r\n3.  Add the google maps module to imports of app.module.ts\r\n4.  Add the google-map component to a component in your application.\r\n\n\n### Expected Behavior\n\nThe google map is expected to be displayed\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/38073822/218272643-a7f02601-2e26-474e-9ea7-e924a7961c55.png)\r\n\n\n### Environment\n\n- Angular: v.15\r\n- CDK/Material:\r\n- Browser(s): Google chrome, Brave\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26606","RelatedDescription":"Closed issue \"Angular google maps: Google map component not being recognized even though its module has been added to app module\" (#26606)"},{"Id":"1581004568","IsPullRequest":true,"CreatedAt":"2023-02-11T20:28:14","Actor":"Vitruvius21","Number":"26607","RawContent":null,"Title":"docs(material/typography): fix \"kids theme\" example","State":"open","Body":"fix wrong variables","Url":"https://github.com/angular/components/pull/26607","RelatedDescription":"Open PR \"docs(material/typography): fix \"kids theme\" example\" (#26607)"},{"Id":"1580114073","IsPullRequest":false,"CreatedAt":"2023-02-10T18:06:06","Actor":"andrew-cunliffe","Number":"26605","RawContent":null,"Title":"bug(checkbox): tick colour does not change when using css variables","State":"open","Body":"### Is this a regression?\r\n\r\n- No\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe are building a new project and need to be able to theme the site, to make this easier we are using material plus tailwind and as such using css variables to define a number of things including colours...\r\n\r\nThe issue is that with a dark colour the tick is remaining as black rather than changing to white as it does when using a hex value\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  New project and create CSS variables like...  :root { --color-primary-normal: #442244 }\r\n2. Setup material with a theme like....\r\n\r\n```\r\n$palette: (\r\n    50: var(--color-primary-light),\r\n    100: var(--color-primary-normal),\r\n    200: var(--color-primary-dark),\r\n    A50: var(--color-accent-light),\r\n    A100: var(--color-accent-normal),\r\n    A200: var(--color-accent-dark),\r\n    contrast: (\r\n        50: var(--color-white),\r\n        100: var(--color-white),\r\n        200: var(--color-white),\r\n    ),\r\n);\r\n\r\n$ui-primary: mat.define-palette($palette, 100, 50, 200);\r\n$ui-accent: mat.define-palette($palette, A100, A50, A200);\r\n\r\n$ui-theme: mat.define-light-theme(\r\n    (\r\n        color: (\r\n            primary: $ui-primary,\r\n            accent: $ui-accent,\r\n        ),\r\n    )\r\n);\r\n\r\n@include mat.checkbox-theme($ui-theme);\r\n```\r\n\r\n3. Use the mat-checkbox on your page (set to primary or accent) the tick remains black\r\n\r\n### Expected Behavior\r\n\r\nShould use the contrast colour for the tick and support css variables when doing this\r\n\r\n### Actual Behavior\r\n\r\ndoes not detect and change the colour to contrast correctly\r\n\r\n### Environment\r\n\r\n- Angular: 15.1.x\r\n- CDK/Material: 15.1.x\r\n- Browser(s): Safari, Chrome, Firefox\r\n- Operating System: macOS\r\n","Url":"https://github.com/angular/components/issues/26605","RelatedDescription":"Open issue \"bug(checkbox): tick colour does not change when using css variables\" (#26605)"},{"Id":"1579981557","IsPullRequest":false,"CreatedAt":"2023-02-10T16:16:45","Actor":"grubeninspekteur","Number":"26604","RawContent":null,"Title":"bug(MatSelect): MatSelect \"selected\" property should be typed MatOption | MatOption[] | undefined","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`undefined` is missing from the returned type of \"selected\" in MatSelect. It can return undefined if the selected list is empty: `this._selectionModel?.selected[0]`\r\nat https://github.com/angular/components/blob/46cfbe566ab99207c3951c6c86aed20f65d925a6/src/material/select/select.ts#L668-L670\n\n### Reproduction\n\nSee Stackblitz: https://stackblitz.com/edit/components-issue-jhwzgt?file=src/app/example-component.ts\r\n\r\nSteps to reproduce:\r\n1. Create the following component:\r\n```typescript\r\nimport { Component } from '@angular/core';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'example-component',\r\n  template:\r\n    '<form><mat-select><mat-option>Dog</mat-option><mat-option>Cat</mat-option></mat-select></form>',\r\n  styleUrls: ['example-component.css'],\r\n})\r\nexport class ExampleComponent implements AfterViewInit {\r\n  @ViewChild(MatSelect)\r\n  matSelect: MatSelect;\r\n\r\n  ngAfterViewInit() {\r\n    if (!Array.isArray(this.matSelect.selected)) {\r\n      console.log(this.matSelect.selected.id);\r\n    }\r\n  }\r\n}\r\n```\r\n\n\n### Expected Behavior\n\nTypescript compilation failure\n\n### Actual Behavior\n\nIt logs ERROR\r\nError: Cannot read properties of undefined (reading 'id')\n\n### Environment\n\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.0\r\n- Browser(s): Edge (Chromium)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Stackblitz\r\n","Url":"https://github.com/angular/components/issues/26604","RelatedDescription":"Open issue \"bug(MatSelect): MatSelect \"selected\" property should be typed MatOption | MatOption[] | undefined\" (#26604)"},{"Id":"1579712540","IsPullRequest":false,"CreatedAt":"2023-02-10T13:47:15","Actor":"monkeycatdog","Number":"26603","RawContent":null,"Title":"bug(material): ci/cd build failed with wrong imports","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nAfter migration from 14 to 15.1 I have failed time to time builds \r\nI'm still on legacy theming and components. \r\n\r\n```\r\nSassError: Module loop: this module is already being loaded.\r\n   ┌──> node_modules/@material/elevation/_elevation-theme.scss\r\n30 │ @use '@material/theme/custom-properties';\r\n   │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ new load\r\n   ╵\r\n   ┌──> node_modules/@material/elevation/_elevation.scss\r\n26 │ @use '@material/theme/custom-properties';\r\n   │ ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ original load\r\n   ╵\r\n  @material/theme/_elevation-theme.scss 30:1                                 @use\r\n  @material/elevation/_elevation.scss 26:1                                   @use\r\n  node_modules/@material/button/_button-base.scss 27:1                       @forward\r\n  @material/feature-targeting/_button-theme.scss 23:1                        @use\r\n  @material/button/_button.scss 26:1                                         @use\r\n  node_modules/@angular/material/button/_button-theme.scss 3:1               @use\r\n  node_modules/@angular/material/core/density/private/_all-density.scss 2:1  @forward\r\n\r\n```\n\n### Reproduction\n\nSteps to reproduce:\r\nUnfortunately, there is no steps. \r\n\n\n### Expected Behavior\n\nSuccessful build\n\n### Actual Behavior\n\nFailed build\n\n### Environment\n\n- Angular: 15.1\r\n- CDK/Material: 15.1\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS/Ubuntu\r\n","Url":"https://github.com/angular/components/issues/26603","RelatedDescription":"Open issue \"bug(material): ci/cd build failed with wrong imports\" (#26603)"},{"Id":"1578642630","IsPullRequest":false,"CreatedAt":"2023-02-09T21:26:30","Actor":"DemeSteve","Number":"26602","RawContent":null,"Title":"bug(mat-menu): mat-menu opens at the bottom of the page on mobile device","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIn my angular material data table there is vertical three dots in a cell in each row. Clicking on this three dots opens a mat-menu. On computer it works fine, but from mobile device it opens at the bottom of the page from the 92nd row.\r\nIf the viewport meta tag is not added it is wrongly showing from the 92nd row. If it's added it is wrongly showing even from the first row.\r\n\r\n### Reproduction\r\n\r\nI have\r\n`<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">`\r\nin my application.\r\n\r\n### Expected Behavior\r\n\r\nFrom mobile devices the mat-menu should open next to the button where I click it.\r\n\r\n### Actual Behavior\r\n\r\nFrom mobile devices the mat-menu opens at the bottom of the page (with a css bottom: 0 or bottom: 2px generated).\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows","Url":"https://github.com/angular/components/issues/26602","RelatedDescription":"Open issue \"bug(mat-menu): mat-menu opens at the bottom of the page on mobile device\" (#26602)"},{"Id":"1578613958","IsPullRequest":true,"CreatedAt":"2023-02-09T21:00:42","Actor":"y-nut","Number":"26601","RawContent":null,"Title":"Disable toggle for expansion panel ","State":"open","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled\r\n","Url":"https://github.com/angular/components/pull/26601","RelatedDescription":"Open PR \"Disable toggle for expansion panel \" (#26601)"},{"Id":"1578608186","IsPullRequest":true,"CreatedAt":"2023-02-09T21:00:30","Actor":"y-nut","Number":"26600","RawContent":null,"Title":"Disable toggle for expansion panel","State":"closed","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled\r\n","Url":"https://github.com/angular/components/pull/26600","RelatedDescription":"Closed or merged PR \"Disable toggle for expansion panel\" (#26600)"},{"Id":"1578535454","IsPullRequest":true,"CreatedAt":"2023-02-09T20:55:48","Actor":"y-nut","Number":"26599","RawContent":null,"Title":"Disable toggle for expansion panel","State":"closed","Body":"This feature makes it optional to toggle the expansion panel by parsing in an input.\r\n\r\nI have had two situations where I needed this feature of not allowing the user to expand the expansion panel. For instance in a payment card selector where saved cards would appear collapsed as \"buttons\" and adding a new card would show a credit card iframe in the expanded element.\r\n\r\nAlso, I've had nested forms that would expand on certain criteria in a search field inside of the panel header. But I needed this workaround to not allow the user to expand it until the search criteria was fulfilled.\r\n\r\nI have gone through the cla verification but it seems to be rejected still. Not sure why?","Url":"https://github.com/angular/components/pull/26599","RelatedDescription":"Closed or merged PR \"Disable toggle for expansion panel\" (#26599)"},{"Id":"1576900522","IsPullRequest":true,"CreatedAt":"2023-02-08T22:58:19","Actor":"amysorto","Number":"26598","RawContent":null,"Title":"Bump version to \"v15.2.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26598","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.2.0-next.4\" with changelog.\" (#26598)"},{"Id":"1576696822","IsPullRequest":true,"CreatedAt":"2023-02-08T22:15:25","Actor":"amysorto","Number":"26597","RawContent":null,"Title":"docs: release notes for the v15.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"15.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/26597","RelatedDescription":"Closed or merged PR \"docs: release notes for the v15.1.4 release\" (#26597)"},{"Id":"1576692279","IsPullRequest":true,"CreatedAt":"2023-02-08T19:35:29","Actor":"amysorto","Number":"26596","RawContent":null,"Title":"Bump version to \"v15.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26596","RelatedDescription":"Closed or merged PR \"Bump version to \"v15.1.4\" with changelog.\" (#26596)"},{"Id":"1576531328","IsPullRequest":false,"CreatedAt":"2023-02-08T17:32:02","Actor":"boomdizz","Number":"26595","RawContent":null,"Title":"feat(COMPONENT): MatOptgroup should have programmatic capability","State":"open","Body":"### Feature Description\r\n\r\nI have a need to programatically manipulate the mat-optgroup. My usecase has a cascade/sequence of filters (MatSelects) that is needed to query the backend for 'Automobiles' that match the query. The filters are things like 'Manufacturer', 'Model' etc..... So as the consumer selects a Manufacturer, the downstream filter for Model only shows the Models that correspond to that Manufacturer (or that set of manufacturers, as I am using 'multiple' on the MatSelect). The final set of filters make a graphql query (could well be a REST API instead) to the backend that return some attributes of the selected group of Autos, e.g. mpg, etc.) So pretty straightforward design.\r\nEach filter is a multiple select filter where the end user can select multiple options on the filter. There is an 'All' option group that contains all of the options in the filter/MatSelect. Visually, the option group does what it should. But I need to programatically manipulate the option group. I have rules like - if none of the options are selected in a group, enable all the options in the group. Essentially, none is not a valid option. I need to:\r\n(1) From an option find the parent option group\r\n(2) Check if the option group has no options enabled and/or all options enabled\r\n(3) Enable/Disable the entire option group in one API call.\r\nI can provide additional details as needed.\r\nI am working with Angular material 14.2.6\r\n\r\n### Use Case\r\n\r\nUse cases provided in the Feature Description","Url":"https://github.com/angular/components/issues/26595","RelatedDescription":"Open issue \"feat(COMPONENT): MatOptgroup should have programmatic capability\" (#26595)"},{"Id":"1576378506","IsPullRequest":false,"CreatedAt":"2023-02-08T15:56:13","Actor":"infacto","Number":"26594","RawContent":null,"Title":"docs-bug(datepicker): Improve/Describe type `D`","State":"open","Body":"### Documentation Feedback\r\n\r\nWhat's `D`? Please describe. Also: A single letter type is maybe not the best type. Is it generic? I cannot find type reference. Btw, is `string` also allowed? It seems so... \r\n\r\n![image](https://user-images.githubusercontent.com/60390085/217581608-bb215682-7016-4228-9575-4ca5b3bb44ce.png)\r\n\r\nUpdate: There is also an input type `C`.\r\nUpdate: Ok, as I see, the output is a dayjs instance. Adapter. (A weird uglyfied output on console.)\r\n\r\nAnyway, can we descibe als these types and where they come from (adapter, etc.)?\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/datepicker/api","Url":"https://github.com/angular/components/issues/26594","RelatedDescription":"Open issue \"docs-bug(datepicker): Improve/Describe type `D`\" (#26594)"},{"Id":"1576270837","IsPullRequest":false,"CreatedAt":"2023-02-08T14:58:13","Actor":"michahell","Number":"26593","RawContent":null,"Title":"in v15.1.2, prebuilt-themes seem to be missing :(","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nWe still depend on a prebuilt-theme (for reasons) and so we'd need the 15.1.x version for the prebuilt-theme we use to upgrade from Angular 14 to Angular 15...\n\n### Reproduction\n\ndoes not apply\n\n### Expected Behavior\n\nprebuilt theme CSS files listed in the src/material/prebuilt-themes folder\n\n### Actual Behavior\n\nprebuilt theme CSS files **NOT** present in the src/material/prebuilt-themes folder\n\n### Environment\n\n- Angular: 15.1.2\r\n- CDK/Material: 15.1.2\r\n- Browser(s): chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/26593","RelatedDescription":"Open issue \"in v15.1.2, prebuilt-themes seem to be missing :(\" (#26593)"},{"Id":"1575467764","IsPullRequest":false,"CreatedAt":"2023-02-08T04:47:22","Actor":"ajayz09","Number":"26591","RawContent":null,"Title":"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n### Mat Select Trigger Multiple | Angular 14\r\n\r\nMat Select Trigger with chips inside is going outside of the mat-form-field-wrapper when number of selections exceeds a certain value as it tries to populate to a new line.\r\n\r\nThis was working as expected in Angular 10-12\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Use mat-select-trigger with mat-chips\r\n2. Select multiple options from the selection panel expanding the mat-form-field to another line.\r\n\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435942-b8e07998-0c32-4293-8937-6c88f3031faf.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/38266421/217435811-5486024c-e915-4e08-a733-61c609ddf1db.png)\r\n\n\n### Environment\n\n- Angular: 14.2.4\r\n- CDK/Material: 12.2.6\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/26591","RelatedDescription":"Open issue \"bug(mat-select): Mat Select trigger with chips inside going out of mat-form-field-wrapper\" (#26591)"},{"Id":"1575205997","IsPullRequest":false,"CreatedAt":"2023-02-07T23:43:00","Actor":"scottg521","Number":"26590","RawContent":null,"Title":"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSee Stackblitz https://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nIn this example:\r\n- if you click on the words or the checkmark, you get the event, but if you click on a part of the chip without text, you do not\r\n- if you click on the currently selected chip, it will deselect (so nothing is selected) which doesn't seem right for a radio-button-style chip set\r\n- using the keyboard, you can arrow up and down in the list and select with space or enter 👍, also you can tab out of the chip set and you can shift-tab to back into the chipset 👍, but you can't shift-tab to back out of it 👎 .\n\n### Reproduction\n\nhttps://stackblitz.com/edit/angular-mcc788-qy9gcq?file=src/app/chips-overview-example.html\r\n\r\nSteps to reproduce:\r\n1. click on words, and see selection\r\n2. click on chip but not on words, no selection\r\n3. click the words of the selected chip, deselected (and nothing selected)\r\n4. use keyboard arrows to move within chip set\r\n5. use tab to go to link after chipset\r\n6. use shift-tab to go back to chipset\r\n7. shift-tab will not go to link before chipset (or anywhere out of the chipset)\r\n\n\n### Expected Behavior\n\n- click anywhere on chip to select\r\n- prevented from deselecting selected chip (not sure what 'required' means but it doesn't help)\r\n- able to tab in and out of chipset in either direction\n\n### Actual Behavior\n\ndescribed above\n\n### Environment\n\n- Angular: 15.1.3\r\n- CDK/Material: 15.1.3\r\n- Browser(s): Edge, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Mac\r\n","Url":"https://github.com/angular/components/issues/26590","RelatedDescription":"Open issue \"bug(MatChipSet): several chipset issues: clickable area, unselect, keyboard access\" (#26590)"},{"Id":"1575076737","IsPullRequest":false,"CreatedAt":"2023-02-07T21:52:52","Actor":"ChristopherSnay","Number":"26589","RawContent":null,"Title":"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nPage with the defect: https://material.angular.io/components/chips/examples\r\n\r\nThe last example, \"Stacked chips\" shows full-width chips when the mat-chip CSS shows `max-width: 200px`\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Go to https://material.angular.io/components/chips/examples\r\n2. Scroll to the bottom and view Stacked chips\r\n\r\n\r\n### Expected Behavior\r\n\r\nmat-chip should obey the CSS that sets max-width to 200px;\r\n\r\n### Actual Behavior\r\n\r\nmat-chips are 100% width of the container. \r\n![stacked-chips](https://user-images.githubusercontent.com/11818687/217375482-341c5dca-df61-469d-bbec-274bd38acfe5.PNG)\r\n\r\nAdditionally, the only clickable area of the chip is the text area. The overflow is not clickable.\r\n\r\n### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s): Chrome and Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26589","RelatedDescription":"Open issue \"bug(chip): Documentation not displaying Stacked chips correctly in the mat-chip-listbox\" (#26589)"},{"Id":"1574960283","IsPullRequest":true,"CreatedAt":"2023-02-07T20:13:13","Actor":"BobobUnicorn","Number":"26588","RawContent":null,"Title":"feat(cdk/tree): integrate TreeKeyManager with cdk/tree","State":"open","Body":"This should allow cdk/tree to support keyboard input.\r\n\r\nBased on #26587.","Url":"https://github.com/angular/components/pull/26588","RelatedDescription":"Open PR \"feat(cdk/tree): integrate TreeKeyManager with cdk/tree\" (#26588)"},{"Id":"1574956665","IsPullRequest":true,"CreatedAt":"2023-02-07T20:10:21","Actor":"BobobUnicorn","Number":"26587","RawContent":null,"Title":"feat(cdk/tree): implement typeahead for TreeKeyManager","State":"open","Body":"Based on #26586. Followed by #26588.","Url":"https://github.com/angular/components/pull/26587","RelatedDescription":"Open PR \"feat(cdk/tree): implement typeahead for TreeKeyManager\" (#26587)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-14T03:30:02.8704154Z","RunDurationInMilliseconds":2037}