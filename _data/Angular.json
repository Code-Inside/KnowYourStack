{"Data":{"Angular-Issues":{"Issues":[{"Id":"1477773429","IsPullRequest":true,"CreatedAt":"2022-12-06T00:05:49","Actor":"angular-robot","Number":"48370","RawContent":null,"Title":"build: update dependency ts-node to v10","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ts-node](https://typestrong.org/ts-node) ([source](https://togithub.com/TypeStrong/ts-node)) | devDependencies | major | [`~8.3.0` -> `~10.9.0`](https://renovatebot.com/diffs/npm/ts-node/8.3.0/10.9.1) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>TypeStrong/ts-node</summary>\n\n### [`v10.9.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.9.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.9.0...v10.9.1)\n\n**Fixed**\n\n-   Workaround nodejs bug introduced in 18.6.0 ([#&#8203;1838](https://togithub.com/TypeStrong/ts-node/issues/1838)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Only affects projects on node >=18.6.0 using `--esm`\n    -   Older versions of node and projects without `--esm` are unaffected\n\nhttps://github.com/TypeStrong/ts-node/milestone/18?closed=1\n\n### [`v10.9.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.9.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.2...v10.9.0)\n\n**Added**\n\n-   `--project` accepts path to a directory containing a `tsconfig.json` ([#&#8203;1829](https://togithub.com/TypeStrong/ts-node/issues/1829), [#&#8203;1830](https://togithub.com/TypeStrong/ts-node/issues/1830)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   previously it required an explicit filename\n-   Added helpful error message when swc version is too old to support our configuration ([#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Added `experimentalTsImportSpecifiers` option which allows using voluntary `.ts` file extensions in import specifiers (undocumented except for [API docs](https://typestrong.org/ts-node/api/interfaces/CreateOptions.html#experimentalTsImportSpecifiers)) ([#&#8203;1815](https://togithub.com/TypeStrong/ts-node/issues/1815)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\n**Fixed**\n\n-   Fixed bug where `child_process.fork()` would erroneously execute the parent's entrypoint script, not the intended child script ([#&#8203;1812](https://togithub.com/TypeStrong/ts-node/issues/1812), [#&#8203;1814](https://togithub.com/TypeStrong/ts-node/issues/1814)) [@&#8203;devversion](https://togithub.com/devversion)\n-   Fixed support for jsx modes `\"react-jsx\"` and `\"react-jsxdev\"` in swc transpiler ([#&#8203;1800](https://togithub.com/TypeStrong/ts-node/issues/1800), [#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed support for import assertions in swc transpiler ([#&#8203;1817](https://togithub.com/TypeStrong/ts-node/issues/1817), [#&#8203;1802](https://togithub.com/TypeStrong/ts-node/issues/1802)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where calling `repl.evalCode()` with code not ending in a newline would not update the typechecker accordingly ([#&#8203;1764](https://togithub.com/TypeStrong/ts-node/issues/1764), [#&#8203;1824](https://togithub.com/TypeStrong/ts-node/issues/1824)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/16?closed=1\n\n### [`v10.8.2`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.2)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.1...v10.8.2)\n\n**Fixed**\n\n-   Revert \"Use file URL for source map paths\" ([#&#8203;1821](https://togithub.com/TypeStrong/ts-node/issues/1821)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Fixes [#&#8203;1790](https://togithub.com/TypeStrong/ts-node/issues/1790): ts-node 10.8.1 regression where `nyc` code coverage reports had incorrect paths\n    -   Fixes [#&#8203;1797](https://togithub.com/TypeStrong/ts-node/issues/1797): ts-node 10.8.1 regression where breakpoints did not hit in VSCode debugging\n-   Allow JSON imports in node 16.15 and up ([#&#8203;1792](https://togithub.com/TypeStrong/ts-node/issues/1792)) [@&#8203;queengooborg](https://togithub.com/queengooborg)\n    -   JSON imports were already supported in v17.5 and up\n    -   this change extends support to >=16.15.0,<17.0.0\n    -   These version ranges match vanilla node's support for JSON imports\n\nhttps://github.com/TypeStrong/ts-node/milestone/15?closed=1\n\n### [`v10.8.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.8.0...v10.8.1)\n\n**Fixed**\n\n-   Fixed [#&#8203;1769](https://togithub.com/TypeStrong/ts-node/issues/1769): source URLs in source map cache were malformed on Windows, affecting code coverage reports ([#&#8203;1769](https://togithub.com/TypeStrong/ts-node/issues/1769), [#&#8203;1771](https://togithub.com/TypeStrong/ts-node/issues/1771)) [@&#8203;PaperStrike](https://togithub.com/PaperStrike)\n-   Fixed [#&#8203;1778](https://togithub.com/TypeStrong/ts-node/issues/1778): typechecker was erronously resolving imports from ESM files as if they were from CJS files ([#&#8203;1778](https://togithub.com/TypeStrong/ts-node/issues/1778), [#&#8203;1782](https://togithub.com/TypeStrong/ts-node/issues/1782)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/14\n\n### [`v10.8.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.8.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.7.0...v10.8.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1767](https://togithub.com/TypeStrong/ts-node/issues/1767)\n\n**Added**\n\n-   Added support for `module=NodeNext`, `module=Node16`, `.mts`, `.cts`, `.mjs`, and `.cjs` file extensions ([#&#8203;1414](https://togithub.com/TypeStrong/ts-node/issues/1414), [#&#8203;1694](https://togithub.com/TypeStrong/ts-node/issues/1694), [#&#8203;1744](https://togithub.com/TypeStrong/ts-node/issues/1744), [#&#8203;1745](https://togithub.com/TypeStrong/ts-node/issues/1745), [#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1717](https://togithub.com/TypeStrong/ts-node/issues/1717), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753), [#&#8203;1757](https://togithub.com/TypeStrong/ts-node/issues/1757)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   For best results, enable `experimentalResolver` ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver))\n    -   See TypeScript's official documentation: https://www.typescriptlang.org/docs/handbook/esm-node.html\n    -   enables mixed-mode projects with both ESM and CommonJS\n    -   enables all supported file extensions in TypeScript 4.7\n    -   Obeys package.json \"type\"\n-   Added ability to include file extensions in CommonJS imports ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Enables consistency with ESM, where file extensions are often mandatory\n-   Resolves from emitted to source file extensions ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   Must enable `experimentalResolver`, will be enabled by default in a future version ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver))\n    -   Typechecker requires importing the *emitted* file extension; ts-node resolves correctly to the *source* file.  E.g. `import \"./foo.js\"` will execute `foo.ts` See also: [TypeScript issue #&#8203;37582](https://togithub.com/microsoft/TypeScript/issues/37582)\n    -   If typechecking is disabled, you can also use *source* file extensions.  E.g. `import \"./foo.ts\"`\n-   Added `experimentalSpecifierResolution` ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727), [#&#8203;1753](https://togithub.com/TypeStrong/ts-node/issues/1753)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   the same as Node's `--experimental-specifier-resolution` ([Node docs](https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm))\n    -   can also be specified in `tsconfig.json` for convenience, to avoid the CLI flag\n    -   allows omitting file extensions in ESM imports, plus a few other CommonJS-style conveniences\n-   Adds `diagnostics` property to `TSError`, with array of TypeScript diagnostic objects from the compiler ([API docs](https://typestrong.org/ts-node/api/classes/TSError.html)) ([#&#8203;1705](https://togithub.com/TypeStrong/ts-node/issues/1705), [#&#8203;1706](https://togithub.com/TypeStrong/ts-node/issues/1706)) [@&#8203;paulbrimicombe](https://togithub.com/paulbrimicombe)\n\n**Changed**\n\n-   Renames option `experimentalResolverFeatures` to `experimentalResolver` ([docs](https://typestrong.org/ts-node/docs/options#experimentalresolver)) ([#&#8203;1727](https://togithub.com/TypeStrong/ts-node/issues/1727)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Internal change to ESM loader for compatibility with forthcoming node versions: returns `shortCircuit: true` ([#&#8203;1714](https://togithub.com/TypeStrong/ts-node/issues/1714), [#&#8203;1715](https://togithub.com/TypeStrong/ts-node/issues/1715)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Performance: Optimize filesystem stat calls in ESM loader and new CommonJS resolver ([#&#8203;1758](https://togithub.com/TypeStrong/ts-node/issues/1758), [#&#8203;1759](https://togithub.com/TypeStrong/ts-node/issues/1759)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Performance, maintenance: Upgrade source-mapper dependency \"[@&#8203;cspotcode/source-map-support](https://togithub.com/cspotcode/source-map-support)\"\n    -   Switches to \"trace-mapping\" for underlying source-map parsing ([#&#8203;1729](https://togithub.com/TypeStrong/ts-node/issues/1729)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\n**Fixed**\n\n-   Fixed bug where REPL `.type` command was not showing any type information when using TypeScript nightly builds ([#&#8203;1761](https://togithub.com/TypeStrong/ts-node/issues/1761), [#&#8203;1762](https://togithub.com/TypeStrong/ts-node/issues/1762)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Correctly suppress \"Custom ESM Loaders\" warning on newer node versions where the warning's prose changed ([#&#8203;1701](https://togithub.com/TypeStrong/ts-node/issues/1701)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed REPL bug where function signatures could not be entered across multiple lines ([#&#8203;1667](https://togithub.com/TypeStrong/ts-node/issues/1667), [#&#8203;1677](https://togithub.com/TypeStrong/ts-node/issues/1677)) [@&#8203;d9k](https://togithub.com/d9k)\n-   REPL treats unparenthesized object literals as objects, instead of as block scopes ([#&#8203;1697](https://togithub.com/TypeStrong/ts-node/issues/1697), [#&#8203;1699](https://togithub.com/TypeStrong/ts-node/issues/1699)) [@&#8203;jhmaster2000](https://togithub.com/jhmaster2000)\n-   Fixed bug where `preferTsExts` combined with third-party transpiler hooks could disrupt `nyc` code coverage ([#&#8203;1755](https://togithub.com/TypeStrong/ts-node/issues/1755)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where `file://` URLs in stack traces did not always use percent-encoding ([#&#8203;1738](https://togithub.com/TypeStrong/ts-node/issues/1738), [#&#8203;1726](https://togithub.com/TypeStrong/ts-node/issues/1726), [#&#8203;1729](https://togithub.com/TypeStrong/ts-node/issues/1729)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Fixed bug where v8-compile-cache-lib did not correctly unhook itself ([#&#8203;1717](https://togithub.com/TypeStrong/ts-node/issues/1717), [#&#8203;1718](https://togithub.com/TypeStrong/ts-node/issues/1718), [#&#8203;1719](https://togithub.com/TypeStrong/ts-node/issues/1719)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n    -   This internal dependency is used to speed up loading the TypeScript compiler\n\n**Docs**\n\n-   Many docs improvements ([#&#8203;1682](https://togithub.com/TypeStrong/ts-node/issues/1682)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Options page: each option its own linkable header w/usage example ([#&#8203;1606](https://togithub.com/TypeStrong/ts-node/issues/1606)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Categorize APIs in typedoc, make entrypoints more prominent ([#&#8203;1456](https://togithub.com/TypeStrong/ts-node/issues/1456)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n-   Clarify that the shorthand for `--project` is `-P`, not `-p` ([#&#8203;1731](https://togithub.com/TypeStrong/ts-node/issues/1731), [#&#8203;1734](https://togithub.com/TypeStrong/ts-node/issues/1734)) [@&#8203;lobsterkatie](https://togithub.com/lobsterkatie)\n-   Add common ESM errors to Troubleshooting page ([#&#8203;1607](https://togithub.com/TypeStrong/ts-node/issues/1607)) [@&#8203;cspotcode](https://togithub.com/cspotcode)\n\nhttps://github.com/TypeStrong/ts-node/milestone/12\n\n### [`v10.7.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.7.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.6.0...v10.7.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1680](https://togithub.com/TypeStrong/ts-node/issues/1680)\n\n**Added**\n\n-   Adds `--esm` flag, option, and `ts-node-esm` binary ([#&#8203;1258](https://togithub.com/TypeStrong/ts-node/issues/1258), [#&#8203;1655](https://togithub.com/TypeStrong/ts-node/issues/1655))\n    -   Enables full `esm` support; no need for `--loader` nor `NODE_OPTIONS`\n    -   Use shebang `#!/usr/bin/env ts-node-esm`, run `ts-node --esm`, or add to your tsconfig.json: `\"ts-node\": {\"esm\": true}`\n\n**Changed**\n\n-   Unflag ESM json modules on node >=17.5.0 ([#&#8203;1661](https://togithub.com/TypeStrong/ts-node/issues/1661), [#&#8203;1665](https://togithub.com/TypeStrong/ts-node/issues/1665)) [@&#8203;Jamesernator](https://togithub.com/Jamesernator)\n    -   no longer requires `--experimental-json-modules`\n-   Lazy-load dependencies to improve startup responsiveness. ([#&#8203;1676](https://togithub.com/TypeStrong/ts-node/issues/1676))\n\n**Fixed**\n\n-   Fixed bug where \"compiler\", \"transpiler\", and swc backend would not resolve relative to the tsconfig.json that declared them ([#&#8203;1662](https://togithub.com/TypeStrong/ts-node/issues/1662), [#&#8203;1655](https://togithub.com/TypeStrong/ts-node/issues/1655))\n    -   Enables reusable tsconfig.json shared via node module to include necessary dependencies\n\nhttps://github.com/TypeStrong/ts-node/milestone/11\n\n### [`v10.6.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.6.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.5.0...v10.6.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1666](https://togithub.com/TypeStrong/ts-node/issues/1666)\n\n**Added**\n\n-   Adds workaround for extensionless entrypoints with ESM loader ([#&#8203;1649](https://togithub.com/TypeStrong/ts-node/issues/1649), [#&#8203;1654](https://togithub.com/TypeStrong/ts-node/issues/1654))\n    -   You can now combine tools such as `mocha` with `--loader ts-node/esm`, where previously node would throw `[ERR_UNKNOWN_FILE_EXTENSION]`\n    -   node has a bug where combining `--loader` with an extensionless entrypoint causes this error [nodejs/node#&#8203;33226](https://togithub.com/nodejs/node/issues/33226)\n    -   Some tools, for example `mocha`, have an extensionless entrypoint. ([source](https://togithub.com/mochajs/mocha/blob/547ffd73535088322579d3d2026432112eae3d4b/package.json#L37), [source](https://togithub.com/mochajs/mocha/blob/547ffd73535088322579d3d2026432112eae3d4b/bin/mocha))\n    -   Combining `NODE_OPTIONS=--loader ts-node/esm` with these tools causes this error.  [mochajs/mocha#&#8203;4645](https://togithub.com/mochajs/mocha/issues/4645)\n    -   node intends to fix this bug in a future release: [nodejs/node#&#8203;41711](https://togithub.com/nodejs/node/issues/41711)\n    -   In the interim, we have implemented a workaround in ts-node.\n-   Adds support for target \"ES2022\" in `moduleTypes` overrides ([#&#8203;1650](https://togithub.com/TypeStrong/ts-node/issues/1650))\n\n**Fixed**\n\n-   Fixed bug where `--swc` and other third-party transpilers did not respect `moduleTypes` overrides ([#&#8203;1651](https://togithub.com/TypeStrong/ts-node/issues/1651), [#&#8203;1652](https://togithub.com/TypeStrong/ts-node/issues/1652), [#&#8203;1660](https://togithub.com/TypeStrong/ts-node/issues/1660))\n-   Fixed bug where node flags were not preserved correctly in `process.execArgv` ([#&#8203;1657](https://togithub.com/TypeStrong/ts-node/issues/1657), [#&#8203;1658](https://togithub.com/TypeStrong/ts-node/issues/1658))\n    -   This affected `child_process.fork()`, since it uses `process.execArgv` to create a similar child runtime.\n    -   With this fix, `child_process.fork()` will preserve both node flags and `ts-node` hooks.\n-   Fixed compatibility TypeScript 4.7's API changes ([#&#8203;1647](https://togithub.com/TypeStrong/ts-node/issues/1647), [#&#8203;1648](https://togithub.com/TypeStrong/ts-node/issues/1648))\n\nhttps://github.com/TypeStrong/ts-node/milestone/9\n\n### [`v10.5.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.5.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.4.0...v10.5.0)\n\n<!--\n  I don't make a discussion thread for every release.  Github has a button to make a discussion thread for a release.\n  Then I update the discussion thread to remove the release notes and instead link to the release.\n-->\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1634](https://togithub.com/TypeStrong/ts-node/issues/1634)\n\n**Added**\n\n-   Eliminate \"Emit Skipped\" errors ([#&#8203;693](https://togithub.com/TypeStrong/ts-node/issues/693), [#&#8203;1345](https://togithub.com/TypeStrong/ts-node/issues/1345), [#&#8203;1629](https://togithub.com/TypeStrong/ts-node/issues/1629))\n    -   Avoids all \"Emit Skipped\" errors by performing a fallback `transpileOnly`-style transformation.\n    -   Does not affect typechecking.  Type errors are still detected and thrown.\n    -   Fallback has the same limitations as `isolatedModules`. This will only affect rare cases such as using `const enums` with `preserveConstEnums` disabled.\n    -   Fixes [#&#8203;693](https://togithub.com/TypeStrong/ts-node/issues/693)\n-   Graduate swc transpiler out of experimental; add `swc: true` convenience option ([docs](https://typestrong.org/ts-node/docs/transpilers)) ([#&#8203;1487](https://togithub.com/TypeStrong/ts-node/issues/1487), [#&#8203;1536](https://togithub.com/TypeStrong/ts-node/issues/1536), [#&#8203;1613](https://togithub.com/TypeStrong/ts-node/issues/1613), [#&#8203;1627](https://togithub.com/TypeStrong/ts-node/issues/1627))\n    -   `\"swc\": true` or `--swc` will use swc for faster execution\n    -   This feature is no longer marked \"experimental.\"  Thank you to everyone who filed bugs!\n-   swc transpiler attempts to load `@swc/core` or `@swc/wasm` dependencies from your project before falling-back to global installations ([#&#8203;1613](https://togithub.com/TypeStrong/ts-node/issues/1613), [#&#8203;1627](https://togithub.com/TypeStrong/ts-node/issues/1627))\n    -   global fallback only occurs when using a global installation of ts-node\n-   Add support for TypeScript's `traceResolution` output ([docs](https://www.typescriptlang.org/tsconfig/#traceResolution)) ([#&#8203;1128](https://togithub.com/TypeStrong/ts-node/issues/1128), [#&#8203;1491](https://togithub.com/TypeStrong/ts-node/issues/1491)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n-   Support import assertions in ESM loader ([docs](https://nodejs.org/dist/latest-v17.x/docs/api/esm.html#import-assertions)) ([#&#8203;1557](https://togithub.com/TypeStrong/ts-node/issues/1557), [#&#8203;1558](https://togithub.com/TypeStrong/ts-node/issues/1558), [#&#8203;1559](https://togithub.com/TypeStrong/ts-node/issues/1559), [#&#8203;1573](https://togithub.com/TypeStrong/ts-node/issues/1573)) [@&#8203;Pokute](https://togithub.com/Pokute), [@&#8203;geigerzaehler](https://togithub.com/geigerzaehler)\n    -   Allows importing JSON files from ESM with the requisite flag ([docs](https://nodejs.org/dist/latest-v17.x/docs/api/esm.html#json-modules))\n-   `ts-node -vvv` also logs absolute paths to `ts-node` and `typescript`, to make it more obvious when you're accidentally using globally-installed versions ([#&#8203;1323](https://togithub.com/TypeStrong/ts-node/issues/1323), [#&#8203;1620](https://togithub.com/TypeStrong/ts-node/issues/1620))\n-   Add swc target \"es2022\" ([#&#8203;1535](https://togithub.com/TypeStrong/ts-node/issues/1535), [#&#8203;1540](https://togithub.com/TypeStrong/ts-node/issues/1540))\n    -   When you have target es2022 in tsconfig, will use swc's es2022 target\n\n**Changed**\n\n-   Initialize TypeScript compiler before starting REPL prompt ([#&#8203;1498](https://togithub.com/TypeStrong/ts-node/issues/1498)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n    -   Improves responsiveness for first line of REPL input\n-   Use `v8-compile-cache-lib` to load typescript\n    -   improves startup time ([#&#8203;1339](https://togithub.com/TypeStrong/ts-node/issues/1339), [#&#8203;1603](https://togithub.com/TypeStrong/ts-node/issues/1603))\n-   Support both `--camelCase` and `--hyphen-case` for all CLI flags; update documentation to use `--camelCase` ([#&#8203;1598](https://togithub.com/TypeStrong/ts-node/issues/1598), [#&#8203;1599](https://togithub.com/TypeStrong/ts-node/issues/1599))\n    -   Not a breaking change; CLI continues to accept both forms\n-   Make `TSError` `diagnosticText` property non-enumerable to prevent it from being logged below the stack ([#&#8203;1632](https://togithub.com/TypeStrong/ts-node/issues/1632))\n\n**Fixed**\n\n-   Fix [#&#8203;1538](https://togithub.com/TypeStrong/ts-node/issues/1538): REPL inputs fail to transpile via swc ([#&#8203;1538](https://togithub.com/TypeStrong/ts-node/issues/1538), [#&#8203;1541](https://togithub.com/TypeStrong/ts-node/issues/1541), [#&#8203;1602](https://togithub.com/TypeStrong/ts-node/issues/1602))\n-   Fix [#&#8203;1478](https://togithub.com/TypeStrong/ts-node/issues/1478): REPL erroneously logged `undefined` for all inputs after the first when using swc transpiler ([#&#8203;1478](https://togithub.com/TypeStrong/ts-node/issues/1478), [#&#8203;1580](https://togithub.com/TypeStrong/ts-node/issues/1580), [#&#8203;1602](https://togithub.com/TypeStrong/ts-node/issues/1602))\n-   Fix [#&#8203;1389](https://togithub.com/TypeStrong/ts-node/issues/1389): In `--showConfig` output, emit accurate `moduleTypes` paths resolved relative to the `tsconfig.json` which declared them ([#&#8203;1389](https://togithub.com/TypeStrong/ts-node/issues/1389), [#&#8203;1619](https://togithub.com/TypeStrong/ts-node/issues/1619))\n-   Fix: Remove indentation from `ts-node --help` output ([#&#8203;1597](https://togithub.com/TypeStrong/ts-node/issues/1597), [#&#8203;1600](https://togithub.com/TypeStrong/ts-node/issues/1600))\n-   Fix [#&#8203;1425](https://togithub.com/TypeStrong/ts-node/issues/1425): Merged definitions correctly into `tsconfig.schemastore-schema.json` ([#&#8203;1425](https://togithub.com/TypeStrong/ts-node/issues/1425), [#&#8203;1618](https://togithub.com/TypeStrong/ts-node/issues/1618))\n-   Fix: Allow disabling `\"use strict\"` emit in SWC transpiler ([#&#8203;1531](https://togithub.com/TypeStrong/ts-node/issues/1531), [#&#8203;1537](https://togithub.com/TypeStrong/ts-node/issues/1537))\n-   Fix: Add missing `ERR_UNKNOWN_FILE_EXTENSION` constructor; was throwing `ERR_UNKNOWN_FILE_EXTENSION is not a constructor` ([#&#8203;1562](https://togithub.com/TypeStrong/ts-node/issues/1562)) [@&#8203;bluelovers](https://togithub.com/bluelovers)\n-   Fix [#&#8203;1565](https://togithub.com/TypeStrong/ts-node/issues/1565): entrypoint resolution failed on node v12.0.x and v12.1.x ([#&#8203;1565](https://togithub.com/TypeStrong/ts-node/issues/1565), [#&#8203;1566](https://togithub.com/TypeStrong/ts-node/issues/1566)) [@&#8203;davidmurdoch](https://togithub.com/davidmurdoch)\n\n#### Docs\n\n-   Explain `env -S` flag for shebangs ([docs](https://typestrong.org/ts-node/docs/usage#shebang)) ([#&#8203;1448](https://togithub.com/TypeStrong/ts-node/issues/1448), [#&#8203;1545](https://togithub.com/TypeStrong/ts-node/issues/1545)) [@&#8203;sheeit](https://togithub.com/sheeit), [@&#8203;chee](https://togithub.com/chee)\n-   Suggest `skipIgnore` when you want to compile files in node_modules ([docs](https://typestrong.org/ts-node/docs/how-it-works)) ([#&#8203;1553](https://togithub.com/TypeStrong/ts-node/issues/1553)) [@&#8203;webstrand](https://togithub.com/webstrand)\n-   Fix typo in `moduleTypes` on options page ([docs](https://typestrong.org/ts-node/docs/options)) ([#&#8203;1630](https://togithub.com/TypeStrong/ts-node/issues/1630), [#&#8203;1633](https://togithub.com/TypeStrong/ts-node/issues/1633))\n\n#### Misc\n\n-   Adds experimental `experimentalResolverFeatures` option, but it does not do anything yet ([#&#8203;1514](https://togithub.com/TypeStrong/ts-node/issues/1514), [#&#8203;1614](https://togithub.com/TypeStrong/ts-node/issues/1614))\n\nhttps://github.com/TypeStrong/ts-node/milestone/4\n\n### [`v10.4.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.4.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.3.1...v10.4.0)\n\n**Added**\n\n-   Adds support for targets \"es2020\" and \"es2021\" to swc transpiler ([#&#8203;1521](https://togithub.com/TypeStrong/ts-node/issues/1521))\n-   Adds automatic target downgrade when using older versions of swc ([#&#8203;1521](https://togithub.com/TypeStrong/ts-node/issues/1521))\n    -   If tsconfig specifies es2020, but your version of swc only supports up to es2019, ts-node will automatically switch to es2019 instead of throwing an error\n\n**Changed**\n\n-   Improves types and API docs for `creatEsmHooks` ([API docs](https://typestrong.org/ts-node/api/index.html#createEsmHooks)) ([#&#8203;1506](https://togithub.com/TypeStrong/ts-node/issues/1506), [#&#8203;1529](https://togithub.com/TypeStrong/ts-node/issues/1529))\n\n**Fixed**\n\n-   Fix [#&#8203;1526](https://togithub.com/TypeStrong/ts-node/issues/1526): data URL handling in new ESM loader hooks API ([#&#8203;1526](https://togithub.com/TypeStrong/ts-node/issues/1526), [#&#8203;1529](https://togithub.com/TypeStrong/ts-node/issues/1529))\n\nhttps://github.com/TypeStrong/ts-node/milestone/8\n\n### [`v10.3.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.3.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.3.0...v10.3.1)\n\n**Fixed**\n\n-   Add version check to use new loader hooks API for node >=16.12.0 ([#&#8203;1522](https://togithub.com/TypeStrong/ts-node/issues/1522)) [@&#8203;shrujalshah28](https://togithub.com/shrujalshah28)\n\nhttps://github.com/TypeStrong/ts-node/milestone/7\n\n### [`v10.3.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.3.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.2.1...v10.3.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1507](https://togithub.com/TypeStrong/ts-node/issues/1507)\n\n**Added**\n\n-   Declare types for node builtin modules within REPL so you do not need to import them ([#&#8203;1424](https://togithub.com/TypeStrong/ts-node/issues/1424), [#&#8203;1500](https://togithub.com/TypeStrong/ts-node/issues/1500))\n    -   Node REPL exposes builtin modules as globals; typechecker now understands this\n    -   Typechecking should no longer raise errors when using builtins without first importing\n    -   For example: `util.promisify(setTimeout)(1000)` or `fs.readFileSync('example.txt')`\n-   Add `createEsmHooks()` function to create ESM loader hooks ([API docs](https://typestrong.org/ts-node/api/index.html#createEsmHooks)) ([#&#8203;1439](https://togithub.com/TypeStrong/ts-node/issues/1439)) [@&#8203;nonara](https://togithub.com/nonara)\n    -   Can be used to compose our loader hooks with another loader or additional logic\n-   `register()` accepts a ts-node `Service` ([API docs](https://typestrong.org/ts-node/api/index.html#register)) ([#&#8203;1474](https://togithub.com/TypeStrong/ts-node/issues/1474))\n    -   `register(options)` is still supported; no breaking changes\n-   Add support for Node.js's new loader hooks API ([#&#8203;1372](https://togithub.com/TypeStrong/ts-node/issues/1372), [#&#8203;1457](https://togithub.com/TypeStrong/ts-node/issues/1457), [#&#8203;1007](https://togithub.com/TypeStrong/ts-node/issues/1007)) [@&#8203;jonaskello](https://togithub.com/jonaskello)\n    -   Node.js has changed their loader hooks API\n    -   ts-node is compatible with all node versions, detects your node version and exposes the correct hooks API\n    -   Node's new API currently only available in node v17 nightly builds\n    -   Node will eventually backport the changes to node 16, and may also be backport to 14 and 12\n-   Add `--emit` to `--help` output ([#&#8203;1400](https://togithub.com/TypeStrong/ts-node/issues/1400), [#&#8203;1484](https://togithub.com/TypeStrong/ts-node/issues/1484)) [@&#8203;markbradley27](https://togithub.com/markbradley27)\n\n**Changed**\n\n-   When ts-node is registered and other libraries `require('source-map-support')`, they will be redirected to `@cspotcode/source-map-support`\n    -   See complete description in **Fixed** section below\n\n**Fixed**\n\n-   Fix [#&#8203;1440](https://togithub.com/TypeStrong/ts-node/issues/1440), [#&#8203;1441](https://togithub.com/TypeStrong/ts-node/issues/1441), [#&#8203;1438](https://togithub.com/TypeStrong/ts-node/issues/1438), [#&#8203;1495](https://togithub.com/TypeStrong/ts-node/issues/1495): Incorrect stack traces when third-party libraries use `source-map-support` instead of `@cspotcode/source-map-support` ([#&#8203;1440](https://togithub.com/TypeStrong/ts-node/issues/1440), [#&#8203;1441](https://togithub.com/TypeStrong/ts-node/issues/1441), [#&#8203;1438](https://togithub.com/TypeStrong/ts-node/issues/1438), [#&#8203;1495](https://togithub.com/TypeStrong/ts-node/issues/1495), [cspotcode/node-source-map-support#&#8203;23](https://togithub.com/cspotcode/node-source-map-support/issues/23), [#&#8203;1496](https://togithub.com/TypeStrong/ts-node/issues/1496), [#&#8203;1497](https://togithub.com/TypeStrong/ts-node/issues/1497)) [@&#8203;ejose19](https://togithub.com/ejose19)\n    -   When ts-node is registered and other libraries `require('source-map-support')`, they will be redirected to `@cspotcode/source-map-support`\n    -   ts-node uses `@cspotcode/source-map-support` for the fixes and enhancements listed here: [`@cspotcode/source-map-support` changelog](https://togithub.com/cspotcode/node-source-map-support/issues/24)\n    -   To ensure correct stack traces, all libraries must share a compatible sourcemap support implementation\n-   Fix [#&#8203;1363](https://togithub.com/TypeStrong/ts-node/issues/1363): REPL may erroneously combine previous input with next input, eval both as a single statement ([#&#8203;1363](https://togithub.com/TypeStrong/ts-node/issues/1363), [#&#8203;1480](https://togithub.com/TypeStrong/ts-node/issues/1480)) [@&#8203;TheUnlocked](https://togithub.com/TheUnlocked)\n    -   For example, entering `100` on first line and `* 2` on second line would erronously be interpreted as `100 * 2`\n    -   REPL now ensures both lines are separate statements, both when typechecking and when evaluating\n-   Fix [#&#8203;1488](https://togithub.com/TypeStrong/ts-node/issues/1488): Node may log \"circular dependency\" warning when using `allowJs` ([#&#8203;1488](https://togithub.com/TypeStrong/ts-node/issues/1488), [#&#8203;1489](https://togithub.com/TypeStrong/ts-node/issues/1489))\n-   Fix [#&#8203;1301](https://togithub.com/TypeStrong/ts-node/issues/1301): Filter empty strings from `TS_NODE_IGNORE` and `TS_NODE_IGNORE_DIAGNOSTICS`; treat empty environment variable as empty array ([#&#8203;1301](https://togithub.com/TypeStrong/ts-node/issues/1301), [#&#8203;1483](https://togithub.com/TypeStrong/ts-node/issues/1483)) [@&#8203;ValeriaVG](https://togithub.com/ValeriaVG)\n    -   `TS_NODE_IGNORE= ts-node ./example.ts` will disable default ignore rules; will compile files in `./node_modules`\n\n**Docs**\n\n-   Update VSCode debug configuration ([Docs](https://typestrong.org/ts-node/docs/recipes/visual-studio-code)) ([#&#8203;1466](https://togithub.com/TypeStrong/ts-node/issues/1466))\n-   Update ESM-related messaging to clarify that experimental status is due to Node.js, not ts-node ([#&#8203;1455](https://togithub.com/TypeStrong/ts-node/issues/1455))\n-   Refer to ts-node consistently ([#&#8203;1481](https://togithub.com/TypeStrong/ts-node/issues/1481)) [@&#8203;animafps](https://togithub.com/animafps)\n\nhttps://github.com/TypeStrong/ts-node/milestone/5\n\n### [`v10.2.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.2.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.2.0...v10.2.1)\n\n**Fixed**\n\n-   Fixes [#&#8203;1426](https://togithub.com/TypeStrong/ts-node/issues/1426): Do not import typescript outside of configuration/project loading ([#&#8203;1433](https://togithub.com/TypeStrong/ts-node/issues/1433), [#&#8203;1426](https://togithub.com/TypeStrong/ts-node/issues/1426)) [@&#8203;Songkeys](https://togithub.com/Songkeys)\n    -   We take care to load your project's version of typescript, falling back to a globally-installed version if necessary.\n    -   10.2.0 introduced a bug where we did not do this consistently, causing global or npx installations of ts-node to attempt loading typescript relative to themselves, not your project.\n    -   This failed if typescript was not globally installed or npx did not install peer dependencies.\n\nhttps://github.com/TypeStrong/ts-node/milestone/6\n\n### [`v10.2.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.2.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.1.0...v10.2.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1423](https://togithub.com/TypeStrong/ts-node/issues/1423)\n\n**Added**\n\n-   Adds top-level await support to REPL ([#&#8203;1383](https://togithub.com/TypeStrong/ts-node/issues/1383), [#&#8203;245](https://togithub.com/TypeStrong/ts-node/issues/245)) [@&#8203;ejose19](https://togithub.com/ejose19)\n    -   can be disabled with `--no-experimental-repl-await`, `experimentalReplAwait`, or `TS_NODE_EXPERIMENTAL_REPL_AWAIT` ([CLI docs](https://typestrong.org/ts-node/docs/options), [API docs](https://typestrong.org/ts-node/api/interfaces/CreateOptions.html#experimentalReplAwait))\n-   Setting `\"pretty\": false` disables pretty formatting of diagnostics even when stdout is a TTY ([#&#8203;1418](https://togithub.com/TypeStrong/ts-node/issues/1418), [#&#8203;1420](https://togithub.com/TypeStrong/ts-node/issues/1420)) [@&#8203;elevatebart](https://togithub.com/elevatebart)\n    -   Applies to ts-node's `pretty` option, not to be confused with TypeScript's `pretty` option\n-   Ignores diagnostics which are annoying in an interactive REPL ([#&#8203;1396](https://togithub.com/TypeStrong/ts-node/issues/1396), [#&#8203;1120](https://togithub.com/TypeStrong/ts-node/issues/1120), [#&#8203;729](https://togithub.com/TypeStrong/ts-node/issues/729), [#&#8203;850](https://togithub.com/TypeStrong/ts-node/issues/850), [#&#8203;469](https://togithub.com/TypeStrong/ts-node/issues/469))\n    -   For example, when you input `const foo = 1` in the REPL, `foo` is unused.  We ignore the resulting diagnostic `foo is declared but its value is never read`\n    -   Diagnostics are only ignored in the REPL\n    -   Diagnostics for non-REPL files imported by the REPL will still be shown\n-   Logged stack traces are colorized to match vanilla node's behavior ([#&#8203;1412](https://togithub.com/TypeStrong/ts-node/issues/1412), [#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405))\n\n**Fixed**\n\n-   Fix [#&#8203;1397](https://togithub.com/TypeStrong/ts-node/issues/1397): SWC transpiler should emit ECMAScript imports and exports when configuration dictates ([#&#8203;1409](https://togithub.com/TypeStrong/ts-node/issues/1409), [#&#8203;1397](https://togithub.com/TypeStrong/ts-node/issues/1397))\n    -   Enables SWC transpiler to be used alongside `--loader`\n-   Fix [#&#8203;1403](https://togithub.com/TypeStrong/ts-node/issues/1403): source-map-support breaks rendering of node errors ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1403](https://togithub.com/TypeStrong/ts-node/issues/1403))\n-   Fix [#&#8203;1410](https://togithub.com/TypeStrong/ts-node/issues/1410): rendering of async stack frames should include `async` annotations ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1410](https://togithub.com/TypeStrong/ts-node/issues/1410))\n-   Fix [#&#8203;1411](https://togithub.com/TypeStrong/ts-node/issues/1411): wrong order of process 'exit' event and logging unhandled exception ([#&#8203;1405](https://togithub.com/TypeStrong/ts-node/issues/1405), [#&#8203;1411](https://togithub.com/TypeStrong/ts-node/issues/1411))\n-   Fix [#&#8203;1419](https://togithub.com/TypeStrong/ts-node/issues/1419): Should not throw `require.resolve` error when `@types/node` peerDependency is missing ([#&#8203;1419](https://togithub.com/TypeStrong/ts-node/issues/1419), [#&#8203;1422](https://togithub.com/TypeStrong/ts-node/issues/1422))\n\nhttps://github.com/TypeStrong/ts-node/milestone/2\n\n### [`v10.1.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.1.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v10.0.0...v10.1.0)\n\nQuestions about this release? Ask in the official discussion thread: [#&#8203;1390](https://togithub.com/TypeStrong/ts-node/issues/1390)\n\n**Added**\n\n-   Add `\"moduleType\"` option to override module type -- CommonJS or ECMAScript -- on select files. ([docs](https://typestrong.org/ts-node/docs/module-type-overrides)) ([#&#8203;1342](https://togithub.com/TypeStrong/ts-node/issues/1342), [#&#8203;1371](https://togithub.com/TypeStrong/ts-node/issues/1371), [#&#8203;1376](https://togithub.com/TypeStrong/ts-node/issues/1376))\n    -   Useful when a configuration file, for example `webpack.config.ts`, must execute as CommonJS but the rest of the project is ESM\n    -   selectively overrides `package.json` `\"type\"` and `tsconfig.json` `\"module\"`\n    -   akin to `.cjs` and `.mjs` extensions, but for `.ts` and `.tsx` files\n    -   thanks to [@&#8203;jayaddison](https://togithub.com/jayaddison) for help on test coverage\n-   Implement `\"extends\"` support for `\"ts-node\"` options in `tsconfig.json` ([#&#8203;1328](https://togithub.com/TypeStrong/ts-node/issues/1328), [#&#8203;1356](https://togithub.com/TypeStrong/ts-node/issues/1356))\n    -   `\"ts-node\": {}` options will be parsed from extended tsconfigs\n    -   allows sharing and deduplicating ts-node configuration\n-   Un-deprecate `scope` and `scopeDir`; add both to CLI and `tsconfig.json` options; un-deprecate `TS_NODE_SCOPE` env var; add `TS_NODE_SCOPE_DIR` env var ([docs](https://typestrong.org/ts-node/docs/options)) ([#&#8203;1346](https://togithub.com/TypeStrong/ts-node/issues/1346), [#&#8203;1367](https://togithub.com/TypeStrong/ts-node/issues/1367))\n\n**Changed**\n\n-   Improve error messages thrown by native ESM loader hooks ([#&#8203;1357](https://togithub.com/TypeStrong/ts-node/issues/1357), [#&#8203;1373](https://togithub.com/TypeStrong/ts-node/issues/1373)) [@&#8203;tars0x9752](https://togithub.com/tars0x9752)\n    -   messages more closely match node; are more descriptive\n-   Emit `\"ts-node\"` object at the top of `--showConfig` output instead of the bottom ([#&#8203;1355](https://togithub.com/TypeStrong/ts-node/issues/1355))\n\n**Fixed**\n\n-   Fix [#&#8203;1282](https://togithub.com/TypeStrong/ts-node/issues/1282): Set correct globals in `[stdin]`, `[eval]`, and `<repl>` contexts ([#&#8203;1333](https://togithub.com/TypeStrong/ts-node/issues/1333))\n    -   More closely align ts-node's behavior with vanilla node\n    -   Affects the interactive REPL, piping to stdin, and `ts-node -e`\n    -   Matches node's behavior for globals `__filename`, `__dirname`, `module` and sub-fields of `module`, `exports`, and builtin module aliases `fs`, etc\n-   Fix [#&#8203;1343](https://togithub.com/TypeStrong/ts-node/issues/1343): Set swc option `keepClassNames` to `true` ([#&#8203;1344](https://togithub.com/TypeStrong/ts-node/issues/1344))\n-   Fix: [#&#8203;1387](https://togithub.com/TypeStrong/ts-node/issues/1387): REPL outputs 'use strict' after first empty line of input ([#&#8203;1388](https://togithub.com/TypeStrong/ts-node/issues/1388)) [@&#8203;ejose19](https://togithub.com/ejose19)\n\n**Docs**\n\n-   Update ESM docs to say that env vars *are* supported with `node --loader ts-node/esm` ([docs](https://togithub.com/TypeStrong/ts-node/issues/1007)) ([#&#8203;1379](https://togithub.com/TypeStrong/ts-node/issues/1379))\n\nhttps://github.com/TypeStrong/ts-node/milestone/3\n\n### [`v10.0.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v10.0.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.1.1...v10.0.0)\n\nQuestions about this release?  Ask in the official discussion thread: [#&#8203;1337](https://togithub.com/TypeStrong/ts-node/issues/1337)\n\n*Breaking changes are prefixed with **\\[BREAKING]***\n\n**Added**\n\n-   Adds `--show-config` to log the resolved configuration ([docs](https://typestrong.org/ts-node/docs/troubleshooting#understanding-configuration)) ([#&#8203;1100](https://togithub.com/TypeStrong/ts-node/issues/1100), [#&#8203;1243](https://togithub.com/TypeStrong/ts-node/issues/1243))\n-   Bundle and re-export [@&#8203;tsconfig/node](https://togithub.com/tsconfig/node)\\* configurations for convenience ([docs](https://typestrong.org/ts-node/docs/configuration#tsconfigbases)) ([#&#8203;1202](https://togithub.com/TypeStrong/ts-node/issues/1202), [#&#8203;1236](https://togithub.com/TypeStrong/ts-node/issues/1236), [#&#8203;1313](https://togithub.com/TypeStrong/ts-node/issues/1313))\n-   Default to appropriate [@&#8203;tsconfig/node](https://togithub.com/tsconfig/node)\\* configuration based on node and typescript versions ([docs](https://typestrong.org/ts-node/docs/configuration#default-config)) ([#&#8203;1202](https://togithub.com/TypeStrong/ts-node/issues/1202), [#&#8203;1236](https://togithub.com/TypeStrong/ts-node/issues/1236), [#&#8203;1313](https://togithub.com/TypeStrong/ts-node/issues/1313))\n-   Automatically reference [@&#8203;types/node](https://togithub.com/types/node); use globally-installed [@&#8203;types/node](https://togithub.com/types/node) if not locally installed ([#&#8203;1240](https://togithub.com/TypeStrong/ts-node/issues/1240), [#&#8203;1257](https://togithub.com/TypeStrong/ts-node/issues/1257))\n-   Add `swc` integration and new `--transpiler` option to use third-party transpilers for a massive speed boost on large codebases ([docs](https://typestrong.org/ts-node/docs/transpilers)) ([#&#8203;779](https://togithub.com/TypeStrong/ts-node/issues/779), [#&#8203;1160](https://togithub.com/TypeStrong/ts-node/issues/1160))\n-   Add `scopeDir` API option ([docs](https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html#scopeDir)) ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Add `projectSearchDir` API option ([docs](https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html#projectSearchDir)) ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Add `--cwd-mode` and `ts-node-cwd` to resolve config file relative to cwd, not entrypoint script ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n\n**Changed**\n\n-   **\\[BREAKING]** Make `--script-mode` default behavior; resolve tsconfig relative to entrypoint script instead of cwd ([#&#8203;949](https://togithub.com/TypeStrong/ts-node/issues/949), [#&#8203;1197](https://togithub.com/TypeStrong/ts-node/issues/1197), [#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   In most cases this change will have no noticeable effect\n    -   Primarily benefits portable shell scripts on your `$PATH`, because `ts-node` will respect the script's local `tsconfig.json`\n    -   Use `--cwd-mode` or `ts-node-cwd` if you need legacy behavior\n-   **\\[BREAKING]** `ignore` rules evaluate relative to `tsconfig.json` directory, otherwise `cwd` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   **\\[BREAKING]** Remove support for node 10.  Minimum supported version is node 12 ([#&#8203;1312](https://togithub.com/TypeStrong/ts-node/issues/1312))\n-   Rename `--dir` to `--cwd`; rename `TS_NODE_DIR` to `TS_NODE_CWD` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   `--dir` and `TS_NODE_DIR` are deprecated but still parsed for backwards-compatibility\n    -   `--dir` effectively changed the working directory of `ts-node`; renaming makes this behavior more obvious\n\n**Deprecated**\n\n-   Deprecate `TS_NODE_SCOPE` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Deprecate `--dir` and `TS_NODE_DIR` ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n\n**Removed**\n\n-   **\\[BREAKING]** Internal APIs removed from type declarations ([#&#8203;1242](https://togithub.com/TypeStrong/ts-node/issues/1242))\n    -   Removed `DEFAULTS`, `normalizeSlashes`, `parse`, `split`\n    -   No features were removed\n    -   This will only affect consumers of `ts-node`'s programmatic API\n\n**Fixed**\n\n-   **\\[BREAKING]** Fix [#&#8203;1229](https://togithub.com/TypeStrong/ts-node/issues/1229) and [#&#8203;1235](https://togithub.com/TypeStrong/ts-node/issues/1235): always throw `ERR_REQUIRE_ESM` when attempting to execute ESM as CJS, even when not using `--loader ts-node/esm` ([#&#8203;1232](https://togithub.com/TypeStrong/ts-node/issues/1232))\n    -   This aligns our behavior with vanilla `node`\n-   **\\[BREAKING]** Fix [#&#8203;1225](https://togithub.com/TypeStrong/ts-node/issues/1225): `compiler` is loaded relative to `tsconfig.json` instead of entrypoint script ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n    -   In most cases this change will have no noticable effect\n-   Fix [#&#8203;1217](https://togithub.com/TypeStrong/ts-node/issues/1217): REPL not always using passed stdout and stderr ([#&#8203;1224](https://togithub.com/TypeStrong/ts-node/issues/1224))\n-   Fix [#&#8203;1220](https://togithub.com/TypeStrong/ts-node/issues/1220): `ts-node ./index` may execute the wrong file extension because tsconfig search poisons the `require.resolve` cache ([#&#8203;1155](https://togithub.com/TypeStrong/ts-node/issues/1155))\n-   Fix [#&#8203;1322](https://togithub.com/TypeStrong/ts-node/issues/1322): Sourcemaps fail for filenames with spaces or other characters which are percent-encoded in URLs ([#&#8203;1160](https://togithub.com/TypeStrong/ts-node/issues/1160), [#&#8203;1330](https://togithub.com/TypeStrong/ts-node/issues/1330))\n-   Fix [#&#8203;1331](https://togithub.com/TypeStrong/ts-node/issues/1331): Resolution of node builtin modules in ESM loader fails on node >=12.20.0, <13 ([#&#8203;1332](https://togithub.com/TypeStrong/ts-node/issues/1332))\n\n**Docs**\n\n-   New documentation website: https://typestrong.org/ts-node\n    -   README is generated to match the website\n    -   Added page explaining CommonJS vs ESM\n    -   Added page with Performance advice\n    -   Added Troubleshooting page\n    -   Organized and added to \"Recipes\" section with third-party tool integrations\n    -   Added TypeDoc-generated API docs\n    -   Work was spread across multiple tickets: [#&#8203;1207](https://togithub.com/TypeStrong/ts-node/issues/1207), [#&#8203;1213](https://togithub.com/TypeStrong/ts-node/issues/1213), [#&#8203;1221](https://togithub.com/TypeStrong/ts-node/issues/1221), [#&#8203;1228](https://togithub.com/TypeStrong/ts-node/issues/1228), [#&#8203;1244](https://togithub.com/TypeStrong/ts-node/issues/1244), [#&#8203;1250](https://togithub.com/TypeStrong/ts-node/issues/1250), [#&#8203;1294](https://togithub.com/TypeStrong/ts-node/issues/1294), [#&#8203;1295](https://togithub.com/TypeStrong/ts-node/issues/1295), [#&#8203;1296](https://togithub.com/TypeStrong/ts-node/issues/1296), [#&#8203;1297](https://togithub.com/TypeStrong/ts-node/issues/1297)\n    -   Thanks to these contributors for PRs which improved our documentation\n        -   add troubleshooting tip for syntax errors ([#&#8203;1201](https://togithub.com/TypeStrong/ts-node/issues/1201)) [@&#8203;jedwards1211](https://togithub.com/jedwards1211)\n        -   Clarify handling of tsx/jsx file extensions ([#&#8203;1179](https://togithub.com/TypeStrong/ts-node/issues/1179)) [@&#8203;NaridaL](https://togithub.com/NaridaL)\n-   Added `CONTRIBUTING.md` to document the codebase and our development workflow\n\nhttps://github.com/TypeStrong/ts-node/milestone/1\n\n### [`v9.1.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.1.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.1.0...v9.1.1)\n\nNo code changes.  We re-packed and republished v9.1.1, because the v9.1.0 package was broken due to an npm v7 bug.\n\n**Fixes**\n\n-   Published tarball had extra slashes in the paths of dist files.  [#&#8203;1172](https://togithub.com/TypeStrong/ts-node/issues/1172)\n\n### [`v9.1.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.1.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v9.0.0...v9.1.0)\n\n**Added**\n\n-   Expose ts-node REPL via the API ([#&#8203;1121](https://togithub.com/TypeStrong/ts-node/issues/1121)) [@&#8203;MarcManiez](https://togithub.com/MarcManiez)\n-   Allow `--typeCheck` flag to override `--transpileOnly` flag specified in `tsconfig.json` ([#&#8203;1142](https://togithub.com/TypeStrong/ts-node/issues/1142))\n\n**Changed**\n\n-   Rename interface `Register` to `Service`. It is still aliased as `Register` for backwards compatibility ([#&#8203;1158](https://togithub.com/TypeStrong/ts-node/issues/1158))\n-   Update code copied from node's ESM resolver to be the latest from node 15, to keep our ESM resolver's behavior as close as possible to vanilla node ([#&#8203;1167](https://togithub.com/TypeStrong/ts-node/issues/1167))\n\n**Fixed**\n\n-   ESM resolver will preserve search portion of URL, used for cache busting ([#&#8203;1165](https://togithub.com/TypeStrong/ts-node/issues/1165)) [@&#8203;frandiox](https://togithub.com/frandiox)\n-   Fix ESM resolution of builtin modules on node >=14.13.1 ([#&#8203;1136](https://togithub.com/TypeStrong/ts-node/issues/1136))\n-   Recognize `--es-module-specifier-resolution` as an alias of `--experimental-specifier-resolution` for node 12 compatibility ([#&#8203;1122](https://togithub.com/TypeStrong/ts-node/issues/1122)) [@&#8203;nguyensomniac](https://togithub.com/nguyensomniac)\n\n**Docs**\n\n-   Fix description of `ts-node-dev` in README ([#&#8203;1131](https://togithub.com/TypeStrong/ts-node/issues/1131)) [@&#8203;iamandrewluca](https://togithub.com/iamandrewluca)\n-   Update `transformers` description to clarify incompatibility with `transpileOnly` ([#&#8203;1123](https://togithub.com/TypeStrong/ts-node/issues/1123))\n\n**Misc**\n\n-   Changes to test matrix: Test against node 15; drop node 13 tests; remove 12.16 in favor of latest 12.x.x ([#&#8203;1138](https://togithub.com/TypeStrong/ts-node/issues/1138), [#&#8203;1148](https://togithub.com/TypeStrong/ts-node/issues/1148))\n-   Improve codecov rules to remove misleading test failures ([#&#8203;1159](https://togithub.com/TypeStrong/ts-node/issues/1159))\n\n### [`v9.0.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v9.0.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.2...v9.0.0)\n\n*Breaking changes are labelled \\[BREAKING] below.*\n\n**Added**\n\n-   Throw `ERR_REQUIRE_ESM` when a file is `require()`d which should be loaded as ESM ([#&#8203;1031](https://togithub.com/TypeStrong/ts-node/issues/1031))\n-   Re-add `\"exports\"` declaration to package.json in backwards-compatible way, enabling `node --loader ts-node/esm` without file extension ([#&#8203;1028](https://togithub.com/TypeStrong/ts-node/issues/1028))\n-   Allow specifying `\"require\"` option via tsconfig ([#&#8203;925](https://togithub.com/TypeStrong/ts-node/issues/925))\n-   REPL respects node's `NODE_NO_READLINE` environment variable ([#&#8203;1090](https://togithub.com/TypeStrong/ts-node/issues/1090))\n-   Add a transpile-only entrypoint for ESM loader: `node --loader ts-node/esm/transpile-only` ([#&#8203;1102](https://togithub.com/TypeStrong/ts-node/issues/1102)) [@&#8203;concision](https://togithub.com/concision)\n\n**Changed**\n\n-   \\[BREAKING] Drops support for node versions < 10 ([#&#8203;1036](https://togithub.com/TypeStrong/ts-node/issues/1036))\n\n**Fixed**\n\n-   \\[BREAKING] Re-add `realpath`, which should fix workflows that use symlinks, such as `pnpm`, Lerna workspaces, or other mono-repo configurations ([#&#8203;970](https://togithub.com/TypeStrong/ts-node/issues/970))\n-   Compile files within `node_modules` when `--skip-ignore` or `--ignore` options are configured to allow it ([#&#8203;970](https://togithub.com/TypeStrong/ts-node/issues/970))\n-   Fix [#&#8203;884](https://togithub.com/TypeStrong/ts-node/issues/884) by not adding all referenced files to `getSourceFileNames`/`rootNames` ([#&#8203;999](https://togithub.com/TypeStrong/ts-node/issues/999))\n-   Fix [#&#8203;996](https://togithub.com/TypeStrong/ts-node/issues/996): bump `projectVersion` every time `getSourceFileNames` changes, avoiding accidentally outdated typechecking ([#&#8203;998](https://togithub.com/TypeStrong/ts-node/issues/998))\n-   Fix [#&#8203;1051](https://togithub.com/TypeStrong/ts-node/issues/1051): pass transformers object to `ts.transpileModule` ([#&#8203;1054](https://togithub.com/TypeStrong/ts-node/issues/1054)) [@&#8203;thetutlage](https://togithub.com/thetutlage)\n-   Fix [#&#8203;1060](https://togithub.com/TypeStrong/ts-node/issues/1060): use source maps for stack traces in ESM modules ([#&#8203;1087](https://togithub.com/TypeStrong/ts-node/issues/1087))\n-   Fix [#&#8203;1072](https://togithub.com/TypeStrong/ts-node/issues/1072): Respect `--experimental-specifier-resolution` coming from `NODE_OPTIONS` in ESM loader ([#&#8203;1085](https://togithub.com/TypeStrong/ts-node/issues/1085)) [@&#8203;evg656e](https://togithub.com/evg656e)\n-   Fix [#&#8203;1098](https://togithub.com/TypeStrong/ts-node/issues/1098): ESM loader should skip `.cjs`, `.mjs`, and any unexpected file extensions ([#&#8203;1103](https://togithub.com/TypeStrong/ts-node/issues/1103)) [@&#8203;concision](https://togithub.com/concision)\n\n**Docs**\n\n-   Better explain how to compile imports, either CommonJS or using experimental ESM loader. Resolves [#&#8203;1075](https://togithub.com/TypeStrong/ts-node/issues/1075) ([#&#8203;1086](https://togithub.com/TypeStrong/ts-node/issues/1086))\n\n**Misc**\n\n-   Fix, re-enable, and add various tests ([#&#8203;1044](https://togithub.com/TypeStrong/ts-node/issues/1044), [#&#8203;1088](https://togithub.com/TypeStrong/ts-node/issues/1088), [#&#8203;1108](https://togithub.com/TypeStrong/ts-node/issues/1108), [#&#8203;1110](https://togithub.com/TypeStrong/ts-node/issues/1110), [#&#8203;1109](https://togithub.com/TypeStrong/ts-node/issues/1109), [#&#8203;1115](https://togithub.com/TypeStrong/ts-node/issues/1115), [#&#8203;1043](https://togithub.com/TypeStrong/ts-node/issues/1043), [#&#8203;999](https://togithub.com/TypeStrong/ts-node/issues/999))\n\n### [`v8.10.2`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.2)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.1...v8.10.2)\n\n**Fixed**\n\nFixes [#&#8203;1037](https://togithub.com/TypeStrong/ts-node/issues/1037): source maps broken on Windows. ([#&#8203;1038](https://togithub.com/TypeStrong/ts-node/issues/1038))\n\n**Misc**\n\nFix failing tests on node 6 ([#&#8203;1035](https://togithub.com/TypeStrong/ts-node/issues/1035))\nPush coverage from Github Actions; remove TravisCI ([#&#8203;1034](https://togithub.com/TypeStrong/ts-node/issues/1034))\nRun tests e2e against an `npm pack && npm install`ed ts-node ([#&#8203;1032](https://togithub.com/TypeStrong/ts-node/issues/1032))\nRun CI tests on Windows ([#&#8203;1041](https://togithub.com/TypeStrong/ts-node/issues/1041))\nRun CI only once per commit on pull requests and master ([#&#8203;1042](https://togithub.com/TypeStrong/ts-node/issues/1042))\n\n### [`v8.10.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.10.0...v8.10.1)\n\n**Fix**\n\nFixes [#&#8203;1026](https://togithub.com/TypeStrong/ts-node/issues/1026): revert the addition of package.json \"exports\" because it blocked `require()`s that used to work, for example `require('ts-node/register')` ([#&#8203;1027](https://togithub.com/TypeStrong/ts-node/issues/1027))\n\n### [`v8.10.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.10.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.9.1...v8.10.0)\n\n**Added**\n\nExperimental support for native ECMAScript modules in node >=13 ([#&#8203;1007](https://togithub.com/TypeStrong/ts-node/issues/1007), [#&#8203;1010](https://togithub.com/TypeStrong/ts-node/issues/1010))\n\n### [`v8.9.1`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.9.1)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.9.0...v8.9.1)\n\n**Fixed**\n\nFix `--interactive` / `-i` flag so it forces REPL even when stdin is not a TTY ([#&#8203;1019](https://togithub.com/TypeStrong/ts-node/issues/1019))\n\n### [`v8.9.0`](https://togithub.com/TypeStrong/ts-node/releases/tag/v8.9.0)\n\n[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.8.2...v8.9.0)\n\n**Fixed**\n\nFix failing tests caused by recent changes to [@&#8203;types/node](https://togithub.com/types/node) ([#&#8203;1016](https://togithub.com/TypeStrong/ts-node/issues/1016))\nFix [#&#8203;945](https://togithub.com/TypeStrong/ts-node/issues/945): Bump source-map-support dependency to include upstream fix for worker threads error handling ([#&#8203;1015](https://togithub.com/TypeStrong/ts-node/issues/1015)) [@&#8203;addaleax](https://togithub.com/addaleax)\nFix [#&#8203;1004](https://togithub.com/TypeStrong/ts-node/issues/1004): in `--scriptMode`, resolve config file relative to realpath of entrypoint script ([#&#8203;1009](https://togithub.com/TypeStrong/ts-node/issues/1009))\nNormalized filenames in cache to fix performance issues on Windows ([#&#8203;997](https://togithub.com/TypeStrong/ts-node/issues/997)) [@&#8203;sylc](https://togithub.com/sylc)\n\n**Added**\n\nAdd timestamps to debug logging ([#&#8203;994](https://togithub.com/TypeStrong/ts-node/issues/994)) [@&#8203;sylc](https://togithub.com/sylc)\n\n**Docs**\n\nImprove coverage of the README ([#&#8203;1000](https://togithub.com/TypeStrong/ts-node/issues/1000)) [@&#8203;KasparEtter](https://togithub.com/KasparEtter)\nChange order of install \n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48370","RelatedDescription":"Open PR \"build: update dependency ts-node to v10\" (#48370)"},{"Id":"1477772992","IsPullRequest":true,"CreatedAt":"2022-12-06T00:05:36","Actor":"angular-robot","Number":"48369","RawContent":null,"Title":"build: update dependency karma-jasmine-html-reporter to v2","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [karma-jasmine-html-reporter](https://togithub.com/dfederm/karma-jasmine-html-reporter) | devDependencies | major | [`^1.5.0` -> `^2.0.0`](https://renovatebot.com/diffs/npm/karma-jasmine-html-reporter/1.7.0/2.0.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>dfederm/karma-jasmine-html-reporter</summary>\n\n### [`v2.0.0`](https://togithub.com/dfederm/karma-jasmine-html-reporter/releases/tag/v2.0.0)\n\n[Compare Source](https://togithub.com/dfederm/karma-jasmine-html-reporter/compare/v1.7.0...v2.0.0)\n\nThis version rewrites the package to use the peer jasmine-core package instead of repackaging the html reporting code. This fixes support for Jasmine v4 and (hopefully) will require less package updates going forward.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48369","RelatedDescription":"Open PR \"build: update dependency karma-jasmine-html-reporter to v2\" (#48369)"},{"Id":"1477772740","IsPullRequest":true,"CreatedAt":"2022-12-06T00:05:30","Actor":"angular-robot","Number":"48368","RawContent":null,"Title":"build: update dependency karma-jasmine to v5","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [karma-jasmine](https://togithub.com/karma-runner/karma-jasmine) | devDependencies | major | [`~4.0.0` -> `~5.1.0`](https://renovatebot.com/diffs/npm/karma-jasmine/4.0.2/5.1.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>karma-runner/karma-jasmine</summary>\n\n### [`v5.1.0`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;510-httpsgithubcomkarma-runnerkarma-jasminecomparev501v510-2022-06-16)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.1...v5.1.0)\n\n##### Features\n\n-   **spec-filter:** allow custom specFilter ([b73dbd6](https://togithub.com/karma-runner/karma-jasmine/commit/b73dbd69050bc7e192b1ad0ac9bb880f0ec00a0e))\n\n#### [5.0.1](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.0...v5.0.1) (2022-05-13)\n\n##### Bug Fixes\n\n-   fixes matches performance issue, github[#&#8203;302](https://togithub.com/karma-runner/karma-jasmine/issues/302) ([e964fa6](https://togithub.com/karma-runner/karma-jasmine/commit/e964fa60ad63826e2e85f712eb119c524f4ef428))\n\n### [`v5.0.1`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;501-httpsgithubcomkarma-runnerkarma-jasminecomparev500v501-2022-05-13)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v5.0.0...v5.0.1)\n\n##### Bug Fixes\n\n-   fixes matches performance issue, github[#&#8203;302](https://togithub.com/karma-runner/karma-jasmine/issues/302) ([e964fa6](https://togithub.com/karma-runner/karma-jasmine/commit/e964fa60ad63826e2e85f712eb119c524f4ef428))\n\n### [`v5.0.0`](https://togithub.com/karma-runner/karma-jasmine/blob/HEAD/CHANGELOG.md#&#8203;500-httpsgithubcomkarma-runnerkarma-jasminecomparev402v500-2022-04-12)\n\n[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.2...v5.0.0)\n\n##### Bug Fixes\n\n-   limit karma peer dependency to ^6.0.0 ([d72c124](https://togithub.com/karma-runner/karma-jasmine/commit/d72c124d9f30402acb31ecdf77fd517208713320))\n\n##### Build System\n\n-   drop Node.js 10 support ([ea691e8](https://togithub.com/karma-runner/karma-jasmine/commit/ea691e82cffe14358bfaddfc1f42f0ba58145e32))\n\n##### Features\n\n-   **deps:** update dependencies including jasmine-core ([821f094](https://togithub.com/karma-runner/karma-jasmine/commit/821f094801dcd8380c2dee15c0f1686e9df5dca7))\n\n##### BREAKING CHANGES\n\n-   The minimum required version of karma is 6.0.0.\n-   The minimum required version of Node is 12.0.0.\n-   **deps:** jasmine-core was updated to the 4.1.0.\n\nPlease refer to the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md) for the complete list of changes and migration instructions.\n\n#### [4.0.2](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.1...v4.0.2) (2022-03-30)\n\n##### Bug Fixes\n\n-   sync package-lock.json and package.json ([4dacc5d](https://togithub.com/karma-runner/karma-jasmine/commit/4dacc5d4cae68d73337cefad5a5879a6471fe42c))\n\n#### [4.0.1](https://togithub.com/karma-runner/karma-jasmine/compare/v4.0.0...v4.0.1) (2020-08-12)\n\n##### Bug Fixes\n\n-   **adapter:** filter functions from result.order ([#&#8203;272](https://togithub.com/karma-runner/karma-jasmine/issues/272)) ([28f337c](https://togithub.com/karma-runner/karma-jasmine/commit/28f337caa86e9147d2110a27fb78cc072409c62a))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48368","RelatedDescription":"Open PR \"build: update dependency karma-jasmine to v5\" (#48368)"},{"Id":"1477640818","IsPullRequest":true,"CreatedAt":"2022-12-05T23:56:51","Actor":"angular-robot","Number":"48366","RawContent":null,"Title":"build: update dependency jasmine-core to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine-core](https://jasmine.github.io) ([source](https://togithub.com/jasmine/jasmine)) | devDependencies | major | [`~3.6.0` -> `~4.5.0`](https://renovatebot.com/diffs/npm/jasmine-core/3.6.0/4.5.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>jasmine/jasmine</summary>\n\n### [`v4.5.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.5.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.4.0...v4.5.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.5.0.md).\n\n### [`v4.4.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.4.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.3.0...v4.4.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.4.0.md).\n\n### [`v4.3.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.3.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.2.0...v4.3.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.3.0.md).\n\n### [`v4.2.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.2.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.1.1...v4.2.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.2.0.md).\n\n### [`v4.1.1`](https://togithub.com/jasmine/jasmine/releases/tag/v4.1.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.1.0...v4.1.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.1.1.md).\n\n### [`v4.1.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.1.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.0.1...v4.1.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.1.0.md).\n\n### [`v4.0.1`](https://togithub.com/jasmine/jasmine/releases/tag/v4.0.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v4.0.0...v4.0.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.1.md).\n\n### [`v4.0.0`](https://togithub.com/jasmine/jasmine/releases/tag/v4.0.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.1...v4.0.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/4.0.0.md).\n\n### [`v3.99.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.99.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.99.0...v3.99.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.1.md).\n\n### [`v3.99.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.99.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.1...v3.99.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.99.0.md).\n\n### [`v3.10.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.10.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.10.0...v3.10.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.10.1.md).\n\n### [`v3.10.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.10.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.9.0...v3.10.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.10.0.md).\n\n### [`v3.9.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.9.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.8.0...v3.9.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.9.0.md).\n\n### [`v3.8.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.8.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.7.1...v3.8.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.8.0.md).\n\n### [`v3.7.1`](https://togithub.com/jasmine/jasmine/releases/tag/v3.7.1)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.7.0...v3.7.1)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.7.1.md).\n\n### [`v3.7.0`](https://togithub.com/jasmine/jasmine/releases/tag/v3.7.0)\n\n[Compare Source](https://togithub.com/jasmine/jasmine/compare/v3.6.0...v3.7.0)\n\nPlease see the [release notes](https://togithub.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48366","RelatedDescription":"Closed or merged PR \"build: update dependency jasmine-core to v4\" (#48366)"},{"Id":"1477641028","IsPullRequest":true,"CreatedAt":"2022-12-05T23:05:36","Actor":"angular-robot","Number":"48367","RawContent":null,"Title":"build: update dependency jasmine-spec-reporter to v7","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [jasmine-spec-reporter](https://togithub.com/bcaudan/jasmine-spec-reporter) | devDependencies | major | [`~5.0.0` -> `~7.0.0`](https://renovatebot.com/diffs/npm/jasmine-spec-reporter/5.0.2/7.0.0) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Release Notes\n\n<details>\n<summary>bcaudan/jasmine-spec-reporter</summary>\n\n### [`v7.0.0`](https://togithub.com/bcaudan/jasmine-spec-reporter/blob/HEAD/CHANGELOG.md#&#8203;700)\n\n[Compare Source](https://togithub.com/bcaudan/jasmine-spec-reporter/compare/v6.0.0...v7.0.0)\n\n#### Bugfix\n\n-   'SpecReporter' is not assignable to type 'Reporter | CustomReporter' [#&#8203;588](https://togithub.com/bcaudan/jasmine-spec-reporter/pull/588)\n\n#### Breaking change\n\nUpdate signature of `CustomReporterResult` to fix collision with new jasmine properties\n\n**Before:**\n\n```ts\nexport interface CustomReporterResult extends jasmine.CustomReporterResult {\n  duration?: string\n}\n```\n\n**Now:**\n\n```ts\nexport interface CustomReporterResult extends jasmine.CustomReporterResult {\n  _jsr?: {\n    formattedDuration?: string\n  }\n}\n```\n\n### [`v6.0.0`](https://togithub.com/bcaudan/jasmine-spec-reporter/blob/HEAD/CHANGELOG.md#&#8203;600)\n\n[Compare Source](https://togithub.com/bcaudan/jasmine-spec-reporter/compare/v5.0.2...v6.0.0)\n\n#### Feature\n\n-   Use colors/safe [#&#8203;538](https://togithub.com/bcaudan/jasmine-spec-reporter/pull/538)\n\n#### Breaking change\n\nString prototype does not contain color properties anymore, colors must now be applied with the new `theme` component available as a field in [custom display processors](docs/customize-output.md).\n\n**Before:**\n\n```ts\nclass MyProcessor extends DisplayProcessor {\n  public displaySuccessfulSpec(spec: CustomReporterResult, log: string): string {\n    return 'OK '.successful + log\n  }\n}\n```\n\n**Now:**\n\n```ts\nclass MyProcessor extends DisplayProcessor {\n  public displaySuccessfulSpec(spec: CustomReporterResult, log: string): string {\n    return this.theme.successful('OK ') + log\n  }\n}\n```\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48367","RelatedDescription":"Open PR \"build: update dependency jasmine-spec-reporter to v7\" (#48367)"},{"Id":"1477640262","IsPullRequest":true,"CreatedAt":"2022-12-05T23:05:12","Actor":"angular-robot","Number":"48365","RawContent":null,"Title":"build: update dependency @types/jasmine to v4","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/jasmine](https://togithub.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine) ([source](https://togithub.com/DefinitelyTyped/DefinitelyTyped)) | devDependencies | major | [`~3.6.0` -> `~4.3.0`](https://renovatebot.com/diffs/npm/@types%2fjasmine/3.6.11/4.3.1) |\n\n---\n\n### ⚠ Dependency Lookup Warnings ⚠\n\nWarnings were logged while processing this repo. Please check the Dependency Dashboard for more information.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular/pull/48365","RelatedDescription":"Open PR \"build: update dependency @types/jasmine to v4\" (#48365)"},{"Id":"1474718083","IsPullRequest":true,"CreatedAt":"2022-12-05T22:52:43","Actor":"devversion","Number":"48345","RawContent":null,"Title":"build: remove docker-based AIO preview deploy setup","State":"closed","Body":"The docker-based AIO preview deploy setup is replaced with significantly simpler setup using GitHub actions provided by dev-infra (also something dev-infra can maintain better then).\r\n\r\nThe actions under the hood leverage Firebase preview channels.","Url":"https://github.com/angular/angular/pull/48345","RelatedDescription":"Closed or merged PR \"build: remove docker-based AIO preview deploy setup\" (#48345)"},{"Id":"1476858421","IsPullRequest":true,"CreatedAt":"2022-12-05T22:37:53","Actor":"bob-watson","Number":"48360","RawContent":null,"Title":"docs: add example app for new landing page","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe aio site doesn't have a simple Angular app to use as a demonstration of Angular.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe aio site has a simple Angular app to use as a demonstration of Angular.\r\n\r\nThis PR Is a prerequisite for #47047, which uses this example.\r\nThis example needs to be merged so the updates and links in #47047 can be tested before it goes live.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nN/A","Url":"https://github.com/angular/angular/pull/48360","RelatedDescription":"Closed or merged PR \"docs: add example app for new landing page\" (#48360)"},{"Id":"1476554235","IsPullRequest":true,"CreatedAt":"2022-12-05T22:35:14","Actor":"alan-agius4","Number":"48357","RawContent":null,"Title":"Remove unused methods and consts","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/48357","RelatedDescription":"Closed or merged PR \"Remove unused methods and consts\" (#48357)"},{"Id":"1476914626","IsPullRequest":true,"CreatedAt":"2022-12-05T20:09:14","Actor":"josephperrott","Number":"48361","RawContent":null,"Title":"build: enable the ng-dev auth service","State":"closed","Body":"Enable the auth service for merging into the repository\r\n","Url":"https://github.com/angular/angular/pull/48361","RelatedDescription":"Closed or merged PR \"build: enable the ng-dev auth service\" (#48361)"},{"Id":"1474958953","IsPullRequest":true,"CreatedAt":"2022-12-05T20:04:10","Actor":"devversion","Number":"48351","RawContent":null,"Title":"build: add more debug information for occasional windows flakiness","State":"closed","Body":"Ocassionally the NodeJS version is not correct after NVM on Windows. This adds some debug information that should help improve stability here. A recent attempt to update the `$PATH` did not seem to help.","Url":"https://github.com/angular/angular/pull/48351","RelatedDescription":"Closed or merged PR \"build: add more debug information for occasional windows flakiness\" (#48351)"},{"Id":"1474489102","IsPullRequest":true,"CreatedAt":"2022-12-05T20:03:38","Actor":"Piyush132000","Number":"48343","RawContent":null,"Title":"docs: removed empty methods","State":"closed","Body":"Removed empty methods and import from files\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nNA\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48343","RelatedDescription":"Closed or merged PR \"docs: removed empty methods\" (#48343)"},{"Id":"1477273736","IsPullRequest":false,"CreatedAt":"2022-12-05T19:27:55","Actor":"arambazamba","Number":"48364","RawContent":null,"Title":"Update docs on how to create code coverage in the current Angular version (15)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\ncontent of this file is outdated. newly generatec angular 15 projects do no contain karma.conf.js\r\n\r\nhttps://angular.io/guide/testing-code-coverage\n\n### Please provide a link to a minimal reproduction of the bug\n\nkarma.conf.js\n\n### Please provide the exception or error you saw\n\n```true\nno karma.conf.js present\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI 15\n```\n\n\n### Anything else?\n\nno","Url":"https://github.com/angular/angular/issues/48364","RelatedDescription":"Open issue \"Update docs on how to create code coverage in the current Angular version (15)\" (#48364)"},{"Id":"1476849127","IsPullRequest":false,"CreatedAt":"2022-12-05T19:23:53","Actor":"yjaaidi","Number":"48359","RawContent":null,"Title":"Zone.js Promise monkey patching issue with Node.js dynamic import","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI am working on Angular compatibility with Vitest and I encountered an issue with Zone.js.\r\n\r\nI get the following error: \r\n```\r\nMethod Promise.prototype.then called on incompatible receiver\r\n```\r\nwhich looks similar to this old issue https://github.com/angular/angular/issues/32802.\r\nIMO, there is an issue with Vitest which is using Node.js ESM & dynamic import but the Promise is monkey patched by Zone.js.\r\n\r\nI tried disabling Promise monkey patching using `globalThis.__Zone_disable_ZoneAwarePromise = true;`\r\n\r\nThen I get the following error in `@angular/core/testing`:\r\n\r\n```\r\nError: Expected to be running in 'ProxyZone', but it was not found.\r\n ❯ Function.ProxyZoneSpec.assertPresent node_modules/zone.js/bundles/zone-testing.umd.js:217:23\r\n ❯ Object.resetFakeAsyncZone node_modules/zone.js/bundles/zone-testing.umd.js:2061:54\r\n ❯ resetFakeAsyncZone ../../packages/core/testing/src/fake_async.ts:23:32\r\n```\r\n\r\nIf I manually change the zone.js source code and remove this assertion, the next error is:\r\n\r\n```\r\nError: Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\r\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)\r\n ❯ Function.Zone.assertZonePatched node_modules/zone.js/bundles/zone.umd.js:72:27\r\n ❯ new NgZone ../../packages/core/src/zone/ng_zone.ts:136:10\r\n ❯ TestBedCompiler.compileTestModule ../../packages/core/testing/src/test_bed_compiler.ts:749:20\r\n ❯ TestBedCompiler.finalize ../../packages/core/testing/src/test_bed_compiler.ts:275:10\r\n ❯ TestBedImpl.get testModuleRef [as testModuleRef] ../../packages/core/testing/src/test_bed.ts:615:43\r\n ❯ TestBedImpl.inject ../../packages/core/testing/src/test_bed.ts:504:25\r\n ❯ inject ../../packages/core/testing/src/test_bed.ts:314:33\r\n```\r\n\r\nIs there a way to monkey patch promises without breaking Node.js dynamic import?\r\n\r\nIf this isn't possible, then we should fix `__Zone_disable_ZoneAwarePromise`.\r\nMaybe:\r\n1. by making sure that `ProxyZoneSpec.assertPresent()` doesn't fail\r\n2. by adding a `!global['__Zone_disable_ZoneAwarePromise']` precondition in `assertZonePatched`\r\n\r\nWhat do you think?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.2\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: darwin x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@angular/material               15.0.1\r\n@schematics/angular             15.0.2\r\nrxjs                            7.5.6\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48359","RelatedDescription":"Closed issue \"Zone.js Promise monkey patching issue with Node.js dynamic import\" (#48359)"},{"Id":"1477145348","IsPullRequest":true,"CreatedAt":"2022-12-05T18:20:16","Actor":"alan-agius4","Number":"48363","RawContent":null,"Title":"refactor(core): remove old AJD workaround for G3","State":"open","Body":"This workaround does not seem to be needed any longer.\r\n","Url":"https://github.com/angular/angular/pull/48363","RelatedDescription":"Open PR \"refactor(core): remove old AJD workaround for G3\" (#48363)"},{"Id":"1476927381","IsPullRequest":true,"CreatedAt":"2022-12-05T16:24:59","Actor":"clydin","Number":"48362","RawContent":null,"Title":"refactor(compiler): reduce complexity for legacy i18n digest string output","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [X] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nWhen using the legacy digest algorithm for i18n messages, the output hexadecimal string now leverages a number's `toString()` function in addition to the `padStart` string function to generate the result. This removes the need for several helper functions which involved a series of iteration and bitwise operations to previously generate the same output.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48362","RelatedDescription":"Open PR \"refactor(compiler): reduce complexity for legacy i18n digest string output\" (#48362)"},{"Id":"1476658608","IsPullRequest":true,"CreatedAt":"2022-12-05T14:09:51","Actor":"alan-agius4","Number":"48358","RawContent":null,"Title":"refactor(core): simplify array flatten logic","State":"open","Body":"We can now use modern Javascript to get the same result.\r\n","Url":"https://github.com/angular/angular/pull/48358","RelatedDescription":"Open PR \"refactor(core): simplify array flatten logic\" (#48358)"},{"Id":"1474414692","IsPullRequest":true,"CreatedAt":"2022-12-05T11:41:03","Actor":"kormide","Number":"48342","RawContent":null,"Title":"build(bazel): set aio_preview executor to 2xlarge+","State":"closed","Body":"This step builds AIO which is memory intensive. Running out of memory may be the cause of some ci flakiness. Change the executor size to test this theory.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [x] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n`aio_preview` is flaky. Script seems to unexpectedly fail.\r\n\r\n## What is the new behavior?\r\n\r\nSee if a larger executor helps.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48342","RelatedDescription":"Closed or merged PR \"build(bazel): set aio_preview executor to 2xlarge+\" (#48342)"},{"Id":"1476279982","IsPullRequest":true,"CreatedAt":"2022-12-05T10:59:47","Actor":"crisbeto","Number":"48355","RawContent":null,"Title":"fix(core): unable to inject ChangeDetectorRef inside host directives","State":"open","Body":"When injecting the `ChangeDetectorRef` into a node that matches a component, we create a new ref using the component's LView. This breaks down for host directives, because they run before the component's LView has been created.\r\n\r\nThese changes resolve the issue by creating the LView before creating the node injector for the directives.\r\n\r\nFixes #48249.","Url":"https://github.com/angular/angular/pull/48355","RelatedDescription":"Open PR \"fix(core): unable to inject ChangeDetectorRef inside host directives\" (#48355)"},{"Id":"1474846366","IsPullRequest":true,"CreatedAt":"2022-12-05T09:53:24","Actor":"pkozlowski-opensource","Number":"48348","RawContent":null,"Title":"test(docs-infra): check the impact of GA / GTM","State":"closed","Body":"Just a temporary commit to check impact of Google Analytics and Google Tag Manager.\r\n","Url":"https://github.com/angular/angular/pull/48348","RelatedDescription":"Closed or merged PR \"test(docs-infra): check the impact of GA / GTM\" (#48348)"},{"Id":"1475384386","IsPullRequest":true,"CreatedAt":"2022-12-05T01:37:16","Actor":"dylhunn","Number":"48354","RawContent":null,"Title":"feat(language-service): Allow auto-imports of a pipe via quick fix when its selector is used.","State":"open","Body":"Two commits, as below:\r\n\r\n### feat(language-service): Allow auto-imports of a pipe via quick fix when its selector is used.\r\n\r\nThe language service could previously suggest importing a component when its selector was used in a template. Now, pipes are supported as well.\r\n\r\nUnder the hood, this is a bit tricky, especially in the case where an `NgModule` must be imported. Previously, we used an approximation: we looked at the Component's metadata, and just imported the declaring NgModule. However, this is not technically correct -- the NgModule that declares it is *not* necessarily the same one that exports it for the current scope. (In fact, there could be multiple re-exports!)\r\n\r\nAt present, the compiler doesn't track the declaring NgModule on pipe metadata. So rather than extend the old, inaccurate approach to pipes, I have implemented a more general solution.\r\n\r\nThis PR introduces a new reader on the template type checker, called a `GlobalMetadataReader`. This reader lazily initializes its indices, so time is only spent when the global data is requested. Internally, the reader conducts a breadth-first-search:\r\n  1. Begin with the traits declared in our current program, which we have via existing registries.\r\n  2. Look at NgModules and standalone components we've seen imported, and expand their imports and exports.\r\n      a. We will discover traits that can be imported via that NgModule.\r\n      b. We will discover additional NgModules that exist, and recurse into them.\r\n\r\nAs we conduct this BFS, we will discover all NgModules anywhere in the current dependency graph, as well as *all* exports of those NgModules. Along the way, we build several indices, which nicely solves the problem of knowing what NgModule exports a given pipe. In addition, this simultaneously solves the issue of being able to recommend all known re-exports.\r\n\r\n(This also sets up the next feature I intend to implement: importing components and pipes from outside the current compilation unit. For example, if someone is using `NgIf`, we will index `CommonModule`, and be able to suggest imports like `DatePipe`. This is not yet implemented though.)\r\n\r\n### refactor(language-service): Improve the quick fix auto-import tests.\r\n\r\nCurrently, the auto-import tests are very difficult to debug, because the `expect`ations are buried several function calls deep, and also because the multi-line replacements are hard to deal with. The auto-import tests now use a different approach, which can be easily debugged from the failure message. In addition, several new tests have been added to cover more cases.","Url":"https://github.com/angular/angular/pull/48354","RelatedDescription":"Open PR \"feat(language-service): Allow auto-imports of a pipe via quick fix when its selector is used.\" (#48354)"},{"Id":"1475207689","IsPullRequest":true,"CreatedAt":"2022-12-04T21:33:16","Actor":"dario-piotrowicz","Number":"48353","RawContent":null,"Title":"fix(compiler): make sure selectors inside container queries are correctly scoped","State":"open","Body":"resolves #48264\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #48264\r\n\r\n\r\n## What is the new behavior?\r\nContainer queries get correctly shimmed by the emulated view encapsulation\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n - This PR only allows the container queries to be correctly handled and does not provide any scoping for the container names, I am not sure if that is wanted/needed, I've put a comment on it in the issue regarding this","Url":"https://github.com/angular/angular/pull/48353","RelatedDescription":"Open PR \"fix(compiler): make sure selectors inside container queries are correctly scoped\" (#48353)"},{"Id":"1475036956","IsPullRequest":true,"CreatedAt":"2022-12-04T20:26:15","Actor":"devversion","Number":"48352","RawContent":null,"Title":"build: set target firebase project when setting deploy target","State":"closed","Body":"We now set the Firebase deploy target for AIO preview deployment via GitHub actions. It looks like configuring the deploy target also requires authentication / or a project.","Url":"https://github.com/angular/angular/pull/48352","RelatedDescription":"Closed or merged PR \"build: set target firebase project when setting deploy target\" (#48352)"},{"Id":"1474815688","IsPullRequest":true,"CreatedAt":"2022-12-04T16:14:16","Actor":"devversion","Number":"48347","RawContent":null,"Title":"build: check out project before setting AIO preview targets","State":"closed","Body":"Checks out the Firebase project before setting the AIO preview targets. Surprisingly Firebase requires a project when setting resource identifiers for the targets. This is already done by the Firebase deploy action from @FirebaseExtended, but we need to do it earlier.","Url":"https://github.com/angular/angular/pull/48347","RelatedDescription":"Closed or merged PR \"build: check out project before setting AIO preview targets\" (#48347)"},{"Id":"1474947764","IsPullRequest":false,"CreatedAt":"2022-12-04T15:16:07","Actor":"leandrotassi","Number":"48350","RawContent":null,"Title":"[Disabled] directive bug for form controls","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular 14\n\n### Description\n\nWhen upgrading from Angular 14 to Angular 15 the [Disabled] directive of form controls stopped working.\r\n\r\nIs this a bug or did something change?\r\n\r\n I'm using version 15.0.2\n\n### Minimal Reproduction\n\n <button type=\"button\" id=\"btnAddPeopleEditor\" class=\"btn btn-success btn-sm\" (click)=\"addPeople(1)\"\r\n                  [disabled]=\"disabledEditEditor || (habilitarControle(isReadOnly) == 'true')\">\r\n                  Add\r\n                </button>\n\n### Exception or Error\n\n```text\nNo error occurs. It simply stopped working.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.2\r\nNode: 16.17.0\r\nPackage Manager: npm 8.18.0\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@angular/material               15.0.1\r\n@nguniversal/builders           15.0.0\r\n@nguniversal/common             15.0.0\r\n@nguniversal/express-engine     15.0.0\r\n@schematics/angular             15.0.2\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular/issues/48350","RelatedDescription":"Open issue \"[Disabled] directive bug for form controls\" (#48350)"},{"Id":"1474906341","IsPullRequest":false,"CreatedAt":"2022-12-04T15:15:08","Actor":"Androbin","Number":"48349","RawContent":null,"Title":"@angular/service-worker - SwPush - \"This site has been updated in the background\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nservice-worker\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nRecently some Push Notifications are no longer being delivered as expected.\r\n\r\n### Expected Behavior\r\n```json\r\n{\r\n  \"notification\": {\r\n    \"title\": \"Hello World\",\r\n  }\r\n}\r\n```\r\n```json\r\n{\r\n  \"notification\": {\r\n    \"title\": \"Hello World\",\r\n    \"tag\": \"demo\"\r\n  }\r\n}\r\n```\r\n```json\r\n{\r\n  \"notification\": {\r\n    \"title\": \"Hello World\",\r\n    \"tag\": \"demo\",\r\n    \"renotify\": true\r\n  }\r\n}\r\n```\r\n\r\n### Unexpected Behavior\r\n```json\r\n{\r\n  \"notification\": {\r\n    \"title\": \"Hello World\",\r\n    \"renotify\": true\r\n  }\r\n}\r\n```\r\n\r\nThe notification is replaced with the browser's default notification that reads \"This site has been updated in the background\".\r\nSee #23037 @gkalpak\r\n\r\n### Workaround\r\n\r\n```js\r\nif (!notification.tag) {\r\n  delete notification.renotify;\r\n}\r\n```\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 12.2.0\r\nNode: 14.21.1\r\nPackage Manager: npm 6.14.17\r\nOS: linux x64\r\n\r\nAngular: 12.2.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router, service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1202.0\r\n@angular-devkit/build-angular     12.2.0\r\n@angular-devkit/core              12.2.0\r\nrxjs                              6.6.7\r\ntypescript                        4.3.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n- Might be an upstream (Chromium) issue\r\n- Confirmed to affect both Chrome for Linux and Chrome for Android","Url":"https://github.com/angular/angular/issues/48349","RelatedDescription":"Open issue \"@angular/service-worker - SwPush - \"This site has been updated in the background\"\" (#48349)"},{"Id":"1474727104","IsPullRequest":true,"CreatedAt":"2022-12-04T13:18:58","Actor":"devversion","Number":"48346","RawContent":null,"Title":"build: use npx for setting firebase deploy targets in AIO preview","State":"closed","Body":"For the deploy job we still need to use the Firebase CLI to configure the proper hosting deploy targets. See:\r\n011ef66a04d576b33e8828844a94960393fbc8aa.\r\n\r\nWe don't have node modules installed in this job, and it would also be overkill to install them for just using firebase here.\r\n\r\nSince the action uses `npx firebase-tools` down the line anyway, we can use it without any speed downsides.","Url":"https://github.com/angular/angular/pull/48346","RelatedDescription":"Closed or merged PR \"build: use npx for setting firebase deploy targets in AIO preview\" (#48346)"},{"Id":"1474501416","IsPullRequest":true,"CreatedAt":"2022-12-04T06:07:21","Actor":"Piyush132000","Number":"48344","RawContent":null,"Title":"docs: updated local variables and removed empty methods","State":"open","Body":"Removed empty methods and import from files and updated variable assignment\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nNA\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48344","RelatedDescription":"Open PR \"docs: updated local variables and removed empty methods\" (#48344)"},{"Id":"1474192088","IsPullRequest":true,"CreatedAt":"2022-12-03T19:09:01","Actor":"JoostK","Number":"48341","RawContent":null,"Title":"docs: added optionalChainNotNullable extended diagnostics details page","State":"open","Body":"Closes #48289\r\n","Url":"https://github.com/angular/angular/pull/48341","RelatedDescription":"Open PR \"docs: added optionalChainNotNullable extended diagnostics details page\" (#48341)"},{"Id":"1474152130","IsPullRequest":true,"CreatedAt":"2022-12-03T16:46:54","Actor":"brechtbilliet","Number":"48340","RawContent":null,"Title":"docs(docs-infra): update strongbrew resource to new website","State":"open","Body":"StrongBrew has stopped a few years back. \r\nWe are taking over at https://simplified.courses where we have an Angular blog, do on-site training and create content.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe resource still point to a company that has stopped.\r\nI should point to the new website where we same services are provided\r\n\r\n## What is the new behavior?\r\nThe docs are updated to point to the new website, since the old one will get taken down in a few weeks/months.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/48340","RelatedDescription":"Open PR \"docs(docs-infra): update strongbrew resource to new website\" (#48340)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1477255923","IsPullRequest":true,"CreatedAt":"2022-12-05T19:20:05","Actor":"clydin","Number":"24382","RawContent":null,"Title":"fix(@angular-devkit/build-angular): explicitly send options to JS transformer workers","State":"open","Body":"When using the experimental esbuild-based browser application builder, the JavaScript transformation workers will now only receive the explicit options expected. Previously, additional Angular compiler plugin options could have been serialized and sent as well. While these would be unused, there was no need to serialize/deserialize these option values.","Url":"https://github.com/angular/angular-cli/pull/24382","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): explicitly send options to JS transformer workers\" (#24382)"},{"Id":"1477032739","IsPullRequest":true,"CreatedAt":"2022-12-05T19:08:35","Actor":"clydin","Number":"24380","RawContent":null,"Title":"fix(@angular-devkit/build-angular): default preserve symlinks to Node.js value for esbuild","State":"closed","Body":"When using the experimental esbuild-based browser application builder, the `preserveSymlinks` option will now default to the value of the Node.js `--preserve-symlinks` argument. This removes the need to manually specify the option in two places if executing the build manually with Node.js or via the `NODE_OPTIONS` environment variable. This behavior mimics that of the default Webpack-based builder.","Url":"https://github.com/angular/angular-cli/pull/24380","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): default preserve symlinks to Node.js value for esbuild\" (#24380)"},{"Id":"1477126617","IsPullRequest":false,"CreatedAt":"2022-12-05T18:10:52","Actor":"arambazamba","Number":"24381","RawContent":null,"Title":"Bring back environment.ts to new projects","State":"open","Body":"### Command\r\n\r\nnew\r\n\r\n### Description\r\n\r\nNot generating environment.ts in new ng 15 projects is a big breaking change. So you are so proud of stand alone components and single file components and you do everything to please React developers. They will still prefere React. But if you go on changing everything Angular developers are used to you will push them away!!!\r\n\r\n### Describe the solution you'd like\r\n\r\nI want environment.ts and envrionment.prod.ts generated when creating a new project. Or at least have a flag to indicate that I want this to be done\r\n\r\n### Describe alternatives you've considered\r\n\r\nCreate manually or change to React","Url":"https://github.com/angular/angular-cli/issues/24381","RelatedDescription":"Open issue \"Bring back environment.ts to new projects\" (#24381)"},{"Id":"1476817631","IsPullRequest":false,"CreatedAt":"2022-12-05T15:27:19","Actor":"lhanneman","Number":"24379","RawContent":null,"Title":"ng build always includes html/head tags, even when removed from src/index.html","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n11.2.19\r\n\r\n### Description\r\n\r\nWhen running `ng-build`, the generated index.html (dist/index.html) always includes the parent `<html>` and `<head>` tags around the `<app-root>`. Previously (this worked in 11.2.9) one could remove the `<html>` and `<head>` tags from src/index.html and they would not be included in dist/index.html on build. This is helpful when integrating an angular app with another (such as ASP.NET MVC) and the parent HTML/layout will already exist.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Create a new angular 15 application using the latest CLI (or any CLI version after 12)\r\n2. Update src/index.html to include only `<app-root></app-root>`\r\n3. Run `ng build`\r\n\r\n\r\n### Exception or Error\r\n\r\n\r\nThe output index.html in /dist contains `<html>`, `<head>`, and `<body>` tags, along with the generated scripts.\r\n\r\nWhen following those same steps with version 11.2.19 of the CLI, the output in /dist will contain only `<app-root>` and the generated scripts.\r\n\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.0.2\r\nNode: 16.16.0\r\nPackage Manager: npm 8.11.0\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@schematics/angular             15.0.2\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24379","RelatedDescription":"Open issue \"ng build always includes html/head tags, even when removed from src/index.html\" (#24379)"},{"Id":"1476382728","IsPullRequest":false,"CreatedAt":"2022-12-05T12:03:32","Actor":"Ketec","Number":"24378","RawContent":null,"Title":"ChunkError (lazy loaded modules) causes files to lose cache-control and remain broken","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen after a new deployment user interacts with the app - navigating to a lazy loaded route, you get a Chunk load error.\r\nThat old chunk is no longer available.\r\nHowever, upon reloading the page, opening a new tab etc - the page remains broken with no errors.\r\n\r\nAfter debugging and comparing - it seems CSS files are generated with old content but with the correct new chunk name and saved to the disk cache.\r\nInspecting the local cache I see that all cache-control and etag information is lost causing them to always be loaded from memory/disk with default expiration time.\r\n\r\nIt requires hard cache clear to force the browser to fetch the correct chunks and keeps working as expected after that (not locally stored). However, this is not a solution for customer-facing sites with many different browsers and users who do not even understand what \"cache\" means.\r\n\r\nThis is exactly what no-cache and output hashing is supposed to prevent. Yet it seems to generate new file with old contents and no cache information.\r\n\r\nThe original files have no-cache, no-store and max-age=0 (cache is globally disabled for all js, CSS, HTML, index.html).\r\n\r\n\r\nHas anyone come across this anomaly? Is webpack/angular somehow renaming the files  - then loads in the chunk contents - and if that fails, it does not rollback or even update cache control?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular 12.2 all browsers\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24378","RelatedDescription":"Closed issue \"ChunkError (lazy loaded modules) causes files to lose cache-control and remain broken\" (#24378)"},{"Id":"1476324365","IsPullRequest":true,"CreatedAt":"2022-12-05T11:21:44","Actor":"alan-agius4","Number":"24377","RawContent":null,"Title":"build: update to rxjs 7","State":"open","Body":"G3 is now using RXJS version 7 which makes it possible for the CLI to also be updated to RXJS 7.\r\n    \r\nNB: this change does not remove all usages of the deprecated APIs.\r\n    \r\nCloses #24371","Url":"https://github.com/angular/angular-cli/pull/24377","RelatedDescription":"Open PR \"build: update to rxjs 7\" (#24377)"},{"Id":"1476292737","IsPullRequest":true,"CreatedAt":"2022-12-05T11:21:04","Actor":"alan-agius4","Number":"24376","RawContent":null,"Title":"build: update to rxjs 7","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/24376","RelatedDescription":"Closed or merged PR \"build: update to rxjs 7\" (#24376)"},{"Id":"1475957715","IsPullRequest":true,"CreatedAt":"2022-12-05T08:05:15","Actor":"angular-robot","Number":"24374","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 5am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24374","RelatedDescription":"Open PR \"build: lock file maintenance\" (#24374)"},{"Id":"1475322626","IsPullRequest":false,"CreatedAt":"2022-12-05T00:02:14","Actor":"prabh-62","Number":"24373","RawContent":null,"Title":"Angular 15: webpack dev server websocket URL should use port number specified in config instead of hardcoding 0","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen serving angular 15 application behind a reverse proxy on different port, webpack dev server fails to live-reload.\r\n\r\nSpecifically, this line of code should use `options.port` rather than hardcoding 0\r\n[[dev-server.ts#L333](https://github.com/angular/angular-cli/blob/main/packages/angular_devkit/build_angular/src/webpack/configs/dev-server.ts#L333)](https://github.com/angular/angular-cli/blob/cf2f30afc0ad0ceae34c457955a22186bc5ce60d/packages/angular_devkit/build_angular/src/webpack/configs/dev-server.ts#L333)\r\nshould become\r\n```ts\r\n    return `${options.sslKey === undefined ? 'ws': 'wss'}://${publicHost || options.host}:${options.port}${webSocketPath}`;\r\n```\n\n### Minimal Reproduction\n\n- Create an angular 15 application\r\n\t- Serve the app : `ng serve --project teddyBear --port 4201`\r\n- Launch a reverse proxy which serves on different host and/or port and just returns the angular 15 app files.\r\n\t- Even though the angular app might serve, live-reload should fail\r\n<img width=\"1158\" alt=\"webpack_ws_fails_no_port\" src=\"https://user-images.githubusercontent.com/13006107/205523498-df467ef0-dce9-480c-be89-f447555d6700.png\">\n\n### Exception or Error\n\n```text\n[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.\r\nWebSocket connection to 'ws://localhost/ng-cli-ws' failed: \r\n[webpack-dev-server] Trying to reconnect...\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.2\r\nNode: 18.12.1\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@angular/cdk                    15.0.1\r\n@schematics/angular             15.0.2\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24373","RelatedDescription":"Open issue \"Angular 15: webpack dev server websocket URL should use port number specified in config instead of hardcoding 0\" (#24373)"},{"Id":"1474471351","IsPullRequest":false,"CreatedAt":"2022-12-04T05:20:44","Actor":"XhmikosR","Number":"24371","RawContent":null,"Title":"Update rxjs to v7.x","State":"open","Body":"### Command\r\n\r\nnew\r\n\r\n### Description\r\n\r\nUpdate rxjs to v7.x\r\n\r\n### Describe the solution you'd like\r\n\r\nrxjs is a quite heavy package at least in terms of the number of files ([v6.x ~3.7K, v7.x ~2.3K](https://packagephobia.com/result?p=rxjs%406.6.7%2Crxjs%407.6.0)). It'd be nice if the `@angular-devkit` packages updated to rxjs v7.x so that it can be deduped by package managers. An example from [keycloak-angular](https://github.com/mauriciovigolo/keycloak-angular):\r\n\r\n```\r\nC:\\Users\\xmr\\Desktop\\keycloak-angular>npm ls rxjs\r\nkeycloak-angular@13.0.0 C:\\Users\\xmr\\Desktop\\keycloak-angular\r\n+-- @angular-devkit/build-angular@15.0.2\r\n| +-- @angular-devkit/architect@0.1500.2\r\n| | `-- rxjs@6.6.7\r\n| +-- @angular-devkit/build-webpack@0.1500.2\r\n| | `-- rxjs@6.6.7\r\n| +-- inquirer@8.2.4\r\n| | `-- rxjs@7.6.0 deduped\r\n| `-- rxjs@6.6.7\r\n+-- @angular-devkit/core@15.0.2\r\n| `-- rxjs@6.6.7\r\n+-- @angular/cli@15.0.2\r\n| `-- @angular-devkit/schematics@15.0.2\r\n|   `-- rxjs@6.6.7\r\n+-- @angular/common@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- @angular/core@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- @angular/router@15.0.2\r\n| `-- rxjs@7.6.0 deduped\r\n+-- concurrently@7.6.0\r\n| `-- rxjs@7.6.0 deduped\r\n+-- ng-packagr@15.0.1\r\n| `-- rxjs@7.6.0 deduped\r\n`-- rxjs@7.6.0\r\n```\r\n\r\nDiff if I remove the duplicate rxjs 6.x packages from `node_modules`:\r\n\r\n```\r\n314 MB (329.442.193 bytes)\r\n50.924 Files, 6.359 Folders\r\n\r\n289 MB (303.781.653 bytes)\r\n32.831 Files, 5.919 Folders\r\n```\r\n\r\nAs you can see, even with fast disks and fast connections, this would significantly reduce the disk churn.\r\n\r\n---\r\n\r\nSorry if there's had been an issue about it already, I searched but I couldn't find an existent issue.\r\n\r\n### Describe alternatives you've considered\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24371","RelatedDescription":"Open issue \"Update rxjs to v7.x\" (#24371)"},{"Id":"1473790541","IsPullRequest":true,"CreatedAt":"2022-12-03T06:04:58","Actor":"angular-robot","Number":"24370","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.45.0` -> `5.45.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/5.45.0/5.45.1) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | patch | [`5.45.0` -> `5.45.1`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/5.45.0/5.45.1) |\n| [aspect_bazel_lib](https://togithub.com/aspect-build/bazel-lib) | http_archive | minor | `v1.17.0` -> `v1.18.0` |\n| [esbuild](https://togithub.com/evanw/esbuild) | optionalDependencies | patch | [`0.15.16` -> `0.15.18`](https://renovatebot.com/diffs/npm/esbuild/0.15.16/0.15.18) |\n| [esbuild](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.15.16` -> `0.15.18`](https://renovatebot.com/diffs/npm/esbuild/0.15.16/0.15.18) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | dependencies | patch | [`0.15.16` -> `0.15.18`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.15.16/0.15.18) |\n| [esbuild-wasm](https://togithub.com/evanw/esbuild) | devDependencies | patch | [`0.15.16` -> `0.15.18`](https://renovatebot.com/diffs/npm/esbuild-wasm/0.15.16/0.15.18) |\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.28.0` -> `8.29.0`](https://renovatebot.com/diffs/npm/eslint/8.28.0/8.29.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | dependencies | minor | [`0.26.7` -> `0.27.0`](https://renovatebot.com/diffs/npm/magic-string/0.26.7/0.27.0) |\n| [magic-string](https://togithub.com/rich-harris/magic-string) | devDependencies | minor | [`0.26.7` -> `0.27.0`](https://renovatebot.com/diffs/npm/magic-string/0.26.7/0.27.0) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | dependencies | patch | [`2.7.1` -> `2.7.2`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/2.7.1/2.7.2) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | devDependencies | patch | [`2.7.1` -> `2.7.2`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/2.7.1/2.7.2) |\n| [rxjs](https://rxjs.dev) ([source](https://togithub.com/reactivex/rxjs)) | dependencies | minor | [`~7.5.0` -> `~7.6.0`](https://renovatebot.com/diffs/npm/rxjs/7.5.7/7.6.0) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`5.16.0` -> `5.16.1`](https://renovatebot.com/diffs/npm/terser/5.16.0/5.16.1) |\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | devDependencies | patch | [`5.16.0` -> `5.16.1`](https://renovatebot.com/diffs/npm/terser/5.16.0/5.16.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v5.45.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#&#8203;5451-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5450v5451-2022-12-05)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.45.0...v5.45.1)\n\n##### Bug Fixes\n\n-   **eslint-plugin:** \\[keyword-spacing] unexpected space before/after in `import type` ([#&#8203;6095](https://togithub.com/typescript-eslint/typescript-eslint/issues/6095)) ([98caa92](https://togithub.com/typescript-eslint/typescript-eslint/commit/98caa92ca89bdf0ca6ba6e4ff1f13c60221579e8))\n-   **eslint-plugin:** \\[no-shadow] add call and method signatures to `ignoreFunctionTypeParameterNameValueShadow` ([#&#8203;6129](https://togithub.com/typescript-eslint/typescript-eslint/issues/6129)) ([9d58b6b](https://togithub.com/typescript-eslint/typescript-eslint/commit/9d58b6be246507d20af67c84a5e9bb592d97cff5))\n-   **eslint-plugin:** \\[prefer-optional-chain] collect MetaProperty type ([#&#8203;6083](https://togithub.com/typescript-eslint/typescript-eslint/issues/6083)) ([d7114d3](https://togithub.com/typescript-eslint/typescript-eslint/commit/d7114d3ab09d1b93627d3b3dbb9862e37ee29c97))\n-   **eslint-plugin:** \\[sort-type-constituents, sort-type-union-intersection-members] handle some required parentheses cases in the fixer ([#&#8203;6118](https://togithub.com/typescript-eslint/typescript-eslint/issues/6118)) ([5d49d5d](https://togithub.com/typescript-eslint/typescript-eslint/commit/5d49d5dbee4425fc8bc01c5e748d161f3619477b))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v5.45.1`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#&#8203;5451-httpsgithubcomtypescript-eslinttypescript-eslintcomparev5450v5451-2022-12-05)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v5.45.0...v5.45.1)\n\n##### Bug Fixes\n\n-   **parser:** remove the jsx option requirement for automatic jsx pragma resolution ([#&#8203;6134](https://togithub.com/typescript-eslint/typescript-eslint/issues/6134)) ([e777f5e](https://togithub.com/typescript-eslint/typescript-eslint/commit/e777f5e225b9ddfb6bb1eaa74cbc5171a17ac017))\n\n</details>\n\n<details>\n<summary>aspect-build/bazel-lib</summary>\n\n### [`v1.18.0`](https://togithub.com/aspect-build/bazel-lib/releases/tag/v1.18.0)\n\n[Compare Source](https://togithub.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0)\n\n#### Using Bzlmod:\n\n1.  Enable with `--experimental_enable_bzlmod` in `.bazelrc`.\n2.  Add to your `MODULE.bazel` file:\n\n```starlark\nbazel_dep(name = \"aspect_bazel_lib\", version = \"1.18.0\")\n```\n\n> Read more about bzlmod: <https://blog.aspect.dev/bzlmod>\n\n#### Using WORKSPACE\n\nPaste this snippet into your  file:\n\n```starlark\nload(\"@&#8203;bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"aspect_bazel_lib\",\n    sha256 = \"be236556c7b9c7b91cb370e837fdcec62b6e8893408cd4465ae883c9d7c67024\",\n    strip_prefix = \"bazel-lib-1.18.0\",\n    url = \"https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.18.0.tar.gz\",\n)\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"aspect_bazel_lib_dependencies\")\n\naspect_bazel_lib_dependencies()\n\n```\n\nOptional toolchains:\n\n```starlark\n\n### Register the following toolchain to use jq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_jq_toolchains\")\n\nregister_jq_toolchains()\n\n### Register the following toolchain to use yq\n\nload(\"@&#8203;aspect_bazel_lib//lib:repositories.bzl\", \"register_yq_toolchains\")\n\nregister_yq_toolchains()\n```\n\n#### What's Changed\n\n-   feat: add executable attribute to write_source_files by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/293](https://togithub.com/aspect-build/bazel-lib/pull/293)\n-   refactor: use rm -R instead -r as it is the primary option and lowercase -r is the alias by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/294](https://togithub.com/aspect-build/bazel-lib/pull/294)\n-   fix: add diff_test to docs by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/296](https://togithub.com/aspect-build/bazel-lib/pull/296)\n-   feat: add write_source_file to public API by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/295](https://togithub.com/aspect-build/bazel-lib/pull/295)\n-   fix: write_source_files should use target platform for additional_update_targets by [@&#8203;gregmagolan](https://togithub.com/gregmagolan) in [https://github.com/aspect-build/bazel-lib/pull/297](https://togithub.com/aspect-build/bazel-lib/pull/297)\n\n**Full Changelog**: https://github.com/aspect-build/bazel-lib/compare/v1.17.0...v1.18.0\n\n</details>\n\n<details>\n<summary>evanw/esbuild</summary>\n\n### [`v0.15.18`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01518)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.15.17...v0.15.18)\n\n-   Performance improvements for both JS and CSS\n\n    This release brings noticeable performance improvements for JS parsing and for CSS parsing and printing. Here's an example benchmark for using esbuild to pretty-print a single large minified CSS file and JS file:\n\n    | Test case      | Previous release | This release       |\n    |----------------|------------------|--------------------|\n    | 4.8mb CSS file | 19ms             | 11ms (1.7x faster) |\n    | 5.8mb JS file  | 36ms             | 32ms (1.1x faster) |\n\n    The performance improvements were very straightforward:\n\n    -   Identifiers were being scanned using a generic character advancement function instead of using custom inline code. Advancing past each character involved UTF-8 decoding as well as updating multiple member variables. This was sped up using loop that skips UTF-8 decoding entirely and that only updates member variables once at the end. This is faster because identifiers are plain ASCII in the vast majority of cases, so Unicode decoding is almost always unnecessary.\n\n    -   CSS identifiers and CSS strings were still being printed one character at a time. Apparently I forgot to move this part of esbuild's CSS infrastructure beyond the proof-of-concept stage. These were both very obvious in the profiler, so I think maybe I have just never profiled esbuild's CSS printing before?\n\n    -   There was unnecessary work being done that was related to source maps when source map output was disabled. I likely haven't observed this before because esbuild's benchmarks always have source maps enabled. This work is now disabled when it's not going to be used.\n\n    I definitely should have caught these performance issues earlier. Better late than never I suppose.\n\n### [`v0.15.17`](https://togithub.com/evanw/esbuild/blob/HEAD/CHANGELOG.md#&#8203;01517)\n\n[Compare Source](https://togithub.com/evanw/esbuild/compare/v0.15.16...v0.15.17)\n\n-   Search for missing source map code on the file system ([#&#8203;2711](https://togithub.com/evanw/esbuild/issues/2711))\n\n    [Source maps](https://sourcemaps.info/spec.html) are JSON files that map from compiled code back to the original code. They provide the original source code using two arrays: `sources` (required) and `sourcesContent` (optional). When bundling is enabled, esbuild is able to bundle code with source maps that was compiled by other tools (e.g. with Webpack) and emit source maps that map all the way back to the original code (e.g. before Webpack compiled it).\n\n    Previously if the input source maps omitted the optional `sourcesContent` array, esbuild would use `null` for the source content in the source map that it generates (since the source content isn't available). However, sometimes the original source code is actually still present on the file system. With this release, esbuild will now try to find the original source code using the path in the `sources` array and will use that instead of `null` if it was found.\n\n-   Fix parsing bug with TypeScript `infer` and `extends` ([#&#8203;2712](https://togithub.com/evanw/esbuild/issues/2712))\n\n    This release fixes a bug where esbuild incorrectly failed to parse valid TypeScript code that nests `extends` inside `infer` inside `extends`, such as in the example below:\n\n    ```ts\n    type A<T> = {};\n    type B = {} extends infer T extends {} ? A<T> : never;\n    ```\n\n    TypeScript code that does this should now be parsed correctly.\n\n-   Use `WebAssembly.instantiateStreaming` if available ([#&#8203;1036](https://togithub.com/evanw/esbuild/pull/1036), [#&#8203;1900](https://togithub.com/evanw/esbuild/pull/1900))\n\n    Currently the WebAssembly version of esbuild uses `fetch` to download `esbuild.wasm` and then `WebAssembly.instantiate` to compile it. There is a newer API called `WebAssembly.instantiateStreaming` that both downloads and compiles at the same time, which can be a performance improvement if both downloading and compiling are slow. With this release, esbuild now attempts to use `WebAssembly.instantiateStreaming` and falls back to the original approach if that fails.\n\n    The implementation for this builds on a PR by [@&#8203;lbwa](https://togithub.com/lbwa).\n\n-   Preserve Webpack comments inside constructor calls ([#&#8203;2439](https://togithub.com/evanw/esbuild/issues/2439))\n\n    This improves the use of esbuild as a faster TypeScript-to-JavaScript frontend for Webpack, which has special [magic comments](https://webpack.js.org/api/module-methods/#magic-comments) inside `new Worker()` expressions that affect Webpack's behavior.\n\n</details>\n\n<details>\n<summary>eslint/eslint</summary>\n\n### [`v8.29.0`](https://togithub.com/eslint/eslint/releases/tag/v8.29.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.28.0...v8.29.0)\n\n#### Features\n\n-   [`49a07c5`](https://togithub.com/eslint/eslint/commit/49a07c52c5af7e98d161ff4acd44bbbe0aa6383b) feat: add `allowParensAfterCommentPattern` option to no-extra-parens ([#&#8203;16561](https://togithub.com/eslint/eslint/issues/16561)) (Nitin Kumar)\n-   [`e6a865d`](https://togithub.com/eslint/eslint/commit/e6a865d70aed9e1c07be712e40c38da1a5dda849) feat: `prefer-named-capture-group` add suggestions ([#&#8203;16544](https://togithub.com/eslint/eslint/issues/16544)) (Josh Goldberg)\n-   [`a91332b`](https://togithub.com/eslint/eslint/commit/a91332b8bd9adfa2aa8110071bdf73f56d400050) feat: In no-invalid-regexp validate flags also for non-literal patterns ([#&#8203;16583](https://togithub.com/eslint/eslint/issues/16583)) (trosos)\n\n#### Documentation\n\n-   [`0311d81`](https://togithub.com/eslint/eslint/commit/0311d81834d675b8ae7cc92a460b37115edc4018) docs: Configuring Plugins page intro, page tweaks, and rename ([#&#8203;16534](https://togithub.com/eslint/eslint/issues/16534)) (Ben Perlmutter)\n-   [`57089b1`](https://togithub.com/eslint/eslint/commit/57089b1ede624452bc94404b6e60d01d48cfd468) docs: add a property assignment example for camelcase rule ([#&#8203;16605](https://togithub.com/eslint/eslint/issues/16605)) (Milos Djermanovic)\n-   [`b6ab030`](https://togithub.com/eslint/eslint/commit/b6ab030897d2e8b314b33a6502346a4ac45bb8da) docs: add docs codeowners ([#&#8203;16601](https://togithub.com/eslint/eslint/issues/16601)) (Strek)\n-   [`6380c87`](https://togithub.com/eslint/eslint/commit/6380c87c563be5dc78ce0ddd5c7409aaf71692bb) docs: fix sitemap and feed ([#&#8203;16592](https://togithub.com/eslint/eslint/issues/16592)) (Milos Djermanovic)\n-   [`ade621d`](https://togithub.com/eslint/eslint/commit/ade621dd12fcd3b65644bb3468248cc040db756c) docs: perf debounce the search query ([#&#8203;16586](https://togithub.com/eslint/eslint/issues/16586)) (Shanmughapriyan S)\n-   [`fbcf3ab`](https://togithub.com/eslint/eslint/commit/fbcf3abd54dd20aec3c695cacece56493633c97f) docs: fix searchbar clear button ([#&#8203;16585](https://togithub.com/eslint/eslint/issues/16585)) (Shanmughapriyan S)\n-   [`f894035`](https://togithub.com/eslint/eslint/commit/f89403553b31d24f4fc841424cc7dcb8c3ef689f) docs: HTTPS link to yeoman.io ([#&#8203;16582](https://togithub.com/eslint/eslint/issues/16582)) (Christian Oliff)\n-   [`de12b26`](https://togithub.com/eslint/eslint/commit/de12b266f2aa6f063d0af888b8f0de41d09ec33f) docs: Update configuration file pages ([#&#8203;16509](https://togithub.com/eslint/eslint/issues/16509)) (Ben Perlmutter)\n-   [`1ae9f20`](https://togithub.com/eslint/eslint/commit/1ae9f2067442434c6ccc6b41703624b302d17c67) docs: update correct code examples for `no-extra-parens` rule ([#&#8203;16560](https://togithub.com/eslint/eslint/issues/16560)) (Nitin Kumar)\n\n#### Chores\n\n-   [`7628403`](https://togithub.com/eslint/eslint/commit/7628403a57d9d9b4e2cb2b36309170900f58832e) chore: add discord channel link ([#&#8203;16590](https://togithub.com/eslint/eslint/issues/16590)) (Amaresh  S M)\n-   [`f5808cb`](https://togithub.com/eslint/eslint/commit/f5808cb51529174a67b4938223f06435ad6d5118) chore: fix rule doc headers check ([#&#8203;16564](https://togithub.com/eslint/eslint/issues/16564)) (Milos Djermanovic)\n\n</details>\n\n<details>\n<summary>rich-harris/magic-string</summary>\n\n### [`v0.27.0`](https://togithub.com/rich-harris/magic-string/blob/HEAD/CHANGELOG.md#&#8203;0270-httpsgithubcomrich-harrismagic-stringcomparev0267v0270-2022-12-03)\n\n[Compare Source](https://togithub.com/rich-harris/magic-string/compare/v0.26.7...v0.27.0)\n\n##### Performance Improvements\n\n-   use [@&#8203;jridgewell/sourcemap-codec](https://togithub.com/jridgewell/sourcemap-codec) ([e68f3e0](https://togithub.com/rich-harris/magic-string/commit/e68f3e05fe6d87acc1c41eddae97fc32e004320b))\n\n#### [0.26.7](https://togithub.com/rich-harris/magic-string/compare/v0.26.6...v0.26.7) (2022-10-09)\n\n##### Bug Fixes\n\n-   avoid mutating provided options ([#&#8203;227](https://togithub.com/rich-harris/magic-string/issues/227)) ([01d033e](https://togithub.com/rich-harris/magic-string/commit/01d033e6e8630ef1d0482d9a3899f1da2bf933d5))\n\n#### [0.26.6](https://togithub.com/rich-harris/magic-string/compare/v0.26.5...v0.26.6) (2022-10-05)\n\n##### Features\n\n-   add `update` method as safer alternative to `overwrite` ([#&#8203;212](https://togithub.com/rich-harris/magic-string/issues/212)) ([9a312e3](https://togithub.com/rich-harris/magic-string/commit/9a312e37a02629f7496c6cfcf307832e991669a3))\n\n#### [0.26.5](https://togithub.com/rich-harris/magic-string/compare/v0.26.4...v0.26.5) (2022-09-30)\n\n##### Bug Fixes\n\n-   update typescript definition file to contain `replaceAll()` ([#&#8203;224](https://togithub.com/rich-harris/magic-string/issues/224)) ([45a4921](https://togithub.com/rich-harris/magic-string/commit/45a49214ba244b906f4d20450debc8edcc06e2a8))\n\n#### [0.26.4](https://togithub.com/rich-harris/magic-string/compare/v0.26.3...v0.26.4) (2022-09-22)\n\n##### Features\n\n-   fix `.replace()` when searching string, add `.replaceAll()` ([#&#8203;222](https://togithub.com/rich-harris/magic-string/issues/222)) ([04a05bd](https://togithub.com/rich-harris/magic-string/commit/04a05bdc9bf56e00e616a0ae07923fbd9b63fbd0))\n\n##### Performance Improvements\n\n-   avoiding use of Object.defineProperty in Chunk constructor ([#&#8203;219](https://togithub.com/rich-harris/magic-string/issues/219)) ([130794b](https://togithub.com/rich-harris/magic-string/commit/130794bb8bfd9f21eb1f50c36a1da8eb5443d256))\n\n#### [0.26.3](https://togithub.com/rich-harris/magic-string/compare/v0.26.2...v0.26.3) (2022-08-30)\n\n##### Performance Improvements\n\n-   delay guess encoded ([#&#8203;216](https://togithub.com/rich-harris/magic-string/issues/216)) ([69b13c7](https://togithub.com/rich-harris/magic-string/commit/69b13c7a09af742e4f31cf419e8f96e6db32ab5a))\n\n#### [0.26.2](https://togithub.com/rich-harris/magic-string/compare/v0.26.1...v0.26.2) (2022-05-11)\n\n##### Bug Fixes\n\n-   specify types in exports ([#&#8203;214](https://togithub.com/rich-harris/magic-string/issues/214)) ([985e7b4](https://togithub.com/rich-harris/magic-string/commit/985e7b4d8a6fd5911d2ad2e6524999e9198a6b9f))\n\n#### [0.26.1](https://togithub.com/rich-harris/magic-string/compare/v0.26.0...v0.26.1) (2022-03-03)\n\n##### Bug Fixes\n\n-   **replace:** match replacer function signature with spec ([902541f](https://togithub.com/rich-harris/magic-string/commit/902541fdff3998e3c957908de10769d2af1a3c70))\n\n</details>\n\n<details>\n<summary>webpack-contrib/mini-css-extract-plugin</summary>\n\n### [`v2.7.2`](https://togithub.com/webpack-contrib/mini-css-extract-plugin/blob/HEAD/CHANGELOG.md#&#8203;272-httpsgithubcomwebpack-contribmini-css-extract-plugincomparev271v272-2022-12-06)\n\n[Compare Source](https://togithub.com/webpack-contrib/mini-css-extract-plugin/compare/v2.7.1...v2.7.2)\n\n</details>\n\n<details>\n<summary>reactivex/rxjs</summary>\n\n### [`v7.6.0`](https://togithub.com/reactivex/rxjs/blob/HEAD/CHANGELOG.md#&#8203;760-httpsgithubcomreactivexrxjscompare757760-2022-12-03)\n\n[Compare Source](https://togithub.com/reactivex/rxjs/compare/7.5.7...7.6.0)\n\n##### Bug Fixes\n\n-   **schedulers:** no longer cause TypeScript build failures when Node types aren't included ([c1a07b7](https://togithub.com/reactivex/rxjs/commit/c1a07b71ac050ab36b371ff7f18dc9a924fffc9f))\n-   **types:** Improved subscribe and tap type overloads ([#&#8203;6718](https://togithub.com/reactivex/rxjs/issues/6718)) ([af1a9f4](https://togithub.com/reactivex/rxjs/commit/af1a9f446a860883abaa36ace21345dc923e7e53)), closes [#&#8203;6717](https://togithub.com/reactivex/rxjs/issues/6717)\n\n##### Features\n\n-   **onErrorResumeNextWith:** renamed `onErrorResumeNext` and exported from the top level. (`onErrorResumeNext` operator is stil available, but deprecated) ([#&#8203;6755](https://togithub.com/reactivex/rxjs/issues/6755)) ([51e3b2c](https://togithub.com/reactivex/rxjs/commit/51e3b2c8ec28b5d30bca4c63ad69ce6942c2cdcc))\n\n#### [7.5.7](https://togithub.com/reactivex/rxjs/compare/7.5.6...7.5.7) (2022-09-25)\n\n##### Bug Fixes\n\n-   **schedulers:** improve performance of animationFrameScheduler and asapScheduler ([#&#8203;7059](https://togithub.com/reactivex/rxjs/issues/7059)) ([c93aa60](https://togithub.com/reactivex/rxjs/commit/c93aa60e9f073297d959fa1fff9323e48872d47e)), closes [#&#8203;7017](https://togithub.com/reactivex/rxjs/issues/7017), related to [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018) and [#&#8203;6674](https://togithub.com/reactivex/rxjs/issues/6674)\n\n##### Performance Improvements\n\n-   **animationFrames:** uses fewer Subscription instances ([#&#8203;7060](https://togithub.com/reactivex/rxjs/issues/7060)) ([2d57b38](https://togithub.com/reactivex/rxjs/commit/2d57b38ec9f7ada838ee130ab75cd795b156c182)), closes [#&#8203;7018](https://togithub.com/reactivex/rxjs/issues/7018)\n\n#### [7.5.6](https://togithub.com/reactivex/rxjs/compare/7.5.5...7.5.6) (2022-07-11)\n\n##### Bug Fixes\n\n-   **share:** No longer results in a bad-state observable in an edge case where a synchronous source was shared and refCounted, and the result is subscribed to twice in a row synchronously. ([#&#8203;7005](https://togithub.com/reactivex/rxjs/issues/7005)) ([5d4c1d9](https://togithub.com/reactivex/rxjs/commit/5d4c1d9a37b1347217223adb0d9e166fd85f67a9))\n-   **share & connect:** `share` and `connect` no longer bundle scheduling code by default ([#&#8203;6873](https://togithub.com/reactivex/rxjs/issues/6873)) ([9948dc2](https://togithub.com/reactivex/rxjs/commit/9948dc2f5577eaa4013de234f3552508918518c7)), closes [#&#8203;6872](https://togithub.com/reactivex/rxjs/issues/6872)\n-   **exhaustAll:** Result will now complete properly when flattening all synchronous observables. ([#&#8203;6911](https://togithub.com/reactivex/rxjs/issues/6911)) ([3c1c6b8](https://togithub.com/reactivex/rxjs/commit/3c1c6b8303028eebc7af31cfc5e5bad42a5b2da4)), closes [#&#8203;6910](https://togithub.com/reactivex/rxjs/issues/6910)\n-   **TypeScript:** Now compatible with TypeScript 4.6 type checks ([#&#8203;6895](https://togithub.com/reactivex/rxjs/issues/6895)) ([fce9aa1](https://togithub.com/reactivex/rxjs/commit/fce9aa12931796892673581761bba1f7ceafabff))\n\n#### [7.5.5](https://togithub.com/reactivex/rxjs/compare/7.5.4...7.5.5) (2022-03-08)\n\n##### Bug Fixes\n\n-   **package:** add types to exports ([#&#8203;6802](https://togithub.com/reactivex/rxjs/issues/6802)) ([3750f75](https://togithub.com/reactivex/rxjs/commit/3750f75104bb82d870c53c0605c942e41245d79c))\n-   **package:** add `require` export condition ([#&#8203;6821](https://togithub.com/reactivex/rxjs/issues/6821)) ([c8955e4](https://togithub.com/reactivex/rxjs/commit/c8955e4c6a972135030fdfddc18a7a48337ae9c7))\n-   **timeout:** no longer will timeout when receiving the first value synchronously ([#&#8203;6865](https://togithub.com/reactivex/rxjs/issues/6865)) ([2330c96](https://togithub.com/reactivex/rxjs/commit/2330c9660b20f2e0cda0c4eeb36bb582b4a85186)), closes [#&#8203;6862](https://togithub.com/reactivex/rxjs/issues/6862)\n\n##### Performance Improvements\n\n-   Don't clone observers unless you have to ([#&#8203;6842](https://togithub.com/reactivex/rxjs/issues/6842)) ([3289d20](https://togithub.com/reactivex/rxjs/commit/3289d20ddc3a84d2aede8e3ab9962a8ef5d43c83))\n\n#### [7.5.4](https://togithub.com/reactivex/rxjs/compare/7.5.3...7.5.4) (2022-02-09)\n\n##### Performance Improvements\n\n-   removed code that would `bind` functions passed with observers to `subscribe`. ([#&#8203;6815](https://togithub.com/reactivex/rxjs/issues/6815)) ([fb375a0](https://togithub.com/reactivex/rxjs/commit/fb375a0c5befd6852cd63d3c310448e42fa9580e)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.3](https://togithub.com/reactivex/rxjs/compare/7.5.2...7.5.3) (2022-02-08)\n\n##### Bug Fixes\n\n-   **subscribe:** allow interop with Monio and other libraries that patch function bind ([0ab91eb](https://togithub.com/reactivex/rxjs/commit/0ab91eb4c1da914efbf03a2732629914cd3398dc)), closes [#&#8203;6783](https://togithub.com/reactivex/rxjs/issues/6783)\n\n#### [7.5.2](https://togithub.com/reactivex/rxjs/compare/7.5.1...7.5.2) (2022-01-11)\n\n##### Bug Fixes\n\n-   operators that ignore input values now use `unknown` rather than `any`, which should resolve issues with eslint no-unsafe-argument ([#&#8203;6738](https://togithub.com/reactivex/rxjs/issues/6738)) ([67cb317](https://togithub.com/reactivex/rxjs/commit/67cb317a7a6b9fdbd3d2e8fdbc2ac9ac7e57179c)), closes [#&#8203;6536](https://togithub.com/reactivex/rxjs/issues/6536)\n-   **ajax:** crossDomain flag deprecated and properly reported to consumers ([#&#8203;6710](https://togithub.com/reactivex/rxjs/issues/6710)) ([7fd0575](https://togithub.com/reactivex/rxjs/commit/7fd05756c595dddb288b732b00a90fcfb2a9080a)), closes [#&#8203;6663](https://togithub.com/reactivex/rxjs/issues/6663)\n\n#### [7.5.1](https://togithub.com/reactivex/rxjs/compare/7.5.0...7.5.1) (2021-12-28)\n\n##### Bug Fixes\n\n-   export supporting interfaces from top-level `rxjs` site. ([#&#8203;6733](https://togithub.com/reactivex/rxjs/issues/6733)) ([299a1e1](https://togithub.com/reactivex/rxjs/commit/299a1e16f725edfc2e333c430e3a7dfc75dd94e7))\n\n</details>\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v5.16.1`](https://togithub.com/terser/terser/blob/HEAD/CHANGELOG.md#v5161)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v5.16.0...v5.16.1)\n\n-   Properly handle references in destructurings (`const { [reference]: val } = ...`)\n-   Allow parsing of `.#privatefield` in nested classes\n-   Do not evaluate operations that return large strings if that would make the output code larger\n-   Make `collapse_vars` handle block scope correctly\n-   Internal improvements: Typos ([#&#8203;1311](https://togithub.com/terser/terser/issues/1311)), more tests, small-scale refactoring\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24370","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#24370)"},{"Id":"1473352845","IsPullRequest":false,"CreatedAt":"2022-12-02T19:40:01","Actor":"abf7d","Number":"24369","RawContent":null,"Title":"Publish React component / web component from an Angular library","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am looking to publish a react component and web component from an angular library. \r\n\r\nI followed a few tutorials that step you through creating a react component inside an angular library. For example you install `react` and `react-dom` into the workspace, you add `\"jsx\": \"react-jsx\"` to your tsconfig, you wrap your react component in a web component, you import your web component into your project app, you add CUSTOM_ELEMENTS_SCHEMA to the app.module.ts, and you use the webcomponent markup inside of the template of the component of your choosing. (I also added the line `\"include\": [\"./src/**/*.ts\", \"./src/**/*.js\", \"./src/**/*.tsx\", \"./src/**/*.jsx\"],` to the tsconfig.)\r\n\r\nI am now trying to set up building the library. I added an index.ts file to the library as the entry point and export my web component from it:\r\n```\r\nexport * as any from './lib/my-web-component.jsx';\r\n```\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nI'm getting non-descriptive errors when I build that say\r\n\r\n✖ Generating FESM2020\r\nCould not resolve \"./lib/my-web-component.jsx\" from \"dist/my-lib/esm2020/index.mjs\"\r\n```\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.0.2\r\nNode: 18.12.1\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@schematics/angular             15.0.2\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24369","RelatedDescription":"Closed issue \"Publish React component / web component from an Angular library\" (#24369)"},{"Id":"1472047954","IsPullRequest":true,"CreatedAt":"2022-12-02T18:39:13","Actor":"clydin","Number":"24363","RawContent":null,"Title":"fix(@angular-devkit/build-angular): downlevel class fields with Safari <= v15 for esbuild","State":"closed","Body":"To provide a workaround for a Safari bug involving class fields and variable scoping,\r\nthe esbuild-based browser application builder will now downlevel class fields if Safari\r\n(desktop or iOS) v15.x or earlier is within the target browsers for an application.\r\nThis is an esbuild variant of the fix for the Webpack-based builder. For more details\r\nregarding the issue, please see: https://github.com/angular/angular-cli/pull/24357","Url":"https://github.com/angular/angular-cli/pull/24363","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): downlevel class fields with Safari <= v15 for esbuild\" (#24363)"},{"Id":"1472726947","IsPullRequest":true,"CreatedAt":"2022-12-02T11:35:05","Actor":"angular-robot","Number":"24368","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `e014849` -> `8d6af88` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `700b1eb` -> `d94cd02` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `e9e267d` -> `9ddbd18` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `066d2f3` -> `46f8c12` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `7ab7ff7` -> `7cc0335` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `e751581` -> `53e47e8` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a8a0d4c` -> `3f9054b` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `ad5bcaf` -> `4af8639` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `7f8f844` -> `ce28b9c` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `60e625c` -> `3dcb7f9` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `062631f` -> `b6691fd` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `8ca9614` -> `2bcdbfe` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0fd48ee` -> `a2a71f7` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `825881d` -> `8de5ba6` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `fd7b2b1` -> `58eae32` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `20eabc2` -> `839eb08` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `01ec378` -> `b0c3e36` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `25b3619` -> `6741638` |\n| angular/dev-infra | action | digest | `3bc9344` -> `c3339f5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24368","RelatedDescription":"Open PR \"build: update angular\" (#24368)"},{"Id":"1476053436","IsPullRequest":false,"CreatedAt":"2022-12-02T10:28:29","Actor":"cskiwi","Number":"24375","RawContent":null,"Title":"bug(cdk): Builds fail with cdk@15.0.1 due to parse5 library error","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15.0.0\r\n\r\n### Description\r\n\r\nWhen updating to the latest version: 15.0.1 of cdk, the builds start to fail,\r\n\r\nWas introduced in update: https://github.com/angular/components/pull/26086\r\n\r\n```\r\n./node_modules/parse5-htmlparser2-tree-adapter/lib/index.js:3:16-52 - Error: Module not found: Error: Package path ./lib/common/doctype is not exported from package <project>\\node_modules\\parse5 (see exports field in <project>\\node_modules\\parse5\\package.json)\r\n\r\n./node_modules/parse5-htmlparser2-tree-adapter/lib/index.js:6:4-37 - Error: Module not found: Error: Package path ./lib/common/html is not exported from package <project>\\node_modules\\parse5 (see exports field in <project>\\node_modules\\parse5\\package.json)\r\n\r\n./node_modules/critters/dist/critters.mjs:38:2-14 - Error: export 'default' (imported as 'parse5') was not found in 'parse5' (possible exports: ErrorCodes, Parser, Token, Tokenizer, TokenizerMode, defaultTreeAdapter, foreignContent, html, parse, parseFragment, serialize, serializeOuter)\r\n\r\n./node_modules/critters/dist/critters.mjs:55:9-25 - Error: export 'default' (imported as 'parse5') was not found in 'parse5' (possible exports: ErrorCodes, Parser, Token, Tokenizer, TokenizerMode, defaultTreeAdapter, foreignContent, html, parse, parseFragment, serialize, serializeOuter)\r\n```\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. update to the latest version of cdk\r\n2. Build\r\n\r\n\r\n### Expected Behavior\r\n\r\nThat the build would work\r\n\r\n### Actual Behavior\r\n\r\nBuild is crashing\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): x\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/angular-cli/issues/24375","RelatedDescription":"Open issue \"bug(cdk): Builds fail with cdk@15.0.1 due to parse5 library error\" (#24375)"},{"Id":"1472362758","IsPullRequest":true,"CreatedAt":"2022-12-02T10:22:46","Actor":"angular-robot","Number":"24364","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `29a40cb` -> `e014849` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `7250998` -> `e9e267d` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `cb06ba9` -> `066d2f3` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `e82af85` -> `7ab7ff7` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `90835b7` -> `e751581` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `004dcae` -> `a8a0d4c` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `d1ce91d` -> `ad5bcaf` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `627f482` -> `7f8f844` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `918ffd6` -> `60e625c` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `c6cd110` -> `062631f` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `a7fce23` -> `8ca9614` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `82d5991` -> `825881d` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `2209d5e` -> `fd7b2b1` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `6e06a85` -> `20eabc2` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `92d5133` -> `01ec378` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `05a07d9` -> `25b3619` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24364","RelatedDescription":"Closed or merged PR \"build: update angular\" (#24364)"},{"Id":"1472549409","IsPullRequest":true,"CreatedAt":"2022-12-02T10:20:35","Actor":"d3lm","Number":"24367","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): convert `transformedContent` into a function","State":"closed","Body":"This PR converts `transformedContent` into a function to give more control when the readable stream is initialized. There might be issues with late \"subscribers\" where events are added after the readable stream was initialized and the data was already pushed, e.g.\r\n\r\n```ts\r\nconst { rewriter } = await htmlRewritingStream('<div />');\r\n\r\nsetTimeout(() => {\r\n  rewriter.on('startTag', (tag) => {\r\n    console.log(tag);\r\n  });\r\n})\r\n```\r\n\r\nThis will not work and potentially wait indefinitely. I have ran into such issue with WebContainer on stackblitz.com.\r\n\r\nWith this change the stream now needs to be explicitily initialized:\r\n\r\n```ts\r\nconst { rewriter, transformedContent } = await htmlRewritingStream('<div />');\r\n\r\nsetTimeout(() => {\r\n  rewriter.on('startTag', (tag) => {\r\n    console.log(tag);\r\n  });\r\n  \r\n  // calling this function will create the readable stream\r\n  transformedContent();\r\n})\r\n```\r\n\r\nThis will work as expected.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular-cli/pull/24367","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): convert `transformedContent` into a function\" (#24367)"},{"Id":"1471068171","IsPullRequest":true,"CreatedAt":"2022-12-02T09:05:29","Actor":"devversion","Number":"24357","RawContent":null,"Title":"fix(@angular-devkit/build-angular): downlevel class properties when targeting Safari <=v15","State":"closed","Body":"The Angular compiler is dependent on static fields being attached to\r\nuser-defined classes. e.g. `static ecmp = defineComponent`.\r\n\r\nThese static fields sometimes rely on variables from outside of the\r\nclass. e.g. the Angular compiler generates constants for content\r\nprojection that are then accessed in the static field initializer.\r\n\r\nSurprisingly such access to these variables may break in Safari <=v15\r\nwhen a page is loaded without devtools open. The bug (already solved in\r\nv16 of Safari)- is very subtle, hard to re-reproduce but basically\r\nvariable scope tracking is broken. This bug is triggered by additional\r\nparenthesis in the initializer expression. See:\r\nhttps://bugs.webkit.org/show_bug.cgi?id=236843.\r\n\r\nThe TypeScript compiler may generate such additional parenthesis when\r\nit tries to adjust the `this` context when invoking methods, such as for\r\ndefining animations in the `ecmp` definition.\r\n\r\nMore details can be found here:\r\nhttps://github.com/angular/angular-cli/issues/24355#issuecomment-1333477033\r\n\r\nTo ensure Angular applications are not subject to this bug when\r\ntargeting Safari <=v15. v15 Safari, both for iOS and Mac is still part of\r\nthe default CLI browserslist with `last 2 Safari majors` (at time of\r\nwriting).\r\n\r\nNote that it is important that the Babel plugin properly handles the\r\ndownleveling of static block-defined members. TypeScript will transform\r\nstatic fields, like `static ecmp` into `static { this.ecmp = X }` when\r\n`useDefineForClassFields = false` (which is the case for CLI apps). The\r\nclass properties plugin from Babel seems to handle this in an acceptable\r\nway. Unlike actual static fields, Babel will not use helpers like\r\n`defineProperty` for such extracted static blocks though. e.g.\r\n\r\nSee repro: https://gist.github.com/devversion/dec0dea26e348c509921bf62079b60be\r\n\r\n```js\r\nclass Test {\r\n  x = true;\r\n\r\n  static b = true;\r\n  static {\r\n    this.a = true;\r\n  }\r\n}\r\n\r\n// into\r\n\r\nclass X {\r\n  constructor() {\r\n    _defineProperty(this, \"x\", true);\r\n  }\r\n}\r\n_defineProperty(X, \"b\", true);\r\nX.a = true;\r\n```\r\n\r\nnote that in practice TypeScript with `useDefineForClassFields = false`\r\nwill put non-static members into the constructor as normal assignments\r\nregardless- so there would be no change by the Babel plugin.\r\n\r\nFixes #24355 ","Url":"https://github.com/angular/angular-cli/pull/24357","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): downlevel class properties when targeting Safari <=v15\" (#24357)"},{"Id":"1471443706","IsPullRequest":true,"CreatedAt":"2022-12-02T09:04:51","Actor":"cexbrayat","Number":"24358","RawContent":null,"Title":"fix(@schematics/angular): add missing import for functional interceptor spec","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nAn import is missing in the interceptor spec\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24358","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): add missing import for functional interceptor spec\" (#24358)"},{"Id":"1471450059","IsPullRequest":true,"CreatedAt":"2022-12-02T09:04:22","Actor":"cexbrayat","Number":"24359","RawContent":null,"Title":"fix(@schematics/angular): add missing semicolon in functional guard/resolver/interceptor","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe new functional entities are constants, and there is no semicolon at the end of their declaration\r\n\r\n## What is the new behavior?\r\n\r\nMaybe that was a deliberate choice, but we usually have semicolons in the generated code from the CLI\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/24359","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): add missing semicolon in functional guard/resolver/interceptor\" (#24359)"},{"Id":"1472413322","IsPullRequest":true,"CreatedAt":"2022-12-02T09:04:04","Actor":"angular-robot","Number":"24366","RawContent":null,"Title":"build: update dependency npm-package-arg to v10.1.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | dependencies | minor | [`10.0.0` -> `10.1.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.0.0/10.1.0) |\n| [npm-package-arg](https://togithub.com/npm/npm-package-arg) | devDependencies | minor | [`10.0.0` -> `10.1.0`](https://renovatebot.com/diffs/npm/npm-package-arg/10.0.0/10.1.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>npm/npm-package-arg</summary>\n\n### [`v10.1.0`](https://togithub.com/npm/npm-package-arg/blob/HEAD/CHANGELOG.md#&#8203;1010-httpsgithubcomnpmnpm-package-argcomparev1000v1010-2022-12-01)\n\n[Compare Source](https://togithub.com/npm/npm-package-arg/compare/v10.0.0...v10.1.0)\n\n##### Features\n\n-   [`f2c243c`](https://togithub.com/npm/npm-package-arg/commit/f2c243c140a397d3054fe1ec84a091d237bbd6e9) [#&#8203;122](https://togithub.com/npm/npm-package-arg/pull/122) add function to return pacakge purl ([@&#8203;bdehamer](https://togithub.com/bdehamer), [@&#8203;ljharb](https://togithub.com/ljharb))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24366","RelatedDescription":"Closed or merged PR \"build: update dependency npm-package-arg to v10.1.0\" (#24366)"},{"Id":"1472362817","IsPullRequest":true,"CreatedAt":"2022-12-02T09:01:15","Actor":"angular-robot","Number":"24365","RawContent":null,"Title":"build: update github/codeql-action action to v2.1.35","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.1.34` -> `v2.1.35` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.1.35`](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.1.34...v2.1.35)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/24365","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.1.35\" (#24365)"},{"Id":"1471858750","IsPullRequest":false,"CreatedAt":"2022-12-01T20:29:41","Actor":"dgp1130","Number":"24361","RawContent":null,"Title":"Schematics progress reporting","State":"closed","Body":"### Command\r\n\r\ngenerate\r\n\r\n### Description\r\n\r\nFrom http://b/188066584.\r\n\r\nFor long running schematics, it can sometimes be unclear if the schematic is stalled or just taking a long time. A loading spinner might be useful to communicate current status.\r\n\r\n### Describe the solution you'd like\r\n\r\nMore comprehensive progress reporting would be very cool. I doubt we could do a proper progress bar, but even just a spinner which updates every frame would at least validate that the program is stalled in an infinite loop.\r\n\r\n### Describe alternatives you've considered\r\n\r\nI think schematics could implement this themselves via the logger to a certain extent, but it might get a bit tricky. Not sure if a loading spinner is feasible at all.","Url":"https://github.com/angular/angular-cli/issues/24361","RelatedDescription":"Closed issue \"Schematics progress reporting\" (#24361)"},{"Id":"1471900695","IsPullRequest":false,"CreatedAt":"2022-12-01T20:12:57","Actor":"dgp1130","Number":"24362","RawContent":null,"Title":"Schematics: Edit files in different places of monorepo","State":"open","Body":"### Command\n\ngenerate\n\n### Description\n\nFrom http://b/120993063.\r\n\r\nIn large monorepos (such as google3), it is often common to want to edit files in multiple directories from a schematic. Java paths in particular run into this in google3, where users might want to generate `foo/bar/baz.ts`, `java/com/corp/foo/bar/baz.java`, and `javatests/com/corp/foo/bar/baz.java`.\r\n\r\nSchematics currently restricts users to the current directory, so this use case doesn't work intuitively.\n\n### Describe the solution you'd like\n\nI'm not sure about the proper solution to this problem. I do agree with the current behavior that schematics _should_ be scoped to a particular directory and prevent accesses outside of that, both for security and usability reasons. That said, I think this monorepo issue is a very real problem, so it would be nice to have some kind of support for it.\r\n\r\nSome strawman ideas for a solution:\r\n* Let schematics \"`cd`\" into a different directory and use that as the root. So even if it's run in `foo/bar/`, it could use `../../` as its root and access the whole monorepo.\r\n* Let schematics declare the root directory in their schema relative to the project root: `{ \"root\": \"../../\" }`.\r\n* Prompt users to give access to directories outside the default one in a permissions model. This is probably the safest but also the most annoying to use.\n\n### Describe alternatives you've considered\n\nBest alternative is to run the schematic in the monorepo root, but this can be awkward for users who `cd` in to their particular project directory.\r\n\r\nI think you can also edit external files via a `Task`, but then you're throwing away a lot of the ergonomics of schematics, so that's not a great escape hatch. I guess you could schedule a `Task` which reruns the schematic in a different directory?","Url":"https://github.com/angular/angular-cli/issues/24362","RelatedDescription":"Open issue \"Schematics: Edit files in different places of monorepo\" (#24362)"},{"Id":"1471849659","IsPullRequest":false,"CreatedAt":"2022-12-01T19:40:34","Actor":"dgp1130","Number":"24360","RawContent":null,"Title":"[Schematics CLI] Numeric strings in schematics options","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nFrom http://b/196605664.\r\n\r\nApparently you can't pass in a numeric value into a string argument in schematics. This appears to be interpreted as number and leads to a validation error.\n\n### Minimal Reproduction\n\n```\r\n$ schematics run test --stringValue \"1234\"\r\nSchematic input does not validate against the Schema: {\"stringValue\":1234}\r\nErrors:\r\n\r\n  Data path \".stringValue\" should be string.\r\n```\r\n\r\nMinimist seems to interpret \"1234\" as a number instead of a string, and schematics treats that as a type mismatch.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nSee http://b/196605664.\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24360","RelatedDescription":"Open issue \"[Schematics CLI] Numeric strings in schematics options\" (#24360)"},{"Id":"1471063172","IsPullRequest":false,"CreatedAt":"2022-12-01T17:40:01","Actor":"masterworgen","Number":"24356","RawContent":null,"Title":"Angular 15 - esbuild not building","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI tried build my angular 15 application with esbuild, but i get error`s\r\n\r\n```▲ [WARNING] Calling \"dayjs\" will crash at run-time because it's an import namespace object, not a function [call-import-namespace]\r\n\r\n    src/app/static/utils/dateTimeUtils.ts:9:20:\r\n      9 │   const localDate = dayjs(utcDate).local().format(format);\r\n        ╵                     ~~~~~\r\n\r\n  Consider changing \"dayjs\" to a default import instead:\r\n\r\n    src/app/static/utils/dateTimeUtils.ts:2:7:\r\n      2 │ import * as dayjs from 'dayjs';\r\n        │        ~~~~~~~~~~\r\n        ╵        dayjs\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/mixins';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\form-controls\\abstract\\form-input-base\\form-input-base.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"src/app/shared/components/form-controls/abstract/form-input-base/form-input-base.component\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workplace-wrapper-side-section\\workplace-instruments\\components\\workplace-instruments-modal\\workplace-instruments-modal.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"src/assets/styles/variables\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workstation-wrapper-order-section\\components\\workstation-pipes-counter\\workstation-pipes-counter.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"src/assets/styles/mixins\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workstation-wrapper-order-section\\workstation-wrapper-order-section.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"src/assets/styles/variables\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\panel\\panel.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/variables';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workplace-wrapper-side-section\\workplace-wrapper-side-section.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/mixins';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\package-info\\package-info.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"/src/assets/styles/mixins\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\pages\\workplaces-main\\pages\\sleeve\\components\\screw-up-arm\\screw-up-arm.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/mixins';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\package-info\\package-modal\\package-modal.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/variables';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workplace-wrapper-side-section\\workplace-wrapper-side-section.component.scss 1:9               @import\r\n  src\\app\\shared\\components\\workplace-wrapper\\components\\workplace-wrapper-side-section\\workplace-instruments\\workplace-instruments.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import \"src/assets/styles/variables\";\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\api\\components\\nav-menu\\nav-menu.component.scss 1:9  root stylesheet\r\n\r\n\r\nX [ERROR] [plugin angular-sass] Can't find stylesheet to import.\r\n  ╷\r\n1 │ @import 'src/assets/styles/mixins';\r\n  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  ╵\r\n  src\\app\\pages\\workplaces-main\\pages\\sleeve\\components\\screw-up-arm\\components\\screw-up-info\\screw-up-info.component.scss 1:9  root stylesheet\r\n\r\n```\r\n\r\n### Minimal Reproduction\r\n\r\nng build\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1500.2\r\n@angular-devkit/build-angular   15.0.2\r\n@angular-devkit/core            15.0.2\r\n@angular-devkit/schematics      15.0.2\r\n@schematics/angular             15.0.2\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24356","RelatedDescription":"Closed issue \"Angular 15 - esbuild not building\" (#24356)"},{"Id":"1470048615","IsPullRequest":true,"CreatedAt":"2022-12-01T10:18:48","Actor":"clydin","Number":"24353","RawContent":null,"Title":"fix(@angular-devkit/build-angular): prevent optimization adding unsupported ECMASCript features","State":"closed","Body":"When optimization is enabled with the `@angular-devkit/build-angular:browser` builder, terser is used as a second phase optimizer. The terser configuration previously set its `ecma` option to `es2020` due to all officially supported browsers supporting the version. However, it is possible to add browsers to the browserslist configuration that are not officially supported that still may work but do not support es2020 syntax features. By setting the terser `ecma` option to `es2015`, terser will not turn existing syntax into newer syntax features that might be unsupported. Terser will also not downlevel any code based on this option.\r\n\r\nFixes #24347","Url":"https://github.com/angular/angular-cli/pull/24353","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): prevent optimization adding unsupported ECMASCript features\" (#24353)"},{"Id":"1470786764","IsPullRequest":false,"CreatedAt":"2022-12-01T00:46:26","Actor":"mattbodman","Number":"24354","RawContent":null,"Title":"Live reload does not reflect all code changes","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nSeveral of us working on the same project are encountering an issue where `ng serve` will reload on code changes as expected but not always reflect _all_ code changes.  The app will typically crash on a \"missing\" code block because it cannot find said block.  However, the block DOES exist, but may have just been added amongst other changes.  The workaround is to modify the block again (by adding a comment or console.log), forcing a fresh reload.  Invariably, this will rectify the issue.\r\nWe upgraded from v11 to v14 a few months ago and it is believed the issue has been introduced since then.  At that time, however, we started restructuring the app by using modules and lazy loading, in case that's relevant somehow.\r\nI have been using Angular for many years and have not encountered this issue before.\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nThe error in the screenshot below was produced by adding a new method to this demo repo [https://github.com/mattbodman/reload-issue](https://github.com/mattbodman/reload-issue)\r\n\r\n<img width=\"1167\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1994501/205180260-9144948a-bb5d-4954-a161-5bdd576ded75.png\">\r\n\r\nWhilst the screenshot shows the project successfully compiling after the error, our project frequently does not.  For some reason, the changes made to certain files (often the same files) are overlooked.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nThe browser dev console will typically throw an error like:\r\n\r\n`error TS2551: Property 'XYZ' does not exist on type 'MyService'. Did you mean 'XYZZ'?`\r\n\r\n...even when the property absolutely DOES exist.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 14.2.9                                        \r\nNode: 16.17.1                                              \r\nPackage Manager: npm 8.19.2                                \r\nOS: win32 x64                                              \r\n                                                           \r\nAngular: 14.2.10                                           \r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic   \r\n... platform-server, router                                \r\n                                                           \r\nPackage                         Version                    \r\n---------------------------------------------------------  \r\n@angular-devkit/architect       0.1402.9                   \r\n@angular-devkit/build-angular   14.2.9                     \r\n@angular-devkit/core            14.2.9                     \r\n@angular-devkit/schematics      14.2.9                     \r\n@angular/cdk                    14.2.7                     \r\n@angular/cli                    14.2.9                     \r\n@angular/language-service       14.2.2                     \r\n@schematics/angular             14.2.9                     \r\nrxjs                            7.5.7                      \r\ntypescript                      4.6.4                      \r\nwebpack                         5.75.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24354","RelatedDescription":"Open issue \"Live reload does not reflect all code changes\" (#24354)"},{"Id":"1469847733","IsPullRequest":false,"CreatedAt":"2022-11-30T15:45:15","Actor":"feodorar","Number":"24352","RawContent":null,"Title":"v15 \"ng generate application\" command in existing angular 15 appliction generates test.ts that is invalid","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv14\n\n### Description\n\nAngular v15 eliminates the need for a test.ts file. When doing the migration from 14 to 15, certain code blocks were removed from the test.ts files but the files are still there. Everything was working fine.\r\nThen I wanted to add a new app to my monorepo with \"ng generate application new-app\" and it created a test.ts file that contained the code blocks that were eliminated during the migration from all other test.ts files. \r\nWhen running \"ng test new-app\" I get errors because of that.\r\n\r\nHere you can see which code blocks I'm talking about:\r\n![grafik](https://user-images.githubusercontent.com/60470513/204842272-03a3551a-26b7-444f-8674-725b263d0f58.png)\r\n\r\nAnd here is the stack trace from \"ng test new-app\":\r\n\r\n`Chrome Headless 107.0.5304.121 (Mac OS 10.15.7) ERROR\r\n  An error was thrown in afterAll\r\n  Uncaught TypeError: __webpack_require__(...).context is not a function\r\n  TypeError: __webpack_require__(...).context is not a function\r\n      at Object.377 (http://localhost:9876/_karma_webpack_/webpack:/projects/new-app/src/test.ts:24:25)\r\n      at __webpack_require__ (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:19:1)\r\n      at __webpack_exec__ (http://localhost:9876/_karma_webpack_/main.js:12012:48)\r\n      at http://localhost:9876/_karma_webpack_/main.js:12013:54\r\n      at Function.__webpack_require__.O (http://localhost:9876/_karma_webpack_/webpack:/webpack/runtime/chunk loaded:23:1)\r\n      at http://localhost:9876/_karma_webpack_/main.js:12014:56\r\n      at webpackJsonpCallback (http://localhost:9876/_karma_webpack_/webpack:/webpack/runtime/jsonp chunk loading:34:1)\r\n      at http://localhost:9876/_karma_webpack_/main.js:1:65\r\nChrome Headless 107.0.5304.121 (Mac OS 10.15.7): Executed 0 of 0 ERROR (0 secs / 0 secs)\r\nChrome Headless 107.0.5304.121 (Mac OS 10.15.7) ERROR\r\n  An error was thrown in afterAll\r\n  Uncaught TypeError: __webpack_require__(...).context is not a function\r\n  TypeError: __webpack_require__(...).context is not a function\r\n      at Object.377 (http://localhost:9876/_karma_webpack_/webpack:/projects/new-app/src/test.ts:24:25)\r\n      at __webpack_require__ (http://localhost:9876/_karma_webpack_/webpack:/webpack/bootstrap:19:1)\r\n      at __webpack_exec__ (http://localhost:9876/_karma_webpack_/main.js:12012:48)\r\n      at http://localhost:9876/_karma_webpack_/main.js:12013:54\r\n      at Function.__webpack_require__.O (http://localhost:9876/_karma_webpack_/webpack:/webpack/runtime/chunk loaded:23:1)\r\n      at http://localhost:9876/_karma_webpack_/main.js:12014:56\r\n      at webpackJsonpCallback (http://localhost:9876/_karma_webpack_/webpack:/webpack/runtime/jsonp chunk loading:34:1)\r\nChrome Headless 107.0.5304.121 (Mac OS 10.15.7): Executed 0 of 0 ERROR (0.006 secs / 0 secs)`\n\n### Minimal Reproduction\n\non a angular v14 repo with multi-project setup, run:\r\nng update @angular/core@15 @angular/cli@15\r\n\r\nthen run \"ng generate application new-app\"\r\n\r\nthen run \"ng test new-app\"\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 15.0.1\r\nNode: 16.13.0\r\nPackage Manager: npm 8.19.3\r\nOS: darwin x64\r\n\r\nAngular: 15.0.1\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1402.10\r\n@angular-devkit/build-angular   15.0.1\r\n@angular-devkit/core            14.2.10\r\n@angular-devkit/schematics      14.2.10\r\n@angular/cdk                    15.0.0\r\n@angular/material               15.0.0\r\n@schematics/angular             14.2.10\r\nng-packagr                      15.0.1\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24352","RelatedDescription":"Open issue \"v15 \"ng generate application\" command in existing angular 15 appliction generates test.ts that is invalid\" (#24352)"},{"Id":"1469790080","IsPullRequest":false,"CreatedAt":"2022-11-30T15:21:30","Actor":"fantasy0v0","Number":"24351","RawContent":null,"Title":"FetchError: Invalid response body while trying to fetch https://repo.huaweicloud.com/repository/npm/@angular%2fcli","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nexec ng update\r\n\r\n### Minimal Reproduction\r\n\r\nng update\r\n\r\n### Exception or Error\r\n```text\r\nng update\r\nUsing package manager: pnpm\r\nCollecting installed dependencies...\r\nFound 32 dependencies.\r\n× Migration failed: Invalid response body while trying to fetch https://repo.huaweicloud.com/repository/npm/karma: 70610000:error:0A000119:SSL routines:ssl3_get_record:decryption failed or bad record mac:c:\\ws\\deps\\openssl\\openssl\\ssl\\record\\ssl3_record.c:614:\r\n\r\n  See \"C:\\Users\\fan\\AppData\\Local\\Temp\\ng-CdXZga\\angular-errors.log\" for further details.\r\n```\r\n\r\n```text\r\n[error] FetchError: Invalid response body while trying to fetch https://repo.huaweicloud.com/repository/npm/@angular%2fcli: F0270000:error:0A000119:SSL routines:ssl3_get_record:decryption failed or bad record mac:c:\\ws\\deps\\openssl\\openssl\\ssl\\record\\ssl3_record.c:614:\r\n\r\n    at C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\minipass-fetch@3.0.0\\node_modules\\minipass-fetch\\lib\\body.js:170:15\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async Response.json (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\minipass-fetch@3.0.0\\node_modules\\minipass-fetch\\lib\\body.js:75:17)\r\n    at async RegistryFetcher.packument (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\pacote@15.0.6\\node_modules\\pacote\\lib\\registry.js:92:25)\r\n    at async RegistryFetcher.manifest (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\pacote@15.0.6\\node_modules\\pacote\\lib\\registry.js:116:23)\r\n    at async fetchPackageManifest (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\@angular+cli@15.0.1\\node_modules\\@angular\\cli\\src\\utilities\\package-metadata.js:219:22)\r\n    at async UpdateCommandModule.checkCLIVersion (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\@angular+cli@15.0.1\\node_modules\\@angular\\cli\\src\\commands\\update\\cli.js:671:29)\r\n    at async UpdateCommandModule.run (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\@angular+cli@15.0.1\\node_modules\\@angular\\cli\\src\\commands\\update\\cli.js:154:41)\r\n    at async UpdateCommandModule.handler (C:\\Users\\fan\\AppData\\Local\\pnpm\\global\\5\\.pnpm\\@angular+cli@15.0.1\\node_modules\\@angular\\cli\\src\\command-builder\\command-module.js:115:24)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nYour global Angular CLI version (15.0.1) is greater than your local version (14.0.0). The local Angular CLI version is used.\r\n\r\nTo disable this warning use \"ng config -g cli.warnings.versionMismatch false\".\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 14.0.0\r\nNode: 18.12.1 (Unsupported)\r\nPackage Manager: pnpm 7.17.1\r\nOS: win32 x64\r\n\r\nAngular: 14.0.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.1500.1\r\n@angular-devkit/build-angular     14.0.0\r\n@angular-devkit/core              15.0.1\r\n@angular-devkit/schematics        15.0.1\r\n@angular/material-luxon-adapter   14.0.1\r\n@schematics/angular               15.0.1\r\nrxjs                              6.6.7\r\ntypescript                        4.7.3\r\n\r\nWarning: The current version of Node (18.12.1) is not supported by Angular.\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/24351","RelatedDescription":"Closed issue \"FetchError: Invalid response body while trying to fetch https://repo.huaweicloud.com/repository/npm/@angular%2fcli\" (#24351)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1472082599","IsPullRequest":true,"CreatedAt":"2022-12-06T00:27:58","Actor":"amysorto","Number":"26157","RawContent":null,"Title":"fix(material/dialog): change width to not cut off form field in component example","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26157","RelatedDescription":"Closed or merged PR \"fix(material/dialog): change width to not cut off form field in component example\" (#26157)"},{"Id":"1477446025","IsPullRequest":false,"CreatedAt":"2022-12-05T21:10:29","Actor":"Hinnom","Number":"26185","RawContent":null,"Title":"bug(mat-form-field): label not shown when appearance=\"fill\" with styles generated on density: -2","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nmat-label is not showing on a mat-form-field when styles are generated with density: -2\n\n### Reproduction\n\nSteps to reproduce:\r\n1. https://stackblitz.com/edit/angular-fxdho2?file=src/theme.scss\r\n2. mat-label is not visible\r\n3. change theme density to -1 and mat-label becomes visible\r\n\n\n### Expected Behavior\n\nmat-label should be visible on density: -2 generated styles\n\n### Actual Behavior\n\nmat-label is not visible :)\n\n### Environment\n\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.1\r\n- Browser(s): google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26185","RelatedDescription":"Open issue \"bug(mat-form-field): label not shown when appearance=\"fill\" with styles generated on density: -2\" (#26185)"},{"Id":"1474579752","IsPullRequest":true,"CreatedAt":"2022-12-05T17:30:47","Actor":"crisbeto","Number":"26174","RawContent":null,"Title":"fix(cdk/listbox): set initial focus to selected option","State":"closed","Body":"Fixes that the listbox was setting the initial focus on a deselected option when a selected one was available.\r\n\r\n**Note:** this fix is a bit more convoluted than it needs to be. E.g. ideally we would just focus the selected option when the listbox receives focus. We can't do that, because the listbox supports two different focus management modes: focus and `aria-activedescendant`. The former doesn't allow tabbing to the listbox.\r\n\r\nFixes #25833.","Url":"https://github.com/angular/components/pull/26174","RelatedDescription":"Closed or merged PR \"fix(cdk/listbox): set initial focus to selected option\" (#26174)"},{"Id":"1477049139","IsPullRequest":false,"CreatedAt":"2022-12-05T17:26:46","Actor":"anschm","Number":"26184","RawContent":null,"Title":"bug(TYPOGRAPHY): mat-typography css class only working after mat.typography-hierarchy($theme)","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.1.3\n\n### Description\n\nThe css class .mat-typography on the body html tag does only work if the following line of code was executed at the theming:\r\n\r\n$theme: mat.define-light-theme((\r\n  color: (\r\n....\r\n  ),\r\n  typography: mat.define-typography-config()\r\n));\r\n\r\n@include mat.all-component-themes($theme);\r\n@include mat.typography-hierarchy($theme);\r\n\r\nIn angular 14 the typography was generated by default and provided by the css class mat-typography to the content. This is described at the documation for angular material 15 at the same way. But the typography style is not provided to the contant. All <p> tag have font family Times. After doing mat.typography-hierarchy($theme) all works. I dont know whether this is new and the documentation should changed or it is a bug.\n\n### Reproduction\n\n1.) Create a angular project with angular material\r\n2.) Create a custom theme\r\n3.) Add mat-typography ass css class to the body tag\n\n### Expected Behavior\n\nAll elements have the same font familiy\n\n### Actual Behavior\n\nDifferent font-families on different elements.\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MAC M1\r\n","Url":"https://github.com/angular/components/issues/26184","RelatedDescription":"Open issue \"bug(TYPOGRAPHY): mat-typography css class only working after mat.typography-hierarchy($theme)\" (#26184)"},{"Id":"1474956119","IsPullRequest":false,"CreatedAt":"2022-12-05T16:21:27","Actor":"aeslinger0","Number":"26176","RawContent":null,"Title":"bug(material/button): Components with absolutely positioned touch targets (like mat-button) can cause scrollbar to appear.","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nBefore v15. I was using 14.2.2.\n\n### Description\n\nSome components have \"touch targets\" that are positioned absolutely and extend past the borders of the component itself. When one of these components is near the edge of a scrollable container, it can cause the scrollbar to appear when it shouldn't. The work-around is easy enough - just add padding, but besides throwing off your design, it can be difficult and frustrating trying to figure out why the scrollbar is appearing.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a scrollable div\r\n2. Place a button at the bottom or right side of the div without it extending past the scrollable area.\r\n3. Notice a scrollbar appears anyway because an element with the class `mat-mdc-button-touch-target` is absolutely positioned and extends past the borders of the button.\r\n\n\n### Expected Behavior\n\nThe scrollbar should not appear. The touch target should not extend past the edges of the button or should be clipped to stay within scrollable area.\n\n### Actual Behavior\n\nA scrollbar appears because an absolutely positioned element is overlapping the scrollable element's border.\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26176","RelatedDescription":"Closed issue \"bug(material/button): Components with absolutely positioned touch targets (like mat-button) can cause scrollbar to appear.\" (#26176)"},{"Id":"1476607086","IsPullRequest":false,"CreatedAt":"2022-12-05T13:46:40","Actor":"GregoireLgt","Number":"26183","RawContent":null,"Title":"feat(tabs): [ACCESSIBILITY] possibility to add a descriptive title=\"\" attribute or a mat-tooltip to mat-tab-header-pagination buttons","State":"open","Body":"### Feature Description\n\n ### For accessibility purposes,\r\n\r\nWhen the viewport is not large enough to display the whole mat-tab-group or mat-tab-navbar, it would be nice to have the possibility to add a descriptive title=\"\" attribute or a descriptive mat-tooltip to the mat-tab-header-pagination buttons so the user is aware what are these buttons for\r\n\r\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/26183","RelatedDescription":"Open issue \"feat(tabs): [ACCESSIBILITY] possibility to add a descriptive title=\"\" attribute or a mat-tooltip to mat-tab-header-pagination buttons\" (#26183)"},{"Id":"1476527084","IsPullRequest":false,"CreatedAt":"2022-12-05T13:06:00","Actor":"GregoireLgt","Number":"26182","RawContent":null,"Title":"feat(tabs): [ACCESSIBILITY] possibility to have mat-tab-button instead of mat-tab-link","State":"open","Body":"### Feature Description\r\n\r\n### For accessibility purposes,\r\n\r\nIs it possible to have the mat-tab-button directive instead of mat-tab-link  when using the Tabs component in general? The mat-tab-link directive adds role=\"tab\" to the link (a tag) in which you put this directive but according to the W3C, it is not recommended to have an a tag with role=\"tab\" attribute as you can see here :\r\n\r\nhttps://www.w3.org/TR/wai-aria-practices-1.1/examples/tabs/tabs-2/tabs.html\r\n\r\nrole=\"tab\" requires a button\r\n\r\nTo sum up,\r\n\r\nAdd the possibility to have button mat-tab-button instead of a mat-tab-link\r\n\r\nThanks a lot\r\n\r\n### Use Case\r\n\r\nThere are two corresponding use cases:\r\n\r\n- When you want to use mat-tab-group to switch between views within a single route in your application\r\n- When you want to use nav mat-tab-nav-bar for navigating between routes in your application\r\n","Url":"https://github.com/angular/components/issues/26182","RelatedDescription":"Open issue \"feat(tabs): [ACCESSIBILITY] possibility to have mat-tab-button instead of mat-tab-link\" (#26182)"},{"Id":"1476514309","IsPullRequest":false,"CreatedAt":"2022-12-05T12:59:46","Actor":"RafaelMartinsRibeiro","Number":"26181","RawContent":null,"Title":"help(Angular Material): Problem changing a default variable","State":"open","Body":"### What are you trying to do?\r\n\r\nI'm trying to change the default value of these variables:\r\n\r\n```\r\n$overlay-container-z-index,\r\n$overlay-z-index,\r\n$overlay-backdrop-z-index,\r\n```\r\n\r\n\r\n\r\n### What troubleshooting steps have you tried?\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/102157214/205641182-b0e3cfa9-d6de-416b-9098-c9c179af6001.png)\r\n![image](https://user-images.githubusercontent.com/102157214/205641287-af1fc2d4-1a75-43de-8cf8-da07781dcd51.png)\r\n\r\n\r\nBut it is saying that the variable is not declared with !default\r\n![image](https://user-images.githubusercontent.com/102157214/205641741-7767a36e-dc6f-43f3-9920-591d3cedc7fd.png)\r\n\r\n### Environment\r\n\r\n- Angular: \"@angular/core\": \"~12.2.6\"\r\n- CDK/Material: \"@angular/cdk\": \"~12.2.6\", \"@angular/material\": \"^12.2.6\"\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/26181","RelatedDescription":"Open issue \"help(Angular Material): Problem changing a default variable\" (#26181)"},{"Id":"1475277419","IsPullRequest":false,"CreatedAt":"2022-12-05T09:38:38","Actor":"michaelfaith","Number":"26178","RawContent":null,"Title":"bug(mdc-migration): Snackbar migration doesn't migrate 'mat-simple-snackbar-action' class","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAfter running the MDC Migration, I noticed the `mat-simple-snackbar-action` class wasn't migrated to the new mdc class.  I believe it should be `mat-mdc-snack-bar-action`.  I confirmed it doesn't appear to be in the map used in the schematic config: https://github.com/angular/components/blob/2629047ace5a17714a17f1c358296c9dd1f73e63/src/material/schematics/ng-generate/mdc-migration/rules/components/snack-bar/snack-bar-styles.ts#L36\r\n\r\nNot sure if that class just isn't considered official public API or not.  We're using it to override the action button color, and noticed it didn't get migrated.\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1.  Run Snackbar migration on app with overrides to `.mat-simple-snackbar-action`\r\n\r\n\r\n### Expected Behavior\r\n\r\nMigrate to `.mat-mdc-snack-bar-action`\r\n\r\n### Actual Behavior\r\n\r\nLeft the class alone\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.0\r\n- CDK/Material: 15.0.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26178","RelatedDescription":"Closed issue \"bug(mdc-migration): Snackbar migration doesn't migrate 'mat-simple-snackbar-action' class\" (#26178)"},{"Id":"1476031222","IsPullRequest":true,"CreatedAt":"2022-12-05T09:38:37","Actor":"crisbeto","Number":"26180","RawContent":null,"Title":"fix(material/schematics): some snack bar styles not being migrated","State":"closed","Body":"Fixes that a couple of styles weren't added to the migration mapping.\r\n\r\nFixes #26178.","Url":"https://github.com/angular/components/pull/26180","RelatedDescription":"Closed or merged PR \"fix(material/schematics): some snack bar styles not being migrated\" (#26180)"},{"Id":"1472128481","IsPullRequest":false,"CreatedAt":"2022-12-05T09:02:11","Actor":"TLKG","Number":"26159","RawContent":null,"Title":"ERROR ReferenceError: google is not defined","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nInstalled packages and dependencies:\r\n```\r\nnpm install @angular/google-maps@14.2\r\nnpm install @types/google.maps\r\n\r\n```\r\nIn .ts file\r\n```\r\nimport { GoogleMap, MapGeocoder } from '@angular/google-maps';\r\n\r\nvar g = new google.maps.Geocoder();  // <-- causing error.\r\n\r\n```\r\nDEBUG CONSOLE:\r\n```\r\nat executeInitAndCheckHooks (c:\\project\\node_modules\\@angular\\core\\fesm2015\\core.mjs:2411:9)\r\nat refreshView (c:\\project\\node_modules\\@angular\\core\\fesm2015\\core.mjs:12013:21)\r\nat refreshEmbeddedViews (c:\\project\\node_modules\\@angular\\core\\fesm2015\\core.mjs:13026:17)\r\nat refreshView (c:\\project\\node_modules\\@angular\\core\\fesm2015\\core.mjs:12022:9)\r\nat refreshComponent (c:\\project\\node_modules\\@angular\\core\\fesm2015\\core.mjs:13072:13)\r\n```\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nno error\r\n\r\n### Actual Behavior\r\n\r\nReferenceError: google is not defined\r\n\r\n### Environment\r\n\r\n- Angular: 14.2\r\n- CDK/Material: 13.2\r\n- Browser(s): Chrome Version 107.0.5304.108 (Official Build) (64-bit)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n- VSC Version: 1.73.1 (user setup)\r\n- Date: 2022-11-09T04:27:29.066Z\r\n- Electron: 19.0.17\r\n- Chromium: 102.0.5005.167\r\n- Node.js: 16.14.2\r\n- V8: 10.2.154.15-electron.0\r\n- OS: Windows_NT x64 10.0.19044\r\n\r\n","Url":"https://github.com/angular/components/issues/26159","RelatedDescription":"Closed issue \"ERROR ReferenceError: google is not defined\" (#26159)"},{"Id":"1473837214","IsPullRequest":true,"CreatedAt":"2022-12-05T08:16:11","Actor":"crisbeto","Number":"26171","RawContent":null,"Title":"fix(material/chips): set correct cursor on interactive chips","State":"closed","Body":"We were always setting the `mdc-evolution-chip__action--presentational` class on the primary chip action to avoid some very specific `:hover` styles from MDC, but the side effect was the correct cursor wasn't being applied to the action anymore.\r\n\r\nWith the new token-based API we don't generate the `:hover` styles at all so we can re-add the class and fix the cursor.\r\n\r\nFixes #26050.","Url":"https://github.com/angular/components/pull/26171","RelatedDescription":"Closed or merged PR \"fix(material/chips): set correct cursor on interactive chips\" (#26171)"},{"Id":"1473007859","IsPullRequest":true,"CreatedAt":"2022-12-05T08:14:23","Actor":"crisbeto","Number":"26165","RawContent":null,"Title":"fix(material/list): remove previously removed API","State":"closed","Body":"In #21974 the `MatSelectionChange.option` property was removed, but we accidentally re-added it during the MDC switch. These changes re-remove the property.\r\n\r\nFixes #26005.","Url":"https://github.com/angular/components/pull/26165","RelatedDescription":"Closed or merged PR \"fix(material/list): remove previously removed API\" (#26165)"},{"Id":"1475367154","IsPullRequest":false,"CreatedAt":"2022-12-05T01:12:51","Actor":"BenGrn","Number":"26179","RawContent":null,"Title":"bug(material/button): mdc unelevated button not getting custom theme color","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nWhen creating custom themes flat buttons revert to default font color instead of using theme contrast colors.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Create a new Angular project with Material\r\n2. Apply custom theme\r\n\r\nhttps://stackblitz.com/edit/angular-jixnhd\n\n### Expected Behavior\n\n![image](https://user-images.githubusercontent.com/55842503/205528155-9d9a2fd2-99bf-484c-92da-1f0414b00ebc.png)\r\n\n\n### Actual Behavior\n\n![image](https://user-images.githubusercontent.com/55842503/205528188-a7ea1156-775c-431b-926d-8ce261fb3b70.png)\r\n\n\n### Environment\n\n- Angular: 15.0.2\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/26179","RelatedDescription":"Open issue \"bug(material/button): mdc unelevated button not getting custom theme color\" (#26179)"},{"Id":"1475225710","IsPullRequest":false,"CreatedAt":"2022-12-04T21:56:38","Actor":"Siddhu-K","Number":"26177","RawContent":null,"Title":"bug(material/chip): Text wrap does not work in the mdc chip input.","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nMaterial 14\n\n### Description\n\nthe new mdc chip input does not have text wrap.\r\nthe text overflows out of the chip and the mat-form-field and I am not able to remove the chip. \r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1.  chip input with inputted text longer than the width of the field\r\n\n\n### Expected Behavior\n\nText wraps to the next line or the chip has text-overflow: ellipsis so that it can be removed.\r\n\r\nScreenshot from Material v14\r\n\r\n![v14](https://user-images.githubusercontent.com/62542841/205517171-80e426fe-46ea-4918-a510-d2c31e7c16a5.png)\n\n### Actual Behavior\n\ntext overflows out of the chip and the mat form field. chip cannot be removed.\r\n\r\nScreenshot from Material v15\r\n\r\n![v15](https://user-images.githubusercontent.com/62542841/205517173-a1aab3f1-b3f0-4b79-b705-ea749b478074.png)\n\n### Environment\n\nAngular CLI: 15.0.2\r\nNode: 16.18.0\r\nPackage Manager: npm 8.19.2\r\nOS: win32 x64\r\n\r\nAngular: 15.0.2\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1500.2\r\n@angular-devkit/build-angular      15.0.2\r\n@angular-devkit/core               15.0.2\r\n@angular-devkit/schematics         15.0.2\r\n@angular/cdk                       15.0.1\r\n@angular/material                  15.0.1\r\n@angular/material-moment-adapter   15.0.1\r\n@schematics/angular                15.0.2\r\nrxjs                               7.6.0\r\ntypescript                         4.8.4","Url":"https://github.com/angular/components/issues/26177","RelatedDescription":"Open issue \"bug(material/chip): Text wrap does not work in the mdc chip input.\" (#26177)"},{"Id":"1474955540","IsPullRequest":false,"CreatedAt":"2022-12-04T16:14:45","Actor":"RobinKamps","Number":"26175","RawContent":null,"Title":"bug(form field/ input / select / textarea / autocomplete): hover and cursor not implementing material design spec","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ncursors are wrong - e.g. must be cursor: text on the whole fields - not just the input.\r\nhover highlight is also wrong - in v15 hover on the subscript/hint/error is highlighting the field, but it should not.\r\n\r\n![cursor-hover1](https://user-images.githubusercontent.com/27373333/205502094-e77b2f51-501f-48de-bdd8-a4e9cb913852.gif)\r\n\r\n![cursor-hover2](https://user-images.githubusercontent.com/27373333/205502104-73a6faee-bc9e-467c-9b74-c4a99f806c3e.gif)\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. e.g. https://material.angular.io/components/input/overview and hover over the edges/underneath the field\r\n2. compare to https://m2.material.io/components/text-fields\r\n\n\n### Expected Behavior\n\ncursors and hover should match material design specs\n\n### Actual Behavior\n\nnot matching the material design spec\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n\r\n","Url":"https://github.com/angular/components/issues/26175","RelatedDescription":"Open issue \"bug(form field/ input / select / textarea / autocomplete): hover and cursor not implementing material design spec\" (#26175)"},{"Id":"1473527560","IsPullRequest":true,"CreatedAt":"2022-12-04T02:49:06","Actor":"mmalerba","Number":"26170","RawContent":null,"Title":"doc(material/button): improve button docs & examples","State":"closed","Body":"- Remove stale README that describes the component as experimental\r\n- Add docs describing the extended fab variant\r\n- Add aria-labels to button examples that don't have text\r\n- Remove \"basic\" color fabs from example, since fab doesn't support an un-colored style (It probably should as its shown in the spec, but that's outside the scope of this docs fix).\r\n- Add extended fab row to example\r\n\r\nFixes #19058","Url":"https://github.com/angular/components/pull/26170","RelatedDescription":"Closed or merged PR \"doc(material/button): improve button docs & examples\" (#26170)"},{"Id":"1474300656","IsPullRequest":true,"CreatedAt":"2022-12-04T00:48:50","Actor":"angular-robot","Number":"26173","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `ab51064` -> `d94cd02` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `a98206c` -> `a2a71f7` |\n| angular/dev-infra | action | digest | `2bc96bc` -> `c3339f5` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/components/pull/26173","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#26173)"},{"Id":"1474239996","IsPullRequest":false,"CreatedAt":"2022-12-03T21:22:10","Actor":"milofin77","Number":"26172","RawContent":null,"Title":"bug(mat-slider): drag, blur values on FireFox in Material v15","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nWhen you move the slider and release the click, the value is different of the last dragged value. \r\nWhen you blur by clicking outside, the value is now another one. \r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Go on the official Material exemple : https://material.angular.io/components/slider/examples\r\n2. Use first exemple\r\n3. Drag to 10, realease the click, you got 14, click outside the slider, you got 11.\n\n### Expected Behavior\n\nSame slider as other browsers\n\n### Actual Behavior\n\nNot same slider as other browsers\n\n### Environment\n\n- Angular: 15.0.1\r\n- CDK/Material: 15.0.1\r\n- Browser(s): FireFox 107\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/26172","RelatedDescription":"Open issue \"bug(mat-slider): drag, blur values on FireFox in Material v15\" (#26172)"},{"Id":"1471931757","IsPullRequest":true,"CreatedAt":"2022-12-02T19:11:16","Actor":"wagnermaciel","Number":"26155","RawContent":null,"Title":"test(material/checkbox): add disabled harness filter","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26155","RelatedDescription":"Closed or merged PR \"test(material/checkbox): add disabled harness filter\" (#26155)"},{"Id":"1473277770","IsPullRequest":true,"CreatedAt":"2022-12-02T18:25:03","Actor":"wagnermaciel","Number":"26169","RawContent":null,"Title":"fix(material/schematics): fix card tmpl migration","State":"open","Body":"fixes https://github.com/angular/components/issues/26038","Url":"https://github.com/angular/components/pull/26169","RelatedDescription":"Open PR \"fix(material/schematics): fix card tmpl migration\" (#26169)"},{"Id":"1473208919","IsPullRequest":true,"CreatedAt":"2022-12-02T17:53:25","Actor":"angular-robot","Number":"26168","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `700b1eb` -> `ab51064` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `0fd48ee` -> `a98206c` |\n| angular/dev-infra | action | digest | `3bc9344` -> `2bc96bc` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNC4xLjAiLCJ1cGRhdGVkSW5WZXIiOiIzNC4xLjAifQ==-->\n","Url":"https://github.com/angular/components/pull/26168","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#26168)"},{"Id":"1473194892","IsPullRequest":true,"CreatedAt":"2022-12-02T17:22:41","Actor":"devversion","Number":"26167","RawContent":null,"Title":"build: test preview","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/26167","RelatedDescription":"Closed or merged PR \"build: test preview\" (#26167)"},{"Id":"1472121085","IsPullRequest":true,"CreatedAt":"2022-12-02T17:14:15","Actor":"amysorto","Number":"26158","RawContent":null,"Title":"fix(material/schematics): update flat button styles class name mapping","State":"closed","Body":"Fixes #26114","Url":"https://github.com/angular/components/pull/26158","RelatedDescription":"Closed or merged PR \"fix(material/schematics): update flat button styles class name mapping\" (#26158)"},{"Id":"1473099536","IsPullRequest":true,"CreatedAt":"2022-12-02T16:17:38","Actor":"fiste788","Number":"26166","RawContent":null,"Title":"fix(material/toolbar): use \"mat-mdc\" prefix in form-field-overrides mixin","State":"closed","Body":"use \"mat-mdc\" prefix in form-field-overrides mixin","Url":"https://github.com/angular/components/pull/26166","RelatedDescription":"Closed or merged PR \"fix(material/toolbar): use \"mat-mdc\" prefix in form-field-overrides mixin\" (#26166)"},{"Id":"1472874877","IsPullRequest":false,"CreatedAt":"2022-12-02T13:32:30","Actor":"mrmokwa","Number":"26164","RawContent":null,"Title":"bug(material/list): Whitespace before the content in list in v15","State":"open","Body":"### Is this a regression?\r\n\r\nYes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv14\r\n\r\n### Description\r\n\r\nIn your html template, if you break line, a blank space will render inside the content of your list item line.\r\n\r\n### Actual Behavior\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303458-e4693251-797f-4c7b-aeb0-e6c675b2786a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303511-8a558b08-ebec-4812-b5f4-c9e030ab7856.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303792-0cd975b4-57b9-434c-9a69-b19e4491c60b.png)\r\n\r\n---------\r\n\r\n#### This Works, but my prettier configuration doesn't allow it\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303609-bf6fadec-8f7b-4546-9670-21f8778e8b24.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303647-5b755fb1-2e80-4d13-a3f7-0a4cc2f953ef.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205303718-76db51d2-af20-4bda-a03a-74ad84c3f90c.png)\r\n\r\n### Environment\r\n\r\n- Angular: v15\r\n- CDK/Material: v15\r\n- Browser(s): Chrome\r\n","Url":"https://github.com/angular/components/issues/26164","RelatedDescription":"Open issue \"bug(material/list): Whitespace before the content in list in v15\" (#26164)"},{"Id":"1472775606","IsPullRequest":false,"CreatedAt":"2022-12-02T13:01:13","Actor":"malua","Number":"26163","RawContent":null,"Title":"bug(material/datepicker): LuxonDataAdapter setLocale not honored","State":"closed","Body":"### Description\r\n\r\nUsing setLocale of the LuxonDateAdapater does not change the date format in the date picker.\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\nThe default locale en-US set with MAT_DATE_LOCALE should be overridden by calling setLocale in the app.module constructor. But this has no effect.\r\nThen there is a button in app.component.ts which also changes the locale with no effect.\r\n\r\nhttps://stackblitz.com/edit/node-eykr1v?file=src%2Fapp%2Fapp.module.ts\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe date format should change from MM/DD/YYYY to DD/MM/YYYY.\r\n\r\n### Actual Behavior\r\n\r\nThe date format should change when calling setLocale on the LuxonDataAdapter.\r\n\r\n### Environment\r\n\r\n- Angular: 14\r\n- CDK/Material: 14\r\n","Url":"https://github.com/angular/components/issues/26163","RelatedDescription":"Closed issue \"bug(material/datepicker): LuxonDataAdapter setLocale not honored\" (#26163)"},{"Id":"1472770123","IsPullRequest":false,"CreatedAt":"2022-12-02T12:11:50","Actor":"mrmokwa","Number":"26162","RawContent":null,"Title":"bug(material/table): matNoDataRow styling not working in v15","State":"open","Body":"### Is this a regression?\r\n\r\nYes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv14\r\n\r\n### Description\r\n\r\nmatNoDataRow directive not working as expect in previous version\r\n\r\n### Expected Behavior\r\n\r\nhttps://v14.material.angular.io/components/table/examples\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205289949-7ada15b8-7ae7-4037-a320-cd2a5eb5f151.png)\r\n\r\n### Actual Behavior\r\n\r\nhttps://material.angular.io/components/table/examples\r\n\r\n![image](https://user-images.githubusercontent.com/12090931/205290032-7671e8ad-5e61-4b01-96f6-321242674bb8.png)\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chrome\r\n","Url":"https://github.com/angular/components/issues/26162","RelatedDescription":"Open issue \"bug(material/table): matNoDataRow styling not working in v15\" (#26162)"},{"Id":"1472643223","IsPullRequest":false,"CreatedAt":"2022-12-02T10:27:08","Actor":"LayZeeDK","Number":"26160","RawContent":null,"Title":"bug(material/button): MDC-based Icon FABs are vertically offset","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.7\r\n\r\n### Description\r\n\r\nThis issue affects the Icon FAB and Icon Mini FAB variants of the MDB-based Button component.\r\n\r\n![MDC-based FABs and Mini FABs using `@angular/material@15.0.1`](https://user-images.githubusercontent.com/6364586/205271145-21b03f48-97ba-4292-97b5-ee5af2d0edff.png)\r\n\r\n*MDC-based FABs and Mini FABs using `@angular/material@15.0.1`.*\r\n\r\n![FABs and Mini FABs using `@angular/material@14.2.7`](https://user-images.githubusercontent.com/6364586/205271271-d7129255-54ef-44e4-902f-2a894e57420f.png)\r\n\r\n*FABs and Mini FABs using `@angular/material@14.2.7`.*\r\n\r\n### Reproduction\r\n- [Angular Material 15 documentation -> Button -> Examples -> Button varieties](https://material.angular.io/components/button/examples)\r\n- [Reproduction StackBlitz](https://stackblitz.com/edit/angular-1sqlp8-zinekj)\r\n- [Comparison to legacy Icon FAB StackBlitz](https://stackblitz.com/edit/angular-1sqlp8-duqfnq)\r\n\r\nSteps to reproduce:\r\n1. Place MDC-based FAB or Mini FAB with text.\r\n2. Place MDC-based Icon FAB or Icon Mini FAB next to the text-based FAB or Mini FAB.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe FABs or Mini FABs are vertically aligned.\r\n\r\n### Actual Behavior\r\n\r\nThe Icon FAB or Icon Mini FAB is vertically offset from the FAB or Mini FAB.\r\n\r\n### Environment\r\n\r\n- Angular: 15.0.2\r\n- CDK/Material: 15.0.1\r\n- Browser(s): Edge Chromium\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11 Pro\r\n","Url":"https://github.com/angular/components/issues/26160","RelatedDescription":"Open issue \"bug(material/button): MDC-based Icon FABs are vertically offset\" (#26160)"},{"Id":"1472032013","IsPullRequest":true,"CreatedAt":"2022-12-01T22:16:34","Actor":"wagnermaciel","Number":"26156","RawContent":null,"Title":"test(material/chips): add disabled harness filter","State":"open","Body":"","Url":"https://github.com/angular/components/pull/26156","RelatedDescription":"Open PR \"test(material/chips): add disabled harness filter\" (#26156)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-06T03:30:03.7399807Z","RunDurationInMilliseconds":2791}