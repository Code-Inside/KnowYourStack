{"Data":{"Angular-Issues":{"Issues":[{"Id":"2810311695","IsPullRequest":true,"CreatedAt":"2025-01-24T20:19:42","Actor":"andrewseguin","Number":"59709","RawContent":null,"Title":"docs: fix broken material.angular.io test harness links","State":"open","Body":"Fixes URL links pointing to Material's test harness API documentation\r\n\r\nIncorrect: https://material.angular.io/cdk/test-harnesses\r\nCorrect: https://material.angular.io/cdk/testing","Url":"https://github.com/angular/angular/pull/59709","RelatedDescription":"Open PR \"docs: fix broken material.angular.io test harness links\" (#59709)"},{"Id":"2809823506","IsPullRequest":true,"CreatedAt":"2025-01-24T19:42:33","Actor":"angular-robot","Number":"59706","RawContent":null,"Title":"docs: update Angular CLI help [19.1.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/59706","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [19.1.x]\" (#59706)"},{"Id":"2810057549","IsPullRequest":true,"CreatedAt":"2025-01-24T18:00:46","Actor":"alxhub","Number":"59708","RawContent":null,"Title":"Resource fixes","State":"open","Body":"2 fixes for `resource()`","Url":"https://github.com/angular/angular/pull/59708","RelatedDescription":"Open PR \"Resource fixes\" (#59708)"},{"Id":"2809260244","IsPullRequest":false,"CreatedAt":"2025-01-24T16:59:36","Actor":"json-derulo","Number":"59701","RawContent":null,"Title":"Destruction of DOM elements after tests fail if ID is bound to host","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI have written some custom Angular Material controls. According to the [documentation](https://material.angular.io/guide/creating-a-custom-form-field-control#id), the correct way to set them up is to apply a unique ID to the host's `id` attribute via host binding:\n\n```typescript\nexport class MyComponent {\n  static nextId = 0;\n  @HostBinding() id = `my-component-${MyComponent.nextId++}`;\n}\n```\n\nHowever, when using this approach, the unit tests seem to fail cleaning up the DOM of the component after the tests ran. When checking out the repo and running `ng test`, you can see in the Karma window that the component is still there:\n\n![Karma UI after running the tests](https://github.com/user-attachments/assets/5b13e61a-42f8-40e8-94a6-a1102ea5ffb9)\n\nIn the DOM, the component is still there:\n\n![Elements in the DevTools after running the tests](https://github.com/user-attachments/assets/b6a87e3d-e55e-4a5b-a3a4-8c4c09ccdbee)\n\nWhen removing the `@HostBinding()` annotation, the component is properly destructed.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/json-derulo/ng-test-component-not-destroyed-repro\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.4\nNode: 22.13.1\nPackage Manager: npm 11.0.0\nOS: darwin arm64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cli                    19.1.4\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nI have also tried:\n- using the `host` attribute in the component's metadata instead\n- binding to `[attr.id]`\n- calling `fixture.destroy()` after each test\n\nBut the same thing happens.","Url":"https://github.com/angular/angular/issues/59701","RelatedDescription":"Closed issue \"Destruction of DOM elements after tests fail if ID is bound to host\" (#59701)"},{"Id":"2809888514","IsPullRequest":false,"CreatedAt":"2025-01-24T16:50:32","Actor":"LuisTovar0","Number":"59707","RawContent":null,"Title":"ResourceRef.hasValue() type narrowing not working properly","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe `hasValue()` method of the `ResourceRef` interface doesn't seem to successfully narrow down the type of its `value` signal, which is unfortunate since this seems to be `hasValue()`'s only use.\n\n```ts\n@Component({\n  // ...\n  template: `\n    @if (res.hasValue()) {\n      {{ someMethod(res.value()) }} <!-- error -->\n    }\n  `,\n})\nexport class AppComponent {\n  res: ResourceRef<string>; // created with resource method from @angular/core\n\n  someMethod(str: string) { }\n}\n```\n\nIn this case, `res.value()`, despite being inside a context where `hasValue()` is true, is still considered to have type `string | undefined`.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-wh7weqvh?file=src%2Fapp%2Fapp.component.ts\n\n### Please provide the exception or error you saw\n\n```true\nType 'undefined' is not assignable to type 'string'. [plugin angular-compiler]\n\n    src/app/app.component.ts:7:24:\n      7 â”‚       {{ someMethod(res.value()) }}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.1\nNode: 22.13.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.1.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.1\n@angular-devkit/build-angular   19.1.1\n@angular-devkit/core            19.1.1\n@angular-devkit/schematics      19.1.1\n@angular/cdk                    19.1.0\n@angular/material               19.1.0\n@schematics/angular             19.1.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n\n\nThis kind of feels like a TypeScript problem and not an Angular problem","Url":"https://github.com/angular/angular/issues/59707","RelatedDescription":"Open issue \"ResourceRef.hasValue() type narrowing not working properly\" (#59707)"},{"Id":"2809231573","IsPullRequest":true,"CreatedAt":"2025-01-24T16:17:01","Actor":"crisbeto","Number":"59700","RawContent":null,"Title":"fix(core): ensure type is preserved during HMR","State":"closed","Body":"Fixes an internal HMR issue where the type might be replaced when swapping out the definition. Externally this is a no-op.\r\n","Url":"https://github.com/angular/angular/pull/59700","RelatedDescription":"Closed or merged PR \"fix(core): ensure type is preserved during HMR\" (#59700)"},{"Id":"2809721554","IsPullRequest":true,"CreatedAt":"2025-01-24T15:27:02","Actor":"arturovt","Number":"59705","RawContent":null,"Title":"refactor(common): drop `ngIf` assert template error in production","State":"open","Body":"This commit removes the `assertTemplate` error message in production.","Url":"https://github.com/angular/angular/pull/59705","RelatedDescription":"Open PR \"refactor(common): drop `ngIf` assert template error in production\" (#59705)"},{"Id":"2809629110","IsPullRequest":true,"CreatedAt":"2025-01-24T14:44:28","Actor":"arturovt","Number":"59704","RawContent":null,"Title":"refactor(router): remove unused code","State":"open","Body":"This code is never used.","Url":"https://github.com/angular/angular/pull/59704","RelatedDescription":"Open PR \"refactor(router): remove unused code\" (#59704)"},{"Id":"2809621982","IsPullRequest":true,"CreatedAt":"2025-01-24T14:41:04","Actor":"arturovt","Number":"59703","RawContent":null,"Title":"fix(common): clean up `urlChanges` subscribers when root scope is destroyed","State":"open","Body":"In this commit, the `urlChanges` subject is completed to release all active observers when the root scope is destroyed. Previously, subscribing to the `urlChanges` subject caused the subscriber to capture `this`, resulting in a memory leak after the root scope was destroyed.","Url":"https://github.com/angular/angular/pull/59703","RelatedDescription":"Open PR \"fix(common): clean up `urlChanges` subscribers when root scope is destroyed\" (#59703)"},{"Id":"2809442027","IsPullRequest":true,"CreatedAt":"2025-01-24T13:18:20","Actor":"arturovt","Number":"59702","RawContent":null,"Title":"refactor(service-worker): drop error messages in production","State":"open","Body":"This commit provides tree-shakable error messages for the `service-worker` package.","Url":"https://github.com/angular/angular/pull/59702","RelatedDescription":"Open PR \"refactor(service-worker): drop error messages in production\" (#59702)"},{"Id":"2809072118","IsPullRequest":true,"CreatedAt":"2025-01-24T11:45:09","Actor":"arturovt","Number":"59696","RawContent":null,"Title":"refactor(common): simplify null/undefined check in `keyvalue` pipe","State":"closed","Body":"In this commit, we remove the separate `a === undefined` and `a === null` checks and replace them with `a == null`. Using `a == null` is better and more concise because it checks for both `null` and `undefined` in a single operation. The loose equality `==` is specifically designed to treat `null` and `undefined` as equivalent. This change only reduces some bytes in the code and simplifies it, with no performance impact, as modern JavaScript engines handle `a == null` efficiently. Additionally, comments have been added for clarification.","Url":"https://github.com/angular/angular/pull/59696","RelatedDescription":"Closed or merged PR \"refactor(common): simplify null/undefined check in `keyvalue` pipe\" (#59696)"},{"Id":"2809097296","IsPullRequest":true,"CreatedAt":"2025-01-24T11:31:38","Actor":"angular-robot","Number":"59699","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/59699","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#59699)"},{"Id":"2809096063","IsPullRequest":false,"CreatedAt":"2025-01-24T11:07:17","Actor":"prakashmallow","Number":"59698","RawContent":null,"Title":"After migrating Angular version 15 to 16 facing issue of more components and material components are throwing  error NG8001: 'component-name' is not a known element","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI'm facing the below issues when migrating Angular version 15 to 16 after running `ng serve` command.\n\nerror NG8001: 'component-name' is not a known element(both material components and user-created components)\nerror NG8002: Can't bind to 'ngClass' since it isn't a known property of 'div'.\n error NG8002: Can't bind to 'ngModel' since it isn't a known property of 'textarea'.\nerror NG8002: Can't bind to 'showCustomerFeedback' since it isn't a known property of 'app-session-properties'.\n error NG8002: Can't bind to 'dataSource' since it isn't a known property of 'table'.\nerror NG8003: No directive found with exportAs 'matMenu'.\nerror NG8004: No pipe found with name 'date'.\n\nBut I'm configured app.module.ts as per documentation. But the above issue occurring for all material and user components.\nCould you please give solution for the above issues\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nerror NG8001: 'component-name' is not a known element(both material components and user-created components)\nerror NG8002: Can't bind to 'ngClass' since it isn't a known property of 'div'.\nerror NG8002: Can't bind to 'ngModel' since it isn't a known property of 'textarea'.\nerror NG8002: Can't bind to 'showCustomerFeedback' since it isn't a known property of 'app-session-properties'.\nerror NG8002: Can't bind to 'dataSource' since it isn't a known property of 'table'.\nerror NG8003: No directive found with exportAs 'matMenu'.\nerror NG8004: No pipe found with name 'date'.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.0.0\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 16.0.0\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... fire, forms, language-service, material, platform-browser\n... platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1600.0\n@angular-devkit/build-angular   16.0.0\n@angular-devkit/core            16.0.0\n@angular-devkit/schematics      16.0.0\n@schematics/angular             16.0.0\nrxjs                            6.6.7\ntypescript                      5.0.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59698","RelatedDescription":"Closed issue \"After migrating Angular version 15 to 16 facing issue of more components and material components are throwing  error NG8001: 'component-name' is not a known element\" (#59698)"},{"Id":"2807880391","IsPullRequest":true,"CreatedAt":"2025-01-24T10:29:22","Actor":"LuxDie","Number":"59687","RawContent":null,"Title":"docs: replace word in using-component-harnesses.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59687","RelatedDescription":"Closed or merged PR \"docs: replace word in using-component-harnesses.md\" (#59687)"},{"Id":"2808923467","IsPullRequest":true,"CreatedAt":"2025-01-24T10:00:55","Actor":"pkozlowski-opensource","Number":"59695","RawContent":null,"Title":"refactor(core): reuse directive instantiate logic (#59633)","State":"closed","Body":"This refactor reuses the existing directive instantiation logic for a given component.\r\n\r\nThis is 19.1.x version of the PR #59633\r\n","Url":"https://github.com/angular/angular/pull/59695","RelatedDescription":"Closed or merged PR \"refactor(core): reuse directive instantiate logic (#59633)\" (#59695)"},{"Id":"2808876487","IsPullRequest":true,"CreatedAt":"2025-01-24T08:44:12","Actor":"crisbeto","Number":"59694","RawContent":null,"Title":"fix(core): avoid confusion between let value and internal data structures","State":"open","Body":"Currently we store the value of `@let` directly on the `LView`. This can be problematic for hydration, because the user could define a value for the `@let` that looks like an internal data structure, e.g. `LView` is just an array with a specific shape, which would in turn lead to undefined behavior.\r\n\r\nThese changes wrap the value in a container so that we can disambiguate it from internal data structures.\r\n\r\nFixes #59504.\r\n","Url":"https://github.com/angular/angular/pull/59694","RelatedDescription":"Open PR \"fix(core): avoid confusion between let value and internal data structures\" (#59694)"},{"Id":"2808813405","IsPullRequest":true,"CreatedAt":"2025-01-24T08:28:01","Actor":"pkozlowski-opensource","Number":"59693","RawContent":null,"Title":"test: update golden files","State":"closed","Body":"Update a missing entry in a golden file that breaks a build on the 19.1 branch.\r\n","Url":"https://github.com/angular/angular/pull/59693","RelatedDescription":"Closed or merged PR \"test: update golden files\" (#59693)"},{"Id":"2808171819","IsPullRequest":true,"CreatedAt":"2025-01-23T23:45:46","Actor":"seabasso","Number":"59690","RawContent":null,"Title":"fix(platform-browser): Update pseudoevent created by createMouseSpecialEvent to populate `_originalEvent` property","State":"open","Body":"\r\nThis fixes an internal bug.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59690","RelatedDescription":"Open PR \"fix(platform-browser): Update pseudoevent created by createMouseSpecialEvent to populate `_originalEvent` property\" (#59690)"},{"Id":"2808025262","IsPullRequest":true,"CreatedAt":"2025-01-23T23:38:16","Actor":"seabasso","Number":"59688","RawContent":null,"Title":"fix(platform-browser): Update pseudoevent created by createMouseSpecialEvent to populate `_originalEvent` property","State":"closed","Body":"This fixes an internal bug.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [n/a (TGP)] Tests for the changes have been added (for bug fixes / features)\r\n- [n/a] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59688","RelatedDescription":"Closed or merged PR \"fix(platform-browser): Update pseudoevent created by createMouseSpecialEvent to populate `_originalEvent` property\" (#59688)"},{"Id":"2807744446","IsPullRequest":true,"CreatedAt":"2025-01-23T22:27:55","Actor":"dgp1130","Number":"59686","RawContent":null,"Title":"docs: sort `application` and `browser-esbuild` builders first","State":"closed","Body":"This emphasizes these as the default/preferred options over `browser` builder.","Url":"https://github.com/angular/angular/pull/59686","RelatedDescription":"Closed or merged PR \"docs: sort `application` and `browser-esbuild` builders first\" (#59686)"},{"Id":"2806747422","IsPullRequest":true,"CreatedAt":"2025-01-23T22:26:27","Actor":"LuxDie","Number":"59681","RawContent":null,"Title":"docs: add missing word on components-scenarios.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59681","RelatedDescription":"Closed or merged PR \"docs: add missing word on components-scenarios.md\" (#59681)"},{"Id":"2806742918","IsPullRequest":true,"CreatedAt":"2025-01-23T22:25:53","Actor":"LuxDie","Number":"59680","RawContent":null,"Title":"Add missing word in components-scenarios.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59680","RelatedDescription":"Closed or merged PR \"Add missing word in components-scenarios.md\" (#59680)"},{"Id":"2808048092","IsPullRequest":true,"CreatedAt":"2025-01-23T22:24:19","Actor":"atscott","Number":"59689","RawContent":null,"Title":"Add some notes to zoneless docs to address some issues","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/59689","RelatedDescription":"Open PR \"Add some notes to zoneless docs to address some issues\" (#59689)"},{"Id":"2807695066","IsPullRequest":true,"CreatedAt":"2025-01-23T19:03:35","Actor":"pkozlowski-opensource","Number":"59685","RawContent":null,"Title":"refactor(core): reuse host directive resolution logic","State":"open","Body":"Reuse host directive resolution logic in ComponentRef\r\n","Url":"https://github.com/angular/angular/pull/59685","RelatedDescription":"Open PR \"refactor(core): reuse host directive resolution logic\" (#59685)"},{"Id":"2807555499","IsPullRequest":true,"CreatedAt":"2025-01-23T17:54:10","Actor":"arturovt","Number":"59684","RawContent":null,"Title":"refactor(common): inline supports check in `slice` pipe","State":"open","Body":"The refactored version improves the original code by removing the `supports` method from the prototype and inlining the logic directly into the `transform` method. This reduces indirection and simplifies the class, especially since `supports` is not reused elsewhere. ESBuild can directly inline the condition into the `if` statement by removing the variable: `if (!(\"string\" == typeof e || Array.isArray(e))) throw i(s, e);`.","Url":"https://github.com/angular/angular/pull/59684","RelatedDescription":"Open PR \"refactor(common): inline supports check in `slice` pipe\" (#59684)"},{"Id":"2807164313","IsPullRequest":false,"CreatedAt":"2025-01-23T15:55:43","Actor":"XavierDupessey","Number":"59682","RawContent":null,"Title":"Unable to Inject DecimalPipe in a Custom Standalone Pipe","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello,\n\nI'm currently investigating the feasibility of migrating applications to standalone components and APIs, as this is now the recommended approach in Angular. Most things are working smoothly so far, but I've encountered a specific case that I'm unable to handle.\n\nI'm wondering if this might be a bug since the same functionality works fine when using `NgModule`s.\n\n### Context\n\nMy goal is to inject Angular's `DecimalPipe` into a custom standalone pipe. Here's the relevant code:\n\n```typescript\nimport { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Size, SizeStatus } from './size.model';\n\n@Pipe({ name: 'sizeLabel' })\nexport class SizeLabelPipe implements PipeTransform {\n  constructor(\n    private readonly translateService: TranslateService,\n    private readonly decimalPipe: DecimalPipe,\n  ) {}\n\n  transform(size: Size): string | null {\n    switch (size.detail) {\n      case SizeStatus.Available:\n        return this.decimalPipe.transform(size.value);\n      case SizeStatus.Unknown:\n        return '-';\n      case SizeStatus.InProgress:\n        return this.translateService.instant('IN_PROGRESS');\n    }\n  }\n}\n```\n\nEven though I provide `DecimalPipe` in the `bootstrapApplication`'s `providers`, I encounter the following runtime error:\n\n```console\nNullInjectorError: No provider for DecimalPipe!\n```\n\n### Expected Behavior\n\nThe `DecimalPipe` should be correctly injected when provided in `bootstrapApplication`, I think.\n\n### Current Behavior\n\nThe application throws a `NullInjectorError`, indicating that the `DecimalPipe` provider cannot be found.\n\n### Additional Notes\n\nThis behavior works as expected when using `NgModule`s. Could this be a limitation or a missing feature in the standalone setup?\n\nThank you for your help! ðŸ˜Š\nXavier\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nNullInjectorError: No provider for DecimalPipe!\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.4\nNode: 20.17.0\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cdk                    14.2.7\n@angular/cli                    19.1.4\n@angular/flex-layout            14.0.0-beta.41\n@angular/material               14.2.7\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59682","RelatedDescription":"Closed issue \"Unable to Inject DecimalPipe in a Custom Standalone Pipe\" (#59682)"},{"Id":"2807249492","IsPullRequest":true,"CreatedAt":"2025-01-23T15:41:30","Actor":"arturovt","Number":"59683","RawContent":null,"Title":"refactor(docs-infra): allow home to be cleaned up","State":"open","Body":"In this commit, we're using the `from()` in the `adev-home` component, which allows us to invert a dependency and avoid memory leaks. Because an `async` function would be executed even if the component is already destroyed.","Url":"https://github.com/angular/angular/pull/59683","RelatedDescription":"Open PR \"refactor(docs-infra): allow home to be cleaned up\" (#59683)"},{"Id":"2806665699","IsPullRequest":true,"CreatedAt":"2025-01-23T11:33:03","Actor":"cexbrayat","Number":"59679","RawContent":null,"Title":"refactor(core): remove unused `APP_EFFECT_SCHEDULER` in effect code","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nThe `APP_EFFECT_SCHEDULER` Injection token is never used and not a public API.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59679","RelatedDescription":"Open PR \"refactor(core): remove unused `APP_EFFECT_SCHEDULER` in effect code\" (#59679)"},{"Id":"2806656531","IsPullRequest":true,"CreatedAt":"2025-01-23T11:28:29","Actor":"pkozlowski-opensource","Number":"59678","RawContent":null,"Title":"refactor(core): simplify attributes extraction logic for ComponentRef","State":"open","Body":"Make extractAttrsAndClassesFromSelector to return TAttributes directly to simplify the overall logic and remove unnecessary code.\r\n","Url":"https://github.com/angular/angular/pull/59678","RelatedDescription":"Open PR \"refactor(core): simplify attributes extraction logic for ComponentRef\" (#59678)"},{"Id":"2806379552","IsPullRequest":false,"CreatedAt":"2025-01-23T09:28:14","Actor":"manfredsteyer","Number":"59677","RawContent":null,"Title":"Add field to ResourceLoaderParams to find out whether the loader is triggered for the first time","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nSometimes, it's necessary to determine whether the loader was triggered for the first time. Before 19.1.x, we could have checked `param.previous.status` for Idle, but now, this status is already set to `loading` initially.\n\n\n### Proposed solution\n\nHence, I'd like to propose another way to achieve the same, e.g., a `first` flag (similar to the first flag in `ngOnChanges`).\n\n\n### Alternatives considered\n\nWe could use a flag in userland. This is doable and can be hidden in a helper function wrapping the loader. However, I assume using a first flag is easier.","Url":"https://github.com/angular/angular/issues/59677","RelatedDescription":"Open issue \"Add field to ResourceLoaderParams to find out whether the loader is triggered for the first time\" (#59677)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2810012515","IsPullRequest":true,"CreatedAt":"2025-01-24T17:42:06","Actor":"clydin","Number":"29479","RawContent":null,"Title":"fix(@angular/build): support template updates that also trigger global stylesheet changes","State":"open","Body":"In some cases a change to a component template may cause changes to other aspects of the application. Tailwind, for instance, may cause changes to the global stylesheets when class usage is changed in a template. To support hot module replacement of the component template in these cases, stylesheet changes are now analyzed and separated during the update process. This allows both a hot update of the template and the global stylesheet during the rebuild instead of the previously required full page reload.\r\n\r\nCloses #29440","Url":"https://github.com/angular/angular-cli/pull/29479","RelatedDescription":"Open PR \"fix(@angular/build): support template updates that also trigger global stylesheet changes\" (#29479)"},{"Id":"2809790443","IsPullRequest":false,"CreatedAt":"2025-01-24T16:01:35","Actor":"kavicastelo","Number":"29478","RawContent":null,"Title":"Title: IDE Error: Unterminated expansion form with Angular 19 @if/@else Syntax","State":"closed","Body":"### Command\n\nextract-i18n\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Angular 19's new `@if` and `@else` syntax in a standalone component, IntelliJ IDEA flags the template with the error:\n`Unterminated expansion form. If you have unescaped '{', use '{{ \"{\" }}' to escape it.`\nDespite this, the code compiles and runs correctly in the browser. It seems the IDE does not fully recognize the syntax, causing it to misinterpret braces within the template.\n\n### Minimal Reproduction\n\n**Component:**\n```ts[]\nimport { Component, Input, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-task-details',\n  standalone: true,\n  template: `\n    @if(task(); as currentTask;) {\n        <div class=\"task-details\">\n            <h2>Task Details</h2>\n            <p><strong>Title:</strong> {{ currentTask.title }}</p>\n            <p><strong>Status:</strong> {{ currentTask.completed ? 'Completed' : 'Pending' }}</p>\n            <button (click)=\"clearSelection()\">Clear Selection</button>\n        </div>\n    }\n    @else {\n        <ng-template #noTask>\n            <p>Select a task to view its details.</p>\n        </ng-template>\n    }\n  `,\n  styles: [\n    `\n      .task-details {\n        border: 1px solid #ddd;\n        padding: 1rem;\n        border-radius: 4px;\n        background-color: #f9f9f9;\n      }\n    `,\n  ],\n})\nexport class TaskDetailsComponent {\n  @Input() task = signal<any>(null);\n\n  clearSelection() {\n    this.task.set(null);\n  }\n}\n```\n**Dependancies:**\n```json[]\n{\n  \"@angular/animations\": \"^19.0.0\",\n  \"@angular/common\": \"^19.0.0\",\n  \"@angular/compiler\": \"^19.0.0\",\n  \"@angular/core\": \"^19.0.0\",\n  \"@angular/forms\": \"^19.0.0\",\n  \"@angular/platform-browser\": \"^19.0.0\",\n  \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n  \"@angular/router\": \"^19.0.0\",\n  \"typescript\": \"~5.6.2\"\n}\n```\n\n### Steps to Reproduce:\n1. Use the provided component code in an Angular 19 standalone project.\n2. Open the project in IntelliJ IDEA.\n3. Observe the error in the IDE.\n\n### Expected Behavior:\nThe IDE should properly recognize and support Angular 19's new `@if` and `@else` syntax without throwing errors.\n\n### Observed Behavior:\nThe IDE flags the syntax as an error, even though the code compiles and runs successfully in the browser.\n\n### Workarounds:\n- Use legacy directives like `*ngIf` until tooling fully supports the new syntax.\n- Temporarily disable linting or inspections for affected code sections in the IDE.\n\n### Exception or Error\n\n```text\nUnterminated expansion form. If you have unescaped '{', use '{{ \"{\" }}' to escape it.\n```\n\n### Your Environment\n\n```text\nIDE: IntelliJ IDEA\n\nAngular CLI: 19.0.6\nNode: 18.20.5\nPackage Manager: npm 10.8.2\nOS: win32 x64\n\nAngular: undefined\n...\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.6 (cli-only)\n@angular-devkit/core         19.0.6 (cli-only)\n@angular-devkit/schematics   19.0.6 (cli-only)\n@schematics/angular          19.0.6 (cli-only)\n```\n\n### Anything else relevant?\n\nThis is likely due to incomplete support in IntelliJ IDEA(2023.01.03 (Ultimate Edition)) or the Angular Language Service. Feedback and improvements to the tooling would be greatly appreciated.","Url":"https://github.com/angular/angular-cli/issues/29478","RelatedDescription":"Closed issue \"Title: IDE Error: Unterminated expansion form with Angular 19 @if/@else Syntax\" (#29478)"},{"Id":"2808989093","IsPullRequest":true,"CreatedAt":"2025-01-24T15:20:51","Actor":"clydin","Number":"29471","RawContent":null,"Title":"fix(@angular/build): update vite to version 6.0.11","State":"closed","Body":"Version update from 6.0.7 to address advisory https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\r\n\r\nVite version 6.0.9+, which is now used by the Angular CLI with the `application`/`browser-esbuild` builders, contains a potentially breaking change for some development setups. Examples of such setups include those that use reverse proxies or custom host names during development. The change within a patch release was made by Vite to address a security vulnerability. For projects that directly access the development server via `localhost`, no changes should be needed. However, some development setups may now need to adjust the `allowedHosts` development server option. This option can include an array of host names that are allowed to communicate with the development server. The option sets the corresponding Vite option within the Angular CLI. For more information on the option and its specific behavior, please see the Vite documentation located here:\r\nhttps://vite.dev/config/server-options.html#server-allowedhosts\r\n\r\nThe following is an example of the configuration option allowing `example.com`:\r\n```\r\n\"serve\": {\r\n      \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n      \"options\": {\r\n        \"allowedHosts\": [\"example.com\"]\r\n      },\r\n```","Url":"https://github.com/angular/angular-cli/pull/29471","RelatedDescription":"Closed or merged PR \"fix(@angular/build): update vite to version 6.0.11\" (#29471)"},{"Id":"2808583774","IsPullRequest":true,"CreatedAt":"2025-01-24T14:06:01","Actor":"angular-robot","Number":"29469","RawContent":null,"Title":"build: update github/codeql-action action to v3.28.4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.28.3` -> `v3.28.4` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.4`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.4)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.28.3...v3.28.4)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\n#### 3.28.4 - 23 Jan 2025\n\nNo user facing changes.\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.4/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29469","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.28.4\" (#29469)"},{"Id":"2808820375","IsPullRequest":false,"CreatedAt":"2025-01-24T12:20:57","Actor":"rubiesonthesky","Number":"29470","RawContent":null,"Title":"Bunch of warnings: \"The above dynamic import cannot be analyzed by Vite.\"","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.*\n\n### Description\n\nWhen running app, after Angular 19 update, the console is filled with these kind of warnings. It has taken me hours on and off to try to find the reason why it spams these warnings and how to get rid of them.\n\n```\n10:03:12 AM [vite] (client) warning:\n/Users/user/angular-19/.angular/vite-root/angular-19/main.js\n107|  (() => {\n108|    function AppComponent_HmrLoad(t) {\n109|      import(new URL(\"./@ng/component?c=src%2Fapp%2Fapp.component.ts%40AppComponent&t=\" + encodeURIComponent(t), import.meta.url).href).then((m) => m.default && i0.\\u0275\\u0275replaceMetadata(AppComponent, m.default, [i0], [RouterOutlet]));\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n110|    }\n111|    (typeof ngDevMode === \"undefined\" || ngDevMode) && AppComponent_HmrLoad(Date.now());\nThe above dynamic import cannot be analyzed by Vite.\nSee https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations for supported dynamic import formats. If this is intended to be left as-is, you can use the /* @vite-ignore */ comment inside the import() call to suppress this warning.\n\n  Plugin: vite:import-analysis\n  File: /Users/user/angular-19/.angular/vite-root/angular-19/main.js\n```\n\nIt seems that you could get rid of this warning by adding the comment like it says. But of course, it's not possible to add it since it's internal Angular thing. Turns out that the comment is there already but having tsconfig to remove the comments when compiling, broke this system.\n\nWould it be possible\n- Document this some where in update guide that you probably do not want to have `removeComments` on?\n- Add it to the HRM warning message shown on start, that if removeComments is on, you should probably turn it off?\n- Isn't there any more robust system to turn that analysis off that Angular could use? Relying on comments seems really easy to break. I get that it's just a warning and doesn't really break anything. But it's little bit scary that you got 100 of these warnings after upgrade. \n\n### Minimal Reproduction\n\nYou can reproduce this by creating new Angular project and adding `\"removeComments\": true` to `tsconfig.json`\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.4\nNode: 20.11.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cli                    19.1.4\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29470","RelatedDescription":"Closed issue \"Bunch of warnings: \"The above dynamic import cannot be analyzed by Vite.\"\" (#29470)"},{"Id":"2809116675","IsPullRequest":true,"CreatedAt":"2025-01-24T12:20:56","Actor":"alan-agius4","Number":"29474","RawContent":null,"Title":"fix(@angular/build): disable TypeScript `removeComments` option","State":"closed","Body":"Disables TypeScript's `removeComments` option to ensure important annotations like `/* @__PURE__ */` and `/* vite-ignore */` are preserved. TypeScript's comment removal can be too aggressive, potentially stripping out critical information needed by bundlers for dead code elimination. Non-essential comments will be handled by the bundler, so removing them in TypeScript isn't necessary and could lead to an increase in the final bundle size.\r\n\r\nCloses #29470\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29474","RelatedDescription":"Closed or merged PR \"fix(@angular/build): disable TypeScript `removeComments` option\" (#29474)"},{"Id":"2809289713","IsPullRequest":true,"CreatedAt":"2025-01-24T12:08:09","Actor":"devversion","Number":"29477","RawContent":null,"Title":"[19.1.x]: Patch port of #29454","State":"open","Body":"Patch port of #29454","Url":"https://github.com/angular/angular-cli/pull/29477","RelatedDescription":"Open PR \"[19.1.x]: Patch port of #29454\" (#29477)"},{"Id":"2809138576","IsPullRequest":true,"CreatedAt":"2025-01-24T11:56:04","Actor":"alan-agius4","Number":"29476","RawContent":null,"Title":"build: update `ng-packagr` to `^19.2.0-next.0`","State":"closed","Body":"Bump ng-packagr version.\r\n","Url":"https://github.com/angular/angular-cli/pull/29476","RelatedDescription":"Closed or merged PR \"build: update `ng-packagr` to `^19.2.0-next.0`\" (#29476)"},{"Id":"2805236931","IsPullRequest":false,"CreatedAt":"2025-01-24T10:44:17","Actor":"robertsine","Number":"29452","RawContent":null,"Title":"Routes beginning with Dynamic Parameters break Angular Prerendering and SSR","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAngular provides examples on how to use prerendering for parametrized routes like `post/:id`. However, in our project, we have routes with dynamic parameters at the beginning of the route path, such as `:seoAlias/:category/:offerId`.\n\nThis specific route structure causes issues in `Client`, `Server`, and `Prerender` modes, breaking other routes when serving the app in development mode or building the application.\n\n### Minimal Reproduction\n\nWe have created a simple reproduction repository:\n[https://github.com/robertsine/car-shop](https://github.com/robertsine/car-shop)\n\nInside the file `app.routes.server.ts` there are several route variants. By uncommenting them, you can reproduce the issue. Notably, only `offers/:slug` works well. Other server routes are breaking entire app, when serving app in dev mode or serving build.\n\nWe tried to use the `**` path as a _hack_ to prerender our parameterized routes. However, in development mode, it does not work. In build mode, it creates prerendered pages. For note, we must ensure unique parameters across the entire route configuration to avoid hitting several paths with same parameter name. However, it generates fallback content inside the index files.\n\n### Exception or Error\n\n```text\nError: Error(s) occurred while extracting routes:\n- The '' server route does not match any routes defined in the Angular routing configuration (typically provided as a part of the 'provideRouter' call). Please make sure that the mentioned server route is present in the Angular routing configuration.\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.6\nNode: 22.13.1\nPackage Manager: npm 9.5.1\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cli                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29452","RelatedDescription":"Closed issue \"Routes beginning with Dynamic Parameters break Angular Prerendering and SSR\" (#29452)"},{"Id":"2806365904","IsPullRequest":true,"CreatedAt":"2025-01-24T10:44:16","Actor":"alan-agius4","Number":"29461","RawContent":null,"Title":"fix(@angular/ssr): enhance dynamic route matching for better performance and accuracy","State":"closed","Body":"\r\nUpdated route matching logic to prioritize closest matches, improving the accuracy of dynamic route resolution. Also we optimized performance by eliminating unnecessary recursive checks, reducing overhead during route matching.\r\n\r\nCloses #29452\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29461","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): enhance dynamic route matching for better performance and accuracy\" (#29461)"},{"Id":"2809101353","IsPullRequest":true,"CreatedAt":"2025-01-24T10:32:11","Actor":"alan-agius4","Number":"29473","RawContent":null,"Title":"fix(@angular/ssr): rename `provideServerRoutesConfig` to `provideServerRouting`","State":"open","Body":"\r\nThis commit renames `provideServerRoutesConfig` to `provideServerRouting` and updates the second parameter to use the `ServerRoutes` features.\r\n\r\nThis change improves alignment with the framework's API conventions and the way features are integrated.\r\n\r\n### Example Usage:\r\nBefore:\r\n```typescript\r\nprovideServerRoutesConfig(serverRoutes, { appShellRoute: 'shell' })\r\n```\r\n\r\nAfter:\r\n```typescript\r\nprovideServerRouting(serverRoutes, withAppShell(AppShellComponent))\r\n```","Url":"https://github.com/angular/angular-cli/pull/29473","RelatedDescription":"Open PR \"fix(@angular/ssr): rename `provideServerRoutesConfig` to `provideServerRouting`\" (#29473)"},{"Id":"2809021505","IsPullRequest":true,"CreatedAt":"2025-01-24T09:56:54","Actor":"clydin","Number":"29472","RawContent":null,"Title":"fix(@angular/build): update vite to version 5.4.14","State":"open","Body":"Version update from 5.4.6 to address advisory https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\r\n\r\nVite version 5.4.12+, which is now used by the Angular CLI with the `application`/`browser-esbuild` builders, contains a potentially breaking change for some development setups. Examples of such setups include those that use reverse proxies or custom host names during development. The change within a patch release was made by Vite to address a security vulnerability. For projects that directly access the development server via `localhost`, no changes should be needed. However, some development setups may now need to adjust the `allowedHosts` development server option. This option can include an array of host names that are allowed to communicate with the development server. The option sets the corresponding Vite option within the Angular CLI. For more information on the option and its specific behavior, please see the Vite documentation located here:\r\nhttps://vite.dev/config/server-options.html#server-allowedhosts\r\n\r\nThe following is an example of the configuration option allowing `example.com`:\r\n```\r\n\"serve\": {\r\n      \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n      \"options\": {\r\n        \"allowedHosts\": [\"example.com\"]\r\n      },\r\n```","Url":"https://github.com/angular/angular-cli/pull/29472","RelatedDescription":"Open PR \"fix(@angular/build): update vite to version 5.4.14\" (#29472)"},{"Id":"2808582883","IsPullRequest":true,"CreatedAt":"2025-01-24T06:05:29","Actor":"angular-robot","Number":"29468","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `4be99d5` -> `2b0694f` |\n| [@angular/bazel](https://redirect.github.com/angular/bazel-builds) | devDependencies | digest | `73e3de2` -> `e919a10` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `f118b17` -> `cf85541` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `4ba66f0` -> `e022dd6` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `fce3ea3` -> `1a6d428` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `84f4c58` -> `b20d8fe` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `eda0bda` -> `4ebc7d0` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `be23b1c` -> `5499489` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `81648eb` -> `4ca5f01` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `1624024` -> `940d1f6` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `d50cc14` -> `328b819` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `22b2293` -> `b93a566` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `5de13cf` -> `9758d09` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `ac7589e` -> `faa5979` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `332beed` -> `ad5251f` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `d963f80` -> `254b1e0` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `91ba753` -> `5265a3e` |\n\nðŸ”¡ If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ‘» **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29468","RelatedDescription":"Open PR \"build: update angular\" (#29468)"},{"Id":"2809133904","IsPullRequest":false,"CreatedAt":"2025-01-24T02:44:52","Actor":"rabikr","Number":"29475","RawContent":null,"Title":"Components sourcemap not resolved when using sub-paths","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhile using Angular SSR, the dev server is trying to fetch .component.css.map file from an API server instead of Angular server, resulting in 404 error and crashes Node JS server.\n\nThis issue occurs when you add custom styles to a component's stylesheet while also having HTTP client enabled. I have included a demo project that has two components - an Index component and a TodoDetail component. A simple CSS styling is included in the index.component.css file. The TodoDetail component makes a HTTP request to an external API using HttpClient service. While on the TodoDetail page, refresh the browser and clear browser cache, then return back to index page by clicking on the back button on the browser, depending whether you have `provideExperimentalZonelessChangeDetection` enabled or not, your dev node js SSR server should either crash or show HttpErrorResponse containing 404 Not Found error.\n\nA demo project is uploaded to github [Acme Todo](https://github.com/rabikr/acme)\n\n## To reproduce the error\n1. Run the local dev server by running the command `ng serve`.\n2. Open Chrome, navigate to home page.\n3. Open Chrome dev tool, go to network tab, select `Disable cache`.\n4. On the home page, click any one of the link.\n5. Refresh the page while on the todo detail view page. This is clear the cache.\n6. Return back to the previous page using the back button.\n7. Check server node js logs, it shows the dev server is trying to fetch .component.css.map file from the API server instead of Angular dev server.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/rabikr/acme\n\n### Please provide the exception or error you saw\n\n```true\nERROR HttpErrorResponse {\n  headers: _HttpHeaders {\n    headers: Map(25) {\n      'access-control-allow-credentials' => [Array],\n      'age' => [Array],\n      'alt-svc' => [Array],\n      'cache-control' => [Array],\n      'cf-cache-status' => [Array],\n      'cf-ray' => [Array],\n      'connection' => [Array],\n      'content-length' => [Array],\n      'content-type' => [Array],\n      'date' => [Array],\n      'etag' => [Array],\n      'expires' => [Array],\n      'nel' => [Array],\n      'pragma' => [Array],\n      'report-to' => [Array],\n      'reporting-endpoints' => [Array],\n      'server' => [Array],\n      'server-timing' => [Array],\n      'vary' => [Array],\n      'via' => [Array],\n      'x-content-type-options' => [Array],\n      'x-powered-by' => [Array],\n      'x-ratelimit-limit' => [Array],\n      'x-ratelimit-remaining' => [Array],\n      'x-ratelimit-reset' => [Array]\n    },\n    normalizedNames: Map(25) {\n      'access-control-allow-credentials' => 'access-control-allow-credentials',\n      'age' => 'age',\n      'alt-svc' => 'alt-svc',\n      'cache-control' => 'cache-control',\n      'cf-cache-status' => 'cf-cache-status',\n      'cf-ray' => 'cf-ray',\n      'connection' => 'connection',\n      'content-length' => 'content-length',\n      'content-type' => 'content-type',\n      'date' => 'date',\n      'etag' => 'etag',\n      'expires' => 'expires',\n      'nel' => 'nel',\n      'pragma' => 'pragma',\n      'report-to' => 'report-to',\n      'reporting-endpoints' => 'reporting-endpoints',\n      'server' => 'server',\n      'server-timing' => 'server-timing',\n      'vary' => 'vary',\n      'via' => 'via',\n      'x-content-type-options' => 'x-content-type-options',\n      'x-powered-by' => 'x-powered-by',\n      'x-ratelimit-limit' => 'x-ratelimit-limit',\n      'x-ratelimit-remaining' => 'x-ratelimit-remaining',\n      'x-ratelimit-reset' => 'x-ratelimit-reset'\n    },\n    lazyInit: undefined,\n    lazyUpdate: null\n  },\n  status: 404,\n  statusText: 'Not Found',\n  url: 'https://jsonplaceholder.typicode.com/todos/index.component.css.map',\n  ok: false,\n  type: undefined,\n  name: 'HttpErrorResponse',\n  message: 'Http failure response for https://jsonplaceholder.typicode.com/todos/index.component.css.map: 404 Not Found',\n  error: {}\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.4\nNode: 22.12.0\nPackage Manager: npm 11.0.0\nOS: win32 x64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cli                    19.1.4\n@angular/ssr                    19.1.4\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29475","RelatedDescription":"Open issue \"Components sourcemap not resolved when using sub-paths\" (#29475)"},{"Id":"2807982165","IsPullRequest":true,"CreatedAt":"2025-01-23T23:48:47","Actor":"clydin","Number":"29466","RawContent":null,"Title":"fix(@angular/build): support Vite `allowedHosts` option for development server","State":"closed","Body":"Vite version 6.0.9+, which is now used by the Angular CLI, contains a potentially breaking change for some development setups. Examples of such setups include those that use reverse proxies or custom host names during development. The change within a patch release was made by Vite to address a security vulnerability. For projects that directly access the development server via `localhost`, no changes should be needed. However, some development setups may now need to adjust the newly introduced `allowedHosts` development server option. This option can include an array of host names that are allowed to communicate with the development server. The option sets the corresponding Vite option within the Angular CLI. For more information on the option and its specific behavior, please see the Vite documentation located here:\r\nhttps://vite.dev/config/server-options.html#server-allowedhosts\r\n\r\nThe following is an example of the configuration option allowing `example.com`:\r\n```\r\n\"serve\": {\r\n      \"builder\": \"@angular/build:dev-server\",\r\n      \"options\": {\r\n        \"allowedHosts\": [\"example.com\"]\r\n      },\r\n```\r\n\r\nAdditional details on the vulnerability can be found here: https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6","Url":"https://github.com/angular/angular-cli/pull/29466","RelatedDescription":"Closed or merged PR \"fix(@angular/build): support Vite `allowedHosts` option for development server\" (#29466)"},{"Id":"2808097616","IsPullRequest":true,"CreatedAt":"2025-01-23T22:57:07","Actor":"clydin","Number":"29467","RawContent":null,"Title":"Bump version to \"v19.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29467","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.0\" with changelog.\" (#29467)"},{"Id":"2807308693","IsPullRequest":false,"CreatedAt":"2025-01-23T16:04:46","Actor":"meriturva","Number":"29465","RawContent":null,"Title":"Angular 19.1 -> build error: Cannot read properties of undefined (reading 'map')","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0\n\n### Description\n\nUpdating to angular 19.1 I get error just with a simple build command.\n\nIt was so difficult to make a simple and small repo to reproduce the issue but finally, I got it!\n\nHere is the repo: https://github.com/meriturva/angular_19_1_issue_build\n\nTo reproduce:\n\n1. npm i\n2. ng build\n\nand you have the error:\n\nAn unhandled exception occurred: Cannot read properties of undefined (reading 'map')\nSee \"C:\\Users\\diego\\AppData\\Local\\Temp\\ng-TSQVA6\\angular-errors.log\" for further details.\n\n### Minimal Reproduction\n\n1. npm i\n2. ng build\n\n### Exception or Error\n\n```text\n[error] TypeError: Cannot read properties of undefined (reading 'map')\n    at originalPositionFor (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@ampproject\\remapping\\dist\\remapping.umd.js:77:21)\n    at originalPositionFor (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@ampproject\\remapping\\dist\\remapping.umd.js:88:16)\n    at traceMappings (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@ampproject\\remapping\\dist\\remapping.umd.js:56:30)\n    at remapping (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@ampproject\\remapping\\dist\\remapping.umd.js:196:30)\n    at transformWithBabel (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@angular\\build\\src\\tools\\esbuild\\i18n-inliner-worker.js:133:45)\n    at async inlineLocale (D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\@angular\\build\\src\\tools\\esbuild\\i18n-inliner-worker.js:35:20)\n    at async D:\\Projects\\github.com\\angular_19_1_issue_build\\node_modules\\piscina\\dist\\worker.js:144:26\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.4\nNode: 22.13.1\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cdk                    19.1.1\n@angular/cli                    19.1.4\n@schematics/angular             19.1.4\nng-packagr                      19.1.0\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29465","RelatedDescription":"Open issue \"Angular 19.1 -> build error: Cannot read properties of undefined (reading 'map')\" (#29465)"},{"Id":"2806005817","IsPullRequest":true,"CreatedAt":"2025-01-23T15:54:52","Actor":"angular-robot","Number":"29459","RawContent":null,"Title":"build: update github/codeql-action action to v3.28.3","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://redirect.github.com/github/codeql-action) | action | patch | `v3.28.2` -> `v3.28.3` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v3.28.3`](https://redirect.github.com/github/codeql-action/releases/tag/v3.28.3)\n\n[Compare Source](https://redirect.github.com/github/codeql-action/compare/v3.28.2...v3.28.3)\n\n### CodeQL Action Changelog\n\nSee the [releases page](https://redirect.github.com/github/codeql-action/releases) for the relevant changes to the CodeQL CLI and language packs.\n\n#### 3.28.3 - 22 Jan 2025\n\n-   Update default CodeQL bundle version to 2.20.2. [#&#8203;2707](https://redirect.github.com/github/codeql-action/pull/2707)\n-   Fix an issue downloading the CodeQL Bundle from a GitHub Enterprise Server instance which occurred when the CodeQL Bundle had been synced to the instance using the [CodeQL Action sync tool](https://redirect.github.com/github/codeql-action-sync-tool) and the Actions runner did not have Zstandard installed. [#&#8203;2710](https://redirect.github.com/github/codeql-action/pull/2710)\n-   Uploading debug artifacts for CodeQL analysis is temporarily disabled. [#&#8203;2712](https://redirect.github.com/github/codeql-action/pull/2712)\n\nSee the full [CHANGELOG.md](https://redirect.github.com/github/codeql-action/blob/v3.28.3/CHANGELOG.md) for more information.\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29459","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v3.28.3\" (#29459)"},{"Id":"2806955754","IsPullRequest":true,"CreatedAt":"2025-01-23T15:54:40","Actor":"devversion","Number":"29463","RawContent":null,"Title":"[19.1.x] Patch port of jasmine test migration PR #29433","State":"closed","Body":"Patch port of #29433","Url":"https://github.com/angular/angular-cli/pull/29463","RelatedDescription":"Closed or merged PR \"[19.1.x] Patch port of jasmine test migration PR #29433\" (#29463)"},{"Id":"2805767903","IsPullRequest":false,"CreatedAt":"2025-01-23T15:06:28","Actor":"Ruisi-Lu","Number":"29458","RawContent":null,"Title":"TypeError: ÉµgetOrCreateAngularServerApp is not a function in 19.1.x after fix angular-compiler error","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThrow error message when hot reload in 19.1.x, this issue still exists in v19.1.4.\n\n![Image](https://github.com/user-attachments/assets/f9d26f96-4d83-43f9-9f5f-4a5b9b9ae144)\n\n![Image](https://github.com/user-attachments/assets/433ec5ab-add0-4bff-a7e5-ab874f945f92)\n\nhttps://github.com/angular/angular-cli/issues/29379#issuecomment-2604998446\n\n\n### Minimal Reproduction\n\n1. Edit the project to throw angular-compiler error.\neg. \n`X [ERROR] NG5002: Unexpected character \"}\" [plugin angular-compiler]`\nor \n`X [ERROR] TS1128: Declaration or statement expected. [plugin angular-compiler]`\n2. Fix the code.\n3. Observe the error in the terminal and the browser.\n\n### Exception or Error\n\n```text\nTypeError: ÉµgetOrCreateAngularServerApp is not a function\n    at _AngularAppEngine.getAngularServerAppForRequest (C:\\Project\\rosy-cart\\.angular\\cache\\19.1.4\\rosy-cart\\vite\\deps_ssr\\chunk-VBOT64B7.js:11367:23)\n    at async _AngularAppEngine.handle (C:\\Project\\rosy-cart\\.angular\\cache\\19.1.4\\rosy-cart\\vite\\deps_ssr\\chunk-VBOT64B7.js:11306:23)\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.4\nNode: 20.18.1\nPackage Manager: pnpm 10.0.0\nOS: win32 x64\n\nAngular: 19.1.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.4\n@angular-devkit/build-angular   19.1.4\n@angular-devkit/core            19.1.4\n@angular-devkit/schematics      19.1.4\n@angular/cli                    19.1.4\n@angular/ssr                    19.1.4\n@schematics/angular             19.1.4\nrxjs                            7.8.1\ntypescript                      5.5.4\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29458","RelatedDescription":"Closed issue \"TypeError: ÉµgetOrCreateAngularServerApp is not a function in 19.1.x after fix angular-compiler error\" (#29458)"},{"Id":"2806429342","IsPullRequest":true,"CreatedAt":"2025-01-23T15:06:26","Actor":"alan-agius4","Number":"29462","RawContent":null,"Title":"fix(@angular/build): handle empty module case to avoid TypeError","State":"closed","Body":"Ensure that accessing the module after invalidation doesn't result in an empty module, which causes a `TypeError: ÉµgetOrCreateAngularServerApp is not a function`.\r\n\r\nCloses #29458 and closes #29443","Url":"https://github.com/angular/angular-cli/pull/29462","RelatedDescription":"Closed or merged PR \"fix(@angular/build): handle empty module case to avoid TypeError\" (#29462)"},{"Id":"2805319565","IsPullRequest":true,"CreatedAt":"2025-01-23T14:27:56","Actor":"devversion","Number":"29454","RawContent":null,"Title":"Migrate more tests to `rules_js`, specifically `@angular/build`","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29454","RelatedDescription":"Closed or merged PR \"Migrate more tests to `rules_js`, specifically `@angular/build`\" (#29454)"},{"Id":"2806967398","IsPullRequest":false,"CreatedAt":"2025-01-23T13:51:48","Actor":"mkoncz","Number":"29464","RawContent":null,"Title":"@angular-devkit/build-angular v18.2.12 has vulnerable dependency","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n@angular-devkit/build-angular package with version v18.2.12 has a direct dependency in its package.json config: `\"vite\": \"5.4.6\"`\n\nWe can see in the Mend vulnerability database that the `vite` versions of from the 5.4.x series under 5.4.12 are vulnerable: \nhttps://www.mend.io/vulnerability-database/CVE-2025-24010\n\nThe patch version of \"vite\" in the package.json of @angular-devkit/build-angular should be increased.\n\n### Minimal Reproduction\n\nCommand: `ng build`\n\n\npackage.json\n```\n \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"~18.2.12\",\n    ...\n }\n```\n\npackage-lock.json\n```\n \"node_modules/@angular/build\": {\n      \"version\": \"18.2.12\",\n         \"dependencies\": {\n             \"vite\": \"5.4.6\",\n              ...\n          },\n       ....\n  }\n```\n\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 18.2.12\nNode: 18.20.4\nPackage Manager: npm 10.7.0\nOS: darwin arm64\n\nAngular: 18.2.13\n... animations, common, compiler, compiler-cli, core, elements\n... forms, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.12\n@angular-devkit/build-angular   18.2.12\n@angular-devkit/core            18.2.12\n@angular-devkit/schematics      18.2.12\n@angular/cdk                    18.2.14\n@angular/cli                    18.2.12\n@schematics/angular             18.2.12\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29464","RelatedDescription":"Open issue \"@angular-devkit/build-angular v18.2.12 has vulnerable dependency\" (#29464)"},{"Id":"2806006147","IsPullRequest":true,"CreatedAt":"2025-01-23T10:14:31","Actor":"angular-robot","Number":"29460","RawContent":null,"Title":"build: update dependency tailwindcss to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [tailwindcss](https://tailwindcss.com) ([source](https://redirect.github.com/tailwindlabs/tailwindcss)) | peerDependencies | major | [`^2.0.0 \\|\\| ^3.0.0` -> `^4.0.0`](https://renovatebot.com/diffs/npm/tailwindcss/3.4.17/4.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>tailwindlabs/tailwindcss (tailwindcss)</summary>\n\n### [`v4.0.0`](https://redirect.github.com/tailwindlabs/tailwindcss/blob/HEAD/CHANGELOG.md#400---2025-01-21)\n\n[Compare Source](https://redirect.github.com/tailwindlabs/tailwindcss/compare/v3.4.17...v4.0.0)\n\n#### \\[4.0.0] - 2025-01-21\n\n</details>\n\n---\n\n### Configuration\n\nðŸ“… **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\nðŸš¦ **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\nâ™» **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\nðŸ”• **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29460","RelatedDescription":"Closed or merged PR \"build: update dependency tailwindcss to v4\" (#29460)"},{"Id":"2805346499","IsPullRequest":true,"CreatedAt":"2025-01-22T21:55:47","Actor":"clydin","Number":"29456","RawContent":null,"Title":"build: update Angular versions for 19.2 prereleases","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29456","RelatedDescription":"Closed or merged PR \"build: update Angular versions for 19.2 prereleases\" (#29456)"},{"Id":"2805395394","IsPullRequest":false,"CreatedAt":"2025-01-22T21:37:13","Actor":"clydin","Number":"29457","RawContent":null,"Title":"Tracking: Support i18n component updates (HMR)","State":"open","Body":"Templates that contain i18n and/or manual `$localize` usage should support component updates via the development server HMR.\n\nIf possible, translation file changes should be considered as well. Although this may need to be implemented as a separate feature.","Url":"https://github.com/angular/angular-cli/issues/29457","RelatedDescription":"Open issue \"Tracking: Support i18n component updates (HMR)\" (#29457)"},{"Id":"2805344218","IsPullRequest":false,"CreatedAt":"2025-01-22T21:05:17","Actor":"atsjo","Number":"29455","RawContent":null,"Title":"Dev server not able to resolve dependencies with PNPM","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular 19.1.1\n\n### Description\n\nLocal development not able to resolve som dependencies, see error message below... Downgrading angular to 19.1.1 fixes the problem (I can run with latest cli)\n\n### Minimal Reproduction\n\nTest running ng:serve with a project using angular-calendar on windows...\n\n### Exception or Error\n\n```text\nWatch mode enabled. Watching for file changes...\nNOTE: Raw file sizes do not reflect development server per-request transformations.\nFailed to resolve dependency: angular-draggable-droppable, present in client 'optimizeDeps.include'\nFailed to resolve dependency: angular-resizable-element, present in client 'optimizeDeps.include'\n  âžœ  Local:   http://localhost:4200/\n  âžœ  press h + enter to show help\nRequest for HTML file \"/index.html\" was received but no asset found. Asset may be missing from build.\n21:35:20 [vite] Pre-transform error: Failed to resolve import \"angular-draggable-droppable\" from \".angular/vite-root/devtest/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: D:/repos/teve-no/task4s/.angular/vite-root/devtest/main.js:6393:23\n  6391|  import * as i79 from \"@angular/material/icon\";\n  6392|  import * as i87 from \"angular-calendar\";\n  6393|  import * as i96 from \"angular-draggable-droppable\";\n     |                        ^\n  6394|  import * as i104 from \"angular-resizable-element\";\n  6395|  function tvCalendarComponent_Case_25_Template(rf, ctx) {\n21:35:21 [vite] Internal server error: Failed to resolve import \"angular-draggable-droppable\" from \".angular/vite-root/devtest/main.js\". Does the file exist?\n  Plugin: vite:import-analysis\n  File: D:/repos/teve-no/task4s/.angular/vite-root/devtest/main.js:6393:23\n  6391|  import * as i79 from \"@angular/material/icon\";\n  6392|  import * as i87 from \"angular-calendar\";\n  6393|  import * as i96 from \"angular-draggable-droppable\";\n     |                        ^\n  6394|  import * as i104 from \"angular-resizable-element\";\n  6395|  function tvCalendarComponent_Case_25_Template(rf, ctx) {\n      at TransformPluginContext._formatError (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47397:41)\n      at TransformPluginContext.error (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47392:16)\n      at normalizeUrl (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45642:23)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n      at async file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45761:39\n      at async Promise.all (index 317)\n      at async TransformPluginContext.transform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:45688:7)\n      at async EnvironmentPluginContainer.transform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:47223:18)\n      at async loadAndTransform (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:41034:27)\n      at async viteTransformMiddleware (file:///D:/repos/teve-no/task4s/node_modules/.pnpm/vite@6.0.7_@types+node@22.10.7_jiti@1.21.7_less@4.2.1_sass@1.83.1_stylus@0.64.0_terser@5.37.0_yaml@2.7.0/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:42478:24)\n```\n\n### Your Environment\n\n```text\nUsing latest angular 19.1.3, with cli 19.1.4 on windows and nx.\nTried both angular and nx executors/builders...\n\nNode           : 22.13.0\nOS             : win32-x64\nNative Target  : x86_64-windows\npnpm           : 9.15.4\n\nnx                     : 20.3.2\n@nx/js                 : 20.3.2\n@nx/eslint             : 20.3.2\n@nx/workspace          : 20.3.2\n@nx/angular            : 20.3.2\n@nx/devkit             : 20.3.2\n@nx/esbuild            : 20.3.2\n@nx/eslint-plugin      : 20.3.2\n@nx/module-federation  : 20.3.2\n@nx/vite               : 20.3.2\n@nx/web                : 20.3.2\n@nx/webpack            : 20.3.2\ntypescript             : 5.7.3\n---------------------------------------\nRegistered Plugins:\n@nx/eslint/plugin\n@nx/vite/plugin\n---------------------------------------\nCommunity plugins:\n@analogjs/vite-plugin-angular : 1.12.1\n@analogjs/vitest-angular      : 1.12.1\nangular-calendar              : 0.31.1\nangular-eslint                : 19.0.2\n```\n\n### Anything else relevant?\n\nRunning windows...","Url":"https://github.com/angular/angular-cli/issues/29455","RelatedDescription":"Open issue \"Dev server not able to resolve dependencies with PNPM\" (#29455)"},{"Id":"2805282528","IsPullRequest":true,"CreatedAt":"2025-01-22T20:39:23","Actor":"clydin","Number":"29453","RawContent":null,"Title":"docs: release notes for the v19.1.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29453","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.4 release\" (#29453)"},{"Id":"2805215491","IsPullRequest":true,"CreatedAt":"2025-01-22T20:19:26","Actor":"clydin","Number":"29451","RawContent":null,"Title":"Bump version to \"v19.1.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29451","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.4\" with changelog.\" (#29451)"},{"Id":"2804919539","IsPullRequest":false,"CreatedAt":"2025-01-22T17:08:50","Actor":"LMFinney","Number":"29448","RawContent":null,"Title":"Erroneous \"Could not find package.json\" error on upgrading to Angular 19","State":"open","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen running `ng update @angular/core@19 @angular/cli@19` as suggested by https://angular.dev/update-guide?v=18.0-19.0&l=2, I get an error \"Could not find package.json\". However, the file is definitely there.\n\nThanks to the `angular-errors.log`, I was able to isolate the problem to `node_modules/@angular/cli/src/utilities/package-tree.js`. With some console logging, I was able to isolate the problem to `readPackageJson()`. For some reason, `fs.promises.readFile(packageJsonPath)` is returning an extra space at the beginning of the text, so, `JSON.parse()` can't read it.\n\nI was able to fix it locally by changing `(await fs.promises.readFile(packageJsonPath)).toString()` to `(await fs.promises.readFile(packageJsonPath)).toString().trim()`, and it seemed to work well.\n\nIs there any possible problem with adding `trim()` to that line? If not, can we add it?\n\n### Minimal Reproduction\n\nI don't know why this is happening for me and not others. Perhaps there's a problem in the `fs.promises.readFile()` implementation I have. However, it's fixed by adding just `trim()`.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.11\n@angular-devkit/build-angular   18.2.11\n@angular-devkit/core            18.2.11\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    18.2.11\n@angular/cli                    19.1.3\n@angular/flex-layout            15.0.0-beta.42\n@angular/material               18.2.11\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29448","RelatedDescription":"Open issue \"Erroneous \"Could not find package.json\" error on upgrading to Angular 19\" (#29448)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2810440926","IsPullRequest":true,"CreatedAt":"2025-01-24T21:53:44","Actor":"kseamon","Number":"30386","RawContent":null,"Title":"perf(material/checkbox): Optimize css selectors","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30386","RelatedDescription":"Open PR \"perf(material/checkbox): Optimize css selectors\" (#30386)"},{"Id":"2807483722","IsPullRequest":true,"CreatedAt":"2025-01-24T16:38:51","Actor":"kseamon","Number":"30378","RawContent":null,"Title":"fix(cdk/table): Column sizing and scrolling bug when number of columnâ€¦","State":"closed","Body":"â€¦s in table changes\r\n\r\nPart of fix includes cdk-experimental/column-resize.\r\n\r\nSee internal issue 390466445.","Url":"https://github.com/angular/components/pull/30378","RelatedDescription":"Closed or merged PR \"fix(cdk/table): Column sizing and scrolling bug when number of columnâ€¦\" (#30378)"},{"Id":"2809768543","IsPullRequest":true,"CreatedAt":"2025-01-24T15:49:09","Actor":"kseamon","Number":"30385","RawContent":null,"Title":"perf(material/button): Change frequently missed descendant selectors â€¦","State":"open","Body":"â€¦to child selectors","Url":"https://github.com/angular/components/pull/30385","RelatedDescription":"Open PR \"perf(material/button): Change frequently missed descendant selectors â€¦\" (#30385)"},{"Id":"2807880529","IsPullRequest":true,"CreatedAt":"2025-01-24T15:48:08","Actor":"kseamon","Number":"30379","RawContent":null,"Title":"perf(material/button): Use child rather than descendant selectors.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30379","RelatedDescription":"Closed or merged PR \"perf(material/button): Use child rather than descendant selectors.\" (#30379)"},{"Id":"2809496245","IsPullRequest":false,"CreatedAt":"2025-01-24T13:44:05","Actor":"twittwer","Number":"30384","RawContent":null,"Title":"feat(CdkMenu): Option to disable typeahead in CdkMenu","State":"open","Body":"### Feature Description\n\nWe would like to add an option in the `CdkMenu` to disable the integrated TypeAhead feature.\n\nCurrently, the menu activates the TypeAhead for its `FocusKeyManager` automatically:\nhttps://github.com/angular/components/blob/e91d5091bbf3d44cc168be458269d260a0c22c27/src/cdk/menu/menu-base.ts#L175\n\nThe proposal would be to add an input like `cdkMenuTypeAhead: boolean` which defaults to true but can be used to skip the TypeAhead activation:\n```ts\nthis.keyManager = new FocusKeyManager(this.items).withWrap().withHomeAndEnd();\nif (this.cdkMenuTypeAhead) {\n  this.keyManager = this.keyManager.withTypeAhead()\n}\n```\n\n#### Alternative\n\nAn alternative approach might be a combination of the following features, so the described use case can be accomplished by the `CdkMenu` itself.\n1. Make the current search term (`_pressedLetters`) publicly available, so it can be displayed.\n2. Two variants to extend the current search logic:  \n  2.a Add a secondary `includes` search to the current `startsWith`.\n  2.b Make the search logic customizable with configurable predicate function.\n\n### Use Case\n\nThe use case is a custom search feature for our menus, which conflicts with the integrated TypeAhead.\nWe want to display the current search term and search by `startsWith` & `includes`.\n\n![Image](https://github.com/user-attachments/assets/9a9823aa-e645-4c02-98c8-71e8361e8178) ![Image](https://github.com/user-attachments/assets/be067fd8-0133-498d-a702-b3534632be16)\n\n***\n\n**ðŸ—¨ I would appreciate some feedback, if this feature has a chance of being accepted. Then I can prepare a PR for this.**","Url":"https://github.com/angular/components/issues/30384","RelatedDescription":"Open issue \"feat(CdkMenu): Option to disable typeahead in CdkMenu\" (#30384)"},{"Id":"2809256110","IsPullRequest":false,"CreatedAt":"2025-01-24T11:51:24","Actor":"SvenBudak","Number":"30383","RawContent":null,"Title":"Make components that use Rippe configurable as default options","State":"open","Body":"### Feature Description\n\nI use a materialConfig to design my Material components uniformly across multiple apps. For certain Material components, I donâ€™t want to use the ripple effect. Currently, Iâ€™m achieving this for mat-input using CSS like this:\n```scss\nmat-form-field .mdc-line-ripple { \n  display: none; \n}\n```\nSince Iâ€™m not sure if this works for textarea, other appearances, etc., it would be nice to have a configuration to disable the ripple effect consistently:\n```ts\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\n\nexport const materialConfig = [\n  {\n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n    useValue: {\n      ripple: false, // For example, like this.\n      floatLabel: 'always',\n    } as MatFormFieldDefaultOptions,\n  },\n];\n```\nAlternatively, this could be handled via a CSS variable, but I would prefer a DefaultOption.","Url":"https://github.com/angular/components/issues/30383","RelatedDescription":"Open issue \"Make components that use Rippe configurable as default options\" (#30383)"},{"Id":"2802264350","IsPullRequest":false,"CreatedAt":"2025-01-24T07:54:33","Actor":"Fernando-Zhunio","Number":"30361","RawContent":null,"Title":"ANativeDateAdapter class parse method error","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the parse method he takes two arguments, the second which is the format does not use it.\nWhen the mat-date-range-input component is called and value is entered and the format is set to the non-default (MM/dd/yyyy) it is repositioned.\nIt only happens when editing without the date picker.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. A format of 'dd/MM/yyyy' is set in the module providers and the Locate is set to 'es-ES'.\n2. The mat-date-range-input component is rendered.\n3. A date range is selected using the selector in the ui.\n4. Any date is edited in the input on that date.\n5. The day changes position in the competitor blur event (BUG), as it calls the event parse before the blur the date does not take it with the format it is\n\n### Expected Behavior\n\nIt should respect the format defined in the providers\n\n### Actual Behavior\n\nThe month with the day in the blur event of the mentioned component is repositioned\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows):\n","Url":"https://github.com/angular/components/issues/30361","RelatedDescription":"Closed issue \"ANativeDateAdapter class parse method error\" (#30361)"},{"Id":"2800452085","IsPullRequest":false,"CreatedAt":"2025-01-24T07:48:59","Actor":"zohar-chiprut","Number":"30359","RawContent":null,"Title":"Package.json contains duplicate key in exports","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDuplicat key might cause unexpected behavior to consumers importing the package.\n```\n{\n  \"name\": \"@angular/material\",\n  \"version\": \"19.1.0\",\n  \"description\": \"Angular Material\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/angular/components.git\"\n  },\n...\n  \"exports\": {\n      \".\": {\n        \"sass\": \"./_index.scss\",\n        \"types\": \"./index.d.ts\",\n        \"default\": \"./fesm2022/material.mjs\"\n      },\n      \"./theming\": {\n        \"sass\": \"./_theming.scss\"\n      },\n      \"./_theming\": {                              //duplicate key\n        \"sass\": \"./_theming.scss\".   \n      },\n  ...\n  }\n...\n}\n```\n\n### Reproduction\n\nKInorder to reproduce the issuew just npm install @angular/material@19.0.1 and view exports files in package.json, it contains duplicate key \"./theming\"\n\n### Expected Behavior\n\nRemove duplicate keys in exports filed in package.json\n\n### Actual Behavior\n\nthe package contains duplicate key in exports prop\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.1.0\n- Browser(s): Nodejs/ pnpm install\n- Operating macOs\n","Url":"https://github.com/angular/components/issues/30359","RelatedDescription":"Closed issue \"Package.json contains duplicate key in exports\" (#30359)"},{"Id":"2808586473","IsPullRequest":true,"CreatedAt":"2025-01-24T06:08:32","Actor":"crisbeto","Number":"30381","RawContent":null,"Title":"fix(material/snack-bar): switch away from animations module","State":"open","Body":"Reworks the snack bar so it animates using CSS instead of the animations module.","Url":"https://github.com/angular/components/pull/30381","RelatedDescription":"Open PR \"fix(material/snack-bar): switch away from animations module\" (#30381)"},{"Id":"2808233667","IsPullRequest":true,"CreatedAt":"2025-01-24T00:36:06","Actor":"essjay05","Number":"30380","RawContent":null,"Title":"fix(material/button): increase touch target for icon buttons","State":"open","Body":"Updates Angular Components Button styles for icon buttons to add pseudo class styles to increase the icon buttons' target size.\r\n\r\n[Before screenshot](https://screenshot.googleplex.com/ANaWFgBfuYWC4gA)\r\nUpdated after screenshot with refactor:\r\n[After screenshot](https://screenshot.googleplex.com/6XTsmMHqybgePAC)\r\n\r\nFixes b/378903269","Url":"https://github.com/angular/components/pull/30380","RelatedDescription":"Open PR \"fix(material/button): increase touch target for icon buttons\" (#30380)"},{"Id":"2804709428","IsPullRequest":false,"CreatedAt":"2025-01-23T17:36:42","Actor":"richardsengers","Number":"30368","RawContent":null,"Title":"bug(button-toggle): strong focus indicator for vertical button-group has wrong shape for first and last item","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe strong focus borders are not rotated for the first and last item\n\n<img width=\"44\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/36f68968-0e1c-489a-aa68-1a0a20a076cf\" />\n\n<img width=\"42\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/55f5cba3-f4ef-4dfb-b37c-eee407474a83\" />\n\n\n\n### Reproduction\n\nStackBlitz link: Stackblitz is not working at the moment, but I think my screenshots tell enough :-)\n\n\n\n### Expected Behavior\n\nMake the focus indicator rotate for the first and alst item in a button-toggle\n\n### Actual Behavior\n\nWrong rotation\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30368","RelatedDescription":"Closed issue \"bug(button-toggle): strong focus indicator for vertical button-group has wrong shape for first and last item\" (#30368)"},{"Id":"2806500734","IsPullRequest":true,"CreatedAt":"2025-01-23T17:36:40","Actor":"crisbeto","Number":"30376","RawContent":null,"Title":"fix(material/button-toggle): incorrect shape of focus indicator in vertical group","State":"closed","Body":"Fixes that the first/last buttons in a vertical button group had the wrong shape.\r\n\r\nFixes #30368.","Url":"https://github.com/angular/components/pull/30376","RelatedDescription":"Closed or merged PR \"fix(material/button-toggle): incorrect shape of focus indicator in vertical group\" (#30376)"},{"Id":"2802906542","IsPullRequest":true,"CreatedAt":"2025-01-23T17:32:33","Actor":"crisbeto","Number":"30363","RawContent":null,"Title":"fix(material/select): switch away from animations module","State":"closed","Body":"Reworks the select so it doesn't depend on the animations module.","Url":"https://github.com/angular/components/pull/30363","RelatedDescription":"Closed or merged PR \"fix(material/select): switch away from animations module\" (#30363)"},{"Id":"2807362179","IsPullRequest":false,"CreatedAt":"2025-01-23T16:26:17","Actor":"SvenBudak","Number":"30377","RawContent":null,"Title":"Better readable SCSS variable names","State":"open","Body":"### Feature Description\n\nI'm currently styling my Material components and find it incredibly time-consuming to keep track of everything.\n\n```scss\n:root { \n  @include mat.form-field-overrides(( \n    filled-label-text-color: #303030, \n    filled-hover-label-text-color: red, \n    filled-focus-label-text-color: blue,  \n  )); \n}\n```\n\nIt would be so much easier to read if the variables were named like this:\n```scss\nfilled-label-text-color: #303030  \nfilled-label-text-color-hover: red  \nfilled-label-text-color-focus: blue  \n```\n\nIâ€™m aware that even if this were considered \"correct,\" it probably wouldnâ€™t be changed retroactively since it would be a breaking change... but hope dies last.","Url":"https://github.com/angular/components/issues/30377","RelatedDescription":"Open issue \"Better readable SCSS variable names\" (#30377)"},{"Id":"2804932108","IsPullRequest":true,"CreatedAt":"2025-01-23T13:43:28","Actor":"devversion","Number":"30373","RawContent":null,"Title":"build: fix docs deployment and monitoring","State":"closed","Body":"The docs deploy job currently tries to inject/install our snapshot\r\nbuilds, but Yarn 2.x doesn't allow it by default.\r\n\r\nIn addition, GitHub actions execute with Ubuntu 24 as of recently, as\r\nthis requires additional pre-setup to be able to execute Chromium via\r\nPupeteer.","Url":"https://github.com/angular/components/pull/30373","RelatedDescription":"Closed or merged PR \"build: fix docs deployment and monitoring\" (#30373)"},{"Id":"2806054887","IsPullRequest":false,"CreatedAt":"2025-01-23T06:39:48","Actor":"shhdharmen","Number":"30375","RawContent":null,"Title":"bug(TABS): tabs with fitInkBarToContent does not follow Material 3 design specs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAs per [Material 3 guidelines](https://m3.material.io/components/tabs/specs), primary tabs should have active indicator's height of `3px` and shape of `3px 3px 0 0`. In Angular Material, primary tabs' behaviour can be achieved using `[fitInkBarToContent]=true` input.\n\nBut, they have height of `2px`, and shape of `0`, which is right only for secondary tabs.\n\nWe can override it by using `tabs-overrides` mixin like below:\n\n```scss\n@use '@angular/material' as mat;\n\n[fitInkBarToContent],\n[ng-reflect-fit-ink-bar-to-content='true'] {\n  > .mat-mdc-tab-header {\n    @include mat.tabs-overrides(\n      (\n        active-indicator-shape: 3px 3px 0 0,\n        active-indicator-height: 3px,\n      )\n    );\n  }\n}\n```\n\nBut, it should be the default behaviour as per Material 3 specs.\n\n### Reproduction\n\nNot needed.\n\n### Expected Behavior\n\nTabs with `[fitInkBarToContent]=true` should have active indicator's height of `3px` and shape of `3px 3px 0 0`.\n\n### Actual Behavior\n\nTabs with `[fitInkBarToContent]=true` have active indicator's height of `2px`, and shape of `0`.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30375","RelatedDescription":"Open issue \"bug(TABS): tabs with fitInkBarToContent does not follow Material 3 design specs\" (#30375)"},{"Id":"2805225551","IsPullRequest":true,"CreatedAt":"2025-01-22T19:53:51","Actor":"andrewseguin","Number":"30374","RawContent":null,"Title":"fix(material/select): remove value from aria-labelledby","State":"open","Body":"Remove the select value's element ID from the combobox's list of `aria-labelledby`\r\n\r\nCloses #24899 ","Url":"https://github.com/angular/components/pull/30374","RelatedDescription":"Open PR \"fix(material/select): remove value from aria-labelledby\" (#30374)"},{"Id":"2804869874","IsPullRequest":true,"CreatedAt":"2025-01-22T17:02:18","Actor":"devversion","Number":"30372","RawContent":null,"Title":"build: initial attempt to fix docs site deployment","State":"closed","Body":"This fixes a few issues:\r\n\r\n- uses the monorepo checked-in docs sources for deployment of >=v19\r\n- properly installs dependencies for that repository, avoiding mismatches with the checked-in yarn of the monorepo root.\r\n- avoids sandbox when launching puppeteer for audits","Url":"https://github.com/angular/components/pull/30372","RelatedDescription":"Closed or merged PR \"build: initial attempt to fix docs site deployment\" (#30372)"},{"Id":"2804792490","IsPullRequest":true,"CreatedAt":"2025-01-22T16:12:10","Actor":"crisbeto","Number":"30371","RawContent":null,"Title":"Bump version to \"v19.2.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30371","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.1\" with changelog.\" (#30371)"},{"Id":"2804777616","IsPullRequest":true,"CreatedAt":"2025-01-22T16:08:13","Actor":"crisbeto","Number":"30370","RawContent":null,"Title":"docs: release notes for the v19.1.1 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30370","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.1 release\" (#30370)"},{"Id":"2804770119","IsPullRequest":true,"CreatedAt":"2025-01-22T16:03:24","Actor":"crisbeto","Number":"30369","RawContent":null,"Title":"Bump version to \"v19.1.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30369","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.1\" with changelog.\" (#30369)"},{"Id":"2804126233","IsPullRequest":true,"CreatedAt":"2025-01-22T11:24:47","Actor":"AJJPostma","Number":"30367","RawContent":null,"Title":"fix(material/select): fixed text color for selected options in multiple select","State":"open","Body":"Fixes a bug in the Angular Material `select` component where the selected options in a  `select` with the multiple attribute have the wrong text color. This is because the the text color styling for the `select` without the multiple attribute is applied.\r\n\r\nfixes #30366 ","Url":"https://github.com/angular/components/pull/30367","RelatedDescription":"Open PR \"fix(material/select): fixed text color for selected options in multiple select\" (#30367)"},{"Id":"2804107534","IsPullRequest":false,"CreatedAt":"2025-01-22T11:15:56","Actor":"AJJPostma","Number":"30366","RawContent":null,"Title":"bug(select): multiple select uses single select text color for selected options (on-secondary-container)","State":"open","Body":"\n### Description\n\nWhen using a single select, the selected option gets seconary-container backround color with on-secondary-container text color. When using a multiple select the backround color of selected options stays the same (because there already is a checkbox to show selected state), but the text color still changes to on-secondary-container making it potentially hard to read (depending on your theme).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-starter-zxlbij2m\n1.  Select an option in the single select\n2. Select an option in the multiple select\n3. See invisible selected item in multiple select.\n\n\n### Expected Behavior\n\nmat-option text color should only change when selected for single select\n\n### Actual Behavior\n\nmat-option, in mat-select with multiple, text color changes when selected, making it hard/impossible to see on some color schemes.\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30366","RelatedDescription":"Open issue \"bug(select): multiple select uses single select text color for selected options (on-secondary-container)\" (#30366)"},{"Id":"2803262756","IsPullRequest":true,"CreatedAt":"2025-01-22T03:12:20","Actor":"essjay05","Number":"30364","RawContent":null,"Title":"fix(material/chips): update chip-row disabled chip to be focused","State":"open","Body":"Updates chip-row element of Angular Components Chip Component to be focusable even if the chip is disabled. This allows the chip to be accessed via screenreader and read aloud as a disabled chip.\r\n\r\nFixes b/380373844","Url":"https://github.com/angular/components/pull/30364","RelatedDescription":"Open PR \"fix(material/chips): update chip-row disabled chip to be focused\" (#30364)"},{"Id":"2802474857","IsPullRequest":false,"CreatedAt":"2025-01-21T17:53:52","Actor":"bmayen","Number":"30362","RawContent":null,"Title":"bug(select): Non-native Selects do not announce state properly with screen readers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nReported by our accessibility team:\n\"When the selects are activated the state is not communicated. In JAWS neither state is communicated, in NVDA only the collapsed state is communicated.\"\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nShould announce different states on state changes\n\n### Actual Behavior\n\nIn JAWS neither state is communicated, in NVDA only the collapsed state is communicated\n\n### Environment\n\n- Angular: 18.x\n- CDK/Material: 18.x\n- Browser(s): Chromium\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows/OSX\n","Url":"https://github.com/angular/components/issues/30362","RelatedDescription":"Open issue \"bug(select): Non-native Selects do not announce state properly with screen readers\" (#30362)"},{"Id":"2801678872","IsPullRequest":true,"CreatedAt":"2025-01-21T14:10:40","Actor":"crisbeto","Number":"30360","RawContent":null,"Title":"fix(material/datepicker): switch away from animations module","State":"closed","Body":"Reworks the datepicker so it no longer depends on the animations module.","Url":"https://github.com/angular/components/pull/30360","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): switch away from animations module\" (#30360)"},{"Id":"2799275893","IsPullRequest":true,"CreatedAt":"2025-01-21T13:10:16","Actor":"crisbeto","Number":"30356","RawContent":null,"Title":"fix(material/autocomplete): switch away from animations module","State":"closed","Body":"Switches the autocomplete away from the animations module. The animations are implemented using CSS instead.","Url":"https://github.com/angular/components/pull/30356","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): switch away from animations module\" (#30356)"},{"Id":"2799093523","IsPullRequest":true,"CreatedAt":"2025-01-21T12:53:17","Actor":"crisbeto","Number":"30355","RawContent":null,"Title":"fix(cdk/text-field): clear cached line height on resize","State":"closed","Body":"Clears the cached heights in the autosize directive when the window is resized since they may change.","Url":"https://github.com/angular/components/pull/30355","RelatedDescription":"Closed or merged PR \"fix(cdk/text-field): clear cached line height on resize\" (#30355)"},{"Id":"2800057420","IsPullRequest":false,"CreatedAt":"2025-01-21T12:39:40","Actor":"luvcraft1228","Number":"30358","RawContent":null,"Title":"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.14\n\n### Description\n\nIn a space constrained layout, submenus will occasionally overlap with parent menus. When clicking a parent item with the intention of opening a submenu, the submenu will appear over the parent item and seem to receive a mouse event, thereby selecting it. This behavior is unexpected and could lead to accidental user actions.\n\n### Reproduction\n\nReproduction\nSteps to reproduce:\n\nhttps://material.angular.io/components/menu/examples\nPick mat-menu\nIn dev tools set screen to 256px wide\nClick nested menu -> Animal index -> click near arrow on vertebrates\nMammals will be selected accidentally\n\nPlease see reference to [old issue](https://github.com/angular/components/issues/26306) (v14). Seems to be the same problem. Was fixed in v18.\n\n\n\n\n\n### Expected Behavior\n\n\nExpected Behavior\nSubmenu should not have an item selected as a result of a click on its parent.\n\n![Image](https://github.com/user-attachments/assets/f95787e4-76f9-4272-9480-e0956907e63b)\n\n### Actual Behavior\n\nActual Behavior\nSubmenu has an item selected as a result of a click on its parent.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.0.5\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows / Android\n","Url":"https://github.com/angular/components/issues/30358","RelatedDescription":"Closed issue \"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent\" (#30358)"},{"Id":"2799605427","IsPullRequest":false,"CreatedAt":"2025-01-21T12:33:29","Actor":"sherinkd","Number":"30357","RawContent":null,"Title":"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\nEntered Date: 1999-01-01\nExpected Date: 01/01/1999\n\n![Image](https://github.com/user-attachments/assets/8becb99d-3805-4af9-8851-47e4d8b661dc)\n\n### Reproduction\n\nStep 1: Enter Date: 1999-01-01\nStep 2: blur out\n\n\n### Expected Behavior\n\nExpected Date: 01/01/1999\n\n### Actual Behavior\n\nDisplayed Date: 10/9/1999\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material:  19.0.4\n- Browser(s): any browser\n- Operating System (e.g. Windows, macOS, Ubuntu): any OS\n","Url":"https://github.com/angular/components/issues/30357","RelatedDescription":"Closed issue \"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\" (#30357)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-25T03:30:02.6770082Z","RunDurationInMilliseconds":1479}