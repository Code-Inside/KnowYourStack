{"Data":{"Angular-Issues":{"Issues":[{"Id":"3165463638","IsPullRequest":true,"CreatedAt":"2025-06-21T23:21:26","Actor":"aparzi","Number":"62185","RawContent":null,"Title":"feat(common): feat interceptor accepts promise","State":"closed","Body":"Feat #61451 - interceptor accepts promise\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nActual interceptor accept only Observable type\r\n\r\nIssue Number: #61451 \r\n\r\n\r\n## What is the new behavior?\r\n\r\nInterceptor accept promise\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n","Url":"https://github.com/angular/angular/pull/62185","RelatedDescription":"Closed or merged PR \"feat(common): feat interceptor accepts promise\" (#62185)"},{"Id":"3165497585","IsPullRequest":true,"CreatedAt":"2025-06-21T23:18:17","Actor":"wbreakell","Number":"62187","RawContent":null,"Title":"docs: update link to cache options","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrently, the \"CLI Cache\" link points to the archived documentation on https://angular.io.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe link now points to the same cache options documentation on https://angular.dev.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->","Url":"https://github.com/angular/angular/pull/62187","RelatedDescription":"Open PR \"docs: update link to cache options\" (#62187)"},{"Id":"3165463688","IsPullRequest":true,"CreatedAt":"2025-06-21T22:04:24","Actor":"arturovt","Number":"62186","RawContent":null,"Title":"fix(router): handle scrollRestoration error in restricted environments","State":"open","Body":"In this commit, setting `window.history.scrollRestoration` is wrapped in a try-catch block to prevent `SecurityError` exceptions in restricted contexts such as:\r\n\r\n- sandboxed iframes\r\n- partially navigated or inactive windows\r\n- test runners, extensions, or content previews\r\n\r\nIf an error occurs, a runtime warning with error code [2400] is logged to the console. This avoids breaking app initialization and improves cross-browser safety.\r\n\r\nUnfortunately, it's not possible to perform any end-to-end testing of this fix.","Url":"https://github.com/angular/angular/pull/62186","RelatedDescription":"Open PR \"fix(router): handle scrollRestoration error in restricted environments\" (#62186)"},{"Id":"3165239746","IsPullRequest":false,"CreatedAt":"2025-06-21T17:13:58","Actor":"krp12345","Number":"62183","RawContent":null,"Title":"Enhancement Suggestion for ngAfterContentInit Documentation","State":"open","Body":"### Describe the problem that you experienced\n\nHi Angular Team and Community,\n\nApologies if I'm bringing up this topic again with too much emphasis — my only goal is to help make the Angular documentation even more elegant and awesome. 😊\n\nWhile exploring the ngAfterContentInit lifecycle hook, I noticed that the current documentation states:\n\n    \"A lifecycle hook that is called after Angular has fully initialized all content of a directive\"\n\nHowever, it doesn't clearly explain which lifecycle hooks are triggered on projected components before ngAfterContentInit is invoked on the host component.\n\nTo better understand this, I did a quick PoC and found that Angular ensures all projected content components execute their lifecycle hooks up to ngDoCheck before calling ngAfterContentInit on the host component.\n\nHere is a link : https://stackblitz.com/edit/demo-angular-standalone-components-3xpp6hso?file=src%2Fapp%2Fapp.component.ts\n\nI’ve previously opened issues and PRs to improve the description around this hook, and I'm recreating this thread to continue the conversation and propose possible documentation improvements if the core team sees merit in it.\n\nJust to clarify — I understand ngAfterContentInit is called only once on the host component, and that behavior is clear.\n\nThanks for your time and for maintaining such an incredible framework! 🙌\nLooking forward to the community's thoughts.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/api/core/AfterContentInit\n\n### Describe what you were looking for in the documentation\n\nI was looking for a clear explanation of which lifecycle hooks are executed on projected content components before ngAfterContentInit is triggered on the host component — essentially, a more detailed description of what \"fully initialized\" means in this context.\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/62183","RelatedDescription":"Open issue \"Enhancement Suggestion for ngAfterContentInit Documentation\" (#62183)"},{"Id":"3164859299","IsPullRequest":false,"CreatedAt":"2025-06-21T10:23:58","Actor":"ferhado","Number":"62181","RawContent":null,"Title":"Signal initial null value and template null-check cause unnecessary type errors despite @if guard","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWhen using signals with a type that requires an initial value, I must set it to `null` or `undefined` (e.g., `signal<User | null>(null)`). In the template, I guard access with `@if (currentUser()) { ... }`. However, it still reports a type error when accessing properties like `currentUser().name` unless I use the safe navigation operator `?.`.\n\nThis means the null check in `@if` is ignored for type narrowing.\n\nExample:\n\n```ts\ncurrentUser = signal<User>();\n```\n\nIt requires an initial value. Since you don’t have a user yet, you must initialize it with `null` or `undefined`:\n\n```ts\ncurrentUser = signal<User | null>(null);\n```\n\nIn the template, when you try:\n\n```html\n@if (currentUser()) { <!-- Ignored -->\n  <p>{{ currentUser().name }}</p> <!-- Type error -->\n}\n```\n\nThe `@if` directive is ignored for type narrowing, so you get a type error on `currentUser().name`. You have to write it like this:\n\n```html\n@if (currentUser()) {\n  <p>{{ currentUser()?.name }}</p>\n}\n```\n\nThis works and is acceptable, but it feels verbose and redundant.\n\nNow, when you have a dumb component where the user input is required:\n\n```ts\nuser = input.required<User>();\n```\n\nYou are sure the user will always be provided, so you want to avoid unnecessary null checks. But in the template:\n\n```html\n@if (currentUser()) { <!-- Ignored -->\n  <show-user [user]=\"currentUser()\" /> <!-- Type error -->\n}\n```\n\nYou still get a type error because the `@if` directive does not narrow the type properly. To avoid this, you have to accept null in the input as well:\n\n```ts\nuser = input.required<User | null>();\n```\n\nThis forces you to write many unnecessary null checks even when you are sure the data is present.\n\nThe root cause is that the `@if` directive ignores type narrowing on signals, leading to awkward template code and type errors even where data is guaranteed to be non-null.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nX [ERROR] NG1: Object is possibly 'null'\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.3\nNode: 22.13.1\nPackage Manager: npm 11.4.1\nOS: win32 x64\n\nAngular: 20.0.4\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cdk                 20.0.3\n@angular/cli                 20.0.3\n@angular/material            20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/62181","RelatedDescription":"Closed issue \"Signal initial null value and template null-check cause unnecessary type errors despite @if guard\" (#62181)"},{"Id":"3164905412","IsPullRequest":false,"CreatedAt":"2025-06-21T08:23:32","Actor":"theo-matzavinos","Number":"62182","RawContent":null,"Title":"DestroyRef timing differs from ngOnDestroy","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIt seems that callbacks registered with DestroyRef run after the component is destroyed whereas the ngOnDestroy hook runs before. Is this a bug or undocumented behavior?\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-2wrenhca?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nNG0953: Unexpected emit for destroyed `OutputRef`. The owning directive/component is destroyed.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.0\nNode: 20.19.1\nPackage Manager: npm 10.8.2\nOS: linux x64\n\nAngular: 20.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.0\n@angular-devkit/core         20.0.0\n@angular-devkit/schematics   20.0.0\n@schematics/angular          20.0.0\nrxjs                         7.8.2\ntypescript                   5.8.2\nzone.js                      0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/62182","RelatedDescription":"Open issue \"DestroyRef timing differs from ngOnDestroy\" (#62182)"},{"Id":"3164583435","IsPullRequest":false,"CreatedAt":"2025-06-21T01:25:46","Actor":"szigetib95","Number":"62177","RawContent":null,"Title":"httpResource docs is not working","State":"closed","Body":"### Describe the problem that you experienced\n\nhttps://angular.dev/guide/http/httpResource\n\npage seems to be broken.\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/http/httpResource\n\n### Describe what you were looking for in the documentation\n\nI wanted to check docs for httpResource\n\n### Describe the actions that led you to experience the problem\n\nclicking on link from signal resource page\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![Image](https://github.com/user-attachments/assets/44cc2d91-b795-4022-b040-1e47bf4c717b)\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/62177","RelatedDescription":"Closed issue \"httpResource docs is not working\" (#62177)"},{"Id":"3164599114","IsPullRequest":true,"CreatedAt":"2025-06-21T01:25:45","Actor":"JeanMeche","Number":"62180","RawContent":null,"Title":"docs: fix link to http-resource guide","State":"closed","Body":"fixes #62177\r\n","Url":"https://github.com/angular/angular/pull/62180","RelatedDescription":"Closed or merged PR \"docs: fix link to http-resource guide\" (#62180)"},{"Id":"3164597665","IsPullRequest":true,"CreatedAt":"2025-06-21T00:35:17","Actor":"JeanMeche","Number":"62179","RawContent":null,"Title":"docs(docs-infra): fix & simplify scrolling for code blocks","State":"open","Body":"The shiki highlighter introduced it's own `pre` block which resulted in nested `pre` in each code blocks. \r\n\r\n\r\nThis commit simplifies a bit the generated HTML and also improve the UX of scrollbars. \r\n\r\nUX improvement visible here: https://ng-dev-previews-fw--pr-angular-angular-62179-adev-prev-a3sl0awp.web.app/ai/develop-with-ai\r\n","Url":"https://github.com/angular/angular/pull/62179","RelatedDescription":"Open PR \"docs(docs-infra): fix & simplify scrolling for code blocks\" (#62179)"},{"Id":"3164593299","IsPullRequest":true,"CreatedAt":"2025-06-21T00:29:08","Actor":"JeanMeche","Number":"62178","RawContent":null,"Title":"docs: add `css` to the supported language for highligting in docs-code","State":"open","Body":"css usage was introduced by #60984\r\n\r\ndemo: https://ng-dev-previews-fw--pr-angular-angular-62178-adev-prev-hidw2a01.web.app/guide/animations/css\r\n","Url":"https://github.com/angular/angular/pull/62178","RelatedDescription":"Open PR \"docs: add `css` to the supported language for highligting in docs-code\" (#62178)"},{"Id":"3164498060","IsPullRequest":true,"CreatedAt":"2025-06-20T22:41:19","Actor":"atscott","Number":"62176","RawContent":null,"Title":"test(router): Add test for empty path redirect and no match","State":"open","Body":"this was discovered during some other work in the router that unintentionally changed this behavior\r\n","Url":"https://github.com/angular/angular/pull/62176","RelatedDescription":"Open PR \"test(router): Add test for empty path redirect and no match\" (#62176)"},{"Id":"3164216323","IsPullRequest":true,"CreatedAt":"2025-06-20T22:29:27","Actor":"JeanMeche","Number":"62173","RawContent":null,"Title":"docs: embeded best practices in page","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/62173","RelatedDescription":"Closed or merged PR \"docs: embeded best practices in page\" (#62173)"},{"Id":"3163659621","IsPullRequest":true,"CreatedAt":"2025-06-20T21:43:27","Actor":"angular-robot","Number":"62163","RawContent":null,"Title":"build: update cross-repo angular dependencies (20.0.x)","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `c2b8d84` -> `2299bd9` |\n| angular/dev-infra | action | digest | `f028906` -> `14b8cef` |\n| devinfra | git_repository | digest | `f028906` -> `14b8cef` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiI0MC42Mi4xIiwidXBkYXRlZEluVmVyIjoiNDAuNjIuMSIsInRhcmdldEJyYW5jaCI6IjIwLjAueCIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/62163","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies (20.0.x)\" (#62163)"},{"Id":"3163652400","IsPullRequest":true,"CreatedAt":"2025-06-20T21:42:51","Actor":"angular-robot","Number":"62162","RawContent":null,"Title":"build: update cross-repo angular dependencies (main)","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `c2b8d84` -> `2299bd9` |\n| angular/dev-infra | action | digest | `f028906` -> `14b8cef` |\n| devinfra | git_repository | digest | `f028906` -> `14b8cef` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiI0MC42Mi4xIiwidXBkYXRlZEluVmVyIjoiNDAuNjIuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IG1pbm9yIl19-->\n","Url":"https://github.com/angular/angular/pull/62162","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies (main)\" (#62162)"},{"Id":"3164116702","IsPullRequest":false,"CreatedAt":"2025-06-20T20:52:25","Actor":"devinvestidor","Number":"62172","RawContent":null,"Title":"Improve support for testing protected component methods recommended by Angular Style Guide","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n- @angular/core\n- @angular/core/testing\n\n### Description\n\nAccording to the [official Angular Style Guide](https://angular.dev/style-guide#use-protected-on-class-members-that-are-only-used-by-a-components-template):\n\n> **Use `protected` on class members that are only used by a component's template**\n\n``` typescript\n  it('should navigate to form on btnAdicionar', () => {\n    component.add(); // ❌ Property 'add' is protected and only accessible within class ...\n    expect(routerMock.navigate).toHaveBeenCalledWith(['/feriados/form']);\n  });\n```\n\nTo bypass this, we are forced to write:\n\n``` typescript\n  it('should navigate to form on btnAdicionar', () => {\n    (component as any).add(); // ✅ but unsafe and breaks TS encapsulation\n    expect(routerMock.navigate).toHaveBeenCalledWith(['/feriados/form']);\n  });\n\n```\n\n### Proposed solution\n\n**✅ Suggested Improvement**\nProvide a way to access protected members in tests cleanly. Some ideas:\n\n- Add a TestBed.invokeProtected() helper\n- Add documentation guidance or an official utility for accessing these\n- Allow exposing protected methods via metadata in @Component (just like inputs/outputs)\n\n**🔍 Why it matters**\nThis discrepancy creates friction:\n\n- The style guide encourages encapsulation (👍),\n- But testing becomes harder or hacky (👎),\n\nEspecially in large projects with test coverage requirements.\n\nThanks for considering!\n\n### Alternatives considered\n\n.","Url":"https://github.com/angular/angular/issues/62172","RelatedDescription":"Closed issue \"Improve support for testing protected component methods recommended by Angular Style Guide\" (#62172)"},{"Id":"3164337772","IsPullRequest":false,"CreatedAt":"2025-06-20T20:42:18","Actor":"jnizet","Number":"62174","RawContent":null,"Title":"escaped double braces are treated as interpolation","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSince the introduction of the control flow syntax, the `{` and `}` characters must be replaced in templates by HTML character entities, i.e. `&#123;` and `&#125;`, or `&#lbrace;` and `&#rbrace`.\n\nBut when you use these character entities with the goal of showing the syntax Angular uses for interpolation, then the compiler interprets these entities as actual braces and considers it's a real interpolation.\n\nSo, for example, having `&lbrace;&lbrace; &rbrace;&rbrace;` in a template makes the compiler fail with the error\n\n```\nNG5002: Parser Error: Blank expressions are not allowed in interpolated strings at column 0 in [{{ }}\n]\n```\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yvltw3bh?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nNG5002: Parser Error: Blank expressions are not allowed in interpolated strings at column 0 in [{{ }}\n]\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.3\nNode: 22.16.0\nPackage Manager: npm 10.9.2\nOS: darwin x64\n\nAngular: 20.0.4\n... common, compiler, compiler-cli, core, forms\n... platform-browser, platform-server, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cli                 20.0.3\n@angular/ssr                 20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else?\n\nI would expect the compiler to treat ignore character entities regarding interpolation, just as it ignores them regarding the control flow.","Url":"https://github.com/angular/angular/issues/62174","RelatedDescription":"Open issue \"escaped double braces are treated as interpolation\" (#62174)"},{"Id":"3163865283","IsPullRequest":true,"CreatedAt":"2025-06-20T20:05:05","Actor":"angular-robot","Number":"62166","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/62166","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#62166)"},{"Id":"3163865690","IsPullRequest":true,"CreatedAt":"2025-06-20T20:04:07","Actor":"angular-robot","Number":"62167","RawContent":null,"Title":"docs: update Angular CLI help [20.0.x]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/62167","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [20.0.x]\" (#62167)"},{"Id":"3163980069","IsPullRequest":true,"CreatedAt":"2025-06-20T19:03:51","Actor":"atscott","Number":"62168","RawContent":null,"Title":"build: revert incompatible build changes in patch branch","State":"closed","Body":"incompatible build changes from ebaebb849f67d628cf6da966e0d9e9705e431355\r\n","Url":"https://github.com/angular/angular/pull/62168","RelatedDescription":"Closed or merged PR \"build: revert incompatible build changes in patch branch\" (#62168)"},{"Id":"3164058068","IsPullRequest":true,"CreatedAt":"2025-06-20T19:00:07","Actor":"JeanMeche","Number":"62171","RawContent":null,"Title":"docs: rename prompt guide to \"LLM prompts and IDE setup\"","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/62171","RelatedDescription":"Closed or merged PR \"docs: rename prompt guide to \"LLM prompts and IDE setup\"\" (#62171)"},{"Id":"3164056169","IsPullRequest":true,"CreatedAt":"2025-06-20T18:11:08","Actor":"josephperrott","Number":"62170","RawContent":null,"Title":"[20.0.x] build: migrate final non-zone.js jasmine tests","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/62170","RelatedDescription":"Open PR \"[20.0.x] build: migrate final non-zone.js jasmine tests\" (#62170)"},{"Id":"3163430066","IsPullRequest":true,"CreatedAt":"2025-06-20T18:05:55","Actor":"niklas-wortmann","Number":"62161","RawContent":null,"Title":"docs: add JetBrains Junie guidelines","State":"closed","Body":"Add a Junie Guidelines file to support JetBrains IDEs like WebStorm, IntelliJ etc properly. \r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/62161","RelatedDescription":"Closed or merged PR \"docs: add JetBrains Junie guidelines\" (#62161)"},{"Id":"3163999124","IsPullRequest":true,"CreatedAt":"2025-06-20T17:41:22","Actor":"josephperrott","Number":"62169","RawContent":null,"Title":"build: migrate final non-zone.js jasmine tests","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/62169","RelatedDescription":"Open PR \"build: migrate final non-zone.js jasmine tests\" (#62169)"},{"Id":"3163751874","IsPullRequest":true,"CreatedAt":"2025-06-20T15:48:12","Actor":"AnkitaSood","Number":"62165","RawContent":null,"Title":"docs(examples): consitent usage of self-closing tags ","State":"open","Body":"consistent usage of self-closing tags for components in all examples on this page.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSome of the code examples on [this page](https://angular.dev/guide/routing/show-routes-with-outlets) are using self-closing tags for the same components while others are not.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nAll the examples are using self-closing tags for the components.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/62165","RelatedDescription":"Open PR \"docs(examples): consitent usage of self-closing tags \" (#62165)"},{"Id":"3163707471","IsPullRequest":true,"CreatedAt":"2025-06-20T15:29:32","Actor":"devchas","Number":"62164","RawContent":null,"Title":"docs: add signals code example recipe book","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/contributing-docs/commit-message-guidelines.md\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/62164","RelatedDescription":"Open PR \"docs: add signals code example recipe book\" (#62164)"},{"Id":"3163401161","IsPullRequest":true,"CreatedAt":"2025-06-20T13:42:19","Actor":"crisbeto","Number":"62160","RawContent":null,"Title":"Consolidate compiler errors","State":"open","Body":"See the individual commits for more info, but the tl;dr is that these changes consolidate most of our compiler errors around `ParseError` so that it's easier to add more context to it in a follow-up.","Url":"https://github.com/angular/angular/pull/62160","RelatedDescription":"Open PR \"Consolidate compiler errors\" (#62160)"},{"Id":"3163038447","IsPullRequest":false,"CreatedAt":"2025-06-20T12:50:45","Actor":"cesco69","Number":"62159","RawContent":null,"Title":"Detect unused import (Material Component): works for MatButton, don't for MatButtonModule","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlanguage-service\n\n### Is this a regression?\n\nNo\n\n### Description\n\nDetect unused import works for `MatButton`, but don't for `MatButtonModule`\n\n![Image](https://github.com/user-attachments/assets/fb844b20-0a9f-4774-b581-bc26b1f1eff8)\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/62159","RelatedDescription":"Closed issue \"Detect unused import (Material Component): works for MatButton, don't for MatButtonModule\" (#62159)"},{"Id":"3162431711","IsPullRequest":false,"CreatedAt":"2025-06-20T09:07:51","Actor":"sysmat","Number":"62157","RawContent":null,"Title":"this command with --force or --legacy-peer-deps","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\n- when update dependency\n\n```\n@angular/build             ^20.0.2  →  ^20.0.3\n @angular/cli               ^20.0.2  →  ^20.0.3\n @angular/common            ^20.0.3  →  ^20.0.4\n @angular/compiler          ^20.0.3  →  ^20.0.4\n @angular/compiler-cli      ^20.0.3  →  ^20.0.4\n @angular/core              ^20.0.3  →  ^20.0.4\n @angular/forms             ^20.0.3  →  ^20.0.4\n @angular/platform-browser  ^20.0.3  →  ^20.0.4\n @angular/router            ^20.0.3  →  ^20.0.4\n```\n\n- and then instal `npm i` I get error `npm error ERESOLVE could not resolve`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n1. create project then ncu\n2. `npm i`\n3. error\n\n\n❯ npm i\nnpm error code ERESOLVE\nnpm error ERESOLVE could not resolve\nnpm error\nnpm error While resolving: ng20@0.0.0\nnpm error Found: @angular/common@20.0.3\nnpm error node_modules/@angular/common\nnpm error   @angular/common@\"^20.0.4\" from the root project\nnpm error   peer @angular/common@\"20.0.3\" from @angular/forms@20.0.3\nnpm error   node_modules/@angular/forms\nnpm error     @angular/forms@\"^20.0.4\" from the root project\nnpm error   2 more (@angular/platform-browser, @angular/router)\nnpm error\nnpm error Could not resolve dependency:\nnpm error @angular/common@\"^20.0.4\" from the root project\nnpm error\nnpm error Conflicting peer dependency: @angular/core@20.0.4\nnpm error node_modules/@angular/core\nnpm error   peer @angular/core@\"20.0.4\" from @angular/common@20.0.4\nnpm error   node_modules/@angular/common\nnpm error     @angular/common@\"^20.0.4\" from the root project\nnpm error\nnpm error Fix the upstream dependency conflict, or retry\nnpm error this command with --force or --legacy-peer-deps\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.2\nNode: 22.16.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 20.0.3\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.2\n@angular-devkit/core         20.0.2\n@angular-devkit/schematics   20.0.2\n@angular/build               20.0.2\n@angular/cli                 20.0.2\n@schematics/angular          20.0.2\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else?\n\n project was created with cli ver 20.0.1","Url":"https://github.com/angular/angular/issues/62157","RelatedDescription":"Closed issue \"this command with --force or --legacy-peer-deps\" (#62157)"},{"Id":"3162169547","IsPullRequest":false,"CreatedAt":"2025-06-20T08:28:14","Actor":"sysmat","Number":"62155","RawContent":null,"Title":"await TestBed.compileComponents()","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19\n\n### Description\n\n- when run test I get `Error: Component '_DossiersComponent' has unresolved metadata. Please call `await TestBed.compileComponents()` before running this test.`\n- but my test has await\n\n\n### Minimal Reproduction\n\n```typescript\nbeforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [],\n      providers: [...httpForSpec],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(DossiersComponent);\n    component = fixture.componentInstance;\n\n    toaster = fixture.debugElement.injector.get(ToastService);\n    userService = fixture.debugElement.injector.get(UserArnesService);\n\n    spyOn(toaster, 'error');\n\n    fixture.componentRef.setInput('userArnes', testUser);\n    fixture.detectChanges();\n  });\n```\n\n### Exception or Error\n\n```text\nError: Component '_DossiersComponent' has unresolved metadata. Please call `await TestBed.compileComponents()` before running this test.\n    at _TestBedImpl.createComponent (http://localhost:9876/darwin_arm64-fastbuild-ST-46c76129e412/bin/packages/core/testing/src/test_bed.ts:639:13)\n    at _TestBedImpl.createComponent (http://localhost:9876/darwin_arm64-fastbuild-ST-46c76129e412/bin/packages/core/testing/src/test_bed.ts:381:33)\n    at src/app/components/user-edit/edit/dossiers/dossiers.component.spec.ts:43:23\n    at Generator.next (<anonymous>)\n    at fulfilled (chunk-7TZ2JX6C.js:72:24)\n    at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:398:28)\n    at _ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:2132:39)\n    at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:397:34)\n    at ZoneImpl.run (node_modules/zone.js/fesm2015/zone.js:113:43)\n    at node_modules/zone.js/fesm2015/zone.js:2537:40\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.0.3\nNode: 22.16.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 20.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, localize, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cli                 20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else relevant?\n\n- angular.json\n\n```json\n \"test\": {\n          \"builder\": \"@angular/build:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\", \"@angular/localize/init\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"karmaConfig\": \"karma.conf.js\",\n            \"aot\": true,\n            \"styles\": [\"src/styles.css\"],\n            \"scripts\": [],\n            \"assets\": [\"src/favicon.ico\", \"src/assets\", \"src/manifest.webmanifest\"]\n          }\n        },\n``` \n- I run with `ng test --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage=true`","Url":"https://github.com/angular/angular/issues/62155","RelatedDescription":"Closed issue \"await TestBed.compileComponents()\" (#62155)"},{"Id":"3162229400","IsPullRequest":true,"CreatedAt":"2025-06-20T07:30:35","Actor":"crisbeto","Number":"62156","RawContent":null,"Title":"fix(core): unable to retrieve defer blocks in tests when component injects ViewContainerRef","State":"open","Body":"Fixes that `getDeferBlocks` wasn't accounting for the case where a component might be injecting `ViewContainerRef`. When that happens, an additional wrapper is introduced that needs to be accounted for when traversing the tree.\r\n\r\nFixes #62047.\r\n","Url":"https://github.com/angular/angular/pull/62156","RelatedDescription":"Open PR \"fix(core): unable to retrieve defer blocks in tests when component injects ViewContainerRef\" (#62156)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"3165507694","IsPullRequest":false,"CreatedAt":"2025-06-21T19:02:54","Actor":"sgravrock","Number":"30575","RawContent":null,"Title":"New Angular projects install jasmine-core ~5.7.0 but use 4.6.1","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe package.json file generated by `ng new` includes the dev dependency `\"jasmine-core\": \"~5.7.0\"`, but jasmine-core 4.6.1 is also installed and used to run tests in Karma.\nSteps to reproduce:\n\n1. Install @angular/cli 20.0.3.\n2. Run `ng new some-name` and accept all the defaults.\n3. Note the jasmine-core dependency in package.json.\n4. Run `npm test` and note the Jasmine version displayed in the browser.\n5. Run `npm ls jasmine-core`.\n\nExpected: The versions from steps 3 and 4 agree, and step 5 shows that only a single version of jasmine-core is installed.\nObserved: Step 3 and 4 show different major versions, and step 5 shows that two different versions of jasmine-core are installed.\n\nThe problem is that karma-jasmine declares a dependency on jasmine-core 4.x. `ng new` tries to set up the project to use jasmine-core 5.x, but it doesn't add [the necessary override](https://jasmine.github.io/pages/faq.html#001-karma).\n\nNote: I'm not an Angular user, but I do maintain Jasmine. I've seen this version mismatch cause a couple of problems. One is that Angular users are occasionally confused about which major version of jasmine-core they're actually using. The other is that it makes jasmine-core download statistics pretty much useless for determining uptake of the latest major version, since an unknown but probably large portion of 5.x downloads are from Angular users who are actually still running 4.x.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.3\nNode: 20.19.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 20.0.4\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cli                 20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30575","RelatedDescription":"Open issue \"New Angular projects install jasmine-core ~5.7.0 but use 4.6.1\" (#30575)"},{"Id":"3165205798","IsPullRequest":false,"CreatedAt":"2025-06-21T17:06:59","Actor":"olfek","Number":"30574","RawContent":null,"Title":"There is no way to add `\"use strict\";` to top of generated JavaScript files","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nEven after enabling `alwaysStrict` - https://www.typescriptlang.org/tsconfig/#alwaysStrict\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30574","RelatedDescription":"Closed issue \"There is no way to add `\"use strict\";` to top of generated JavaScript files\" (#30574)"},{"Id":"3163927783","IsPullRequest":false,"CreatedAt":"2025-06-20T17:07:36","Actor":"noguespi","Number":"30573","RawContent":null,"Title":"Error in PostCSS + tailwind doesn't break the build","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWith postcss + tailwind, when I have an error in a css file, it displays a big red error in the logs, but the build continue and is done successfuly.\n\n### Minimal Reproduction\n\nSteps to reproduce:\n\n- create a new angular project with default options.\n- npm install tailwindcss @tailwindcss/postcss postcss --force\n- create the .postcssrc.json with \n```\n{\n  \"plugins\": {\n    \"@tailwindcss/postcss\": {}\n  }\n}\n```\n- add the follwing in the css of a component `@reference \"not-found.css\";`\n- npm run build\n\nThe error is displayed but the build continue and is successful.\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.0.3\nNode: 20.19.2\nPackage Manager: npm 11.4.1\nOS: linux x64\n\nAngular: 20.0.4\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cli                 20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30573","RelatedDescription":"Open issue \"Error in PostCSS + tailwind doesn't break the build\" (#30573)"},{"Id":"3160493872","IsPullRequest":false,"CreatedAt":"2025-06-20T13:39:23","Actor":"aron123","Number":"30566","RawContent":null,"Title":"CLI does not generate suffix for components by default","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.1.0\n\n### Description\n\nWhen I try to generate a new component, files are expected to have a suffix `.component` and class name expected to have a suffix `Component`.\n\nHowever in version 20.0.3, these suffixes are not generated by default:\n```\n> ng g c login\nCREATE src/app/login/login.spec.ts (544 bytes)\nCREATE src/app/login/login.ts (193 bytes)\nCREATE src/app/login/login.scss (0 bytes)\nCREATE src/app/login/login.html (21 bytes)\n```\n\nThis also applies to services. I haven't tried other sub-commands.\n\nI use Windows 11 and Powershell 7.\n\n### Minimal Reproduction\n\n```\nng new test\ncd test\nng g c login\n```\n\n### Exception or Error\n\n### Your Environment\n\n```text\n20.0.3\n```\n\n### Anything else relevant?\n\nAs a workaround, using the `--type component` option when generating the components is working.\n","Url":"https://github.com/angular/angular-cli/issues/30566","RelatedDescription":"Closed issue \"CLI does not generate suffix for components by default\" (#30566)"},{"Id":"3162057625","IsPullRequest":true,"CreatedAt":"2025-06-20T13:39:22","Actor":"alan-agius4","Number":"30569","RawContent":null,"Title":"docs: update component schematic option descriptions","State":"closed","Body":"Several option descriptions were outdated and have been revised for accuracy.\r\n\r\nCloses #30566\r\n","Url":"https://github.com/angular/angular-cli/pull/30569","RelatedDescription":"Closed or merged PR \"docs: update component schematic option descriptions\" (#30569)"},{"Id":"3162250108","IsPullRequest":true,"CreatedAt":"2025-06-20T13:39:10","Actor":"alan-agius4","Number":"30571","RawContent":null,"Title":"test(@angular/build): reset project metadata before each run","State":"closed","Body":"Prevents test flakiness caused by `useProject` not cleaning up metadata between runs.\r\n","Url":"https://github.com/angular/angular-cli/pull/30571","RelatedDescription":"Closed or merged PR \"test(@angular/build): reset project metadata before each run\" (#30571)"},{"Id":"3162484629","IsPullRequest":false,"CreatedAt":"2025-06-20T09:03:37","Actor":"satabol","Number":"30572","RawContent":null,"Title":"Add DateTime when ng build finished","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nNo current datetime now. Only build time:\n\n![Image](https://github.com/user-attachments/assets/639a09c4-24af-4df9-984b-f75701b061cc)\n\n\n\n\n### Proposed solution\n\nHi.\nI think it would be convenient to see the current end time of the application build process like Maven/Java:\n\n![Image](https://github.com/user-attachments/assets/b5201c06-af01-4a9f-b7b5-9d06b5246f2f)\n\n### Alternatives considered\n\nadd \"echo %TIME%\" command:\n\n![Image](https://github.com/user-attachments/assets/3429edfc-7b33-403a-af5a-ecf0f95ca232)","Url":"https://github.com/angular/angular-cli/issues/30572","RelatedDescription":"Open issue \"Add DateTime when ng build finished\" (#30572)"},{"Id":"3160457265","IsPullRequest":false,"CreatedAt":"2025-06-20T06:22:30","Actor":"jlanssie","Number":"30565","RawContent":null,"Title":"Support tailwind v4 in Unit Tests","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen building a new Angular project according to the Tailwind documentation at [Tailwind](https://tailwindcss.com/docs/installation/framework-guides/angular), it is impossible to  run unit tests. \n\n```cli\n/Users/jlanssie/.nvm/versions/node/v22.13.1/bin/node /private/var/repos/personal/angular-app/node_modules/@angular/cli/bin/ng test angular-app --karma-config /Applications/IntelliJ IDEA.app/Contents/plugins/karma/js_reporter/karma-intellij/lib/intellij.conf.js --source-map\n/private/var/repos/personal/angular-app/node_modules/@angular-devkit/architect/node_modules/rxjs/dist/cjs/internal/util/reportUnhandledError.js:13\n            throw err;\n            ^\n\nError: It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\n    at We (/private/var/repos/personal/angular-app/node_modules/tailwindcss/dist/lib.js:35:2121)\n    at getStylesConfig (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/tools/webpack/configs/styles.js:106:66)\n    at async Promise.all (index 1)\n    at async generateWebpackConfig (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/utils/webpack-browser-config.js:74:22)\n    at async generateBrowserWebpackConfigFromContext (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/utils/webpack-browser-config.js:129:20)\n    at async initializeBrowser (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/builders/karma/browser_builder.js:109:24)\n\nNode.js v22.13.1\n\nProcess finished with exit code 1\n```\n\n.postcssrc.json\n```json\n{\n  \"plugins\": {\n    \"@tailwindcss/postcss\": {}\n  }\n}\n```\n\n### Minimal Reproduction\n\n1. Create a new Angular project according to the Tailwind documentation at https://tailwindcss.com/docs/installation/framework-guides/angular\n2. Try to run a unit test\n\n### Exception or Error\n\n```text\n/Users/jlanssie/.nvm/versions/node/v22.13.1/bin/node /private/var/repos/personal/angular-app/node_modules/@angular/cli/bin/ng test angular-app --karma-config /Applications/IntelliJ IDEA.app/Contents/plugins/karma/js_reporter/karma-intellij/lib/intellij.conf.js --source-map\n/private/var/repos/personal/angular-app/node_modules/@angular-devkit/architect/node_modules/rxjs/dist/cjs/internal/util/reportUnhandledError.js:13\n            throw err;\n            ^\n\nError: It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\n    at We (/private/var/repos/personal/angular-app/node_modules/tailwindcss/dist/lib.js:35:2121)\n    at getStylesConfig (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/tools/webpack/configs/styles.js:106:66)\n    at async Promise.all (index 1)\n    at async generateWebpackConfig (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/utils/webpack-browser-config.js:74:22)\n    at async generateBrowserWebpackConfigFromContext (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/utils/webpack-browser-config.js:129:20)\n    at async initializeBrowser (/private/var/repos/personal/angular-app/node_modules/@angular-devkit/build-angular/src/builders/karma/browser_builder.js:109:24)\n\nNode.js v22.13.1\n\nProcess finished with exit code 1\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.2.1\nNode: 22.13.1\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: \n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1902.1 (cli-only)\n@angular-devkit/core         19.2.1 (cli-only)\n@angular-devkit/schematics   19.2.1 (cli-only)\n@schematics/angular          19.2.1 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30565","RelatedDescription":"Closed issue \"Support tailwind v4 in Unit Tests\" (#30565)"},{"Id":"3161610548","IsPullRequest":false,"CreatedAt":"2025-06-20T06:14:52","Actor":"dailytabs","Number":"30567","RawContent":null,"Title":"Build options stylePreprocessorOptions->sass->silenceDeprecations no longer working after upgrade to Angular 20.","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n```\n                        \"stylePreprocessorOptions\": {\n                            \"sass\": {\n                                \"silenceDeprecations\": [\n                                    \"mixed-decls\",\n                                    \"color-functions\",\n                                    \"global-builtin\",\n                                    \"import\"\n                                ]\n                            }\n                        },\n```\n\nNone of that works anymore - warnings all over the place. Can't resolve any of this until bootstrap 6, so these need silenced.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nGlobal built-in functions are deprecated and will be removed in Dart Sass 3.0.0.\nSass @import rules are deprecated and will be removed in Dart Sass 3.0.0.\netc.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.3\nNode: 22.16.0\nPackage Manager: npm 11.4.1\nOS: linux x64\n\nAngular: 20.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@angular/build               20.0.3\n@angular/cdk                 20.0.3\n@angular/cli                 20.0.3\n@angular/youtube-player      20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\nAppears that the new builder ignores these options.\nNothing related appears on the Update Guide.","Url":"https://github.com/angular/angular-cli/issues/30567","RelatedDescription":"Closed issue \"Build options stylePreprocessorOptions->sass->silenceDeprecations no longer working after upgrade to Angular 20.\" (#30567)"},{"Id":"3161641154","IsPullRequest":false,"CreatedAt":"2025-06-20T01:09:34","Actor":"dailytabs","Number":"30568","RawContent":null,"Title":"Erroneous web-server 404 warnings.","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nlatest 19.x\n\n### Description\n\n```\n19 06 2025 20:46:57.963:WARN [web-server]: 404: /prototype/uJhB6kP9/First%20Last%20(Company).webp\n19 06 2025 20:46:57.987:WARN [web-server]: 404: /base/media/InterVariable.woff2?v=4.1\n19 06 2025 20:46:58.583:WARN [web-server]: 404: /prototype/8cW2pQzR/First%20Last%20(Company).webp\n```\n\n1. The 2 webp files **do exist** in public and work fine. This is a regression.\n2. The font comes from `\"inter-ui\": \"^4.1.0\"`. This is a regression.\n\n### Minimal Reproduction\n\n1) Not sure, since they do exist and work fine!? They are the only assets I have with spaces in their names... Was this not accounted for in the update? I renamed to a simple, 1-word, a-z filename and the warning went away.\n2) Adding the inter-ui package should be enough to trigger that. Might have to add to `style.scss`:\n    ```scss\n    @use \"~inter-ui/default\" with (\n      $inter-font-display: swap,\n      $inter-font-path: '~inter-ui/web'\n    );\n    \n    @use \"~inter-ui/variable\" with (\n      $inter-font-display: swap,\n      $inter-font-path: '~inter-ui/variable'\n    );\n    \n    @include default.all;\n    @include variable.all;\n    \n    html { font-family: \"Inter\", \"system-ui\"; }\n    \n    @supports (font-variation-settings: normal) {\n      html { font-family: \"InterVariable\", \"system-ui\"; }\n    }\n    ```\n\n### Exception or Error\n\n```text\n19 06 2025 20:46:57.963:WARN [web-server]: 404: /prototype/uJhB6kP9/First%20Last%20(Company).webp\n19 06 2025 20:46:57.987:WARN [web-server]: 404: /base/media/InterVariable.woff2?v=4.1\n19 06 2025 20:46:58.583:WARN [web-server]: 404: /prototype/8cW2pQzR/First%20Last%20(Company).webp\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.0.3\nNode: 22.16.0\nPackage Manager: npm 11.4.1\nOS: linux x64\n\nAngular: \n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3 (cli-only)\n@angular-devkit/core         20.0.3 (cli-only)\n@angular-devkit/schematics   20.0.3 (cli-only)\n@schematics/angular          20.0.3 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30568","RelatedDescription":"Open issue \"Erroneous web-server 404 warnings.\" (#30568)"},{"Id":"3159679712","IsPullRequest":true,"CreatedAt":"2025-06-19T16:39:44","Actor":"alan-agius4","Number":"30563","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"See associated pull request for more information.\r\n","Url":"https://github.com/angular/angular-cli/pull/30563","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#30563)"},{"Id":"3159615886","IsPullRequest":true,"CreatedAt":"2025-06-19T16:26:16","Actor":"alan-agius4","Number":"30561","RawContent":null,"Title":"Revert \"fix(@angular/build): increase worker idle timeout\"","State":"closed","Body":"This reverts commit 1d76d0ee59d54a889b564bdf85f183fd08ddc860.\r\n\r\nThis has been fixed in 5.1.1","Url":"https://github.com/angular/angular-cli/pull/30561","RelatedDescription":"Closed or merged PR \"Revert \"fix(@angular/build): increase worker idle timeout\"\" (#30561)"},{"Id":"3159626741","IsPullRequest":true,"CreatedAt":"2025-06-19T16:23:50","Actor":"alan-agius4","Number":"30562","RawContent":null,"Title":"build: update piscina to 5.1.1","State":"closed","Body":"Includes https://github.com/piscinajs/piscina/pull/818","Url":"https://github.com/angular/angular-cli/pull/30562","RelatedDescription":"Closed or merged PR \"build: update piscina to 5.1.1\" (#30562)"},{"Id":"3160388029","IsPullRequest":true,"CreatedAt":"2025-06-19T13:41:23","Actor":"angular-robot","Number":"30564","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `0fe63b2` -> `d802f67` |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `d1ee202` -> `116b8f3` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `8137107` -> `531ae21` |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `eda9db9` -> `cda5a33` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `749624b` -> `0dad6fa` |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `8548da3` -> `f87647a` |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `0673c26` -> `4a944f2` |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `f00920d` -> `39d3068` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `ee70174` -> `32bacac` |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `1afc0eb` -> `ad5f492` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `d36f825` -> `5c8657f` |\n| [@angular/ng-dev](https://redirect.github.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `c2b8d84` -> `2299bd9` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `5f14f27` -> `41c84c9` |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `8c9c0ab` -> `b64857e` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `6f859fc` -> `589f695` |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `dffcafc` -> `aa50c5e` |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `2931073` -> `352587e` |\n| angular/dev-infra | action | digest | `f028906` -> `14b8cef` |\n| devinfra | git_repository | digest | `f028906` -> `14b8cef` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiI0MC42MC4wIiwidXBkYXRlZEluVmVyIjoiNDAuNjIuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/30564","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies\" (#30564)"},{"Id":"3156072148","IsPullRequest":true,"CreatedAt":"2025-06-19T13:26:25","Actor":"angular-robot","Number":"30556","RawContent":null,"Title":"build: update cross-repo angular dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://redirect.github.com/angular/animations-builds) | dependencies | digest | `dba7ce6` -> `0fe63b2` |\n| [@angular/animations](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/animations)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fanimations/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/cdk](https://redirect.github.com/angular/cdk-builds) | dependencies | digest | `982585e` -> `d1ee202` |\n| [@angular/common](https://redirect.github.com/angular/common-builds) | dependencies | digest | `1edf024` -> `8137107` |\n| [@angular/common](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/common)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcommon/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/compiler](https://redirect.github.com/angular/compiler-builds) | dependencies | digest | `63b3faf` -> `eda9db9` |\n| [@angular/compiler](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/compiler-cli](https://redirect.github.com/angular/compiler-cli-builds) | dependencies | digest | `3b2f01e` -> `749624b` |\n| [@angular/compiler-cli](https://redirect.github.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/compiler-cli)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/core](https://redirect.github.com/angular/core-builds) | dependencies | digest | `15a4617` -> `8548da3` |\n| [@angular/core](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/core)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fcore/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/forms](https://redirect.github.com/angular/forms-builds) | dependencies | digest | `3eb796a` -> `0673c26` |\n| [@angular/forms](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/forms)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fforms/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/language-service](https://redirect.github.com/angular/language-service-builds) | dependencies | digest | `513f6e6` -> `f00920d` |\n| [@angular/localize](https://redirect.github.com/angular/localize-builds) | dependencies | digest | `74f995c` -> `ee70174` |\n| [@angular/localize](https://redirect.github.com/angular/angular) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2flocalize/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/material](https://redirect.github.com/angular/material-builds) | dependencies | digest | `16c9e89` -> `1afc0eb` |\n| [@angular/material-moment-adapter](https://redirect.github.com/angular/material-moment-adapter-builds) | dependencies | digest | `1c3f3a2` -> `d36f825` |\n| [@angular/platform-browser](https://redirect.github.com/angular/platform-browser-builds) | dependencies | digest | `0c6fc9a` -> `5f14f27` |\n| [@angular/platform-browser](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-browser)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/platform-browser-dynamic](https://redirect.github.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `608ab4d` -> `8c9c0ab` |\n| [@angular/platform-server](https://redirect.github.com/angular/platform-server-builds) | dependencies | digest | `4041c34` -> `6f859fc` |\n| [@angular/platform-server](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/platform-server)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/router](https://redirect.github.com/angular/router-builds) | dependencies | digest | `ac6ed04` -> `dffcafc` |\n| [@angular/router](https://redirect.github.com/angular/angular/tree/main/packages/router) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/router)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2frouter/20.1.0-next.1/20.1.0-next.2) |\n| [@angular/service-worker](https://redirect.github.com/angular/service-worker-builds) | dependencies | digest | `5d4cb3c` -> `2931073` |\n| [@angular/service-worker](https://redirect.github.com/angular/angular) ([source](https://redirect.github.com/angular/angular/tree/HEAD/packages/service-worker)) | devDependencies | patch | [`20.1.0-next.1` -> `20.1.0-next.2`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/20.1.0-next.1/20.1.0-next.2) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v20.1.0-next.2`](https://redirect.github.com/angular/angular/blob/HEAD/CHANGELOG.md#2010-next2-2025-06-18)\n\n[Compare Source](https://redirect.github.com/angular/angular/compare/20.1.0-next.1...20.1.0-next.2)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2e0c98bd3f](https://redirect.github.com/angular/angular/commit/2e0c98bd3f2efd1181429b486dd1cebe14385c18) | feat | support bindings in TestBed ([#&#8203;62040](https://redirect.github.com/angular/angular/pull/62040)) |\n| [8424b3bcd5](https://redirect.github.com/angular/angular/commit/8424b3bcd5b9c78f37dc8ba636c87775937bcc03) | fix | Fixes template outlet hydration ([#&#8203;61989](https://redirect.github.com/angular/angular/pull/61989)) |\n| [31da435854](https://redirect.github.com/angular/angular/commit/31da435854379e2a97b9b746751617e9979f01b0) | fix | inject `APP_ID` before injector is destroyed ([#&#8203;61885](https://redirect.github.com/angular/angular/pull/61885)) |\n| [572c32a038](https://redirect.github.com/angular/angular/commit/572c32a03876a5dbb6d0400ab0a217541407a0f9) | fix | Wrap ErrorEvent with no error property ([#&#8203;62081](https://redirect.github.com/angular/angular/pull/62081)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [34adfdea82](https://redirect.github.com/angular/angular/commit/34adfdea82997c43325e541c016c5c5d6f6f4a31) | fix | more robust trailing comma removal in unused imports migration ([#&#8203;62118](https://redirect.github.com/angular/angular/pull/62118)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiI0MC42MC4wIiwidXBkYXRlZEluVmVyIjoiNDAuNjAuMCIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiXX0=-->\n","Url":"https://github.com/angular/angular-cli/pull/30556","RelatedDescription":"Closed or merged PR \"build: update cross-repo angular dependencies\" (#30556)"},{"Id":"3159285740","IsPullRequest":true,"CreatedAt":"2025-06-19T07:28:49","Actor":"alan-agius4","Number":"30560","RawContent":null,"Title":"fix(@angular/ssr): avoid preloading unnecessary dynamic bundles","State":"open","Body":"This change to `@angular/ssr` prevents the preloading of dynamically imported bundles that aren't directly associated with routing.\r\n\r\nPreviously, Angular SSR might preload all dynamic bundles, even those not immediately required, such as deferred chunks within components.\r\n\r\nCloses #30541","Url":"https://github.com/angular/angular-cli/pull/30560","RelatedDescription":"Open PR \"fix(@angular/ssr): avoid preloading unnecessary dynamic bundles\" (#30560)"},{"Id":"3158429812","IsPullRequest":true,"CreatedAt":"2025-06-19T07:08:10","Actor":"JeanMeche","Number":"30559","RawContent":null,"Title":"refactor(schematics): add link to ai best practicies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/30559","RelatedDescription":"Closed or merged PR \"refactor(schematics): add link to ai best practicies\" (#30559)"},{"Id":"3157744465","IsPullRequest":false,"CreatedAt":"2025-06-18T18:19:30","Actor":"andsouto","Number":"30558","RawContent":null,"Title":"Angular production build with ESBuild does not honor \"browser\" field in package.json, leading to unresolved Node.js core modules","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen building an Angular application for production, the build fails with errors related to unresolved Node.js core modules (e.g., `node:http`, `node:fs`, etc.). This occurs because the dependency `@xmpp/resolve` uses the `\"browser\"` field in its `package.json` to indicate that certain modules should be replaced or ignored for browser builds. However, the Angular build system (using ESBuild for production builds) does not honor the `\"browser\"` field, unlike the previous Webpack-based setup.\n\n#### Expected Behavior\n\nThe build process should respect the `\"browser\"` field in dependencies' `package.json` files, replacing or ignoring Node.js-only modules as indicated, resulting in a successful production build.\n\n#### Actual Behavior\n\nThe build fails with errors similar to the following:\n```\n✘ [ERROR] Could not resolve \"node:http\"\n✘ [ERROR] Could not resolve \"node:https\"\n✘ [ERROR] Could not resolve \"node:fs\"\n...\n```\nThis did not occur with older versions of Angular that used Webpack for production builds.\n\n#### Steps to Reproduce\n\n1. Clone the example repository:  \n   `git clone https://github.com/andsouto/angular-build-error-example.git`\n2. Install dependencies:  \n   `cd angular-build-error-example && npm install`\n3. Attempt to build the project for production:  \n   `ng build`\n4. Observe the build failure with unresolved Node.js module errors.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/andsouto/angular-build-error-example\n\n### Please provide the exception or error you saw\n\n```true\nApplication bundle generation failed. [1.285 seconds]\n\n✘ [ERROR] Could not resolve \"node:http\"\n\n    (disabled):node_modules/node-fetch/src/index.js:9:17:\n      9 │ import http from 'node:http';\n        ╵                  ~~~~~~~~~~~\n\n  The package \"node:http\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:https\"\n\n    (disabled):node_modules/node-fetch/src/index.js:10:18:\n      10 │ import https from 'node:https';\n         ╵                   ~~~~~~~~~~~~\n\n  The package \"node:https\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:zlib\"\n\n    (disabled):node_modules/node-fetch/src/index.js:11:17:\n      11 │ import zlib from 'node:zlib';\n         ╵                  ~~~~~~~~~~~\n\n  The package \"node:zlib\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:stream\"\n\n    (disabled):node_modules/node-fetch/src/index.js:12:54:\n      12 │ import Stream, { PassThrough, pipeline as pump } from 'node:stream';\n         ╵                                                       ~~~~~~~~~~~~~\n\n  The package \"node:stream\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:buffer\"\n\n    (disabled):node_modules/node-fetch/src/index.js:13:23:\n      13 │ import { Buffer } from 'node:buffer';\n         ╵                        ~~~~~~~~~~~~~\n\n  The package \"node:buffer\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:fs\"\n\n    node_modules/fetch-blob/from.js:1:59:\n      1 │ import { statSync, createReadStream, promises as fs } from 'node:fs';\n        ╵                                                            ~~~~~~~~~\n\n  The package \"node:fs\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:path\"\n\n    node_modules/fetch-blob/from.js:2:25:\n      2 │ import { basename } from 'node:path';\n        ╵                          ~~~~~~~~~~~\n\n  The package \"node:path\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:stream\"\n\n    node_modules/node-fetch/src/body.js:7:36:\n      7 │ import Stream, { PassThrough } from 'node:stream';\n        ╵                                     ~~~~~~~~~~~~~\n\n  The package \"node:stream\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:util\"\n\n    node_modules/node-fetch/src/body.js:8:44:\n      8 │ import { types, deprecate, promisify } from 'node:util';\n        ╵                                             ~~~~~~~~~~~\n\n  The package \"node:util\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:buffer\"\n\n    node_modules/node-fetch/src/body.js:9:23:\n      9 │ import { Buffer } from 'node:buffer';\n        ╵                        ~~~~~~~~~~~~~\n\n  The package \"node:buffer\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:util\"\n\n    node_modules/node-fetch/src/headers.js:7:22:\n      7 │ import { types } from 'node:util';\n        ╵                       ~~~~~~~~~~~\n\n  The package \"node:util\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:http\"\n\n    node_modules/node-fetch/src/headers.js:8:17:\n      8 │ import http from 'node:http';\n        ╵                  ~~~~~~~~~~~\n\n  The package \"node:http\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:url\"\n\n    node_modules/node-fetch/src/request.js:9:36:\n      9 │ import { format as formatUrl } from 'node:url';\n        ╵                                     ~~~~~~~~~~\n\n  The package \"node:url\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:util\"\n\n    node_modules/node-fetch/src/request.js:10:26:\n      10 │ import { deprecate } from 'node:util';\n         ╵                           ~~~~~~~~~~~\n\n  The package \"node:util\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n\n\n✘ [ERROR] Could not resolve \"node:net\"\n\n    node_modules/node-fetch/src/utils/referrer.js:1:21:\n      1 │ import { isIP } from 'node:net';\n        ╵                      ~~~~~~~~~~\n\n  The package \"node:net\" wasn't found on the file system but is built into node. Are you trying to bundle for node? You can use \"platform: 'node'\" to do that, which will remove this error.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 20.0.3\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: linux x64\n\nAngular: 20.0.3\n... build, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2000.3\n@angular-devkit/core         20.0.3\n@angular-devkit/schematics   20.0.3\n@schematics/angular          20.0.3\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30558","RelatedDescription":"Closed issue \"Angular production build with ESBuild does not honor \"browser\" field in package.json, leading to unresolved Node.js core modules\" (#30558)"},{"Id":"3156252896","IsPullRequest":false,"CreatedAt":"2025-06-18T10:02:04","Actor":"cexbrayat","Number":"30557","RawContent":null,"Title":"vitest: code coverage is always 0 (and is slow)","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning `ng test` with codeCoverage enabled generates reports with 0% coverage out of the box.\n\n### Minimal Reproduction\n\nGenerate a new app:\n\n```bash\nnpx @angular/cli@20.1.0-next.2 new vitest-coverage --no-routing --defaults\ncd vitest-coverage\nnpm install vitest jsdom @vitest/coverage-v8 --save-dev\n```\n\nUse the unit-test builder:\n\n```json\n\"test\": {\n  \"builder\": \"@angular/build:unit-test\",\n  \"options\": {\n    \"tsConfig\": \"tsconfig.spec.json\",\n    \"buildTarget\": \"::development\",\n    \"runner\": \"vitest\",\n    \"codeCoverage\": true\n  }\n}\n```\n\nRun `ng test --no-watch`\n\n### Exception or Error\n\n```text\n% Coverage report from v8\n----------------|---------|----------|---------|---------|-------------------\nFile            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s \n----------------|---------|----------|---------|---------|-------------------\nAll files       |       0 |        0 |       0 |       0 |                   \n src            |       0 |        0 |       0 |       0 |                   \n  main.ts       |       0 |        0 |       0 |       0 | 1-6               \n src/app        |       0 |        0 |       0 |       0 |                   \n  app.config.ts |       0 |        0 |       0 |       0 | 1-9               \n  app.ts        |       0 |        0 |       0 |       0 | 1-11              \n----------------|---------|----------|---------|---------|-------------------\n```\n\n### Your Environment\n\n```text\nAngular CLI: 20.1.0-next.2\nNode: 22.14.0\nPackage Manager: npm 10.9.0\nOS: darwin arm64\n\nAngular: 20.1.0-next.1\n... common, compiler, compiler-cli, core, forms\n... platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.2001.0-next.2\n@angular-devkit/core         20.1.0-next.2\n@angular-devkit/schematics   20.1.0-next.2\n@angular/build               20.1.0-next.2\n@angular/cli                 20.1.0-next.2\n@schematics/angular          20.1.0-next.2\nrxjs                         7.8.2\ntypescript                   5.8.3\nzone.js                      0.15.1\n```\n\n### Anything else relevant?\n\nTwo additional points:\n\n- computing the coverage is very slow\n- the template files aren't included whereas they should as it runs in AoT mode","Url":"https://github.com/angular/angular-cli/issues/30557","RelatedDescription":"Open issue \"vitest: code coverage is always 0 (and is slow)\" (#30557)"},{"Id":"3156016540","IsPullRequest":true,"CreatedAt":"2025-06-18T08:48:28","Actor":"alan-agius4","Number":"30555","RawContent":null,"Title":"Bump version to \"v20.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/30555","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.1.0-next.2\" with changelog.\" (#30555)"},{"Id":"3155997056","IsPullRequest":true,"CreatedAt":"2025-06-18T08:41:54","Actor":"alan-agius4","Number":"30554","RawContent":null,"Title":"docs: release notes for the v20.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"20.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/30554","RelatedDescription":"Closed or merged PR \"docs: release notes for the v20.0.3 release\" (#30554)"},{"Id":"3155967248","IsPullRequest":true,"CreatedAt":"2025-06-18T08:39:02","Actor":"alan-agius4","Number":"30553","RawContent":null,"Title":"Bump version to \"v20.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/30553","RelatedDescription":"Closed or merged PR \"Bump version to \"v20.0.3\" with changelog.\" (#30553)"},{"Id":"3152778530","IsPullRequest":false,"CreatedAt":"2025-06-18T08:04:05","Actor":"mattlewis92","Number":"30549","RawContent":null,"Title":"CI crash after upgrading to angular 20 `assert.strictEqual(workerInfo.currentUsage(), 0)`","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.2.2\n\n### Description\n\nAfter upgrading to Angular 20, our CI starts crashing when building the application for production:\n\n```\n❯ Building...\n/home/runner/_work/clickup_frontend/clickup_frontend/node_modules/.pnpm/piscina@5.0.0/node_modules/piscina/src/index.ts:447\n        assert.strictEqual(workerInfo.currentUsage(), 0);\n               ^\nAssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n1 !== 0\n    at Timeout._onTimeout (/home/runner/_work/clickup_frontend/clickup_frontend/node_modules/.pnpm/piscina@5.0.0/node_modules/piscina/src/index.ts:447:16)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7) {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'strictEqual'\n}\n```\n\nThe assertion is being thrown from the piscina dependency here:\nhttps://github.com/piscinajs/piscina/blob/fe781d66040eb87446692a3f7056c9c2c7b84a4a/src/index.ts#L447 which was added in 4.9.0 by https://github.com/piscinajs/piscina/pull/590 (angular 19 uses `4.8.0` which was why this is not a problem until now)\n\nWe patched our version of the angular CLI to bump the `idleTimeout` here to be `10_000`, and that seems to have resolved it:\n\nhttps://github.com/angular/angular-cli/blob/2672f6ec17de6e05b19acda0e0b09a6715c9f83f/packages/angular/build/src/utils/worker-pool.ts#L18\n\nWould you accept a PR to apply that patch? (or maybe it could be `Infinity` to disable this check completely? I'm unsure what the consequences of that change would be though)\n\nI assume the issue is because our application source code is so large that it takes longer than 1s for the worker to initialise, and that timeout is hit.\n\n### Minimal Reproduction\n\nA minimal repro is not possible as:\n* The problem does not always occur (presumably because the worker sometimes initialises under the current 1s idle timeout)\n* The problem only occurs on resource constrained hardware (it cannot be reproduced locally on an M3 macbook, and only within github actions)\n* The problem only seems to affect large applications (100mb+ of source code). Our smaller applications do not suffer with this problem\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI `20.0.2` + framework `20.0.3`\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30549","RelatedDescription":"Closed issue \"CI crash after upgrading to angular 20 `assert.strictEqual(workerInfo.currentUsage(), 0)`\" (#30549)"},{"Id":"3155843364","IsPullRequest":true,"CreatedAt":"2025-06-18T08:04:04","Actor":"alan-agius4","Number":"30552","RawContent":null,"Title":"fix(@angular/build): increase worker idle timeout","State":"closed","Body":"This is a workaround for https://github.com/piscinajs/piscina/issues/816\r\n\r\nCloses #30549\r\n","Url":"https://github.com/angular/angular-cli/pull/30552","RelatedDescription":"Closed or merged PR \"fix(@angular/build): increase worker idle timeout\" (#30552)"},{"Id":"3153688854","IsPullRequest":false,"CreatedAt":"2025-06-17T14:46:02","Actor":"aparzi","Number":"30550","RawContent":null,"Title":"Export default in Angular.json","State":"closed","Body":"### Command\n\nnew\n\n### Description\n\nI was asked if we could consider an evolution of the --export-default command to be inserted in the angular.json configuration? So that we don't have to specify the command at every creation.\n\nIssue: #25023\n\n### Describe the solution you'd like\n\n_No response_\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/30550","RelatedDescription":"Closed issue \"Export default in Angular.json\" (#30550)"},{"Id":"3152604896","IsPullRequest":false,"CreatedAt":"2025-06-17T08:32:04","Actor":"MikaStark","Number":"30548","RawContent":null,"Title":"Add Default Prettier Configuration for Angular Templates","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHello Angular Team,\n\nSince Angular v20, component files no longer use the `.component` suffix by default. As a result, associated template files (e.g., my-feature.html) are no longer automatically recognized by Prettier as Angular templates. This leads Prettier to fall back to its default HTML parser, which doesn't handle Angular-specific syntax correctly.\n\n### Proposed solution\n\nTo improve the developer experience and avoid formatting issues, it would be helpful for new Angular projects to include a default Prettier configuration specifying the Angular parser for .html files.\n\nSuggested addition to package.json:\n\n\n```json\n\"prettier\": {\n  \"overrides\": [\n    {\n      \"files\": \"*.html\",\n      \"options\": {\n        \"parser\": \"angular\"\n      }\n    }\n  ]\n}\n```\n\nThis configuration ensures consistent and correct formatting of Angular templates out of the box, without requiring manual setup from the developer. It aligns with Angular’s philosophy of providing strong defaults for common tooling.\n\nThanks for considering this improvement!\n\n### Alternatives considered\n\nInstead of `package.json`, we could consider having a `.prettierrc` file to set prettier configuration.","Url":"https://github.com/angular/angular-cli/issues/30548","RelatedDescription":"Open issue \"Add Default Prettier Configuration for Angular Templates\" (#30548)"},{"Id":"3152602636","IsPullRequest":false,"CreatedAt":"2025-06-17T08:26:23","Actor":"MikaStark","Number":"30547","RawContent":null,"Title":"Add engines Entry to package.json to Specify Required Node.js Versions","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nHello Angular Team,\n\nWhen starting a new Angular project, it's not immediately clear which Node.js versions are compatible—especially when working with older Angular versions. Unless developers check the [Version Compatibility](https://angular.dev/reference/versions) documentation, they may unknowingly use an unsupported Node.js version, leading to confusing errors.\n\n### Proposed solution\n\nA simple and effective solution would be to include an engines field in the generated package.json:\n\n```json\n{\n  // ...\n  \"engines\": {\n    \"node\": \"^20.19.0 || ^22.12.0 || ^24.0.0\"\n  },\n}\n```\n\nThis is a standard Node.js feature that many tools and platforms (e.g., DigitalOcean, Vercel) can use to select the appropriate runtime environment during deployment or CI builds.\n\n### Alternatives considered\n\nOptionally, generating an .nvmrc file could help local development, but the engines field provides broader support and clearer intent.","Url":"https://github.com/angular/angular-cli/issues/30547","RelatedDescription":"Open issue \"Add engines Entry to package.json to Specify Required Node.js Versions\" (#30547)"},{"Id":"3151034894","IsPullRequest":true,"CreatedAt":"2025-06-17T07:13:57","Actor":"cexbrayat","Number":"30545","RawContent":null,"Title":"fix(@angular/build): json and json-summary as vitest coverage reporters","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\nThey can be quite handy for analysis tools.\r\n\r\nSee https://github.com/vitest-dev/vitest/blob/93f3200e452874ed4e2d018718bbbde7ebd28590/test/coverage-test/test/configuration-options.test-d.ts#L152 for all the current valid options\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/30545","RelatedDescription":"Closed or merged PR \"fix(@angular/build): json and json-summary as vitest coverage reporters\" (#30545)"},{"Id":"3151042165","IsPullRequest":true,"CreatedAt":"2025-06-17T07:13:47","Actor":"cexbrayat","Number":"30546","RawContent":null,"Title":"fix(@angular/build): coverage reporter option","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe `codeCoverageReporters` option has no effect.\r\n\r\n## What is the new behavior?\r\n\r\nThe vitest coverage reporters option is `reporter` and not `reporters`, see https://vitest.dev/config/#coverage-reporter\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/30546","RelatedDescription":"Closed or merged PR \"fix(@angular/build): coverage reporter option\" (#30546)"},{"Id":"3150859410","IsPullRequest":true,"CreatedAt":"2025-06-17T07:12:50","Actor":"cexbrayat","Number":"30544","RawContent":null,"Title":"fix(@angular/build): use an empty array as default value for vitest exclude","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #30543\r\n\r\n## What is the new behavior?\r\n\r\nAvoids the error `resolved.coverage.exclude is not iterable` while running `ng test`.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/30544","RelatedDescription":"Closed or merged PR \"fix(@angular/build): use an empty array as default value for vitest exclude\" (#30544)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"3165438451","IsPullRequest":true,"CreatedAt":"2025-06-21T21:43:43","Actor":"andrewseguin","Number":"31393","RawContent":null,"Title":"fix(material/chips): sync with g3","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31393","RelatedDescription":"Closed or merged PR \"fix(material/chips): sync with g3\" (#31393)"},{"Id":"3165387369","IsPullRequest":false,"CreatedAt":"2025-06-21T20:13:45","Actor":"larr97","Number":"31392","RawContent":null,"Title":"feat(THEMING): Support configuration option for “Color match” (stay true to inputs) vs optimized role colors in Angular Material theming","State":"open","Body":"### Feature Description\n\nAngular Material’s [theming system](https://material.angular.dev/guide/theming) uses the [Material 3 Custom Theme schematic](https://github.com/angular/components/blob/main/src/material/schematics/ng-generate/theme-color/README.md) to generate theme files based on user input. However, it currently lacks support for choosing between true input colors and role-optimized tones. \n\nIn contrast, Google’s Material Design specification uses **optimized role colors by default** — as seen in tools like the [Material Theme Builder](https://material-foundation.github.io/material-theme-builder/) — whereas Angular Material’s custom theme schematic defaults to using exact seed color tones. This feature request proposes a configuration option to bridge that gap and align Angular Material theming more closely with Material Design’s intended behavior.\n\n---\n\n### Background  \nThe [Material Theme Builder](https://material-foundation.github.io/material-theme-builder/) includes a checkbox labeled:\n\n> **Color match**  \n> Stay true to my color inputs.\n\n- When **checked**, role colors closely follow the input seed palettes.  \n  <img width=\"1719\" alt=\"Color match ON\" src=\"https://github.com/user-attachments/assets/14caa32d-768a-4864-b3f4-5de1d6ea4a51\" />\n\n- When **unchecked**, role colors are optimized — adjusted for better contrast and visual harmony.  \n  <img width=\"1721\" alt=\"Color match OFF\" src=\"https://github.com/user-attachments/assets/f3144faa-ae14-47a1-ad2e-8d4de737b6ee\" />\n\n#### Current Material 3 Custom Theme schematic\n[Angular Material Custom Theme schematic](https://github.com/angular/components/blob/main/src/material/schematics/ng-generate/theme-color/README.md) currently behaves like “Color match” checked — it uses palette tones that stay true to the input colors.\n\n---\n\n### Feature Request  \nPlease add support for a **configuration option** to let developers choose between:\n\n- **“Color match checked”** — use palette tones exactly as input (current default behavior).  \n- **“Color match unchecked”** — use optimized role colors (tone adjustments per role) for improved harmony and accessibility, like Material Theme Builder’s unchecked mode.\n\n**This could be implemented by:**\n- Providing a CLI flag or configuration parameter to specify the preferred mode during theme generation.\n\n---\n\n### Benefits  \n- Allows developers to choose between exact color fidelity or an optimized theme.  \n- Aligns Angular Material theming closer to Google’s Material Design and the official Theme Builder behavior.  \n- Creates a consistent and accurate workflow across design and code, improving collaboration between designers and developers.\n\n\n### Use Case\n\n### Design-to-code accuracy  \n\n  Developers can faithfully implement themes exported from the Material Theme Builder — especially those created with **“Color match” unchecked** — without manually extracting and assigning role-based tones.\n\n  For example, if I design a theme in the Theme Builder with “Color match” **unchecked** (to get optimized role colors for better visual harmony), I currently have no direct way to use those exact role-based colors in my Angular Material project. While I could technically apply those colors manually using alternative approaches (e.g., setting CSS variables or custom tokens), it's not an elegant or scalable solution — especially when compared to the integrated experience provided by the [Material 3 Custom Theme schematic](https://github.com/angular/components/blob/main/src/material/schematics/ng-generate/theme-color/README.md).\n\n  Additionally, the official [Figma Material Theme Builder plugin](https://www.figma.com/community/plugin/1034969338659738588/material-theme-builder) behaves the same way as [Material Theme Builder](https://material-foundation.github.io/material-theme-builder/), generating role colors based on the “Color match” setting. Having support for this behavior in Angular Material would create a consistent and accurate workflow across design and code, improving collaboration between designers and developers.\n\n","Url":"https://github.com/angular/components/issues/31392","RelatedDescription":"Open issue \"feat(THEMING): Support configuration option for “Color match” (stay true to inputs) vs optimized role colors in Angular Material theming\" (#31392)"},{"Id":"3164837957","IsPullRequest":true,"CreatedAt":"2025-06-21T07:04:43","Actor":"crisbeto","Number":"31391","RawContent":null,"Title":"fix(material/input): revert wheel workaround","State":"open","Body":"Reverts the workaround from #29074, because it appears to make the behavior inconsistent between browsers and users don't have an easy way to opt out.\r\n\r\nInstead of adding the event from Material, users that care about this behavior can add a `wheel` event themselves.\r\n\r\nFixes #31372.","Url":"https://github.com/angular/components/pull/31391","RelatedDescription":"Open PR \"fix(material/input): revert wheel workaround\" (#31391)"},{"Id":"3164835871","IsPullRequest":true,"CreatedAt":"2025-06-21T07:01:28","Actor":"crisbeto","Number":"31390","RawContent":null,"Title":"fix(material/core): fix sass deprecation warning","State":"open","Body":"Fixes a Sass deprecation warning in the 19.2.x branch.\r\n\r\nFixes #31385.","Url":"https://github.com/angular/components/pull/31390","RelatedDescription":"Open PR \"fix(material/core): fix sass deprecation warning\" (#31390)"},{"Id":"3164628071","IsPullRequest":true,"CreatedAt":"2025-06-21T01:11:49","Actor":"andrewseguin","Number":"31389","RawContent":null,"Title":"refactor: add density scale to system map","State":"open","Body":"","Url":"https://github.com/angular/components/pull/31389","RelatedDescription":"Open PR \"refactor: add density scale to system map\" (#31389)"},{"Id":"3164450524","IsPullRequest":true,"CreatedAt":"2025-06-20T22:00:36","Actor":"ok7sai","Number":"31388","RawContent":null,"Title":"fix(cdk-experimental/tabs): add default aria-labelledby to tab panel","State":"open","Body":"","Url":"https://github.com/angular/components/pull/31388","RelatedDescription":"Open PR \"fix(cdk-experimental/tabs): add default aria-labelledby to tab panel\" (#31388)"},{"Id":"3164002431","IsPullRequest":true,"CreatedAt":"2025-06-20T19:35:02","Actor":"wagnermaciel","Number":"31387","RawContent":null,"Title":"test(cdk-experimental/accordion): add examples to dev-app","State":"closed","Body":"Adds several new examples for the cdk-experimental accordion component:\r\n- Single expansion\r\n- Multi expansion\r\n- Disabled items that are focusable\r\n- Disabled items that are skipped","Url":"https://github.com/angular/components/pull/31387","RelatedDescription":"Closed or merged PR \"test(cdk-experimental/accordion): add examples to dev-app\" (#31387)"},{"Id":"3158305682","IsPullRequest":true,"CreatedAt":"2025-06-20T17:22:36","Actor":"ok7sai","Number":"31382","RawContent":null,"Title":"fix(cdk-experimental/tabs): fix tabs example styles","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31382","RelatedDescription":"Closed or merged PR \"fix(cdk-experimental/tabs): fix tabs example styles\" (#31382)"},{"Id":"3163193130","IsPullRequest":false,"CreatedAt":"2025-06-20T12:38:46","Actor":"jmheretik","Number":"31386","RawContent":null,"Title":"bug(expansion panel): height doesnt resize in safari while expanded","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nheight of the expansion panel doesnt resize in safari while the panel is expanded\n\nin chrome it works OK\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/fcr7qrn2?file=src%2Fexample%2Fexpansion-overview-example.html\n\nSteps to reproduce:\n1. resize the window while the panel is open\n\n\n### Expected Behavior\n\nthe expansion panel body height should resize in safari too, just like it does in chrome\n\n### Actual Behavior\n\nthe expansion panel body height doesnt resize in safari and content overflows\n\n(note: if i close it and open it again the height is fixed)\n\n### Environment\n\n- Angular: ^19.2.0\n- CDK/Material: ^19.2.0\n- Browser(s): Safari\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/31386","RelatedDescription":"Open issue \"bug(expansion panel): height doesnt resize in safari while expanded\" (#31386)"},{"Id":"3162647902","IsPullRequest":false,"CreatedAt":"2025-06-20T09:52:19","Actor":"fableplay13","Number":"31385","RawContent":null,"Title":"bug(COMPONENT): Deprecation warning: color.blue() is deprecated in _token-definition.scss (Sass 1.62+)","State":"open","Body":"### Description\n\nHi,\nwhen using Angular Material v19 with a recent version of Sass, I get the following warning during compilation:\n\nDeprecation Warning on line 232, column 31 of .../node_modules/@angular/material/core/tokens/_token-definition.scss:232:31:\ncolor.blue() is deprecated. Suggestion:\ncolor.channel($color, \"blue\", $space: rgb)\n\nThe warning comes from the luminance($color) function, which uses the deprecated color.blue() function.\nThis warning appears every time I import Material themes in my SCSS files.\n\nRequest:\nCould you update the function and all occurrences of color.blue() (and similar) using the syntax suggested by Sass (color.channel($color, \"blue\", $space: rgb)) to avoid the warning in future releases?\n\nContext:\n\nAngular Material version: 19.x\nSass version: >=1.62\nThe warning does not block the build, but makes it harder to spot other useful warnings.\n\nThank you for your support!\n\n### Expected Behavior\n\nCould you update the function and all occurrences of color.blue() (and similar) using the syntax suggested by Sass (color.channel($color, \"blue\", $space: rgb)) to avoid the warning in future releases\n\n### Actual Behavior\n\nDeprecation Warning on line 232, column 31 of .../node_modules/@angular/material/core/tokens/_token-definition.scss:232:31:\ncolor.blue() is deprecated. Suggestion:\ncolor.channel($color, \"blue\", $space: rgb)\n\n/* BEFORE */\n@function _luminance($color) {\n  $red: _linear-channel-value(color.red($color));\n  $green: _linear-channel-value(color.green($color));\n  $blue: _linear-channel-value(color.blue($color));\n\n  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;\n}\n\n/* AFTER */\n@function _luminance($color) {\n  $red: color.channel($color, \"red\", $space: rgb);\n  $green: color.channel($color, \"green\", $space: rgb);\n  $blue: color.channel($color, \"blue\", $space: rgb);\n\n  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;\n}\n\n### Environment\n\nAngular Material version: 19.x\nSass version: >=1.62\n","Url":"https://github.com/angular/components/issues/31385","RelatedDescription":"Open issue \"bug(COMPONENT): Deprecation warning: color.blue() is deprecated in _token-definition.scss (Sass 1.62+)\" (#31385)"},{"Id":"3161965868","IsPullRequest":false,"CreatedAt":"2025-06-20T05:26:53","Actor":"mayur-subhedar","Number":"31384","RawContent":null,"Title":"Tooltip not displaying on hover in headless/browser automation environment","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n Tooltip not displaying on hover in headless/browser automation environment. I tested it on chrome headless mode on UBUNTU . You can try on WSL. In windows chrome headless it is working fine but not on Ubuntu \n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Install WSL and UBUNTU or directly try on ubuntu\n2. Run automation script (Java+selenium) to validate tooltip on button by hovering on it\n3. Script will fail as tooltip will not appear\n\nPage used to validate\n https://material.angular.dev/components/tooltip/overview\n\n<img width=\"848\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5c132070-b2e0-4666-a4e3-6eb69c490a1b\" />\n\nThis is happening with only Angular tooltips and for other tooltips it is working. Even in screenshot we can't see tooltip on hover action\n\n\nTested on ENV/OS --> Ubuntu- Chrome in headless mode\n\n### Expected Behavior\n\nTooltip should appear\n\n### Actual Behavior\n\nTooltip is not appearing. I think DOM is also not updating on hover\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s): Chrome (Headless)\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\n","Url":"https://github.com/angular/components/issues/31384","RelatedDescription":"Open issue \"Tooltip not displaying on hover in headless/browser automation environment\" (#31384)"},{"Id":"3159307511","IsPullRequest":true,"CreatedAt":"2025-06-19T07:36:29","Actor":"crisbeto","Number":"31383","RawContent":null,"Title":"feat(material/menu): add support for context menu ","State":"open","Body":"Adds the new `MatContextMenuTrigger` directive that allows users to mark an area as a trigger for a menu. When the user right-clicks inside of the area, the menu will be opened next to their pointer.\r\n\r\nFixes #5007.","Url":"https://github.com/angular/components/pull/31383","RelatedDescription":"Open PR \"feat(material/menu): add support for context menu \" (#31383)"},{"Id":"3158096979","IsPullRequest":true,"CreatedAt":"2025-06-18T21:37:59","Actor":"wagnermaciel","Number":"31380","RawContent":null,"Title":"test(cdk-experimental/radio): use case examples","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31380","RelatedDescription":"Closed or merged PR \"test(cdk-experimental/radio): use case examples\" (#31380)"},{"Id":"3158173776","IsPullRequest":false,"CreatedAt":"2025-06-18T21:11:02","Actor":"anwalkers","Number":"31381","RawContent":null,"Title":"bug(mat-button): M2/v20 CSS Properties undefined for protected container shape and other properties","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n^19.0.4 and 20.0.0-rc\n\n### Description\n\nProperties are undefined after upgrading from v19 to v20.\n\nFor example, the previous CSS property for a buttons border radius was `--mdc-protected-button-container-shape` and is now `--mat-protected-button-container-shape`. In v20 after the migration the container shape property is undefined. As you can see in the image below it is impacting other styles like elevation, fab shape, etc. There are other components exhibiting similar issues.\n\nOne note the buttons rendered with the correct radius when the stackblitz app was using the 20.0.0-rc, but after updating the package.json to ^20.0.3 the corner radius is gone.\n\n![Image](https://github.com/user-attachments/assets/40117184-b870-4b5e-b716-28af5cad0749)\n\n### Reproduction\n\nStackBlitz links: \n20.0.0-rc -> https://stackblitz.com/edit/qdekw1xu?file=package.json\n^20.0.3 -> https://stackblitz.com/edit/ercfc1np?file=package.json\nSteps to reproduce:\n1. Run the stackblitz app\n2. Check that them definition is the M2 approach\n3. inspect the CSS for button border radius\n\n### Expected Behavior\n\nButton corners to default to 4px radius\n\n### Actual Behavior\n\nThe css property to set the corner radius is not set\n\n### Environment\n\n- Angular: 20.0.3\n- CDK/Material: 20.0.3\n- Browser(s): Chrome , Edge, and Firefox\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows and Ubuntu\n","Url":"https://github.com/angular/components/issues/31381","RelatedDescription":"Open issue \"bug(mat-button): M2/v20 CSS Properties undefined for protected container shape and other properties\" (#31381)"},{"Id":"3151052919","IsPullRequest":true,"CreatedAt":"2025-06-18T16:12:04","Actor":"andrewseguin","Number":"31362","RawContent":null,"Title":"refactor: use values API for creating tokens","State":"closed","Body":"Switches remaining uses of `create-token-values` and `create-token-values-mixed` to just the single `values` API.","Url":"https://github.com/angular/components/pull/31362","RelatedDescription":"Closed or merged PR \"refactor: use values API for creating tokens\" (#31362)"},{"Id":"3155958280","IsPullRequest":true,"CreatedAt":"2025-06-18T08:26:45","Actor":"ok7sai","Number":"31379","RawContent":null,"Title":"fix(cdk-experimental/accordion): fix disabled trigger button can't be focused when skipDisabled=false","State":"open","Body":"In short, in the demo page\r\n```\r\n<button cdkAccordionTrigger disabled>\r\n```\r\nMakes the button natively disabled and not focusable, so even with `skipDisabled=false` it can't be focused by the focus manager.\r\n\r\nChange it to\r\n```\r\n<button cdkAccordionTrigger [disabled]=\"true\">\r\n```\r\nMakes the `cdkAccordionTrigger` to be disabled without changing the button state.\r\n\r\nAlso added the `inert` attribute to the button when it's completely disabled(disabled and skip disabled), so it can't be focused by a pointer.","Url":"https://github.com/angular/components/pull/31379","RelatedDescription":"Open PR \"fix(cdk-experimental/accordion): fix disabled trigger button can't be focused when skipDisabled=false\" (#31379)"},{"Id":"3155813371","IsPullRequest":false,"CreatedAt":"2025-06-18T07:37:04","Actor":"itstefanjanos","Number":"31378","RawContent":null,"Title":"feat(material/calendar-header): Add Tooltip Support for Calendar Header Control Buttons to Provide Visible Accessible Labels","State":"open","Body":"### Feature Description\n\n**Background:**\nTo meet WCAG 3.3.2 (Labels or Instructions) accessibility compliance, all interactive elements should provide clear and descriptive labels or instructions. The calendar component’s header control buttons (such as month selection and view mode selection) currently use aria-label attributes to provide accessible names for assistive technologies.\n\n**Current Limitation:**\nWhile the use of aria-label helps screen reader users, there are still usability and accessibility gaps:\n\nSighted users, users with cognitive difficulties, and users unfamiliar with icon-only interfaces may not easily understand the buttons' purposes.\nThere is no visible label or tooltip on these buttons, making their function unclear for many users.\nProposed Solution:\nEnhance the Angular Material calendar component to allow tooltips on header control buttons. These tooltips would display descriptive labels (e.g., “Choose date”, “Next month”) on hover or focus, benefiting all users and further aligning with WCAG 3.3.2.\n\n**Benefits:**\n\nImproves accessibility and usability for all users, not just those using assistive technology.\nProvides visible contextual guidance, reducing confusion for first-time or infrequent users.\nFurther supports compliance with WCAG 3.3.2 by providing both programmatic (aria-label) and visible (tooltip) labels.\nExample:\nWhen the user hovers or focuses on a calendar header control button, a tooltip should appear with an appropriate label for the button’s action.\n\nReferences:\n\n[WCAG 3.3.2: Labels or Instructions](https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions.html)\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/31378","RelatedDescription":"Open issue \"feat(material/calendar-header): Add Tooltip Support for Calendar Header Control Buttons to Provide Visible Accessible Labels\" (#31378)"},{"Id":"3154185980","IsPullRequest":true,"CreatedAt":"2025-06-17T23:29:46","Actor":"ok7sai","Number":"31374","RawContent":null,"Title":"feat(cdk-experimental/tabs): add setDefaultState and unit tests, refactor the content children strategy","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31374","RelatedDescription":"Closed or merged PR \"feat(cdk-experimental/tabs): add setDefaultState and unit tests, refactor the content children strategy\" (#31374)"},{"Id":"3151338010","IsPullRequest":true,"CreatedAt":"2025-06-17T17:53:16","Actor":"andrewseguin","Number":"31366","RawContent":null,"Title":"fix(material/slide-toggle): use token system for label text","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31366","RelatedDescription":"Closed or merged PR \"fix(material/slide-toggle): use token system for label text\" (#31366)"},{"Id":"3151009974","IsPullRequest":true,"CreatedAt":"2025-06-17T17:49:33","Actor":"andrewseguin","Number":"31361","RawContent":null,"Title":"refactor: remove duplicate theme style warnings","State":"closed","Body":"Removes the Sass warning about duplicate styles being emitted. This can happen if a theme file emits styles twice.\r\n\r\nThis was only really an issue before we used CSS variables, since the theme files emitted longer concrete CSS styles. Now, it's really not a big deal if extra tokens are emitted since its very minimal. Also, it's not clear users understood how to evade this warning, especially in an ergonomic way","Url":"https://github.com/angular/components/pull/31361","RelatedDescription":"Closed or merged PR \"refactor: remove duplicate theme style warnings\" (#31361)"},{"Id":"3147220379","IsPullRequest":true,"CreatedAt":"2025-06-17T16:23:53","Actor":"crisbeto","Number":"31360","RawContent":null,"Title":"compileComponents cleanups","State":"closed","Body":"Fixes some calls to `compileComponents` that were introduced after the last cleanup. Also sets up tooling to prevent new ones from being added.","Url":"https://github.com/angular/components/pull/31360","RelatedDescription":"Closed or merged PR \"compileComponents cleanups\" (#31360)"},{"Id":"3153871102","IsPullRequest":false,"CreatedAt":"2025-06-17T15:11:56","Actor":"theoarav","Number":"31373","RawContent":null,"Title":"bug(cdk/overlay): Output isn't recognized as a signal","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen trying to bind output through a component instanciated with `@angular/cdk` and passed to `ng-dynamic-component` library, the signal output isn't recognized as a Signal output.\n\nI opened an issue on `ng-dynamic-component`: [https://github.com/gund/ng-dynamic-component/issues/527](https://github.com/gund/ng-dynamic-component/issues/527)\n\n### Reproduction\n\nStackBlitz link: [https://stackblitz.com/edit/stackblitz-starters-cwmkaoqj](https://stackblitz.com/edit/stackblitz-starters-cwmkaoqj)\nSteps to reproduce:\n1. Click on `Open Overlay` button\n2. Click on `Output signal` inside the overlay\n\n\n### Expected Behavior\n\nThe button should've worked the same as the one outside of the overlay.\n\n### Actual Behavior\n\nAn console error indicating that the library `ng-dynamic-component` doesn't recognize the output.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Chrome Version 137.0.7151.68 (Official Build) (x86_64)\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/31373","RelatedDescription":"Open issue \"bug(cdk/overlay): Output isn't recognized as a signal\" (#31373)"},{"Id":"3153809021","IsPullRequest":false,"CreatedAt":"2025-06-17T14:54:25","Actor":"zerbusdetroy","Number":"31372","RawContent":null,"Title":"bug(matInput): drop automatic wheel listeners on number inputs","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe fix for [#29074](https://github.com/angular/components/issues/29074) added a passive `wheel` listener to every `<input matInput type=\"number\">`.\nBecause Blink & WebKit treat the mere presence of a listener as **opt-in**, this forces mouse-wheel **value-spinning** everywhere, even when the user just wants to scroll the page.\n\nWhy this is problematic :\n\n- **Inconsistent UX** — Firefox disabled wheel-spin in 2023; WebKit is removing it; [WHATWG #10911](https://bugs.webkit.org/show_bug.cgi?id=244240#c3) discusses dropping it entirely. We now ship a behaviour that only some engines still support.\n- **Hard to opt out** — apps that prefer native behaviour must add custom directives just to undo the framework’s side-effect.\n- **Questionable default** — wheel-spin is widely regarded as error-prone; many design systems leave it off unless the app explicitly opts-in.\n- **Big change for a small bug** — the original issue surfaced only after a tooltip attached its own wheel listener; solving that by adding another listener to every number input feels disproportionate.\n\n**Proposal**\n\n1. Remove the automatic wheel listener from MatInput.\n2. Re-open #29074 and fix it at the tooltip level (e.g. use a scroll listener or attach wheel outside the event path of inputs).\n3. If needed, expose an opt-in flag like enableWheelIncrement for teams that really want the legacy behaviour.\n\nThis restores native defaults, keeps Material aligned with browser evolution, and lets developers choose the experience that fits their users.\n\n### Reproduction\n\n\n1. Open any Angular Material form that contains `<input matInput type=\"number\">` in **Chrome** (Blink)\n2. Focus the field, keep the cursor over it, and spin the mouse-wheel.\n3. **Actual result**: the numeric value increments or decrements.\n**Expected**: per MDN / HTML guidance, the wheel should scroll the page unless the site explicitly opts-in. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number\n4. Repeat the same steps in **Firefox** (Gecko).\n5. **Result**: the value **does not** change; only the page scrolls.\n\n\n### Expected Behavior\n\nOn all modern browsers, the value **does not** change; only the page scrolls.\n\n### Actual Behavior\n\nThe automatic wheel listener makes Angular Material inputs behave differently across browsers and diverge from the default behaviour that modern engines are converging toward.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19 \n- Browser(s): Chrome / Safari\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/31372","RelatedDescription":"Open issue \"bug(matInput): drop automatic wheel listeners on number inputs\" (#31372)"},{"Id":"3153244497","IsPullRequest":true,"CreatedAt":"2025-06-17T12:01:23","Actor":"chintankavathia","Number":"31371","RawContent":null,"Title":"feat(cdk/menu): add setActiveMenuItem to cdkMenu","State":"open","Body":"See https://github.com/angular/components/issues/31370 for more details","Url":"https://github.com/angular/components/pull/31371","RelatedDescription":"Open PR \"feat(cdk/menu): add setActiveMenuItem to cdkMenu\" (#31371)"},{"Id":"3153226941","IsPullRequest":false,"CreatedAt":"2025-06-17T11:55:55","Actor":"chintankavathia","Number":"31370","RawContent":null,"Title":"bug(cdk/menu): not possible to update active focus item","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`CdkMenu` uses FocusManager to navigate through menu items howerever focuskeymanager is not exposed to public to programatically set different item as active one.\n\nAlthough `cdkMenuItem` has `focus` method it only allows to focus specific menu item and doesn't set the active item in focusmanager accordingly.\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/4a2okv3p?file=src%2Fexample%2Fcdk-menu-inline-example.ts\nSteps to reproduce:\n1. Go to given StackBlitz link\n2. Observe 2nd item is focused\n3. Hit Arrow Down\n4. Observe focus shifts to first item on the list instead of 3rd\n\n\n### Expected Behavior\n\nfocus should go to next item when pressing arrow down.\n\none possible solution is to provide api `setActiveMenuItem` on `cdkmenu`\n\n### Actual Behavior\n\nfocus resets back to first item.\n\n### Environment\n\n- Angular: 20\n- CDK/Material: 20\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\n","Url":"https://github.com/angular/components/issues/31370","RelatedDescription":"Open issue \"bug(cdk/menu): not possible to update active focus item\" (#31370)"},{"Id":"3152596366","IsPullRequest":false,"CreatedAt":"2025-06-17T08:37:21","Actor":"nietoperze","Number":"31368","RawContent":null,"Title":"bug(mat-hint & mat-error): Font scaling breaks layout of mat-hint and validation messages","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen font scaling is increased (e.g. via browser/system settings), `mat-hint` and validation messages (`mat-error`) for input fields overflow into the next content block, breaking layout and readability.\n\n<img width=\"289\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/12626795-86b2-4c75-be38-8215b6c2ac1c\" />\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/vjrf1ddz?file=src%2Fexample%2Fform-field-appearance-example.html\nSteps to reproduce:\n1. Increase font size in browser settings to very big.\n2. Observe how hint and error messages overlap or push into adjacent content.\n\n\n### Expected Behavior\n\n- Hint and error messages should remain visually associated with their input fields.\n- Layout should adapt to font scaling without breaking structure.\n\n### Actual Behavior\n\n- Text overflows or overlaps with unrelated content.\n- Layout becomes confusing or unreadable.\n\n### Environment\n\n- Angular: 20.0.3\n- CDK/Material: 20.0.3\n- Browser(s): Microsoft Edge, Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/31368","RelatedDescription":"Open issue \"bug(mat-hint & mat-error): Font scaling breaks layout of mat-hint and validation messages\" (#31368)"},{"Id":"3151355190","IsPullRequest":true,"CreatedAt":"2025-06-16T21:17:25","Actor":"andrewseguin","Number":"31367","RawContent":null,"Title":"fix(material/button): remove concrete icon button theme styles","State":"open","Body":"Removes hardcoded concrete styles that are emitted in M2's icon button density mixin","Url":"https://github.com/angular/components/pull/31367","RelatedDescription":"Open PR \"fix(material/button): remove concrete icon button theme styles\" (#31367)"},{"Id":"3151314394","IsPullRequest":true,"CreatedAt":"2025-06-16T21:00:46","Actor":"andrewseguin","Number":"31365","RawContent":null,"Title":"fix(material/list): remove custom m2 theme styles","State":"open","Body":"Remove styles that were concretely added in the list's M2 theme styles. Density was slightly different when there's an avatar/checkbox/radio, typography styles were defined separately for the \"subheader\" (added new tokens), and the selected item color was hardcoded as primary (added new token)","Url":"https://github.com/angular/components/pull/31365","RelatedDescription":"Open PR \"fix(material/list): remove custom m2 theme styles\" (#31365)"},{"Id":"3151153323","IsPullRequest":true,"CreatedAt":"2025-06-16T20:11:12","Actor":"andrewseguin","Number":"31364","RawContent":null,"Title":"refactor: fix lint","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31364","RelatedDescription":"Closed or merged PR \"refactor: fix lint\" (#31364)"},{"Id":"3151135456","IsPullRequest":true,"CreatedAt":"2025-06-16T19:56:10","Actor":"andrewseguin","Number":"31363","RawContent":null,"Title":"refactor: sync missed changes in g3","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/31363","RelatedDescription":"Closed or merged PR \"refactor: sync missed changes in g3\" (#31363)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-22T03:30:02.5712886Z","RunDurationInMilliseconds":1839}