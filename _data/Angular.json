{"Data":{"Angular-Issues":{"Issues":[{"Id":"1872042038","IsPullRequest":true,"CreatedAt":"2023-08-29T21:52:42","Actor":"josephperrott","Number":"51554","RawContent":null,"Title":" Correct escaping in various locations","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51554","RelatedDescription":"Closed or merged PR \" Correct escaping in various locations\" (#51554)"},{"Id":"1872070108","IsPullRequest":true,"CreatedAt":"2023-08-29T21:13:22","Actor":"josephperrott","Number":"51555","RawContent":null,"Title":"fix(docs-infra): escape the `.` character in regex","State":"closed","Body":"Escape the `.` character in a hostnaem regex\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51555","RelatedDescription":"Closed or merged PR \"fix(docs-infra): escape the `.` character in regex\" (#51555)"},{"Id":"1872393671","IsPullRequest":true,"CreatedAt":"2023-08-29T20:32:25","Actor":"josephperrott","Number":"51563","RawContent":null,"Title":"correct incomplete string escaping","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/51563","RelatedDescription":"Open PR \"correct incomplete string escaping\" (#51563)"},{"Id":"1872298688","IsPullRequest":true,"CreatedAt":"2023-08-29T20:27:07","Actor":"josephperrott","Number":"51562","RawContent":null,"Title":"build: update packages for security related changes in aio","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51562","RelatedDescription":"Closed or merged PR \"build: update packages for security related changes in aio\" (#51562)"},{"Id":"1872113223","IsPullRequest":true,"CreatedAt":"2023-08-29T19:48:33","Actor":"josephperrott","Number":"51557","RawContent":null,"Title":"Correct assorted incomplete escaping","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51557","RelatedDescription":"Closed or merged PR \"Correct assorted incomplete escaping\" (#51557)"},{"Id":"1872272446","IsPullRequest":true,"CreatedAt":"2023-08-29T19:28:14","Actor":"atscott","Number":"51561","RawContent":null,"Title":"fix(router): Ensure title observable gets latest values","State":"open","Body":"The data `Observable` is not updated unless there have been changes to the object. The current diffing does not look at `symbol` keys of the object but the `title` property is stored as a private `symbol`. This commit updates the object diffing to include symbols.\r\n\r\nfixes #51401\r\n","Url":"https://github.com/angular/angular/pull/51561","RelatedDescription":"Open PR \"fix(router): Ensure title observable gets latest values\" (#51561)"},{"Id":"1872235599","IsPullRequest":true,"CreatedAt":"2023-08-29T19:04:58","Actor":"atscott","Number":"51560","RawContent":null,"Title":"docs: update router reference to use standalone","State":"open","Body":"this commit updates the router reference to use standalone features.\r\n","Url":"https://github.com/angular/angular/pull/51560","RelatedDescription":"Open PR \"docs: update router reference to use standalone\" (#51560)"},{"Id":"1872232251","IsPullRequest":true,"CreatedAt":"2023-08-29T19:02:22","Actor":"devknoll","Number":"51559","RawContent":null,"Title":"feat(core): support phases in afterRender and afterNextRender","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51559","RelatedDescription":"Open PR \"feat(core): support phases in afterRender and afterNextRender\" (#51559)"},{"Id":"1872094584","IsPullRequest":true,"CreatedAt":"2023-08-29T18:39:02","Actor":"josephperrott","Number":"51556","RawContent":null,"Title":"build: use pin for devcontainer base image","State":"closed","Body":"Use pinned verison of container image for devcontainer.","Url":"https://github.com/angular/angular/pull/51556","RelatedDescription":"Closed or merged PR \"build: use pin for devcontainer base image\" (#51556)"},{"Id":"1872186469","IsPullRequest":true,"CreatedAt":"2023-08-29T18:28:20","Actor":"atscott","Number":"51558","RawContent":null,"Title":"docs: Update common routing tasks guide to use standalone","State":"open","Body":"Update the common routing tasks guide to use standalone features.\r\n","Url":"https://github.com/angular/angular/pull/51558","RelatedDescription":"Open PR \"docs: Update common routing tasks guide to use standalone\" (#51558)"},{"Id":"1871761758","IsPullRequest":true,"CreatedAt":"2023-08-29T17:54:25","Actor":"devknoll","Number":"51551","RawContent":null,"Title":"fix(core): run afterRender callbacks outside of the Angular zone","State":"closed","Body":"afterRender should run outside of the Angular zone so that it does not trigger further CD cycles\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCallbacks are executed in the Angular zone, causing patched APIs like `setTimeout` to trigger subsequent change detection cycles, and further `afterRender` callbacks.\r\n\r\nIssue Number: #51343\r\n\r\n\r\n## What is the new behavior?\r\nCallbacks are always executed outside of the Angular zone, preventing accidental infinite render loops.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n`afterRender` is in developer preview, and so this is not considered a breaking change.\r\n\r\n\r\n## Other information\r\n\r\nCloses #51343","Url":"https://github.com/angular/angular/pull/51551","RelatedDescription":"Closed or merged PR \"fix(core): run afterRender callbacks outside of the Angular zone\" (#51551)"},{"Id":"1870126181","IsPullRequest":true,"CreatedAt":"2023-08-29T17:54:00","Actor":"bencodezen","Number":"51538","RawContent":null,"Title":"docs: migrate event-binding code to standalone","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51538","RelatedDescription":"Closed or merged PR \"docs: migrate event-binding code to standalone\" (#51538)"},{"Id":"1872034175","IsPullRequest":true,"CreatedAt":"2023-08-29T16:41:53","Actor":"josephperrott","Number":"51553","RawContent":null,"Title":"Correct escaping in various locations.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51553","RelatedDescription":"Closed or merged PR \"Correct escaping in various locations.\" (#51553)"},{"Id":"1871031329","IsPullRequest":true,"CreatedAt":"2023-08-29T16:38:58","Actor":"crisbeto","Number":"51546","RawContent":null,"Title":"perf(core): chain template instructions","State":"closed","Body":"With the new control flow and defer blocks it'll be common for several template instructions to be declared one after another. These changes add support for chaining to the `template` instruction which will allow us to save some bytes.","Url":"https://github.com/angular/angular/pull/51546","RelatedDescription":"Closed or merged PR \"perf(core): chain template instructions\" (#51546)"},{"Id":"1869909608","IsPullRequest":false,"CreatedAt":"2023-08-29T16:29:39","Actor":"hiepxanh","Number":"51535","RawContent":null,"Title":"Dynamic components aren't hydrated when appModule bootstrap AppComponent","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nAfter one month chasing this issue. I think I can finally reach it.  @AndrewKushnir \r\n## Example 1:\r\nlink: https://codesandbox.io/p/sandbox/unruffled-dawn-dngll7\r\n\r\nPreviously, this issue https://github.com/angular/angular/issues/51157 does show that dynamic component aren't hydrated and his example give 2 instance, because he have bootstrap on app.module.ts and it show 2 instance:\r\n![image](https://github.com/angular/angular/assets/16970990/c0a5e8a9-a2e4-4794-bb14-7186f5d9dabc)\r\n\r\n## Example 2:\r\nlink: https://codesandbox.io/p/sandbox/relaxed-feather-27fv8y?file=/src/app/app.module.ts:1,1\r\nI accident commend on bootstrap row in app.module.ts and it does not show error but give expect answer:\r\n![image](https://github.com/angular/angular/assets/16970990/e54797ed-2701-4226-88f1-e937b561a79a)\r\nAfter that I think we fix that issue and case close\r\n\r\n## Example 3: \r\nlink: https://codesandbox.io/p/sandbox/sharp-gagarin-j9ycmg?file=/src/app/app.component.ts:24,14\r\n\r\nI still get the flick and it still a really annoy issue. So I decide to reproduce my closest behavior on my production repo. So it little different but basicly same with example 2. Just only one think, I did not accident commend and now it alway render browser instead of reuse variable hydrated from server.\r\n\r\n![image](https://github.com/angular/angular/assets/16970990/59bc92f9-5ba6-4ff2-b4dd-1da1e4d0b536)\r\n\r\n\r\nright now I have the same issue with the new reproduce with createComponent function. And I realize that problem come from bootstrap: [AppComponent] is open or not. I think it is important and require because my project instant dead if I commend this.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://codesandbox.io/p/sandbox/sharp-gagarin-j9ycmg?file=/src/app/navbar.component.ts:8,26\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\"dependencies\": {\r\n    \"@angular/animations\": \"^16.2.0\",\r\n    \"@angular/common\": \"^16.2.0\",\r\n    \"@angular/compiler\": \"^16.2.0\",\r\n    \"@angular/core\": \"^16.2.0\",\r\n    \"@angular/forms\": \"^16.2.0\",\r\n    \"@angular/platform-browser\": \"^16.2.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^16.2.0\",\r\n    \"@angular/platform-server\": \"^16.2.0\",\r\n    \"@angular/router\": \"^16.2.0\",\r\n    \"@nguniversal/express-engine\": \"^16.1.3\",\r\n    \"express\": \"^4.15.2\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.13.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^16.1.1\",\r\n    \"@angular/cli\": \"~16.2.0\",\r\n    \"@angular/compiler-cli\": \"^16.2.0\",\r\n    \"@nguniversal/builders\": \"^16.1.2\",\r\n    \"@types/express\": \"^4.17.0\",\r\n    \"@types/jasmine\": \"~4.3.0\",\r\n    \"@types/node\": \"^14.15.0\",\r\n    \"jasmine-core\": \"~4.6.0\",\r\n    \"karma\": \"~6.4.0\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.0\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~2.0.0\",\r\n    \"typescript\": \"~5.0.2\"\r\n  }\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51535","RelatedDescription":"Closed issue \"Dynamic components aren't hydrated when appModule bootstrap AppComponent\" (#51535)"},{"Id":"1871963441","IsPullRequest":false,"CreatedAt":"2023-08-29T15:52:17","Actor":"josephperrott","Number":"51552","RawContent":null,"Title":"Polynomial regular expression used on uncontrolled data","State":"open","Body":"<!-- Warning: The suggested title contains the alert rule name. This can expose security information. -->\r\n\r\nTracking issue for:\r\n- [ ] https://github.com/angular/angular/security/code-scanning/90\r\n- [ ] https://github.com/angular/angular/security/code-scanning/89\r\n- [ ] https://github.com/angular/angular/security/code-scanning/88\r\n- [ ] https://github.com/angular/angular/security/code-scanning/87\r\n- [ ] https://github.com/angular/angular/security/code-scanning/86\r\n- [ ] https://github.com/angular/angular/security/code-scanning/85\r\n- [ ] https://github.com/angular/angular/security/code-scanning/84\r\n","Url":"https://github.com/angular/angular/issues/51552","RelatedDescription":"Open issue \"Polynomial regular expression used on uncontrolled data\" (#51552)"},{"Id":"1871498667","IsPullRequest":true,"CreatedAt":"2023-08-29T11:46:40","Actor":"selehadin-cyber","Number":"51550","RawContent":null,"Title":"Decrease padding and add more indentation to declutter the sidenavs (#51524)","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nnot so intuitive sidenav\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/88f06879-a03e-4316-9e93-648c654c597f)\r\n\r\nIssue Number: #51524\r\n\r\n\r\n## What is the new behavior?\r\n\r\nmore easily navigable sidenav with increased indentation and less vertical spacing between items\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/1eb28d55-81d2-4b8b-9e9f-100a32075052)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51550","RelatedDescription":"Open PR \"Decrease padding and add more indentation to declutter the sidenavs (#51524)\" (#51550)"},{"Id":"1871072639","IsPullRequest":true,"CreatedAt":"2023-08-29T11:45:14","Actor":"selehadin-cyber","Number":"51547","RawContent":null,"Title":"Decrease padding and add more indentation to declutter the sidenavs (#51524) ","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nnot so intuitive sidenav\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/88f06879-a03e-4316-9e93-648c654c597f)\r\n\r\nIssue Number: #51524\r\n\r\n\r\n## What is the new behavior?\r\n\r\nmore easily navigable sidenav with increased indentation and less vertical spacing between items\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/1eb28d55-81d2-4b8b-9e9f-100a32075052)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51547","RelatedDescription":"Closed or merged PR \"Decrease padding and add more indentation to declutter the sidenavs (#51524) \" (#51547)"},{"Id":"1871170897","IsPullRequest":false,"CreatedAt":"2023-08-29T08:37:08","Actor":"akuma8","Number":"51548","RawContent":null,"Title":"Add the latest version of Angular on the toolbar of angular.io website","State":"open","Body":"### Describe the problem that you experienced\n\nIt would be nice to have the latest version of Angular on the toolbar of https://angular.io so we don't need to visit the github repository to have that information.\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/51548","RelatedDescription":"Open issue \"Add the latest version of Angular on the toolbar of angular.io website\" (#51548)"},{"Id":"1871023686","IsPullRequest":true,"CreatedAt":"2023-08-29T07:31:49","Actor":"selehadin-cyber","Number":"51545","RawContent":null,"Title":"Decrease padding and add more indentation to declutter the sidenavs (#51524)","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nnot so intuitive sidenav\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/88f06879-a03e-4316-9e93-648c654c597f)\r\n\r\nIssue Number: #51524\r\n\r\n\r\n## What is the new behavior?\r\n\r\nmore easily navigable sidenav with increased indentation and less vertical spacing between items\r\n\r\n![image](https://github.com/angular/angular/assets/69892114/1eb28d55-81d2-4b8b-9e9f-100a32075052)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51545","RelatedDescription":"Closed or merged PR \"Decrease padding and add more indentation to declutter the sidenavs (#51524)\" (#51545)"},{"Id":"1870813105","IsPullRequest":true,"CreatedAt":"2023-08-29T03:23:36","Actor":"dylhunn","Number":"51544","RawContent":null,"Title":"refactor(compiler): Support content projection in template pipeline","State":"open","Body":"Add support for content projection to the template pipeline, including `projection`, `projectionDef`, `ngContentSelectors`, and `ngProjectAs`. See individual commits for details.","Url":"https://github.com/angular/angular/pull/51544","RelatedDescription":"Open PR \"refactor(compiler): Support content projection in template pipeline\" (#51544)"},{"Id":"1870649415","IsPullRequest":true,"CreatedAt":"2023-08-28T23:35:28","Actor":"atscott","Number":"51543","RawContent":null,"Title":"Route matching refactors","State":"open","Body":"See individual commits. Includes some cleanup, code simplification and deduplication.","Url":"https://github.com/angular/angular/pull/51543","RelatedDescription":"Open PR \"Route matching refactors\" (#51543)"},{"Id":"1870506813","IsPullRequest":false,"CreatedAt":"2023-08-28T21:05:29","Actor":"ShacharHarshuv","Number":"51542","RawContent":null,"Title":"Cold Signals?","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncore\r\n\r\n### Description\r\n\r\nOne of the things I like about the Angular's signal API, is how the `computed` signal is both lazy (runs only if needed) and shared (results are not recalculated between consumers). \r\n\r\nAs I imagine the future of using signals as a replacement of RxJS (at least, in most cases), I was wondering how would an HttpClient that returns a signal will look like. \r\n\r\nOf course - we can wrap the HttpClient with `toSignal` to return a signal, but the problem is that that would make an immediate subscription that will cause a request to be sent, even before the signal was used. Ideally, we would want to create signals, and have them send the request only when needed (aka - lazily).\r\n\r\nI [tried to work around ](https://stackblitz.com/edit/stackblitz-starters-c1pndt?file=src%2Fmain.ts) this issue using `computed`, but it didn't work as creating \"setting a signal\" is not allowed inside a computed callback. \r\n\r\n### Proposed solution\r\n\r\nOne option is to allowed writing to signals inside a computed, like can be allowed with effects:\r\n\r\n```\r\neffect(() => {\r\n...\r\n}, {\r\n  allowSignalWrites: true,\r\n})\r\n```\r\n\r\nSo the workaround will work.\r\n\r\nAnother option is to allow for cold signals in the `toSignal` callback:\r\n\r\n```ts\r\ntoSignal(myObseravble$, { lazy: true })\r\n```\r\n\r\nIn this option - the observable will be subscribed to only on the first time that the signal is read. \r\n\r\n### Alternatives considered\r\n\r\nSee multiple options in proposition above. ","Url":"https://github.com/angular/angular/issues/51542","RelatedDescription":"Open issue \"Cold Signals?\" (#51542)"},{"Id":"1870355045","IsPullRequest":true,"CreatedAt":"2023-08-28T19:37:33","Actor":"devknoll","Number":"51541","RawContent":null,"Title":"refactor(core): make AfterRenderEventManager tree-shakable","State":"open","Body":"In preparation for adding support for phases to after*Render, which will increase the implementation size, this commit splits out the optional logic so that it can be tree-shaken and dynamically loaded.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51541","RelatedDescription":"Open PR \"refactor(core): make AfterRenderEventManager tree-shakable\" (#51541)"},{"Id":"1870161894","IsPullRequest":true,"CreatedAt":"2023-08-28T17:28:52","Actor":"bencodezen","Number":"51540","RawContent":null,"Title":"docs: migrate dynamic-form guide and code to standalone","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51540","RelatedDescription":"Open PR \"docs: migrate dynamic-form guide and code to standalone\" (#51540)"},{"Id":"1870133346","IsPullRequest":false,"CreatedAt":"2023-08-28T17:24:17","Actor":"jsaguet","Number":"51539","RawContent":null,"Title":"Expose HTTP_INTERCEPTOR_FNS in public api","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon/http\r\n\r\n### Description\r\n\r\nHttp interceptor functions are currently provided by two injection tokens: `HTTP_INTERCEPTOR_FNS` and `HTTP_ROOT_INTERCEPTOR_FNS`. None of which are available as public APIs.\r\n\r\nInstead, we have to use \r\n```typescript\r\nprovideHttpClient(withInterceptors(...interceptors))\r\n```\r\n\r\nLet's say we have an application that use a set of interceptors. We will use them like that:\r\n```typescript\r\nprovideHttpClient(\r\n    withInterceptors([\r\n\tcommonInterceptor1,\r\n\tcommonInterceptor2,\r\n    ])\r\n)\r\n```\r\n\r\nNow let's say we import a library and this library needs to provide another interceptor to work.\r\n\r\nThe only way to provide an additional interceptor from the library would be to do:\r\n```typescript\r\nexport function provideAdditionalFeature() {\r\n    return makeEnvironmentProviders([\r\n\t...featureProviders,\r\n\tprovideHttpClient(withInterceptors([additionalInterceptor])),\r\n    ]),\r\n}\r\n```\r\n\r\nWe need to provide again the http client even though we only want to provide a new interceptor.\r\n\r\nIf we had access to the underlying `HTTP_INTERCEPTOR_FNS`, we could avoid providing again the http client by doing this:\r\n```typescript\r\nexport function provideAdditionalFeature() {\r\n    return makeEnvironmentProviders([\r\n\t...featureProviders,\r\n\t{\r\n\t    provide: HTTP_INTERCEPTOR_FNS,\r\n\t    useValue: additionalInterceptor,\r\n\t    multi: true\r\n\t},\r\n    ]),\r\n}\r\n```\r\n\r\nThis is exactly what is done internally for the `provideClientHydration()` (except that it uses another token but it's equivalent)\r\n\r\n```typescript\r\nexport function withHttpTransferCache(): Provider[] {\r\n  return [\r\n    ...\r\n    {\r\n      provide: HTTP_ROOT_INTERCEPTOR_FNS,\r\n      useValue: transferCacheInterceptorFn,\r\n      multi: true,\r\n      deps: [TransferState, CACHE_STATE]\r\n    },\r\n    ...\r\n  ];\r\n}\r\n```\r\n\r\n### Proposed solution\r\n\r\nExport `HTTP_INTERCEPTOR_FNS` in public API.\r\n\r\n### Alternatives considered\r\n\r\nI can see 3 alternatives:\r\nThe first one, I already talked about it, is to keep providing http client everytime we want to provide an interceptor.\r\n\r\nThe second one I see is to keep using the old `HTTP_INTERCEPTOR` token.\r\nWith this solution, we're forced to use `withInterceptorsFromDi()` and this `HTTP_INTERCEPTOR` token is already considered a legacy API as we can see in the angular code:\r\n```typescript\r\nexport function withInterceptorsFromDi(): HttpFeature<HttpFeatureKind.LegacyInterceptors> {\r\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [\r\n    {\r\n      provide: LEGACY_INTERCEPTOR_FN,\r\n      useFactory: legacyInterceptorFnFactory,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTOR_FNS,\r\n      useExisting: LEGACY_INTERCEPTOR_FN,\r\n      multi: true,\r\n    }\r\n  ]);\r\n}\r\n```\r\n\r\nThe third option I see is to expose the interceptor from the library and let the consumer import it in `withInterceptors()`. \r\nBut this causes a problem with encapsulation.","Url":"https://github.com/angular/angular/issues/51539","RelatedDescription":"Closed issue \"Expose HTTP_INTERCEPTOR_FNS in public api\" (#51539)"},{"Id":"1870114022","IsPullRequest":true,"CreatedAt":"2023-08-28T16:53:22","Actor":"atscott","Number":"51537","RawContent":null,"Title":"fix(core): Ensure backwards-referenced transplanted views are refreshed","State":"open","Body":"This commit updates the tracking of dirty child views to not specifically track child views to refresh at all. Instead, after the regular change detection cycle, a second pass is done to look for views with the `RefreshView` flag. This pass is done repeatedly until no views with the flag were found during the traversal. This is similar to the 2 runs of change detection in AngularJS but with a huge improvement: rather than actually running change detection twice on the whole app, the second pass is only a traversal to check for any dirty views.\r\n\r\n(Draft for experimentation and to run TGP)","Url":"https://github.com/angular/angular/pull/51537","RelatedDescription":"Open PR \"fix(core): Ensure backwards-referenced transplanted views are refreshed\" (#51537)"},{"Id":"1870094473","IsPullRequest":true,"CreatedAt":"2023-08-28T16:39:02","Actor":"bencodezen","Number":"51536","RawContent":null,"Title":"docs: migrate errors code example and guide to standalone","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51536","RelatedDescription":"Open PR \"docs: migrate errors code example and guide to standalone\" (#51536)"},{"Id":"1869620783","IsPullRequest":false,"CreatedAt":"2023-08-28T12:25:21","Actor":"martiesim","Number":"51534","RawContent":null,"Title":"date pipe uses us format for \"shortDate\" and \"en-GB\" locale","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncommon\n\n### Is this a regression?\n\nYes\n\n### Description\n\nThe DatePipe uses the american date format for the format \"shortDate\", if the locale \"en-GB\" is given.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-4pnynj?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nThe date is shown with american format with month before day and not in the british format with day before month.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.8\r\nNode: 16.18.1\r\nPackage Manager: yarn 1.22.17\r\nOS: linux x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51534","RelatedDescription":"Closed issue \"date pipe uses us format for \"shortDate\" and \"en-GB\" locale\" (#51534)"},{"Id":"1869530346","IsPullRequest":true,"CreatedAt":"2023-08-28T11:01:31","Actor":"devversion","Number":"51533","RawContent":null,"Title":"Bazel saucelabs stability and debug improvements","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/51533","RelatedDescription":"Open PR \"Bazel saucelabs stability and debug improvements\" (#51533)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1872580144","IsPullRequest":true,"CreatedAt":"2023-08-29T22:21:11","Actor":"clydin","Number":"25733","RawContent":null,"Title":"build: use bazel ts_library rule to build @angular/ssr","State":"open","Body":"The `@angular/ssr` package does not require the Angular compiler and can instead use the `ts_library` to compile the TypeScript code.  The `@angular/bazel` package has also been update and a more limited patch is now used due to only needing the `ng_package` rule. The continued use of the `ng_package` rule maintains the existing output structure for the `@angular/ssr` package.","Url":"https://github.com/angular/angular-cli/pull/25733","RelatedDescription":"Open PR \"build: use bazel ts_library rule to build @angular/ssr\" (#25733)"},{"Id":"1872348968","IsPullRequest":true,"CreatedAt":"2023-08-29T20:08:49","Actor":"clydin","Number":"25732","RawContent":null,"Title":"refactor(@angular-devkit/core): use picomatch for PatternMatchingHost glob support","State":"open","Body":"The glob support in the `PatternMatchingHost` class now uses the capabilities of the `picomatch` package to convert glob strings into regular expressions. This removes custom string replacement code that previously was used. The `picomatch` package is already used by `@angular-devkit/build-angular` and is present in the repository but is a new dependency for the `@angular-devkit/core` package specifically.\r\n\r\nAddresses https://github.com/angular/angular-cli/security/code-scanning/20 \r\nPartially corrects #25731","Url":"https://github.com/angular/angular-cli/pull/25732","RelatedDescription":"Open PR \"refactor(@angular-devkit/core): use picomatch for PatternMatchingHost glob support\" (#25732)"},{"Id":"1871950864","IsPullRequest":false,"CreatedAt":"2023-08-29T15:45:22","Actor":"josephperrott","Number":"25731","RawContent":null,"Title":"Fix code scanning alert - Incomplete string escaping or encoding","State":"open","Body":"<!-- Warning: The suggested title contains the alert rule name. This can expose security information. -->\r\n\r\nTracking issue for:\r\n- [ ] https://github.com/angular/angular-cli/security/code-scanning/20\r\n- [ ] https://github.com/angular/angular-cli/security/code-scanning/29\r\n","Url":"https://github.com/angular/angular-cli/issues/25731","RelatedDescription":"Open issue \"Fix code scanning alert - Incomplete string escaping or encoding\" (#25731)"},{"Id":"1871412746","IsPullRequest":true,"CreatedAt":"2023-08-29T14:10:24","Actor":"alan-agius4","Number":"25723","RawContent":null,"Title":"test(@angular/cli): update `ng update` tests to start from v14","State":"closed","Body":"Version 13 is no longer under LTS support.\r\n","Url":"https://github.com/angular/angular-cli/pull/25723","RelatedDescription":"Closed or merged PR \"test(@angular/cli): update `ng update` tests to start from v14\" (#25723)"},{"Id":"1871759784","IsPullRequest":true,"CreatedAt":"2023-08-29T14:09:03","Actor":"alan-agius4","Number":"25730","RawContent":null,"Title":"refactor(@angular/ssr): remove express engine","State":"open","Body":"This removes the util function for express, instead the \"CommonEngine\" is called directly infuture before this package is final we might rename the \"CommonEngine\" to something else.\r\n","Url":"https://github.com/angular/angular-cli/pull/25730","RelatedDescription":"Open PR \"refactor(@angular/ssr): remove express engine\" (#25730)"},{"Id":"1871638416","IsPullRequest":false,"CreatedAt":"2023-08-29T13:07:05","Actor":"Konubinix","Number":"25729","RawContent":null,"Title":"Cannot use a dependency in a yarn workspace","State":"open","Body":"### Command\r\n\r\nbuild, serve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi.\r\n\r\nThank you for the awesome work around angular. I don't know whether this is actually a bug or I did not understand something about any of yarn, typescript, esm, commonjs, angular, webpack...\r\n\r\nWhen using a simple angular project as a yarn workspace, I cannot use the exports of a sibling project.\r\n\r\n### Minimal Reproduction\r\n\r\nHere is the description of how to reproduce the issue, I attached the whole project as well\r\n\r\n[myproject.zip](https://github.com/angular/angular-cli/files/12464740/myproject.zip)\r\n\r\n1. create a yarn workspace root package.json, pointing to the two workspaces we will create now\r\n```json\r\n{\r\n  \"name\": \"myproject\",\r\n  \"private\": true,\r\n  \"workspaces\": [\r\n    \"angular\",\r\n    \"lib\"\r\n  ]\r\n}\r\n```\r\n2. create a simple angular project\r\n`ng new angular` (then, keep the default value for everything that is asked)\r\n3. add the \"private\": true entry in its package.json to indicate it is a workspace\r\n4. create a very simple library called lib\r\nwith the following package.json\r\n```json\r\n{\r\n    \"name\": \"@mylib/lib\",\r\n    \"version\": \"0.1.0\",\r\n    \"private\": true\r\n}\r\n```\r\nand the following index.ts\r\n```typescript\r\nexport const somevariable = \"something\";\r\n```\r\n5. indicate in the package.json of the angular workspace the dependency toward the sibling library, adding `\"@mylib/lib\": \"^0.1.0\",` in its dependency section.\r\n6. in the root component on the angular workspace, make use of the variable\r\n`import { somevariable } from '@mylib/lib';`\r\nand then, set the title to somevariable \r\n```typescript\r\n...\r\nexport class AppComponent {\r\n  title = somevariable;\r\n}\r\n...\r\n```\r\n7. run `ng serve`\r\n\r\nYou will see that somevariable does not appear.\r\n![image](https://github.com/angular/angular-cli/assets/1181438/7bc2edf6-3059-423e-a311-2d6bc6a289dd)\r\n\r\nStrangely, changing `import { somevariable } from '@mylib/lib';` into `import { somevariable } from '../../../lib';` works around this issue. You need to `rm -rf .angular/ && ng serve` to actually see the impact of the change.\r\n\r\n![image](https://github.com/angular/angular-cli/assets/1181438/fdf4e2a0-ee8f-4a27-8388-26edcef10df6)\r\n\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n✔  ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: linux x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n\r\n### Anything else relevant?\r\n\r\nRunning `ng build` in development mode, I could find out that the webpack export was actually empty where `somevariable` should have been.\r\n\r\nthe bundled code looks like this\r\n```\r\nclass AppComponent {\r\n  constructor() {\r\n    this.title = _mylib_lib__WEBPACK_IMPORTED_MODULE_0__.somevariable;\r\n  }\r\n}\r\n```\r\nWith `_mylib_lib__WEBPACK_IMPORTED_MODULE_0__` defined like this `/* harmony import */ var _mylib_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mylib/lib */ 6479);`\r\n\r\nThen, the content associated to 6479 is the following\r\n```\r\n/***/ 6479:\r\n/*!***********************!*\\\r\n  !*** ../lib/index.ts ***!\r\n  \\***********************/\r\n/***/ (() => {\r\n\r\n\r\n\r\n/***/ })\r\n```\r\n\r\nI assume there has been some too eager tree-shaking somewhere.\r\n\r\nThank you again for angular. I hope this bug report is helpful. In case it is just me doing something wrong, I would be very welcome if you provided some guidance about how to make this work.\r\n\r\nMy best,","Url":"https://github.com/angular/angular-cli/issues/25729","RelatedDescription":"Open issue \"Cannot use a dependency in a yarn workspace\" (#25729)"},{"Id":"1871237666","IsPullRequest":true,"CreatedAt":"2023-08-29T10:53:23","Actor":"alan-agius4","Number":"25717","RawContent":null,"Title":"Update deps to v17","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25717","RelatedDescription":"Closed or merged PR \"Update deps to v17\" (#25717)"},{"Id":"1871233684","IsPullRequest":true,"CreatedAt":"2023-08-29T10:17:20","Actor":"angular-robot","Number":"25716","RawContent":null,"Title":"build: update scorecard action dependencies - autoclosed","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://togithub.com/actions/checkout) | action | minor | `v3.5.3` -> `v3.6.0` |\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.4` -> `v2.21.5` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v3.6.0`](https://togithub.com/actions/checkout/blob/HEAD/CHANGELOG.md#v360)\n\n[Compare Source](https://togithub.com/actions/checkout/compare/v3.5.3...v3.6.0)\n\n-   [Fix: Mark test scripts with Bash'isms to be run via Bash](https://togithub.com/actions/checkout/pull/1377)\n-   [Add option to fetch tags even if fetch-depth > 0](https://togithub.com/actions/checkout/pull/579)\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.5`](https://togithub.com/github/codeql-action/compare/v2.21.4...v2.21.5)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.4...v2.21.5)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi42OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25716","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies - autoclosed\" (#25716)"},{"Id":"1871339302","IsPullRequest":true,"CreatedAt":"2023-08-29T10:16:58","Actor":"angular-robot","Number":"25722","RawContent":null,"Title":"build: update dependency @rollup/plugin-node-resolve to v15","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@rollup/plugin-node-resolve](https://togithub.com/rollup/plugins/tree/master/packages/node-resolve/#readme) ([source](https://togithub.com/rollup/plugins)) | devDependencies | major | [`^13.0.5` -> `^15.0.0`](https://renovatebot.com/diffs/npm/@rollup%2fplugin-node-resolve/13.3.0/15.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>rollup/plugins (@&#8203;rollup/plugin-node-resolve)</summary>\n\n### [`v15.2.1`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1521)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/7d395b8828db2b208c561a5bda87997c00ecf2b6...767a8f5b49a3c871d681407a7b237475a7c6a97d)\n\n*2023-08-22*\n\n##### Bugfixes\n\n-   fix: Implement package exports / imports resolution algorithm according to Node documentation [#&#8203;1549](https://togithub.com/rollup/plugins/pull/1549)\n\n### [`v15.2.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1520)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/616bdd3e2dd613821267e4e56e9666d65aef862e...7d395b8828db2b208c561a5bda87997c00ecf2b6)\n\n*2023-08-17*\n\n##### Features\n\n-   feat: pass original importee to secondary resolve [#&#8203;1557](https://togithub.com/rollup/plugins/pull/1557)\n\n### [`v15.1.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1510)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/f6816155d568e60f9f7a20d091bb884034d8110a...616bdd3e2dd613821267e4e56e9666d65aef862e)\n\n*2023-05-30*\n\n##### Features\n\n-   feat: Resolve js/jsx/mjs/cjs imports from TypeScript files [#&#8203;1498](https://togithub.com/rollup/plugins/pull/1498)\n\n### [`v15.0.2`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1502)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/65530068f85e64736de18be5cf53fce753ad4b4f...f6816155d568e60f9f7a20d091bb884034d8110a)\n\n*2023-04-04*\n\n##### Bugfixes\n\n-   fix: bump is-builtin-module version, imports with a trailing slash [#&#8203;1424](https://togithub.com/rollup/plugins/pull/1424)\n\n### [`v15.0.1`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1501)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/8f1aea320bb43c16afe52bc44ed357746c8f9711...65530068f85e64736de18be5cf53fce753ad4b4f)\n\n*2022-10-21*\n\n##### Updates\n\n-   chore: update rollup dependencies ([3038271](https://togithub.com/rollup/plugins/commit/303827191ede6b2e4eade96c6968ed16a587683f))\n\n### [`v15.0.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1500)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/509d0310ff12f6dec78df59585b55b4f0209af9a...8f1aea320bb43c16afe52bc44ed357746c8f9711)\n\n*2022-10-10*\n\n##### Breaking Changes\n\n-   fix: prepare for Rollup 3 [#&#8203;1288](https://togithub.com/rollup/plugins/pull/1288)\n\n### [`v14.1.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1410)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/3dce792aa1dcb453555fc5efa214d6f034598563...509d0310ff12f6dec78df59585b55b4f0209af9a)\n\n*2022-09-12*\n\n##### Features\n\n-   feat: add new option, modulePaths ([#&#8203;1104](https://togithub.com/rollup/plugins/issues/1104))\n\n### [`v14.0.1`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1401)\n\n[Compare Source](https://togithub.com/rollup/plugins/compare/608ad1001b4da5f97dad2c8ed18af4cdb49f0902...3dce792aa1dcb453555fc5efa214d6f034598563)\n\n*2022-09-08*\n\n##### Bugfixes\n\n-   fix: handle circular commonjs ([#&#8203;1259](https://togithub.com/rollup/plugins/issues/1259))\n\n### [`v14.0.0`](https://togithub.com/rollup/plugins/blob/HEAD/packages/node-resolve/CHANGELOG.md#v1400)\n\n*2022-09-06*\n\n##### Breaking Changes\n\n-   fix: preserve moduleSideEffects when re-resolving files ([#&#8203;1245](https://togithub.com/rollup/plugins/issues/1245))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi42OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25722","RelatedDescription":"Open PR \"build: update dependency @rollup/plugin-node-resolve to v15\" (#25722)"},{"Id":"1871140056","IsPullRequest":true,"CreatedAt":"2023-08-29T09:10:43","Actor":"angular-robot","Number":"25715","RawContent":null,"Title":"build: update scorecard action dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://togithub.com/actions/checkout) | action | minor | `v3.5.3` -> `v3.6.0` |\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.4` -> `v2.21.5` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v3.6.0`](https://togithub.com/actions/checkout/blob/HEAD/CHANGELOG.md#v360)\n\n[Compare Source](https://togithub.com/actions/checkout/compare/v3.5.3...v3.6.0)\n\n-   [Fix: Mark test scripts with Bash'isms to be run via Bash](https://togithub.com/actions/checkout/pull/1377)\n-   [Add option to fetch tags even if fetch-depth > 0](https://togithub.com/actions/checkout/pull/579)\n\n</details>\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.5`](https://togithub.com/github/codeql-action/compare/v2.21.4...v2.21.5)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.4...v2.21.5)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi42OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25715","RelatedDescription":"Closed or merged PR \"build: update scorecard action dependencies\" (#25715)"},{"Id":"1863987193","IsPullRequest":false,"CreatedAt":"2023-08-29T09:06:53","Actor":"t0m-4","Number":"25706","RawContent":null,"Title":"Angular library build watch remove imports","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, compiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello,\r\n\r\nI have an angular 16 library with a sub entry point that contains a module.\r\n\r\nWhen i use \"ng build my-lib --watch\" --watch\"  it works but if i update a file then the module from my sub entry point is broken.\r\n\r\nYou can reproduce this :\r\n1. Get the project from https://github.com/t0m-4/lib-build-watch/tree/main\r\n2. Run 'ng build my-lib --watch --configuration development'.\r\n3. Check the file my-workspace\\dist\\my-lib\\ui\\form\\form.module.d.ts\r\n4. Update the file my-workspace\\projects\\my-lib\\ui\\form\\models\\form-type.model.ts (for exemple set another value for the enum value 'Other'\r\n5. Check again the file my-workspace\\dist\\my-lib\\ui\\form\\form.module.d.ts, some imports disappeared.\r\n\r\nMaybe it's related to my code but I don't understand why.\r\n\r\nThank you.\r\n![module-dif](https://github.com/angular/angular/assets/3096842/a6d8fe16-67b0-46d6-b1d1-38e762946a45)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/t0m-4/lib-build-watch/tree/main\n\n### Please provide the exception or error you saw\n\n```true\nthere is no exception during build but you got some when you use the library\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nng-packagr                      16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25706","RelatedDescription":"Closed issue \"Angular library build watch remove imports\" (#25706)"},{"Id":"1869673463","IsPullRequest":false,"CreatedAt":"2023-08-29T08:18:32","Actor":"atuzovic","Number":"25711","RawContent":null,"Title":"Dependencies on vulnerable versions of libraries","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n12\n\n### Description\n\nWhen \"npm audit\" is done for project that has @angular-devkit/build-angular 16.2.0 as devDependency, following report is generated:\r\n```\r\n\r\n# npm audit report\r\n\r\nrequest  *\r\nSeverity: moderate\r\nServer-Side Request Forgery in Request - https://github.com/advisories/GHSA-p8p7-x288-28g6\r\nDepends on vulnerable versions of tough-cookie\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/request\r\n  webdriver-manager  *\r\n  Depends on vulnerable versions of request\r\n  Depends on vulnerable versions of xml2js\r\n  node_modules/webdriver-manager\r\n    protractor  >=1.3.0\r\n    Depends on vulnerable versions of selenium-webdriver\r\n    Depends on vulnerable versions of webdriver-js-extender\r\n    Depends on vulnerable versions of webdriver-manager\r\n    node_modules/protractor\r\n      @angular-devkit/build-angular  >=0.1100.0-next.0\r\n      Depends on vulnerable versions of protractor\r\n      node_modules/@angular-devkit/build-angular\r\n\r\ntough-cookie  <4.1.3\r\nSeverity: moderate\r\ntough-cookie Prototype Pollution vulnerability - https://github.com/advisories/GHSA-72xf-g2v4-qvf3\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/tough-cookie\r\n\r\nxml2js  <0.5.0\r\nSeverity: moderate\r\nxml2js is vulnerable to prototype pollution - https://github.com/advisories/GHSA-776f-qx25-q3cc\r\nfix available via `npm audit fix --force`\r\nWill install @angular-devkit/build-angular@0.1002.1, which is a breaking change\r\nnode_modules/xml2js\r\n  selenium-webdriver  2.43.1 - 4.0.0-rc-2\r\n  Depends on vulnerable versions of xml2js\r\n  node_modules/selenium-webdriver\r\n    webdriver-js-extender  *\r\n    Depends on vulnerable versions of selenium-webdriver\r\n    node_modules/webdriver-js-extender\r\n\r\n8 moderate severity vulnerabilities\r\n\r\nTo address all issues (including breaking changes), run:\r\n  npm audit fix --force\r\n\r\n```\r\n\r\nIt's important to note that this is happening on only few of the projects, not all.\r\nWhat is confusing is that all projects have (or at least seems to have) same contents for angular.json and package.json.\r\n\n\n### Minimal Reproduction\n\nnpm audit\r\n\r\npackage.json contents:\r\n\r\n{\r\n  \"name\": \"app\",\r\n  \"version\": \"0.0.0\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"echo . && ng serve --verbose\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@ag-grid-community/angular\": \"30.1.0\",\r\n    \"@ag-grid-community/client-side-row-model\": \"30.1.0\",\r\n    \"@ag-grid-community/core\": \"30.1.0\",\r\n    \"@ag-grid-community/styles\": \"^30.1.0\",\r\n    \"@angular/animations\": \"~16.2.2\",\r\n    \"@angular/cdk\": \"^16.2.1\",\r\n    \"@angular/common\": \"~16.2.2\",\r\n    \"@angular/compiler\": \"~16.2.2\",\r\n    \"@angular/core\": \"~16.2.2\",\r\n    \"@angular/forms\": \"~16.2.2\",\r\n    \"@angular/google-maps\": \"^16.2.1\",\r\n    \"@angular/localize\": \"^16.2.2\",\r\n    \"@angular/material\": \"^16.2.1\",\r\n    \"@angular/platform-browser\": \"~16.2.2\",\r\n    \"@angular/platform-browser-dynamic\": \"~16.2.2\",\r\n    \"@angular/router\": \"~16.2.2\",\r\n    \"@fortawesome/angular-fontawesome\": \"^0.13.0\",\r\n    \"@fortawesome/fontawesome-svg-core\": \"^6.4.2\",\r\n    \"@fortawesome/free-brands-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-duotone-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-light-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-regular-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-solid-svg-icons\": \"^6.4.2\",\r\n    \"@fortawesome/pro-thin-svg-icons\": \"^6.4.2\",\r\n    \"@ng-select/ng-select\": \"^11.1.1\",\r\n    \"@ngbracket/ngx-layout\": \"^16.0.0\",\r\n    \"@ngx-translate/core\": \"^15.0.0\",\r\n    \"@tinymce/tinymce-angular\": \"^7.0.0\",\r\n    \"ace-builds\": \"^1.24.1\",\r\n    \"chart.js\": \"^4.4.0\",\r\n    \"chartjs-adapter-dayjs-4\": \"^1.2.3\",\r\n    \"cropperjs\": \"1.6.0\",\r\n    \"d3-scale-chromatic\": \"^3.0.0\",\r\n    \"dayjs\": \"^1.11.9\",\r\n    \"lodash-es\": \"^4.17.21\",\r\n    \"material-design-icons\": \"^3.0.1\",\r\n    \"ng2-date-picker\": \"^16.0.0\",\r\n    \"ng2-file-upload\": \"^5.0.0\",\r\n    \"ngx-ace-wrapper\": \"^14.0.0\",\r\n    \"ngx-color-picker\": \"^14.0.0\",\r\n    \"ngx-json-viewer\": \"^3.2.1\",\r\n    \"prismjs\": \"^1.29.0\",\r\n    \"rxjs\": \"~7.8.1\",\r\n    \"tinymce\": \"^6.6.2\",\r\n    \"tslib\": \"^2.6.2\",\r\n    \"zone.js\": \"~0.13.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^16.2.0\",\r\n    \"@angular/cli\": \"^16.2.0\",\r\n    \"@angular/compiler-cli\": \"^16.2.2\",\r\n    \"@angular/language-service\": \"^16.2.2\",\r\n    \"@types/d3\": \"^7.4.0\",\r\n    \"@types/jasmine\": \"~4.3.5\",\r\n    \"@types/lodash-es\": \"^4.17.8\",\r\n    \"jasmine-core\": \"~5.1.1\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.2.0\",\r\n    \"karma-coverage\": \"~2.2.1\",\r\n    \"karma-jasmine\": \"~5.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"^2.1.0\",\r\n    \"typescript\": \"~5.1.6\"\r\n  }\r\n}\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.17.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.0 (cli-only)\r\n@angular-devkit/core         16.2.0 (cli-only)\r\n@angular-devkit/schematics   16.2.0 (cli-only)\r\n@schematics/angular          16.2.0 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25711","RelatedDescription":"Closed issue \"Dependencies on vulnerable versions of libraries\" (#25711)"},{"Id":"1864747185","IsPullRequest":true,"CreatedAt":"2023-08-29T07:39:31","Actor":"ocombe","Number":"25707","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use correct type for `extraEntryPoints`","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe type is incorrect\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nThe type is correct\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25707","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use correct type for `extraEntryPoints`\" (#25707)"},{"Id":"1870324912","IsPullRequest":true,"CreatedAt":"2023-08-29T07:39:06","Actor":"angular-robot","Number":"25714","RawContent":null,"Title":"build: update dependency critters to v0.0.20 [security]","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [critters](https://togithub.com/GoogleChromeLabs/critters) | dependencies | patch | [`0.0.19` -> `0.0.20`](https://renovatebot.com/diffs/npm/critters/0.0.19/0.0.20) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2023-3481](https://togithub.com/GoogleChromeLabs/critters/security/advisories/GHSA-cx3j-qqxj-9597)\n\n### Impact\nCritters version 0.0.17-0.0.19 have an issue when parsing the HTML which leads to a potential [cross-site scripting (XSS)](https://owasp.org/www-community/attacks/xss/) bug.\n\n### Patches\nThe bug has been fixed in `v0.0.20`.\n\n### Workarounds\nUpgrading Critters version to `>0.0.20` is the easiest fix. This is a non breaking version upgrade so we recommend all users to use `v0.0.20`.\n\n---\n\n### Release Notes\n\n<details>\n<summary>GoogleChromeLabs/critters (critters)</summary>\n\n### [`v0.0.20`](https://togithub.com/GoogleChromeLabs/critters/compare/3b3ea7b1ad8ca4d5e40cdf793aecc1b4dcaa5e1c...0.0.20)\n\n[Compare Source](https://togithub.com/GoogleChromeLabs/critters/compare/3b3ea7b1ad8ca4d5e40cdf793aecc1b4dcaa5e1c...0.0.20)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi42OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25714","RelatedDescription":"Closed or merged PR \"build: update dependency critters to v0.0.20 [security]\" (#25714)"},{"Id":"1870250878","IsPullRequest":true,"CreatedAt":"2023-08-29T07:38:37","Actor":"clydin","Number":"25713","RawContent":null,"Title":"build: update Angular version to v17 prerelease","State":"closed","Body":"Package dependency versions and the version used to generate a new project have been updated to use `17.0.0-next.1`.","Url":"https://github.com/angular/angular-cli/pull/25713","RelatedDescription":"Closed or merged PR \"build: update Angular version to v17 prerelease\" (#25713)"},{"Id":"1871563752","IsPullRequest":false,"CreatedAt":"2023-08-28T21:18:38","Actor":"10eputzen","Number":"25724","RawContent":null,"Title":"Firestore onSnapshot causes prerender to stuck","State":"open","Body":"# 🐞 Bug report\r\n\r\n#### What modules are related to this issue?\r\n\r\n<!-- ✍️edit: -->\r\n\r\n- [x] builders\r\n\r\n### Is this a regression?\r\nI do not know\r\n\r\n### Description\r\n\r\nThe onSnapshot ([from firebase documentation](https://firebase.google.com/docs/firestore/query-data/listen#web-modular-api_3)) causes `npm run prerender` to get stuck when using the regular builder in angular.json\r\n\r\n```\r\n    \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n```\r\n\r\nwhile generating the routes.\r\n\r\n  ```\r\nconst unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n  const cities = [];\r\n  querySnapshot.forEach((doc) => {\r\n      cities.push(doc.data().name);\r\n  });\r\n  console.log(\"Current cities in CA: \", cities.join(\", \"));\r\n});\r\n```\r\n\r\nWhen using esbuild - it works fine.\r\n```\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n- create a new project with routing\r\n- add angular universal\r\n- add a route\r\n- add firebase with some mock data\r\n- use onSnapshot on this collection for live updates\r\n- `npm run prerender`\r\n\r\nHere is my Bug Repo. You need to have a firestore config pasted into the environment.ts\r\nhttps://github.com/10eputzen/angularBugRepo/tree/bug/angularUniversal\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\nUnfortunately there is no error - the prerendering is stuck here:\r\n`Prerendering 1 route(s) to /angularBugRepo/dist/angularBugRepo/browser...`\r\n\r\nI am getting this error as well, but I also get it with esbuild and everyhting works fine with dev:ssr \r\n`Unable to extract routes from application.`\r\n\r\n## 🌍 Your Environment\r\n\r\n<pre><code>\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/25724","RelatedDescription":"Open issue \"Firestore onSnapshot causes prerender to stuck\" (#25724)"},{"Id":"1870219463","IsPullRequest":true,"CreatedAt":"2023-08-28T18:12:16","Actor":"clydin","Number":"25712","RawContent":null,"Title":"ci: move Windows CI job to GHA","State":"open","Body":"The Windows E2E tests are now executed with a Github Action job via an additional entry in the existing E2E job's matrix. The CircleCI configuration previously needed to execute the job with CircleCI has also been removed.","Url":"https://github.com/angular/angular-cli/pull/25712","RelatedDescription":"Open PR \"ci: move Windows CI job to GHA\" (#25712)"},{"Id":"1869141865","IsPullRequest":true,"CreatedAt":"2023-08-28T07:18:23","Actor":"crisbeto","Number":"25710","RawContent":null,"Title":"build: update to TypeScript 5.2","State":"open","Body":"Updates the repo to TypeScript 5.2.","Url":"https://github.com/angular/angular-cli/pull/25710","RelatedDescription":"Open PR \"build: update to TypeScript 5.2\" (#25710)"},{"Id":"1865999071","IsPullRequest":true,"CreatedAt":"2023-08-24T22:58:22","Actor":"atcastle","Number":"25709","RawContent":null,"Title":"feat(@ngtools/webpack): add automated preconnects for image domains","State":"open","Body":"This PR adds new functionality to identify image domains used in [NgOptimizedImage](https://angular.io/api/common/NgOptimizedImage) loaders, and automatically add `link rel=\"preload\"` tags to the index.html file for those domains, if the end-user isn't already managing their own preconnects. I designed this change with some substantial help from @alan-agius4 and @clydin. ATTN: @kara @AndrewKushnir \r\n\r\n### Technical details\r\nHow domains are identified:\r\nImage domains are identified during the Typescript transformation process, where application Typescript files are already being traversed as an AST multiple times. This PR adds a new, non-modifying transformer, which conducts a narrow traversal of the AST to find image domains in the code. The traversal looks like this:\r\n1) Starting at the root of the file, do a one-layer traversal, looking for a ClassDeclaration with name 'appModule'.\r\n2) If found, look for the property assignment for `ɵinj`\r\n3) If found, continue traversal to find the `providers` array\r\n4) Visit all elements of the providers array and determine if they match one of two patterns:\r\n  4a) Invocations of a [built-in CDN loader function](https://angular.io/guide/image-directive#built-in-loaders). The domain is extracted from the argument.\r\n  4b) A manually-defined provider for IMAGE_LOADER with a [custom loader function](https://angular.io/guide/image-directive#custom-loaders). The function body is traversed and a regex is used on any string literals to find domain strings.\r\n\r\nFound domains are added to a Set, which is exported from `@ngtools/webpack`, and imported cross-package into `packages/angular_devkit/build_angular/src/builders/browser/index.ts`. From there, the domains are used during index.html generation to add preload tags.\r\n\r\n### Performance impacts\r\nI've designed the changes in this PR so that they should have minimal effect on build times. The AST traversal is narrow in scope, and will quit early if it doesn't encounter the specific pattern it's looking for.\r\n\r\n### Testing \r\nUnit tests are provided for both the new transform (`find_image_domains.ts`) and for the modifications to `augment-index-html.ts`. This feature really wants E2E testing (as it includes changes at both ends of the build process), but I couldn't find a good example of similar E2E tests for Ivy code in angular-cli. I'd be interested in feedback on this, and will be happy to add E2E tests with some guidance. \r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25709","RelatedDescription":"Open PR \"feat(@ngtools/webpack): add automated preconnects for image domains\" (#25709)"},{"Id":"1864769634","IsPullRequest":false,"CreatedAt":"2023-08-24T13:49:18","Actor":"Simon-Hayden-iteratec","Number":"25708","RawContent":null,"Title":"@angular-devkit/build-angular always includes \"@babel/plugin-transform-async-to-generator\" and \"@babel/plugin-proposal-async-generator-functions\"","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen I'm building an Angular project for modern browsers, I expect modern features like `async/await` to be used. However, when building the project, Angular uses Babel to replace `async/await` with calls to a helper function, which uses generator functions instead.\r\n\r\nThis means, that there is a slight overhead in performance, as well as bundle size to accommodate for the polyfill. Most annoyingly (to me at least) is that debugging can be tough, because I can't properly \"step into\" an async function call, without landing in Babel's helper function. Which makes understanding the code much harder.\r\n\r\n### Proposed changes\r\n\r\nI think either the behaviour should be well documented (e.g. on the [browser support](https://angular.io/guide/browser-support) site), or changed/customizable. Most browsers support `async` and `await`, so in my opinion the default should also include those features.\r\n\r\n### Minimal Reproduction\r\n\r\nI have created a demo repo for this issue: https://github.com/Simon-Hayden-iteratec/async-await-missing\r\n\r\nThere is a readme explaining the behaviour and how to reproduce it.\r\n\r\nBut the gist of it:\r\n- Run `ng build --optimization=false --output-hashing=none` targeting only modern browsers\r\n- At the bottom of the built `dist/<app-name>/main.js` find the function `_asyncToGenerator` from Babel. The file will also not include an `async`s or `await`s.\r\n\r\nI investigated where this code is coming from, and I assume [these lines](https://github.com/angular/angular-cli/blob/b09ce572ed72f19c353e71b7d9d751484c5db63a/packages/angular_devkit/build_angular/src/tools/babel/webpack-loader.ts#L90C7-L91C19) are the cause:\r\n\r\n```ts\r\n      // Application code (TS files) will only contain native async if target is ES2017+.\r\n      // However, third-party libraries can regardless of the target option.\r\n      // APF packages with code in [f]esm2015 directories is downlevelled to ES2015 and\r\n      // will not have native async.\r\n      customOptions.forceAsyncTransformation =\r\n        !/[\\\\/][_f]?esm2015[\\\\/]/.test(this.resourcePath) && source.includes('async');\r\n```\r\n\r\nIt appears to be `true` for all source files. I assume the line was only intended to be true for Angular library builds (or similar).\r\n\r\nWhen I edit the file in my local `node_modules` to be always `false`, I see a small, but measurable reduction in bundle size (measured with `du -bc \"dist/async-await-missing\"` in the linked Git repo):\r\n\r\n|      | Without Patch (Bit count) | With Patch (Bit count) | Diff |\r\n|:---:|:-------------------:|:--------------:|:-------:|\r\n| Unoptimized | 2 358 530 | 2 354 366 | -4 164 |\r\n| Optimized | 276 531 | 274 741| -1 790  |\r\n\r\nHowever, the difference is larger, for larger projects (tested in a company-private repo).\r\n\r\n### Exception or Error\r\n\r\n```text\r\nThere is no error message or similar.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.0\r\nNode: 16.20.1\r\nPackage Manager: npm 8.19.4\r\nOS: linux x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25708","RelatedDescription":"Closed issue \"@angular-devkit/build-angular always includes \"@babel/plugin-transform-async-to-generator\" and \"@babel/plugin-proposal-async-generator-functions\"\" (#25708)"},{"Id":"1862262350","IsPullRequest":false,"CreatedAt":"2023-08-22T20:28:19","Actor":"albanx","Number":"25705","RawContent":null,"Title":"ng generate m help does not generate module but shows help menu","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, Don't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nToday I was trying to generate a module called \"help\" using the CLI. I ran the command:\r\n```\r\nng generate m help\r\n```\r\n\r\nThis does not generate the module but shows up the angular cli help menu.\r\n\r\n![image](https://github.com/angular/angular/assets/1130664/59aaae3c-d239-4c67-badc-f94b874f0b18)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.0.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: win32 x64\r\n\r\nAngular: 16.0.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.0\r\n@angular-devkit/build-angular   16.0.0\r\n@angular-devkit/core            16.0.0\r\n@angular-devkit/schematics      16.0.0\r\n@nguniversal/builders           16.0.0\r\n@nguniversal/express-engine     16.0.0\r\n@schematics/angular             16.0.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25705","RelatedDescription":"Open issue \"ng generate m help does not generate module but shows help menu\" (#25705)"},{"Id":"1861371463","IsPullRequest":false,"CreatedAt":"2023-08-22T12:35:54","Actor":"antongakh","Number":"25704","RawContent":null,"Title":"Mismatch in schema name validation","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThere is a possibility to create an application with the `ng new` command with the name which makes it impossible to configure it through the `ng config` command.\n\n### Minimal Reproduction\n\n1. generate new application with `ng new my.application`\r\n2. run any `ng config` command in generated application (e.g. `ng config schematics.@schematics/angular:component.style scss`)\r\n3. Observe command output\r\n\r\nER: Command executed correctly\r\nAR: Error:\r\n`Error: Schema validation failed with the following errors:\r\n  Data path \"/projects\" must NOT have additional properties(my.application).`\n\n### Exception or Error\n\n```text\nError: Schema validation failed with the following errors:\r\n  Data path \"/projects\" must NOT have additional properties(my.application)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.0\r\n@angular-devkit/core         16.2.0\r\n@angular-devkit/schematics   16.2.0\r\n@angular/cli                 16.2.0\r\n@schematics/angular          16.2.0\n```\n\n\n### Anything else relevant?\n\nApplication name is validated by: https://github.com/angular/angular-cli/blob/main/packages/schematics/angular/application/schema.json#L16\r\nProject name is validated by: https://github.com/angular/angular-cli/blob/main/packages/angular/cli/lib/config/workspace-schema.json#L26C9-L26C47","Url":"https://github.com/angular/angular-cli/issues/25704","RelatedDescription":"Open issue \"Mismatch in schema name validation\" (#25704)"},{"Id":"1861320716","IsPullRequest":false,"CreatedAt":"2023-08-22T10:34:04","Actor":"trochol","Number":"25703","RawContent":null,"Title":"This undefined when using a private property in an async function with tsconfig target ES2022","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWith target ES2022 in tsconfig the combination of a private property and an async function leads to an undefined this:\r\n\r\n```\r\nexport class AppComponent {\r\n\r\n  #counter = 0;\r\n\r\n  async count() {\r\n    this.#counter++;\r\n  }\r\n\r\n  getCounter() {\r\n    return this.#counter;\r\n  }\r\n}\r\n```\r\n\r\nThe problem is, that this is not assigned to a local field before the generator function:\r\n\r\n```\r\n  count() {\r\n    return (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      var _this$counter,\r\n        _this$counter2,\r\n        _this = this;\r\n      (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_this, _counter, (_this$counter = (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this, _counter), _this$counter2 = _this$counter++, _this$counter)), _this$counter2;\r\n    })();\r\n  }\r\n```\r\n\r\nIf I downgrade the target to ES2020 it works correctly:\r\n\r\n```\r\n  count() {\r\n    var _this = this;\r\n    return (0,C_git_test_private_field_in_async_function_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function* () {\r\n      var _a;\r\n      (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__classPrivateFieldSet)(_this, _AppComponent_counter, (_a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__classPrivateFieldGet)(_this, _AppComponent_counter, \"f\"), _a++, _a), \"f\");\r\n    })();\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/trochol/private-field-in-async-function\n\n### Please provide the exception or error you saw\n\n```true\nERROR Error: Uncaught (in promise): TypeError: attempted to get private field on non-instance\r\nTypeError: attempted to get private field on non-instance\r\n    at _classExtractFieldDescriptor (classExtractFieldDescriptor.js:3:1)\r\n    at _classPrivateFieldGet (classPrivateFieldGet.js:4:47)\r\n    at app.component.ts:13:9\r\n    at Generator.next (<anonymous>)\r\n    at asyncGeneratorStep (asyncToGenerator.js:3:1)\r\n    at _next (asyncToGenerator.js:22:1)\r\n    at asyncToGenerator.js:27:1\r\n    at new ZoneAwarePromise (zone.js:1432:21)\r\n    at asyncToGenerator.js:19:1\r\n    at AppComponent.count (app.component.ts:13:21)\r\n    at resolvePromise (zone.js:1214:31)\r\n    at zone.js:1121:17\r\n    at zone.js:1137:33\r\n    at asyncGeneratorStep (asyncToGenerator.js:6:1)\r\n    at _next (asyncToGenerator.js:22:1)\r\n    at asyncToGenerator.js:27:1\r\n    at new ZoneAwarePromise (zone.js:1432:21)\r\n    at asyncToGenerator.js:19:1\r\n    at AppComponent.count (app.component.ts:13:21)\r\n    at AppComponent_Template_button_click_0_listener (app.component.html:1:18)\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.1.6       \r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1501.6 (cli-only)\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.1.6\r\n@angular/cli                    15.1.6\r\n@schematics/angular             15.1.6\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25703","RelatedDescription":"Open issue \"This undefined when using a private property in an async function with tsconfig target ES2022\" (#25703)"},{"Id":"1859678212","IsPullRequest":false,"CreatedAt":"2023-08-21T15:54:16","Actor":"arobinson","Number":"25702","RawContent":null,"Title":"ng build does not display typescript errors when output is not a tty","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using an application to run `ng build` or piping the `ng build` output to a file, the typescript errors are not included, only the template warnings. When running it from a console/tty, the errors are correctly displayed. \r\n\r\nWe used to not have Typescript and Angular strict mode on. We want to get to the point where we have it on, so we are trying to capture the issues in our CI build and report them to Sonar as code smells via a custom eslint report so that we can reduce the issues over time. The problem is that trying to capture the `ng build` output is failing to work, hence reporting this issue. Without being able to get the typescript error output, it blocks our ability to capture this information.\n\n### Minimal Reproduction\n\nNo typescript errors reported:\r\n```\r\nng build -c strict --no-progress 2>&1 >&- > /tmp/ng-output.txt\r\n```\r\n\r\nTypescript errors correctly reported:\r\n```\r\nng build -c strict --no-progress\r\n```\r\n\r\ntsconfig.strict.json:\r\n```\r\n{\r\n  \"extends\": \"./tsconfig.app.json\",\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"./\",\r\n    \"strict\": true\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"preserveWhitespaces\": false,\r\n    \"strictInjectionParameters\": true,\r\n    \"strictInputAccessModifiers\": true,\r\n    \"fullTemplateTypeCheck\": true,\r\n    \"strictTemplates\": true\r\n  }\r\n}\r\n```\r\n\r\nangular.json:\r\n```\r\n{\r\n  ...\r\n          \"configurations\": {\r\n            \"strict\": {\r\n              \"tsConfig\": \"./tsconfig.strict.json\"\r\n            },\r\n  ....\r\n}\r\n```\r\n\r\nI'm actually trying to capture it from Python3, and getting the same problem:\r\n```\r\nimport subprocess as sp\r\nif __name__ == \"__main__\":\r\n    p = sp.Popen(\r\n        [\"ng\", \"build\", \"--no-progress\", \"-c\", \"strict\"],\r\n        stderr=sp.STDOUT,\r\n        stdout=sp.PIPE,\r\n        bufsize=1,\r\n        universal_newlines=True,\r\n    )\r\n    for i, line in enumerate(p.stdout, 1):\r\n        line = line.rstrip()\r\n        print(line)\r\n```\r\n\r\nOnce again, only the `Warning:` lines are seen, the typescript errors are lost\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.0.3\r\nNode: 16.16.0\r\nPackage Manager: pnpm 7.27.0\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1600.3\r\n@angular-devkit/core         16.0.3\r\n@angular-devkit/schematics   16.0.3\r\n@schematics/angular          16.0.3\r\n```\n```\n\n\n### Anything else relevant?\n\nMac OSX Ventura 13.4\r\nZsh command-line for the shell commands used above\r\nPython 3.9.6 for the python code\r\n\r\nTried using `FORCE_COLOR` 3 and 0 and still no help\r\n\r\n`ng build` seems to just be doing something really odd with its output when not a tty","Url":"https://github.com/angular/angular-cli/issues/25702","RelatedDescription":"Open issue \"ng build does not display typescript errors when output is not a tty\" (#25702)"},{"Id":"1858855350","IsPullRequest":false,"CreatedAt":"2023-08-21T08:18:26","Actor":"10eputzen","Number":"25701","RawContent":null,"Title":"ESBuild - Firebase/Firestore data is only shown after I manipulate something in the dom","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAfter changing the builder from\r\n\r\n`  \"builder\": \"@angular-devkit/build-angular:browser\"`\r\nto\r\n`  \"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\nI experience a very weird behavior for my data that I get from firestore in my Angular App in Development [it works fine on production!].\r\n\r\nThe data is loaded (I can see it in the console) but it would not show in the html template.\r\nIf I resize the page or click any button on it, the data will suddenly appear.\r\nI already tried changing between RXJS and Signals to deliver the data to my component, but only going back to webpack fixes the issue.\r\n\r\nThis is how I call an instance of firestore in my dataservice\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\n\n### Minimal Reproduction\n\n1) Change the builder in angular.json from\r\n\r\n`      \"builder\": \"@angular-devkit/build-angular:browser\"`\r\n\r\nto\r\n\r\n`    \"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\n\r\n2) Load any data to your template via Firestore\r\n\n\n### Exception or Error\n\n```text\nThere is no error - just no data in the template\n```\n\n\n### Your Environment\n\n```text\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else relevant?\n\nIt works fine on production (firebase hosting)","Url":"https://github.com/angular/angular-cli/issues/25701","RelatedDescription":"Open issue \"ESBuild - Firebase/Firestore data is only shown after I manipulate something in the dom\" (#25701)"},{"Id":"1858754065","IsPullRequest":true,"CreatedAt":"2023-08-21T07:15:08","Actor":"angular-robot","Number":"25700","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi40My4yIiwidXBkYXRlZEluVmVyIjoiMzYuNjguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25700","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25700)"},{"Id":"1858238673","IsPullRequest":false,"CreatedAt":"2023-08-20T19:21:34","Actor":"axos88","Number":"25699","RawContent":null,"Title":"ng build/serve --watch should have a switch to clear the screen before each rebuild","State":"open","Body":"### Command\n\nbuild, serve\n\n### Description\n\nReviving #21559, as I'd like to see the same thing implemented, to always have a clear view of what is actually an error and what has already been addressed. Without this it's very confusing to scroll back and forth to see where the last batch of errors are starting, and what was the output from the last build.\r\n\r\nDescription of #21559 below:\r\n\r\nWhen I'm refactoring large code-base i revised folowing process:\r\n\r\ni have ng serve running\r\ni do some changes in bulk without save\r\nsave all\r\ni stop the process\r\nclear the console\r\nthen start the ng serve again\r\nI'm doing this to see in isolation what I break, fixed what are new issues etc. So I can focus only on what is relevant\r\n\n\n### Describe the solution you'd like\n\nit would be nice to have a switch to run ng serve which would clear console everytime it detects change\r\n\n\n### Describe alternatives you've considered\n\nCurrently I'm doing it manually - stopping the process, clearing console and starting ng serve again","Url":"https://github.com/angular/angular-cli/issues/25699","RelatedDescription":"Open issue \"ng build/serve --watch should have a switch to clear the screen before each rebuild\" (#25699)"},{"Id":"1858187908","IsPullRequest":false,"CreatedAt":"2023-08-20T16:55:35","Actor":"SciTechEnthusiast","Number":"25698","RawContent":null,"Title":"proxy config json contents needs to be in sequence to work correctly","State":"open","Body":"### Command\n\nother, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nI don't know\n\n### Description\n\nBelow is the command I'm using \r\n`ng serve --proxy-config proxy.conf.json`\r\n\r\nContents of **proxy.conf.json** are:\r\n\r\n```\r\n{\r\n    \"/api/code\": {\r\n        \"target\": \"http://localhost/api/code\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    },\r\n    \"/api/codenames\": {\r\n        \"target\": \"http://localhost/api/codenames\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    }\r\n}\r\n```\r\n\r\nIf I make a call to  `GET /api/codenames` it gets called as  `GET /api/code/api/codenames`\r\n\r\n\r\nBelow is my angular http service code:\r\n\r\n```\r\nbaseUrl = `${window.location.protocol}//${window.location.host}`\r\ngetCode(codename: string): Observable<any> {\r\n    let payload = {\r\n      'codename': codename,\r\n    }\r\n    return this.http.post(`${this.baseUrl}/api/code`, payload);\r\n  }\r\n\r\n  getCodeNames(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/api/codenames`);\r\n  }\r\n\r\n```\r\n\r\n\r\n\n\n### Minimal Reproduction\n\n`ng serve --proxy-config proxy.conf.json`\r\n\r\njust make 2 dummy apis with similar name prefix \r\n\r\ne.g.\r\n\r\n- `/api/test`\r\n- `/api/testcases`\r\n\r\n\r\nwhen you try to call `/api/testcases` it will call `/api/test/api/testcases`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.1\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.2\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.1\r\n@angular-devkit/build-angular   16.1.1\r\n@angular-devkit/core            16.1.1\r\n@angular-devkit/schematics      16.1.1\r\n@angular/cdk                    16.1.4\r\n@angular/cli                    16.1.1\r\n@schematics/angular             16.1.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\nproxy resolving is just wrong I have to put the config in sequence like /codesnames first and then /code in order to make it work:\r\n\r\nAfter changing sequence like below then only I'm able to call correct endpoint:\r\n\r\n```\r\n{\r\n    \"/api/codenames\": {\r\n        \"target\": \"http://localhost/api/codenames\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    },\r\n    \"/api/code\": {\r\n        \"target\": \"http://localhost/api/code\",\r\n        \"secure\": false,\r\n        \"changeOrigin\": true\r\n    }\r\n}\r\n```","Url":"https://github.com/angular/angular-cli/issues/25698","RelatedDescription":"Open issue \"proxy config json contents needs to be in sequence to work correctly\" (#25698)"},{"Id":"1857641129","IsPullRequest":false,"CreatedAt":"2023-08-19T08:51:36","Actor":"Neizan93","Number":"25697","RawContent":null,"Title":"Integrate jest-fail-on-console in @angular-devkit/build-angular:jest","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nI would like to propose the integration of the `jest-fail-on-console` plugin into the @angular-devkit/build-angular:jest configuration. Currently, Jest does not automatically fail tests when there are console errors or warnings. This plugin helps in making tests fail when such console outputs are present, aiding in maintaining a clean and clear test output.\n\n### Describe the solution you'd like\n\nIntegrate the jest-fail-on-console utility into the @angular-devkit/build-angular:jest configuration. This would involve adding the utility as a dependency and invoking it in the appropriate setup files for Jest.\n\n### Describe alternatives you've considered\n\nWhile there might be alternative solutions or workarounds, such as manually asserting console outputs in tests, integrating jest-fail-on-console would provide a standardized and automated approach, reducing the overhead for developers to manage console outputs in their tests.\r\n\r\n- Manually asserting console outputs in tests: While this is possible, it can lead to duplicated effort and less standardized testing practices.\r\n\r\n- Integrating Jest configuration within angular.json: Another alternative would be to integrate the Jest configuration (such as jest-config and jest-setup) into the angular.json configuration for @angular-devkit/build-angular:jest. This would provide a more seamless way to incorporate plugins like jest-fail-on-console and other customizations.","Url":"https://github.com/angular/angular-cli/issues/25697","RelatedDescription":"Open issue \"Integrate jest-fail-on-console in @angular-devkit/build-angular:jest\" (#25697)"},{"Id":"1857635076","IsPullRequest":false,"CreatedAt":"2023-08-19T08:28:18","Actor":"Neizan93","Number":"25696","RawContent":null,"Title":"Support for jest-angular-test-verifier when using @angular-devkit/build-angular:jest","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Description\r\n\r\nAs Angular CLI is starting to provide support for Jest in Angular 16, I would like to propose the addition of support for the `jest-angular-test-verifier` extension or a similar feature. This feature would enable developers to detect files that lack corresponding `spec.ts` files, helping to ensure comprehensive test coverage in Angular projects.\r\n\r\n**Benefits**\r\n\r\n- Enhance the testing experience in Angular projects by ensuring complete test coverage.\r\n- Provide a built-in solution for developers to easily identify files without corresponding test files.\r\n- Reduce the need for external tools or custom scripts to perform this analysis.\r\n- Align Angular CLI with best practices for maintaining test coverage in Angular applications.\r\n\r\njest-angular-test-verifier npmjs: https://www.npmjs.com/package/jest-angular-test-verifier\r\n\r\n### Describe the solution you'd like\r\n\r\nThe proposed solution is to integrate the functionality of `jest-angular-test-verifier` or a similar tool into Angular CLI. This would involve creating a built-in mechanism that can analyze the project's file structure and identify files that do not have associated `spec.ts` files. The tool should offer configuration options to customize the file extensions to check, define exclusions, and set exclusion rules based on content.\r\n\r\n### Describe alternatives you've considered\r\n\r\nWhile the proposed solution suggests integrating `jest-angular-test-verifier` directly into Angular CLI, an alternative approach could involve developing a dedicated and more sophisticated solution tailored to Angular projects. By leveraging the power and familiarity of Angular's codebase, the CLI team could create an integrated tool that offers more advanced features and optimizations for detecting missing `spec.ts` files. This approach could lead to a more seamless and tightly integrated experience for Angular developers.\r\n\r\nI appreciate your consideration of this feature proposal and look forward to the possibility of seeing this enhancement added to Angular CLI. If you have any questions or need further details, please let me know. Thank you!\r\n","Url":"https://github.com/angular/angular-cli/issues/25696","RelatedDescription":"Open issue \"Support for jest-angular-test-verifier when using @angular-devkit/build-angular:jest\" (#25696)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1872211040","IsPullRequest":true,"CreatedAt":"2023-08-29T18:47:11","Actor":"mmalerba","Number":"27728","RawContent":null,"Title":"refactor(multiple): convert components to theme inspection API (round 3)","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27728","RelatedDescription":"Open PR \"refactor(multiple): convert components to theme inspection API (round 3)\" (#27728)"},{"Id":"1872155517","IsPullRequest":false,"CreatedAt":"2023-08-29T18:05:11","Actor":"examan","Number":"27727","RawContent":null,"Title":"bug(mat-menu): Incorrect mat-menu persistence with  multiple matMenuTriggerFor","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRemove the backdrop from mat-menu, add matMenuContent, and apply this menu to multiple matMenuTriggerFor buttons. Subsequent clicks on the menu trigger button result in the menu not correctly disappearing.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dv2yyh\n\n### Expected Behavior\n\nThe old menu should be removed properly.\n\n### Actual Behavior\n\nThe old menu retains an empty panel.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Edge\r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/27727","RelatedDescription":"Open issue \"bug(mat-menu): Incorrect mat-menu persistence with  multiple matMenuTriggerFor\" (#27727)"},{"Id":"1872112440","IsPullRequest":true,"CreatedAt":"2023-08-29T17:32:01","Actor":"sbarfurth","Number":"27726","RawContent":null,"Title":"fix(cdk/menu): run change detection for  changes to overlay ref of trigger","State":"open","Body":"Fixes an issue where menu triggers placed inside components using OnPush change detection would not have their `aria-expanded` property updated correctly when switching between sibling triggers.\r\n\r\nFixes #27725","Url":"https://github.com/angular/components/pull/27726","RelatedDescription":"Open PR \"fix(cdk/menu): run change detection for  changes to overlay ref of trigger\" (#27726)"},{"Id":"1872015873","IsPullRequest":false,"CreatedAt":"2023-08-29T16:25:49","Actor":"sbarfurth","Number":"27725","RawContent":null,"Title":"bug(cdk/menu): Trigger does not update ARIA values correctly in `OnPush` components","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI recently noticed that the menu trigger (`CdkMenuTrigger`)  misbehaves when inside `OnPush` components because the `OnPush` change detection strategy will cascade into child directives implicitly. Specifically, the `aria-expanded` property will not correctly follow the open sub-menu. After some investigation this seems to simply be caused by the `CdkMenuTrigger` not using `detectChanges()` or `markForCheck()` from the `ChangeDetectorRef` after opening and closing the menu overlay. The attachment state of the menu overlay is used to populate `aria-expanded` directly.\r\n\r\nThis can be worked around by having the `OnPush` parent listen to `(opened)` and `(closed)` events emitted by the trigger, but that is not very scalable since each menu item would then require two additional handlers inside every `OnPush` component.\r\n\r\nI will be sending a pull request that will make the `CdkMenuTrigger` call relevant methods from the `ChangeDetectorRef` at appropriate times to support being placed in `OnPush` components.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-uc7xxl\r\n\r\n*Note: In the StackBlitz the style of menu items is changed based on the `aria-expanded` property of the element. If the element has `aria-expanded` set to `true` the item will appear with a black background and white text. This is supposed to make it easy to see how `aria-expanded` updates.*\r\n\r\nSteps to reproduce:\r\n1. Create a an inline `CdkMenu` or a `CdkMenuBar` in a component using `ChangeDetectionStrategy.OnPush`\r\n2. Add sub-menus to the items of the inline menu\r\n3. Click any of the items to open its sub-menu\r\n4. Hover to any other item with a sub-menu\r\n\n\n### Expected Behavior\n\nWhen hovering over another item with a sub-menu, the `aria-expanded` property of the newly hovered item should be set to `true` and that of the previous item should be set to `false`. The `aria-expanded` property should be `true` for the item that has an open sub-menu at all times. When clicking outside the menu all sub-menus should close and `aria-expanded` should be `false` for all items in the menu.\n\n### Actual Behavior\n\nThe `aria-expanded` property continues to be `true` on the initially clicked element regardless of the item hovered and where the open sub-menu is. It also continues to be `true` for an item even when all sub-menus are closed.\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Version 116.0.5845.110 (Official Build) (arm64)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27725","RelatedDescription":"Open issue \"bug(cdk/menu): Trigger does not update ARIA values correctly in `OnPush` components\" (#27725)"},{"Id":"1872006393","IsPullRequest":false,"CreatedAt":"2023-08-29T16:19:31","Actor":"nagamanikandanKannappan","Number":"27724","RawContent":null,"Title":"bug(COMPONENT): @angular/google-maps not working in Angular CLI: 15.0.5","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n**_ng version_**\r\n\r\nAngular CLI: 15.0.5\r\nNode: 18.17.1\r\nPackage Manager: npm 9.1.3\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.0.5\r\n@angular/cli                    15.0.5\r\n@angular/google-maps            16.2.1\r\n@schematics/angular             15.0.5\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n\r\n\r\n\r\n**_Issues:_**\r\n\r\n1. I had to do npm install using the command. Normal npm install did not work --> npm install @angular/google-maps --legacy-peer-deps\r\n2. I have a valid Google maps API key too. , But, When I try to use Google maps component as shown in the following two posts (https://medium.com/swlh/angular-google-map-component-basics-and-tips-7ff679e383ff , https://timdeschryver.dev/blog/google-maps-as-an-angular-component#googlemap) , I am getting various errors as shown below\r\n\r\n```\r\nError: node_modules/@angular/google-maps/index.d.ts:325:84 - error TS2344: Type '{ height: { alias: \"height\"; required: false; }; width: { alias: \"width\"; required: false; }; mapTypeId: { alias: \"mapTypeId\"; required: false; }; center: { alias: \"center\"; required: false; }; zoom: { alias: \"zoom\"; required: false; }; options: { ...; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"height\"' is incompatible with index signature.\r\n    Type '{ alias: \"height\"; required: false; }' is not assignable to type 'string'.\r\n\r\n325     static ɵcmp: i0.ɵɵComponentDeclaration<GoogleMap, \"google-map\", [\"googleMap\"], { \"height\": { \"alias\": \"height\"; \"required\": false; }; \"width\": { \"alias\": \"width\"; \"required\": false; }; \"mapTypeId\": { \"alias\": \"mapTypeId\"; \"required\": false; }; \"center\": { \"alias\": \"center\"; \"required\": false; }; \"zoom\": { \"alias\": \"zoom\"; \"required\": false; }; \"options\": { \"alias\": \"options\"; \"required\": false; }; }, { \"mapInitialized\": \"mapInitialized\"; \"authFailure\": \"authFailure\"; \"boundsChanged\": \"boundsChanged\"; \"centerChanged\": \"centerChanged\"; \"mapClick\": \"mapClick\"; \"mapDblclick\": \"mapDblclick\"; \"mapDrag\": \"mapDrag\"; \"mapDragend\": \"mapDragend\"; \"mapDragstart\": \"mapDragstart\"; \"headingChanged\": \"headingChanged\"; \"idle\": \"idle\"; \"maptypeidChanged\": \"maptypeidChanged\"; \"mapMousemove\": \"mapMousemove\"; \"mapMouseout\": \"mapMouseout\"; \"mapMouseover\": \"mapMouseover\"; \"projectionChanged\": \"projectionChanged\"; \"mapRightclick\": \"mapRightclick\"; \"tilesloaded\": \"tilesloaded\"; \"tiltChanged\": \"tiltChanged\"; \"zoomChanged\": \"zoomChanged\"; }, never, [\"*\"], false, never>;\r\n                                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:603:84 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; center: { alias: \"center\"; required: false; }; radius: { alias: \"radius\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n603     static ɵdir: i0.ɵɵDirectiveDeclaration<MapCircle, \"map-circle\", [\"mapCircle\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"center\": { \"alias\": \"center\"; \"required\": false; }; \"radius\": { \"alias\": \"radius\"; \"required\": false; }; }, { \"centerChanged\": \"centerChanged\"; \"circleClick\": \"circleClick\"; \"circleDblclick\": \"circleDblclick\"; \"circleDrag\": \"circleDrag\"; \"circleDragend\": \"circleDragend\"; \"circleDragstart\": \"circleDragstart\"; \"circleMousedown\": \"circleMousedown\"; \"circleMousemove\": \"circleMousemove\"; \"circleMouseout\": \"circleMouseout\"; \"circleMouseover\": \"circleMouseover\"; \"circleMouseup\": \"circleMouseup\"; \"radiusChanged\": \"radiusChanged\"; \"circleRightclick\": \"circleRightclick\"; }, never, never, false, never>;\r\n                                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:657:121 - error TS2344: Type '{ directions: { alias: \"directions\"; required: false; }; options: { alias: \"options\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"directions\"' is incompatible with index signature.\r\n    Type '{ alias: \"directions\"; required: false; }' is not assignable to type 'string'.\r\n\r\n657     static ɵdir: i0.ɵɵDirectiveDeclaration<MapDirectionsRenderer, \"map-directions-renderer\", [\"mapDirectionsRenderer\"], { \"directions\": { \"alias\": \"directions\"; \"required\": false; }; \"options\": { \"alias\": \"options\"; \"required\": false; }; }, { \"directionsChanged\": \"directionsChanged\"; }, never, never, false, never>;\r\n                                                                                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:792:106 - error TS2344: Type '{ url: { alias: \"url\"; required: false; }; bounds: { alias: \"bounds\"; required: false; }; clickable: { alias: \"clickable\"; required: false; }; opacity: { alias: \"opacity\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"url\"' is incompatible with index signature.\r\n    Type '{ alias: \"url\"; required: false; }' is not assignable to type 'string'.\r\n\r\n792     static ɵdir: i0.ɵɵDirectiveDeclaration<MapGroundOverlay, \"map-ground-overlay\", [\"mapGroundOverlay\"], { \"url\": { \"alias\": \"url\"; \"required\": false; }; \"bounds\": { \"alias\": \"bounds\"; \"required\": false; }; \"clickable\": { \"alias\": \"clickable\"; \"required\": false; }; \"opacity\": { \"alias\": \"opacity\"; \"required\": false; }; }, { \"mapClick\": \"mapClick\"; \"mapDblclick\": \"mapDblclick\"; }, never, never, false, never>;\r\n                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:844:103 - error TS2344: Type '{ data: { alias: \"data\"; required: false; }; options: { alias: \"options\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"data\"' is incompatible with index signature.\r\n    Type '{ alias: \"data\"; required: false; }' is not assignable to type 'string'.\r\n\r\n844     static ɵdir: i0.ɵɵDirectiveDeclaration<MapHeatmapLayer, \"map-heatmap-layer\", [\"mapHeatmapLayer\"], { \"data\": { \"alias\": \"data\"; \"required\": false; }; \"options\": { \"alias\": \"options\"; \"required\": false; }; }, {}, never, never, false, never>;\r\n                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:929:97 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; position: { alias: \"position\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n929     static ɵdir: i0.ɵɵDirectiveDeclaration<MapInfoWindow, \"map-info-window\", [\"mapInfoWindow\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"position\": { \"alias\": \"position\"; \"required\": false; }; }, { \"closeclick\": \"closeclick\"; \"contentChanged\": \"contentChanged\"; \"domready\": \"domready\"; \"positionChanged\": \"positionChanged\"; \"zindexChanged\": \"zindexChanged\"; }, never, never, false, never>;\r\n                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:995:91 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; url: { alias: \"url\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n995     static ɵdir: i0.ɵɵDirectiveDeclaration<MapKmlLayer, \"map-kml-layer\", [\"mapKmlLayer\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"url\": { \"alias\": \"url\"; \"required\": false; }; }, { \"kmlClick\": \"kmlClick\"; \"defaultviewportChanged\": \"defaultviewportChanged\"; \"statusChanged\": \"statusChanged\"; }, never, never, false, never>;\r\n                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1230:84 - error TS2344: Type '{ title: { alias: \"title\"; required: false; }; position: { alias: \"position\"; required: false; }; label: { alias: \"label\"; required: false; }; clickable: { alias: \"clickable\"; required: false; }; options: { ...; }; icon: { ...; }; visible: { ...; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"title\"' is incompatible with index signature.\r\n    Type '{ alias: \"title\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1230     static ɵdir: i0.ɵɵDirectiveDeclaration<MapMarker, \"map-marker\", [\"mapMarker\"], { \"title\": { \"alias\": \"title\"; \"required\": false; }; \"position\": { \"alias\": \"position\"; \"required\": false; }; \"label\": { \"alias\": \"label\"; \"required\": false; }; \"clickable\": { \"alias\": \"clickable\"; \"required\": false; }; \"options\": { \"alias\": \"options\"; \"required\": false; }; \"icon\": { \"alias\": \"icon\"; \"required\": false; }; \"visible\": { \"alias\": \"visible\"; \"required\": false; }; }, { \"animationChanged\": \"animationChanged\"; \"mapClick\": \"mapClick\"; \"clickableChanged\": \"clickableChanged\"; \"cursorChanged\": \"cursorChanged\"; \"mapDblclick\": \"mapDblclick\"; \"mapDrag\": \"mapDrag\"; \"mapDragend\": \"mapDragend\"; \"draggableChanged\": \"draggableChanged\"; \"mapDragstart\": \"mapDragstart\"; \"flatChanged\": \"flatChanged\"; \"iconChanged\": \"iconChanged\"; \"mapMousedown\": \"mapMousedown\"; \"mapMouseout\": \"mapMouseout\"; \"mapMouseover\": \"mapMouseover\"; \"mapMouseup\": \"mapMouseup\"; \"positionChanged\": \"positionChanged\"; \"mapRightclick\": \"mapRightclick\"; \"shapeChanged\": \"shapeChanged\"; \"titleChanged\": \"titleChanged\"; \"visibleChanged\": \"visibleChanged\"; \"zindexChanged\": \"zindexChanged\"; }, never, never, false, never>;\r\n                                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1334:112 - error TS2344: Type '{ ariaLabelFn: { alias: \"ariaLabelFn\"; required: false; }; averageCenter: { alias: \"averageCenter\"; required: false; }; batchSize: { alias: \"batchSize\"; required: false; }; batchSizeIE: { alias: \"batchSizeIE\"; required: false; }; ... 14 more ...; options: { ...; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"ariaLabelFn\"' is incompatible with index signature.\r\n    Type '{ alias: \"ariaLabelFn\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1334     static ɵcmp: i0.ɵɵComponentDeclaration<MapMarkerClusterer, \"map-marker-clusterer\", [\"mapMarkerClusterer\"], { \"ariaLabelFn\": { \"alias\": \"ariaLabelFn\"; \"required\": false; }; \"averageCenter\": { \"alias\": \"averageCenter\"; \"required\": false; }; \"batchSize\": { \"alias\": \"batchSize\"; \"required\": false; }; \"batchSizeIE\": { \"alias\": \"batchSizeIE\"; \"required\": false; }; \"calculator\": { \"alias\": \"calculator\"; \"required\": false; }; \"clusterClass\": { \"alias\": \"clusterClass\"; \"required\": false; }; \"enableRetinaIcons\": { \"alias\": \"enableRetinaIcons\"; \"required\": false; }; \"gridSize\": { \"alias\": \"gridSize\"; \"required\": false; }; \"ignoreHidden\": { \"alias\": \"ignoreHidden\"; \"required\": false; }; \"imageExtension\": { \"alias\": \"imageExtension\"; \"required\": false; }; \"imagePath\": { \"alias\": \"imagePath\"; \"required\": false; }; \"imageSizes\": { \"alias\": \"imageSizes\"; \"required\": false; }; \"maxZoom\": { \"alias\": \"maxZoom\"; \"required\": false; }; \"minimumClusterSize\": { \"alias\": \"minimumClusterSize\"; \"required\": false; }; \"styles\": { \"alias\": \"styles\"; \"required\": false; }; \"title\": { \"alias\": \"title\"; \"required\": false; }; \"zIndex\": { \"alias\": \"zIndex\"; \"required\": false; }; \"zoomOnClick\": { \"alias\": \"zoomOnClick\"; \"required\": false; }; \"options\": { \"alias\": \"options\"; \"required\": false; }; }, { \"clusteringbegin\": \"clusteringbegin\"; \"clusteringend\": \"clusteringend\"; \"clusterClick\": \"clusterClick\"; }, [\"_markers\"], [\"*\"], false, never>;\r\n                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1430:87 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; paths: { alias: \"paths\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1430     static ɵdir: i0.ɵɵDirectiveDeclaration<MapPolygon, \"map-polygon\", [\"mapPolygon\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"paths\": { \"alias\": \"paths\"; \"required\": false; }; }, { \"polygonClick\": \"polygonClick\"; \"polygonDblclick\": \"polygonDblclick\"; \"polygonDrag\": \"polygonDrag\"; \"polygonDragend\": \"polygonDragend\"; \"polygonDragstart\": \"polygonDragstart\"; \"polygonMousedown\": \"polygonMousedown\"; \"polygonMousemove\": \"polygonMousemove\"; \"polygonMouseout\": \"polygonMouseout\"; \"polygonMouseover\": \"polygonMouseover\"; \"polygonMouseup\": \"polygonMouseup\"; \"polygonRightclick\": \"polygonRightclick\"; }, never, never, false, never>;\r\n                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1522:90 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; path: { alias: \"path\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1522     static ɵdir: i0.ɵɵDirectiveDeclaration<MapPolyline, \"map-polyline\", [\"mapPolyline\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"path\": { \"alias\": \"path\"; \"required\": false; }; }, { \"polylineClick\": \"polylineClick\"; \"polylineDblclick\": \"polylineDblclick\"; \"polylineDrag\": \"polylineDrag\"; \"polylineDragend\": \"polylineDragend\"; \"polylineDragstart\": \"polylineDragstart\"; \"polylineMousedown\": \"polylineMousedown\"; \"polylineMousemove\": \"polylineMousemove\"; \"polylineMouseout\": \"polylineMouseout\"; \"polylineMouseover\": \"polylineMouseover\"; \"polylineMouseup\": \"polylineMouseup\"; \"polylineRightclick\": \"polylineRightclick\"; }, never, never, false, never>;\r\n                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1632:93 - error TS2344: Type '{ options: { alias: \"options\"; required: false; }; bounds: { alias: \"bounds\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"options\"' is incompatible with index signature.\r\n    Type '{ alias: \"options\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1632     static ɵdir: i0.ɵɵDirectiveDeclaration<MapRectangle, \"map-rectangle\", [\"mapRectangle\"], { \"options\": { \"alias\": \"options\"; \"required\": false; }; \"bounds\": { \"alias\": \"bounds\"; \"required\": false; }; }, { \"boundsChanged\": \"boundsChanged\"; \"rectangleClick\": \"rectangleClick\"; \"rectangleDblclick\": \"rectangleDblclick\"; \"rectangleDrag\": \"rectangleDrag\"; \"rectangleDragend\": \"rectangleDragend\"; \"rectangleDragstart\": \"rectangleDragstart\"; \"rectangleMousedown\": \"rectangleMousedown\"; \"rectangleMousemove\": \"rectangleMousemove\"; \"rectangleMouseout\": \"rectangleMouseout\"; \"rectangleMouseover\": \"rectangleMouseover\"; \"rectangleMouseup\": \"rectangleMouseup\"; \"rectangleRightclick\": \"rectangleRightclick\"; }, never, never, false, never>;\r\n                                                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\nError: node_modules/@angular/google-maps/index.d.ts:1662:103 - error TS2344: Type '{ autoRefresh: { alias: \"autoRefresh\"; required: false; }; }' does not satisfy the constraint '{ [key: string]: string; }'.\r\n  Property '\"autoRefresh\"' is incompatible with index signature.\r\n    Type '{ alias: \"autoRefresh\"; required: false; }' is not assignable to type 'string'.\r\n\r\n1662     static ɵdir: i0.ɵɵDirectiveDeclaration<MapTrafficLayer, \"map-traffic-layer\", [\"mapTrafficLayer\"], { \"autoRefresh\": { \"alias\": \"autoRefresh\"; \"required\": false; }; }, {}, never, never, false, never>;\r\n                                                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n\r\n\r\n\r\n** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **\r\n\r\n\r\n× Failed to compile.\r\n^C\n\n### Reproduction\n\nI don't want to use my Google Maps API key on Stackblitz\r\n\n\n### Expected Behavior\n\nGoogle Maps appears on the UI\n\n### Actual Behavior\n\nng serve doesn't start the project\n\n### Environment\n\n- Angular:\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.0.5\r\n@angular/cli                    15.0.5\r\n@angular/google-maps            16.2.1\r\n@schematics/angular             15.0.5\r\nrxjs                            7.5.7\r\ntypescript                      4.8.4\r\n\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27724","RelatedDescription":"Open issue \"bug(COMPONENT): @angular/google-maps not working in Angular CLI: 15.0.5\" (#27724)"},{"Id":"1871958837","IsPullRequest":false,"CreatedAt":"2023-08-29T15:49:59","Actor":"josephperrott","Number":"27723","RawContent":null,"Title":"Fix code scanning alert - Inefficient regular expression","State":"open","Body":"<!-- Warning: The suggested title contains the alert rule name. This can expose security information. -->\r\n\r\nTracking issue for:\r\n- [ ] https://github.com/angular/components/security/code-scanning/30\r\n","Url":"https://github.com/angular/components/issues/27723","RelatedDescription":"Open issue \"Fix code scanning alert - Inefficient regular expression\" (#27723)"},{"Id":"1868174970","IsPullRequest":true,"CreatedAt":"2023-08-29T15:16:52","Actor":"mmalerba","Number":"27713","RawContent":null,"Title":"refactor(multiple): convert components to theme inspection API (round 2)","State":"closed","Body":"Converts: input, list, checkbox, radio, slide-toggle, slider, button, icon-button, fab, paginator.\r\n\r\nSee related PR https://github.com/angular/components/pull/27688 for more context.","Url":"https://github.com/angular/components/pull/27713","RelatedDescription":"Closed or merged PR \"refactor(multiple): convert components to theme inspection API (round 2)\" (#27713)"},{"Id":"1871353783","IsPullRequest":false,"CreatedAt":"2023-08-29T10:25:54","Actor":"mzernetsch","Number":"27722","RawContent":null,"Title":"bug(mat-error,mat-hint): mat-error and mat-hint display leading spaces","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIn versions pre mdc migration mat-hint and mat-error do NOT display leading spaces.\r\nIn versions post mdc migration mat-hint and mat-error do display leading spaces.\r\n\r\nThis behavior causes multi-line hints and errors to not align properly.\r\n\r\nOf course this just a small thing an can be fixed by formatting the html differently but it is technically an undocumented breaking change. So i need to know if this is intended behavior and i have to fix it in my code or if it will be fixed in angular material.\r\n\r\nApparently there was already an issue for that #26430 but it was closed for not being reproducable but my StackBlitz Links show that it is still the case.\n\n### Reproduction\n\nWorking StackBlitz link (14.2.7): https://stackblitz.com/edit/xxdwty?file=src%2Fapp%2Fform-field-appearance-example.html\r\nError StackBlitz link (16.2.1): https://stackblitz.com/edit/qopght?file=src%2Fexample%2Fform-field-appearance-example.html,src%2Findex.html\r\n\r\n\n\n### Expected Behavior\n\nLeading spaces are not displayed.\n\n### Actual Behavior\n\nLeading spaces are displayed.\n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27722","RelatedDescription":"Open issue \"bug(mat-error,mat-hint): mat-error and mat-hint display leading spaces\" (#27722)"},{"Id":"1871329978","IsPullRequest":false,"CreatedAt":"2023-08-29T10:11:14","Actor":"fcnjd","Number":"27721","RawContent":null,"Title":"bug(mat-select): value changes not always shown on a Braille display","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\nsince I am blind, I use a screenreader, primarily relying on my Braille display (speech is nice to have, but I often work without it).\r\nI've reproduced this bug using both Firefox and Google Chrome on Windows 101, with Jaws screenreader version 2023.\r\nWhen interacting with a mat-select element using up and down arrow keys, the changed value isn't displayed on the Braille display. However, this can only be reproduced when just tapping onto the select and pressing the arrow keys. When expanding the dropdown first (using either the enter key or the mouse), the values change as expected. This means a downgrade from the native select, since there the bug doesn't exist. Both variants can be found on given REPL link.\n\n### Reproduction\n\nThe interactive example in this Angular documentation can be used to reproduce:\r\nhttps://material.angular.io/components/select/overview\r\n\r\nSteps to reproduce:\r\n1. Turn on Jaws screenreader and either connect a Braille display, or use the Braille viewer\r\n2. Tap to the mat-select (don't expand it as described above), and press up and down arrow keys\r\n\n\n### Expected Behavior\n\nSelected option on the Braille display changes synchronized to the actual value on screen.\n\n### Actual Behavior\n\nThe value on the screen gets asynchronous from the value on the Braille display. Changes are sent through as flash messages, but once they disappear we're out of sync, so following the convention would be better here.\r\nContinue tapping until you get to the native select on the same page, and there you find it working as it should.\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: Wasn't displayed when running ng version\r\n- Browser(s): Firefox 116.0.3, Google Chrome 116.0.5845.111\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows11\r\n","Url":"https://github.com/angular/components/issues/27721","RelatedDescription":"Open issue \"bug(mat-select): value changes not always shown on a Braille display\" (#27721)"},{"Id":"1864991020","IsPullRequest":true,"CreatedAt":"2023-08-28T17:23:28","Actor":"crisbeto","Number":"27704","RawContent":null,"Title":"refactor(material/button): remove mixin class usages","State":"closed","Body":"Reworks the button to replace usages of mixin classes with either input transforms or host bindings. This is a test to see how breaking the approach is before we roll it out across the entire library.","Url":"https://github.com/angular/components/pull/27704","RelatedDescription":"Closed or merged PR \"refactor(material/button): remove mixin class usages\" (#27704)"},{"Id":"1869666098","IsPullRequest":true,"CreatedAt":"2023-08-28T12:59:29","Actor":"crisbeto","Number":"27720","RawContent":null,"Title":"build: bump node version","State":"closed","Body":"Updates to a slightly newer version of Node. We need this, because the automated Lighthouse audits require at least version 18.16.0.","Url":"https://github.com/angular/components/pull/27720","RelatedDescription":"Closed or merged PR \"build: bump node version\" (#27720)"},{"Id":"1869407529","IsPullRequest":false,"CreatedAt":"2023-08-28T12:12:59","Actor":"work933k","Number":"27719","RawContent":null,"Title":"mat-legacy-checkbox: inline style=\"display: none\" breaks csp","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWe are working on making our code-base Content Security Policy compliant. Unfortunately the mat-legacy-checkbox makes use of inline-styles which our CSP-policy blocks. \r\nhttps://github.com/angular/components/blob/16.0.x/src/material/legacy-checkbox/checkbox.html#L44\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nAngular Material components to be CSP compliant\n\n### Actual Behavior\n\nAn console error is triggered.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27719","RelatedDescription":"Closed issue \"mat-legacy-checkbox: inline style=\"display: none\" breaks csp\" (#27719)"},{"Id":"1867954829","IsPullRequest":true,"CreatedAt":"2023-08-28T11:48:20","Actor":"aanchal88","Number":"27712","RawContent":null,"Title":"docs: remove duplicate words","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27712","RelatedDescription":"Closed or merged PR \"docs: remove duplicate words\" (#27712)"},{"Id":"1868503468","IsPullRequest":true,"CreatedAt":"2023-08-28T09:36:34","Actor":"crisbeto","Number":"27716","RawContent":null,"Title":"refactor(material/button-toggle): remove unused file","State":"closed","Body":"Removes a file that isn't being used anymore after the button toggle was switched to tokens.","Url":"https://github.com/angular/components/pull/27716","RelatedDescription":"Closed or merged PR \"refactor(material/button-toggle): remove unused file\" (#27716)"},{"Id":"1869314213","IsPullRequest":false,"CreatedAt":"2023-08-28T08:52:36","Actor":"mwaibel-go","Number":"27718","RawContent":null,"Title":"docs-bug(coercion): Add a statement on how these functions relate to the Angular@^16 input transformers","State":"open","Body":"### Documentation Feedback\r\n\r\n#18840 suggested input decorators for input coercion. It seems like they have finally landed in v16 in the form of the [transform property](https://angular.io/api/core/Input#transform) on the `Input()` decorator. It looks like CDK’s [coerceBooleanProperty](https://github.com/angular/components/blob/main/src/cdk/coercion/boolean-property.ts#L16) and Angular’s [booleanAttribute](https://github.com/angular/angular/blob/16.2.2/packages/core/src/util/coercion.ts#L21) even are the same function, albeit worded differently.\r\n\r\nI would appreciate a documentation update either here in the coercion section or in the “base” Angular docs regarding the two approaches to coercion: Is one in some way superior to the other? Will CDK’s version get deprecated? Can/should code safely be upgraded from CDK conversion to ‘native’?\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/cdk/coercion/overview","Url":"https://github.com/angular/components/issues/27718","RelatedDescription":"Open issue \"docs-bug(coercion): Add a statement on how these functions relate to the Angular@^16 input transformers\" (#27718)"},{"Id":"1867415012","IsPullRequest":false,"CreatedAt":"2023-08-28T05:40:11","Actor":"ssalveMobiltex","Number":"27710","RawContent":null,"Title":"bug(Angular Google Maps): fitBounds north > 85 is causing a grey area","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the fitbounds method to fit the markers, it is causing a grey area when the bounds.north > 85\r\n\r\neg.\r\n\r\npublic fitBounds(bounds: google.maps.LatLngBoundsLiteral): void {\r\n    bounds.north = 89.14;\r\n    this.map.fitBounds(bounds);\r\n  }\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nGrey area should not be seen\n\n### Actual Behavior\n\nGrey area at top is seen.\r\n\r\n![image](https://github.com/angular/components/assets/123488872/48383acb-91d9-4acd-97d6-149210c7d756)\r\n\n\n### Environment\n\n- Angular:\r\n- CDK/Material:      15.2.8\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n ","Url":"https://github.com/angular/components/issues/27710","RelatedDescription":"Closed issue \"bug(Angular Google Maps): fitBounds north > 85 is causing a grey area\" (#27710)"},{"Id":"1866716624","IsPullRequest":false,"CreatedAt":"2023-08-28T05:39:28","Actor":"Siddhu-K","Number":"27706","RawContent":null,"Title":"bug(MatDialog): stuttery animation and dropped frames while resizing browser while using 100% width","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI wanted to have the mat dialog take the maximum width available so I am using { width: '100%' } while opening the dialog. However, I am having issues while resizing the browser window.\r\n\r\n`openDialog() {\r\n    this.dialog.open(DialogElementsExampleDialog, { width: '100%' });\r\n}`\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gdlxuq-mwqccp?file=src%2Fexample%2Fdialog-elements-example.ts\r\nSteps to reproduce:\r\n1. open the dialog and resize the browser window. Inspect with dev tools\r\n\n\n### Expected Behavior\n\ndialog resizes smoothly\n\n### Actual Behavior\n\nThe animation is not smooth when I resize the browser window and chrome dev tools shows dropped frames\n\n### Environment\n\nAngular CLI: 16.2.0\r\nNode: 18.12.1\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.2\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1602.0\r\n@angular-devkit/build-angular      16.2.0\r\n@angular-devkit/core               16.2.0\r\n@angular-devkit/schematics         16.2.0\r\n@angular/cdk                       16.2.1\r\n@angular/cli                       16.2.0\r\n@angular/material                  16.2.1\r\n@angular/material-moment-adapter   16.2.1\r\n@schematics/angular                16.2.0\r\nrxjs                               7.8.1\r\ntypescript                         5.1.6\r\nzone.js                            0.13.1","Url":"https://github.com/angular/components/issues/27706","RelatedDescription":"Closed issue \"bug(MatDialog): stuttery animation and dropped frames while resizing browser while using 100% width\" (#27706)"},{"Id":"1867390005","IsPullRequest":true,"CreatedAt":"2023-08-27T23:58:36","Actor":"wagnermaciel","Number":"27709","RawContent":null,"Title":"fix(material/slider): set word-break on value-indicator","State":"closed","Body":"* fixes https://github.com/angular/components/issues/27612","Url":"https://github.com/angular/components/pull/27709","RelatedDescription":"Closed or merged PR \"fix(material/slider): set word-break on value-indicator\" (#27709)"},{"Id":"1868533378","IsPullRequest":true,"CreatedAt":"2023-08-27T15:21:29","Actor":"Naaajii","Number":"27717","RawContent":null,"Title":"fix(material/badge): aria-hidden warning with icon","State":"open","Body":"fixes the issue where the warning for aria-hidden when used with mat-icon it doesn't account in [attr.aria-hidden]=\"condition\"\r\n\r\nfixes #27705","Url":"https://github.com/angular/components/pull/27717","RelatedDescription":"Open PR \"fix(material/badge): aria-hidden warning with icon\" (#27717)"},{"Id":"1868361565","IsPullRequest":true,"CreatedAt":"2023-08-27T05:20:38","Actor":"harshitsharma1250","Number":"27715","RawContent":null,"Title":"Tried to resolve the error in the loading of the image","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27715","RelatedDescription":"Open PR \"Tried to resolve the error in the loading of the image\" (#27715)"},{"Id":"1868268441","IsPullRequest":true,"CreatedAt":"2023-08-26T21:07:29","Actor":"kharazian","Number":"27714","RawContent":null,"Title":"fix(material/autocomplete): Prevent Autocomplete overlap with outlined form-field label when overlay is positioned above","State":"open","Body":"Fixed by preventing Autocomplete overlap with outlined form-field label when overlay is positioned above. Implemented a function to calculate the necessary vertical offset for outlined appearance, ensuring label legibility.\r\n\r\nFix #27476","Url":"https://github.com/angular/components/pull/27714","RelatedDescription":"Open PR \"fix(material/autocomplete): Prevent Autocomplete overlap with outlined form-field label when overlay is positioned above\" (#27714)"},{"Id":"1867770395","IsPullRequest":true,"CreatedAt":"2023-08-25T23:06:31","Actor":"amysorto","Number":"27711","RawContent":null,"Title":"fix(material/list): Emit tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27711","RelatedDescription":"Open PR \"fix(material/list): Emit tokens under mixin root selector\" (#27711)"},{"Id":"1867035905","IsPullRequest":false,"CreatedAt":"2023-08-25T13:12:35","Actor":"nicos68","Number":"27708","RawContent":null,"Title":"docs-bug(COMPONENT): Implementation of asynchronous data sorting should be documented","State":"open","Body":"### Documentation Feedback\r\n\r\nWhen retrieving data asynchronously (e.g. from a REST service, see example below), if I reinstanciate the `MatTableDataSource` object I use in the MatTable component, everything I do works fine except sorting.\r\n**example:**\r\n```typescript\r\n//...\r\nexport class TableSortingExample implements AfterViewInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  constructor(/*...*/) {\r\n    this.http.get(\"myservice\").pipe(\r\n        tap((response) => {\r\n          this.dataSource = new MatTableDataSource(response); // <- reinstanciating the Datasource. \r\n                                                              // Breaks sorting.\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n```\r\nIf I do something like this, clicking on the sort arrows has no effect.\r\n\r\nWhereas if I use something like that:\r\n```typescript\r\n//...\r\nexport class TableSortingExample implements AfterViewInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  constructor(/*...*/) {\r\n    this.http.get(\"myservice\").pipe(\r\n        tap((requests) => {\r\n          this.requests.data = requests; // <- Mutate reference to `data` property of the Datasource.\r\n                                         // Works fine.\r\n        })\r\n      ).subscribe();\r\n    }\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n```\r\nThen everything works. This took me several hours to figure out, and I would probably never have found out, wouldn’t it have been for [this](https://stackoverflow.com/a/63246373/1238300). I think this should be documented.\r\n\r\n**Context:**\r\nAngular & Angular Material versions : 16.1.7\r\n\r\n\r\n### Affected documentation page\r\n\r\nhttps://material.angular.io/components/table/overview#sorting","Url":"https://github.com/angular/components/issues/27708","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Implementation of asynchronous data sorting should be documented\" (#27708)"},{"Id":"1866938708","IsPullRequest":false,"CreatedAt":"2023-08-25T12:10:22","Actor":"iKrishnaSahu","Number":"27707","RawContent":null,"Title":"feat(theming): support for css var as density value","State":"open","Body":"### Feature Description\n\nI tried using css var as a density value to the `mat.define-light-theme` mixin and it failed with below error\r\n\r\n```\r\nError: Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\n\"mdc-density: Supported density scales default, minimum, maximum, but received var(--app-density, 0).\"\r\n```\r\n\r\nWanted to check if this will be available with token based theming api which is currently under development.\r\n\r\nStackblitz link - https://stackblitz.com/edit/an6wid?file=src%2Ftheme.scss\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27707","RelatedDescription":"Open issue \"feat(theming): support for css var as density value\" (#27707)"},{"Id":"1866602996","IsPullRequest":false,"CreatedAt":"2023-08-25T08:31:58","Actor":"AlexanderMelde","Number":"27705","RawContent":null,"Title":"bug(Badge): Warning \"badge on `mat-icon` with `aria-hidden`\" doesn't check `attr.aria-hidden`","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThere is [a warning in badge.ts](https://github.com/angular/components/blob/main/src/material/badge/badge.ts#L167) introduced in #27035 about using matBadge on mat-icons, when aria-hidden is set to true (which is the default).\r\n\r\n```\r\nDetected a matBadge on an \"aria-hidden\" \"<mat-icon>\". Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.\r\n<mat-icon role=\"img\" matbadge=\"4\" class=\"mat-icon notranslate mat-badge\" aria-hidden=\"true\"></mat-icon>\r\n```\r\n\r\nThe following produces the warning:\r\n`<mat-icon matBadge=\"4\">home</mat-icon>` \r\n\r\nUnfortunately, this warning still shows when setting `aria-hidden` via `attr.` (which is necessary for setting it conditionally). \r\n\r\nThe following does still show the warning (unwanted behaviour):\r\n`<mat-icon [attr.aria-hidden]=\"false\" matBadge=\"4\">home</mat-icon>`\r\n\r\nAnd when trying to set aria-hidden conditionally directly without `attr.`, the following warning appears instead:\r\n```\r\nCan't bind to 'aria-hidden' since it isn't a known property of 'mat-icon'.\r\n1. If 'mat-icon' is an Angular component and it has 'aria-hidden' input, then verify that it is part of this module.\r\n2. If 'mat-icon' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n```\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/components-issue-xyqstm?devToolsHeight=33&file=src%2Fapp%2Fexample-component.html)\r\n\r\nSteps to reproduce:\r\n1.  Load the Page\r\n2. Look at the console\r\n\n\n### Expected Behavior\n\nNo Warning\n\n### Actual Behavior\n\nWarning in Console\n\n### Environment\n\n- Angular: 16.2.0\r\n- CDK/Material: 16.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/27705","RelatedDescription":"Open issue \"bug(Badge): Warning \"badge on `mat-icon` with `aria-hidden`\" doesn't check `attr.aria-hidden`\" (#27705)"},{"Id":"1863729193","IsPullRequest":false,"CreatedAt":"2023-08-24T17:43:40","Actor":"wagnermaciel","Number":"27700","RawContent":null,"Title":"bug(material/slider): Safari IOS slider bound value does not always get updated on value change","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15.0.0\n\n### Description\n\nOriginal report:\r\nhttps://github.com/angular/components/issues/27316#issuecomment-1688863198\r\n\r\nSlider `value` bindings are not always getting updated on value change.\n\n### Reproduction\n\nReproducible on material.angular.io\r\n\r\nSteps to reproduce:\r\n1. Go to the slider example that has a value binding\r\n2. Change the value of the slider\r\n\n\n### Expected Behavior\n\nThe slider value and the bound value stay in sync\n\n### Actual Behavior\n\nThe slider value can go out of sync with the bound value\n\n### Environment\n\n- Angular: 16.2.1\r\n- Browser(s): Safari\r\n- Operating System: IOS\r\n","Url":"https://github.com/angular/components/issues/27700","RelatedDescription":"Closed issue \"bug(material/slider): Safari IOS slider bound value does not always get updated on value change\" (#27700)"},{"Id":"1863845008","IsPullRequest":true,"CreatedAt":"2023-08-24T17:43:38","Actor":"wagnermaciel","Number":"27701","RawContent":null,"Title":"fix(material/slider): keep ios safari slider value binding in sync","State":"closed","Body":"fixes https://github.com/angular/components/issues/27700","Url":"https://github.com/angular/components/pull/27701","RelatedDescription":"Closed or merged PR \"fix(material/slider): keep ios safari slider value binding in sync\" (#27701)"},{"Id":"1864106116","IsPullRequest":true,"CreatedAt":"2023-08-24T17:35:50","Actor":"wagnermaciel","Number":"27702","RawContent":null,"Title":"fix(material/slider): make selecting thumbs at min/max easier","State":"closed","Body":"fixes https://github.com/angular/components/issues/27620","Url":"https://github.com/angular/components/pull/27702","RelatedDescription":"Closed or merged PR \"fix(material/slider): make selecting thumbs at min/max easier\" (#27702)"},{"Id":"1864951467","IsPullRequest":false,"CreatedAt":"2023-08-24T11:26:19","Actor":"bederuijter","Number":"27703","RawContent":null,"Title":"bug(Dialog): MatTestDialogOpener (This constructor is not compatible with Angular Dependency Injection)","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe MatDialog API mentions  a [`MatTestDialogOpener`](https://material.angular.io/components/dialog/api#MatTestDialogOpener) that can be used when writing tests that involve a mat-dialog. \r\n\r\nInstead, when using the `MatTestDialogOpener` when writing my test it throws an error:\r\n\r\n ```\r\n NG0202: This constructor is not compatible with Angular Dependency Injection because its dependency at index 0 of the parameter list is invalid.\r\n    This can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\r\n\r\n    Please check that 1) the type for the parameter at index 0 is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\r\n```\n\n### Reproduction\n\nI don't know how to provide a StackBlitz reproduction that involve a test. Using the [mat dialog opener test](https://github.com/angular/components/blob/main/src/material/dialog/testing/dialog-opener.spec.ts) I was still able to reproduce the error (In the hopes of eliminating user error 🙂)\r\n\r\n```ts\r\nimport {Component, Inject} from '@angular/core';\r\nimport {fakeAsync, TestBed, flush} from '@angular/core/testing';\r\nimport {MatTestDialogOpenerModule, MatTestDialogOpener} from '@angular/material/dialog/testing';\r\nimport {MAT_DIALOG_DATA, MatDialogRef, MatDialogState} from '@angular/material/dialog';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\ndescribe('MDC-based MatTestDialogOpener', () => {\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTestDialogOpenerModule, NoopAnimationsModule],\r\n      declarations: [ExampleComponent],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should open a dialog when created', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(MatTestDialogOpener.withComponent(ExampleComponent));\r\n    flush();\r\n    expect(fixture.componentInstance.dialogRef.getState()).toBe(MatDialogState.OPEN);\r\n    expect(document.querySelector('mat-dialog-container')).toBeTruthy();\r\n  }));\r\n\r\n  it('should throw an error if no dialog component is provided', () => {\r\n    expect(() => TestBed.createComponent(MatTestDialogOpener)).toThrow(\r\n      Error('MatTestDialogOpener does not have a component provided.'),\r\n    );\r\n  });\r\n\r\n  it('should pass data to the component', fakeAsync(() => {\r\n    const config = {data: 'test'};\r\n    TestBed.createComponent(MatTestDialogOpener.withComponent(ExampleComponent, config));\r\n    flush();\r\n    const dialogContainer = document.querySelector('mat-dialog-container');\r\n    expect(dialogContainer!.innerHTML).toContain('Data: test');\r\n  }));\r\n\r\n  it('should get closed result data', fakeAsync(() => {\r\n    const config = {data: 'test'};\r\n    const fixture = TestBed.createComponent(\r\n      MatTestDialogOpener.withComponent<ExampleComponent, ExampleDialogResult>(\r\n        ExampleComponent,\r\n        config,\r\n      ),\r\n    );\r\n    flush();\r\n    const closeButton = document.querySelector('#close-btn') as HTMLElement;\r\n    closeButton.click();\r\n    flush();\r\n    expect(fixture.componentInstance.closedResult).toEqual({reason: 'closed'});\r\n  }));\r\n});\r\n\r\ninterface ExampleDialogResult {\r\n  reason: string;\r\n}\r\n\r\n/** Simple component for testing MatTestDialogOpener. */\r\n@Component({\r\n  template: `\r\n    Data: {{data}}\r\n    <button id=\"close-btn\" (click)=\"close()\">Close</button>\r\n  `,\r\n})\r\nclass ExampleComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ExampleComponent, ExampleDialogResult>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {}\r\n\r\n  close() {\r\n    this.dialogRef.close({reason: 'closed'});\r\n  }\r\n}\r\n```\r\n\n\n### Expected Behavior\n\nTo be able to write tests using the `MatTestDialogOpener`\n\n### Actual Behavior\n\n`MatTestDialogOpener` throwing an error related to the Dependency injection\r\n\r\n```\r\nNG0202: This constructor is not compatible with Angular Dependency Injection because its dependency at index 0 of the parameter list is invalid.\r\n    This can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\r\n\r\n    Please check that 1) the type for the parameter at index 0 is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\r\n\r\n      at ɵɵinvalidFactoryDep (../../../../node_modules/@angular/core/fesm2022/core.mjs:668:11)\r\n      at NodeInjectorFactory.MatTestDialogOpener2_Factory [as factory] (../../../../ng:/MatTestDialogOpener2/ɵfac.js:5:48)\r\n      at getNodeInjectable (../../../../node_modules/@angular/core/fesm2022/core.mjs:4669:44)\r\n      at createRootComponent (../../../../node_modules/@angular/core/fesm2022/core.mjs:13264:35)\r\n      at ComponentFactory.create (../../../../node_modules/@angular/core/fesm2022/core.mjs:13122:25)\r\n      at initComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26421:51)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:421:30)\r\n      at FakeAsyncTestZoneSpec.Object.<anonymous>.FakeAsyncTestZoneSpec.onInvoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:4779:37)\r\n      at ProxyZoneSpec.Object.<anonymous>.ProxyZoneSpec.onInvoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:3088:43)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:420:56)\r\n      at Object.onInvoke (../../../../node_modules/@angular/core/fesm2022/core.mjs:26321:33)\r\n      at _ZoneDelegate.Object.<anonymous>._ZoneDelegate.invoke (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:420:56)\r\n      at Zone.Object.<anonymous>.Zone.run (../../../../node_modules/zone.js/bundles/zone-testing-bundle.umd.js:175:47)\r\n      at NgZone.run (../../../../node_modules/@angular/core/fesm2022/core.mjs:26175:28)\r\n      at _TestBedImpl.createComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26424:41)\r\n      at Function.createComponent (../../../../node_modules/@angular/core/fesm2022/testing.mjs:26231:37)\r\n```\n\n### Environment\n\n- Angular: 16.1.7\r\n- CDK/Material: 16.1.6\r\n- Browser(s): N/A\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27703","RelatedDescription":"Open issue \"bug(Dialog): MatTestDialogOpener (This constructor is not compatible with Angular Dependency Injection)\" (#27703)"},{"Id":"1863682148","IsPullRequest":false,"CreatedAt":"2023-08-23T16:45:29","Actor":"DrMayx","Number":"27699","RawContent":null,"Title":"bug(mat-select): screen reader not saying 'expanded' when opened (only first time) (Accessibility Issue)","State":"open","Body":"### Description\r\n\r\nScreen reader NVDA is not saying 'expanded' when mat-select is opened for the first time in Material angular version 15.2.8\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce:\r\n    1. Install NVDA if not installed already;\r\n    2. Open NVDA;\r\n    3. (Optional) Turn on speech viewer for visual aid;\r\n    4. Navigate to the mat-select using keyboard\r\n    6. Open and close the mat-select;\r\n    7. Notice how on open there is just a key name and a list name read then there's an option description;\r\n    8. Open the mat-select again;\r\n    9. Notice how now it says expanded after option description;\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe screen reader should say and show the below when the select is opened every time:\r\n\r\n> space\r\n> list\r\n> Option 1  not selected  1 of 28\r\n> expanded\r\n\r\n### Actual Behavior\r\n\r\nThe screen reader  is not saying expanded when the select is opened for the first time\r\n\r\n> space\r\n> list\r\n> Option 1  not selected  1 of 28\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.8\r\n- Material: 15.2.8\r\n- Browser(s): Firefox, Chrome\r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/27699","RelatedDescription":"Open issue \"bug(mat-select): screen reader not saying 'expanded' when opened (only first time) (Accessibility Issue)\" (#27699)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-08-30T03:30:02.6536663Z","RunDurationInMilliseconds":1782}