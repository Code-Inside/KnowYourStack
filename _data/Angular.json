{"Data":{"Angular-Issues":{"Issues":[{"Id":"2029648439","IsPullRequest":false,"CreatedAt":"2023-12-07T00:56:53","Actor":"trinhtuanvy","Number":"53413","RawContent":null,"Title":"Contributor Covenant: Frequently Asked Questions about Contributor Covenant","State":"closed","Body":"https://www.contributor-covenant.org/faq/","Url":"https://github.com/angular/angular/issues/53413","RelatedDescription":"Closed issue \"Contributor Covenant: Frequently Asked Questions about Contributor Covenant\" (#53413)"},{"Id":"2029648795","IsPullRequest":false,"CreatedAt":"2023-12-07T00:56:49","Actor":"trinhtuanvy","Number":"53414","RawContent":null,"Title":"contributor-covenant.org/version/2/1/code_of_conduct/code_of_conduct.md","State":"closed","Body":"https://www.contributor-covenant.org/version/2/1/code_of_conduct/code_of_conduct.md","Url":"https://github.com/angular/angular/issues/53414","RelatedDescription":"Closed issue \"contributor-covenant.org/version/2/1/code_of_conduct/code_of_conduct.md\" (#53414)"},{"Id":"2029634466","IsPullRequest":true,"CreatedAt":"2023-12-07T00:39:04","Actor":"SalathielGenese","Number":"53412","RawContent":null,"Title":"feat(core): signal update for mutable reference","State":"open","Body":"This PR addresses by opening control of update propagation to the developer, which otherwise makes signal not suitable for mutable states\r\n\r\nFixes angular/angular#52735\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: angular/angular#52735\r\n\r\nWhen a signal value is an object, updating a field of the object through the `update` API does not dispatch the change event.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe new behaviour adds a second parameter to the `update` callback - `forceUpdate` which is a function that can be called by the developer to indicate that the update MUST broadcast its changes, therefore bypassing the equality check.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\n**Discussion:** If we are doing this, we might want to support a `forceUpdate` optional boolean flag as well for the signal `set` API. What do you think?\r\n","Url":"https://github.com/angular/angular/pull/53412","RelatedDescription":"Open PR \"feat(core): signal update for mutable reference\" (#53412)"},{"Id":"2029458811","IsPullRequest":false,"CreatedAt":"2023-12-06T22:16:59","Actor":"trinhtuanvy","Number":"53409","RawContent":null,"Title":"I don't know i sorry if i do it wrong","State":"closed","Body":"I don't know i sorry if i do it wrong\n\n\n_Originally posted by @trinhtuanvy in https://github.com/angular/angular/issues/53408#issuecomment-1843759785_","Url":"https://github.com/angular/angular/issues/53409","RelatedDescription":"Closed issue \"I don't know i sorry if i do it wrong\" (#53409)"},{"Id":"2029462342","IsPullRequest":false,"CreatedAt":"2023-12-06T22:16:54","Actor":"trinhtuanvy","Number":"53411","RawContent":null,"Title":"reviewed-for: public-api","State":"closed","Body":"reviewed-for: public-api\n\n_Originally posted by @jessicajaniuk in https://github.com/angular/angular/pull/53400#pullrequestreview-1768698652_","Url":"https://github.com/angular/angular/issues/53411","RelatedDescription":"Closed issue \"reviewed-for: public-api\" (#53411)"},{"Id":"2029459713","IsPullRequest":true,"CreatedAt":"2023-12-06T22:02:30","Actor":"clydin","Number":"53410","RawContent":null,"Title":"build: convert AIO tools scripts to use fast-glob","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [X] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe repository currently has two globbing packages. To minimize the number of packages in the framework repository, the uses of the `glob` package are being converted to `fast-glob` which is used by the tooling repository.  The change is mostly mechanical and in this change the AIO tools scripts are converted.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53410","RelatedDescription":"Open PR \"build: convert AIO tools scripts to use fast-glob\" (#53410)"},{"Id":"2029457338","IsPullRequest":false,"CreatedAt":"2023-12-06T22:01:09","Actor":"trinhtuanvy","Number":"53408","RawContent":null,"Title":"Reviewed-for: public-api","State":"closed","Body":"Reviewed-for: public-api\n\n_Originally posted by @AndrewKushnir in https://github.com/angular/angular/pull/53400#pullrequestreview-1768692083_","Url":"https://github.com/angular/angular/issues/53408","RelatedDescription":"Closed issue \"Reviewed-for: public-api\" (#53408)"},{"Id":"2029279333","IsPullRequest":true,"CreatedAt":"2023-12-06T21:51:48","Actor":"jessicajaniuk","Number":"53407","RawContent":null,"Title":"Test only: there is nothing to see here","State":"closed","Body":"Move along. Move along.\r\n\r\nThese aren't the droids you're looking for.","Url":"https://github.com/angular/angular/pull/53407","RelatedDescription":"Closed or merged PR \"Test only: there is nothing to see here\" (#53407)"},{"Id":"2029251164","IsPullRequest":false,"CreatedAt":"2023-12-06T19:34:02","Actor":"chaosmonster","Number":"53406","RawContent":null,"Title":"Module boundaries for standalone components","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nThe goal of the feature request should be to describe a behavior that was (partially) possible with NgModules.\r\n\r\nFor this proposal the word “bundle” will be used to describe a concept, of components, directives, pipes and/ or services combined in one unit. This is not not meant as a goal, but as a semantic/ technical detail to talk about in this proposal.\r\n\r\nAs a developer in a large Angular code base I want to combine components, directives, pipes, and services to a bundle (in the past NgModule). \r\nThe goal should be to enforce some form of boundaries, to avoid duplicate imports of components and define an API for a bundle in the form of components, directives, pipes and services that can be accessed from other parts of the application. With this concept we can logically isolate parts of the application (e.g. for lazy features) and import a bundle of components.\r\nThe boundaries would prevent code quality problems like spaghetti code, especially in larger teams/ projects. Developers define the intended use of larger chunks of components, directives, pipes and services by making clear what is exposed.\r\n\r\n NgModules solved this problem partially.\r\n\r\nAs we want to avoid NgModules in favor of Standalone Components in the future, we need to find a different alternative, that is not adding the same overhead of NgModules in a different way.\r\n\n\n### Proposed solution\n\nThis is open for discussion, as a solution is not obvious yet\n\n### Alternatives considered\n\nAn alternative to enforce the boundary problem is currently possible is to use Nx’s Standalone Application setup, which allows one application to have multiple libraries and define the API interface of those libraries by defining an index.ts file for each library. This is supported by the @nx/enforce-module-boundaries eslint rule, which allows other libraries and the application to only import components, directives, pipes, and services that are defined in the index.ts file. This way we can define and enforce a clear API for other developers for a semantically connected bundle of components, directives, pipes, and services, without actually defining, developing, and deploying separate libraries.\r\n\r\n","Url":"https://github.com/angular/angular/issues/53406","RelatedDescription":"Open issue \"Module boundaries for standalone components\" (#53406)"},{"Id":"2029244534","IsPullRequest":true,"CreatedAt":"2023-12-06T19:29:16","Actor":"dylhunn","Number":"53405","RawContent":null,"Title":"Template Pipeline: More i18n fixes, esp. i18n attributes on structural elements","State":"open","Body":"Several fixes pertaining to i18n, especially i18n attributes on ng-templates or elements with structural directives.\r\n\r\nSee individual commits for details.","Url":"https://github.com/angular/angular/pull/53405","RelatedDescription":"Open PR \"Template Pipeline: More i18n fixes, esp. i18n attributes on structural elements\" (#53405)"},{"Id":"2029201064","IsPullRequest":true,"CreatedAt":"2023-12-06T18:58:23","Actor":"jessicajaniuk","Number":"53404","RawContent":null,"Title":"ci: Add primitives group to pullapprove","State":"open","Body":"This adds the shared primitives reviewers groups and list of reviewers to the pullapprove rules.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n\r\n- [x] CI related changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53404","RelatedDescription":"Open PR \"ci: Add primitives group to pullapprove\" (#53404)"},{"Id":"2029139951","IsPullRequest":true,"CreatedAt":"2023-12-06T18:22:33","Actor":"dylhunn","Number":"53403","RawContent":null,"Title":"Bump version to \"v17.1.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/53403","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.3\" with changelog.\" (#53403)"},{"Id":"2029133000","IsPullRequest":true,"CreatedAt":"2023-12-06T18:18:10","Actor":"dylhunn","Number":"53402","RawContent":null,"Title":"docs: release notes for the v17.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/53402","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.6 release\" (#53402)"},{"Id":"2029129571","IsPullRequest":true,"CreatedAt":"2023-12-06T18:15:26","Actor":"dylhunn","Number":"53401","RawContent":null,"Title":"Bump version to \"v17.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/53401","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.6\" with changelog.\" (#53401)"},{"Id":"2029121504","IsPullRequest":true,"CreatedAt":"2023-12-06T18:10:07","Actor":"atscott","Number":"53400","RawContent":null,"Title":"refactor(core): Run ComponentFixture constructor in injection context","State":"open","Body":"The component fixture dependencies have to be passed in manually. This is a bit annoying to manage as we expand which dependencies are needed. Instead, we can run the constructor in the TestBed injection context and move the dependencies into the component fixture code, as is done with other constructors in Angular.\r\n","Url":"https://github.com/angular/angular/pull/53400","RelatedDescription":"Open PR \"refactor(core): Run ComponentFixture constructor in injection context\" (#53400)"},{"Id":"2029080396","IsPullRequest":false,"CreatedAt":"2023-12-06T17:47:33","Actor":"AdamKundracik","Number":"53399","RawContent":null,"Title":"Angular datePipe at 31.12.2023 23:59:59 returns date 31. Dec 2023 inestead of 2023","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHaving date \r\nSun Dec 31 2023 23:59:59 GMT+0100 (stredoeurópsky štandardný čas)\r\n\r\nin template ` {{ selectedPeriod?.end | date: 'd. MMMM. YYYY '}}`\r\n\r\npipe 'date' returns 31. Dec 2024 instead of 2023.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53399","RelatedDescription":"Closed issue \"Angular datePipe at 31.12.2023 23:59:59 returns date 31. Dec 2023 inestead of 2023\" (#53399)"},{"Id":"2028955787","IsPullRequest":true,"CreatedAt":"2023-12-06T17:45:53","Actor":"jessicajaniuk","Number":"53396","RawContent":null,"Title":"refactor(migrations): Update comments to be more accurate","State":"closed","Body":"This comment change better clarifies what these regexes do which should alleviate future confusion.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [x] Documentation content changes\r\n\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/53396","RelatedDescription":"Closed or merged PR \"refactor(migrations): Update comments to be more accurate\" (#53396)"},{"Id":"2028586730","IsPullRequest":true,"CreatedAt":"2023-12-06T17:43:15","Actor":"crisbeto","Number":"53387","RawContent":null,"Title":"[Patch only] Cherry-pick control flow diagnostic into patch branch","State":"closed","Body":"Cherry-pick the changes from #53190 and #53311 into the patch branch.","Url":"https://github.com/angular/angular/pull/53387","RelatedDescription":"Closed or merged PR \"[Patch only] Cherry-pick control flow diagnostic into patch branch\" (#53387)"},{"Id":"2028505892","IsPullRequest":false,"CreatedAt":"2023-12-06T17:42:54","Actor":"mattlewis92","Number":"53385","RawContent":null,"Title":"Control flow migration: else condition with || produces invalid output","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nInput:\r\n```\r\n<div *ngIf=\"condition; else titleTemplate || defaultTemplate\">Hello!</div>\r\n\r\n<ng-template #defaultTemplate> Default </ng-template>\r\n```\r\n\r\nOutput:\r\n```\r\n@if (condition) {\r\n  <div>Hello!</div>\r\n} @else {\r\n  #titleTemplate || defaultTemplate|\r\n}\r\n<ng-template #defaultTemplate> Default </ng-template>\r\n```\r\n\r\nExpected output:\r\n```\r\n@if (condition) {\r\n  <div>Hello!</div>\r\n} @else {\r\n  <ng-template [ngTemplateOutlet]=\"titleTemplate || defaultTemplate\"></ng-template>\r\n}\r\n<ng-template #defaultTemplate> Default </ng-template>\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5+sha-7c863d7\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nThis is using the latest build of angular from the main branch via `\"@angular/core\": \"angular/core-builds#17.0.5+7c863d7\"`","Url":"https://github.com/angular/angular/issues/53385","RelatedDescription":"Closed issue \"Control flow migration: else condition with || produces invalid output\" (#53385)"},{"Id":"2028518715","IsPullRequest":false,"CreatedAt":"2023-12-06T17:42:53","Actor":"mattlewis92","Number":"53386","RawContent":null,"Title":"Control flow migration: [ngIfElse] condition with or + ternary is not migrated correctly","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThis is kind of a hybrid of https://github.com/angular/angular/issues/53385 and https://github.com/angular/angular/issues/53384 but I'm including for completeness\r\n\r\nInput:\r\n```\r\n<ng-template\r\n  [ngIf]=\"customClearTemplate\"\r\n  [ngIfElse]=\"isSidebarV3 || variant === 'v3' ? clearTemplateV3 : clearTemplate\"\r\n  [ngTemplateOutlet]=\"customClearTemplate\"\r\n></ng-template>\r\n\r\n<ng-template #clearTemplateV3>v3</ng-template>\r\n\r\n<ng-template #clearTemplate>clear</ng-template>\r\n```\r\n\r\nOutput:\r\n```\r\n@if (customClearTemplate) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"customClearTemplate\"\r\n  ></ng-template>\r\n} @else {\r\n  #isSidebarV3 || variant === 'v3' ? clearTemplateV3 : clearTemplate|\r\n}\r\n<ng-template #clearTemplateV3>v3</ng-template>\r\n<ng-template #clearTemplate>clear</ng-template>\r\n```\r\n\r\nExpected output:\r\n```\r\n@if (customClearTemplate) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"customClearTemplate\"\r\n  ></ng-template>\r\n} @else {\r\n  <ng-template [ngTemplateOutlet]=\"isSidebarV3 || variant === 'v3' ? clearTemplateV3 : clearTemplate\"></ng-template>\r\n}\r\n<ng-template #clearTemplateV3>v3</ng-template>\r\n<ng-template #clearTemplate>clear</ng-template>\r\n```\r\n\r\nOr:\r\n```\r\n@if (customClearTemplate) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"customClearTemplate\"\r\n  ></ng-template>\r\n} @else if (isSidebarV3 || variant === 'v3') {\r\n  v3\r\n} else {\r\n  clear\r\n}\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: pnpm 8.11.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.5+sha-7c863d7\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1700.1\r\n@angular-devkit/build-angular       17.0.5\r\n@angular-devkit/core                17.0.5\r\n@angular-devkit/schematics          17.0.5\r\n@angular/animations                 17.0.5\r\n@angular/cdk                        17.0.1\r\n@angular/cli                        17.0.5\r\n@angular/common                     17.0.5\r\n@angular/compiler                   17.0.5\r\n@angular/compiler-cli               17.0.5\r\n@angular/elements                   17.0.5\r\n@angular/forms                      17.0.5\r\n@angular/google-maps                15.2.9\r\n@angular/language-service           17.0.5\r\n@angular/localize                   17.0.5\r\n@angular/platform-browser           17.0.5\r\n@angular/platform-browser-dynamic   17.0.5\r\n@angular/router                     17.0.5\r\n@angular/service-worker             17.0.5\r\n@schematics/angular                 17.0.5\r\nng-packagr                          17.0.2\r\nrxjs                                7.8.0\r\ntypescript                          5.2.2\r\nwebpack                             5.88.2\r\nzone.js                             0.14.2\n```\n\n\n### Anything else?\n\nThis is using the latest build of angular from the main branch via `\"@angular/core\": \"angular/core-builds#17.0.5+7c863d7\"`","Url":"https://github.com/angular/angular/issues/53386","RelatedDescription":"Closed issue \"Control flow migration: [ngIfElse] condition with or + ternary is not migrated correctly\" (#53386)"},{"Id":"2028860517","IsPullRequest":true,"CreatedAt":"2023-12-06T17:42:52","Actor":"jessicajaniuk","Number":"53394","RawContent":null,"Title":"fix(migrations): Change CF Migration ng-template placeholder generation and handling","State":"closed","Body":"Using more unique characters makes it easier to parse placeholders that may contain JS logic, making it more flexible.\r\n\r\nfixes: #53386\r\nfixes: #53385\r\nfixes: #53384\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53394","RelatedDescription":"Closed or merged PR \"fix(migrations): Change CF Migration ng-template placeholder generation and handling\" (#53394)"},{"Id":"2028979264","IsPullRequest":true,"CreatedAt":"2023-12-06T16:48:35","Actor":"srinathsree66","Number":"53398","RawContent":null,"Title":"docs: fix router api url link","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nhttps://angular.dev/api/router\r\n\r\nCloses: #53382 \r\n\r\n## What is the new behavior?\r\nhttps://angular.dev/api/router/Router\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53398","RelatedDescription":"Open PR \"docs: fix router api url link\" (#53398)"},{"Id":"2028963376","IsPullRequest":true,"CreatedAt":"2023-12-06T16:39:31","Actor":"clydin","Number":"53397","RawContent":null,"Title":"build: convert build/test scripts to use fast-glob","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [X] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe repository currently has two globbing packages. To minimize the number of packages in the framework repository, the uses of the `glob` package are being converted to `fast-glob` which is also used by the tooling repository.  The change is mostly mechanical and in this change the build and test scripts are converted.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53397","RelatedDescription":"Open PR \"build: convert build/test scripts to use fast-glob\" (#53397)"},{"Id":"2028921784","IsPullRequest":true,"CreatedAt":"2023-12-06T16:18:19","Actor":"srinathsree66","Number":"53395","RawContent":null,"Title":"docs: fixed req.method in http client testing ","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n```typescript\r\nexpect(req.method).toBe('GET');\r\n```\r\n\r\nCloses: #53391\r\n\r\n\r\n## What is the new behavior?\r\n\r\n```typescript\r\nexpect(req.request.method).toBe('GET');\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53395","RelatedDescription":"Open PR \"docs: fixed req.method in http client testing \" (#53395)"},{"Id":"2028860340","IsPullRequest":true,"CreatedAt":"2023-12-06T15:49:02","Actor":"jessicajaniuk","Number":"53393","RawContent":null,"Title":"fix(migrations): ensure we do not overwrite prior template replacements in migration","State":"open","Body":"This fixes a bug where only the last replacement of a template placeholder would apply.\r\n\r\nfixes: #53383\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/53393","RelatedDescription":"Open PR \"fix(migrations): ensure we do not overwrite prior template replacements in migration\" (#53393)"},{"Id":"2028782651","IsPullRequest":true,"CreatedAt":"2023-12-06T15:23:33","Actor":"alxhub","Number":"53392","RawContent":null,"Title":"Revert \"refactor(core): output an error guide link in prod mode","State":"closed","Body":"This reverts commit f245aba782fda0ffdb5d2e9d81310956d11b57a4.\r\n\r\nReason: breaks g3","Url":"https://github.com/angular/angular/pull/53392","RelatedDescription":"Closed or merged PR \"Revert \"refactor(core): output an error guide link in prod mode\" (#53392)"},{"Id":"2028694722","IsPullRequest":false,"CreatedAt":"2023-12-06T14:46:55","Actor":"KZelab","Number":"53389","RawContent":null,"Title":"Change detection and reactive forms","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore, forms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nEncountered an issue in the reactive forms. When using a FormArray displayed with a ngFor, if an entry is removed from the FormArray the change detection does not render the changes\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.3\r\nNode: 21.1.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\nOS: linux x64\r\n\r\nAngular: 17.0.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.3\r\n@angular-devkit/build-angular   17.0.3\r\n@angular-devkit/core            17.0.3\r\n@angular-devkit/schematics      17.0.3\r\n@angular/cdk                    17.0.1\r\n@angular/cli                    17.0.3\r\n@angular/material               17.0.1\r\n@schematics/angular             17.0.3\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53389","RelatedDescription":"Closed issue \"Change detection and reactive forms\" (#53389)"},{"Id":"2028713886","IsPullRequest":false,"CreatedAt":"2023-12-06T14:42:26","Actor":"GeorgeHulpoi","Number":"53391","RawContent":null,"Title":"req.method should be req.request.method","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nhttps://angular.dev/guide/http/testing\r\n\r\n```ts\r\nexpect(req.method).toBe('GET');\r\n```\r\nshould be\r\n\r\n```ts\r\nexpect(req.request.method).toBe('GET');\r\n```\r\n\r\nBecause using `req.method` throws error: `Property 'method' does not exist on type 'TestRequest'.`","Url":"https://github.com/angular/angular/issues/53391","RelatedDescription":"Open issue \"req.method should be req.request.method\" (#53391)"},{"Id":"2028709601","IsPullRequest":false,"CreatedAt":"2023-12-06T14:40:16","Actor":"GeorgeHulpoi","Number":"53390","RawContent":null,"Title":"Http Client Testing: include provideHttpClient()","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nIs not enough to use `provideHttpClientTesting()` for HTTP Client Testing, it will throw a dependency injection error. Instead, both `provideHttpClient()` and `provideHttpClientTesting()`. Seems like the docs don't say anything about this, not even in examples...","Url":"https://github.com/angular/angular/issues/53390","RelatedDescription":"Open issue \"Http Client Testing: include provideHttpClient()\" (#53390)"},{"Id":"2028587097","IsPullRequest":false,"CreatedAt":"2023-12-06T13:40:26","Actor":"rgant","Number":"53388","RawContent":null,"Title":"Console Warnings when unit testing Components using NgOptimizedImage","State":"open","Body":"### Is this a bug report or a feature request?\n\n- [X] Bug Report\n- [ ] Feature Request\n\n### Please provide the steps to reproduce the issue [Bug Report only]\n\nConsole log message while running `ng test` on a Component using `NgOptimizedImage`:\r\n\r\n```\r\nWARN: 'NG02956: The NgOptimizedImage directive (activated on an <img> \r\nelement with the `ngSrc=\"https://static.learnlux.com/images/icons/star-circle-v1.0.png\"`) \r\nhas detected that there is no preconnect tag present for this image. \r\nPreconnecting to the origin(s) that serve priority images ensures that these \r\nimages are delivered as soon as possible. To fix this, please add the \r\nfollowing element into the <head> of the document: <link rel=\"preconnect\" href=\"https://static.learnlux.com\">\r\n```\r\n\r\nThis message occurs for each unit test involving a template containing an `ngSrc` Directive.\n\n### Please provide the expected behavior vs the actual behavior you encountered [Bug Report only]\n\nI would like a way to disable these messages while running unit test.\n\n### Please provide a screenshot if possible [Bug Report only]\n\n_No response_\n\n### Please provide the exception or error you saw [Bug Report only]\n\n_No response_\n\n### Is this a browser-specific issue? If so, please specify the device, browser, and version. [Bug Report only]\n\n_No response_\n\n### Description [Feature Request only]\n\n_No response_\n\n### Proposed solution [Feature Request only]\n\nI found a way to silence this error by hacking `karma.conf.js` as shown below. Is there a better way to handle this warning that I haven't seen? Should the way I have fixed it be documented? Or should there be a `NgOptimizedImageTesting` Module that makes this easier to setup?\n\n### Alternatives considered [Feature Request only]\n\nI modified the `karma.conf.js` to load a DOM file containing the preconnect link to silence the warnings during unit testing:\r\n\r\n*tests.html*\r\n```html\r\n<link rel=\"preconnect\" href=\"https://static.learnlux.com\">\r\n```\r\n\r\n*karma.conf.js*\r\n```js\r\nmodule.exports = (config) => {\r\n  config.set({\r\n    files: [\r\n      {\r\n        pattern: './src/testing/tests.html',\r\n        served: false,\r\n        type: 'dom',\r\n        watched: false,\r\n      }\r\n    ],\r\n```\r\n\r\nHowever, since `karma.conf.js` is no longer exposed by default to new Angular apps I think this method would be complicated for everyone to setup. Also this doesn't load the link into the `<head>` as specified in the warning. I worry that future improvements to this feature might also complain about that.","Url":"https://github.com/angular/angular/issues/53388","RelatedDescription":"Open issue \"Console Warnings when unit testing Components using NgOptimizedImage\" (#53388)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2029543206","IsPullRequest":false,"CreatedAt":"2023-12-06T23:02:35","Actor":"pumano","Number":"26605","RawContent":null,"Title":"Error occurred while forceEsbuild: true in \"serve\" mode","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen I add option to \"serve\" with \"forceEsbuild: true\", serve not working and error occurred :\r\n\r\n\r\nAn unhandled exception occurred: Either `browser` or at least one `entryPoints` value must be provided.\r\n\r\nthat is regression, because video from youtube show it was working few months ago: https://www.youtube.com/watch?v=WE6IwM3Jees\n\n### Minimal Reproduction\n\n- npx ng new testproject\r\n- update to 17 angular if needed\r\n- add \"forceEsbuild: true\" to \"serve\" section in angular.json (project.json when using nx)\r\n\r\nfor example: \r\n```json\r\n\"serve\": {\r\n     \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n     \"options\": {\r\n          \"forceEsbuild\": true\r\n     },\r\n     \"configurations\": {\r\n          \"production\": {\r\n            \"buildTarget\": \"angular17plain:build:production\"\r\n          },\r\n          \"development\": {\r\n            \"buildTarget\": \"angular17plain:build:development\"\r\n          }\r\n     },\r\n     \"defaultConfiguration\": \"development\"\r\n}\r\n```\r\n\n\n### Exception or Error\n\n```text\nAn unhandled exception occurred: Either `browser` or at least one `entryPoints` value must be provided.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.6\r\nNode: 20.8.1\r\nPackage Manager: npm 10.1.0\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.5.7\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26605","RelatedDescription":"Open issue \"Error occurred while forceEsbuild: true in \"serve\" mode\" (#26605)"},{"Id":"2029411965","IsPullRequest":false,"CreatedAt":"2023-12-06T21:43:18","Actor":"HitkoDev","Number":"26603","RawContent":null,"Title":"ng build doesn't work with SSR on NodeJS 20","State":"closed","Body":"### Command\r\n\r\nbuild\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n`ng build` throws error on Node 20 when project uses `@angular/ssr`. It works on Node 18.\r\n\r\n### Minimal Reproduction\r\n\r\n`ng new --ssr`\r\n`ng build`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n[error] TypeError: (0 , node_module_1.register) is not a function\r\n    at Object.<anonymous> (/tmp/cd/test/node_modules/@angular-devkit/build-angular/src/utils/server-rendering/esm-in-memory-loader/register-hooks.js:15:28)\r\n    at Module._compile (node:internal/modules/cjs/loader:1233:14)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1287:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1091:32)\r\n    at Module._load (node:internal/modules/cjs/loader:938:12)\r\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:165:29)\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:192:25)\r\n    at async DefaultModuleLoader.import (node:internal/modules/esm/loader:228:24)\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 17.0.6\r\nNode: 20.5.1\r\nPackage Manager: npm 9.8.0\r\nOS: linux x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n#### Works with\r\n\r\n```text\r\nAngular CLI: 17.0.6\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: linux x64\r\n\r\nAngular: 17.0.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.6\r\n@angular-devkit/build-angular   17.0.6\r\n@angular-devkit/core            17.0.6\r\n@angular-devkit/schematics      17.0.6\r\n@schematics/angular             17.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```","Url":"https://github.com/angular/angular-cli/issues/26603","RelatedDescription":"Closed issue \"ng build doesn't work with SSR on NodeJS 20\" (#26603)"},{"Id":"2029429072","IsPullRequest":true,"CreatedAt":"2023-12-06T21:39:37","Actor":"santoshyadavdev","Number":"26604","RawContent":null,"Title":"refactor(@angular/cli): convert quicktype_runner to ts","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe file had a TODO This file is pure JavaScript because Bazel only support compiling to ES5, while quicktype is\r\nES2015.  Now bazel supports 2015 as per config\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nMigrate the file to typescript\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26604","RelatedDescription":"Open PR \"refactor(@angular/cli): convert quicktype_runner to ts\" (#26604)"},{"Id":"2029345756","IsPullRequest":true,"CreatedAt":"2023-12-06T20:39:27","Actor":"santoshyadavdev","Number":"26602","RawContent":null,"Title":"refactor(@angular-devkit/schematics): add more description to ng gene…","State":"open","Body":"…rate\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #25571\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26602","RelatedDescription":"Open PR \"refactor(@angular-devkit/schematics): add more description to ng gene…\" (#26602)"},{"Id":"2029278551","IsPullRequest":true,"CreatedAt":"2023-12-06T20:13:42","Actor":"clydin","Number":"26601","RawContent":null,"Title":"Bump version to \"v17.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26601","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.1\" with changelog.\" (#26601)"},{"Id":"2029264986","IsPullRequest":true,"CreatedAt":"2023-12-06T19:44:41","Actor":"clydin","Number":"26600","RawContent":null,"Title":"docs: release notes for the v17.0.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26600","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.6 release\" (#26600)"},{"Id":"2025365401","IsPullRequest":true,"CreatedAt":"2023-12-06T19:43:58","Actor":"angular-robot","Number":"26583","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `f320cb4` -> `6d04228` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `fff23b0` -> `eccbb39` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `f264d0d` -> `8346841` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `db273b0` -> `494446e` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `1dacf8c` -> `e2dac75` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `905c751` -> `34775bd` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `febeeb1` -> `281a3a9` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `dcd4a02` -> `5d28240` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `20bd8c2` -> `809d5ff` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `6a0c35c` -> `74de856` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.5` -> `17.0.6`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.5/17.0.6) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f77589b` -> `c462576` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `fa0e231` -> `9024f3a` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `419a15c` -> `9953ca2` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `ad922d8` -> `6595a4d` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `931ccb8` -> `0597cf8` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `ce31e2d` -> `2d1803b` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.1.0-next.2/17.1.0-next.3) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `14fcb46` -> `24327cc` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`17.1.0-next.2` -> `17.1.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.1.0-next.2/17.1.0-next.3) |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.1.0-next.3`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1710-next3-2023-12-06)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.1.0-next.2...17.1.0-next.3)\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5613051a8b](https://togithub.com/angular/angular/commit/5613051a8bd2626ae347292807b2bf21085c4c02) | fix | allow TS jsDocParsingMode host option to be programmatically set again ([#&#8203;53292](https://togithub.com/angular/angular/pull/53292)) |\n| [77ac4cd324](https://togithub.com/angular/angular/commit/77ac4cd32491d0c994cb4ea50372601c955cec3d) | fix | generate proper code for nullish coalescing in styling host bindings ([#&#8203;53305](https://togithub.com/angular/angular/pull/53305)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [e620b3a724](https://togithub.com/angular/angular/commit/e620b3a724cb615af24b7779c0ab492d24efb8cc) | fix | add compiler option to disable control flow content projection diagnostic ([#&#8203;53311](https://togithub.com/angular/angular/pull/53311)) |\n| [d7a83f9521](https://togithub.com/angular/angular/commit/d7a83f95213cdd5d3ceefbc95fa1190856b0198c) | fix | avoid conflicts with built-in global variables in for loop blocks ([#&#8203;53319](https://togithub.com/angular/angular/pull/53319)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [77939a3bd3](https://togithub.com/angular/angular/commit/77939a3bd39073d07e24797a4632ec2d2a6b92e0) | fix | cleanup signal consumers for all views ([#&#8203;53351](https://togithub.com/angular/angular/pull/53351)) |\n| [899f6c4a12](https://togithub.com/angular/angular/commit/899f6c4a12127f87aeedf47ee128ce949ebe717c) | fix | handle hydration of multiple nodes projected in a single slot ([#&#8203;53270](https://togithub.com/angular/angular/pull/53270)) |\n| [4b23221b4e](https://togithub.com/angular/angular/commit/4b23221b4e5f8be7bcffc8ace255143653550d3d) | fix | support hydration for cases when content is re-projected using ng-template ([#&#8203;53304](https://togithub.com/angular/angular/pull/53304)) |\n| [82609d471c](https://togithub.com/angular/angular/commit/82609d471c9802b847a5654918eca1ba3ebb29b3) | fix | support swapping hydrated views in `@for` loops ([#&#8203;53274](https://togithub.com/angular/angular/pull/53274)) |\n\n##### migrations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [1c1e8c477b](https://togithub.com/angular/angular/commit/1c1e8c477b8d5c8deecf05744bd1d5f7c86d2e14) | fix | CF migration - ensure NgIfElse attributes are properly removed ([#&#8203;53298](https://togithub.com/angular/angular/pull/53298)) |\n| [2998d482dd](https://togithub.com/angular/angular/commit/2998d482dd3f1f5ff7f08260c3947ded74dac126) | fix | CF Migration - Fix case of aliases on i18n ng-templates preventing removal ([#&#8203;53299](https://togithub.com/angular/angular/pull/53299)) |\n| [aad5e5bd0e](https://togithub.com/angular/angular/commit/aad5e5bd0e7f6581f51fc3a23c98a7f11219a8f8) | fix | CF Migration add support for ngIf with just a then ([#&#8203;53297](https://togithub.com/angular/angular/pull/53297)) |\n| [6f75471307](https://togithub.com/angular/angular/commit/6f75471307a9458d0cffd0ee2bbf4190640c3c3a) | fix | CF Migration fix missing alias for bound ngifs ([#&#8203;53296](https://togithub.com/angular/angular/pull/53296)) |\n| [2a5a8f6f05](https://togithub.com/angular/angular/commit/2a5a8f6f052961c010a68a05d868f50220f2fcf2) | fix | Change CF Migration ng-template placeholder generation and handling ([#&#8203;53394](https://togithub.com/angular/angular/pull/53394)) |\n| [03e2f1bb25](https://togithub.com/angular/angular/commit/03e2f1bb25693d1a5f4e53fc4f4cd1937cf6bda1) | fix | fix regexp for else and then in cf migration ([#&#8203;53257](https://togithub.com/angular/angular/pull/53257)) |\n| [f4a96a9160](https://togithub.com/angular/angular/commit/f4a96a9160927903c38e172f6375c4bc5f8e0905) | fix | handle aliases on bound ngIf migrations ([#&#8203;53261](https://togithub.com/angular/angular/pull/53261)) |\n| [5a0ed28c9d](https://togithub.com/angular/angular/commit/5a0ed28c9d3f1c7507feee482e37c3346d52b033) | fix | handle nested ng-template replacement safely in CF migration ([#&#8203;53368](https://togithub.com/angular/angular/pull/53368)) |\n| [01b18a4248](https://togithub.com/angular/angular/commit/01b18a4248f068df33c0ca8a2d62ef2fc69f941c) | fix | handle templates outside of component in cf migration ([#&#8203;53368](https://togithub.com/angular/angular/pull/53368)) |\n| [9834fd2738](https://togithub.com/angular/angular/commit/9834fd27387ed5edc65bed56aa003fc45d250420) | fix | remove setting that removes comments in CF migration ([#&#8203;53350](https://togithub.com/angular/angular/pull/53350)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [5c1d441029](https://togithub.com/angular/angular/commit/5c1d4410298e20cb03d7a1ddf7931538b6a181b4) | feat | Add info property to `NavigationExtras` ([#&#8203;53303](https://togithub.com/angular/angular/pull/53303)) |\n| [50d7916278](https://togithub.com/angular/angular/commit/50d79162785bb8d3e158a7a4a3733f4c75d3b127) | feat | Add router configuration to resolve navigation promise on error ([#&#8203;48910](https://togithub.com/angular/angular/pull/48910)) |\n| [1940280d27](https://togithub.com/angular/angular/commit/1940280d27bb3ece585d6345dbd742d208f46912) | fix | Ensure canMatch guards run on wildcard routes ([#&#8203;53239](https://togithub.com/angular/angular/pull/53239)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26583","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26583)"},{"Id":"2029167286","IsPullRequest":true,"CreatedAt":"2023-12-06T19:41:38","Actor":"clydin","Number":"26599","RawContent":null,"Title":"Bump version to \"v17.0.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26599","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.6\" with changelog.\" (#26599)"},{"Id":"2026518467","IsPullRequest":true,"CreatedAt":"2023-12-06T16:47:28","Actor":"alan-agius4","Number":"26587","RawContent":null,"Title":"feat(@angular-devkit/build-angular): move `browser-sync` as optional dependency","State":"closed","Body":"\r\n`browser-sync` is now an optional dependency of `@angular-devkit/build-angular`. This package is only needed when using the legacy `@angular-devkit/build-angular:ssr-dev-server` builder.\r\n\r\nCloses #26349\r\n","Url":"https://github.com/angular/angular-cli/pull/26587","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): move `browser-sync` as optional dependency\" (#26587)"},{"Id":"2027373482","IsPullRequest":true,"CreatedAt":"2023-12-06T16:26:13","Actor":"clydin","Number":"26589","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"Fixed version of https://github.com/angular/angular-cli/pull/26571","Url":"https://github.com/angular/angular-cli/pull/26589","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#26589)"},{"Id":"2027854029","IsPullRequest":false,"CreatedAt":"2023-12-06T15:19:08","Actor":"akhilben","Number":"26593","RawContent":null,"Title":"esbuild generates broken index.html occassionally when using app-shell","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the esbuild application builder with the app-shell, the generated `index.html` file occasionally breaks. The issue manifests as the generation of multiple `app-root`, `html`, `body` tags, and sometimes these tags are not properly closed.\r\n\r\nMy angular.json:\r\n\r\n```json\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n    \"ng-17\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {\r\n        \"@schematics/angular:component\": {\r\n          \"style\": \"scss\"\r\n        }\r\n      },\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"prefix\": \"app\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:application\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/ng-17\",\r\n            \"index\": \"src/index.html\",\r\n            \"browser\": \"src/main.ts\",\r\n            \"polyfills\": [\"zone.js\"],\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\",\r\n              \"src/manifest.webmanifest\"\r\n            ],\r\n            \"styles\": [\"src/styles.scss\"],\r\n            \"scripts\": [],\r\n            \"server\": \"src/main.server.ts\"\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"500kb\",\r\n                  \"maximumError\": \"1mb\"\r\n                },\r\n                {\r\n                  \"type\": \"anyComponentStyle\",\r\n                  \"maximumWarning\": \"2kb\",\r\n                  \"maximumError\": \"4kb\"\r\n                }\r\n              ],\r\n              \"outputHashing\": \"all\",\r\n              \"appShell\": true,\r\n              \"serviceWorker\": \"ngsw-config.json\"\r\n            },\r\n            \"development\": {\r\n              \"optimization\": false,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"buildTarget\": \"ng-17:build:production\"\r\n            },\r\n            \"development\": {\r\n              \"buildTarget\": \"ng-17:build:development\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"development\"\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"buildTarget\": \"ng-17:build\"\r\n          }\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\r\n            \"tsConfig\": \"tsconfig.spec.json\",\r\n            \"inlineStyleLanguage\": \"scss\",\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\",\r\n              \"src/manifest.webmanifest\"\r\n            ],\r\n            \"styles\": [\"src/styles.scss\"],\r\n            \"scripts\": []\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nPlease note that the issue occurs only occasionally on random builds. Possibly a duplicate `index.html` file is generated for the app-shell and both these files are somehow getting incorrectly merged during the writing process?\n\n### Minimal Reproduction\n\n- Create a  new Angular v17 app : `ng new my-app`\r\n- Create the application shell : `ng generate app-shell`\r\n- Run `ng build`\r\n\r\n_Note that this issue occurs only on random builds_\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, service-worker, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26593","RelatedDescription":"Closed issue \"esbuild generates broken index.html occassionally when using app-shell\" (#26593)"},{"Id":"2028043330","IsPullRequest":true,"CreatedAt":"2023-12-06T15:19:07","Actor":"alan-agius4","Number":"26594","RawContent":null,"Title":"fix(@angular-devkit/build-angular): app-shell generation incorrect content when using the application builder","State":"closed","Body":"\r\n\r\nIn some cases, the index.html file emitted contained the wrong contents. This because in OutputFiles there were present multiple files with the same name.\r\n\r\nCloses #26593\r\n","Url":"https://github.com/angular/angular-cli/pull/26594","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): app-shell generation incorrect content when using the application builder\" (#26594)"},{"Id":"2028722236","IsPullRequest":false,"CreatedAt":"2023-12-06T14:57:39","Actor":"markchagers","Number":"26598","RawContent":null,"Title":"Updating to angular 17 fails with error: No matching version found for node-releases@^2.0.14","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.12\n\n### Description\n\nWhen upgrading our project to angular 17, we get a lot of incompatible peer dependency errors. Even when using --force or --legacy-peer-deps options. The final error message is always: \r\n```\r\nnotarget No matching version found for node-releases@^2.0.14.\r\n```\r\nSee the terminal output and the npm log file as attached.\r\n\r\n[2023-12-06T14_39_04_577Z-debug-0.log](https://github.com/angular/angular-cli/files/13587385/2023-12-06T14_39_04_577Z-debug-0.log)\r\n[terminal-output.txt](https://github.com/angular/angular-cli/files/13587430/terminal-output.txt)\r\n\n\n### Minimal Reproduction\n\nng update --force @angular/core@17 @angular/cli@17\n\n### Exception or Error\n\n```text\nSee the attached files\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.10\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin x64\r\n\r\nAngular: 16.2.12\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.10\r\n@angular-devkit/build-angular   16.2.10\r\n@angular-devkit/core            16.2.10\r\n@angular-devkit/schematics      16.2.10\r\n@angular/cli                    16.2.10\r\n@schematics/angular             16.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\nThis happens when trying to update our project from angular 16 to angular 17 in VSCode","Url":"https://github.com/angular/angular-cli/issues/26598","RelatedDescription":"Closed issue \"Updating to angular 17 fails with error: No matching version found for node-releases@^2.0.14\" (#26598)"},{"Id":"2028379039","IsPullRequest":false,"CreatedAt":"2023-12-06T14:41:57","Actor":"JainDhaval","Number":"26596","RawContent":null,"Title":"@angular-devkit/build-angular depends on vulnerable version of vite","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRunning npm audit on Angular v16 project causes an error output, because @angular-devkit/build-angular depends on vulnerable version of postcss.\r\nSee more details: [GHSA-92r3-m2mg-pj97](https://github.com/advisories/GHSA-92r3-m2mg-pj97)\n\n### Minimal Reproduction\n\nCreate new Angular v16 project.\r\nRun npm audit in the project folder\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.2.10\r\nNode: 18.18.1\r\nPackage Manager: npm 10.2.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.12\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.10\r\n@angular-devkit/build-angular   16.2.10\r\n@angular-devkit/core            16.2.10\r\n@angular-devkit/schematics      16.2.10\r\n@angular/cli                    16.2.10\r\n@schematics/angular             16.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26596","RelatedDescription":"Closed issue \"@angular-devkit/build-angular depends on vulnerable version of vite\" (#26596)"},{"Id":"2028431442","IsPullRequest":true,"CreatedAt":"2023-12-06T13:58:35","Actor":"alan-agius4","Number":"26597","RawContent":null,"Title":"build: update dependency vite to v4.5.1","State":"closed","Body":"16.2.x variant of #26590\r\n\r\nCloses #26596","Url":"https://github.com/angular/angular-cli/pull/26597","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v4.5.1\" (#26597)"},{"Id":"2028126129","IsPullRequest":false,"CreatedAt":"2023-12-06T09:34:32","Actor":"HCenggel","Number":"26595","RawContent":null,"Title":"watch did not clean up old files","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv17\n\n### Description\n\nGenerate a project when editing html and js files\r\nThere are more and more files in the dist directory when npm run watch\n\n### Minimal Reproduction\n\nDefault project configuration\n\n### Exception or Error\n\n```text\nno\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.5 (cli-only)\r\n@angular-devkit/core         17.0.5 (cli-only)\r\n@angular-devkit/schematics   17.0.5 (cli-only)\r\n@schematics/angular          17.0.5 (cli-only)\n```\n\n\n### Anything else relevant?\n\nno","Url":"https://github.com/angular/angular-cli/issues/26595","RelatedDescription":"Open issue \"watch did not clean up old files\" (#26595)"},{"Id":"2027750440","IsPullRequest":false,"CreatedAt":"2023-12-06T06:54:28","Actor":"ranjeet1sn","Number":"26592","RawContent":null,"Title":"Cannot install Angular ssr in existing project which upgrade to Angular 17","State":"closed","Body":"### Command\n\nbuild, serve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to install angular ssr in my exsiting project but I am unable to do this.Because it is giving me dependency error.I have tried many solution but not working\r\n![Screenshot 2023-12-06 105712](https://github.com/angular/angular-cli/assets/50514433/a2a4c560-f9a2-4ff1-bbf3-2081d0ca04a0)\r\n\n\n### Minimal Reproduction\n\nInstall angular fire in new project and try then add ssr to angular  it is not allowing to install it \n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, pwa, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.2\r\n@angular/fire                   16.0.0\r\n@angular/material               17.0.2\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.3.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26592","RelatedDescription":"Closed issue \"Cannot install Angular ssr in existing project which upgrade to Angular 17\" (#26592)"},{"Id":"2027392350","IsPullRequest":true,"CreatedAt":"2023-12-06T06:43:24","Actor":"angular-robot","Number":"26590","RawContent":null,"Title":"build: update dependency vite to v5.0.5 [security]","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | dependencies | patch | [`5.0.4` -> `5.0.5`](https://renovatebot.com/diffs/npm/vite/5.0.4/5.0.5) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite)) | devDependencies | patch | [`5.0.4` -> `5.0.5`](https://renovatebot.com/diffs/npm/vite/5.0.4/5.0.5) |\n\n### GitHub Vulnerability Alerts\n\n#### [CVE-2023-49293](https://togithub.com/vitejs/vite/security/advisories/GHSA-92r3-m2mg-pj97)\n\n### Summary\nWhen Vite's HTML transformation is invoked manually via `server.transformIndexHtml`, the original request URL is passed in unmodified, and the `html` being transformed contains inline module scripts (`<script type=\"module\">...</script>`), it is possible to inject arbitrary HTML into the transformed output by supplying a malicious URL query string to `server.transformIndexHtml`.\n\n### Impact\nOnly apps using `appType: 'custom'` and using the default Vite HTML middleware are affected. The HTML entry must also contain an inline script. The attack requires a user to click on a malicious URL while running the dev server. Restricted files aren't exposed to the attacker.\n\n### Patches\nFixed in vite@5.0.5, vite@4.5.1, vite@4.4.12\n\n### Details\nSuppose `index.html` contains an inline module script:\n\n```html\n<script type=\"module\">\n  // Inline script\n</script>\n```\n\nThis script is transformed into a proxy script like\n\n```html\n<script type=\"module\" src=\"/index.html?html-proxy&index=0.js\"></script>\n```\n\ndue to Vite's HTML plugin:\n\nhttps://github.com/vitejs/vite/blob/7fd7c6cebfcad34ae7021ebee28f97b1f28ef3f3/packages/vite/src/node/plugins/html.ts#L429-L465\n\nWhen `appType: 'spa' | 'mpa'`, Vite serves HTML itself, and `htmlFallbackMiddleware` rewrites `req.url` to the canonical path of `index.html`,\n\nhttps://github.com/vitejs/vite/blob/73ef074b80fa7252e0c46a37a2c94ba8cba46504/packages/vite/src/node/server/middlewares/htmlFallback.ts#L44-L47\n\nso the `url` passed to `server.transformIndexHtml` is `/index.html`.\n\nHowever, if `appType: 'custom'`, HTML is served manually, and if `server.transformIndexHtml` is called with the unmodified request URL (as the SSR docs suggest), then the path of the transformed `html-proxy` script varies with the request URL. For example, a request with path `/` produces\n\n```html\n<script type=\"module\" src=\"/@&#8203;id/__x00__/index.html?html-proxy&index=0.js\"></script>\n```\n\nIt is possible to abuse this behavior by crafting a request URL to contain a malicious payload like\n\n```\n\"></script><script>alert('boom')</script>\n```\n\nso a request to http://localhost:5173/?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E produces HTML output like\n\n```html\n<script type=\"module\" src=\"/@&#8203;id/__x00__/?\"></script><script>alert(\"boom\")</script>?html-proxy&index=0.js\"></script>\n```\n\nwhich demonstrates XSS.\n\n### PoC\n\n- Example 1. Serving HTML from `vite dev` middleware with `appType: 'custom'`\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=dev-html\n    - \"Open in New Tab\"\n    - Edit URL to set query string to `?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E` and navigate\n    - Witness XSS:\n    - ![image](https://user-images.githubusercontent.com/2456381/287434281-13757894-7a63-4a73-b1e9-d2b024c19d14.png)\n- Example 2. Serving HTML from SSR-style Express server (Vite dev server runs in middleware mode):\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=server\n    - (Same steps as above)\n- Example 3. Plain `vite dev` (this shows that vanilla `vite dev` is _not_ vulnerable, provided `htmlFallbackMiddleware` is used)\n    - Go to https://stackblitz.com/edit/vitejs-vite-9xhma4?file=main.js&terminal=dev\n    - (Same steps as above)\n    - You should _not_ see the alert box in this case\n\n### Detailed Impact\n\nThis will probably predominantly affect [development-mode SSR](https://vitejs.dev/guide/ssr#setting-up-the-dev-server), where `vite.transformHtml` is called using the original `req.url`, per the docs:\n\nhttps://github.com/vitejs/vite/blob/7fd7c6cebfcad34ae7021ebee28f97b1f28ef3f3/docs/guide/ssr.md?plain=1#L114-L126\n\nHowever, since this vulnerability affects `server.transformIndexHtml`, the scope of impact may be higher to also include other ad-hoc calls to `server.transformIndexHtml` from outside of Vite's own codebase.\n\nMy best guess at bisecting which versions are vulnerable involves the following test script\n\n```js\nimport fs from 'node:fs/promises';\nimport * as vite from 'vite';\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n  </head>\n  <body>\n    <script type=\"module\">\n      // Inline script\n    </script>\n  </body>\n</html>\n`;\nconst server = await vite.createServer({ appType: 'custom' });\nconst transformed = await server.transformIndexHtml('/?%22%3E%3C/script%3E%3Cscript%3Ealert(%27boom%27)%3C/script%3E', html);\nconsole.log(transformed);\nawait server.close();\n```\n\nand using it I was able to narrow down to #&#8203;13581. If this is correct, then vulnerable Vite versions are 4.4.0-beta.2 and higher (which includes 4.4.0).\n\n---\n\n### Release Notes\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.5`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small505-2023-12-04-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.4...v5.0.5)\n\n-   fix: emit `vite:preloadError` for chunks without deps ([#&#8203;15203](https://togithub.com/vitejs/vite/issues/15203)) ([d8001c5](https://togithub.com/vitejs/vite/commit/d8001c5)), closes [#&#8203;15203](https://togithub.com/vitejs/vite/issues/15203)\n-   fix: esbuild glob import resolve error ([#&#8203;15140](https://togithub.com/vitejs/vite/issues/15140)) ([676804d](https://togithub.com/vitejs/vite/commit/676804d)), closes [#&#8203;15140](https://togithub.com/vitejs/vite/issues/15140)\n-   fix: json error with position ([#&#8203;15225](https://togithub.com/vitejs/vite/issues/15225)) ([14be75f](https://togithub.com/vitejs/vite/commit/14be75f)), closes [#&#8203;15225](https://togithub.com/vitejs/vite/issues/15225)\n-   fix: proxy html path should be encoded ([#&#8203;15223](https://togithub.com/vitejs/vite/issues/15223)) ([5b85040](https://togithub.com/vitejs/vite/commit/5b85040)), closes [#&#8203;15223](https://togithub.com/vitejs/vite/issues/15223)\n-   fix(deps): update all non-major dependencies ([#&#8203;15233](https://togithub.com/vitejs/vite/issues/15233)) ([ad3adda](https://togithub.com/vitejs/vite/commit/ad3adda)), closes [#&#8203;15233](https://togithub.com/vitejs/vite/issues/15233)\n-   fix(hmr): don't consider CSS dep as a circular dep ([#&#8203;15229](https://togithub.com/vitejs/vite/issues/15229)) ([5f2cdec](https://togithub.com/vitejs/vite/commit/5f2cdec)), closes [#&#8203;15229](https://togithub.com/vitejs/vite/issues/15229)\n-   feat: add '\\*.mov' to client.d.ts ([#&#8203;15189](https://togithub.com/vitejs/vite/issues/15189)) ([d93a211](https://togithub.com/vitejs/vite/commit/d93a211)), closes [#&#8203;15189](https://togithub.com/vitejs/vite/issues/15189)\n-   feat(server): allow disabling built-in shortcuts ([#&#8203;15218](https://togithub.com/vitejs/vite/issues/15218)) ([7fd7c6c](https://togithub.com/vitejs/vite/commit/7fd7c6c)), closes [#&#8203;15218](https://togithub.com/vitejs/vite/issues/15218)\n-   chore: replace 'some' with 'includes' in resolveEnvPrefix ([#&#8203;15220](https://togithub.com/vitejs/vite/issues/15220)) ([ee12f30](https://togithub.com/vitejs/vite/commit/ee12f30)), closes [#&#8203;15220](https://togithub.com/vitejs/vite/issues/15220)\n-   chore: update the website url for homepage in package.json ([#&#8203;15181](https://togithub.com/vitejs/vite/issues/15181)) ([282bd8f](https://togithub.com/vitejs/vite/commit/282bd8f)), closes [#&#8203;15181](https://togithub.com/vitejs/vite/issues/15181)\n-   chore: update vitest to 1.0.0-beta.6 ([#&#8203;15194](https://togithub.com/vitejs/vite/issues/15194)) ([2fce647](https://togithub.com/vitejs/vite/commit/2fce647)), closes [#&#8203;15194](https://togithub.com/vitejs/vite/issues/15194)\n-   refactor: make HMR agnostic to environment ([#&#8203;15179](https://togithub.com/vitejs/vite/issues/15179)) ([0571b7c](https://togithub.com/vitejs/vite/commit/0571b7c)), closes [#&#8203;15179](https://togithub.com/vitejs/vite/issues/15179)\n-   refactor: use dedicated regex methods ([#&#8203;15228](https://togithub.com/vitejs/vite/issues/15228)) ([0348137](https://togithub.com/vitejs/vite/commit/0348137)), closes [#&#8203;15228](https://togithub.com/vitejs/vite/issues/15228)\n-   perf: remove debug only prettifyUrl call ([#&#8203;15204](https://togithub.com/vitejs/vite/issues/15204)) ([73e971f](https://togithub.com/vitejs/vite/commit/73e971f)), closes [#&#8203;15204](https://togithub.com/vitejs/vite/issues/15204)\n-   perf: skip computing sourceRoot in injectSourcesContent ([#&#8203;15207](https://togithub.com/vitejs/vite/issues/15207)) ([1df1fd1](https://togithub.com/vitejs/vite/commit/1df1fd1)), closes [#&#8203;15207](https://togithub.com/vitejs/vite/issues/15207)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26590","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v5.0.5 [security]\" (#26590)"},{"Id":"2027420621","IsPullRequest":true,"CreatedAt":"2023-12-06T06:43:09","Actor":"clydin","Number":"26591","RawContent":null,"Title":"build: update dependency vite to v4.5.1","State":"closed","Body":"17.0.x variant of #26590","Url":"https://github.com/angular/angular-cli/pull/26591","RelatedDescription":"Closed or merged PR \"build: update dependency vite to v4.5.1\" (#26591)"},{"Id":"2026852380","IsPullRequest":true,"CreatedAt":"2023-12-05T20:23:44","Actor":"alan-agius4","Number":"26588","RawContent":null,"Title":"refactor: update rxjs imports","State":"closed","Body":"Remove `rxjs/operators` legacy import\r\n","Url":"https://github.com/angular/angular-cli/pull/26588","RelatedDescription":"Closed or merged PR \"refactor: update rxjs imports\" (#26588)"},{"Id":"2025062853","IsPullRequest":true,"CreatedAt":"2023-12-05T18:22:08","Actor":"clydin","Number":"26582","RawContent":null,"Title":"build: change ng-dev config files to mjs with type jsdoc","State":"closed","Body":"To minimize the need for ts-node, the ng-dev configuration files are now ESM JavaScript files. To support type-checking of the files, JSDoc `@type` comments are added to each file. This allows for IDE support while also removing the need for ts-node to execute the files. Unfortunately, the `lib/packages.ts` file is still present and used by the configurations. This prevents full removal of ts-node for the ng-dev execution at this time.","Url":"https://github.com/angular/angular-cli/pull/26582","RelatedDescription":"Closed or merged PR \"build: change ng-dev config files to mjs with type jsdoc\" (#26582)"},{"Id":"2026218134","IsPullRequest":false,"CreatedAt":"2023-12-05T15:25:14","Actor":"ChristianOss","Number":"26585","RawContent":null,"Title":"New application builder (v17) does not live reload changes in linked libraries","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.10\n\n### Description\n\nThe new application builder does not live reload changes to linked libraries using `npm link`\r\n\r\nIn order to make it work for now, revert to the old builder. For a new project, change `@angular-devkit/build-angular:application` to `@angular-devkit/build-angular:browser` and `\"browser\": \"src/main.ts\",` to `\"main\": \"src/main.ts\",` in `angular.json`.\n\n### Minimal Reproduction\n\nFirstly, create a new library using terminal\r\n```shell\r\nng new lib-workspace --no-create-application\r\ncd lib-workspace\r\nng generate library my-lib\r\nng build\r\ncd dist/my-lib\r\nnpm link\r\ncd ../..\r\nng build --watch\r\n```\r\nStart another terminal\r\n```shell\r\n# Use SCSS and no SSR\r\nng new application-with-lib\r\ncd application-with-lib\r\nnpm link my-lib\r\n```\r\n\r\nReplace app.component.ts\r\n```ts\r\nimport { Component } from '@angular/core';\r\nimport { MyLibComponent } from 'my-lib';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [MyLibComponent],\r\n  template: '<lib-my-lib></lib-my-lib>'\r\n})\r\nexport class AppComponent {\r\n}\r\n```\r\nAdd preserveSymlinks = true to `angular.json`\r\n```json\r\n\"projects\": {\r\n    \"application-with-lib\": {\r\n      ...\r\n      \"architect\": {\r\n        \"build\": {\r\n          ...\r\n          \"options\": {\r\n            \"preserveSymlinks\": true,\r\n            ...\r\n}\r\n```\r\n\r\nRun the app\r\n```shell\r\nng serve\r\n```\r\nNow change something in your library's `my-lib.component.ts`. Result is that no changes are reflected in your browser.\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.5\r\nNode: 20.9.0\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@schematics/angular             17.0.5\r\nng-packagr                      17.0.2\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26585","RelatedDescription":"Closed issue \"New application builder (v17) does not live reload changes in linked libraries\" (#26585)"},{"Id":"2026426820","IsPullRequest":true,"CreatedAt":"2023-12-05T15:25:12","Actor":"alan-agius4","Number":"26586","RawContent":null,"Title":"fix(@angular-devkit/build-angular): watch symlink when using `preserveSymlinks` option","State":"closed","Body":"When using the esbuild based builder symlinks are not watched when `preserveSymlinks` is enabled.\r\n\r\nCloses #26585\r\n","Url":"https://github.com/angular/angular-cli/pull/26586","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): watch symlink when using `preserveSymlinks` option\" (#26586)"},{"Id":"2025726561","IsPullRequest":true,"CreatedAt":"2023-12-05T15:06:14","Actor":"angular-robot","Number":"26584","RawContent":null,"Title":"build: update dependency undici to v6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | dependencies | major | [`5.28.2` -> `6.0.0`](https://renovatebot.com/diffs/npm/undici/5.28.2/6.0.0) |\n| [undici](https://undici.nodejs.org) ([source](https://togithub.com/nodejs/undici)) | devDependencies | major | [`5.28.2` -> `6.0.0`](https://renovatebot.com/diffs/npm/undici/5.28.2/6.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>nodejs/undici (undici)</summary>\n\n### [`v6.0.0`](https://togithub.com/nodejs/undici/releases/tag/v6.0.0)\n\n[Compare Source](https://togithub.com/nodejs/undici/compare/v5.28.2...v6.0.0)\n\n##### What's Changed\n\n-   16 eol by [@&#8203;ronag](https://togithub.com/ronag) in [https://github.com/nodejs/undici/pull/2480](https://togithub.com/nodejs/undici/pull/2480)\n-   update spec & wpts by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2482](https://togithub.com/nodejs/undici/pull/2482)\n-   version cleanup by [@&#8203;KhafraDev](https://togithub.com/KhafraDev) in [https://github.com/nodejs/undici/pull/2483](https://togithub.com/nodejs/undici/pull/2483)\n-   perf: avoid Response initialization by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2489](https://togithub.com/nodejs/undici/pull/2489)\n-   perf: optimize `parseHeaders` by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2492](https://togithub.com/nodejs/undici/pull/2492)\n-   chore: fix typo by [@&#8203;tsctx](https://togithub.com/tsctx) in [https://github.com/nodejs/undici/pull/2490](https://togithub.com/nodejs/undici/pull/2490)\n-   feat: print attempted addresses on ConnectTimeoutError by [@&#8203;fengmk2](https://togithub.com/fengmk2) in [https://github.com/nodejs/undici/pull/2494](https://togithub.com/nodejs/undici/pull/2494)\n-   Expose HTTP errors that are not meant to be retried by [@&#8203;MzUgM](https://togithub.com/MzUgM) in [https://github.com/nodejs/undici/pull/2496](https://togithub.com/nodejs/undici/pull/2496)\n\n**Full Changelog**: https://github.com/nodejs/undici/compare/v5.28.2...v6.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/26584","RelatedDescription":"Closed or merged PR \"build: update dependency undici to v6\" (#26584)"},{"Id":"2024275599","IsPullRequest":true,"CreatedAt":"2023-12-05T15:04:46","Actor":"clydin","Number":"26577","RawContent":null,"Title":"fix(@angular-devkit/build-angular): check namespaced Sass variables when rebasing URLs","State":"closed","Body":"The `@use` Sass directive allows Sass variables to be accessed via a namespace. This was previously not checked when performing URL path rebasing on imported Sass stylesheets. These type of Sass variable references are now also ignored when attempting to rebase URL paths during loading. The final rebased URL now also does not add a leading relative prefix indicator (`./`) unless not already present.\r\n\r\nCloses #26570","Url":"https://github.com/angular/angular-cli/pull/26577","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): check namespaced Sass variables when rebasing URLs\" (#26577)"},{"Id":"2024391999","IsPullRequest":true,"CreatedAt":"2023-12-05T15:04:33","Actor":"clydin","Number":"26578","RawContent":null,"Title":"test: correct misconfigured saucelabs platform/OS combination","State":"closed","Body":"Using Linux in certain combinations on Saucelabs can lead to unsupported errors when initializing Saucelab environments prior to any actual testing.","Url":"https://github.com/angular/angular-cli/pull/26578","RelatedDescription":"Closed or merged PR \"test: correct misconfigured saucelabs platform/OS combination\" (#26578)"},{"Id":"2024920749","IsPullRequest":false,"CreatedAt":"2023-12-04T22:48:10","Actor":"james-albanese","Number":"26581","RawContent":null,"Title":"SSR: Request & Response objects","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nIt would be great to have access to the Request & Response objects. This was possible with `@nguniversal/express-engine` via the respective injection tokens. \n\n### Describe the solution you'd like\n\n`REQUEST` & `RESPONSE` injection tokens.\r\n\r\nThese should be automatically accessible from the app when running on the dev server. They can then be provided from `server.ts` in a production environment.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26581","RelatedDescription":"Closed issue \"SSR: Request & Response objects\" (#26581)"},{"Id":"2024665282","IsPullRequest":true,"CreatedAt":"2023-12-04T21:46:40","Actor":"clydin","Number":"26580","RawContent":null,"Title":"test: disable new failing default typescript eslint rules to allow upgrading","State":"closed","Body":"The latest major (v6) of the typescript eslint plugin contains several new rule defaults that currently cause errors in the repository code while linting. To facilitate an upgrade, these rules are now preemptively disabled. Once the update is complete, these rules can be evaluated for inclusion.\r\n\r\nThe rules are as follows:\r\n   * @typescript-eslint/no-unsafe-enum-comparison\r\n   * @typescript-eslint/no-redundant-type-constituents\r\n   * @typescript-eslint/no-base-to-string\r\n\r\nUnblocks #25522","Url":"https://github.com/angular/angular-cli/pull/26580","RelatedDescription":"Closed or merged PR \"test: disable new failing default typescript eslint rules to allow upgrading\" (#26580)"},{"Id":"2024649197","IsPullRequest":true,"CreatedAt":"2023-12-04T20:17:17","Actor":"clydin","Number":"26579","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): convert watching to use watchpack package","State":"open","Body":"The underlying file watching functionality now uses the `watchpack` library for all builders. This includes the Webpack-based `browser` and the esbuild-based `application`/ `browser-esbuild`. This not only has the advantage of a single dependency for both but also provides more consistent behavior between the two build system in regards to file watching. Since the implementation of the file watching is fully encapsulated, there is no change to the options or configurations of consuming applications.","Url":"https://github.com/angular/angular-cli/pull/26579","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): convert watching to use watchpack package\" (#26579)"},{"Id":"2024044126","IsPullRequest":true,"CreatedAt":"2023-12-04T16:39:56","Actor":"clydin","Number":"26576","RawContent":null,"Title":"test: update browser compatibility test versions for v17","State":"closed","Body":"The browser compatibility CI job contains a hardcoded set of browsers and platform combinations that should be updated for each major release. This update adjusts the versions for the Angular v17 release based on the support matrix at the time of release. Based on the release cadence of chrome-based browsers, the range was increased by 2 last versions to test a larger segment of the browser usage space.","Url":"https://github.com/angular/angular-cli/pull/26576","RelatedDescription":"Closed or merged PR \"test: update browser compatibility test versions for v17\" (#26576)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2025809060","IsPullRequest":true,"CreatedAt":"2023-12-06T19:58:01","Actor":"crisbeto","Number":"28236","RawContent":null,"Title":"fix(multiple): consolidate and tokenize internal form field","State":"closed","Body":"We have multiple components that depend on MDC's form field styles (not to be confused with our form field which uses MDC's text field).\r\n\r\nCurrently each one includes the styles itself, both the structural ones and the theme. This is problematic because it ships the same styles multiple times and it means that we need to do refactors in multiple places.\r\n\r\nThese changes move the styles into a common component that is reused between all instances. They also switch it to the new tokens-based theming API.","Url":"https://github.com/angular/components/pull/28236","RelatedDescription":"Closed or merged PR \"fix(multiple): consolidate and tokenize internal form field\" (#28236)"},{"Id":"2027114267","IsPullRequest":true,"CreatedAt":"2023-12-06T17:22:00","Actor":"zarend","Number":"28237","RawContent":null,"Title":"refactor(material/tree): add unit tests for opt-out","State":"closed","Body":"Add unit tests to cover the use of LegacyTreeKeyManager, which opts out of updated focus management behavior.","Url":"https://github.com/angular/components/pull/28237","RelatedDescription":"Closed or merged PR \"refactor(material/tree): add unit tests for opt-out\" (#28237)"},{"Id":"2027280605","IsPullRequest":true,"CreatedAt":"2023-12-06T17:21:26","Actor":"zarend","Number":"28238","RawContent":null,"Title":"refactor(material/tree): docs updates and rename variables","State":"closed","Body":"Make miscelaneous fixes to documentation. Rename variables. Responding to PR feedback.\r\n\r\n * remove comment about API contract of CdkTreeNodeToggle\r\n * rename CdkTree#_groups to CdkTree#_ariaSets\r\n * move documentation about default key manager configuration from TreeKeyManagerStrategy interface to TreeKeyManager class.\r\n * add JSDoc style comments for NoopTreeKeyManager","Url":"https://github.com/angular/components/pull/28238","RelatedDescription":"Closed or merged PR \"refactor(material/tree): docs updates and rename variables\" (#28238)"},{"Id":"2028150352","IsPullRequest":true,"CreatedAt":"2023-12-06T10:46:16","Actor":"crisbeto","Number":"28239","RawContent":null,"Title":"Set up basic ng add schematics for all packages","State":"closed","Body":"Currently only `@angular/material` and `@angular/cdk` have `ng add` schematics which means that running something like `ng add @angular/youtube-player` results in an error. These changes add some basic noop schematics to avoid the error and to allows us to add more functionality in the future (e.g. installing Moment together with the `moment-date-adapter`).","Url":"https://github.com/angular/components/pull/28239","RelatedDescription":"Closed or merged PR \"Set up basic ng add schematics for all packages\" (#28239)"},{"Id":"2022037380","IsPullRequest":false,"CreatedAt":"2023-12-05T13:15:35","Actor":"prasantht96","Number":"28222","RawContent":null,"Title":"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n16\r\n\r\n### Description\r\n\r\nUsing @defer causes this error, but without defer block it's working fine.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nyqsqs?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. in main.ts, remove @defer from template, No error. \r\n2. but if you add @defer, the error will come in console.\r\n\r\n\r\n### Expected Behavior\r\n\r\nthis shouldn't cause any error and everything should work.\r\n\r\n### Actual Behavior\r\n\r\n`ERROR\r\nError: R3InjectorError(Environment Injector)[InjectionToken mat-datepicker-scroll-strategy -> InjectionToken mat-datepicker-scroll-strategy]:\r\nNullInjectorError: No provider for InjectionToken mat-datepicker-scroll-strategy!`\r\n\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n- Angular: 17\r\n- CDK/Material: 17\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28222","RelatedDescription":"Closed issue \"bug(@defer): Using @defer causes No provider for InjectionToken mat-datepicker-scroll-strategy! error\" (#28222)"},{"Id":"2025584555","IsPullRequest":true,"CreatedAt":"2023-12-05T12:58:15","Actor":"crisbeto","Number":"28235","RawContent":null,"Title":"Remove dedicated required validator directives","State":"closed","Body":"Currently `MatCheckbox` and `MatSlideToggle` implement required validation with separate directives, similarly to how `@angular/forms` handles it. This is problematic, because it would require `standalone` users to add two imports.\r\n\r\nThese changes deprecate the separate directives and move the required validation into the components.","Url":"https://github.com/angular/components/pull/28235","RelatedDescription":"Closed or merged PR \"Remove dedicated required validator directives\" (#28235)"},{"Id":"2025204653","IsPullRequest":true,"CreatedAt":"2023-12-05T12:10:37","Actor":"AleArevalo","Number":"28234","RawContent":null,"Title":"fix(material/datepicker): fix create control value when null","State":"closed","Body":"Datepicker emulating a Year and month picker:\r\n\r\nIf the user deletes the value of the control manually leaving the value of the control as null, the function \"setMonthAndYear\" breaks because the variable \"ctrlValue\" does not have the functions that assign the month and year (year, month). Allowing to enter the day (option that should not be shown).","Url":"https://github.com/angular/components/pull/28234","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): fix create control value when null\" (#28234)"},{"Id":"2022515255","IsPullRequest":false,"CreatedAt":"2023-12-05T07:45:25","Actor":"Anan014","Number":"28224","RawContent":null,"Title":"bug(COMPONENT): Unexpected Behavior with Number Input and MatTooltip Scrolling","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn Angular Material, when a <input type='number'> with matInput is used, the expected behavior is that scrolling over this input field scrolls the page. However, if I hover over any element with MatTooltip, then focus back on the number input field, the scrolling behavior unexpectedly changes. Instead of scrolling the page, it increments or decrements the number in the input. This issue can also occur on the Angular Material official [website](https://v11.material.angular.io/components/tooltip/overview).\r\n\r\n![Screenshot 2023-12-03 at 15 08 30](https://github.com/angular/components/assets/89395304/eef26764-cf11-4f7c-b5bb-a819239abcd6)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/angular/porobbapdry?file=src%2Fapp%2Ftooltip-delay-example.ts\r\nSteps to reproduce:\r\n\r\n1. Navigate to a page with a <input type='number'> with matInput.\r\n2. Hover over an element with MatTooltip.\r\n3. Focus on the number input field.\r\n4. Try scrolling over the number input field.\n\n### Expected Behavior\n\nThe expected and consistent user experience is that scrolling over a number input field should scroll the page, not change the input's value. This unexpected behavior disrupts the user experience, especially in forms with tooltips and number inputs.\n\n### Actual Behavior\n\nWhen a <input type='number'> field with matInput is focused, and the user scrolls with the mouse wheel, the default behavior is for the page itself to scroll, not the number in the input field. However, this behavior changes after interacting with an element that has MatTooltip. Specifically, after hovering over a MatTooltip element and then focusing on the number input field, scrolling with the mouse wheel no longer scrolls the page. Instead, it changes the value in the number input field, incrementing or decrementing it. This is inconsistent with the expected behavior and occurs even on the Angular Material official website.\n\n### Environment\n\n- Angular: 11\r\n- CDK/Material: 11\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS","Url":"https://github.com/angular/components/issues/28224","RelatedDescription":"Closed issue \"bug(COMPONENT): Unexpected Behavior with Number Input and MatTooltip Scrolling\" (#28224)"},{"Id":"2025074755","IsPullRequest":true,"CreatedAt":"2023-12-05T00:54:41","Actor":"kryshac","Number":"28233","RawContent":null,"Title":"fix(cdk/overlay): fix overlay margin in isBoundedByLeftViewportEdge","State":"open","Body":"When the overlay is opening 'left-ward' (the content flows to the left) the margin is not calculated correctly because the margin is subtracted twice from the width ([line: 1092](https://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/cdk/overlay/position/flexible-connected-position-strategy.ts#L1092)), but [here](https://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/cdk/overlay/position/flexible-connected-position-strategy.ts#L805) it is added only once","Url":"https://github.com/angular/components/pull/28233","RelatedDescription":"Open PR \"fix(cdk/overlay): fix overlay margin in isBoundedByLeftViewportEdge\" (#28233)"},{"Id":"2024750637","IsPullRequest":true,"CreatedAt":"2023-12-04T21:12:35","Actor":"angular-robot","Number":"28232","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `3069be8` -> `605fc83` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `6f2e63f` -> `117c852` |\n| angular/dev-infra | action | digest | `2113cd7` -> `1337ad7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28232","RelatedDescription":"Open PR \"build: update angular shared dev-infra code\" (#28232)"},{"Id":"2024358681","IsPullRequest":false,"CreatedAt":"2023-12-04T17:31:25","Actor":"hafnerpw","Number":"28231","RawContent":null,"Title":"bug(MatSelect): MatOptionGroup template bug with new @If Control-Flow ","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n`                                <mat-select [formControl]=\"sourceTypeControl\" placeholder=\"Select SourceType\"\r\n                                            required minlength=\"1\"\r\n                                            appSelectOnePerGroup\r\n                                            multiple>\r\n                                    @if (vm.library && vm.library.referencedSourceLibraryIds) {\r\n                                        @for (sLibId of vm.library.referencedSourceLibraryIds;track sLibId) {\r\n                                            <mat-optgroup [label]=\"sLibId\">\r\n                                                @for(st of vm.sourceTypes; track st.id){\r\n                                                        <mat-option *ngIf=\"st.sourceLibraryId === sLibId\" class=\"mat-primary\" [value]=\"st.id\">\r\n                                                            {{ st.derivedPlcType?.plcDataType }}\r\n                                                        </mat-option>\r\n                                                }\r\n                                            </mat-optgroup>\r\n                                        }\r\n                                    }\r\n                                </mat-select>`\r\n                                \r\n                                is not the same as this: `<mat-select [formControl]=\"sourceTypeControl\" placeholder=\"Select SourceType\"\r\n                                            required minlength=\"1\"\r\n                                            appSelectOnePerGroup\r\n                                            multiple>\r\n                                    @if (vm.library && vm.library.referencedSourceLibraryIds) {\r\n                                        @for (sLibId of vm.library.referencedSourceLibraryIds;track sLibId) {\r\n                                            <mat-optgroup [label]=\"sLibId\">\r\n                                                @for(st of vm.sourceTypes; track st.id){\r\n                                                    @if(st.sourceLibraryId === sLibId){\r\n                                                        <mat-option class=\"mat-primary\" [value]=\"st.id\">\r\n                                                            {{ st.derivedPlcType?.plcDataType }}\r\n                                                        </mat-option>\r\n                                                    }\r\n                                                }\r\n                                            </mat-optgroup>\r\n                                        }\r\n                                    }\r\n                                </mat-select>`\r\n                                \r\n                                \r\n                                with the @if it adds some weird padding to the options: \r\n                                \r\n![image](https://github.com/angular/components/assets/60545335/6e9801c3-d629-423e-98a5-e4908ad3758f)\r\nand with the old *ngIf it looks normal:\r\n![image](https://github.com/angular/components/assets/60545335/345f0de7-b39b-42dd-ac01-b9eb82318fae)\r\n\r\nYes I am customizing material styles but this inconsistency is not result of my overrides.\r\n                                \n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\n*ngIf should behave the same way as @if() \r\n\n\n### Actual Behavior\n\n@if control flow does not produce the same output as *ngIf\n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.1\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows 11\r\n","Url":"https://github.com/angular/components/issues/28231","RelatedDescription":"Closed issue \"bug(MatSelect): MatOptionGroup template bug with new @If Control-Flow \" (#28231)"},{"Id":"2024280442","IsPullRequest":false,"CreatedAt":"2023-12-04T16:40:45","Actor":"lylebuchanan","Number":"28230","RawContent":null,"Title":"bug(mat-select): aria-owns and modal accessibility issue.","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using a mat-select inside of a dialog the select applies the aria-owns attribute to the aria-modal=\"true\" element when the select panel is opened. After a selection is made, a critical accessibility issue in axeDevTools v 4.8.2 with error \"Ensures all ARIA attributes have valid values\" appears. This is due to the previously applied aria-owns id no longer existing on the dom after a selection is made. The aria-owns attribute is only removed from the modal on destroy of the select. \n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-mxpfyf?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the modal.\r\n2. Select an option\r\n3. Scan with axeDevTools or inspect dom to see aria-owns still exists on mat-dialog-container\r\n\n\n### Expected Behavior\n\nThe aria-owns label is removed from mat-dialog-container when the select panel is closed.\n\n### Actual Behavior\n\nThe aria-owns label is only removed on destroy of the select.\n\n### Environment\n\n- Angular: 16.2\r\n- CDK/Material: 16.2\r\n- Browser(s): chrome/edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/28230","RelatedDescription":"Open issue \"bug(mat-select): aria-owns and modal accessibility issue.\" (#28230)"},{"Id":"2023951543","IsPullRequest":false,"CreatedAt":"2023-12-04T14:12:06","Actor":"csisy-btw","Number":"28229","RawContent":null,"Title":"bug(MatTabLink): Underline (MatTabInk) is missing if combined with route reuse strategy","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWe have an application with multiple layer of tabs combined with custom route reuse strategy. Most of the tabs are detached and reattached until the tab is closed.\r\n\r\nThe active tab is determined from the currently active route on each navigation end event. This way if the application is loaded with a specific url, the appropriate tab is selected.\r\n\r\nConsider the following routes:\r\n```\r\n- /tab1\r\n- /tab2\r\n- /tab2/sub1\r\n- /tab2/sub2\r\n```\r\n\r\nOn the `/tab2` route, another tab group is present with links to the sub routes (and of course a sub router-outlet as well).\r\n\r\nIf we load the app with the `/tabs2/sub2` route, the components of `/tab2` and `/tab2/sub2` are loaded, which also means that the tab2's ink is initialized to the second tab in the header.\r\n\r\nNow, if we navigate to `/tab1`, these components are not destroyed, however the tab link active flags are set to false because neither `/tab2/sub1` nor `/tab2/sub2` is active after the navigation ends.\r\n\r\nThen if we navigate back to `/tab2/sub2`, the components are not reinitialized (because of the reuse strategy). but the active flag is changed for the `/tab2/sub2` tab link (because it is now active after navigation end).\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-nckgfk?file=src%2Ftab-active-tracker.directive.ts\r\n\r\nSteps to reproduce:\r\n1. Click on Tab 1 -> Tab 1 highlighted [OK]\r\n2. Click on Tab 2 -> Tab 2 highlighted [OK], inner tab group loaded [OK]\r\n3. Click on Sub-Tab 1 -> upper Sub-Tab 1 highlighted [OK], inner Sub-Tab 1 highlighted [OK]\r\n4. Click on Sub-Tab 2 -> upper Sub-Tab 2 highlighted [OK], inner Sub-Tab 2 highlighted [OK]\r\n5. Click on Tab 1 -> Tab 1 highlighted [OK]\r\n6. Click on Sub-Tab 2 -> Tab 2 highlighted [OK], **inner Sub 2 is NOT highlighted [NOK]**\r\n\r\n### Expected Behavior\r\n\r\nAfter the step 6 the ink should be re-initialized even if set to the same value.\r\n\r\n### Actual Behavior\r\n\r\nAs you can see, the active status is properly set (font is bold on the inner Sub-Tab 2 header element) but the ink is missing.\r\n\r\nHowever, I think I found the root cause of the problem.\r\n\r\nWhen we navigate from the `/tab2/sub2` back to `/tab1`, neither the `/tab2/sub1` nor the `/tab2/sub2` routes are active so the `selectedIndex` is set to `-1` and the ink's `hide()` is called. However, the index just set is not processed until the next `ngAfterContentChecked` call.\r\n\r\nNow, when we navigate back to `/tab2/sub2` (which was the last active inner tab) the ink handler thinks that despite the selection index is changed (from `-1` ro `1`), the selection itself is not changed.\r\n\r\nI think that in the `hide()` function of `MatInkBar` the `this._currentItem` should be set to `null`. Because next time when `alignToElement` is called, the `correspondingItem === currentItem` check will be true (but the index was changed from `1 -> -1 -> 1` but it was not processed due to a missing `ngAfterContentChecked` call)\r\n\r\nhttps://github.com/angular/components/blob/0762d69b394343555488b5aaada9444dd1a5083a/src/material/tabs/ink-bar.ts#L40\r\n\r\n### Environment\r\n\r\n```\r\nAngular CLI: 17.0.5\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 17.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.5\r\n@angular-devkit/build-angular   17.0.5\r\n@angular-devkit/core            17.0.5\r\n@angular-devkit/schematics      17.0.5\r\n@angular/cdk                    17.0.2\r\n@angular/material               17.0.2\r\n@schematics/angular             17.0.5\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```","Url":"https://github.com/angular/components/issues/28229","RelatedDescription":"Open issue \"bug(MatTabLink): Underline (MatTabInk) is missing if combined with route reuse strategy\" (#28229)"},{"Id":"2023770717","IsPullRequest":false,"CreatedAt":"2023-12-04T12:42:19","Actor":"iosipov27","Number":"28228","RawContent":null,"Title":"bug(mat-form-field): when using appearance=\"outline\", input fields increases in height. ","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using mat-form-field with appearance=\"outline\", text input field increases in height after entering a text\r\nReproduces on mobile devices with iOS 17+\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Open Safari 17 on a mobile device (it is the default browser for iOS 17)\r\n2. Open Angular Material Page at https://material.angular.io/components/form-field/overview\r\n3. Find Outline form field\r\n4. Enter any text. Probably need to clear the field and enter the text again.\n\n### Expected Behavior\n\nThe height of the field should be the same as the field without text\r\n![image](https://github.com/angular/components/assets/10838804/e30f248c-4e49-4853-a190-87aada38a1b7)\n\n### Actual Behavior\n\nThe field height is different compared to the field without text\r\n![image](https://github.com/angular/components/assets/10838804/40351a90-d07f-4a99-b6a2-a09026faacc6)\n\n### Environment\n\n- Angular: 15-17\r\n- CDK/Material: 15-17\r\n- Browser(s): mobile Safari 17\r\n- Operating System iOS 17.1.2","Url":"https://github.com/angular/components/issues/28228","RelatedDescription":"Open issue \"bug(mat-form-field): when using appearance=\"outline\", input fields increases in height. \" (#28228)"},{"Id":"2022431974","IsPullRequest":true,"CreatedAt":"2023-12-04T11:08:15","Actor":"crisbeto","Number":"28223","RawContent":null,"Title":"build: set up hydration in universal app","State":"closed","Body":"Reworks the Universal app so that it's runnable and that it serves an SSR-generated `index.html`, allowing us to test hydration locally.","Url":"https://github.com/angular/components/pull/28223","RelatedDescription":"Closed or merged PR \"build: set up hydration in universal app\" (#28223)"},{"Id":"2023257134","IsPullRequest":true,"CreatedAt":"2023-12-04T10:45:47","Actor":"crisbeto","Number":"28227","RawContent":null,"Title":"build: update to TypeScript 5.3","State":"closed","Body":"Updates the project to the next Angular release and TypeScript 5.3.","Url":"https://github.com/angular/components/pull/28227","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.3\" (#28227)"},{"Id":"2023242589","IsPullRequest":false,"CreatedAt":"2023-12-04T07:55:24","Actor":"tHe-AK","Number":"28226","RawContent":null,"Title":"bug(mat-calendar-header): icons for navigating to prev & next month not disabled for edge values","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nv12\r\n\r\n### Description\r\n\r\nCheck the icon for navigating to the previous month, it is not disabled in v16 version:\r\n\r\n![image](https://github.com/angular/components/assets/19654243/6e0b1312-8a28-4b6f-98d2-5572bb70c0c5)\r\nv12 Screenshot\r\n\r\n![image](https://github.com/angular/components/assets/19654243/a9dc6483-793a-4e18-ab9c-2cf948af805e)\r\nv16 Screenshot\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/qpapjy\r\n\r\nSteps to reproduce: \r\n1. Click the calendar icon, it will open the popup for date selection. \r\n2. Click the left or right arrow icon to change the month. \r\n\r\n### Expected Behavior\r\n\r\nThe previous and next icons should be disabled when no further dates can be selected. \r\n\r\n### Actual Behavior\r\n\r\nThe previous and next icons look the same and don't get disabled. \r\n\r\n### Environment\r\n\r\n- Angular: 16.2.11 \r\n- CDK/Material: 16.2.10 \r\n- Browser(s): MS Edge Version 119.0.2151.93 (Official build) (64-bit) \r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows \r\n\r\nAlso, I have noticed that the Angular team haven't released a Legacy version for mat-datepicker but internal classes for mat-datepicker are changed as we are using new mat-button from mdc inside mat-datepicker. This breaks some stylings in our codebase.","Url":"https://github.com/angular/components/issues/28226","RelatedDescription":"Open issue \"bug(mat-calendar-header): icons for navigating to prev & next month not disabled for edge values\" (#28226)"},{"Id":"2021179352","IsPullRequest":true,"CreatedAt":"2023-12-04T07:41:32","Actor":"angular-robot","Number":"28218","RawContent":null,"Title":"build: update angular shared dev-infra code","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `069ea40` -> `3069be8` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `f00eb4c` -> `6f2e63f` |\n| angular/dev-infra | action | digest | `1d3d98f` -> `2113cd7` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy43NC41IiwidXBkYXRlZEluVmVyIjoiMzcuNzQuNSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/components/pull/28218","RelatedDescription":"Closed or merged PR \"build: update angular shared dev-infra code\" (#28218)"},{"Id":"2023217670","IsPullRequest":false,"CreatedAt":"2023-12-04T07:38:57","Actor":"Bschitter","Number":"28225","RawContent":null,"Title":"feat(mat-select): The selected option shows at the bottom when opening. Make this position configurable.","State":"open","Body":"### Feature Description\n\n**Version:** Angular Material 17.0.2\r\n\r\n## Description\r\n\r\nWhen I have a mat-select with many options, the selected value will always be at the bottom when opening the mat-select.\r\n\r\n![image](https://github.com/angular/components/assets/22681168/dbfdde4c-fa7f-4e0e-8571-92a890b425af)\r\n\r\n\r\n## Suggestion\r\n\r\nMake where the selected option shows configurable with values like `bottom (default) | middle | top` as shown in the screenshot below.\r\n\r\n![image](https://github.com/angular/components/assets/22681168/c15f6190-7b4b-4505-b69c-58634c487867)\r\n\n\n### Use Case\n\nFor some use cases, it might be better to have the selected option at the top or in the middle, so the previous resp. the previous and next values can be seen.\r\nE.g. the select list is sorted and I'm iterating through the select (for whatever reason) then I always have to scroll when I want to select the next item.","Url":"https://github.com/angular/components/issues/28225","RelatedDescription":"Open issue \"feat(mat-select): The selected option shows at the bottom when opening. Make this position configurable.\" (#28225)"},{"Id":"2020603628","IsPullRequest":false,"CreatedAt":"2023-12-03T16:46:59","Actor":"XEvansWTW","Number":"28215","RawContent":null,"Title":"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using a custom filter (as shown in the example in the autocomplete documentation https://material.angular.io/components/autocomplete/overview), the valueChanges functionality does not work when requireSelection is added to the component.\r\n\r\n### Reproduction\r\n\r\nStack Blitz\r\nhttps://stackblitz.com/edit/vyil2i?file=src%2Fexample%2Fautocomplete-filter-example.ts,src%2Fexample%2Fautocomplete-filter-example.html\r\n\r\n1. valueChanges pipe does not run when requireSelection is on autocomplete component.\r\n2. Removing requireSelection causes it to work (see output in console).\r\n3. This does not happen on a normal autocomplete component which doesn't have a custom filter.\r\n\r\nNote that this demo uses minimal changes from the example given in the component's documentation.\r\n\r\n### Expected Behavior\r\n\r\nvalueChanges pipe works as it does with a normal autocomplete without a custom filter.\r\n\r\n### Actual Behavior\r\n\r\nvalueChanges pipe does not work at all.\r\n\r\n### Environment\r\n\r\nAngular 17 \r\nAngular 17.0.1 material\r\n","Url":"https://github.com/angular/components/issues/28215","RelatedDescription":"Closed issue \"bug(autocomplete): requireSelection in an autocomplete with custom filter breaks valueChanges\" (#28215)"},{"Id":"2021636078","IsPullRequest":true,"CreatedAt":"2023-12-01T22:29:26","Actor":"zarend","Number":"28221","RawContent":null,"Title":"docs: release notes for the v17.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/28221","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.2 release\" (#28221)"},{"Id":"2021629972","IsPullRequest":true,"CreatedAt":"2023-12-01T21:53:30","Actor":"zarend","Number":"28220","RawContent":null,"Title":"Bump version to \"v17.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28220","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.2\" with changelog.\" (#28220)"},{"Id":"2021618380","IsPullRequest":true,"CreatedAt":"2023-12-01T21:44:49","Actor":"zarend","Number":"28219","RawContent":null,"Title":"Bump version to \"v17.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/28219","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-next.1\" with changelog.\" (#28219)"},{"Id":"2020812627","IsPullRequest":false,"CreatedAt":"2023-12-01T12:43:49","Actor":"WoMayr","Number":"28217","RawContent":null,"Title":"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen providing services via a route, MatDialog.open is not able to create a component instance that injects this service\r\n\r\nMatDialog.open is called like this\r\n```\r\nthis.matDialog.open(MyServiceConsumerComponent, {\r\n  viewContainerRef: this.viewContainerRef,\r\n});\r\n```\r\n\r\nStructure of the routes and components looks like this:\r\n![image](https://github.com/angular/components/assets/1965557/58fba84c-d769-4f51-8bdf-225ab58266e7)\r\n\r\n\r\nI did try to debug into MatDialog.open but the created Injectors were all able to get the service. So I don't really know what prevents the dialog component to be created.\r\n\r\nIt did correctly work, when declaring the Service in the `providers`-part of the component itself (see comment in my stack-blitz in my-feature.component.ts)\r\n\r\nAlso I'm not sure if this is an issue of Angular Material, CDK or Angular itself.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/angular-standalone-ts-strict-ijt5jr\r\nSteps to reproduce:\r\n1. Use standalone components\r\n2. Create a service (`MyFeatureService`)\r\n3. Create a route with a component (`MyFeatureComponent`) and define the service in the providers\r\n4. Create a component (`MyServiceConsumerComponent`) that consumes the service\r\n5. Open a dialog in `MyFeatureComponent` using `matDialog.open(MyServiceConsumerComponent, { viewContainerRef: this.viewContainerRef })`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe Dialog is able to resolve the requested service\r\n\r\n### Actual Behavior\r\n\r\nThe Dialog failes to resolve the service:\r\n```\r\nERROR NullInjectorError: R3InjectorError(Environment Injector)[MyFeatureService -> MyFeatureService]: \r\n  NullInjectorError: No provider for MyFeatureService!\r\n    at NullInjector.get (injector_token.ts:27:5)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at R3Injector.get (r3_injector.ts:294:90)\r\n    at ChainedInjector.get (component_ref.ts:238:23)\r\n    at lookupTokenUsingModuleInjector (di.ts:372:8)\r\n    at getOrCreateInjectable (di.ts:424:2)\r\n    at Object.ɵɵdirectiveInject (shared.ts:86:5)\r\n    at NodeInjectorFactory.MyServiceConsumerComponent_Factory [as factory] (my-service-consumer.component.ts:8:40)\r\n    at getNodeInjectable (di.ts:661:20)\r\n    at createRootComponent (inherit_definition_feature.ts:43:27)\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 17.0.5\r\n- CDK/Material: 17.0.1\r\n- Browser(s): Chrome 119.0.6045.200\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/28217","RelatedDescription":"Open issue \"bug(mat-dialog): MatDialog doesn't have access to providers defined in a route when given a ViewContainerRef\" (#28217)"},{"Id":"2020627408","IsPullRequest":false,"CreatedAt":"2023-12-01T10:54:50","Actor":"pawelkondraciuk","Number":"28216","RawContent":null,"Title":"feat(mat-datepicker): Custom day cell template","State":"open","Body":"### Feature Description\n\nAdd ability to provide custom template for the day cell in datepicker with date as template context. Something like\r\n\r\n```\r\n<mat-datepicker>\r\n  <ng-container *matDatepickerCell=\"let date\">\r\n    {{ date | date:\"d\" }}\r\n  <ng-container>\r\n</mat-datepicker>\r\n```\n\n### Use Case\n\nFairy simple use case would be to add name of the holiday below the day number or add the tooltip when you hover over the day with extra content.","Url":"https://github.com/angular/components/issues/28216","RelatedDescription":"Open issue \"feat(mat-datepicker): Custom day cell template\" (#28216)"},{"Id":"2018372384","IsPullRequest":false,"CreatedAt":"2023-11-30T19:01:41","Actor":"felhag","Number":"28210","RawContent":null,"Title":"bug(mat-chip-listbox): Harness getChips() does not return mat-chip","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHello,\r\n\r\nWhen using `MatChipListboxHarness.getChips()` it only returns `mat-chip-option` elements, but not `mat-chip`. Because of this a mat-chip-listbox like [this example](https://material.angular.io/components/chips/examples#chips-avatar) cannot be tested using the listbox harness. Not sure what is the correct solution for this because it can be solved using `mat-chip-set` instead of listbox.\r\n\r\nPossible solutions imho: \r\n1. Change example to use `mat-chip-set` instead of `mat-chip-listbox`.\r\n2. Change `getChips()` signature to return `MatChipHarness[]` which would be a breaking change.\r\n3. Add an additional method like `getStaticChips()`.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/qykqid\n\n### Expected Behavior\n\n`MatChipListboxHarness.getChips()` should include `mat-chip` as well.\n\n### Actual Behavior\n\n`MatChipListboxHarness.getChips()` only returns `mat-chip-option`.\n\n### Environment\n\n- Angular: 17.0.1\r\n- CDK/Material: 17.0.1\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/28210","RelatedDescription":"Closed issue \"bug(mat-chip-listbox): Harness getChips() does not return mat-chip\" (#28210)"},{"Id":"2018956425","IsPullRequest":false,"CreatedAt":"2023-11-30T15:49:42","Actor":"walberglez","Number":"28214","RawContent":null,"Title":"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe screen reader JAWS version 2023 does not announce a checked option as selected in a multiple selection mat-select. It does announce unchecked options as selected.\r\n\r\nI tried other Windows screen readers, NVDA does not announce it either but Narrator does. So it could be a screen reader implementation issue.\r\n\r\nAlso, this issue has been discussed before: https://github.com/angular/components/issues/21949 and it was considered to be working as expected. But I want to bring this up again because I consider that the mat-option component is not following the WAI ARIA Listbox pattern completely, please see Note 1 in this section https://www.w3.org/WAI/ARIA/apg/patterns/listbox/#roles_states_properties.\r\n\r\n> 1. Some factors to consider when choosing whether to indicate selection with aria-selected or aria-checked are:\r\nSome design systems use aria-selected for single-select widgets and aria-checked for multi-select widgets. In the absence of factors that would make an alternative convention more appropriate, this is a recommended convention.\r\n\r\nMat Option uses aria-select for both single and multiple selection. Based on this recommendation, it should use aria-selected for single selection and aria-checked for multiple selection.\r\n\r\n\r\n\r\n\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Start JAWS in a Windows machine.\r\n2. Go to https://material.angular.io/components/select/overview#select-multiple\r\n3. Select the multiple selection dropdown.\r\n4. Navigate through the options using the arrow keys.\r\n5. Select a few options.\r\n6. Navigate through selected and unselected options and check how the screen reader announces them.\r\n\n\n### Expected Behavior\n\nI expect screen readers to announce if an option is selected or unselected.\n\n### Actual Behavior\n\nJAWS only announces the status of an unselected option.\n\n### Environment\n\n- Angular: 15.2.9\r\n- CDK/Material: 15.2.9\r\n- Browser(s): Chrome 119.0.6045.199\r\n- Operating System: Windows 10 Enterprise\r\n","Url":"https://github.com/angular/components/issues/28214","RelatedDescription":"Open issue \"bug(mat-option): JAWS 2023 does not announce a checked option as selected in a multiple selection mat-select\" (#28214)"},{"Id":"2018889690","IsPullRequest":false,"CreatedAt":"2023-11-30T15:15:48","Actor":"sonallux","Number":"28213","RawContent":null,"Title":"bug(list): matListItemIcon color is wrong for disabled list items","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe color of `matListItemIcon` is wrong for disabled list items. It is different to the [list component from material-web](https://material-web.dev/components/list)\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ir6zfh?file=src%2Fexample%2Flist-overview-example.html\r\nSteps to reproduce:\r\n1. Hover over \"Item 2 (disabled)\"\r\n2. See the `matListItemIcon` changing its color\r\n\n\n### Expected Behavior\n\nThe color of the `matListItemIcon` stays constant if the list item is disabled.\n\n### Actual Behavior\n\nThe color of the `matListItemIcon` is changing.\n\n### Environment\n\nAngular CLI: 17.0.0\r\nNode: 18.18.0\r\nPackage Manager: yarn 1.22.19\r\nOS: linux x64\r\n\r\nAngular: 17.0.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router, ssr\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1700.0\r\n@angular-devkit/build-angular      17.0.0\r\n@angular-devkit/core               17.0.0\r\n@angular-devkit/schematics         17.0.0\r\n@angular/cdk                       17.0.1\r\n@angular/material                  17.0.1\r\n@angular/material-moment-adapter   17.0.1\r\n@schematics/angular                17.0.0\r\nrxjs                               7.4.0\r\ntypescript                         5.2.2\r\nzone.js                            0.14.0","Url":"https://github.com/angular/components/issues/28213","RelatedDescription":"Open issue \"bug(list): matListItemIcon color is wrong for disabled list items\" (#28213)"},{"Id":"2018861939","IsPullRequest":false,"CreatedAt":"2023-11-30T15:02:11","Actor":"bmayen","Number":"28212","RawContent":null,"Title":"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nNot sure if this is a regression or not\r\n\r\n### Description\r\n\r\nThe floating label transform is normally applied via the label `.mdc-floating-label--float-above` class. However, when matTextPrefix is used on the mat-form-field, the transform is instead applied to the `label` element itself via inline style attribute. This makes attaching custom styles to the floated label inconsistent since the inline style has higher specificity than `.mdc-floating-label--float-above` class. \r\n\r\n### Reproduction\r\n\r\nApply matTextPrefix to an outline mat-form-field with a mat-label. Observe how transform styling is applied inline to the label.\r\n\r\nhttps://components-issue-da4zuo.stackblitz.io/\r\n\r\n### Expected Behavior\r\n\r\nI would expect transform styling to be applied consistently via `.mdc-floating-label--float-above` class.\r\n\r\n### Actual Behavior\r\n\r\nTransform styling is applied via `.mdc-floating-label--float-above` class when matTextPrefix is not present, but applied via inline styling on the label element when matTextPrefix is present.\r\n\r\n### Environment\r\n\r\n- Angular: 16.x\r\n- CDK/Material: 16.x\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/28212","RelatedDescription":"Open issue \"bug(mat-form-field): When matTextPrefix is applied, float-above transform applied to label element instead of class\" (#28212)"},{"Id":"2018700189","IsPullRequest":false,"CreatedAt":"2023-11-30T13:43:19","Actor":"alex-waverley","Number":"28211","RawContent":null,"Title":"bug(Slider): Tooltip is not showed on thumb hover","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSlider component doesn't work properly in Safari after changing slider's value.\r\n\r\nhttps://github.com/angular/components/assets/84070515/186bb5cc-36bb-47d2-a7c1-8e86f9c5adc3\r\n\r\nReason: mat-slider-visual-thumb element is not getting `mdc-slider__thumb--with-indicator` css class on thumb hover \n\n### Reproduction\n\nSteps to reproduce:\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-2ytten?file=src%2Fapp%2Fexample-component.html\r\n1. hover thumb - tooltop is showed\r\n2. click on slider to change its value\r\n3. hover thumb - now tooltip is not showed\r\n\n\n### Expected Behavior\n\nTooltip must be always showed on thumb hover.\n\n### Actual Behavior\n\nTooltip is not showed on thumb hover after changing slider's value.\r\n\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser: Safari 16.6 (18615.3.12.11.2)\r\n- Operating System: macOS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/28211","RelatedDescription":"Open issue \"bug(Slider): Tooltip is not showed on thumb hover\" (#28211)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-07T03:30:02.4640128Z","RunDurationInMilliseconds":1550}