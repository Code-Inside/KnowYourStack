{"Data":{"Angular-Issues":{"Issues":[{"Id":"718905686","IsPullRequest":true,"CreatedAt":"2020-10-11T19:07:32","Actor":"bjarkler","Number":"39222","RawContent":null,"Title":"[tracking] Support Trusted Types in Angular","State":"open","Body":"Do not merge!\r\n\r\nThis is a tracking PR for initial support of Trusted Types in Angular. It consists of the following PRs:\r\n\r\n- #39207: create internal Trusted Types module\r\n- #39208: pass a Trusted Types policy to inert DOM builder\r\n- #39209: make development mode Trusted Types compatible\r\n- #39210: make JIT compiler Trusted Types compatible\r\n- #39211: promote constants in templates to Trusted Types\r\n- #39217: support passing Trusted Types around sanitization pipeline\r\n- #39218: convert legacy-sanitized values to Trusted Types\r\n- #39219: introduce TrustedSanitizer interface\r\n- #39221: promote i18n constants to Trusted Types\r\n\r\nIt also contains a commit that updates goldens for size constraints.\r\n\r\nSee the individual PRs for details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39222","RelatedDescription":"Open PR \"[tracking] Support Trusted Types in Angular\" (#39222)"},{"Id":"718893844","IsPullRequest":true,"CreatedAt":"2020-10-11T18:12:18","Actor":"bjarkler","Number":"39221","RawContent":null,"Title":"fix(core): promote i18n constants to Trusted Types","State":"open","Body":"When an attribute has a constant value that is marked for translation\r\n(i18n-attrName), a special variable is created in the `consts` array of\r\nthe compiled template. Since this is not a constant, it is not promoted\r\nto a Trusted Type by #39211, and can thus cause Trusted Types\r\nviolations. The same applies to constant attributes parsed out of\r\n(potentially translated) i18n ICU messages.\r\n\r\nAdd an implementation of a `SanitizerFn` that promotes strings directly to\r\nan appropriate Trusted Type without any sanitization.  Use this function to\r\npromote these constants directly to appropriate Trusted Types. Tree\r\nshakability is not a concern here since Trusted Types are already required\r\nfor i18n to work (#39208).\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [X] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39221","RelatedDescription":"Open PR \"fix(core): promote i18n constants to Trusted Types\" (#39221)"},{"Id":"718804769","IsPullRequest":false,"CreatedAt":"2020-10-11T10:16:52","Actor":"Amrender-Singh","Number":"39220","RawContent":null,"Title":"[IE11]: Checkbox state and ngModel binding not in sync on calling preventDefault inside click handler","State":"open","Body":"### Description\r\nCurrently in our application we have a checkbox with a ngModel binding and a click handler attached to it. We want our checkbox to be checked only if certain business logic is met. To prevent the checkbox from getting checked, we call the event.preventDefault() method inside of our click handler attached to our checkbox element. Though the preventDefault() prevents the checkbox from being checked, but in IE11 it can be observed that the ngModel binding is updated, i.e binded variable has default value set to false, the value now updates to true, but the checkbox state remains unchanged. Also, this can be observed only when we click on the checkbox for the first time, after that on clicking on the checkbox the value remains unchanged if we call preventDefault() method.\r\n\r\n### 🔬 Minimal Reproduction\r\nHere, is the plunker for the issue described above:\r\n\r\nhttps://plnkr.co/edit/J29x5S7TTKBjoSXt\r\n\r\n### Note\r\n on looking into the source code. It was found that currently for input checkboxes listen to the change event for model updates. Which can be seen here:\r\n\r\nhttps://github.com/angular/angular/blob/a84976fdfcde45adeba406be48ed979c2010ee57/packages/forms/src/directives/checkbox_value_accessor.ts#L45\r\n\r\nIt works fine in Chrome/firefox as the change event in these browser is triggered after the click event. So in case we call preventDefault() method in our click event handler the checkbox state is not changed . However in case of IE11 the change event is triggered before the click event.","Url":"https://github.com/angular/angular/issues/39220","RelatedDescription":"Open issue \"[IE11]: Checkbox state and ngModel binding not in sync on calling preventDefault inside click handler\" (#39220)"},{"Id":"718721258","IsPullRequest":true,"CreatedAt":"2020-10-10T23:21:54","Actor":"bjarkler","Number":"39219","RawContent":null,"Title":"feat(core): introduce TrustedSanitizer interface","State":"open","Body":"Create a new interface for sanitizers that support Trusted Types, called\r\nTrustedSanitizer. It is almost the same as the existing Sanitizer\r\ninterface, but lets the sanitize function return a Trusted Type in\r\naddition to string and null.\r\n\r\nAlso update Ivy's sanitization functions to pass sanitized values\r\nfrom TrustedSanitizers directly through.\r\n\r\nWhen an application provides a TrustedSanitizer, make Ivy and ViewEngine\r\nprefer it over any Sanitizer that has been provided. Update associated\r\ntypes to accommodate the new TrustedSanitizer interface.\r\n\r\nThis is based on #39218. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39219","RelatedDescription":"Open PR \"feat(core): introduce TrustedSanitizer interface\" (#39219)"},{"Id":"718720201","IsPullRequest":true,"CreatedAt":"2020-10-10T23:12:50","Actor":"bjarkler","Number":"39218","RawContent":null,"Title":"fix(core): convert legacy-sanitized values to Trusted Types","State":"open","Body":"When an application uses a custom sanitizer or one of the\r\nbypassSecurityTrust functions, Angular has no way of knowing whether\r\nthey are implemented in a secure way. (It doesn't even know if they're\r\nintroduced by the application or by a shady third-party dependency.)\r\nThus using Angular's main Trusted Types policy to bless values coming\r\nfrom these two sources would undermine the security that Trusted Types\r\nbrings.\r\n\r\nInstead, introduce a Trusted Types policy called\r\nangular#unsafe-legacy-bypass specifically for blessing values from these\r\nsources. (The term legacy is used as there will be a new way of\r\nimplementing sanitizers that support Trusted Types.) This allows an\r\napplication to enforce Trusted Types even when their sanitizer or\r\nbypassSecurityTrust function calls have not been migrated, knowing that\r\ncompromises to either of these two sources may lead to arbitrary script\r\nexecution.\r\n\r\nApplications that have migrated to the new Trusted Types compatible\r\nsanitizers should not allow the angular#unsafe-legacy-bypass policy.\r\n\r\nThis is based on #39217. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39218","RelatedDescription":"Open PR \"fix(core): convert legacy-sanitized values to Trusted Types\" (#39218)"},{"Id":"718718562","IsPullRequest":true,"CreatedAt":"2020-10-10T22:59:24","Actor":"bjarkler","Number":"39217","RawContent":null,"Title":"feat(core): support passing Trusted Types around sanitization pipeline","State":"open","Body":"Angular's sanitization pipeline is an application's last line of defence against XSS vulnerabilities. However, it currently outputs plain strings that are then passed to the DOM, where they may cause Trusted Types violations. As a step towards fixing that, make it possible to return Trusted Types from the sanitization pipeline.\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39217","RelatedDescription":"Open PR \"feat(core): support passing Trusted Types around sanitization pipeline\" (#39217)"},{"Id":"718688097","IsPullRequest":false,"CreatedAt":"2020-10-10T19:37:58","Actor":"gkalpak","Number":"39216","RawContent":null,"Title":"fix(dev-infra): ensure PRs targeting a specific branch are not merged into other branches","State":"open","Body":"In [pr/merge/defaults/labels.ts > getDefaultTargetLabelConfiguration()][1], there should be a check to ensure that we don't try to merge a PR to latest/rc/next branches if the PR is targeting a specific branch (for example, [here][2]).\r\n\r\nThis was originally discussed in https://github.com/angular/angular/pull/38656#discussion_r487779318.\r\n\r\n[1]: https://github.com/angular/angular/blob/a84976fdfcde45adeba406be48ed979c2010ee57/dev-infra/pr/merge/defaults/labels.ts#L30\r\n[2]: https://github.com/angular/angular/blob/a84976fdfcde45adeba406be48ed979c2010ee57/dev-infra/pr/merge/defaults/labels.ts#L62-L78","Url":"https://github.com/angular/angular/issues/39216","RelatedDescription":"Open issue \"fix(dev-infra): ensure PRs targeting a specific branch are not merged into other branches\" (#39216)"},{"Id":"718656142","IsPullRequest":true,"CreatedAt":"2020-10-10T16:37:24","Actor":"gkalpak","Number":"39215","RawContent":null,"Title":"docs: add linkable section about updating commit messages in `CONTRIBUTING.md`","State":"open","Body":"A common review request is updating the commit message of a commit. Since this is something that is not straight forward for inexperienced contributors, it is useful to be able to point a contributor to some docs outlining the process.\r\n\r\nThis commit adds such a section in `CONTRIBUTING.md` (as discussed in https://github.com/angular/angular/pull/39110#discussion_r499935502).\r\n","Url":"https://github.com/angular/angular/pull/39215","RelatedDescription":"Open PR \"docs: add linkable section about updating commit messages in `CONTRIBUTING.md`\" (#39215)"},{"Id":"718641244","IsPullRequest":true,"CreatedAt":"2020-10-10T15:18:20","Actor":"gkalpak","Number":"39214","RawContent":null,"Title":"build(docs-infra): upgrade cli command docs sources to d807b8240","State":"open","Body":"Updating [angular#master](https://github.com/angular/angular/tree/master) from [cli-builds#master](https://github.com/angular/cli-builds/tree/master).\n\n##\nRelevant changes in [commit range](https://github.com/angular/cli-builds/compare/7208ef964...d807b8240):\n\n**Modified**\n- help/new.json","Url":"https://github.com/angular/angular/pull/39214","RelatedDescription":"Open PR \"build(docs-infra): upgrade cli command docs sources to d807b8240\" (#39214)"},{"Id":"718630323","IsPullRequest":false,"CreatedAt":"2020-10-10T14:22:51","Actor":"r-shakeri","Number":"39213","RawContent":null,"Title":"Improve ControlValueAccessor","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n\r\n### Description\r\n<!-- ✍️--> Hello there, thank you for giving us `ControlValueAccessor` feature to use, i want to know is it possible to have more access on it in the future? like making a form with main implementation including main validators... with `ControlValueAccessor` and giving it more options like more validations in different parent forms. i mean giving additional validations or even accessible to enable/disable each `formControl` of `ControlValueAccessor` based on the parent form?\r\n\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> I made a basic `userForm` using `ControlValueAccessor` and use it in both `registerUserForm` and `updateUserForm`. both `registerUserForm` and `updateUserForm` have same validations and different ones, I put same ones in basic `userForm` and now for each different validation i want to set it from its parent form either `registerUserForm` or `updateUserForm`.\r\nalso i have the same senario for disabling inputs of `userForm` based on the parent form.","Url":"https://github.com/angular/angular/issues/39213","RelatedDescription":"Open issue \"Improve ControlValueAccessor\" (#39213)"},{"Id":"718593479","IsPullRequest":true,"CreatedAt":"2020-10-10T10:56:13","Actor":"crisbeto","Number":"39212","RawContent":null,"Title":"feat(core): add automated migration to replace async with waitForAsync","State":"open","Body":"Adds a migration that finds all imports and calls to the deprecated `async` function from `@angular/core/testing` and replaces them with `waitForAsync`.\r\n\r\nThese changes also move a bit of code out of the `Renderer2` migration so that it can be reused.","Url":"https://github.com/angular/angular/pull/39212","RelatedDescription":"Open PR \"feat(core): add automated migration to replace async with waitForAsync\" (#39212)"},{"Id":"718484186","IsPullRequest":true,"CreatedAt":"2020-10-10T00:08:06","Actor":"bjarkler","Number":"39211","RawContent":null,"Title":"fix(compiler): promote constants in templates to Trusted Types","State":"open","Body":"Angular treats constant values of attributes and properties in templates\r\nas secure. This means that these values are not sanitized, and are\r\ninstead passed directly to the corresponding setAttribute or setProperty\r\nfunction. In cases where the given attribute or property is\r\nsecurity-sensitive, this causes a Trusted Types violation.\r\n\r\nTo address this, functions for promoting constant strings to each of the\r\nthree Trusted Types are introduced to Angular's private codegen API. The\r\ncompiler is updated to wrap constant strings with calls to these\r\nfunctions as appropriate when constructing the `consts` array. This is\r\nonly done for security-sensitive attributes and properties, as\r\nclassified by Angular's dom_security_schema.\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39211","RelatedDescription":"Open PR \"fix(compiler): promote constants in templates to Trusted Types\" (#39211)"},{"Id":"718482033","IsPullRequest":true,"CreatedAt":"2020-10-09T23:58:51","Actor":"bjarkler","Number":"39210","RawContent":null,"Title":"fix(compiler): make JIT compiler Trusted Types compatible","State":"open","Body":"Introduce a Trusted Types policy for use by Angular's JIT compiler named\r\nangular#unsafe-jit. As the compiler turns arbitrary untrusted strings\r\ninto executable code at runtime, using Angular's main Trusted Types\r\npolicy does not seem appropriate, unless it can be ensured that the\r\nprovided strings are indeed trusted. Until then, this JIT policy can be\r\nallowed by applications that rely on the JIT compiler but want to\r\nenforce Trusted Types, knowing that a compromise of the JIT compiler can\r\nlead to arbitrary script execution. In particular, this is required for\r\nenabling Trusted Types in Angular unit tests, since they make use of the\r\nJIT compiler.\r\n\r\nSince the Trusted Types policies are defined in the core package, but\r\nthe JIT compiler is defined in the compiler package and used in the\r\nplatform-browser-dynamic package, some additional plumbing is introduced\r\nto propagate the Trusted Types policy to the compiler.\r\n\r\nThis is based on #39209. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39210","RelatedDescription":"Open PR \"fix(compiler): make JIT compiler Trusted Types compatible\" (#39210)"},{"Id":"718478058","IsPullRequest":true,"CreatedAt":"2020-10-09T23:41:52","Actor":"bjarkler","Number":"39209","RawContent":null,"Title":"fix(core): make development mode Trusted Types compatible","State":"open","Body":"Introduce a Trusted Types policy that is only available in development\r\nmode. It allows arbitrary unsafe conversions to Trusted Types to support\r\ndevelopment features.\r\n\r\nAddress a Trusted Types violation that occurs in createNamedArrayType\r\nduring development mode. Instead of passing strings directly to \"new\r\nFunction\", use the Trusted Types compatible function constructor exposed\r\nby the Trusted Types development policy.\r\n\r\nImplement a workaround to make \"new Function\" work with Trusted Types,\r\nas described here:\r\nhttps://github.com/w3c/webappsec-trusted-types/wiki/Trusted-Types-for-function-constructor\r\n\r\nThis is based on #39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39209","RelatedDescription":"Open PR \"fix(core): make development mode Trusted Types compatible\" (#39209)"},{"Id":"718475517","IsPullRequest":true,"CreatedAt":"2020-10-09T23:31:09","Actor":"bjarkler","Number":"39208","RawContent":null,"Title":"fix(core): pass a Trusted Types policy to inert DOM builder","State":"open","Body":"When Angular is used in an environment that enforces Trusted Types, the\r\ninert DOM builder raises a Trusted Types violation due to its use of\r\nDOMParser and element.innerHTML with plain strings. Indeed, depending on\r\nwhat is passed into the inert DOM builder and how its output is used,\r\nthis could be the cause of a XSS vulnerability.\r\n\r\nThere are legitimately safe uses of the inert DOM builder, such as with\r\nAngular's HTML sanitizer and its I18n/ICU message parser, neither of\r\nwhich uses the resulting DOM tree in a security sensitive manner.\r\n\r\nTo support such use cases in a manner that is compatible with Trusted\r\nTypes, the inert DOM builder is made to accept and use an optional\r\nTrusted Types policy for converting (potentially arbitrary) strings to\r\nTrustedHTML, before using the dangerous DOM APIs. The caller must thus\r\nprove that a particular use is safe by providing an appropriate policy.\r\n\r\nAs their use is safe, both the HTML sanitizer and the ICU message parser\r\nare updated to pass Angular's main Trusted Types policy to the inert DOM\r\nbuilder.\r\n\r\nThis is based on https://github.com/angular/angular/pull/39207. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39208","RelatedDescription":"Open PR \"fix(core): pass a Trusted Types policy to inert DOM builder\" (#39208)"},{"Id":"718470119","IsPullRequest":true,"CreatedAt":"2020-10-09T23:11:03","Actor":"bjarkler","Number":"39207","RawContent":null,"Title":"feat(core): create internal Trusted Types module","State":"open","Body":"Add a module that provides a [Trusted Types](https://web.dev/trusted-types/) policy for use internally by\r\nAngular. The policy is created lazily and stored in a module-local\r\nvariable. For now the module does not allow configuring custom policies\r\nor policy names, and instead creates its own policy with 'angular' as a\r\nfixed policy name. This is to more easily support tree-shakability.\r\n\r\nHelper functions for unsafely converting strings to each of the three\r\nTrusted Types are also introduced, with names that make it clear that\r\ntheir use requires a security review. When Trusted Types are not\r\navailable, these helper functions fall back to returning strings.\r\n\r\nThe TypeScript type definitions for Trusted Types is also added as\r\na dependency. See the individual commits for more details.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\nThis is part of an ongoing effort to add support for Trusted Types to Angular.","Url":"https://github.com/angular/angular/pull/39207","RelatedDescription":"Open PR \"feat(core): create internal Trusted Types module\" (#39207)"},{"Id":"718007478","IsPullRequest":false,"CreatedAt":"2020-10-09T21:23:47","Actor":"Totati","Number":"39194","RawContent":null,"Title":"feat(common): DatePipe default option(s) injection token ","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/common\r\n\r\n\r\n### Description\r\n<!-- ✍️-->There's no option for the DatePipe to override the default format: 'mediumDate', or set timezone with injection token.\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️-->  It would be really good to configure other attributes of the DatePipe with an injection than LOCALE. We use 'shortDate' format for 85% of the times (120/140) - 10% is 'short' and 5% is custom, never 'mediumDate', and we have to write it out every single time. \r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> I know we could extend the date pipe, and set it there, but then I should force our teem to use it against the built in one.\r\n","Url":"https://github.com/angular/angular/issues/39194","RelatedDescription":"Closed issue \"feat(common): DatePipe default option(s) injection token \" (#39194)"},{"Id":"718396765","IsPullRequest":true,"CreatedAt":"2020-10-09T20:13:15","Actor":"AntonioCardenas","Number":"39205","RawContent":null,"Title":"Spanish docs added","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nSpanish official documentation added \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nthis is possible thanks to the great work of the  [angularhispano community](https://github.com/angular-hispano/angular)","Url":"https://github.com/angular/angular/pull/39205","RelatedDescription":"Open PR \"Spanish docs added\" (#39205)"},{"Id":"718390811","IsPullRequest":true,"CreatedAt":"2020-10-09T20:01:09","Actor":"kapunahelewong","Number":"39204","RawContent":null,"Title":"docs: edit built-in directives doc","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/39204","RelatedDescription":"Open PR \"docs: edit built-in directives doc\" (#39204)"},{"Id":"718364547","IsPullRequest":true,"CreatedAt":"2020-10-09T19:08:54","Actor":"JiaLiPassion","Number":"39203","RawContent":null,"Title":"build(zone.js): zone.js should output esm format for fesm2015 bundles","State":"open","Body":"Zone.js support `Angular package format` since `0.11`, but the `fesm2015` bundles\r\nare not `esm` format, it still use `umd` bundle which is not correct, in this PR,\r\na new `esm` bundle output is added in `rollup_bundle` rule under `tools`, so\r\nzone.js can use the new rule to generate `esm` bundles.\r\n\r\nBefore this PR, `fesm2015/zone.js` is a `umd` bundle.\r\n\r\n```\r\n\r\n(function (factory) {\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    factory();\r\n}((function () { 'use strict';\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google LLC All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    const Zone$1 = (function (global) {\r\n        const performance = global['performance'];\r\n        ...\r\n```\r\n\r\nnow it is a `esm` bundle.\r\n\r\n```\r\nconst Zone$1 = (function (global) {\r\n    const performance = global['performance'];\r\n    ...\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/pull/39203","RelatedDescription":"Open PR \"build(zone.js): zone.js should output esm format for fesm2015 bundles\" (#39203)"},{"Id":"718341470","IsPullRequest":true,"CreatedAt":"2020-10-09T18:24:39","Actor":"atscott","Number":"39202","RawContent":null,"Title":"feat(language-service): implement go to definition for style and template urls","State":"open","Body":"…late urls\r\n\r\nThis commit enables the Ivy Language Service to \"go to definition\" of a\r\ntemplateUrl or styleUrl, which would jump to the template/style file\r\nitself.\r\n","Url":"https://github.com/angular/angular/pull/39202","RelatedDescription":"Open PR \"feat(language-service): implement go to definition for style and template urls\" (#39202)"},{"Id":"718336573","IsPullRequest":true,"CreatedAt":"2020-10-09T18:15:36","Actor":"gkalpak","Number":"39201","RawContent":null,"Title":"build(docs-infra): support passing args to `ng serve` via `serve-and-sync`","State":"open","Body":"When working on the docs, it is helpful to run a local instance of the angular.io app and run scripts that watch both the docs contents and the app build artifacts to automatically update the running instance on changes. Typically, this is achieved via the `start` and `docs-watch` npm scripts. As a convenience, one can run the `serve-and-sync` script, which runs both in one terminal.\r\n\r\nPreviously, it was not possible to pass arguments to `ng nerve` (which is what the `start` script runs under the hood) when running it via `serve-and-sync`.\r\n\r\nThis commit adds support for passing any arguments passed to `serve-and-sync` through to the `start` script. This can be useful for things like specifying a custom host or port.\r\n","Url":"https://github.com/angular/angular/pull/39201","RelatedDescription":"Open PR \"build(docs-infra): support passing args to `ng serve` via `serve-and-sync`\" (#39201)"},{"Id":"718278429","IsPullRequest":false,"CreatedAt":"2020-10-09T16:30:53","Actor":"bagatka","Number":"39200","RawContent":null,"Title":"Nested routing (poor docs)","State":"open","Body":"# 📚 Docs extension \r\n\r\n### Description\r\n\r\nI had to make nested routing. But there is no such information in docs.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/api/router/Route#lazy-loading\r\n\r\n### Reproduction Steps**\r\n\r\nThe hole app is based on routing. Every page is shown via `<router-outlet></router-outlet>`\r\nI had to apply `<router-outlet></router-outlet>` inside the component, that already shown via `<router-outlet></router-outlet>`\r\nI could make it with the only one `<router-outlet></router-outlet>`, but it will cause repetition code and the component will be reloaded each `routerLink` click.\r\n\r\n## 📷Screenshot\r\n\r\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/45293863/95606967-c0588980-0a63-11eb-98ad-c77279b121e9.gif)\r\n\r\nMenu (one the left) is the first `<router-outlet></router-outlet>`\r\nSelected menu item (one the right) is nested `<router-outlet></router-outlet>`.\r\n\r\n## Code\r\n\r\nThis solved the task. Maybe, it's possible to add something like that in docs. Something like a small example for developers.\r\n\r\n### app-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: 'admin', loadChildren: () => import(`./admin-control-screen/admin-control-screen-routing.module`)\r\n      .then(m => m.AdminControlScreenRoutingModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {enableTracing: false})],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n### admin-control-screen-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminControlScreenComponent, children: [\r\n      {\r\n        path: 'films',\r\n        loadChildren: () => import(`./admin-films/admin-films-routing.module`).then(m => m.AdminFilmsRoutingModule)\r\n      },\r\n      {\r\n        path: 'cinemas',\r\n        loadChildren: () => import(`./admin-cinemas/admin-cinemas-routing.module`).then(m => m.AdminCinemasRoutingModule)\r\n      },\r\n      {\r\n        path: 'shows',\r\n        loadChildren: () => import(`./admin-shows/admin-shows-routing.module`).then(m => m.AdminShowsRoutingModule)\r\n      },\r\n      {\r\n        path: 'services',\r\n        loadChildren: () => import(`./admin-services/admin-services-routing.module`).then(m => m.AdminServicesRoutingModule)\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n### admin-cinemas-routing.module.ts\r\n```ts\r\n...\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminCinemasComponent, children: [\r\n      {path: 'add', component: AdminAddCinemaComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n...\r\n```\r\n\r\n## 🌍  Code example (at the moment of issue creation in user-and-admin-pages-upgrade branch)\r\n\r\nhttps://github.com/bagatka/Cinema","Url":"https://github.com/angular/angular/issues/39200","RelatedDescription":"Open issue \"Nested routing (poor docs)\" (#39200)"},{"Id":"718237247","IsPullRequest":false,"CreatedAt":"2020-10-09T15:28:29","Actor":"infacto","Number":"39199","RawContent":null,"Title":"Wrong order of style-tags in head-tag in a multi-app repo.","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nI think it's about the compiler or any other related package which handles the style-tag order.\r\n\r\n\r\n### Description\r\n\r\nI have to Angular project. A default build and a multi-project one.\r\nBoth has the same setup. In this case it uses Ionic. But this does not matter. I use the Angular CLI for builds.\r\nThe `angular.json` is the same. Execpt of the path of course. (And some missing e2e and unit test. Nothing related.)\r\n\r\nBoth repos works great. But on runtime, I found some weird issues. The order of style-tags are different in html-head.\r\nThe order of the multi-app one is not correct. Please read on ...\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nA Stackblitz example is not possible in this case. Please download the zip repos. (click on the link in the header of the table.)\r\n\r\n**Style-Tags**\r\nThe following is a table with the order of all style-tags and a short code snippet inside. The style-tags itself have no id. So, only the code snippet can identify it. (remeber: click on the header link to download the related repo.)\r\n\r\n| [Working Demo](https://github.com/ionic-team/ionic-framework/files/5345465/issue-demo-2.zip)<br/><small>(Click to download)</small>                                 | [Problem Demo](https://github.com/ionic-team/ionic-framework/files/5339318/issue-demo.zip)<br/><small>(Click to download)</small>                                 |\r\n| -------------------------------------------- | -------------------------------------------- |\r\n| **1** (data-styles) `ion-select-popover` ... | **1** (data-styles) `ion-select-popover` ... |\r\n| **2** `html.plt-mobile ion-app` ...          | **7** `:root { --ion-color-primary` ...      |\r\n| **3** `ion-header` ...                       | **8** `// App Global CSS` ... `html.ios` ... |\r\n| **4** `ion-list` ...                         | **2** `html.plt-mobile ion-app` ...          |\r\n| **5** `ion-item-group` ...                   | **3** `ion-header` ...                       |\r\n| **6** `.sc-ion-buttons-md-h` ...             | **6** `.sc-ion-buttons-md-h` ...             |\r\n| **7** `:root { --ion-color-primary` ...      | **4** `ion-list` ...                         |\r\n| **8** `// App Global CSS` ... `html.ios` ... | **5** `ion-item-group` ...                   |\r\n\r\n(In the working demo, you may see other versions of the dependency. Sorry for that. But it does not matter. You can update it if you want. It will not change / fix the problem.)\r\n\r\n## 🔥 Exception or Error\r\nYou can see that the number `8` is loaded before number `4`. The order is wrong. How to ensure the correct order? The setup is similar. I don't see any related problem. The official Angular multi-app repo does not work. It should have the same order as the working demo.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version (Problem Repo / Multi-App):**\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 10.22.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      3.9.7\r\n</code></pre>\r\n\r\n**Angular Version (Working Repo / Single-App):**\r\n\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 10.22.0\r\nOS: win32 x64\r\n\r\nAngular: 10.1.5\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      3.9.7\r\n</code></pre>\r\n\r\n(The same; Versions of my current repo on local machine. The zip-repo attachment may differ. Proof that it is irrelevant.)\r\n\r\n**Anything else relevant?**\r\nI use the latest Chrome and Chromium browser with dev-tools. You can check the style-tags in head-tag. The order is different. I cannot find the problem. I guess a bug in Angular...\r\n\r\nPlease also see: https://github.com/ionic-team/ionic-framework/issues/22266\r\nHere you can see a use case of the problem.","Url":"https://github.com/angular/angular/issues/39199","RelatedDescription":"Open issue \"Wrong order of style-tags in head-tag in a multi-app repo.\" (#39199)"},{"Id":"718098716","IsPullRequest":false,"CreatedAt":"2020-10-09T13:00:40","Actor":"acalvo","Number":"39198","RawContent":null,"Title":"`ng xi18n` duplicating strings in HTML & TS","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nNo (AFAIK)\r\n\r\n\r\n### Description\r\n\r\nIf you have the same string twice in HTML templates (ex. `<span i18n>Some string</span>`), `ng xi18n --ivy` extracts it once. That's OK. But if you have that same string in a TS file (i.e., ``$localize`Some string` ``), its extracted twice (with different IDs) when running `ng xi18n --ivy`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xliff version=\"1.2\" xmlns=\"urn:oasis:names:tc:xliff:document:1.2\">\r\n  <file source-language=\"en-US\" datatype=\"plaintext\" original=\"ng2.template\">\r\n    <body>\r\n      <trans-unit id=\"8321000940098097247\" datatype=\"html\">\r\n        <source>Some text</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.ts</context>\r\n          <context context-type=\"linenumber\">10</context>\r\n        </context-group>\r\n      </trans-unit>\r\n      <trans-unit id=\"5dbba0a3da8dff890e20cf76eb075d58900fbcd3\" datatype=\"html\">\r\n        <source>Some text</source>\r\n        <context-group purpose=\"location\">\r\n          <context context-type=\"sourcefile\">src/app/app.component.html</context>\r\n          <context context-type=\"linenumber\">334</context>\r\n        </context-group>\r\n      </trans-unit>\r\n    </body>\r\n  </file>\r\n</xliff>\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nRepo: https://github.com/acalvo/ng-xi18n-dup\r\n\r\nSee this commit (over a clean `ng new` project): https://github.com/acalvo/ng-xi18n-dup/commit/cf72e7795069811712c9340382cf29d8d1275d36\r\n\r\n## 🔥 Exception or Error\r\n\r\nNot an error, just dup strings in the resulting XLF file.\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 10.1.6\r\nNode: 12.2.0\r\nOS: darwin x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nNope.","Url":"https://github.com/angular/angular/issues/39198","RelatedDescription":"Closed issue \"`ng xi18n` duplicating strings in HTML & TS\" (#39198)"},{"Id":"718022415","IsPullRequest":false,"CreatedAt":"2020-10-09T12:34:21","Actor":"Rogier-blip","Number":"39196","RawContent":null,"Title":"feat(cli): Use Classname.name in describe of spec files instead of 'Classname'","State":"closed","Body":"# 🚀 feature request\r\nWhen a spec file is generated by the CLI use Classname.name instead of the 'Classname'.\r\n\r\n### Relevant Package\r\n@angular/cli\r\n\r\n### Description\r\nIt would be nice if the spec files would be generated in a way that makes them adaptable to change.\r\n\r\nIf a test is generated by the CLI the initial `describe` looks like this:\r\n```typescript\r\n...\r\ndescribe('AppComponent', () => {\r\n...\r\n``` \r\n\r\nWhen I change the name of the app component from `AppComponent` to `AppComponent1`. I have to change the name of the test by hand. \r\n\r\n### Describe the solution you'd like\r\nThe solution that I have in mind is to use the .name property of the typescript class. The describe would have the following structure. \r\n\r\n```typescript\r\n...\r\ndescribe(AppComponent.name, () => {\r\n...\r\n```\r\nNow when the AppComponent name is changed through an IDE. The test name is automatically changed.\r\n\r\nCheers 🐵","Url":"https://github.com/angular/angular/issues/39196","RelatedDescription":"Closed issue \"feat(cli): Use Classname.name in describe of spec files instead of 'Classname'\" (#39196)"},{"Id":"718043572","IsPullRequest":false,"CreatedAt":"2020-10-09T12:08:13","Actor":"SuperDeveloper10","Number":"39197","RawContent":null,"Title":"ngOnChange doesn't work well.","State":"closed","Body":"ngOnChange , it has serious problem.\r\nI worked with log. but it show different result in two lines.\r\n ","Url":"https://github.com/angular/angular/issues/39197","RelatedDescription":"Closed issue \"ngOnChange doesn't work well.\" (#39197)"},{"Id":"718021045","IsPullRequest":false,"CreatedAt":"2020-10-09T10:05:47","Actor":"petebacondarwin","Number":"39195","RawContent":null,"Title":"i18n: localize message extraction producing incorrect `equiv-text` values","State":"open","Body":"(See https://github.com/angular/angular/issues/38711#issuecomment-706079727 for original report)\r\n\r\nExtraction of i18n messages from the following template HTML:\r\n\r\n```html\r\n<ng-container i18n=\"Update @@update\"> <b>{{value1}}:</b> current {{value2}} to new {{value3}} </ng-container>\r\n```\r\n\r\n**Without ivy:** (ctype attributes removed for clarity)\r\n```xml\r\n<source>\r\n  <x id=\"START_BOLD_TEXT\" equiv-text=\"&lt;b&gt;\"/>\r\n  <x id=\"INTERPOLATION\" equiv-text=\"{{value1}}\"/>:\r\n  <x id=\"CLOSE_BOLD_TEXT\" equiv-text=\"&lt;/b&gt;\"/> current\r\n  <x id=\"INTERPOLATION_1\" equiv-text=\"{{value2}}\"/> to new\r\n  <x id=\"INTERPOLATION_2\" equiv-text=\"{{value3}}\"/>\r\n</source>\r\n```\r\n\r\n**With ivy:**\r\n```xml\r\n<source>\r\n  <x id=\"START_BOLD_TEXT\" equiv-text=\"&lt;b&gt;{{value1}}\"/>\r\n  <x id=\"INTERPOLATION\" equiv-text=\"{{value1}}\"/>:\r\n  <x id=\"CLOSE_BOLD_TEXT\" equiv-text=\"&lt;/b&gt; \"/> current\r\n  <x id=\"INTERPOLATION_1\" equiv-text=\"{value2}} \"/> to new\r\n  <x id=\"INTERPOLATION_2\" equiv-text=\"{value3}} \"/>\r\n</source>\r\n```\r\n\r\nIt seems that there is some offsetting going on, which is making the start and end points in the equiv-text appear in the wrong place. I'll need to debug into this but since these equiv-text attributes are primarily to aid the translator's job, it will not be high on my priority list. Hopefully I can take a look at it later next week or the week after.\r\n","Url":"https://github.com/angular/angular/issues/39195","RelatedDescription":"Open issue \"i18n: localize message extraction producing incorrect `equiv-text` values\" (#39195)"},{"Id":"717995249","IsPullRequest":false,"CreatedAt":"2020-10-09T09:25:17","Actor":"fireflysemantics","Number":"39193","RawContent":null,"Title":"Automatically add URL parameters to lazy loaded ActivateRoute instances","State":"open","Body":"If we look at the Angular Material Documentation components we see that URL parameters for lazy loaded routes are accessed like this:\r\n\r\nhttps://github.com/angular/material.angular.io/blob/master/src/app/pages/component-category-list/component-category-list.ts\r\n\r\n```\r\n    // Combine params from all of the path into a single object.\r\n    this.params = combineLatest(\r\n      this._route.pathFromRoot.map(route => route.params),\r\n      Object.assign);\r\n```\r\n\r\nThat's because lazy loaded routes don't receive the URL parameters, so we have to collapse the URL parameters from the `ActivateRoute` instances.\r\n\r\nIt would be nice if the router did this automatically.","Url":"https://github.com/angular/angular/issues/39193","RelatedDescription":"Open issue \"Automatically add URL parameters to lazy loaded ActivateRoute instances\" (#39193)"},{"Id":"717875798","IsPullRequest":false,"CreatedAt":"2020-10-09T07:02:02","Actor":"roykathurima","Number":"39191","RawContent":null,"Title":"ERROR NullInjectorError: StaticInjectorError(AppModule)[RouterScroller -> ViewportScroller]: Angular 6","State":"closed","Body":"\r\nHello... my project builds without any errors but a few warnings as you can see below...\r\n![UA1](https://user-images.githubusercontent.com/31662354/95548186-3b428580-0a0d-11eb-9636-62e9de91c379.PNG)\r\n\r\nHowever, when I open the it on the browser, it shows a blank page with the following error in the console...\r\n![UA2](https://user-images.githubusercontent.com/31662354/95548190-3d0c4900-0a0d-11eb-9a20-511dbbf55374.PNG)\r\n\r\nThis is my package.json file...\r\n\r\n{\r\n  \"name\": \"ultra-agent-app\",\r\n  \"version\": \"1.0.0\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"start\": \"ng serve\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\",\r\n    \"postinstall\": \"ngcc\"\r\n  },\r\n  \"private\": true,\r\n  \"engines\": {\r\n    \"node\": \">6.9.4\",\r\n    \"npm\": \">4.2.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@agm/core\": \"^1.0.0-beta.5\",\r\n    \"@angular/animations\": \"^6.1.9\",\r\n    \"@angular/cdk\": \"^6.4.7\",\r\n    \"@angular/common\": \"^6.0.0-rc.1\",\r\n    \"@angular/compiler\": \"^10.0.11\",\r\n    \"@angular/compiler-cli\": \"^10.0.11\",\r\n    \"@angular/core\": \"^10.1.5\",\r\n    \"@angular/forms\": \"^6.0.0-rc.1\",\r\n    \"@angular/http\": \"^6.0.0-rc.1\",\r\n    \"@angular/material\": \"^6.4.7\",\r\n    \"@angular/platform-browser\": \"^6.0.0-rc.1\",\r\n    \"@angular/platform-browser-dynamic\": \"^6.0.0-rc.1\",\r\n    \"@angular/router\": \"^6.0.0-rc.1\",\r\n    \"angular-star-rating\": \"^4.0.0-beta.3\",\r\n    \"angularfire2\": \"^5.0.2\",\r\n    \"bootstrap\": \"^4.5.2\",\r\n    \"chart.js\": \"^2.9.3\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"css-star-rating\": \"^1.2.4\",\r\n    \"firebase\": \"^7.22.0\",\r\n    \"html2canvas\": \"^1.0.0-alpha.12\",\r\n    \"jquery\": \"^3.5.1\",\r\n    \"jspdf\": \"^1.4.1\",\r\n    \"ng-pick-datetime\": \"^6.0.16\",\r\n    \"ng2-charts\": \"^2.2.3\",\r\n    \"ngx-embed-video\": \"^0.3.0\",\r\n    \"ngx-material-timepicker\": \"^2.8.3\",\r\n    \"popper\": \"^1.0.1\",\r\n    \"popper.js\": \"^1.16.1\",\r\n    \"rxjs\": \"^6.3.3\",\r\n    \"rxjs-compat\": \"^6.3.3\",\r\n    \"typescript\": \"^4.0.2\",\r\n    \"zone.js\": \"^0.8.24\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^0.12.4\",\r\n    \"@angular-devkit/schematics\": \"^10.0.7\",\r\n    \"@angular/cli\": \"~6.0.0-rc.4\",\r\n    \"@angular/language-service\": \"^6.0.0-rc.1\",\r\n    \"@types/jasmine\": \"~2.8.6\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"~8.9.4\",\r\n    \"codelyzer\": \"~4.2.1\",\r\n    \"jasmine-core\": \"~2.99.1\",\r\n    \"jasmine-spec-reporter\": \"~4.2.1\",\r\n    \"karma\": \"~1.7.1\",\r\n    \"karma-chrome-launcher\": \"~2.2.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~1.4.2\",\r\n    \"karma-jasmine\": \"~1.1.1\",\r\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\r\n    \"protractor\": \"~5.3.0\",\r\n    \"ts-node\": \"~5.0.1\",\r\n    \"tslint\": \"~5.9.1\"\r\n  }\r\n}\r\n\r\n\r\nWhat could be the issue....\r\n\r\n","Url":"https://github.com/angular/angular/issues/39191","RelatedDescription":"Closed issue \"ERROR NullInjectorError: StaticInjectorError(AppModule)[RouterScroller -> ViewportScroller]: Angular 6\" (#39191)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"718984595","IsPullRequest":false,"CreatedAt":"2020-10-12T01:59:37","Actor":"prabh-62","Number":"19050","RawContent":null,"Title":"[Docs] Debug Angular CLI TS code","State":"open","Body":"As per the instructions in article https://github.com/angular/angular-cli/blob/master/packages/angular/cli/README.md#debugging-with-vs-code , I was trying to debug angular CLI TS codebase. However, VSCode debugger errors out on startup\r\n\r\n<img width=\"1381\" alt=\"ng_debug\" src=\"https://user-images.githubusercontent.com/13006107/95697295-43b4df00-0c0c-11eb-9e85-8eb6b2b77b3b.png\">\r\n\r\n```\r\nDebugger attached.\r\nWaiting for the debugger to disconnect...\r\ninternal/modules/cjs/loader.js:311\r\n      throw err;\r\n      ^\r\n\r\nError: Cannot find module '/Users/dev/work/tmp/angular-cli/node_modules/@angular-devkit/core/src/index.js'. Please verify that the package.json has a valid \"main\" entry\r\n    at tryPackage (internal/modules/cjs/loader.js:303:19)\r\n    at Function.Module._findPath (internal/modules/cjs/loader.js:516:18)\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:867:27)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:725:27)\r\n    at Module.require (internal/modules/cjs/loader.js:952:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at Object.<anonymous> (/Users/dev/work/tmp/angular-cli/dist/@angular/cli/utilities/config.js:11:16)\r\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\r\n    at Module.load (internal/modules/cjs/loader.js:928:32) {\r\n  code: 'MODULE_NOT_FOUND',\r\n  path: '/Users/dev/work/tmp/angular-cli/node_modules/@angular-devkit/core/package.json',\r\n  requestPath: '@angular-devkit/core'\r\n}\r\n```\r\n\r\nAlso, the docs mention that one could add breakpoints to files under `dist/@angular` folder. Can we also add breakpoints to uncompiled TS code?  \r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19050","RelatedDescription":"Open issue \"[Docs] Debug Angular CLI TS code\" (#19050)"},{"Id":"718891641","IsPullRequest":true,"CreatedAt":"2020-10-11T18:02:16","Actor":"clydin","Number":"19049","RawContent":null,"Title":"fix(@angular-devkit/build-optimizer): increase safety of code removal","State":"open","Body":"This change lowers the potential for code to be errantly removed by the prefix functions and scrub file transformers.  Only known safe modules are used with the prefix functions transformer as it can easily remove required module level side effects (as opposed to global level side effects) such as `__decorate` calls.\r\nThe scrub file transformer will now keep parameter metadata if non-Angular decorators are present. This allows libraries that use that information to continue to function.\r\n\r\nCloses #14033","Url":"https://github.com/angular/angular-cli/pull/19049","RelatedDescription":"Open PR \"fix(@angular-devkit/build-optimizer): increase safety of code removal\" (#19049)"},{"Id":"718881804","IsPullRequest":true,"CreatedAt":"2020-10-11T17:11:28","Actor":"Jefiozie","Number":"19048","RawContent":null,"Title":"feat(@schematics/angular): add generation for resolvers","State":"open","Body":"This will add the `resolvers` as an option to generate. \r\nYou can use it by `ng g r <name> ` or `ng generate resolver <name> `  \r\n\r\ncloses: #17569","Url":"https://github.com/angular/angular-cli/pull/19048","RelatedDescription":"Open PR \"feat(@schematics/angular): add generation for resolvers\" (#19048)"},{"Id":"718818181","IsPullRequest":true,"CreatedAt":"2020-10-11T13:35:20","Actor":"guiseek","Number":"19047","RawContent":null,"Title":"fix: @angular/cli web worker schematic","State":"closed","Body":"web worker schematics are missing base suffix in tsconfig","Url":"https://github.com/angular/angular-cli/pull/19047","RelatedDescription":"Closed or merged PR \"fix: @angular/cli web worker schematic\" (#19047)"},{"Id":"718703194","IsPullRequest":true,"CreatedAt":"2020-10-11T09:43:49","Actor":"renovate[bot]","Number":"19045","RawContent":null,"Title":"build: update webpack to version ^5.0.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack](https://togithub.com/webpack/webpack) | peerDependencies | major | [`^4.0.0` -> `^5.0.0`](https://renovatebot.com/diffs/npm/webpack/4.44.2/5.0.0) |\n| [webpack](https://togithub.com/webpack/webpack) | devDependencies | major | [`4.44.2` -> `5.0.0`](https://renovatebot.com/diffs/npm/webpack/4.44.2/5.0.0) |\n| [webpack](https://togithub.com/webpack/webpack) | dependencies | major | [`4.44.2` -> `5.0.0`](https://renovatebot.com/diffs/npm/webpack/4.44.2/5.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v5.0.0`](https://togithub.com/webpack/webpack/releases/v5.0.0)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v4.44.2...v5.0.0)\n\n[Announcement and changelog](https://webpack.js.org/blog/2020-10-10-webpack-5-release/)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19045","RelatedDescription":"Closed or merged PR \"build: update webpack to version ^5.0.0\" (#19045)"},{"Id":"718726166","IsPullRequest":false,"CreatedAt":"2020-10-11T00:19:23","Actor":"biolauri","Number":"19046","RawContent":null,"Title":"Export build-schema script in @angular-devkit/schematics","State":"closed","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n\r\nThe script `build-schema.ts` in _scripts/_ is very handy for generating the necessary TypeScript interfaces for the schematic function from the corresponding `schema.json`. Currently, it's not exported, so for own/custom schematics, one has to write the type theirself and keep it in sync with the schema.\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nI'd like request to provide the `build-schema.ts` file/default exported function as a public API in `@angular-devkit/schematics` to be able to use it in custom written schematics.\r\n\r\n### Describe alternatives you've considered\r\n\r\nCurrently, we've got only these two solutions:\r\n* Re-write the logic of `build-schema.ts` ourselves\r\n* Manually write the type/interface ourselves and add some checkers to guarantee it's in sync with the corresponding schema","Url":"https://github.com/angular/angular-cli/issues/19046","RelatedDescription":"Closed issue \"Export build-schema script in @angular-devkit/schematics\" (#19046)"},{"Id":"718670647","IsPullRequest":false,"CreatedAt":"2020-10-10T18:19:35","Actor":"grant77","Number":"19043","RawContent":null,"Title":"Breakpoints do not work with Multi-Project Workspace","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Description\r\n\r\nBreakpoints do not work when using the \"Multi-Project Workspace\" setup.  I am familiar with the \"sourceMapPathOverrides\" that I discovered from https://github.com/angular/angular-cli/issues/2453.  Unfortunately, this hack can only be used with \"VSCode + Chrome + msjsdiag.debugger-for-chrome extension\".  \r\n\r\nIf you are not using this environment, you are screwed.  Even if you are using that environment, you should not have to do this. \r\n The paths should be correct to begin with.  I came up with a custom workaround, but I would rather not have to mess with webpack via @angular-builders/custom-webpack.  My workaround is at bottom of this report (scroll down a little).\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. ng new my-workspace --createApplication=false\r\n2. cd my-workspace\r\n3. ng g application my-app --routing=false --style=scss\r\n4. ng serve\r\n5. Open my-workspace folder with VSCode (or anything else).\r\n6. Set breakpoint anywhere. \r\n7. Run\r\n8. Breakpoint does not get hit 😡 \r\n\r\n## 🌍 Your Environment\r\n<pre><code>Angular CLI: 10.1.6\r\nNode: 13.10.1\r\nOS: win32 x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1001.6\r\n@angular-devkit/build-angular   0.1001.6\r\n@angular-devkit/core            10.1.6\r\n@angular-devkit/schematics      10.1.6\r\n@angular/cli                    10.1.6\r\n@schematics/angular             10.1.6\r\n@schematics/update              0.1001.6\r\nng-packagr                      10.1.2\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3</code></pre>\r\n\r\n## 🤘  Workaround\r\n\r\n1. npm i @angular-builders/custom-webpack --save-dev\r\n2. Add a webpack.config.js file in the root of workspace that looks like this:\r\n```\r\nmodule.exports = {\r\n    context: __dirname\r\n}\r\n```\r\n3. Open angular.json\r\n4. Find \"projects/my-app/architect/build\" and replace the builder with \"@angular-builders/custom-webpack:browser\" and add a \"customWebpackConfig\" option that looks like this:\r\n```\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-builders/custom-webpack:browser\",\r\n          \"options\": {\r\n            \"customWebpackConfig\": {\r\n              \"path\": \"./webpack.config.js\"\r\n            },\r\n            ...\r\n```\r\n5. Replace value of \"projects/my-app/architect/serve/builder\" from \"@angular-devkit/build-angular:dev-server\" to \"@angular-builders/custom-webpack:dev-server\".\r\n6. ng serve\r\n7. Now breakpoints work!!  😄 \r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19043","RelatedDescription":"Closed issue \"Breakpoints do not work with Multi-Project Workspace\" (#19043)"},{"Id":"718672738","IsPullRequest":true,"CreatedAt":"2020-10-10T18:08:30","Actor":"renovate[bot]","Number":"19044","RawContent":null,"Title":"build: update ajv to version 6.12.6","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [ajv](https://togithub.com/ajv-validator/ajv) | dependencies | patch | [`6.12.5` -> `6.12.6`](https://renovatebot.com/diffs/npm/ajv/6.12.5/6.12.6) |\n| [ajv](https://togithub.com/ajv-validator/ajv) | devDependencies | patch | [`6.12.5` -> `6.12.6`](https://renovatebot.com/diffs/npm/ajv/6.12.5/6.12.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>ajv-validator/ajv</summary>\n\n### [`v6.12.6`](https://togithub.com/ajv-validator/ajv/releases/v6.12.6)\n\n[Compare Source](https://togithub.com/ajv-validator/ajv/compare/v6.12.5...v6.12.6)\n\nFix performance issue of \"url\" format.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19044","RelatedDescription":"Open PR \"build: update ajv to version 6.12.6\" (#19044)"},{"Id":"718584999","IsPullRequest":true,"CreatedAt":"2020-10-10T10:07:25","Actor":"renovate[bot]","Number":"19042","RawContent":null,"Title":"build: update style-loader to version 2.0.0","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [style-loader](https://togithub.com/webpack-contrib/style-loader) | dependencies | major | [`1.3.0` -> `2.0.0`](https://renovatebot.com/diffs/npm/style-loader/1.3.0/2.0.0) |\n| [style-loader](https://togithub.com/webpack-contrib/style-loader) | devDependencies | major | [`1.3.0` -> `2.0.0`](https://renovatebot.com/diffs/npm/style-loader/1.3.0/2.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/style-loader</summary>\n\n### [`v2.0.0`](https://togithub.com/webpack-contrib/style-loader/blob/master/CHANGELOG.md#&#8203;200-httpsgithubcomwebpack-contribstyle-loadercomparev130v200-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/style-loader/compare/v1.3.0...v2.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   minimum supported `Node.js` version is `10.13.0`\n-   the `esModule` option is `true` by default, you need to change `const locals = require('./styles.css')`/`require('./styles.css')` on `import locals from './styles.css'`/`import './styles.css''` ([#&#8203;489](https://togithub.com/webpack-contrib/style-loader/issues/489)) ([727a24d](https://togithub.com/webpack-contrib/style-loader/commit/727a24d173a4d71a4100ffc2a37ab6c6684a6301))\n-   removed support for loaders returning `String` instead of `Array` ([#&#8203;491](https://togithub.com/webpack-contrib/style-loader/issues/491)) ([7a0ce4c](https://togithub.com/webpack-contrib/style-loader/commit/7a0ce4cfd19a2be6ad8ffe274d38618a77b22199))\n\n##### ⚠ NOTICE\n\nTo avoid problems between `style-loader` and `mini-css-extract-plugin` because of changing the `esModule` option to `true` by default we strongly recommend upgrading `mini-css-extract-plugin` to `1.0.0` version.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19042","RelatedDescription":"Open PR \"build: update style-loader to version 2.0.0\" (#19042)"},{"Id":"718575040","IsPullRequest":true,"CreatedAt":"2020-10-10T09:49:42","Actor":"renovate[bot]","Number":"19040","RawContent":null,"Title":"build: update mini-css-extract-plugin to version 1.0.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | dependencies | major | [`0.11.3` -> `1.0.0`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/0.11.3/1.0.0) |\n| [mini-css-extract-plugin](https://togithub.com/webpack-contrib/mini-css-extract-plugin) | devDependencies | major | [`0.11.3` -> `1.0.0`](https://renovatebot.com/diffs/npm/mini-css-extract-plugin/0.11.3/1.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/mini-css-extract-plugin</summary>\n\n### [`v1.0.0`](https://togithub.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md#&#8203;100-httpsgithubcomwebpack-contribmini-css-extract-plugincomparev0120v100-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/mini-css-extract-plugin/compare/v0.12.0...v1.0.0)\n\n### [`v0.12.0`](https://togithub.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md#&#8203;0120-httpsgithubcomwebpack-contribmini-css-extract-plugincomparev0113v0120-2020-10-07)\n\n[Compare Source](https://togithub.com/webpack-contrib/mini-css-extract-plugin/compare/v0.11.3...v0.12.0)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19040","RelatedDescription":"Closed or merged PR \"build: update mini-css-extract-plugin to version 1.0.0\" (#19040)"},{"Id":"718579754","IsPullRequest":true,"CreatedAt":"2020-10-10T09:38:02","Actor":"alan-agius4","Number":"19041","RawContent":null,"Title":"Revert \"test(@angular/cli): disable Webpack 5 e2e tests\"","State":"open","Body":"Reverts angular/angular-cli#18987\r\n\r\nTslib 2.0.3 works-around this issue.\r\n\r\nFull discussion here: https://github.com/webpack/webpack/issues/11613","Url":"https://github.com/angular/angular-cli/pull/19041","RelatedDescription":"Open PR \"Revert \"test(@angular/cli): disable Webpack 5 e2e tests\"\" (#19041)"},{"Id":"718574340","IsPullRequest":true,"CreatedAt":"2020-10-10T09:07:47","Actor":"renovate[bot]","Number":"19039","RawContent":null,"Title":"build: update tslib to version 2.0.3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [tslib](https://www.typescriptlang.org/) ([source](https://togithub.com/Microsoft/tslib)) | dependencies | patch | [`2.0.2` -> `2.0.3`](https://renovatebot.com/diffs/npm/tslib/2.0.2/2.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>Microsoft/tslib</summary>\n\n### [`v2.0.3`](https://togithub.com/Microsoft/tslib/releases/2.0.3)\n\n[Compare Source](https://togithub.com/Microsoft/tslib/compare/2.0.2...2.0.3)\n\nFull discussion in the [webpack issue](https://togithub.com/webpack/webpack/issues/11613)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19039","RelatedDescription":"Open PR \"build: update tslib to version 2.0.3\" (#19039)"},{"Id":"718564147","IsPullRequest":true,"CreatedAt":"2020-10-10T08:11:13","Actor":"renovate[bot]","Number":"19038","RawContent":null,"Title":"build: update stylus-loader to version 4.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [stylus-loader](https://togithub.com/webpack-contrib/stylus-loader) | dependencies | patch | [`4.1.0` -> `4.1.1`](https://renovatebot.com/diffs/npm/stylus-loader/4.1.0/4.1.1) |\n| [stylus-loader](https://togithub.com/webpack-contrib/stylus-loader) | devDependencies | patch | [`4.1.0` -> `4.1.1`](https://renovatebot.com/diffs/npm/stylus-loader/4.1.0/4.1.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/stylus-loader</summary>\n\n### [`v4.1.1`](https://togithub.com/webpack-contrib/stylus-loader/blob/master/CHANGELOG.md#&#8203;411-httpsgithubcomwebpack-contribstylus-loadercomparev410v411-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/stylus-loader/compare/v4.1.0...v4.1.1)\n\n-   update `schema-utils`\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19038","RelatedDescription":"Open PR \"build: update stylus-loader to version 4.1.1\" (#19038)"},{"Id":"718563449","IsPullRequest":true,"CreatedAt":"2020-10-10T08:07:29","Actor":"renovate[bot]","Number":"19037","RawContent":null,"Title":"build: update source-map-loader to version 1.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [source-map-loader](https://togithub.com/webpack-contrib/source-map-loader) | dependencies | patch | [`1.1.0` -> `1.1.1`](https://renovatebot.com/diffs/npm/source-map-loader/1.1.0/1.1.1) |\n| [source-map-loader](https://togithub.com/webpack-contrib/source-map-loader) | devDependencies | patch | [`1.1.0` -> `1.1.1`](https://renovatebot.com/diffs/npm/source-map-loader/1.1.0/1.1.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/source-map-loader</summary>\n\n### [`v1.1.1`](https://togithub.com/webpack-contrib/source-map-loader/blob/master/CHANGELOG.md#&#8203;111-httpsgithubcomwebpack-contribsource-map-loadercomparev110v111-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/source-map-loader/compare/v1.1.0...v1.1.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19037","RelatedDescription":"Open PR \"build: update source-map-loader to version 1.1.1\" (#19037)"},{"Id":"718553467","IsPullRequest":true,"CreatedAt":"2020-10-10T07:11:26","Actor":"renovate[bot]","Number":"19036","RawContent":null,"Title":"build: update sass-loader to version 10.0.3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [sass-loader](https://togithub.com/webpack-contrib/sass-loader) | dependencies | patch | [`10.0.2` -> `10.0.3`](https://renovatebot.com/diffs/npm/sass-loader/10.0.2/10.0.3) |\n| [sass-loader](https://togithub.com/webpack-contrib/sass-loader) | devDependencies | patch | [`10.0.2` -> `10.0.3`](https://renovatebot.com/diffs/npm/sass-loader/10.0.2/10.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/sass-loader</summary>\n\n### [`v10.0.3`](https://togithub.com/webpack-contrib/sass-loader/blob/master/CHANGELOG.md#&#8203;1003-httpsgithubcomwebpack-contribsass-loadercomparev1002v1003-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/sass-loader/compare/v10.0.2...v10.0.3)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19036","RelatedDescription":"Open PR \"build: update sass-loader to version 10.0.3\" (#19036)"},{"Id":"718552818","IsPullRequest":true,"CreatedAt":"2020-10-10T07:07:42","Actor":"renovate[bot]","Number":"19035","RawContent":null,"Title":"build: update raw-loader to version 4.0.2","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [raw-loader](https://togithub.com/webpack-contrib/raw-loader) | dependencies | patch | [`4.0.1` -> `4.0.2`](https://renovatebot.com/diffs/npm/raw-loader/4.0.1/4.0.2) |\n| [raw-loader](https://togithub.com/webpack-contrib/raw-loader) | devDependencies | patch | [`4.0.0` -> `4.0.2`](https://renovatebot.com/diffs/npm/raw-loader/4.0.0/4.0.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/raw-loader</summary>\n\n### [`v4.0.2`](https://togithub.com/webpack-contrib/raw-loader/blob/master/CHANGELOG.md#&#8203;402-httpsgithubcomwebpack-contribraw-loadercomparev401v402-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/raw-loader/compare/v4.0.1...v4.0.2)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19035","RelatedDescription":"Open PR \"build: update raw-loader to version 4.0.2\" (#19035)"},{"Id":"718543703","IsPullRequest":true,"CreatedAt":"2020-10-10T06:11:23","Actor":"renovate[bot]","Number":"19034","RawContent":null,"Title":"build: update postcss-loader to version 4.0.4","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [postcss-loader](https://togithub.com/webpack-contrib/postcss-loader) | dependencies | patch | [`4.0.3` -> `4.0.4`](https://renovatebot.com/diffs/npm/postcss-loader/4.0.3/4.0.4) |\n| [postcss-loader](https://togithub.com/webpack-contrib/postcss-loader) | devDependencies | patch | [`4.0.3` -> `4.0.4`](https://renovatebot.com/diffs/npm/postcss-loader/4.0.3/4.0.4) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/postcss-loader</summary>\n\n### [`v4.0.4`](https://togithub.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md#&#8203;404-httpsgithubcomwebpack-contribpostcss-loadercomparev403v404-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/postcss-loader/compare/v4.0.3...v4.0.4)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19034","RelatedDescription":"Open PR \"build: update postcss-loader to version 4.0.4\" (#19034)"},{"Id":"718543065","IsPullRequest":true,"CreatedAt":"2020-10-10T06:07:40","Actor":"renovate[bot]","Number":"19033","RawContent":null,"Title":"build: update less-loader to version 7.0.2","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [less-loader](https://togithub.com/webpack-contrib/less-loader) | dependencies | patch | [`7.0.1` -> `7.0.2`](https://renovatebot.com/diffs/npm/less-loader/7.0.1/7.0.2) |\n| [less-loader](https://togithub.com/webpack-contrib/less-loader) | devDependencies | patch | [`7.0.1` -> `7.0.2`](https://renovatebot.com/diffs/npm/less-loader/7.0.1/7.0.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/less-loader</summary>\n\n### [`v7.0.2`](https://togithub.com/webpack-contrib/less-loader/blob/master/CHANGELOG.md#&#8203;702-httpsgithubcomwebpack-contribless-loadercomparev701v702-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/less-loader/compare/v7.0.1...v7.0.2)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19033","RelatedDescription":"Open PR \"build: update less-loader to version 7.0.2\" (#19033)"},{"Id":"718535016","IsPullRequest":true,"CreatedAt":"2020-10-10T05:11:26","Actor":"renovate[bot]","Number":"19032","RawContent":null,"Title":"build: update file-loader to version 6.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [file-loader](https://togithub.com/webpack-contrib/file-loader) | dependencies | patch | [`6.1.0` -> `6.1.1`](https://renovatebot.com/diffs/npm/file-loader/6.1.0/6.1.1) |\n| [file-loader](https://togithub.com/webpack-contrib/file-loader) | devDependencies | patch | [`6.1.0` -> `6.1.1`](https://renovatebot.com/diffs/npm/file-loader/6.1.0/6.1.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/file-loader</summary>\n\n### [`v6.1.1`](https://togithub.com/webpack-contrib/file-loader/blob/master/CHANGELOG.md#&#8203;611-httpsgithubcomwebpack-contribfile-loadercomparev610v611-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/file-loader/compare/v6.1.0...v6.1.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19032","RelatedDescription":"Open PR \"build: update file-loader to version 6.1.1\" (#19032)"},{"Id":"718534454","IsPullRequest":true,"CreatedAt":"2020-10-10T05:07:39","Actor":"renovate[bot]","Number":"19031","RawContent":null,"Title":"build: update copy-webpack-plugin to version 6.2.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [copy-webpack-plugin](https://togithub.com/webpack-contrib/copy-webpack-plugin) | dependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/copy-webpack-plugin/6.2.0/6.2.1) |\n| [copy-webpack-plugin](https://togithub.com/webpack-contrib/copy-webpack-plugin) | devDependencies | patch | [`6.2.0` -> `6.2.1`](https://renovatebot.com/diffs/npm/copy-webpack-plugin/6.2.0/6.2.1) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack-contrib/copy-webpack-plugin</summary>\n\n### [`v6.2.1`](https://togithub.com/webpack-contrib/copy-webpack-plugin/blob/master/CHANGELOG.md#&#8203;621-httpsgithubcomwebpack-contribcopy-webpack-plugincomparev620v621-2020-10-09)\n\n[Compare Source](https://togithub.com/webpack-contrib/copy-webpack-plugin/compare/v6.2.0...v6.2.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/19031","RelatedDescription":"Open PR \"build: update copy-webpack-plugin to version 6.2.1\" (#19031)"},{"Id":"718453881","IsPullRequest":false,"CreatedAt":"2020-10-09T22:17:17","Actor":"maxime1992","Number":"19030","RawContent":null,"Title":"This expression is not constructable","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular-devkit/build-angular\r\n\r\n\r\n### Is this a regression?\r\n\r\nYes?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 10.0.3 and I tried to upgrade to 10.1.6\r\n\r\n\r\n### Description\r\n\r\nWe've got a **web worker** that at some point can create an error:\r\n\r\n```ts\r\nnew Error('`blob` must be an instance of File or Blob.')\r\n```\r\n\r\n\r\n## 🔥 Exception or Error\r\n\r\n\r\n\r\nAnd when I try to `ng serve` I now have the following error:\r\n\r\n```\r\nERROR in ./src/root/md5.worker.ts (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/worker-plugin/dist/loader.js?name=md5.worker!./src/root/md5.worker.ts)\r\nModule build failed (from /home/my/path/node_modules/@angular-devkit/build-angular/node_modules/worker-plugin/dist/loader.js):\r\nError: apps/amt-app/src/root/md5.worker.ts:18:28 - error TS2351: This expression is not constructable.\r\n  Type 'Boolean' has no construct signatures.\r\n\r\n18         observer.error(new Error('`blob` must be an instance of File or Blob.'));\r\n                              ~~~~~\r\n\r\n    at /home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:886:79\r\n    at Object.reportDiagnostics (/home/maxime/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/diagnostics.js:123:9)\r\n    at AngularCompilerPlugin._update (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:886:23)\r\n    at processTicksAndRejections (internal/process/task_queues.js:89:5)\r\n    at async AngularCompilerPlugin._make (/home/my/path/node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:760:13)\r\n```\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 10.1.6\r\nNode: 12.4.0\r\nOS: linux x64\r\n\r\nAngular: 10.1.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: <error>\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1001.6\r\n@angular-devkit/build-angular      0.1001.6\r\n@angular-devkit/build-ng-packagr   0.1001.6\r\n@angular-devkit/build-optimizer    0.1001.6\r\n@angular-devkit/core               10.1.6\r\n@angular-devkit/schematics         10.1.6\r\n@angular/cdk                       10.1.0\r\n@angular/cli                       10.1.6\r\n@angular/material                  10.1.0\r\n@schematics/angular                10.1.6\r\n@schematics/update                 0.1001.6\r\nng-packagr                         10.0.2\r\nrxjs                               6.5.5\r\ntypescript                         4.0.3\r\nwebpack                            4.43.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/19030","RelatedDescription":"Open issue \"This expression is not constructable\" (#19030)"},{"Id":"718354085","IsPullRequest":true,"CreatedAt":"2020-10-09T18:48:44","Actor":"alan-agius4","Number":"19029","RawContent":null,"Title":"fix(@angular/cli): don't display prompts twice","State":"open","Body":"Closes #19027","Url":"https://github.com/angular/angular-cli/pull/19029","RelatedDescription":"Open PR \"fix(@angular/cli): don't display prompts twice\" (#19029)"},{"Id":"718347703","IsPullRequest":true,"CreatedAt":"2020-10-09T18:36:29","Actor":"alan-agius4","Number":"19028","RawContent":null,"Title":"fix(@angular/cli): don't show deprecation messages for defaults when using `--defaults`","State":"open","Body":"\r\n\r\nWith this change we use the addUndefinedDefaults transformer post validation and don't create prompts which have a default value when options.defaults is truthy.\r\n\r\nCloses: #18692","Url":"https://github.com/angular/angular-cli/pull/19028","RelatedDescription":"Open PR \"fix(@angular/cli): don't show deprecation messages for defaults when using `--defaults`\" (#19028)"},{"Id":"718089866","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:28","Actor":"alan-agius4","Number":"19023","RawContent":null,"Title":"ng-packagr update to v11","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/19023","RelatedDescription":"Closed or merged PR \"ng-packagr update to v11\" (#19023)"},{"Id":"718046585","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:19","Actor":"alan-agius4","Number":"19021","RawContent":null,"Title":"fix(@angular-devkit/build-angular): use IE11 as oldest browser when downlevelling","State":"closed","Body":"IE9 and 10 are no longer supported.","Url":"https://github.com/angular/angular-cli/pull/19021","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): use IE11 as oldest browser when downlevelling\" (#19021)"},{"Id":"718016539","IsPullRequest":true,"CreatedAt":"2020-10-09T17:13:00","Actor":"alan-agius4","Number":"19020","RawContent":null,"Title":"refactor(@angular-devkit/build-optimizer): remove old checks","State":"closed","Body":"- @angular/core package no longer contain ESM5 and FESM5 entrypoints\r\n- ngfactory/ngstyle file extension is always .js","Url":"https://github.com/angular/angular-cli/pull/19020","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-optimizer): remove old checks\" (#19020)"},{"Id":"718195053","IsPullRequest":false,"CreatedAt":"2020-10-09T14:31:26","Actor":"prabh-62","Number":"19027","RawContent":null,"Title":"ng generate guard prompts twice","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [x] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nYes\r\n\r\n\r\n### Description\r\nUsing angular CLI to generate a guard prompts twice for \r\n`? Which interfaces would you like to implement? CanActivate`\r\n`? Which interfaces would you like to implement? CanActivate`\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n- `> npx @angular/cli@11.0.0-next.6 new admin-console --strict true --routing true --style css`\r\n- `> cd admin-console`\r\n- `> yarn ng generate guard guards/oauth/auth-oauth`\r\n![guard_twcie](https://user-images.githubusercontent.com/13006107/95595557-48b23c80-0a1a-11eb-8b2a-90445fc645da.gif)\r\n\r\n\r\n## 🔥 Exception or Error\r\nNo exception\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n$ ng version\r\nAngular CLI: 11.0.0-next.6\r\nNode: 14.13.1\r\nOS: darwin x64\r\n\r\nAngular: 11.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1100.0-next.6\r\n@angular-devkit/build-angular   0.1100.0-next.6\r\n@angular-devkit/core            11.0.0-next.6\r\n@angular-devkit/schematics      11.0.0-next.6\r\n@angular/cli                    11.0.0-next.6\r\n@schematics/angular             11.0.0-next.6\r\n@schematics/update              0.1100.0-next.6\r\nrxjs                            6.6.3\r\ntypescript                      4.0.3\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n","Url":"https://github.com/angular/angular-cli/issues/19027","RelatedDescription":"Open issue \"ng generate guard prompts twice\" (#19027)"},{"Id":"718109247","IsPullRequest":false,"CreatedAt":"2020-10-09T12:34:10","Actor":"Rogier-blip","Number":"19026","RawContent":null,"Title":"Generation of test: Use Classname.name in describe of spec files instead of 'Classname'","State":"open","Body":"# 🚀 feature request\r\nWhen a spec file is generated by the CLI use Classname.name instead of the 'Classname'.\r\n\r\n### Relevant Package\r\n@angular/cli\r\n\r\n### Description\r\nIt would be nice if the spec files would be generated in a way that makes them adaptable to change.\r\n\r\nIf a test is generated by the CLI the initial `describe` looks like this:\r\n```typescript\r\n...\r\ndescribe('AppComponent', () => {\r\n...\r\n``` \r\n\r\nWhen I change the name of the app component from `AppComponent` to `AppComponent1`. I have to change the name of the test by hand. \r\n\r\n### Describe the solution you'd like\r\nThe solution that I have in mind is to use the .name property of the typescript class. The describe would have the following structure. \r\n\r\n```typescript\r\n...\r\ndescribe(AppComponent.name, () => {\r\n...\r\n```\r\nNow when the AppComponent name is changed through an IDE. The test name is automatically changed.\r\n\r\nCheers 🐵","Url":"https://github.com/angular/angular-cli/issues/19026","RelatedDescription":"Open issue \"Generation of test: Use Classname.name in describe of spec files instead of 'Classname'\" (#19026)"},{"Id":"718100049","IsPullRequest":false,"CreatedAt":"2020-10-09T12:20:14","Actor":"anandsiddharth","Number":"19025","RawContent":null,"Title":"Hot reload in angular 10???? ","State":"closed","Body":"# 🚀 HMR\r\n\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\nhttps://levelup.gitconnected.com/hmr-in-angular-cli-project-eb8512ef514b this doesn't work on angular 10, Is there a way we can enable HMR in angular 10?\r\n\r\n### Describe the solution you'd like\r\nMaking a small change reloads the entire application, instead should refresh the specific component.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/19025","RelatedDescription":"Closed issue \"Hot reload in angular 10???? \" (#19025)"},{"Id":"718050976","IsPullRequest":false,"CreatedAt":"2020-10-09T12:11:29","Actor":"dumitru-h","Number":"19022","RawContent":null,"Title":"ng error: Unknown error: SyntaxError: Unexpected token 'export'","State":"closed","Body":"Hello,\r\nI installed cli with command:\r\n`sudo npm install -g @angular/cli@10.1.6`\r\nwhich is the last release at this moment.\r\n\r\nI tried **ng new angularclient**\r\n\r\nand I had this error: \r\n> Unknown error: SyntaxError: Unexpected token 'export'\r\n\r\nI tried just **ng** and had the same error.\r\n\r\nI try to discover Angular so this is a big stop for me in discovering Angular ;)\r\n\r\nHere is the package info:\r\n> `>` sudo npm info @angular/cli dist-tags\r\n>{\r\n>  latest: '10.1.6',\r\n>  next: '11.0.0-next.6',\r\n>  'v6-lts': '6.2.9',\r\n>  'v8-lts': '8.3.29',\r\n>  'v7-lts': '7.3.10',\r\n>  'v9-lts': '9.1.12'\r\n\r\n> `>` node -v\r\nv12.19.0","Url":"https://github.com/angular/angular-cli/issues/19022","RelatedDescription":"Closed issue \"ng error: Unknown error: SyntaxError: Unexpected token 'export'\" (#19022)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"718912881","IsPullRequest":true,"CreatedAt":"2020-10-11T19:46:49","Actor":"crisbeto","Number":"20767","RawContent":null,"Title":"docs(youtube-player): update loading example to avoid loading API multiple times","State":"open","Body":"Adds some extra logic to the asynchronous loading example that illustrates how to avoid adding the API multiple times.","Url":"https://github.com/angular/components/pull/20767","RelatedDescription":"Open PR \"docs(youtube-player): update loading example to avoid loading API multiple times\" (#20767)"},{"Id":"718820382","IsPullRequest":true,"CreatedAt":"2020-10-11T11:56:54","Actor":"crisbeto","Number":"20766","RawContent":null,"Title":"fix(cdk/stepper): error if out-of-bounds index is assigned before initialization","State":"open","Body":"Fixes an error if an out-of-bounds index is assigned before the steps are available and the user tries to navigate. Usually we have an assertion that prevents invalid indexes from being assigned, but it doesn't run before initialization, because we don't know how many steps there will be yet.\r\n\r\nThese changes add a check that will revert the index back to 0 if the index is invalid on initialization.\r\n\r\nFixes #20735.","Url":"https://github.com/angular/components/pull/20766","RelatedDescription":"Open PR \"fix(cdk/stepper): error if out-of-bounds index is assigned before initialization\" (#20766)"},{"Id":"718816199","IsPullRequest":true,"CreatedAt":"2020-10-11T11:30:19","Actor":"shlomiassaf","Number":"20765","RawContent":null,"Title":"fix(cdk/table): row differ does not detect template changes","State":"open","Body":"fixes #20717","Url":"https://github.com/angular/components/pull/20765","RelatedDescription":"Open PR \"fix(cdk/table): row differ does not detect template changes\" (#20765)"},{"Id":"716168444","IsPullRequest":false,"CreatedAt":"2020-10-11T09:10:14","Actor":"AcarMeel","Number":"20741","RawContent":null,"Title":"help(Mat Datepicker): Do not autocomplete date when focus is out","State":"closed","Body":"#### What are you trying to do?\r\n\r\nI've setup a datepicker and I want to type 1 and focus out the input and keep the 1. But instead the datepicker gets autocompleted with 1/1/2001. My client doesn't like that!!\r\n\r\n`<mat-form-field appearance=\"fill\">\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>`\r\n\r\n#### What troubleshooting steps have you tried?\r\n\r\nPressing tab or leaving the focus out of the input autocompletes the date and I dont want that\r\n\r\n#### Reproduction\r\n\r\nThe issue is easily reproduced in the same page of Angular Material documentation in browsers like Chrome, Safari, IE11, etc\r\nhttps://material.angular.io/components/datepicker/overview\r\n\r\n\r\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/datepicker/overview\r\n2.  Find a datepicker\r\n3. Type 1\r\n4. Press tab or focus the input out\r\n5. See how date gets autocompleted with 1/1/2001\r\n6. My expectation is if I type 1 then leave it as 1. We take care of validations.\r\n  \r\n#### Environment\r\n\r\nAll browsers, All devices, All OS. \r\n","Url":"https://github.com/angular/components/issues/20741","RelatedDescription":"Closed issue \"help(Mat Datepicker): Do not autocomplete date when focus is out\" (#20741)"},{"Id":"716591475","IsPullRequest":false,"CreatedAt":"2020-10-11T09:03:16","Actor":"fosteman","Number":"20744","RawContent":null,"Title":"MatSort: Unable to provide DataSource.sort directive","State":"closed","Body":"What are you trying to do?\r\nSetting up Sorting mechanism for a table. Followed through the guidelines: \r\nprovided `matSort` directive in template\r\nloaded up `MatSortModule`\r\ninstalled `@ViewChild(MatSort) sort`\r\nassigning `this.dataSource.sort = this.sort` with `this.dataSource = new MatDataSource([])`\r\n\r\n#### What troubleshooting steps have you tried?\r\n`console.log(this.sort)` is OK.\r\n```\r\nMatSort {_disabled: false, _isInitialized: true, _pendingSubscribers: null, initialized: Observable, sortables: Map(1), …}\r\ninitialized: Observable {_isScalar: false, _subscribe: ƒ}\r\nsortChange: EventEmitter_ {_isScalar: false, observers: Array(2), closed: false, isStopped: false, hasError: false, …}\r\nsortables: Map(1) {\"Score\" => MatSortHeader}\r\nstart: \"asc\"\r\n_direction: \"\"\r\n_disabled: false\r\n_isInitialized: true\r\n_pendingSubscribers: null\r\n_stateChanges: Subject {_isScalar: false, observers: Array(1), closed: false, isStopped: false, hasError: false, …}\r\ndirection: (...)\r\ndisableClear: (...)\r\ndisabled: (...)\r\n__proto__: _class4\r\n```\r\n\r\nWhat are you seeing that does not match your expectations? \r\n1. `sorting-header` does not work on number column\r\n2. Console:\r\n\r\n```\r\nAttempting to configure '__source' with descriptor '{\"value\":\"MatSortHeader\",\"configurable\":true}' on object 'function MatSort() {\r\n    var _this;\r\n\r\n    Object(_Users_timfosteman_work_space_speak_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, MatSort);\r\n\r\n    _this = _super.apply(this, arguments);\r\n    /** Collection of all registered sortables that this directive manages. */\r\n\r\n    _this.sortables = new Map();\r\n    /** Used to notify any child components listening to state changes. */\r\n\r\n    _this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_9__[\"Subject\"]();\r\n    /**\r\n     * The direction to set when an MatSortable is initially sorted.\r\n     * May be overriden by the MatSortable's sort start.\r\n     */\r\n\r\n    _this.start = 'asc';\r\n    _this._direction = '';\r\n    /** Event emitted when the user changes either the active sort or sort direction. */\r\n\r\n    _this.sortChange = new _angular_core__WEBPACK_IMPORTED_MODULE_4__[\"EventEmitter\"]();\r\n    return _this;\r\n  }' and got error, giving up: TypeError: Cannot define property __source, object is not extensible\r\n```\r\n\r\n#### Reproduction\r\n\r\nAlthough we would not see the WebPack error above in the StackBlitz, am I missing something ?\r\nhttps://stackblitz.com/edit/components-issue-ykw4sz?devtoolsheight=33&file=src/app/example-component.html\r\n\r\n  \r\n#### Environment\r\n\r\n- Angular: 10.1.3\r\n- CDK/Material: 10.1.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/20744","RelatedDescription":"Closed issue \"MatSort: Unable to provide DataSource.sort directive\" (#20744)"},{"Id":"717415455","IsPullRequest":false,"CreatedAt":"2020-10-11T08:39:46","Actor":"alvaromartmart","Number":"20752","RawContent":null,"Title":"feat(Table): detect clickable mat-rows with routerLink","State":"closed","Body":"#### Feature Description\r\nMaterial table rows are not displayed as clickable elements (i.e. hover effect, cursor: pointer...) when they have an attached `routerLink` directive.\r\n\r\nThings I've tried:\r\n```html\r\n<tr\r\n    mat-row\r\n    *matRowDef=\"let rowData; columns: visibleColumns$ | async\"\r\n    [routerLink]=\"[id]\">\r\n</tr>\r\n``` \r\nHovering the rows doesn't indicate that the row is clickable.\r\n\r\nSolutions I've been using:\r\n1) Setting a fake (click) handler for the row:\r\n```html\r\n<tr\r\n    mat-row\r\n    *matRowDef=\"let rowData; columns: visibleColumns$ | async\"\r\n    [routerLink]=\"[id]\"\r\n    (click)=\"(false)\">\r\n</tr>\r\n``` \r\n2) Styling .mat-rows with attached routerLink (using ng-reflect-router-link)\r\n```scss\r\n.mat-row[ng-reflect-router-link]{\r\n    cursor: pointer;\r\n    &:hover{\r\n        /* [...] */\r\n    }\r\n}\r\n```\r\n\r\n\r\n#### Use Case\r\n\r\nFrom my point of view, material table rows with routerLinks should be displayed as clickable elements.\r\n","Url":"https://github.com/angular/components/issues/20752","RelatedDescription":"Closed issue \"feat(Table): detect clickable mat-rows with routerLink\" (#20752)"},{"Id":"718783337","IsPullRequest":true,"CreatedAt":"2020-10-11T08:00:08","Actor":"crisbeto","Number":"20764","RawContent":null,"Title":"feat(cdk/testing): allow for data to be attached to custom event","State":"open","Body":"Allows for data to be attached to an event that is triggered through `TestElement.dispatchEvent`. This is required in order to simulate some events like `animationend`. It is limited to primitive data types, because the data has to be JSON-serializeable for Protractor.","Url":"https://github.com/angular/components/pull/20764","RelatedDescription":"Open PR \"feat(cdk/testing): allow for data to be attached to custom event\" (#20764)"},{"Id":"718409019","IsPullRequest":false,"CreatedAt":"2020-10-09T20:38:03","Actor":"JaxonWright","Number":"20763","RawContent":null,"Title":"bug(mat-sidenav-container): Firefox for Android (in landscape) has white cut-off bar at bottom of page when scrolling","State":"open","Body":"#### Reproduction\r\n\r\nThis can be seen on the official Angular Material website or any of your own ng projects that use the sidenav container. I originally thought it was a problem with just dialogs, but it is actually with the sidenav container. The behavior does not occur on ng websites that use Angular Material but not the sidenav container.\r\n\r\nSteps to reproduce:\r\n1. Open Firefox on your Android phone\r\n2. Switch to landscape orientation\r\n3. Go to [material.angular.io](material.angular.io)\r\n4. Scroll and see the weird bar at the bottom\r\n\r\n#### Expected Behavior\r\n\r\nNo weird white bar appearing that messes up the rest of the page. \r\n\r\nYou can see it _not_ occur on my website, [https://jaxon.dev](https://jaxon.dev) until you open one of the dialogs for cryptocurrency on the Contact page. This website does not use the sidenav container, and every one that I have found that does has this problem.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nI guess you cannot really see the bar since Github is also a white background. Copy the images and you will see. \r\nIt seems as though it is roughly the height of the navigation bar of the app, which may tip off the developers of what is going on.\r\n\r\n![image](https://user-images.githubusercontent.com/14099593/95628945-06562300-0a4d-11eb-8433-08c3611572b0.png)\r\n![image](https://user-images.githubusercontent.com/14099593/95629108-4c12eb80-0a4d-11eb-9273-7e7918aaaf33.png)\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 10.1.0\r\n- CDK/Material: 10.2.4\r\n- Browser(s): Firefox for Android 81.1.4\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Android 10\r\n","Url":"https://github.com/angular/components/issues/20763","RelatedDescription":"Open issue \"bug(mat-sidenav-container): Firefox for Android (in landscape) has white cut-off bar at bottom of page when scrolling\" (#20763)"},{"Id":"718393164","IsPullRequest":true,"CreatedAt":"2020-10-09T20:05:54","Actor":"crisbeto","Number":"20762","RawContent":null,"Title":"fix(material-experimental/mdc-form-field): test harness referring to non-MDC harnesses","State":"open","Body":"The test harness for the MDC form field was referring to the non-MDC versions of `MatInput` and `MatSelect`. Furthermore, we were using the non-MDC input, select and autocomplete in tests.","Url":"https://github.com/angular/components/pull/20762","RelatedDescription":"Open PR \"fix(material-experimental/mdc-form-field): test harness referring to non-MDC harnesses\" (#20762)"},{"Id":"718275846","IsPullRequest":false,"CreatedAt":"2020-10-09T16:26:29","Actor":"IConstructor","Number":"20761","RawContent":null,"Title":"bug(Chips): Arrows navigation in NVDA browse mode automatically switched to focus mode","State":"open","Body":"#### Reproduction\r\nSteps to reproduce:\r\n1. Go to https://material.angular.io/components/chips/examples\r\n2. Open NVDA screen reader in browse mode\r\n3. Start navigating in browse mode with a help of up/down arrows\r\n4. Navigate with the help of arrows to chips select list\r\n \r\n \r\n#### Expected Behavior\r\n\r\nNVDA is reading information about the select list and keeps navigating in the browse mode\r\n\r\n\r\n#### Actual Behavior\r\n\r\nNVDA automatically switches to the focus mode and prevents user from further page exploring in the browse mode.\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 6+\r\n- CDK/Material: Material components\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/20761","RelatedDescription":"Open issue \"bug(Chips): Arrows navigation in NVDA browse mode automatically switched to focus mode\" (#20761)"},{"Id":"718263416","IsPullRequest":true,"CreatedAt":"2020-10-09T16:06:45","Actor":"crisbeto","Number":"20760","RawContent":null,"Title":"fix(material/slider): some screen readers announcing long decimal values","State":"open","Body":"**Note:** this is a resubmit of #20721 which had to be reverted because it was overriding people's `aria-valuetext`. This PR includes an input that allows for it to be changed.\r\n\r\nIt looks like some screen readers announce the value of a slider by calculating the percentage themselves using the `aria-valuemin`, `aria-valuemax` and `aria-valuenow`. The problem is that they don't round down the decimals so for a slider between 0 and 1 with a step of 0.1, they end up reading out values like 0.20000068. These changes work around the issue by setting `aria-valuetext` to the same value that we shown in the thumb which we truncate ourselves.\r\n\r\nFixes #20719.","Url":"https://github.com/angular/components/pull/20760","RelatedDescription":"Open PR \"fix(material/slider): some screen readers announcing long decimal values\" (#20760)"},{"Id":"718205855","IsPullRequest":false,"CreatedAt":"2020-10-09T14:44:41","Actor":"bampakoa","Number":"20759","RawContent":null,"Title":"docs-bug(dialog): Suggest using strong types for MAT_DIALOG_DATA","State":"open","Body":"#### Documentation Feedback\r\n\r\nIn the **Sharing data with Dialog component** section, the type of `MAT_DIALOG_DATA` in the described example is set to `any`. Given that it is encouraged to use strongly typing in Angular projects, I would suggest to use the following interface for the example:\r\n\r\n```\r\ninterface DialogData {\r\n name: string;\r\n}\r\n\r\nexport class YourDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n}\r\n```\r\n\r\n**Affected documentation page:** https://material.angular.io/components/dialog/overview#sharing-data-with-the-dialog-component\r\n\r\nI would love to work on a related PR if you find it useful. 🙏 \r\n","Url":"https://github.com/angular/components/issues/20759","RelatedDescription":"Open issue \"docs-bug(dialog): Suggest using strong types for MAT_DIALOG_DATA\" (#20759)"},{"Id":"718198278","IsPullRequest":true,"CreatedAt":"2020-10-09T14:35:24","Actor":"wwjhu","Number":"20758","RawContent":null,"Title":"feat(cdk/testing): support modifiers for clicking on a TestElement","State":"open","Body":"Adds the ability to provide modifier keys when clicking on a TestElement.","Url":"https://github.com/angular/components/pull/20758","RelatedDescription":"Open PR \"feat(cdk/testing): support modifiers for clicking on a TestElement\" (#20758)"},{"Id":"718127594","IsPullRequest":true,"CreatedAt":"2020-10-09T13:01:30","Actor":"Achilles1515","Number":"20757","RawContent":null,"Title":"refactor(cdk/drag-drop): Correctly type drag handle parent drag witho…","State":"open","Body":"…ut circular dependencies warning\r\n\r\nImport the `CdkDrag` directive reference as a type-only import to avoid the circular dependency warning.","Url":"https://github.com/angular/components/pull/20757","RelatedDescription":"Open PR \"refactor(cdk/drag-drop): Correctly type drag handle parent drag witho…\" (#20757)"},{"Id":"717970092","IsPullRequest":false,"CreatedAt":"2020-10-09T08:46:57","Actor":"darkoandreev","Number":"20756","RawContent":null,"Title":"bug(MatAnchor): cdk-focused class added on disabled MatAnchor button","State":"open","Body":"Hello everyone,\r\nFirst, I have a question related to the disabled state of the buttons - if the button (no matter which type is) is disabled, it shouldn't be focused with FocusMonitor, right?\r\n\r\nI found a problem with the MatAnchor button. The disabled state of the button also can be focused by clicking on it, which is not correct probably because every other button doesn't have this \"feature\".\r\nI used your [stackblitz](https://stackblitz.com/angular/jrvkvbxxjon?file=src%2Fapp%2Fbutton-overview-example.ts) and I disabled the first anchor button.\r\n\r\nThis is the actual problem I'm talking about:\r\n\r\n![image](https://user-images.githubusercontent.com/20442015/95562586-06422d00-0a25-11eb-8732-9ffc62f7b240.png)\r\n\r\nPlease let me know if this is a valid problem and how can be fixed. Thanks in advance!\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/20756","RelatedDescription":"Open issue \"bug(MatAnchor): cdk-focused class added on disabled MatAnchor button\" (#20756)"},{"Id":"717917029","IsPullRequest":false,"CreatedAt":"2020-10-09T07:17:59","Actor":"ZOUJIELynn","Number":"20755","RawContent":null,"Title":"text blurred in IE when using virtual scroll","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/fork/components-issue\r\n\r\nSteps to reproduce:\r\n1. check cdk-virtual-scroll-viewport\r\n2. the reason is `transform: translateZ(0px)` in IE\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\n\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\n\r\n\r\n#### Environment\r\n\r\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu): \r\n","Url":"https://github.com/angular/components/issues/20755","RelatedDescription":"Open issue \"text blurred in IE when using virtual scroll\" (#20755)"},{"Id":"717619502","IsPullRequest":true,"CreatedAt":"2020-10-09T03:09:23","Actor":"wagnermaciel","Number":"20754","RawContent":null,"Title":"fix(cdk/testing): avoid using dotted property access for dispatchEven…","State":"closed","Body":"…t on ElementFinder\r\n\r\n * Internally this was causing an error saying that the type has a\r\n  string index signature, but it is being accessed using a dotted property access.","Url":"https://github.com/angular/components/pull/20754","RelatedDescription":"Closed or merged PR \"fix(cdk/testing): avoid using dotted property access for dispatchEven…\" (#20754)"},{"Id":"717594179","IsPullRequest":true,"CreatedAt":"2020-10-08T19:28:45","Actor":"wagnermaciel","Number":"20753","RawContent":null,"Title":"Revert \"fix(material/slider): some screen readers announcing long dec…","State":"closed","Body":"…imal values (#20721)\"\r\n\r\nThis reverts commit d93e16f5d7c85ca41a71c1ef0bd7fde32e921dee.\r\n\r\nHad to revert this change because a custom `aria-valuetext` on the component should override what the component sets","Url":"https://github.com/angular/components/pull/20753","RelatedDescription":"Closed or merged PR \"Revert \"fix(material/slider): some screen readers announcing long dec…\" (#20753)"},{"Id":"717366248","IsPullRequest":true,"CreatedAt":"2020-10-08T14:59:41","Actor":"wagnermaciel","Number":"20751","RawContent":null,"Title":"Revert \"feat(cdk/testing): add the ability to dispatch arbitrary even…","State":"closed","Body":"…ts (#20714)\"\r\n\r\nThis reverts commit b7cfe673708fc99226f00da57785751764460b68.","Url":"https://github.com/angular/components/pull/20751","RelatedDescription":"Closed or merged PR \"Revert \"feat(cdk/testing): add the ability to dispatch arbitrary even…\" (#20751)"},{"Id":"717290684","IsPullRequest":false,"CreatedAt":"2020-10-08T12:15:13","Actor":"nwmv","Number":"20750","RawContent":null,"Title":"bug(Datepicker): Hover state on the picker persists after the calendar is clicked away","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Click on the dropdown arrow to reveal the calendar.\r\n2. Click somewhere other than the calendar (e.g., a bit to the right of the dropdown arrow) to hide the calendar.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nThe dropdown arrow reverts to its default state, and in particular no grey circle surrounds it.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nA grey circle that appears to be a hover state persists around the dropdown arrow.\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: Angular 2\r\n- CDK/Material: Material\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/20750","RelatedDescription":"Open issue \"bug(Datepicker): Hover state on the picker persists after the calendar is clicked away\" (#20750)"},{"Id":"717245463","IsPullRequest":false,"CreatedAt":"2020-10-08T11:06:46","Actor":"akshaybhat30","Number":"20749","RawContent":null,"Title":"bug(DATEPICKER): DatePicker shows prior date inside the calendar but correct date in the input field.","State":"open","Body":"#### Reproduction\r\n\r\nStackblitz link :- https://stackblitz.com/edit/angular-moment-date-adapter-overriding-f89kp8?file=app%2Fdatepicker-formats-example.ts\r\n\r\nSteps to reproduce:\r\n1. Set current timezone to +5:30 (Chennai).\r\n2. Check the value in the input (10/01/2020) and the date selected in the calendar is showing as 01.\r\n3. Change the system timezone to -12 such that there is a difference in date and check the component again.\r\n4. the value shown outside is still 10/01/2020 but the date selected inside the component is 30.\r\n\r\n**Note i have made a custom moment date adapter for this case to handle date format based on the locale of the user**\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nThe date selected should be 10/01/2020 and should be consistent at both the places.\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nthe value shown outside is still 10/01/2020 in the input box but the date selected inside the component when you open the calendar is 09/30/2020.\r\n\r\n![image](https://user-images.githubusercontent.com/56155908/95450834-d6ded380-08f1-11eb-96c4-48d6802c360a.png)\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8\r\n- CDK/Material: 8.0.0\r\n- Browser(s): Google chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n\r\nStackoverflow link:- https://stackoverflow.com/questions/62319261/issues-with-custom-moment-date-adapter\r\n","Url":"https://github.com/angular/components/issues/20749","RelatedDescription":"Open issue \"bug(DATEPICKER): DatePicker shows prior date inside the calendar but correct date in the input field.\" (#20749)"},{"Id":"717107664","IsPullRequest":true,"CreatedAt":"2020-10-08T07:45:41","Actor":"geromegrignon","Number":"20748","RawContent":null,"Title":"docs(material/table): add multiTemplateDataRows specification","State":"open","Body":"## Purpose\r\n\r\nAdd a section to material/table documentation about how to retrieve the index of a row when using the `multiTemplateDataRows` directive. This information is only accessible as a comment into the [row.ts file](https://github.com/angular/components/blob/34a7e382144bb63965589002d0ed6bb046ac6054/src/cdk/table/row.ts) of the cdk.\r\n\r\n```\r\n\r\n        Context provided to the row cells when multiTemplateDataRows is true. This context is the same\r\n        as CdkCellOutletRowContext except that the single index value is replaced by dataIndex and\r\n        renderIndex.\r\n\r\n\r\n```\r\n\r\n## Motivation\r\nHaving notifications over time about a related issue i gave an answer 2 years ago.\r\n\r\nIssue #12793","Url":"https://github.com/angular/components/pull/20748","RelatedDescription":"Open PR \"docs(material/table): add multiTemplateDataRows specification\" (#20748)"},{"Id":"716232216","IsPullRequest":true,"CreatedAt":"2020-10-08T03:05:18","Actor":"crisbeto","Number":"20743","RawContent":null,"Title":"build: fix drag-drop demo","State":"closed","Body":"I left in some invalid code in the `drag-drop` demo by accident while working on #20668 which is throwing an error now.","Url":"https://github.com/angular/components/pull/20743","RelatedDescription":"Closed or merged PR \"build: fix drag-drop demo\" (#20743)"},{"Id":"716804725","IsPullRequest":true,"CreatedAt":"2020-10-07T21:08:04","Actor":"crisbeto","Number":"20746","RawContent":null,"Title":"test(material/datepicker): fix test failure","State":"closed","Body":"A PR that changes the DOM structure of the datepicker went in at the same time as a PR that was depending on the old one, causing a test failure.","Url":"https://github.com/angular/components/pull/20746","RelatedDescription":"Closed or merged PR \"test(material/datepicker): fix test failure\" (#20746)"},{"Id":"716807655","IsPullRequest":true,"CreatedAt":"2020-10-07T19:51:55","Actor":"jelbourn","Number":"20747","RawContent":null,"Title":"docs: update readme for Q4 2020","State":"open","Body":"Fixes #20710","Url":"https://github.com/angular/components/pull/20747","RelatedDescription":"Open PR \"docs: update readme for Q4 2020\" (#20747)"},{"Id":"715937201","IsPullRequest":true,"CreatedAt":"2020-10-07T19:17:50","Actor":"mmalerba","Number":"20740","RawContent":null,"Title":"docs(cdk/collections): clarify internal method documentation","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/20740","RelatedDescription":"Closed or merged PR \"docs(cdk/collections): clarify internal method documentation\" (#20740)"},{"Id":"716636173","IsPullRequest":true,"CreatedAt":"2020-10-07T15:31:17","Actor":"crisbeto","Number":"20745","RawContent":null,"Title":"refactor: update to the latest Angular next versions and account for schematics breaking changes","State":"open","Body":"These changes update us to the latest `next` versions of the Angular packages and the latest canary of MDC. \r\n\r\nFurthermore, the latest version of the CLI removed some deprecated APIs that we were depending on. These changes update all the code so that it used the correct API (according to the CLI team). High-level overview of the changes and why they were necessary:\r\n1. Previously we parsed the `angular.json` ourselves using `JSON.parse` in order to support very old versions of the CLI, however this is no longer feasible, because the CLI has set up classes around the parsed data which are non-trivial to construct. According to the CLI, we don't have to worry about older version anymore, because the schematics infrastructure will ensure that we're running against the correct version.\r\n2. The interface of the new API is different from the one we were using before so I had to rewrite some code.\r\n3. Some of these new APIs are asynchronous so I've had to move some code around to accommodate it.\r\n4. Previously we would `JSON.parse` and `JSON.stringify` the `angular.json` file whenever we needed to mutate it (e.g. when adding a theme), but this isn't possible anymore due to the aforementioned classes around the config file. I've reworked our schematics to use a utility from the CLI to write to the file.\r\n5. A lot of our tests depended on parsing the `angular.json`, changing a property and writing it back as JSON. This isn't possible, because the abstraction around the config can't be stringified so I've worked around it by writing out the `angular.json` file from scratch in the test. While this is more code, it should be easier to maintain in the long term.","Url":"https://github.com/angular/components/pull/20745","RelatedDescription":"Open PR \"refactor: update to the latest Angular next versions and account for schematics breaking changes\" (#20745)"},{"Id":"716229575","IsPullRequest":true,"CreatedAt":"2020-10-07T06:12:51","Actor":"crisbeto","Number":"20742","RawContent":null,"Title":"fix(cdk/drag-drop): references to SVG not working inside preview","State":"open","Body":"When we create a drag preview we clone the original element, move it to the bottom of the `body`, set it to `display: none` and clear all `id` attributes from the clone. As a result, SVG references inside the element break, because the source node is invisible.\r\n\r\nThese changes resolve the issue by moving the original element outside the layout and making it transparent, instead of using `display: none`.\r\n\r\nFixes #20720.","Url":"https://github.com/angular/components/pull/20742","RelatedDescription":"Open PR \"fix(cdk/drag-drop): references to SVG not working inside preview\" (#20742)"},{"Id":"715838605","IsPullRequest":false,"CreatedAt":"2020-10-06T22:03:14","Actor":"kartikgreen","Number":"20738","RawContent":null,"Title":"cannot pass options as a template to mat-select","State":"closed","Body":"I am trying to pass mat-options as a template to mat-select but it doesn't work. Below here is the link to stackblitz,\r\n\r\nhttps://stackblitz.com/edit/angular-mat-select-with-ngmodel-mujorn?embed=1&file=app/select-overview-example.ts","Url":"https://github.com/angular/components/issues/20738","RelatedDescription":"Closed issue \"cannot pass options as a template to mat-select\" (#20738)"},{"Id":"715908517","IsPullRequest":true,"CreatedAt":"2020-10-06T18:13:03","Actor":"wagnermaciel","Number":"20739","RawContent":null,"Title":"fix(material-experimental/mdc-form-field): implement new methods added to text field adapter","State":"open","Body":"Project import generated by Copybara.\n","Url":"https://github.com/angular/components/pull/20739","RelatedDescription":"Open PR \"fix(material-experimental/mdc-form-field): implement new methods added to text field adapter\" (#20739)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-12T05:30:04.9380798Z","RunDurationInMilliseconds":2664}