{"Data":{"Angular-Issues":{"Issues":[{"Id":"1895546106","IsPullRequest":true,"CreatedAt":"2023-09-14T02:29:34","Actor":"pmvald","Number":"51767","RawContent":null,"Title":"Flatten scope info in local compilation mode","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51767","RelatedDescription":"Open PR \"Flatten scope info in local compilation mode\" (#51767)"},{"Id":"1895127700","IsPullRequest":false,"CreatedAt":"2023-09-13T20:19:15","Actor":"Christian24","Number":"51765","RawContent":null,"Title":"Improve types for TestModuleMetadata","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nHello,\r\n\r\nI wish `TestModuleMetadata` were typed a little more. I have seen something along the lines of:\r\n\r\n```typescript\r\nawait TestBed.configureTestingModule({\r\n      declarations: [\r\n        AppComponent\r\n      ],\r\n      providers: [{provide: MyService, usevalue: myMock}]\r\n    }).compileComponents();\r\n```\r\n\r\n`useValue` isn't written correctly, there is no error in the static code analysis, because the actual type is just `any[]`.\n\n### Proposed solution\n\nMaybe we can change it to something like:\r\n\r\n```typescript\r\nexport interface ProviderInterface {\r\n  provide: any;\r\n  useValue: any;\r\n  multi?: boolean;\r\n}\r\n... TestModuleMetadata\r\nimports?: Array<Type<any>|ModuleWithProviders<unknown>|any[]>;\r\nproviders?: Array<ProviderInterface | TypeProvider | EnvironmentProviders>;\r\ncomponentProviders?: Array<ProviderInterface | TypeProvider | EnvironmentProviders>;\r\n```\r\n\r\nThis would still allow people to pass any mock for providers they want, but we would help them get the structure for the provider correctly. \n\n### Alternatives considered\n\nNone","Url":"https://github.com/angular/angular/issues/51765","RelatedDescription":"Closed issue \"Improve types for TestModuleMetadata\" (#51765)"},{"Id":"1895180054","IsPullRequest":true,"CreatedAt":"2023-09-13T19:59:29","Actor":"JeanMeche","Number":"51766","RawContent":null,"Title":"fix(core): define better typings for `TestModuleMetadata`.","State":"open","Body":"To improve compiler errors on `TestModuleMetadata`, lets replace `any`  for `providers`, `declarations` and `imports`\r\n\r\nfixes #37178\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x] Yes, maybe\r\n- [ ] No\r\n","Url":"https://github.com/angular/angular/pull/51766","RelatedDescription":"Open PR \"fix(core): define better typings for `TestModuleMetadata`.\" (#51766)"},{"Id":"1895047729","IsPullRequest":true,"CreatedAt":"2023-09-13T18:32:36","Actor":"devknoll","Number":"51764","RawContent":null,"Title":"refactor(core): optimize afterRender callback timing","State":"open","Body":"afterRender callbacks should only be run when the DOM has changed, while afterNextRender should force callbacks to run even if the DOM hasn't changed\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\n`afterRender` callbacks are run after every root change detection cycle.\r\n\r\n\r\n## What is the new behavior?\r\n\r\n`afterRender` callbacks are run after every root change detection cycle, provided that the DOM was mutated (via `Renderer2`) during that cycle. If an `afterNextRender` callback is queued, all callbacks (including any `afterRender`) will run at the next opportunity, regardless of whether the DOM was mutated.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n`afterRender` is in developer preview, and so this is not considered a breaking change.\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51764","RelatedDescription":"Open PR \"refactor(core): optimize afterRender callback timing\" (#51764)"},{"Id":"1894297123","IsPullRequest":true,"CreatedAt":"2023-09-13T17:49:12","Actor":"alan-agius4","Number":"51755","RawContent":null,"Title":"build: remove support for Node.js v16","State":"closed","Body":"BREAKING CHANGE: Node.js v16 support has been removed and the minimum support version has been bumped to 18.13.0.\r\n\r\nNode.js v16 is planned to be End-of-Life on 2023-09-11. Angular will stop supporting Node.js v16 in Angular v17. For Node.js release schedule details, please see: https://github.com/nodejs/release#release-schedule\r\n\r\nNote: this change has already been done in the CLI https://github.com/angular/angular-cli/pull/25675\r\n","Url":"https://github.com/angular/angular/pull/51755","RelatedDescription":"Closed or merged PR \"build: remove support for Node.js v16\" (#51755)"},{"Id":"1893881897","IsPullRequest":true,"CreatedAt":"2023-09-13T17:48:38","Actor":"crisbeto","Number":"51751","RawContent":null,"Title":"test(compiler): fix broken integrity check","State":"closed","Body":"The `verifyPlaceholdersIntegrity` check in the compliance tests was basically a noop, because it was returning false inside a `forEach` callback. Fixing it revealed that it had fallen out of date, because one of the regexes it uses was incorrect. The problem is that it assumed the placeholder keys would always be string literals, however it's possible that they're identifiers. These changes resolve the issue by not looking at the keys at all since we don't do anything with them.","Url":"https://github.com/angular/angular/pull/51751","RelatedDescription":"Closed or merged PR \"test(compiler): fix broken integrity check\" (#51751)"},{"Id":"1893375862","IsPullRequest":true,"CreatedAt":"2023-09-13T17:48:01","Actor":"AndrewKushnir","Number":"51747","RawContent":null,"Title":"refactor(docs-infra): increase timeout for flaky tests","State":"closed","Body":"This commit updates the `jasmine.DEFAULT_TIMEOUT_INTERVAL` value for some AIO tests from 10 -> 20 seconds to give more time to complete processing. This commit also refactors tests to use async/await pattern.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51747","RelatedDescription":"Closed or merged PR \"refactor(docs-infra): increase timeout for flaky tests\" (#51747)"},{"Id":"1894979354","IsPullRequest":true,"CreatedAt":"2023-09-13T17:44:15","Actor":"AndrewKushnir","Number":"51762","RawContent":null,"Title":"Bump version to \"v17.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51762","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.4\" with changelog.\" (#51762)"},{"Id":"1894970390","IsPullRequest":true,"CreatedAt":"2023-09-13T17:36:57","Actor":"angular-robot","Number":"51761","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"open","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51761","RelatedDescription":"Open PR \"docs: update Angular CLI help [main]\" (#51761)"},{"Id":"1894968674","IsPullRequest":true,"CreatedAt":"2023-09-13T17:35:58","Actor":"AndrewKushnir","Number":"51760","RawContent":null,"Title":"docs: release notes for the v16.2.5 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/51760","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.5 release\" (#51760)"},{"Id":"1894965771","IsPullRequest":true,"CreatedAt":"2023-09-13T17:33:40","Actor":"AndrewKushnir","Number":"51759","RawContent":null,"Title":"Bump version to \"v16.2.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51759","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.5\" with changelog.\" (#51759)"},{"Id":"1894835513","IsPullRequest":false,"CreatedAt":"2023-09-13T16:05:08","Actor":"Nvveen","Number":"51758","RawContent":null,"Title":"Unexported classes as host directives is an error in Angular Language Service","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI was messing around with using host directives to abstract some behavior, where I used inheritance on external library directives that aren't marked as standalone, and not exporting them. Using those as host directives works for the Angular compiler, but recently (?) the Angular Language Service marks this as an error.\r\nI would rather not export them because their only use is to mark as standalone, preserve their behavior and use them as host directives.\r\nThe provided reproduction does not give a warning like my editor does, but it gives the general impression.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/angular-ttxx81?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nMyDirective must be a standalone directive to be used as a host directive\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.1.4\r\nNode: 16.20.2\r\nPackage Manager: npm 8.19.4\r\nOS: linux x64\r\n\r\nAngular: 16.1.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.4\r\n@angular-devkit/build-angular   16.1.4\r\n@angular-devkit/core            16.1.4\r\n@angular-devkit/schematics      16.1.4\r\n@schematics/angular             16.1.4\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51758","RelatedDescription":"Closed issue \"Unexported classes as host directives is an error in Angular Language Service\" (#51758)"},{"Id":"1894634303","IsPullRequest":true,"CreatedAt":"2023-09-13T14:17:02","Actor":"pkozlowski-opensource","Number":"51757","RawContent":null,"Title":"fix(core): make sure that destroyed watch nodes dont run again","State":"open","Body":"This commit moves the destroy logic from 'effect' in the lower-level 'watch' so this implementation is shared among varius watch implementations.\r\n","Url":"https://github.com/angular/angular/pull/51757","RelatedDescription":"Open PR \"fix(core): make sure that destroyed watch nodes dont run again\" (#51757)"},{"Id":"1894048532","IsPullRequest":true,"CreatedAt":"2023-09-13T11:23:29","Actor":"alan-agius4","Number":"51754","RawContent":null,"Title":"fix(core): test remove initial task in microtask","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51754","RelatedDescription":"Closed or merged PR \"fix(core): test remove initial task in microtask\" (#51754)"},{"Id":"1894005012","IsPullRequest":false,"CreatedAt":"2023-09-13T09:15:16","Actor":"anoop-mobi","Number":"51753","RawContent":null,"Title":"Angular 16 Email validation error using pattern ","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\npublic repo: https://github.com/anoop-mobi/template-drivan-email-pattern\r\n\r\nEmail Validation using the pattern is throwing error on console \r\n\r\ni have Installed fresh angular 16 to check it. in the given public repo you can see the code \r\n**Error**\r\n<img width=\"955\" alt=\"image\" src=\"https://github.com/angular/angular/assets/28626409/5cf42487-74fb-41a1-88f2-8fb4038b15de\">\r\n\r\ncomponent.ts\r\n<img width=\"438\" alt=\"image\" src=\"https://github.com/angular/angular/assets/28626409/1c0a4bfb-fdec-4c67-9dfd-1f77272ff8ee\">\r\n\r\ncomponent.html\r\n<img width=\"542\" alt=\"image\" src=\"https://github.com/angular/angular/assets/28626409/b6328816-3cfc-40f0-96b6-3ba9538aa735\">\r\n\r\n\r\n\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nPattern attribute value ^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$ is not a valid regular expression\n\n### Please provide the exception or error you saw\n\n```true\nPattern attribute value ^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$ is not a valid regular expression: Uncaught SyntaxError: Invalid regular expression: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/v: Invalid character in character class\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.1\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    16.2.1\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\nI saw that in angular 16 and 15 not sure about prev","Url":"https://github.com/angular/angular/issues/51753","RelatedDescription":"Closed issue \"Angular 16 Email validation error using pattern \" (#51753)"},{"Id":"1893949391","IsPullRequest":true,"CreatedAt":"2023-09-13T07:48:22","Actor":"alan-agius4","Number":"51752","RawContent":null,"Title":"feat(zone.js): remove legacy files and access to deep imports","State":"open","Body":"This commit removes access to deep imports and `zone-testing-bundle` and `zone-testing-node-bundle`\r\n\r\nThis commit removed access to deep and legacy `dist` imports. `zone-testing-bundle` and `zone-testing-node-bundle` are also no longer generated.\r\n\r\nBREAKING CHANGE:\r\nDeep and legacy `dist/` imports like `zone.js/bundles/zone-testing.js` and `zone.js/dist/zone` are no longer allowed. `zone-testing-bundle` and `zone-testing-node-bundle` are also no longer part of the package.\r\n\r\nThe proper way to import `zone.js` and `zone.js/testing` is:\r\n```js\r\nimport 'zone.js';\r\nimport 'zone.js/testing';\r\n","Url":"https://github.com/angular/angular/pull/51752","RelatedDescription":"Open PR \"feat(zone.js): remove legacy files and access to deep imports\" (#51752)"},{"Id":"1893601299","IsPullRequest":true,"CreatedAt":"2023-09-13T02:14:18","Actor":"AndrewKushnir","Number":"51750","RawContent":null,"Title":"refactor(core): add batching for defer blocks with `on idle` conditions","State":"open","Body":"**NOTE: this is a WIP PR, missing some docs and extra tests.**\r\n\r\nThis commit updates runtime logic of defer blocks to schedule a single `requestIdleCallback` for a group of defer blocks created within a single change detection cycle (for example, as a result of a defer block being defined in a for loop).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51750","RelatedDescription":"Open PR \"refactor(core): add batching for defer blocks with `on idle` conditions\" (#51750)"},{"Id":"1893551931","IsPullRequest":false,"CreatedAt":"2023-09-13T01:07:39","Actor":"gabynevada","Number":"51749","RawContent":null,"Title":"NgOptimizedImage add ability to add media queries for image sources","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon\r\n\r\n### Description\r\n\r\nI have a use case of utilizing different images on my website for light vs dark mode. Is adding multiple image sources something that the NgOptimizedImage will cover in future versions?\r\n\r\n### Proposed solution\r\n\r\nA possible approach could be via a property similar to sizes:\r\n```html\r\n<img ngSrc=\"day.jpg\" width=\"400\" height=\"200\" sources=\"(prefers-color-scheme: dark) night.jpg\">\r\n```\r\n\r\nOr making the picture element compatible with the directive: \r\n```html\r\n<picture>\r\n    <source srcset=\"night.jpg\" media=\"(prefers-color-scheme: dark)\">\r\n    <img ngSrc=\"day.jpg\">\r\n</picture>\r\n```\r\n\r\n### Alternatives considered\r\n\r\nNot using the NgOptimizedImage and using the html picture element like so:\r\n\r\n```html\r\n<picture>\r\n    <source srcset=\"night.jpg\" media=\"(prefers-color-scheme: dark)\">\r\n    <img src=\"day.jpg\">\r\n</picture>\r\n```","Url":"https://github.com/angular/angular/issues/51749","RelatedDescription":"Open issue \"NgOptimizedImage add ability to add media queries for image sources\" (#51749)"},{"Id":"1893417472","IsPullRequest":true,"CreatedAt":"2023-09-12T22:49:53","Actor":"atcastle","Number":"51748","RawContent":null,"Title":"feat(common): make the warning for lazy-loaded lcp image an error","State":"open","Body":"This PR upgrades on the of the NgOptimizedImage warnings to an error. The warning upgraded is the one that fires when you don't use the `priority` attribute on your LCP image, which will cause it to lazy-load and can hurt LCP performance.\r\n\r\nThis error is only present when the application is run in dev mode. Because the error is thrown outside of the page rendering process, it is logged in the console as an error, but does not interrupt browsing the application. CC: @kara @AndrewKushnir ","Url":"https://github.com/angular/angular/pull/51748","RelatedDescription":"Open PR \"feat(common): make the warning for lazy-loaded lcp image an error\" (#51748)"},{"Id":"1893356523","IsPullRequest":true,"CreatedAt":"2023-09-12T22:02:04","Actor":"atscott","Number":"51746","RawContent":null,"Title":"feat(language-service): Enable go to definition of styleUrl","State":"open","Body":"This commit enables 'go to definition' action for the new 'styleUrl' property\r\n","Url":"https://github.com/angular/angular/pull/51746","RelatedDescription":"Open PR \"feat(language-service): Enable go to definition of styleUrl\" (#51746)"},{"Id":"1892076815","IsPullRequest":true,"CreatedAt":"2023-09-12T19:56:33","Actor":"crisbeto","Number":"51738","RawContent":null,"Title":"build: skip simulated file system tests on Windows","State":"closed","Body":"The code for detecting a Windows CI run from #51701 didn't work, because Bazel isolates the environment variables. These changes work around the issue by passing in a custom variable with the `--test_env` flag.","Url":"https://github.com/angular/angular/pull/51738","RelatedDescription":"Closed or merged PR \"build: skip simulated file system tests on Windows\" (#51738)"},{"Id":"1893158129","IsPullRequest":true,"CreatedAt":"2023-09-12T19:50:20","Actor":"atscott","Number":"51745","RawContent":null,"Title":"fix(router): Remove malformedUriErrorHandler from `ExtraOptions`","State":"open","Body":"The `malformedUriErrorHandler` is used as a recovery mechanism for when the `UrlSerializer` throws an error when parsing a URL string. If custom error handling is desired for this, it should instead be done inside the `UrlSerializer.parse` method itself. There's no reason to have an entire feature option built around what can otherwise just be `try...catch`.\r\n\r\nBREAKING CHANGE: `malformedUriErrorHandler` is no longer available in the `RouterModule.forRoot` options. URL parsing errors should instead be handled in the `UrlSerializer.parse` method.","Url":"https://github.com/angular/angular/pull/51745","RelatedDescription":"Open PR \"fix(router): Remove malformedUriErrorHandler from `ExtraOptions`\" (#51745)"},{"Id":"1893034053","IsPullRequest":true,"CreatedAt":"2023-09-12T18:18:10","Actor":"rflemerson","Number":"51744","RawContent":null,"Title":"docs: fix broken image links in tutorial","State":"open","Body":"This is to fix broken image links in the first-app tutorial documentation with functional links that match the working examples.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nIf you followed the links provided in the tutorial, you would encounter broken images.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe broken image links in the tutorial documentation have been fixed.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51744","RelatedDescription":"Open PR \"docs: fix broken image links in tutorial\" (#51744)"},{"Id":"1892748604","IsPullRequest":true,"CreatedAt":"2023-09-12T18:16:26","Actor":"alan-agius4","Number":"51742","RawContent":null,"Title":"release: cut the zone.js-0.13.3 release","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51742","RelatedDescription":"Closed or merged PR \"release: cut the zone.js-0.13.3 release\" (#51742)"},{"Id":"1892836358","IsPullRequest":false,"CreatedAt":"2023-09-12T16:12:33","Actor":"johnwest80","Number":"51743","RawContent":null,"Title":"Unit tests confirm that css generated with attribute selector on host is incorrect as of a16","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nBelow is the css and unit test i wrote to confirm it's generated incorrectly.\r\n\r\n**original css**\r\n\r\n:host[size=full]>espresso-modal-container>espresso-modal-content-container {\r\n  min-width: 100vw;\r\n  max-width: 100vw;\r\n  width: 100vw;\r\n  min-height: 100%;\r\n  max-height: 100%;\r\n  height: 100%\r\n}\r\n\r\n**expected css**\r\n\r\n[size=full][HOSTA]>espresso-modal-container[CONTENTA]>espresso-modal-content-container[CONTENTA] {\r\n  min-width: 100vw;\r\n  max-width: 100vw;\r\n  width: 100vw;\r\n  min-height: 100%;\r\n  max-height: 100%;\r\n  height: 100%\r\n}\r\n\r\n**actual css**\r\n\r\n[size=full]>espresso-modal-container>espresso-modal-content-container[HOSTA] {\r\n  min-width: 100vw;\r\n  max-width: 100vw;\r\n  width: 100vw;\r\n  min-height: 100%;\r\n  max-height: 100%;\r\n  height: 100%\r\n}\r\n\r\n**angular unit test i added to shadow_css_spec.ts**\r\n\r\ndescribe('ShadowCss', () => {\r\n  it('should handle attribute before host', () => {\r\n    const css = ':host[size=full]>espresso-modal-container>espresso-modal-content-container{min-width:100vw;max-width:100vw;width:100vw;min-height:100%;max-height:100%;height:100%}';\r\n    const expected = '[size=full][HOSTA]>espresso-modal-container[CONTENTA]>espresso-modal-content-container[CONTENTA]{min-width:100vw;max-width:100vw;width:100vw;min-height:100%;max-height:100%;height:100%}';\r\n    expect(shim(css, 'CONTENTA', 'HOSTA')).toEqualCss(expected);\r\n  });\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nall is in above details\n\n### Please provide the exception or error you saw\n\n```true\nincorrect css generated as shown and reproduced via the unit test above\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.15\r\nNode: 18.13.0\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin x64\n```\n\n\n### Anything else?\n\nconfirmed this works as expected in 14, not sure about 15","Url":"https://github.com/angular/angular/issues/51743","RelatedDescription":"Closed issue \"Unit tests confirm that css generated with attribute selector on host is incorrect as of a16\" (#51743)"},{"Id":"1891970475","IsPullRequest":true,"CreatedAt":"2023-09-12T15:08:39","Actor":"alan-agius4","Number":"51737","RawContent":null,"Title":"Zonejs package exports fixes","State":"closed","Body":"\r\n**fix(zone.js): temporary allow deep imports**\r\n    \r\n`jest-preset-angular` imports `zone.js` using deep imports. This commit temporary allow this until the correct entry-points are used upstream. See: https://github.com/thymikee/jest-preset-angular/issues/2162\r\n\r\n\r\n**fix(zone.js): rename `typings` conditional export to `types`**\r\n    \r\n`typings` is not valid for TypeScript. See: https://www.typescriptlang.org/docs/handbook/esm-node.html for more information.\r\n","Url":"https://github.com/angular/angular/pull/51737","RelatedDescription":"Closed or merged PR \"Zonejs package exports fixes\" (#51737)"},{"Id":"1892515810","IsPullRequest":false,"CreatedAt":"2023-09-12T13:21:53","Actor":"intellix","Number":"51741","RawContent":null,"Title":"provideClientHydration does not wait for a waterfall of requests for caching","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nSo the way that our application works, we kind of have a waterfall of requests due to needing to visit multiple sources for some information:\r\n- A) go to CMS to get list of campaigns for guest users\r\n- B) go to API to fetch information about those campaigns\r\n- C) go back to CMS to fetch the content for the bonuses associated with those campaigns (interpolation purposes etc)\r\n\r\nSo you end up with requests like so:\r\n```\r\nA.....\r\n       B.....\r\n              C......... (fully ready)\r\n```\r\n\r\nObviously we have caching within our CDN so it's not TOO slow, but when delivering a response from Universal SSR you kind of get this: appReady: false..... true....... false....... true.\r\n\r\nWe've been using TransferState to cache things like so:\r\n```ts\r\nreturn cmsCache.has(CACHE_KEY) ? cmsCache.get(CACHE_KEY) : cmsService.fetchSomething(...);\r\n```\r\n\r\nWe sent that data to the browser and re-hydrated like so:\r\n```ts\r\nexport const CACHE_STATE_KEY = makeStateKey<any>('api-cache.state');\r\nexport const apiCache = new Map<ApiCacheKey | string, any>();\r\n\r\n...\r\n\r\n// SSR hydration and dehydration of the cache\r\nif (transferState.hasKey(CACHE_STATE_KEY)) {\r\n  const state = transferState.get(CACHE_STATE_KEY, {});\r\n  for (const key of Object.keys(state)) {\r\n    apiCache.set(key, state[key]);\r\n  }\r\n} else {\r\n  transferState.onSerialize(CACHE_STATE_KEY, () => Object.fromEntries(apiCache.entries()));\r\n  apiCache.clear();\r\n}\r\n```\r\n\r\nNow since Angular 16 there's experimental DOM Hydration and automatic HTTP Caching I thought great, I can delete most of my custom code and just use that.\r\n\r\nAfter testing it, it mostly looked good but I noticed that there are a few API requests being made in both server and client. If I add logging to those, I can see them being made in both places but they never get added to TransferState. After some digging I found the culprits:\r\n\r\nhttps://github.com/angular/angular/blob/main/packages/common/http/src/transfer_cache.ts#L170C1-L172C14\r\n\r\nhttps://github.com/angular/universal/blob/main/modules/common/src/transfer_http.ts#L82-L89\r\n\r\nFor caching and transferState to be used, the application needs to do everything before the first ready state and can't be: unready/ready/unready/ready (as more requests/pending tasks are discovered).\r\n\r\nIs there any reaason for it to work like this? It can't be correct because Universal still doesn't return the response until all of that is 100% settled anyway, so shouldn't the caching/transferstate also work the same way?\r\n\r\nIn my opinion, either:\r\n - The logic for when universal should stop what it's doing and deliver the response, should be the same as when cache and TransferState stop recording\r\n - Cache and TransferState shouldn't stop recording until Universal is fully ready and delivers the response\r\n\r\nI'm assuming there's something I'm missing here for why it works the way it does.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.1\r\nNode: 16.14.0\r\nPackage Manager: yarn 1.22.17\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cdk                    16.2.2\r\n@angular/cli                    16.2.1\r\n@angular/flex-layout            15.0.0-beta.42\r\n@angular/material               16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nwebpack                         5.88.2\r\nzone.js                         0.13.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nAs it stands, the only way for me proceed is to either:\r\n- Copy/Paste all logic and provide it myself using the private APIs\r\n- Hack my application to force all 3x requests (A, B, C) to be in a single observable and wait for it, instead of letting universal discover when it's ready based on what appears in the DOM and what is newly discovered.","Url":"https://github.com/angular/angular/issues/51741","RelatedDescription":"Open issue \"provideClientHydration does not wait for a waterfall of requests for caching\" (#51741)"},{"Id":"1892507132","IsPullRequest":false,"CreatedAt":"2023-09-12T13:17:23","Actor":"Nvveen","Number":"51740","RawContent":null,"Title":"Angular Devtools don't work when launching from VSCode with \"--user-data-dir\"","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am running a debugging Chrome instance from a Remote Docker Devcontainer from VSCode. When I specify the user data directory through \"userDataDir\" in launch.json, and install the devtools in the resulting profile, the devtools appear with a broken UI and quickly crash with the error `Uncaught Error: Extension context invalidated\" (at ng_validate_bundle.js).`. However, if I install the devtools in my normal profile or run the debug instance with the \"userDataDir\": false option, the extension works. (Note: \"userDataDir\" is the equivalent to the commandline Chrome flag `--user-data-dir=`.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nUncaught Error: Extension context invalidated\" (at ng_validate_bundle.js).\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.4\r\nNode: 16.20.2\r\nPackage Manager: npm 8.19.4\r\nOS: linux x64\r\n\r\nAngular: 16.1.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\n                                \r\nPackage                         Version                        \r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.4\r\n@angular-devkit/build-angular   16.1.4\r\n@angular-devkit/core            16.1.4\r\n@angular-devkit/schematics      16.1.4\r\n@schematics/angular             16.1.4\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51740","RelatedDescription":"Open issue \"Angular Devtools don't work when launching from VSCode with \"--user-data-dir\"\" (#51740)"},{"Id":"1892405057","IsPullRequest":true,"CreatedAt":"2023-09-12T12:23:30","Actor":"costinsin","Number":"51739","RawContent":null,"Title":"Use TaskType keys for counting tasks instead of hardcoding the key values","State":"open","Body":"Change the type of `_taskCounts` to an IndexSignature that can have keys named as the values of the `TaskType` type.\r\n\r\nThe Closure Compiler used at Google has a property renaming optimization that can change the property names when minifying code. Having the correct type helps the TSJS team that develops a tool to identfy property renaming issues directly in TypeScript.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\nThe program behavior did not change.\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n","Url":"https://github.com/angular/angular/pull/51739","RelatedDescription":"Open PR \"Use TaskType keys for counting tasks instead of hardcoding the key values\" (#51739)"},{"Id":"1891711154","IsPullRequest":true,"CreatedAt":"2023-09-12T05:44:13","Actor":"akib1997","Number":"51736","RawContent":null,"Title":"docs(docs-infra): update service worker browser compatibility reference","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nThe current referenced [Link](https://developer.chrome.com/docs/workbox/service-worker-overview/) doesn't contain Browser Support section.\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nAdd MDN's Browser Compatibility reference:\r\n[MDN](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker)'s [Browser Compatibility](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker#browser_compatibility) section of [ServiceWorker](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51736","RelatedDescription":"Open PR \"docs(docs-infra): update service worker browser compatibility reference\" (#51736)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1894986233","IsPullRequest":true,"CreatedAt":"2023-09-13T17:49:25","Actor":"alan-agius4","Number":"25836","RawContent":null,"Title":"fix(@angular-devkit/build-angular): correctly re-point RXJS to ESM on Windows","State":"open","Body":"Previously, the path matching and replacement did not consider non posix file systems like windows.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25836","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): correctly re-point RXJS to ESM on Windows\" (#25836)"},{"Id":"1894844199","IsPullRequest":true,"CreatedAt":"2023-09-13T16:09:48","Actor":"alan-agius4","Number":"25835","RawContent":null,"Title":"release: cut the v17.0.0-next.4 release","State":"closed","Body":"(cherry picked from commit 6a89dbea26e50eb6f1d2e09e4fb7dbe1b923b802)\r\n","Url":"https://github.com/angular/angular-cli/pull/25835","RelatedDescription":"Closed or merged PR \"release: cut the v17.0.0-next.4 release\" (#25835)"},{"Id":"1894838723","IsPullRequest":true,"CreatedAt":"2023-09-13T16:05:47","Actor":"alan-agius4","Number":"25834","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.1.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the feature-freeze phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.0.0-next.4 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/25834","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.1.0-next.0\".\" (#25834)"},{"Id":"1894816154","IsPullRequest":true,"CreatedAt":"2023-09-13T16:01:39","Actor":"alan-agius4","Number":"25833","RawContent":null,"Title":"Bump version to \"v17.0.0-next.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25833","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.4\" with changelog.\" (#25833)"},{"Id":"1894645680","IsPullRequest":false,"CreatedAt":"2023-09-13T15:59:31","Actor":"vzakharov-rxnt","Number":"25830","RawContent":null,"Title":"ngDevMode is not defined - regression since 15.2","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nAfter upgrading from prior 15.2 to 15.2 or later (including latest 16.x), I am getting `ngDevMode is not defined` error on app load. The error is terminating, app does not load.\r\n\r\nI am using **custom webpack** plugin and **esbuild-loader** to build my app.\r\n\r\nI reproduced the issue using standard Angular boilerplate project here:\r\n- https://ng-esbuild-minify.netlify.app/\r\n- https://github.com/vzakharov-rxnt/ng-esbuild-minify\r\n\r\nTo prove that it works fine in 15.1, I created a branch where the issue is fixed, and opened a PR to merge. Only package.json was changed, downgrading Angular to 15.1. PR triggers CI build, so you can confirm that the issue is indeed fixed:\r\n- https://github.com/vzakharov-rxnt/ng-esbuild-minify/pull/1\r\n- https://deploy-preview-1--ng-esbuild-minify.netlify.app/\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://ng-esbuild-minify.netlify.app/\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\ncore.mjs:11067 Uncaught ReferenceError: ngDevMode is not defined\r\n    at 991 (core.mjs:11067:54)\r\n    at a (bootstrap:19:30)\r\n    at Ko (main.500e5851.js:391:239)\r\n    at main.500e5851.js:391:254\r\n    at l (jsonp chunk loading:34:28)\r\n    at main.500e5851.js:1:90\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular: 16.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    16.2.1\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n### Anything else?\r\n\r\nIn a real production app, our custom webpack configuration file is more complex and required to make a hybrid AngularJS/Angular 16 app work.\r\n\r\nWe are using `EsbuildPlugin` to speed up prod build time by a factor of 2-3x, which is significant when it comes to CI/CD.","Url":"https://github.com/angular/angular-cli/issues/25830","RelatedDescription":"Closed issue \"ngDevMode is not defined - regression since 15.2\" (#25830)"},{"Id":"1894669974","IsPullRequest":true,"CreatedAt":"2023-09-13T14:49:30","Actor":"alan-agius4","Number":"25832","RawContent":null,"Title":"docs: release notes for the v16.2.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25832","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.2 release\" (#25832)"},{"Id":"1894665247","IsPullRequest":true,"CreatedAt":"2023-09-13T14:31:00","Actor":"alan-agius4","Number":"25831","RawContent":null,"Title":"Bump version to \"v16.2.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25831","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.2\" with changelog.\" (#25831)"},{"Id":"1894064081","IsPullRequest":true,"CreatedAt":"2023-09-13T14:23:22","Actor":"alan-agius4","Number":"25828","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove deep import of `zone.js/node`","State":"closed","Body":"\r\nThis is no longer needed as `zone.js` now has proper package exports.\r\n","Url":"https://github.com/angular/angular-cli/pull/25828","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove deep import of `zone.js/node`\" (#25828)"},{"Id":"1893962042","IsPullRequest":true,"CreatedAt":"2023-09-13T14:23:08","Actor":"alan-agius4","Number":"25827","RawContent":null,"Title":"build: update `https-proxy-agent` to version `7.0.2`","State":"closed","Body":"This commit updates `https-proxy-agent` to version 7+\r\n","Url":"https://github.com/angular/angular-cli/pull/25827","RelatedDescription":"Closed or merged PR \"build: update `https-proxy-agent` to version `7.0.2`\" (#25827)"},{"Id":"1894218573","IsPullRequest":true,"CreatedAt":"2023-09-13T10:19:53","Actor":"angular-robot","Number":"25829","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `5820176` -> `6ee6ad0` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `d1fcbc3` -> `a4bd2b8` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b88792a` -> `52f0e23` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `98bd574` -> `cfa9c46` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.2` -> `17.0.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.2/17.0.0-next.3) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `549dc26` -> `5191c10` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `386e1a6` -> `4fad91e` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `53d0b53` -> `7a9d82c` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `61b8a73` -> `ee9946d` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `eda29b9` -> `4f94abe` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `307cdb5` -> `c57877b` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `8406e8a` -> `85f11f3` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f86cf19` -> `8cae074` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.2` -> `17.0.0-next.3`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.2/17.0.0-next.3) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `3209f09` -> `030c432` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `497c902` -> `ec54820` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `1517b27` -> `7bc1c08` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `7b696f0` -> `480ecc6` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `01a9767` -> `bcc0d07` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `08977e1` -> `50c51ef` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `b96ece1` -> `4416246` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.0.0-next.3/17.0.0-next.4) |\n| angular/dev-infra | action | digest | `0f307b2` -> `ce0e679` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.0.0-next.4`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1700-next4-2023-09-13)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.0.0-next.3...17.0.0-next.4)\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [59387ee476](https://togithub.com/angular/angular/commit/59387ee476dff1a893a01fe5cbee3c95b93c0cdb) | feat | support styles and styleUrl as strings ([#&#8203;51715](https://togithub.com/angular/angular/pull/51715)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [73e4bf2ed2](https://togithub.com/angular/angular/commit/73e4bf2ed2471faf44a49b591e19a390d5867449) | feat | Add feature to support the View Transitions API ([#&#8203;51314](https://togithub.com/angular/angular/pull/51314)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.3`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next3-rock-rock-2023-09-13)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.2...17.0.0-next.3)\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [db06fa8d89](https://togithub.com/angular/components/commit/db06fa8d8939d793f598bc3dbedc96a5a71c0db0) | fix | **autocomplete:** requireSelection incorrectly resetting value when there are no options ([#&#8203;27781](https://togithub.com/angular/components/pull/27781)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25829","RelatedDescription":"Open PR \"build: update angular\" (#25829)"},{"Id":"1889941426","IsPullRequest":true,"CreatedAt":"2023-09-13T08:56:37","Actor":"angular-robot","Number":"25818","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25818","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25818)"},{"Id":"1888673113","IsPullRequest":true,"CreatedAt":"2023-09-13T07:33:51","Actor":"crisbeto","Number":"25812","RawContent":null,"Title":"Account for string literals in styles and the new styleUrls","State":"closed","Body":"Updates the JIT transformers to account for the upcoming changes from https://github.com/angular/angular/pull/51715.","Url":"https://github.com/angular/angular-cli/pull/25812","RelatedDescription":"Closed or merged PR \"Account for string literals in styles and the new styleUrls\" (#25812)"},{"Id":"1891686085","IsPullRequest":true,"CreatedAt":"2023-09-13T07:33:27","Actor":"angular-robot","Number":"25821","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `6daaa0d` -> `5820176` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `209efdd` -> `d1fcbc3` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `a870de5` -> `b88792a` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `0093c6c` -> `98bd574` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `0df7e37` -> `549dc26` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `9ad469d` -> `386e1a6` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `facbf57` -> `53d0b53` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `9634d99` -> `61b8a73` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `b0f25ab` -> `eda29b9` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `069a7d6` -> `307cdb5` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `d9f9d73` -> `8406e8a` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `f499466` -> `f86cf19` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `040435a` -> `3209f09` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `3e0d49e` -> `497c902` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `4e71837` -> `1517b27` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `af7983a` -> `7b696f0` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `89399a0` -> `01a9767` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `a1afbcf` -> `08977e1` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `fa1b571` -> `b96ece1` |\n| angular/dev-infra | action | digest | `c95355f` -> `0f307b2` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25821","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25821)"},{"Id":"1891686289","IsPullRequest":true,"CreatedAt":"2023-09-13T07:33:17","Actor":"angular-robot","Number":"25822","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel)) | dependencies | patch | [`7.22.5` -> `7.22.15`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.22.5/7.22.15) |\n| [@babel/plugin-transform-async-generator-functions](https://babel.dev/docs/en/next/babel-plugin-transform-async-generator-functions) ([source](https://togithub.com/babel/babel)) | devDependencies | patch | [`7.22.5` -> `7.22.15`](https://renovatebot.com/diffs/npm/@babel%2fplugin-transform-async-generator-functions/7.22.5/7.22.15) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) | devDependencies | minor | [`6.6.0` -> `6.7.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.6.0/6.7.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>babel/babel (@&#8203;babel/plugin-transform-async-generator-functions)</summary>\n\n### [`v7.22.15`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72215-2023-09-04)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.11...v7.22.15)\n\n##### :bug: Bug Fix\n\n-   `babel-core`\n    -   [#&#8203;15923](https://togithub.com/babel/babel/pull/15923) Only perform config loading re-entrancy check for cjs ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-cli`, `babel-core`, `babel-generator`, `babel-helper-builder-binary-assignment-operator-visitor`, `babel-helper-compilation-targets`, `babel-helper-create-class-features-plugin`, `babel-helper-create-regexp-features-plugin`, `babel-helper-member-expression-to-functions`, `babel-helper-module-imports`, `babel-helper-module-transforms`, `babel-helper-transform-fixture-test-runner`, `babel-helper-validator-identifier`, `babel-helper-validator-option`, `babel-helpers`, `babel-node`, `babel-parser`, `babel-plugin-bugfix-safari-id-destructuring-collision-in-function-expression`, `babel-plugin-bugfix-v8-spread-parameters-in-optional-chaining`, `babel-plugin-proposal-decorators`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-proposal-pipeline-operator`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-block-scoping`, `babel-plugin-transform-classes`, `babel-plugin-transform-destructuring`, `babel-plugin-transform-for-of`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-parameters`, `babel-plugin-transform-property-mutators`, `babel-plugin-transform-react-jsx`, `babel-plugin-transform-runtime`, `babel-plugin-transform-typescript`, `babel-preset-env`, `babel-preset-flow`, `babel-preset-react`, `babel-preset-typescript`, `babel-register`, `babel-standalone`, `babel-template`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15892](https://togithub.com/babel/babel/pull/15892) Add explicit `.ts`/`.js` extension to all imports in `src` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n### [`v7.22.11`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72211-2023-08-24)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.10...v7.22.11)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15882](https://togithub.com/babel/babel/pull/15882) Fix: fully remove TS nested type-only exported namespaces ([@&#8203;yangguansen](https://togithub.com/yangguansen))\n-   `babel-types`\n    -   [#&#8203;15867](https://togithub.com/babel/babel/pull/15867) fix: definition of TS function type params ([@&#8203;danez](https://togithub.com/danez))\n-   `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-dynamic-import`, `babel-plugin-transform-export-namespace-from`, `babel-plugin-transform-json-strings`, `babel-plugin-transform-logical-assignment-operators`, `babel-plugin-transform-nullish-coalescing-operator`, `babel-plugin-transform-numeric-separator`, `babel-plugin-transform-object-rest-spread`, `babel-plugin-transform-optional-catch-binding`, `babel-plugin-transform-optional-chaining`, `babel-plugin-transform-private-property-in-object`\n    -   [#&#8203;15858](https://togithub.com/babel/babel/pull/15858) fix(standalone): strip archived syntax plugins ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`\n    -   [#&#8203;15850](https://togithub.com/babel/babel/pull/15850) Support configuring cache in ESM configs ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n##### :house: Internal\n\n-   `babel-parser`\n    -   [#&#8203;10940](https://togithub.com/babel/babel/pull/10940) Do not record trailing comma pos when `maybeAsyncArrow: false` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helper-compilation-targets`, `babel-parser`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-syntax-decorators`, `babel-preset-env`, `babel-preset-react`, `babel-register`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15872](https://togithub.com/babel/babel/pull/15872) enable jest/no-standalone-expect ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-core`, `babel-helpers`, `babel-plugin-transform-async-generator-functions`, `babel-plugin-transform-modules-commonjs`, `babel-plugin-transform-regenerator`, `babel-preset-env`, `babel-runtime-corejs2`, `babel-runtime-corejs3`, `babel-runtime`\n    -   [#&#8203;15833](https://togithub.com/babel/babel/pull/15833) bump json5, terser and webpack, further minimize babel helpers ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   Other\n    -   [#&#8203;15846](https://togithub.com/babel/babel/pull/15846) Use Babel 8.0 alpha to build babel ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;15856](https://togithub.com/babel/babel/pull/15856) Exclude redundant files from publish process ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-bugfix-v8-spread-parameters-in-optional-chaining`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-classes`, `babel-plugin-transform-optional-chaining`, `babel-preset-env`\n    -   [#&#8203;15871](https://togithub.com/babel/babel/pull/15871) Simplify `?.` output when chain result is ignored ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n\n### [`v7.22.10`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v72210-2023-08-07)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.7...v7.22.10)\n\n##### :bug: Bug Fix\n\n-   `babel-plugin-transform-typescript`\n    -   [#&#8203;15799](https://togithub.com/babel/babel/pull/15799) \\[ts] Strip type-only namespaces ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n    -   [#&#8203;15798](https://togithub.com/babel/babel/pull/15798) \\[ts] Fix compiling extended exported nested namespace ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-helper-create-class-features-plugin`, `babel-plugin-proposal-decorators`, `babel-plugin-proposal-destructuring-private`, `babel-plugin-transform-class-properties`, `babel-plugin-transform-class-static-block`, `babel-plugin-transform-new-target`, `babel-plugin-transform-private-methods`, `babel-preset-env`\n    -   [#&#8203;15701](https://togithub.com/babel/babel/pull/15701) Memoize class binding when compiling private methods and static elements ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :nail_care: Polish\n\n-   `babel-cli`\n    -   [#&#8203;15824](https://togithub.com/babel/babel/pull/15824) Add `meta` object to `@babel/eslint-plugin` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-traverse`, `babel-types`\n    -   [#&#8203;15661](https://togithub.com/babel/babel/pull/15661) Improve the type definition of `path.isX` ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-generator`, `babel-types`\n    -   [#&#8203;15776](https://togithub.com/babel/babel/pull/15776) improve SourceLocation typing ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   Other\n    -   [#&#8203;15818](https://togithub.com/babel/babel/pull/15818) build: generate flow typings in prepublish job ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n    -   [#&#8203;15777](https://togithub.com/babel/babel/pull/15777) chore: bump dev dependencies and remove .eslintignore ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-cli`, `babel-core`, `babel-generator`, `babel-helper-builder-react-jsx`, `babel-preset-env`, `babel-standalone`\n    -   [#&#8203;15794](https://togithub.com/babel/babel/pull/15794) Enable `@typescript-eslint/no-redundant-type-constituents` rule ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-helper-compilation-targets`\n    -   [#&#8203;15811](https://togithub.com/babel/babel/pull/15811) Remove `@babel/core` peerDep from `helper-compilation-targets` ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   `babel-parser`\n    -   [#&#8203;15793](https://togithub.com/babel/babel/pull/15793) Use const enum in babel-parser ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n-   `babel-plugin-transform-runtime`, `babel-traverse`, `babel-types`\n    -   [#&#8203;15716](https://togithub.com/babel/babel/pull/15716) chore: Use `typescript-eslint@v6` with reworked configs ([@&#8203;JoshuaKGoldberg](https://togithub.com/JoshuaKGoldberg))\n\n##### :microscope: Output optimization\n\n-   `babel-plugin-transform-block-scoping`, `babel-plugin-transform-parameters`, `babel-plugin-transform-regenerator`\n    -   [#&#8203;15746](https://togithub.com/babel/babel/pull/15746) Reduce `transform-block-scoping` loops output size ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n\n### [`v7.22.7`](https://togithub.com/babel/babel/blob/HEAD/CHANGELOG.md#v7227-2023-07-06)\n\n[Compare Source](https://togithub.com/babel/babel/compare/v7.22.5...v7.22.7)\n\n##### :bug: Bug Fix\n\n-   `babel-generator`\n    -   [#&#8203;15719](https://togithub.com/babel/babel/pull/15719) fix: Avoid internally generating negative source maps columns ([@&#8203;liuxingbaoyu](https://togithub.com/liuxingbaoyu))\n-   `babel-core`, `babel-traverse`\n    -   [#&#8203;15725](https://togithub.com/babel/babel/pull/15725) Use `NodePath#hub` as part of the paths cache key ([@&#8203;nicolo-ribaudo](https://togithub.com/nicolo-ribaudo))\n-   Other\n    -   [#&#8203;15747](https://togithub.com/babel/babel/pull/15747) fix: export `meta` from `eslint-parser/experimental-worker` ([@&#8203;JLHwung](https://togithub.com/JLHwung))\n\n##### :house: Internal\n\n-   `babel-core`, `babel-traverse`\n    -   [#&#8203;15702](https://togithub.com/babel/babel/pull/15702) Refactor visitors merging ([@&#8203;nullableVoidPtr](https://togithub.com/nullableVoidPtr))\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.7.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#670-2023-09-11)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.6.0...v6.7.0)\n\n**Note:** Version bump only for package [@&#8203;typescript-eslint/parser](https://togithub.com/typescript-eslint/parser)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25822","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25822)"},{"Id":"1892938136","IsPullRequest":true,"CreatedAt":"2023-09-12T18:03:23","Actor":"clydin","Number":"25826","RawContent":null,"Title":"ci: CI TEST","State":"closed","Body":"TESTING PR ONLY","Url":"https://github.com/angular/angular-cli/pull/25826","RelatedDescription":"Closed or merged PR \"ci: CI TEST\" (#25826)"},{"Id":"1892239031","IsPullRequest":false,"CreatedAt":"2023-09-12T15:51:24","Actor":"akashkriplani","Number":"25823","RawContent":null,"Title":"Accessing root address will not redirect to base href","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n7.2.15\n\n### Description\n\nWhen you create minimal application, set the base href (e.g. \"/test/\") and access http://localhost:4200/ instead of http://localhost:4200/test/. You are not redirected to http://localhost:4200/test/ but shown white page containing:\r\n\r\nCannot GET /\r\nIn Angular 7, setting the base href will redirect you to http://localhost:4200/test/ when you access http://localhost:4200/.\n\n### Minimal Reproduction\n\nng new angular-basehref-test --interactive=false\r\ncd angular-basehref-test\r\nng serve --baseHref=/test/\n\n### Exception or Error\n\n```text\nCannot GET /\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 15.2.9\r\nNode: 18.16.1\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.2.9\r\n@schematics/angular             15.2.9\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25823","RelatedDescription":"Closed issue \"Accessing root address will not redirect to base href\" (#25823)"},{"Id":"1892786489","IsPullRequest":true,"CreatedAt":"2023-09-12T15:39:46","Actor":"clydin","Number":"25825","RawContent":null,"Title":"ci: move saucelabs browser testing to GHA","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/25825","RelatedDescription":"Open PR \"ci: move saucelabs browser testing to GHA\" (#25825)"},{"Id":"1892424038","IsPullRequest":false,"CreatedAt":"2023-09-12T12:33:52","Actor":"Nosfistis","Number":"25824","RawContent":null,"Title":"NodePackageLinkTask fails to execute in custom schematics","State":"open","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have created a custom `ngAdd` schematic, where I check a boolean option (`--local`), and if it is set I want to perform a link to a local package instead of the npm registry.\r\n\r\nIn order to do this, instead of:\r\n```Typescript\r\ncontext.addTask(new NodePackageInstallTask());\r\n```\r\nfor each package I want to link I do\r\n```Typescript\r\ncontext.addTask(new NodePackageLinkTask(packageName));\r\n```\r\n\r\nHowever, the command fails. It seems that the actual command being ran is `npm test-package` where `test-package` is the package I want to link.\r\n\r\nAfter checking the executor, it seems that the link command of `NodePackageLinkTask` is disregarded entirely:\r\nhttps://github.com/angular/angular-cli/blob/b4a12a9264033c18cdc2de81b05a2d1f41d549e2/packages/angular_devkit/schematics/tasks/package-manager/executor.ts#L91C9-L98\n\n### Minimal Reproduction\n\nFollow the ngAdd tutorial, and use `NodePackageLinkTask` instead of NodePackageInstallTask`.\n\n### Exception or Error\n\n```text\nUnknown command: `test-package`\n```\n\n\n### Your Environment\n\n```text\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1303.7\r\n@angular-devkit/build-angular      13.3.7\r\n@angular-devkit/core               13.3.7\r\n@angular-devkit/schematics         13.3.7\r\n@angular/cdk                       13.3.9\r\n@angular/cli                       13.3.7\r\n@angular/flex-layout               13.0.0-beta.38\r\n@angular/material                  13.3.9\r\n@angular/material-moment-adapter   13.3.9\r\n@schematics/angular                13.3.7\r\nng-packagr                         13.3.1\r\nrxjs                               7.5.5\r\ntypescript                         4.6.4\n```\n\n\n### Anything else relevant?\n\nThis does not seem to have changed in the past angular versions.","Url":"https://github.com/angular/angular-cli/issues/25824","RelatedDescription":"Open issue \"NodePackageLinkTask fails to execute in custom schematics\" (#25824)"},{"Id":"1890738394","IsPullRequest":false,"CreatedAt":"2023-09-12T08:57:13","Actor":"v1nger125","Number":"25819","RawContent":null,"Title":"Angular 15 doesn't allow to build different tsconfigs for tests","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler-cli\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nHi, angular,\r\nI have started to update app from 14 to 15 angular and i met the issue that you changed the way for test collection and as i understand now tests are collected by tsconfig\r\nIn my case i would like to have more than 1 config for test running, until 15 version it was different loaders with different\r\n`require.context(...)`, and different `configurations` in `angular.json`\r\na have tried to do the same with `tsconfig.json` and `include` property, but i met the issue \r\n\r\n`./src/app/app.component.spec.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: C:\\...\\src\\app\\app.component.spec.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`  \r\n\r\nwhen running perf config \r\n\r\nas i understand only files included into build and current test config considered as not forgotten, is there any way to fix that?  \r\n\r\n`ng test --c=perf`  \r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://github.com/v1nger125/angular15-test  \r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n`./src/app/app.component.spec.ts - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):\r\nError: C:\\...\\src\\app\\app.component.spec.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.2.9\r\nNode: 18.17.1\r\nPackage Manager: npm 10.1.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.9\r\n@angular-devkit/build-angular   15.2.9\r\n@angular-devkit/core            15.2.9\r\n@angular-devkit/schematics      15.2.9\r\n@schematics/angular             15.2.9\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nsorry if it is a duplicate, but i didn't find anything else, it is quite small documentation about tests configuration for angular","Url":"https://github.com/angular/angular-cli/issues/25819","RelatedDescription":"Closed issue \"Angular 15 doesn't allow to build different tsconfigs for tests\" (#25819)"},{"Id":"1890757061","IsPullRequest":true,"CreatedAt":"2023-09-11T18:15:15","Actor":"clydin","Number":"25820","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): update babel package usage and types based on current versions","State":"closed","Body":"Newer versions of the babel packages allow for removing some types packages as well as some helper packages. The `@babel/template` package export used within the CLI is accessible from the `@babel/core` package which allows removal of `@babel/template` as a direct dependency. Also, the `@babel/plugin-proposal-async-generator-functions` package has been transitioned to `@babel/plugin-transform-async-generator-functions` due to async generators being merged into the ECMAScript standard. Minor code cleanup based on the type cleanup was also performed in the build optimizer babel passes.","Url":"https://github.com/angular/angular-cli/pull/25820","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): update babel package usage and types based on current versions\" (#25820)"},{"Id":"1889800782","IsPullRequest":true,"CreatedAt":"2023-09-11T11:58:37","Actor":"alan-agius4","Number":"25816","RawContent":null,"Title":"refactor: replace deprecated `logs` verdaccio setting","State":"closed","Body":"`logs` has been deprecated in favor of `log`\r\n","Url":"https://github.com/angular/angular-cli/pull/25816","RelatedDescription":"Closed or merged PR \"refactor: replace deprecated `logs` verdaccio setting\" (#25816)"},{"Id":"1889835716","IsPullRequest":true,"CreatedAt":"2023-09-11T08:06:46","Actor":"angular-robot","Number":"25817","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25817","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25817)"},{"Id":"1889794941","IsPullRequest":false,"CreatedAt":"2023-09-11T07:17:36","Actor":"JeevanMahesha","Number":"25815","RawContent":null,"Title":"Experiencing a problem during the update of my Angular project from version 9 to version 10. How can I address this issue?","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI'm encountering an issue while upgrading my Angular project from version 9 to version 10. How can I resolve this problem?\r\n\r\n![Screenshot from 2023-09-11 12-14-00](https://github.com/angular/angular-cli/assets/34814862/53f7a996-cb46-4cc1-ac58-0ebf7f64d2a6)\r\n\r\nI have followed the below link steps to update \r\n\r\nhttps://update.angular.io/?v=9.0-10.0\n\n### Minimal Reproduction\n\nstep 1 :-  Angular Project with version 9\r\n\r\nstep 2 :-  Update the project to version 10 (use node version v12 or greater)\r\n\r\nstep 3 :- Open this Link https://update.angular.io/?v=9.0-10.0\r\n\r\nstep 4 :- nagivate to Update to the new version\r\n\r\nstep 5:- use this command `npx @angular/cli@10 update @angular/core@10 @angular/cli@10`\r\n\r\nnow you will get the above mentioned issue\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\ni have use version 9 using npx \r\n\r\nnpx @angular/cli@10 update @angular/core@10 @angular/cli@10\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25815","RelatedDescription":"Closed issue \"Experiencing a problem during the update of my Angular project from version 9 to version 10. How can I address this issue?\" (#25815)"},{"Id":"1888865581","IsPullRequest":false,"CreatedAt":"2023-09-11T06:36:34","Actor":"robertIsaac","Number":"25813","RawContent":null,"Title":"Angular SSR cannot use ESM modules (reopen from 45062)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nit was mentioned in https://github.com/angular/angular/issues/45062#issuecomment-1462495085 that it should be fixed in Angular 16, using 16.2 still not working, but with different message\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/robertIsaac/ng_ssr_esm\n\n### Please provide the exception or error you saw\n\n```true\nReferenceError: require is not defined in ES module scope, you can use import instead\r\nThis file is being treated as an ES module because it has a '.js' file extension and 'C:\\Users\\aa.risaac\\repos\\ng_ssr_esm\\package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' fil\r\ne extension.\r\n    at 7310 (file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:762644)\r\n    at __webpack_require__ (file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:2007834)\r\n    at 8154 (file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:1110376)\r\n    at __webpack_require__ (file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:2007834)\r\n    at file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:2010113\r\n    at file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:2010229\r\n    at file:///C:/Users/aa.risaac/repos/ng_ssr_esm/dist/ng_ssr_esm/server/main.js:1:2330872\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\r\n\r\nNode.js v18.16.0\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.1\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    16.2.1\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25813","RelatedDescription":"Closed issue \"Angular SSR cannot use ESM modules (reopen from 45062)\" (#25813)"},{"Id":"1889166877","IsPullRequest":true,"CreatedAt":"2023-09-11T06:31:20","Actor":"roman-dector","Number":"25814","RawContent":null,"Title":"refactor(@angular/cli): update copyright year in license file","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25814","RelatedDescription":"Closed or merged PR \"refactor(@angular/cli): update copyright year in license file\" (#25814)"},{"Id":"1888583312","IsPullRequest":true,"CreatedAt":"2023-09-11T06:26:55","Actor":"angular-robot","Number":"25810","RawContent":null,"Title":"build: update dependency eslint to v8.49.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`8.48.0` -> `8.49.0`](https://renovatebot.com/diffs/npm/eslint/8.48.0/8.49.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>eslint/eslint (eslint)</summary>\n\n### [`v8.49.0`](https://togithub.com/eslint/eslint/releases/tag/v8.49.0)\n\n[Compare Source](https://togithub.com/eslint/eslint/compare/v8.48.0...v8.49.0)\n\n#### Features\n\n-   [`da09f4e`](https://togithub.com/eslint/eslint/commit/da09f4e641141f585ef611c6e9d63d4331054706) feat: Implement onUnreachableCodePathStart/End ([#&#8203;17511](https://togithub.com/eslint/eslint/issues/17511)) (Nicholas C. Zakas)\n-   [`32b2327`](https://togithub.com/eslint/eslint/commit/32b2327aafdd3b911fabab69ed75c9ff97658c60) feat: Emit deprecation warnings in RuleTester ([#&#8203;17527](https://togithub.com/eslint/eslint/issues/17527)) (Nicholas C. Zakas)\n-   [`acb7df3`](https://togithub.com/eslint/eslint/commit/acb7df35b9a7485f26bc6b3e1f9083d1c585dce9) feat: add new `enforce` option to `lines-between-class-members` ([#&#8203;17462](https://togithub.com/eslint/eslint/issues/17462)) (Nitin Kumar)\n\n#### Documentation\n\n-   [`ecfb54f`](https://togithub.com/eslint/eslint/commit/ecfb54ff4cdd18f28b4f9b78f0a78fb4cf80f1b8) docs: Update README (GitHub Actions Bot)\n-   [`de86b3b`](https://togithub.com/eslint/eslint/commit/de86b3b2e58edd5826200c23255d8325abe375e1) docs: update `no-promise-executor-return` examples ([#&#8203;17529](https://togithub.com/eslint/eslint/issues/17529)) (Nitin Kumar)\n-   [`032c4b1`](https://togithub.com/eslint/eslint/commit/032c4b1476a7b8cfd917a66772d2221950ea87eb) docs: add typescript template ([#&#8203;17500](https://togithub.com/eslint/eslint/issues/17500)) (James)\n-   [`cd7da5c`](https://togithub.com/eslint/eslint/commit/cd7da5cc3154f86f7ca45fb58929d27a7af359ed) docs: Update README (GitHub Actions Bot)\n\n#### Chores\n\n-   [`b7621c3`](https://togithub.com/eslint/eslint/commit/b7621c3b16cf7d5539f05336a827e1b32d95e6ac) chore: remove browser test from `npm test` ([#&#8203;17550](https://togithub.com/eslint/eslint/issues/17550)) (Milos Djermanovic)\n-   [`cac45d0`](https://togithub.com/eslint/eslint/commit/cac45d04b890b0700dd8908927300608adad05fe) chore: upgrade [@&#8203;eslint/js](https://togithub.com/eslint/js)[@&#8203;8](https://togithub.com/8).49.0 ([#&#8203;17549](https://togithub.com/eslint/eslint/issues/17549)) (Milos Djermanovic)\n-   [`cd39508`](https://togithub.com/eslint/eslint/commit/cd395082bffcb4b68efa09226d7c682cef56179e) chore: package.json update for [@&#8203;eslint/js](https://togithub.com/eslint/js) release (ESLint Jenkins)\n-   [`203a971`](https://togithub.com/eslint/eslint/commit/203a971c0abc3a95ae02ff74104a01e569707060) ci: bump actions/checkout from 3 to 4 ([#&#8203;17530](https://togithub.com/eslint/eslint/issues/17530)) (dependabot\\[bot])\n-   [`a40fa50`](https://togithub.com/eslint/eslint/commit/a40fa509922b36bb986eb1be9394591f84f62d9e) chore: use eslint-plugin-jsdoc's flat config ([#&#8203;17516](https://togithub.com/eslint/eslint/issues/17516)) (Milos Djermanovic)\n-   [`926a286`](https://togithub.com/eslint/eslint/commit/926a28684282aeec37680bbc52a66973b8055f54) test: replace Karma with Webdriver.IO ([#&#8203;17126](https://togithub.com/eslint/eslint/issues/17126)) (Christian Bromann)\n-   [`f591d2c`](https://togithub.com/eslint/eslint/commit/f591d2c88bf15af72e3a207b34fa872b4b90464b) chore: Upgrade config-array ([#&#8203;17512](https://togithub.com/eslint/eslint/issues/17512)) (Nicholas C. Zakas)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi44OC4xIiwidXBkYXRlZEluVmVyIjoiMzYuODguMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25810","RelatedDescription":"Closed or merged PR \"build: update dependency eslint to v8.49.0\" (#25810)"},{"Id":"1887313961","IsPullRequest":false,"CreatedAt":"2023-09-11T06:25:18","Actor":"unitario","Number":"25806","RawContent":null,"Title":"The builder @angular-devkit/build-angular:browser-esbuild not starting server for custom config","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen I serve my Angular application using the esbuild-based builder and a custom configuration that use a different index-file than the standard `index.html`, I get this logged in the console:\r\n\r\n````unix\r\nng serve -c example\r\nThe esbuild-based browser application builder ('browser-esbuild') is currently in developer preview and is not yet recommended for production use. For additional information, please see https://angular.io/guide/esbuild\r\nThe 'namedChunks' option is not used by this builder and will be ignored.\r\nThe 'vendorChunk' option is not used by this builder and will be ignored.\r\n\r\nInitial Chunk Files | Names         | Raw Size\r\nmain.js             | main          | 34.58 kB | \r\npolyfills.js        | polyfills     | 95 bytes | \r\nstyles.css          | styles        | 95 bytes | \r\n\r\n                    | Initial Total | 34.76 kB\r\n\r\nApplication bundle generation complete. [2.300 seconds]\r\n  ➜  Local:   http://127.0.0.1:4200/\r\nWatch mode enabled. Watching for file changes...\r\n````\r\n\r\nHowever, when I try to access `http://127.0.0.1:4200` in the browser I get this:\r\n\r\n<img width=\"654\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/9481000/1008d8da-e760-497c-aee3-b31010251cee\">\r\n\r\nIt's in Swedish but basically a standard `404`.\r\n\r\nThis is the the content of my `angular.json`:\r\n\r\n````json\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n    \"angular-esbuild-issue\": {\r\n      \"projectType\": \"application\",\r\n      \"schematics\": {},\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"prefix\": \"app\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n          \"options\": {\r\n            \"outputPath\": \"dist/angular-esbuild-issue\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"polyfills\": [\r\n              \"zone.js\"\r\n            ],\r\n            \"tsConfig\": \"tsconfig.app.json\",\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"src/styles.css\"\r\n            ],\r\n            \"scripts\": []\r\n          },\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"budgets\": [\r\n                {\r\n                  \"type\": \"initial\",\r\n                  \"maximumWarning\": \"500kb\",\r\n                  \"maximumError\": \"1mb\"\r\n                },\r\n                {\r\n                  \"type\": \"anyComponentStyle\",\r\n                  \"maximumWarning\": \"2kb\",\r\n                  \"maximumError\": \"4kb\"\r\n                }\r\n              ],\r\n              \"outputHashing\": \"all\"\r\n            },\r\n            \"development\": {\r\n              \"buildOptimizer\": false,\r\n              \"optimization\": false,\r\n              \"vendorChunk\": true,\r\n              \"extractLicenses\": false,\r\n              \"sourceMap\": true,\r\n              \"namedChunks\": true\r\n            },\r\n            \"example\": {\r\n              \"index\": \"src/example.html\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"production\"\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\r\n          \"configurations\": {\r\n            \"production\": {\r\n              \"browserTarget\": \"angular-esbuild-issue:build:production\"\r\n            },\r\n            \"development\": {\r\n              \"browserTarget\": \"angular-esbuild-issue:build:development\"\r\n            },\r\n            \"example\": {\r\n              \"browserTarget\": \"angular-esbuild-issue:build:example,development\"\r\n            }\r\n          },\r\n          \"defaultConfiguration\": \"development\"\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"browserTarget\": \"angular-esbuild-issue:build\"\r\n          }\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"tsConfig\": \"tsconfig.spec.json\",\r\n            \"assets\": [\r\n              \"src/favicon.ico\",\r\n              \"src/assets\"\r\n            ],\r\n            \"styles\": [\r\n              \"src/styles.css\"\r\n            ],\r\n            \"scripts\": []\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n````\r\n\r\n### Minimal Reproduction\r\n\r\n1. Run `ng new angular-esbuild-issue` and then `cd angular-esbuild-issue`\r\n2. Create file `example.html` in `src` directory.\r\n3. Change builder to ESBuild as per [documentation](https://angular.io/guide/esbuild) in `architect.build.builder`.\r\n````diff\r\n\"architect\": {\r\n  \"build\": {\r\n-    \"builder\": \"@angular-devkit/build-angular:browser\",\r\n+    \"builder\": \"@angular-devkit/build-angular:browser-esbuild\",\r\n````\r\n4. Add build config called `example` in `architect.build.configurations`:\r\n````diff\r\n\"architect\": {\r\n  \"build\": {\r\n    \"configurations\": {\r\n+     \"example\": {\r\n+       \"index\": \"src/example.html\"\r\n+     }\r\n````\r\n5. Add serve config called `example` in `architect.serve.configurations`:\r\n````diff\r\n\"architect\": {\r\n  \"serve\": {\r\n    \"configurations\": {\r\n+     \"example\": {\r\n+       \"browserTarget\": \"angular-esbuild-issue:build:example,development\"\r\n+     }\r\n````\r\n6. Run `ng serve -c example`, open browser on `http://127.0.0.1:4200` and you should see the `404` page as listed above.\r\n7. Exit and and run `ng serve -c example`, open browser on `http://127.0.0.1:4200` and you should see that the server has started and the application is initialized.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n`\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.1\r\nNode: 16.15.1\r\nPackage Manager: npm 8.11.0\r\nOS: darwin x64\r\n\r\nAngular: 16.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    16.2.1\r\n@schematics/angular             16.2.1\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.1\r\n\r\n\r\n````\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25806","RelatedDescription":"Closed issue \"The builder @angular-devkit/build-angular:browser-esbuild not starting server for custom config\" (#25806)"},{"Id":"1887898625","IsPullRequest":true,"CreatedAt":"2023-09-11T06:25:17","Actor":"clydin","Number":"25808","RawContent":null,"Title":"fix(@angular-devkit/build-angular): support custom index option paths in Vite-based dev server","State":"closed","Body":"When using the Vite-based development server and a custom `index` build option (not `index.html`), the custom index path will now be used as the root of the development server. This mimics the behavior of the Webpack-based development server.\r\n\r\nFixes: #25806","Url":"https://github.com/angular/angular-cli/pull/25808","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): support custom index option paths in Vite-based dev server\" (#25808)"},{"Id":"1888392838","IsPullRequest":false,"CreatedAt":"2023-09-09T04:22:31","Actor":"jdgriffith","Number":"25809","RawContent":null,"Title":"Add bun runtime support for faster builds","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nBun is extremely fast at file IO and utilizes some of the fastest OS APIs for handling file writes/reads. It is also a quick runtime in general for any compute necessary to transpile and build. For these reasons, I think adding bun support specifically for the build process and possibly for hot reloading for the development flow, would be incredibly valuable. \r\n\r\nBun just reached 1.0 and should be looked at closer as a valuable tool for increasing the DX in major projects such as this.\r\n\r\nhttps://github.com/oven-sh/bun\n\n### Describe the solution you'd like\n\nThis could maybe be implemented as a flag that is passed to utilize bun for any of the major work during the build process. \n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25809","RelatedDescription":"Closed issue \"Add bun runtime support for faster builds\" (#25809)"},{"Id":"1887380185","IsPullRequest":true,"CreatedAt":"2023-09-08T14:00:02","Actor":"alan-agius4","Number":"25807","RawContent":null,"Title":"feat(@schematics/angular): enable routing by default for new applications","State":"closed","Body":"\r\n\r\nThis commits updates the `routing` option in the `ng new` and `ng generation application` schematics to `true` by default and also removed the `Would you like to add Angular routing?` prompt.\r\n\r\nBREAKING CHANGE: Routing is enabled by default for new applications when using `ng generate application` and `ng new`. The `--no-routing` command line option can be used to disable this behaviour.\r\n","Url":"https://github.com/angular/angular-cli/pull/25807","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): enable routing by default for new applications\" (#25807)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1895087261","IsPullRequest":true,"CreatedAt":"2023-09-13T19:08:07","Actor":"amysorto","Number":"27790","RawContent":null,"Title":"Bump version to \"v17.0.0-next.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27790","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.3\" with changelog.\" (#27790)"},{"Id":"1895035977","IsPullRequest":true,"CreatedAt":"2023-09-13T18:30:30","Actor":"amysorto","Number":"27789","RawContent":null,"Title":"docs: release notes for the v16.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27789","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.4 release\" (#27789)"},{"Id":"1895028523","IsPullRequest":true,"CreatedAt":"2023-09-13T18:23:00","Actor":"amysorto","Number":"27788","RawContent":null,"Title":"Bump version to \"v16.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27788","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.4\" with changelog.\" (#27788)"},{"Id":"1894408741","IsPullRequest":false,"CreatedAt":"2023-09-13T12:20:01","Actor":"richardsengers","Number":"27787","RawContent":null,"Title":"bug(MAT-ERROR): mat error content with block element gives extra space of 16px","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIf the error message is rendered within a block element (we have some error message which are from a database and have a div element), an extra space is added. If this done by design, maybe it should also be mentioned in the docs?\r\nLook at this example: https://stackblitz.com/edit/g5mias?file=src%2Fexample%2Fform-field-error-example.html\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/g5mias?file=src%2Fexample%2Fform-field-error-example.html\r\nSteps to reproduce:\r\n1. focus and blur the field\r\n\r\n\n\n### Expected Behavior\n\nRender the error messages directly underneath the input field\n\n### Actual Behavior\n\nThe error messages are shown 16px below the input field\n\n### Environment\n\n- Angular: 16 latest\r\n- CDK/Material: 16 latest\r\n","Url":"https://github.com/angular/components/issues/27787","RelatedDescription":"Open issue \"bug(MAT-ERROR): mat error content with block element gives extra space of 16px\" (#27787)"},{"Id":"1894385517","IsPullRequest":false,"CreatedAt":"2023-09-13T12:05:47","Actor":"ivayloc","Number":"27786","RawContent":null,"Title":"bug(MatButtonToggle): Doesn't Reflect FormControl Value Update Programmatically with Object Values","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen using `MatButtonToggleGroup` with a `formControl` and when the `MatButtonToggle` values are set as `object`s, there's an issue with reflecting the visual state of the button toggle. When setting the `FormControl`'s value programmatically, the `MatButtonToggle` does not receive the `mat-button-toggle-checked` class, making it impossible for users to visually identify the selected button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/bzdxmp?file=src%2Fapp%2Fbutton-toggle-overview-example.ts\r\n\r\nSteps to reproduce:\r\n1. Initialize a MatButtonToggleGroup with a bound FormControl.\r\n2. Set the values of the individual MatButtonToggle components as objects.\r\n3. Programmatically set the value of the associated FormControl to one of the object values.\r\n4. Observe the visual state of the MatButtonToggleGroup.\r\n\r\n### Expected Behavior\r\n\r\nWhen the value of the `FormControl` is set programmatically, the associated `MatButtonToggle` should visually reflect the selected state by having the `mat-button-toggle-checked` class.\r\n\r\n### Actual Behavior\r\n\r\nThe `MatButtonToggle` does not receive the `mat-button-toggle-checked` class and remains in an unselected state visually, even though its value matches the `FormControl`'s value.\r\n\r\n### Environment\r\n\r\n- Angular: 15.2.9, 16.1.1\r\n- CDK/Material: 15.2.9, 16.2.3\r\n- Browser(s): Chrome\r\n- Operating System: Windows 11\r\n","Url":"https://github.com/angular/components/issues/27786","RelatedDescription":"Open issue \"bug(MatButtonToggle): Doesn't Reflect FormControl Value Update Programmatically with Object Values\" (#27786)"},{"Id":"1893844229","IsPullRequest":false,"CreatedAt":"2023-09-13T06:36:35","Actor":"gailiwei","Number":"27785","RawContent":null,"Title":"The placeholder of mat-chip-grid-input couldn't always show","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![image](https://github.com/angular/components/assets/109653528/3e7874b4-43ba-4a3e-8046-78f625778642)\r\nsee this picture, I just want the New fruit.... placeholder always show, which is the default behavior in Angular 13.0, so do you have any solutions to make this always show in Angular 15?\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nAlways show the placeholder\n\n### Actual Behavior\n\nonly shows if I focus the input text.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27785","RelatedDescription":"Open issue \"The placeholder of mat-chip-grid-input couldn't always show\" (#27785)"},{"Id":"1881615679","IsPullRequest":false,"CreatedAt":"2023-09-12T21:37:06","Actor":"amirheydari9","Number":"27761","RawContent":null,"Title":"add label and placeholder for mat-date-range-input","State":"closed","Body":"### Feature Description\n\nadd label and placeholder for mat-date-range-input\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27761","RelatedDescription":"Closed issue \"add label and placeholder for mat-date-range-input\" (#27761)"},{"Id":"1882172241","IsPullRequest":false,"CreatedAt":"2023-09-12T21:34:41","Actor":"ulrikdom","Number":"27763","RawContent":null,"Title":"bug(FormField): Outlined formfield inside material tab has dissapearing right border","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nI have a material tab group. Inside that I have two formfields with appearance outline. The formfields are placed in a grid so that they are horizontally adjacent to eachother. This results in that the right border of the right most formfield flickers when the window size changes.  It seems the border dissapears when the window size is even and shows when the size is odd.\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dmzrh3\r\nSteps to reproduce:\r\n1. Resize the rendered window, note that the right border of the right most formfield flickers. Dissapears on even window size.\n\n### Expected Behavior\n\nBorder of form field should always be visible independent of window size.\n\n### Actual Behavior\n\nRight border of right most formfield dissapears.\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.2\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27763","RelatedDescription":"Closed issue \"bug(FormField): Outlined formfield inside material tab has dissapearing right border\" (#27763)"},{"Id":"1889027838","IsPullRequest":true,"CreatedAt":"2023-09-12T18:34:37","Actor":"crisbeto","Number":"27778","RawContent":null,"Title":"Switch the CDK to input transforms","State":"closed","Body":"Reworks most of the places where we use input coercion in the CDK to input transforms. ","Url":"https://github.com/angular/components/pull/27778","RelatedDescription":"Closed or merged PR \"Switch the CDK to input transforms\" (#27778)"},{"Id":"1892861927","IsPullRequest":true,"CreatedAt":"2023-09-12T16:25:45","Actor":"wagnermaciel","Number":"27784","RawContent":null,"Title":"refactor(material/button): switch to tokens theming API","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27784","RelatedDescription":"Open PR \"refactor(material/button): switch to tokens theming API\" (#27784)"},{"Id":"1892500462","IsPullRequest":false,"CreatedAt":"2023-09-12T13:13:50","Actor":"Jacobra93","Number":"27783","RawContent":null,"Title":"bug(cdk/overlay): Setting maxWidth on overlay messes up top and bottom position","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nSetting maxWidth on the overlay messes up the positioning. If you instead set only width, it works fine. But maxWidth messes it up. It seems to work fine with some positions, but breaks top and bottom positioning.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/k6wprl?file=src%2Fexample%2Fcdk-overlay-basic-example.ts\r\nSteps to reproduce:\r\n1. Click \"Display overlay\" button\r\n\n\n### Expected Behavior\n\nOverlay should be properly positioned.\n\n### Actual Behavior\n\nOverlay doesn't have correct positioning, it is off to the side instead of being above the button that triggered it.\n\n### Environment\n\n- Angular: 16.2.3\r\n- CDK/Material: 16.2.3\r\n- Browser(s): Chrome\r\n","Url":"https://github.com/angular/components/issues/27783","RelatedDescription":"Open issue \"bug(cdk/overlay): Setting maxWidth on overlay messes up top and bottom position\" (#27783)"},{"Id":"1892358300","IsPullRequest":false,"CreatedAt":"2023-09-12T11:56:01","Actor":"amanosacrous","Number":"27782","RawContent":null,"Title":"bug(material/tooltip): tooltip inside sidenav hides after text update","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen the tooltip component overflows a parent sidenav and its text content is updated dynamically, it hides.\r\n\r\nWe have debugged the code, and this happens because the sidenav component extends the cdk-scrollable.\r\n\r\nThe piece of code that calls the tooltip hide function is the following:\r\nhttps://github.com/angular/components/blob/bae953999407fd385b1d571e04350bf0f28abf05/src/material/tooltip/tooltip.ts#L510-L520\r\n\r\n### Reproduction\r\n\r\nStackblitz url:\r\nhttps://stackblitz.com/edit/stackblitz-starters-wbd1hh?file=src%2Ftooltip-sidenav%2Ftooltip-sidenav.component.html\r\n\r\nAs you can see on the stackBlitz example, we have two tooltips:\r\n- The tooltip inside the sidenav, which overflows the sidenav component. That if we update the tooltip text, the tooltip disappears. (BUG)\r\n- On the other hand, we have the tooltip inside the mat-sidenav-content which works properly, and it doesn't hide after updating it. (WORKS WELL because doesn't overflow the parent)\r\n\r\n### Expected Behavior\r\n\r\nThe tooltip inside the sidenav should not hide when the text is updated.\r\n\r\n### Actual Behavior\r\n\r\nThe tooltip placed inside the sidnav that overflows is hidden suddenly when the text is updated.\r\n\r\n### Environment\r\n\r\n- Angular: v16.2.4\r\n- CDK/Material: v16.2.3\r\n- Browser(s): Google chrome Versión 116.0.5845.187, Firefox 117.0\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27782","RelatedDescription":"Open issue \"bug(material/tooltip): tooltip inside sidenav hides after text update\" (#27782)"},{"Id":"1883886330","IsPullRequest":false,"CreatedAt":"2023-09-12T10:57:35","Actor":"Londeren","Number":"27767","RawContent":null,"Title":"bug(mat-autocomplete): `requireSelection` clears input on blur if there are no options in autocomplete","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n1. User opens a form with server autocomplete field. There's a value in this field, let's say, it's editing form for a product.\r\n2. The user puts cursor (focus) to the autocomplete input, without typing as it's not necessary to fetch anything from the server because the value is already in the field.\r\n3. The user removes cursor (blur) from the field.\r\n4. The value in the autocomplete field disappears\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/components-issue-kudpye?file=src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1. Focus in input field\r\n2. Remove focus from the field \r\n\r\n\r\n### Expected Behavior\r\n\r\nIf the selected value is a valid value, keep it in the field. Because in case of server autocomplete it's not necessary to make a request to get autocomplete options just to keep the selected value in the input.\r\n\r\n### Actual Behavior\r\n\r\nThe selected value clears to `null`.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/27767","RelatedDescription":"Closed issue \"bug(mat-autocomplete): `requireSelection` clears input on blur if there are no options in autocomplete\" (#27767)"},{"Id":"1891837344","IsPullRequest":true,"CreatedAt":"2023-09-12T10:57:33","Actor":"crisbeto","Number":"27781","RawContent":null,"Title":"fix(material/autocomplete): requireSelection incorrectly resetting value when there are no options","State":"closed","Body":"The autocomplete has a check not to reset the value if the user didn't interact with the input. The problem was that we only accounted for it when there are options, because while technically an autocomplete is _attached_ when the user focuses, we don't consider it _open_ until it shows some options.\r\n\r\nFixes #27767.","Url":"https://github.com/angular/components/pull/27781","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): requireSelection incorrectly resetting value when there are no options\" (#27781)"},{"Id":"1889291209","IsPullRequest":true,"CreatedAt":"2023-09-10T19:10:36","Actor":"fabi337","Number":"27780","RawContent":null,"Title":"docs(material/chips): Describe how to use chips with forms","State":"open","Body":"docs(material/chips): Describe how to use chips with forms\r\n\r\nDescribe how to use chips with forms\r\n\r\nFixes https://github.com/angular/components/issues/22906","Url":"https://github.com/angular/components/pull/27780","RelatedDescription":"Open PR \"docs(material/chips): Describe how to use chips with forms\" (#27780)"},{"Id":"1889090861","IsPullRequest":false,"CreatedAt":"2023-09-10T17:15:43","Actor":"shahanajoy","Number":"27779","RawContent":null,"Title":"Material 16 mat-select dropdown option field giubg bottom of page","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nI am using angular 16 and Mat-select is using, its select field going down bottom of page.. Please help on this\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. install latest angular material\r\n2.use  <mat-select>\r\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n      {{food.viewValue}}\r\n    </mat-option>\r\n\n\n### Expected Behavior\n\ndropdwon should come near to matselect field\n\n### Actual Behavior\n\ndropdown box going down of page\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27779","RelatedDescription":"Closed issue \"Material 16 mat-select dropdown option field giubg bottom of page\" (#27779)"},{"Id":"1888532416","IsPullRequest":false,"CreatedAt":"2023-09-09T01:49:25","Actor":"pd60193","Number":"27777","RawContent":null,"Title":"autocomplete panel doesn't pop up when triggering focus on the input programatically","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using autocomplete harness to focus on the autocomplete, the autocomplete panel does not open\r\n\r\n`const inputField = await loader.getHarness(MatAutocompleteHarness.with({ selector: '#autocompleteInput' }));\r\n  await inputField.focus();\r\n  const options = await inputField.getOptions();\r\n  expect(options.length).toBeGreaterThan(0);`\r\n\r\nThe above code fails with 'Error: Unable to retrieve options for autocomplete. Autocomplete panel is closed.'\r\nOn checking further, I am sure that my autocomplete has options populated and this should work.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nThe test should pass and the autocomplete panel should open.\n\n### Actual Behavior\n\nThe above code fails with 'Error: Unable to retrieve options for autocomplete. Autocomplete panel is closed.'\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27777","RelatedDescription":"Open issue \"autocomplete panel doesn't pop up when triggering focus on the input programatically\" (#27777)"},{"Id":"1886912086","IsPullRequest":false,"CreatedAt":"2023-09-08T04:26:29","Actor":"cusher","Number":"27776","RawContent":null,"Title":"feat(Dialog): Allow passing in component @Inputs when opening a dialog","State":"open","Body":"### Feature Description\n\nTo pass data into a dialog, the current suggested pattern is to set `data` on the `DialogConfig` parameter when calling `open`, and then inject the data into the dialog component using the `DIALOG_DATA` injection token.\r\n\r\nAnother option is to set the inputs on the `componentInstance` *after* the dialog is opened, however if the component relies on the input being set before initialization, this can run into problems.\r\n\r\nAngular 16 added the ability to [pass in component @Inputs as in route params](https://github.com/angular/angular/issues/18967), which allows the removal of basic wrapper components and per-component boilerplate for the most common cases of passing in data through the Router. It would be nice to see this change also reflected in Dialog.\n\n### Use Case\n\n- Enables using an existing component that takes in `@Input`(s) in a basic Dialog without creating a wrapper dialog component that exists solely to pass along injected data (admittedly, of questionable value, since many dialogs will need dialog-specific UI/behavior)\r\n- Allows for passing in data to a dialog component in a more symmetric way with non-dialog components\r\n- Eliminates the need to create a dialog data specific interface for type-safe parameter passing to dialog components","Url":"https://github.com/angular/components/issues/27776","RelatedDescription":"Open issue \"feat(Dialog): Allow passing in component @Inputs when opening a dialog\" (#27776)"},{"Id":"1886659561","IsPullRequest":false,"CreatedAt":"2023-09-07T22:54:46","Actor":"philmayfield","Number":"27775","RawContent":null,"Title":"bug(MatSelectionList): Spacing too large between checkbox / radio when set to togglePosition=\"before\"","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nUsing a `<mat-selection-list>` component, and setting the options with `<mat-list-option togglePosition=\"before\">` results in too much space between the toggle and the content.  According to [the Material spec](https://m3.material.io/components/lists/specs#ff521a61-bab9-4e75-bded-dee94fd31f61) for lists, the spacing between toggle and content should be 16px.  Currently its about 35px all in.\r\n\r\nScreenshot from stackblitz:\r\n![image](https://github.com/angular/components/assets/8093223/c0e21709-ba3e-46df-bbfa-c42fa3906cec)\r\n\r\nScreenshot from the Material spec:\r\n![image](https://github.com/angular/components/assets/8093223/622866bf-c97c-4639-bf56-b089fdee30f5)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/v9ccty?file=src%2Fapp%2Flist-selection-example.html\r\n\r\n\n\n### Expected Behavior\n\nThere should be a total of 16px of space between the toggle and the content.\n\n### Actual Behavior\n\nThere is approximately 35px of space between the toggle and the content.\n\n### Environment\n\nAngular CLI: 16.2.0\r\nNode: 18.14.0\r\nPackage Manager: yarn 3.2.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.2.0\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, localize, material\r\n... material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                          Version\r\n----------------------------------------------------------\r\n@angular-devkit/architect        0.1602.0\r\n@angular-devkit/build-angular    16.2.0\r\n@angular-devkit/core             16.2.0\r\n@angular-devkit/schematics       16.2.0\r\n@angular-devkit/schematics-cli   16.2.0\r\n@angular/flex-layout             15.0.0-beta.42\r\n@schematics/angular              16.2.0\r\nng-packagr                       16.2.0\r\nrxjs                             7.8.1\r\ntypescript                       5.1.6\r\nzone.js                          0.13.1","Url":"https://github.com/angular/components/issues/27775","RelatedDescription":"Open issue \"bug(MatSelectionList): Spacing too large between checkbox / radio when set to togglePosition=\"before\"\" (#27775)"},{"Id":"1886550875","IsPullRequest":true,"CreatedAt":"2023-09-07T20:53:19","Actor":"nathanejbrown","Number":"27774","RawContent":null,"Title":"docs(guides/theming): get-color-from-palette passes in '500' instead o…","State":"open","Body":"…f 500\r\n\r\nChanges value in doc from string to number\r\n\r\nfixes #27630","Url":"https://github.com/angular/components/pull/27774","RelatedDescription":"Open PR \"docs(guides/theming): get-color-from-palette passes in '500' instead o…\" (#27774)"},{"Id":"1886173904","IsPullRequest":false,"CreatedAt":"2023-09-07T15:57:32","Actor":"arman-g","Number":"27773","RawContent":null,"Title":"bug(Mat Expansion Panel): Mat expansion panel reports inconsistent states between the header and content containers","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nNot always but sometimes expansion panel has invalid states between mat-expansion-panel-header and mat-expansion-panel-content (please see the provided image) after an expanded item is drag and drop. As you can see in the provided image the header still has mat-expanded flags, but the content visibility is hidden.\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Add **mat-expansion-panel** within **mat-accordion**.\r\n2. Add Angular drag and drop capability using **cdkDrag**.\r\n3. Expand one of the panels and try to drag and drop to reorder.\r\n4. Observe inconsistence between **mat-expansion-panel-header** and **mat-expansion-panel-content** states as shown below.\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Expected Behavior\n\nThe **mat-expansion-panel-header** and **mat-expansion-panel-content** should have the same state after a drag and drop ether expanded or not but they should have the same state.\n\n### Actual Behavior\n\nSometimes not always **mat-expansion-panel-header** and **mat-expansion-panel-content** do not have the same state after drag and drop (see the provided image).\r\n\r\n![IMG](https://github.com/angular/components/assets/22778273/644f898f-6aba-401c-9cf0-240971ec888a)\n\n### Environment\n\n- Angular: ^16.0.0\r\n- CDK/Material: ^16.0.0\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27773","RelatedDescription":"Open issue \"bug(Mat Expansion Panel): Mat expansion panel reports inconsistent states between the header and content containers\" (#27773)"},{"Id":"1885853008","IsPullRequest":true,"CreatedAt":"2023-09-07T13:07:35","Actor":"andrewseguin","Number":"27772","RawContent":null,"Title":"Bump version to \"v17.0.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27772","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.2\" with changelog.\" (#27772)"},{"Id":"1885825591","IsPullRequest":true,"CreatedAt":"2023-09-07T12:57:06","Actor":"andrewseguin","Number":"27771","RawContent":null,"Title":"docs: release notes for the v16.2.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27771","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.3 release\" (#27771)"},{"Id":"1885807904","IsPullRequest":true,"CreatedAt":"2023-09-07T12:45:37","Actor":"andrewseguin","Number":"27770","RawContent":null,"Title":"Bump version to \"v16.2.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27770","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.3\" with changelog.\" (#27770)"},{"Id":"1885739954","IsPullRequest":true,"CreatedAt":"2023-09-07T11:52:01","Actor":"knoake","Number":"27769","RawContent":null,"Title":"fix(material/snack-bar): snack-bar action button does not follow material guidelines","State":"open","Body":"Fixes a bug in the Angular Material snack-bar, where accent color is used for action button color in light themes and grey is used in dark themes. This does not follow the material design guidelines which recommend a tone of primary color is used in both light and dark themes, and that the color should contrast with the background.\r\n\r\nFixes #13905","Url":"https://github.com/angular/components/pull/27769","RelatedDescription":"Open PR \"fix(material/snack-bar): snack-bar action button does not follow material guidelines\" (#27769)"},{"Id":"1883853414","IsPullRequest":true,"CreatedAt":"2023-09-07T10:59:47","Actor":"JankaSvK","Number":"27766","RawContent":null,"Title":"feat(MatOptionHarness): make MatOptionHarness extend ContentContainerComponentHarness","State":"closed","Body":"This allows users to obtain harnesses for more complex elements inside of the `MatOption`. The current `MatOptionHarness` offers only `getText()`, which is limiting with rich content in the MatOption. [Example from MatAutocomplete documentation](https://material.angular.io/components/autocomplete/examples#autocomplete-overview) where rich content is even encouraged.\r\n","Url":"https://github.com/angular/components/pull/27766","RelatedDescription":"Closed or merged PR \"feat(MatOptionHarness): make MatOptionHarness extend ContentContainerComponentHarness\" (#27766)"},{"Id":"1884873402","IsPullRequest":false,"CreatedAt":"2023-09-06T23:14:30","Actor":"raysuelzer","Number":"27768","RawContent":null,"Title":"bug(MAT-SELECT): View Value does not reflect ngModel, one way data binding is ignored, view does not truly reflect model changes. ","State":"open","Body":"### Is this a regression?\r\n\r\n- [x] Yes, this behavior used to work in the previous version \r\n\r\n### The previous version in which this bug was not present was \r\n\r\n14.x\r\n\r\n### Description\r\n\r\nMatSelect, MatButtonToggleGroup (likely more) no longer allow a user to \"cancel\" a selection.  If you have a model that does not change, matSelect will still apply the change to the view. I.e. The option will be selected (even though that is not the model selection). \r\n\r\nNote: **ONE WAY** binding to ngModel (this also is the same for value).\r\n\r\n```\r\n<mat-form-field class=\"col__ compact\">\r\n  <mat-select\r\n    placeholder=\"Connection Status\"\r\n    name=\"connectionStatus\"\r\n    [ngModel]=\"modelTest\"\r\n    (selectionChange)=\"modelTestChanged($event)\"\r\n    [disableRipple]=\"true\"\r\n  >\r\n    <mat-option [value]=\"'active'\">Active</mat-option>\r\n    <mat-option [value]=\"'inactive'\">Inactive</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n```\r\n\r\n```export class ExampleComponent {\r\n  modelTest = 'active';\r\n\r\n  constructor(private _cd: ChangeDetectorRef) {}\r\n\r\n  modelTestChanged(event: any) {\r\n    if (event.value === 'inactive') {\r\n      const okay = confirm('Are you sure?');\r\n      if (!okay) {\r\n        this.modelTest = 'active';\r\n        alert(`Okay, the model is now ${this.modelTest} and the select is not for some reason.`)\r\n        this._cd.markForCheck();\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.modelTest = event.value;\r\n  }\r\n}\r\n```\r\n\r\nI would expect the above to have 'active' selected when the user presses cancel on the Are You Sure Prompt? Nope, it is 'inactive' that is selected, no matter how many times I run detectChanges, or markForCheck.  The underlying model is 'active', but yet the select is showing 'inactive' as selected? This is fundamentally broken. \r\n\r\n### Reproduction\r\n\r\nStackBlitz link:  https://stackblitz.com/edit/components-issue-7rgxn6?file=src%2Fapp%2Fexample-component.html,src%2Fapp%2Fexample-component.ts\r\nSteps to reproduce:\r\n1.  Create mat-select with two options and one way data binding to either ngModel or value. \r\n2. Create (ngModelChange) or (selectionChange) event handler.\r\n3. Use this to update the model to something other than what was selected. \r\n4. Watch Material COmpletely ignore the underlying model and do what it wants.\r\n\r\n### Expected Behavior\r\n\r\nMatSelect MatToggles shoudl respect one way data bindings. \r\n\r\n### Actual Behavior\r\n\r\nMatSelect and MatButtonToggleGroup update the view and disregard the model value. \r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu):Windows\r\n","Url":"https://github.com/angular/components/issues/27768","RelatedDescription":"Open issue \"bug(MAT-SELECT): View Value does not reflect ngModel, one way data binding is ignored, view does not truly reflect model changes. \" (#27768)"},{"Id":"1882696770","IsPullRequest":false,"CreatedAt":"2023-09-06T10:58:26","Actor":"mmercure","Number":"27765","RawContent":null,"Title":"bug(MatAutocomplete): matAutocomplete with initial value does not filter options and does not highlight selected","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nA MatAutocomplete field initialized with a value does not filter the list of options are mark selected item.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/vemaxm-6ktpyr?file=src%2Fexample%2Fautocomplete-auto-active-first-option-example.html\r\n\r\nSteps to reproduce:\r\n1. In the stackblitz, the formControl for the autcomplet is initialized with 'Two'\r\n2. Click on the field\r\n![image](https://github.com/angular/components/assets/6987117/ebbbb085-a3e9-4bfe-834b-0a89ea79f2de)\r\n\r\n3. if I click on the option\r\n![image](https://github.com/angular/components/assets/6987117/f2923435-4f9c-43ef-876e-82f0caccb0d7)\r\n\r\nit is as expected.\r\n\r\n4. after that if I click the 'clear' button\r\n![image](https://github.com/angular/components/assets/6987117/4117476c-c10b-4f2d-b265-93e16d7d71f3)\r\n\r\nvalue is still selected\r\n\r\n5. reselect a value, lets say 'Two'\r\n6. delete the two last letters\r\n![image](https://github.com/angular/components/assets/6987117/c3c6bfc0-68a2-442b-a4c0-09c36e3f0d7f)\r\n\n\n### Expected Behavior\n\nThe list of option should be filtered with the initial FormControl value\r\nThe actual value should be marked as selected.\r\n\r\nResetting the value should remove the selected\r\n\r\ndeleting last letter of input keeps last selected option as selected\n\n### Actual Behavior\n\nAll options are displayed, and nothing indicates that a value is selected.\r\n\r\nResetting the form still displays a value as selected.\r\n\r\nif not option exactly match the value, there should not be any selected option.\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27765","RelatedDescription":"Closed issue \"bug(MatAutocomplete): matAutocomplete with initial value does not filter options and does not highlight selected\" (#27765)"},{"Id":"1882189427","IsPullRequest":false,"CreatedAt":"2023-09-05T15:17:57","Actor":"ulrikdom","Number":"27764","RawContent":null,"Title":"bug(FormField): Float label cut when inside material tab","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI have a formfield with appearance=outline and floatLabel=always. When the formfield is placed directly inside a material tab the top of the label is cut. This does not only happen inside tabs but in other places also, since the label seems to be absolutely positioned so that it's partly outside of the formfield.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/dmzrh3\r\nSteps to reproduce:\r\n1. Note that the top of the label inside the tab is cut off\r\n\n\n### Expected Behavior\n\nThe whole label is visible\n\n### Actual Behavior\n\nHalf the label is cut off\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.2.2\r\n- Browser(s): Chrome, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27764","RelatedDescription":"Open issue \"bug(FormField): Float label cut when inside material tab\" (#27764)"},{"Id":"1881976093","IsPullRequest":true,"CreatedAt":"2023-09-05T13:23:08","Actor":"prajapatimadan","Number":"27762","RawContent":null,"Title":"MDC table last row within tbody set bottom border as none for header …","State":"open","Body":"…cell as other mat-mdc-cell bottom border are set as none, this will make consistent layout for table.\r\n\r\nAlso referring \"bug(material/table): last row border inconsistency #27731\"","Url":"https://github.com/angular/components/pull/27762","RelatedDescription":"Open PR \"MDC table last row within tbody set bottom border as none for header …\" (#27762)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-14T03:30:02.614092Z","RunDurationInMilliseconds":1751}