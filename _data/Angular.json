{"Data":{"Angular-Issues":{"Issues":[{"Id":"1916514888","IsPullRequest":false,"CreatedAt":"2023-09-28T00:08:04","Actor":"crutchcorn","Number":"51941","RawContent":null,"Title":"`@try`/`@catch` Control Flow ","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\ncommon, compiler-cli, compiler, core\r\n\r\n### Description\r\n\r\ntl;dr: I am proposing a new `@try`/`@catch` [control flow](https://github.com/angular/angular/discussions/50719) to catch errors that occur in Angular component's `constructor` method.\r\n\r\n```html\r\n@try {\r\n\t<error-throwing-component/>\r\n} @catch (e: any) {\r\n\t<handle-error [error]=\"e\"/>\r\n}\r\n```\r\n\r\n_**A longer-form blog post explaining this problem and the solution can be found here**_: [https://unicorn-utterances.com/posts/angular-constructor-error-behavior](https://unicorn-utterances.com/posts/angular-constructor-error-behavior)\r\n\r\n# The problem\r\n\r\nWhen rendering the following:\r\n\r\n```typescript\r\nimport 'zone.js/dist/zone';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'throw-an-error',\r\n  standalone: true,\r\n  template: `<p>🙈</p>`,\r\n})\r\nclass ErrorComponent {\r\n  constructor() {\r\n    throw 'This is an error';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [ErrorComponent],\r\n  template: `\r\n    <p>Before</p>\r\n    <!-- Try hiding and showing this line -->\r\n    <throw-an-error/>\r\n    <!-- This never shows up -->\r\n    <p>After</p>\r\n  `,\r\n})\r\nclass AppComponent {}\r\n\r\nbootstrapApplication(AppComponent);\r\n```\r\n\r\nThe `<p>Before</p>` renders, but the `<throw-an-error/>` does not. Confusingly (to many), the `<p>After</p>` does not render either. This is because Angular's template compiler doesn't wrap component instances in a `try/catch`, which leads to the error propagating upward and breaking any UI rendering past the thrown `constructor` error.\r\n\r\n\r\n\r\n### Proposed solution\r\n\r\n# The proposed solution\r\n\r\nTo solve for this issue, I'd like to propose (**and offer to implement**) the following syntax:\r\n\r\n```html\r\n@try {\r\n\t<error-throwing-component/>\r\n} @catch (e: any) {\r\n\t<handle-error [error]=\"e\"/>\r\n}\r\n```\r\n\r\nWhich would allow us to catch any `constructor` errors while allowing the rest of the components to be rendered as-expected. I would reasonably expect this to be compiled to some pseudo-code akin to:\r\n\r\n```javascript\r\nlet attemptedRender = null;\r\ntry {\r\n\tattemtedRender = renderComponent(ErrorThrowingComponent)\r\n} catch (e) {\r\n\tcleanup(attemptedRender)\r\n\trender(HandleErrorComponent, {inputs: {error: e}})\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\n# Userland solutions\r\n\r\nWhile `<component/>` wouldn't be able to recover from the error in runtime, it's possible to wrap this component in a `try/catch` block by moving it to a `ViewContainerRef` `createComponent` call:\r\n\r\n```typescript\r\n@Component({\r\n  selector: 'error-catcher',\r\n  standalone: true,\r\n  imports: [NgIf],\r\n  template: `\r\n  <div *ngIf=\"error\">\r\n    <h1>There was an error</h1>\r\n  </div>\r\n  <ng-template #compTemp></ng-template>\r\n  `,\r\n})\r\nclass ErrorCatcher implements OnInit {\r\n  @ViewChild('compTemp') compTemp!: TemplateRef<any>;\r\n  @Input({ required: true }) comp!: any;\r\n\r\n  containerRef = inject(ViewContainerRef);\r\n\r\n  error: any = null;\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.containerRef.createComponent(this.comp);\r\n    } catch (e) {\r\n      this.error = e;\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  standalone: true,\r\n  imports: [ErrorCatcher],\r\n  template: `\r\n    <p>Before</p>\r\n    <error-catcher [comp]=\"comp\"/>\r\n    <p>After</p>\r\n  `,\r\n})\r\nclass AppComponent {\r\n  comp = ErrorComponent;\r\n}\r\n```\r\n\r\nWe can even expand this functionality to accept inputs and handle outputs mostly as expected:\r\n\r\n[Demo StackBlitz showing a user-land fix to the error boundary problem](https://stackblitz.com/edit/angular-error-boundary-userland-poc?embed=1&file=src%2Fmain.ts)\r\n\r\nHowever, this comes with substancial issues:\r\n\r\n- The syntax and tooling are not consistent with other Angular components\r\n- Outputs and inputs are very loose typings now, which may lead to _more_ bugs, not less\r\n- Outputs are not bound in the same way, requiring weird `switch/case` style coding and manually typing\r\n\r\n# Prior art\r\n\r\nThis idea was directly inspired by [React's `ErrorBoundary` system](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary), which similarly handles errors thrown during the render function.\r\n\r\n> Note that neither this proposal, nor React's `ErrorBoundary` handle errors that occur in event handlers, only the runtime.\r\n\r\n```jsx\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // Example \"componentStack\":\r\n    //   in ComponentThatThrows (created by App)\r\n    //   in ErrorBoundary (created by App)\r\n    //   in div (created by App)\r\n    //   in App\r\n    logErrorToMyService(error, info.componentStack);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return this.props.fallback;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// ...\r\n\r\n<ErrorBoundary fallback={<p>Something went wrong</p>}>\r\n  <Profile />\r\n</ErrorBoundary>\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/51941","RelatedDescription":"Open issue \"`@try`/`@catch` Control Flow \" (#51941)"},{"Id":"1916485663","IsPullRequest":false,"CreatedAt":"2023-09-27T23:36:33","Actor":"Den-dp","Number":"51940","RawContent":null,"Title":"NgForm loses the value if eagerly rendered NgModel control were \"swapped\" with equally named lazy loaded one using ng-template","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nNo\n\n### Description\n\nSwitching between eager and lazy-loaded material tabs which have equally named NgModel controls, erases the ngForm value\r\n\r\n```html\r\n<form #form=\"ngForm\">\r\n\r\n  <mat-tab-group>\r\n\r\n    <mat-tab label=\"eager tab with lightweight editor\">\r\n      <input [(ngModel)]=\"model.foo\" name=\"foo\" />\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"lazy tab with heavy editor\">\r\n      <ng-template matTabContent>\r\n        <!-- lazy loaded heavy visualization for the same model -->\r\n        <input [(ngModel)]=\"model.foo\" name=\"foo\" />\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n</form>\r\n\r\n<pre>form.value: {{ form.value | json }}</pre>\r\n```\r\n\r\nMore detailed steps in my stackblitz\r\n\r\nhttps://github.com/angular/angular/assets/1770529/a22a03a0-871f-415f-acf9-9bfff1ef1a09\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/ngform-issue-with-ngmodel?file=src%2Fapp.component.html\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nI tried it with both angular 13 and 16.1.1\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51940","RelatedDescription":"Open issue \"NgForm loses the value if eagerly rendered NgModel control were \"swapped\" with equally named lazy loaded one using ng-template\" (#51940)"},{"Id":"1916457690","IsPullRequest":true,"CreatedAt":"2023-09-27T23:04:13","Actor":"robertIsaac","Number":"51939","RawContent":null,"Title":"feat(router): Add `Route.tags` with a configurable `TagsStrategy`","State":"open","Body":"This commit provides a service, `PageTagsStrategy` for setting the document tags after a successful router navigation. Users can provide custom strategies by extending `TagsStrategy` and adding a provider which overrides it. The strategy takes advantage of the pre-existing `data` and `resolve` concepts in the Router implementation:\r\n  We can copy the `Route.tags` into `data`/`resolve` in a non-breaking way by using a `symbol` as the key.\r\n  This ensures that we do not have any collisions with pre-existing property names. By using `data` and `resolve`, we do not have to add anything more to the router navigation pipeline to support this feature.\r\n\r\nCloses #44928\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nyou have to use the Meta Service to provide tags\r\n\r\nIssue Number: #44928\r\n\r\n\r\n## What is the new behavior?\r\nyou can set the tags in the routing directly\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51939","RelatedDescription":"Open PR \"feat(router): Add `Route.tags` with a configurable `TagsStrategy`\" (#51939)"},{"Id":"1916423055","IsPullRequest":false,"CreatedAt":"2023-09-27T22:25:51","Actor":"Nikovic","Number":"51938","RawContent":null,"Title":"Problems with Signal of Map/Map Iterator ","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nI'm trialing Signals in an application I'm building, and I came across the following:\r\nIn a component, I have a signal of a Map, `map = signal(new Map<string, number>())`. I somehow fill the map (in the reproduction, with `mutate` in the component constructor).\r\n\r\nWhen I iterate over it in the template using `*ngFor=\"let id of map().keys()\"`, I get NG0100: ExpressionChangedAfterItHasBeenCheckedError. That alone is unexpected to me, I'm not doing any of the things that the documentation says may cause that error.\r\n\r\nIn trying to get rid of that error, I created `keys = computed(() => map().keys())`\r\nIterating over _that_ with `*ngFor=\"let id of keys()\"` gives... nothing. The Iterator is always \"empty\". This seems like a clear bug to me.\r\n\r\nI found I could circumvent both problems with `keys2 = computed(() => [...map().keys())]` and `*ngFor=\"let id of keys2()`. I assume however that this comes with a performance penalty. In the actual application I'm building, performance will likely be an issue, so I'd prefer not to have to rely on that workaround.\r\n\r\nBest regards,\r\nNiki Herl\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-bt1rkd?file=src%2Fapp%2Fapp.component.html,src%2Fapp%2Fapp.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nNG0100: ExpressionChangedAfterItHasBeenCheckedError\r\n\r\nor the map iterator being empty (\"Map Iterator {  }\")\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 16.2.3\r\nNode: 18.17.1\r\nPackage Manager: npm 10.0.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51938","RelatedDescription":"Open issue \"Problems with Signal of Map/Map Iterator \" (#51938)"},{"Id":"1916220787","IsPullRequest":true,"CreatedAt":"2023-09-27T22:03:40","Actor":"dylhunn","Number":"51932","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51932","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#51932)"},{"Id":"1916294160","IsPullRequest":true,"CreatedAt":"2023-09-27T21:00:04","Actor":"dylhunn","Number":"51937","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51937","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#51937)"},{"Id":"1916271985","IsPullRequest":true,"CreatedAt":"2023-09-27T20:31:27","Actor":"dylhunn","Number":"51936","RawContent":null,"Title":"docs: release notes for the v16.2.7 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/51936","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.7 release\" (#51936)"},{"Id":"1916268225","IsPullRequest":true,"CreatedAt":"2023-09-27T20:28:36","Actor":"dylhunn","Number":"51935","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51935","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#51935)"},{"Id":"1916260494","IsPullRequest":false,"CreatedAt":"2023-09-27T20:23:14","Actor":"Erbenos","Number":"51934","RawContent":null,"Title":"Child route data is not inherited from parent unless 'runGuardsAndResolvers' returns true","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nrouter\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhile I was figuring out a way to trigger resolver only for certain route on route navigation (see https://github.com/angular/angular/issues/31843), I found this bug (see linked stackblitz), when even though Angular invokes the resolver as expected, the children won't get their @Input() bound to the new value until the resolver for the specific child runs.\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-exaecl?file=src%2Fmain.ts\r\n\r\n1) goto route \"a/b\"\r\n2) click \"Route B\"'s \"refresh route A resolver\", which navigates to route \"a/b\" and custom RunGuardsAndResolvers strategy causes route's \"A\" resolver to run\r\n3) observe that component of \"a/b\" doesn't obtain the new value, but component of \"a\" does.\r\n4) click \"Route B\"'s \"refresh route B resolver\", which navigates to route \"a/b\" and custom RunGuardsAndResolvers strategy causes route's \"B\" resolver to run\r\n5) observe that component of \"a/b\" obtains both new value for \"resolver B\" AND new value for \"resolver A\" (cause only now the value gets updated even though \"resolver A\" isn't run anew)\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nThere is no error.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular 16.0.1\r\n\r\nNot sure how I can run the ng version on stackblitz, can't provide more info.\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51934","RelatedDescription":"Open issue \"Child route data is not inherited from parent unless 'runGuardsAndResolvers' returns true\" (#51934)"},{"Id":"1916255689","IsPullRequest":true,"CreatedAt":"2023-09-27T20:23:14","Actor":"josephperrott","Number":"51933","RawContent":null,"Title":"Bump version to \"v16.2.7\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51933","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.7\" with changelog.\" (#51933)"},{"Id":"1915100117","IsPullRequest":true,"CreatedAt":"2023-09-27T19:59:41","Actor":"crisbeto","Number":"51922","RawContent":null,"Title":"Support for implicit deferred triggers and better diagnostics for triggers","State":"closed","Body":"Adds support for `viewport`, `hover` and `interaction` deferred triggers with an implicit element reference, as well as a diagnostic for the case where the deferred block can't resolve its trigger element. Split up into the following commits:\r\n\r\n### fix(compiler): add diagnostic for inaccessible deferred trigger\r\n\r\nIf a trigger element can't be accessed from the defer block, we don't generate any instructions for it. These changes add a diagnostic that will surface the error to users.\r\n\r\n### feat(core): support deferred triggers with implicit triggers\r\n\r\nAdds support for defining `viewport`, `interaction` and `hover` triggers with no parameters. If the framework encounters such a case, it resolves the trigger to the root element of the `@placeholder` block. Triggers with no parameters have the following restrictions:\r\n1. They have to be placed on an `@defer` block that has an `@placeholder`.\r\n2. The `@placeholder` can only have one root node.\r\n3. The root placeholder node has to be an element.","Url":"https://github.com/angular/angular/pull/51922","RelatedDescription":"Closed or merged PR \"Support for implicit deferred triggers and better diagnostics for triggers\" (#51922)"},{"Id":"1916094174","IsPullRequest":true,"CreatedAt":"2023-09-27T18:20:04","Actor":"dylhunn","Number":"51931","RawContent":null,"Title":"refactor(compiler): `if`/`else` blocks in template pipeline","State":"open","Body":"Support `if`/`else` control flow blocks in the template pipeline. See individual commits for details.","Url":"https://github.com/angular/angular/pull/51931","RelatedDescription":"Open PR \"refactor(compiler): `if`/`else` blocks in template pipeline\" (#51931)"},{"Id":"1914333942","IsPullRequest":true,"CreatedAt":"2023-09-27T17:43:06","Actor":"AndrewKushnir","Number":"51914","RawContent":null,"Title":"refactor(core): populate dehydrated views in `template` instruction","State":"closed","Body":"Previously, dehydrated views lookup was triggered only when ViewContainerRef was injected. The new control flow logic uses lower level APIs, thus having the code only in the ViewContainerRef is not sufficient.\r\n\r\nThis commit adds the logic to invoke the process of dehydrated views lookup from the `template` instruction, thus enabling it for new control flow instructions as well.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51914","RelatedDescription":"Closed or merged PR \"refactor(core): populate dehydrated views in `template` instruction\" (#51914)"},{"Id":"1914359490","IsPullRequest":true,"CreatedAt":"2023-09-27T17:29:14","Actor":"AndrewKushnir","Number":"51915","RawContent":null,"Title":"refactor(core): add hydration support for built-in `if` and `switch`","State":"closed","Body":"**Note: this PR is built on top of https://github.com/angular/angular/pull/51914, the last commit contains changes related to this PR.**\r\n\r\nThis commit updates the `if` and `switch` logic to support hydration. The logic attempts to find dehydrated views in containers while processing `if` and `switch` instructions. If a dehydrated is found, its used to further match elements. Otherwise, DOM elements for a view are created from scratch.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51915","RelatedDescription":"Closed or merged PR \"refactor(core): add hydration support for built-in `if` and `switch`\" (#51915)"},{"Id":"1915289676","IsPullRequest":false,"CreatedAt":"2023-09-27T16:45:43","Actor":"MrJithil","Number":"51924","RawContent":null,"Title":"Developer docs Bazel extension url is naviagting to deprecated version","State":"closed","Body":"### Describe the problem that you experienced\n\nThe \"Install Bazel\" in developer document is navigating to a deprecated version of Bazel. The extension page asking a developer to migrate the extension.\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://github.com/angular/angular/blob/c7127b98b555449f99e24a81c828ab7b1c6c4a4e/docs/DEVELOPER.md#vs-code-1\n\n### Describe what you were looking for in the documentation\n\nSetting up the local setup of angular to contribute \n\n### Describe the actions that led you to experience the problem\n\nUsed the active release of new Bazel extension\n\n### Describe what you want to experience that would fix the problem\n\nModify the documentation with an updated url. \n\n### Add a screenshot if that helps illustrate the problem\n\n\r\n<img width=\"991\" alt=\"Screenshot 2023-09-27 at 9 02 52 pm\" src=\"https://github.com/angular/angular/assets/26359740/ade004de-fe37-43a5-aefc-838fb9cf5d86\">\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n**New Extension Details\r\n\r\nName: Bazel\r\nId: BazelBuild.vscode-bazel\r\nDescription: Bazel BUILD integration\r\nVersion: 0.7.0\r\nPublisher: The Bazel Team\r\nVS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=BazelBuild.vscode-bazel\n```\n","Url":"https://github.com/angular/angular/issues/51924","RelatedDescription":"Closed issue \"Developer docs Bazel extension url is naviagting to deprecated version\" (#51924)"},{"Id":"1915940760","IsPullRequest":false,"CreatedAt":"2023-09-27T16:35:03","Actor":"danilobatistaqueiroz","Number":"51930","RawContent":null,"Title":"It always creates a singleton service - Angular 14","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen a service is applied using providers to any module, which is not imported by AppModule, it will be singleton.\r\n\r\nI created the **list-courses.module** that inject the **courses.service**, but this module is imported only by **orders.module**, not by **AppModule**.  \r\nIf I inject the service in a constructor's component the singleton instance will be used.  (in the example: **create-courses.component**)\r\n\r\nAs Angular guide says:   \r\n> Providing a singleton service.\r\n> There are two ways to make a service a singleton in Angular:\r\n> \r\n> Set the providedIn property of the @Injectable() to \"root\"\r\n> Include the service in the AppModule or in a module that is only imported by the AppModule\r\n \r\n\r\n![image](https://github.com/angular/angular/assets/32627919/6dc03683-ce35-47a7-a558-ca758633ec36)\r\n\r\n![image](https://github.com/angular/angular/assets/32627919/13867f21-eed8-4cab-8531-81c2f2f4d2a8)\r\n\r\n![image](https://github.com/angular/angular/assets/32627919/eee65634-2234-42d5-8802-081483d2a6fd)\r\n\r\n![image](https://github.com/angular/angular/assets/32627919/356c0031-8fd6-45bd-9b12-16ed0a1bbd53)\r\n\r\n![image](https://github.com/angular/angular/assets/32627919/d22391c0-283a-4b0c-beda-e4989f2f0a74)\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/danilobatistaqueiroz/ng-singleton-service  \n\n### Please provide the exception or error you saw\n\n```true\nThe instance is singleton sharing the same data and the same instance.\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.6\r\nNode: 16.17.0\r\nPackage Manager: pnpm 8.7.5 \r\nOS: linux x64\r\n\r\nAngular: 14.2.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   14.2.6\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.2.1\r\n@angular/cli                    14.2.6\r\n@schematics/angular             16.2.1\r\nrxjs                            7.5.0\r\ntypescript                      4.7.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/51930","RelatedDescription":"Closed issue \"It always creates a singleton service - Angular 14\" (#51930)"},{"Id":"1915931901","IsPullRequest":true,"CreatedAt":"2023-09-27T16:24:15","Actor":"angular-robot","Number":"51929","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51929","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51929)"},{"Id":"1913996275","IsPullRequest":true,"CreatedAt":"2023-09-27T16:23:55","Actor":"mmalerba","Number":"51911","RawContent":null,"Title":"refactor(compiler): Output i18n message parameter maps in sorted order","State":"closed","Body":"Changes `TemplateDefinitionBuilder` to output i18n message parameters in sorted order to make it easier for the template pipeline to generate identical output. This does not result in any functional change, but will make it much easier to shared output golden files with the template pipeline.","Url":"https://github.com/angular/angular/pull/51911","RelatedDescription":"Closed or merged PR \"refactor(compiler): Output i18n message parameter maps in sorted order\" (#51911)"},{"Id":"1914384361","IsPullRequest":true,"CreatedAt":"2023-09-27T16:23:25","Actor":"angular-robot","Number":"51916","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51916","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51916)"},{"Id":"1914395186","IsPullRequest":true,"CreatedAt":"2023-09-27T16:22:56","Actor":"AndrewKushnir","Number":"51917","RawContent":null,"Title":"refactor(core): avoid an empty array allocation during hydration","State":"closed","Body":"This commit updates hydration runtime code to avoid creating an empty array when we can avoid it. Instead, we just check whether the field is `null` directly (without using nullish coalescing).\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51917","RelatedDescription":"Closed or merged PR \"refactor(core): avoid an empty array allocation during hydration\" (#51917)"},{"Id":"1914673403","IsPullRequest":true,"CreatedAt":"2023-09-27T16:22:22","Actor":"JeevanMahesha","Number":"51921","RawContent":null,"Title":"docs: updated the server configuration for apache2","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nCloses: #51881 \r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51921","RelatedDescription":"Closed or merged PR \"docs: updated the server configuration for apache2\" (#51921)"},{"Id":"1915302762","IsPullRequest":true,"CreatedAt":"2023-09-27T16:21:42","Actor":"MrJithil","Number":"51925","RawContent":null,"Title":"docs: minor update to modify the  Bazel extension url","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nCloses: #51924 \r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51925","RelatedDescription":"Closed or merged PR \"docs: minor update to modify the  Bazel extension url\" (#51925)"},{"Id":"1915447544","IsPullRequest":true,"CreatedAt":"2023-09-27T16:20:07","Actor":"alan-agius4","Number":"51926","RawContent":null,"Title":"refactor(migrations): remove unused version 16 migrations","State":"closed","Body":"When updating to version 17, version 16 migrations cannot be executed thus making them redundant to have in the package.\r\n","Url":"https://github.com/angular/angular/pull/51926","RelatedDescription":"Closed or merged PR \"refactor(migrations): remove unused version 16 migrations\" (#51926)"},{"Id":"1915707662","IsPullRequest":false,"CreatedAt":"2023-09-27T14:30:12","Actor":"alcaidio","Number":"51927","RawContent":null,"Title":"Type safety isssue with Angular dependency injection","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI lose typing when I use Angular's dependency injection. I don't know why? Can someone explain and find a solution to use DI while having strict typing? I'm using a service to strictly type local storage, here's some context:\r\n\r\nI use a class with a generic type.\r\n\r\n```\r\n@Injectable()\r\nexport class LocalStorageService<T> implements iStorageService<T> {\r\n// ...\r\n\r\n  constructor(@Inject(LOCAL_STORAGE_NAMESPACE) private namespace: string) {}\r\n\r\n\r\n  set<K extends keyof T>(key: K, value: T[K]) {\r\n    if (this.storage) {\r\n      this.storage.setItem(\r\n        this.namespace + key.toString(),\r\n        JSON.stringify(value)\r\n      );\r\n    }\r\n  }\r\n\r\n// ...\r\n}\r\n```\r\nand at consumer level :\r\n\r\n  ```\r\nproviders: [\r\n    {\r\n      provide: LOCAL_STORAGE_NAMESPACE,\r\n      useValue: 'dumbnamespace',\r\n    },\r\n    LocalStorageService<LocalStorageModel>,\r\n  ],\r\n```\r\nI tried too :\r\n\r\n ```\r\n providers: [\r\n    {\r\n      provide: 'LocalStorageService',\r\n      useFactory: () => new LocalStorageService<LocalStorageModel>('namespace'),\r\n    },\r\n  ],\r\n```\r\nwith LocalStorageModel fir instance:\r\n\r\n```\r\ninterface LocalStorageModel {\r\n  [LocalStorageKey.Name]: string;\r\n}\r\n```\r\nAnd in the component :\r\n\r\n  `private testTypeChecking = inject(LocalStorageService).set(LocalStorageKey.City, 22);`\r\nNo error here when it should be :(\r\n\r\nDoing it this way works (we have an error, number is not a string), but without using Angular's DI.\r\n\r\n```\r\nconst testTypeChecking = () => {\r\n  const localStorageService = new LocalStorageService<LocalStorageModel>('id');\r\n  localStorageService.set(LocalStorageKey.Name, 22);\r\n};\r\n```\r\nDoes anyone have an explanation?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.0.6\r\nNode: 16.15.0\r\nPackage Manager: npm 8.5.5\r\nOS: darwin x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.0.6\r\n@angular/cdk                    16.2.5\r\n@angular/cli                    16.0.6\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else?\n\nI don't think it's a bug, but here I think someone will have the answer.","Url":"https://github.com/angular/angular/issues/51927","RelatedDescription":"Closed issue \"Type safety isssue with Angular dependency injection\" (#51927)"},{"Id":"1915269009","IsPullRequest":true,"CreatedAt":"2023-09-27T10:55:59","Actor":"janniemeyer","Number":"51923","RawContent":null,"Title":"fix(service-worker): throw a critical error when handleFetch fails #51885 for 15.2 Branch","State":"open","Body":"Apply the workaround approved for Angular 16 to Angular 15 as in #51885 \r\n\r\nOriginal description:\r\n> On Safari, the cache might fail on methods like `match` with an `Internal error`. Critical errors allows to fallback to `safeFetch()` in the `Driver`.\r\n> \r\n> fixes: #50378\r\n> \r\n> NB: This caching will still be broken since apparantly there a bug on Safari. This fix will only allow the app to recover from the bug. It can be considered as a workaround.\r\n\r\n","Url":"https://github.com/angular/angular/pull/51923","RelatedDescription":"Open PR \"fix(service-worker): throw a critical error when handleFetch fails #51885 for 15.2 Branch\" (#51923)"},{"Id":"1914507805","IsPullRequest":true,"CreatedAt":"2023-09-27T01:07:04","Actor":"AndrewKushnir","Number":"51920","RawContent":null,"Title":"refactor(core): add hydration support for built-in `for`","State":"open","Body":"**Note: this PR is built on top of https://github.com/angular/angular/pull/51915, the last commit contains changes related to this PR.**\r\n\r\nThis commit adds hydration support for repeaters (for loops) and empty blocks. The logic looks up a dehydrated view and use this information for hydration. Otherwise, DOM elements for a view are created from scratch.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51920","RelatedDescription":"Open PR \"refactor(core): add hydration support for built-in `for`\" (#51920)"},{"Id":"1914424282","IsPullRequest":true,"CreatedAt":"2023-09-26T23:13:07","Actor":"pmvald","Number":"51919","RawContent":null,"Title":"Include component code location in runtime error messages ","State":"open","Body":"Currently the runtime error messages only include the name of the Type in the error. It is up to the dev to code search and find the class. This change provides infra tools by which we can include code location info (file path and line number) to error messages. This change focuses on components, but the same can be done for directives and pipes as well. This PR uses the new infra tools to revamp the \"orphan component\" error message (NG01001) [screenshot](https://screenshot.googleplex.com/4qv9iGeFJqzpBSr). As seen in the screenshot, the file path and line number of the component in question are included in the error message. The file path is relative to the project root and to emphasise this it is prefixed by `$PROJECT_ROOT`. Subsequent PRs can migrate more error messages. \r\n\r\nNote that this feature is only supported in full and local compilation modes.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nSome errors contain file path and line number of the components which are part of the error  \r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51919","RelatedDescription":"Open PR \"Include component code location in runtime error messages \" (#51919)"},{"Id":"1914423928","IsPullRequest":true,"CreatedAt":"2023-09-26T23:12:33","Actor":"wardbell","Number":"51918","RawContent":null,"Title":"docs: Phase 2 Sample Code Conversions to Standalone","State":"open","Body":"**NOT YET COMPLETE**\r\n\r\nPhase 2 sample code conversions per instructions in doc: https://docs.google.com/document/d/1QqnVK8Mc0O1gU9ctPrs-JJ42V9_dHCuEttD_01pXh34/edit\r\n\r\n1. ajs-quick-reference\r\n\r\nMinor changes to remove references to NgModule. Converted sample to standalone.\r\n\r\n2. architecture\r\n\r\nMigrated the code sample. Made minor changes to remove references to NgModule. I explicitly deprecated the `architecture-module.md` page and removed it from the navigation.\r\n\r\n3. deprecations / deprecations-guide\r\n\r\nMigrated the code sample which required pulling NgModule and Reactive Forms material into a new `deprecated` folder. Made minor changes to clarify when advice was specific to NgModule (see `loadChildren` in particular).\r\n\r\n4. displaying-data\r\n\r\nDeleted this `displaying-data` sample entirely as there is no need for a sample app just to display a single, vanilla data binding in the deprecated `zone.md` page. Replaced reference in `zone.md` with an inline code snippet.\r\n\r\n-- skipped samples #6-9 --\r\n\r\n10. ngcontainer\r\n\r\nConverted the code sample. There is no guide page for this sample. It can be displayed in Stackblitz or downloaded from `example-apps-list.md`\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51918","RelatedDescription":"Open PR \"docs: Phase 2 Sample Code Conversions to Standalone\" (#51918)"},{"Id":"1914255609","IsPullRequest":true,"CreatedAt":"2023-09-26T22:22:55","Actor":"crisbeto","Number":"51913","RawContent":null,"Title":"fix(compiler): allocating unnecessary slots in conditional instruction","State":"closed","Body":"Fixes that we were allocating slots for the expressions of `if`, `else if`, `switch` and `case` blocks which we weren't using for anything.\r\n\r\nThank you for finding and flagging this @dylhunn! 🎉 ","Url":"https://github.com/angular/angular/pull/51913","RelatedDescription":"Closed or merged PR \"fix(compiler): allocating unnecessary slots in conditional instruction\" (#51913)"},{"Id":"1914006232","IsPullRequest":true,"CreatedAt":"2023-09-26T17:47:05","Actor":"atscott","Number":"51912","RawContent":null,"Title":"fix(language-service): Retain correct language service when `ts.Proje…","State":"open","Body":"…ct` reloads\r\n\r\nWhen the `ts.Project` creates the language service plugin (in this case, the Angular Language Service), it sets the project's language service to the new language service returned by the plugin create: https://sourcegraph.com/github.com/microsoft/TypeScript@b12af0fa2bbd4b015e59adcfb49988cea7f919a1/-/blob/src/server/project.ts?L2035-2044\r\n\r\nThe project may be reloaded in response to various events, such as a change to the tsconfig file, which then recreates the plugin. When this happens, the language service that gets passed to the plugin `create` function will not be the typescript language service, but rather the previous instance of the new language service returned by the last call to `create`.\r\n\r\nThis commit ensures that subsequent calls to `create` for the `NgLanguageService` plugin for a project after the first call are able to retrieve and hold on to the _TypeScript_ language service.\r\n\r\nfixes https://github.com/angular/vscode-ng-language-service/issues/1923\r\n","Url":"https://github.com/angular/angular/pull/51912","RelatedDescription":"Open PR \"fix(language-service): Retain correct language service when `ts.Proje…\" (#51912)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1916041098","IsPullRequest":true,"CreatedAt":"2023-09-27T17:40:09","Actor":"cexbrayat","Number":"25913","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support namedChunks option in application builder","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe `application` builder does not support `namedChunks` yet.\r\n\r\n## What is the new behavior?\r\n\r\nThis adds the support of `namedChunks` for the new `application` builder.\r\nIt generates output like the following:\r\n\r\n```\r\nInitial Chunk Files         | Names         |  Raw Size | Estimated Transfer Size\r\nchunk-ACXUMF56.js           | -             |  94.14 kB |                28.25 kB\r\nmain-3WP5KDHR.js            | main          |  71.95 kB |                18.31 kB\r\npolyfills-4UVFGIFL.js       | polyfills     |  32.85 kB |                10.68 kB\r\nchunk-2XJVAMHT.js           | -             | 449 bytes |               449 bytes\r\nstyles-5INURTSO.css         | styles        |   0 bytes |                 0 bytes\r\n\r\n                            | Initial Total | 199.38 kB |                57.68 kB\r\n\r\nLazy Chunk Files            | Names         |  Raw Size | Estimated Transfer Size\r\nabout.component-2PJOS5PM.js | -             | 401 bytes |               401 bytes\r\nhome.component-25UHFOEY.js  | -             | 398 bytes |               398 bytes\r\n```\r\n\r\nThis is really handy to get a glimpse at what a chunk is referring to and be able to analyze it (especially in applications with dozens of chunks).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25913","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support namedChunks option in application builder\" (#25913)"},{"Id":"1915417272","IsPullRequest":true,"CreatedAt":"2023-09-27T16:58:32","Actor":"alan-agius4","Number":"25909","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server","State":"closed","Body":"\r\n\r\nThis commit disables logging `Angular is running in development mode.` when using SSR with vite dev-server. This to avoid polluting the server console with `Angular is running in development mode.` logs for each page load and reload.\r\n\r\nExample:\r\n```\r\nng s\r\n\r\nInitial Chunk Files | Names         | Raw Size\r\nmain.js             | main          | 34.31 kB | \r\npolyfills.js        | polyfills     | 95 bytes | \r\nstyles.css          | styles        | 95 bytes | \r\n\r\n                    | Initial Total | 34.49 kB\r\n\r\nApplication bundle generation complete. [5.205 seconds]\r\n\r\n  ➜  Local:   http://localhost:4200/\r\nWatch mode enabled. Watching for file changes...\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\n```","Url":"https://github.com/angular/angular-cli/pull/25909","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server\" (#25909)"},{"Id":"1915968876","IsPullRequest":false,"CreatedAt":"2023-09-27T16:08:06","Actor":"psarno","Number":"25912","RawContent":null,"Title":"\"ng serve\" fails after implementing self-closing tags - requires restart","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nIf we change a component to a self-closing tag after another error has occured during compilation, it refuses to pick up the changes to the self-closing tag.\r\n\r\nI don't know what area this is in, I chose \"compiler\" because that seemed the closest.\r\n\r\nExample:\r\n\r\nYou call the wrong method in a component:\r\n\r\n`<some-component (onClick)=\"doThis($event)\"></some-component>`\r\n\r\nYou have not declared `doThis(event)`, and save the HTML.\r\n\r\nThe compilation runs, and fails, due to the method not being implemented.\r\n\r\nYou realize this was supposed to call \"doSomething\", and then return to the component to make your changes.  At the same time, you realize it can use Angular 16's new self-closing tags:\r\n\r\n`<some-component (onClick)=\"doSomething($event)\" />`\r\n\r\nYou save this.  The compiler will still error out, stating now that:\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNowhere in the code does it now reference the \"doThis\" mistake.  Everything is saved.\r\n\r\nBut it won't compile anymore.  It requires stopping the \"`ng serve`\" and re-running it.  Then it works fine.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNote \"`doThis`\" does not exist in the HTML anymore.  The file has been saved.  When the compiler runs again, it complains about this.  The HTML now contains `doSomething()`, the correct call.  It is seeing the older version.\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cdk                    16.2.1\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nzone.js                         0.13.1\r\n```\r\n### Anything else?\r\n\r\nNope.","Url":"https://github.com/angular/angular-cli/issues/25912","RelatedDescription":"Open issue \"\"ng serve\" fails after implementing self-closing tags - requires restart\" (#25912)"},{"Id":"1915878868","IsPullRequest":false,"CreatedAt":"2023-09-27T15:53:25","Actor":"cexbrayat","Number":"25911","RawContent":null,"Title":"`application` builder issue with localize","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the application builder, using a component that relies on localize results in an exception, even if localize has been added to the project.\r\n\r\nConsider a route config as follow:\r\n```ts\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n```\r\n\r\n`HomeComponent` uses `NgbPagination` from ng-boostrap, which uses localize.\r\n```html\r\n<ngb-pagination [collectionSize]=\"20\" size=\"lg\"></ngb-pagination>\r\n```\r\n\r\nEven after adding `localize` with `ng add @angular/localize` , the application has a runtime error when displaying the component.\n\n### Minimal Reproduction\n\nclone https://github.com/cexbrayat/i18n-lazy-loading\r\n\r\n```\r\nnpm i\r\nng serve\r\n```\r\n\r\nIf you change the builder to the browser one, then the pagination component correctly displays\n\n### Exception or Error\n\n```text\nERROR Error: Uncaught (in promise): Error: It looks like your application or one of its dependencies is using i18n.\r\nAngular 9 introduced a global `$localize()` function that needs to be loaded.\r\nPlease run `ng add @angular/localize` from the Angular CLI.\r\n(For non-CLI projects, add `import '@angular/localize/init';` to your `polyfills.ts` file.\r\nFor server-side rendering applications add the import to your `main.server.ts` file.)\r\n_global.$localize<@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:22191:11\r\nconsts@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/@ng-bootstrap_ng-bootstrap.js?v=793732a8:18830:17\r\ncreateTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10416:58\r\ngetOrCreateComponentTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10407:24\r\naddComponentLogic@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10…\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@angular/cli                    17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\nThe error goes away when shifting back to the `browser` builder","Url":"https://github.com/angular/angular-cli/issues/25911","RelatedDescription":"Open issue \"`application` builder issue with localize\" (#25911)"},{"Id":"1915633518","IsPullRequest":false,"CreatedAt":"2023-09-27T13:47:49","Actor":"LennonReid","Number":"25910","RawContent":null,"Title":"MacOS ZSH terminal stuck due to ng completion script","State":"open","Body":"### Command\r\n\r\nlint\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm an Angular developer and rely on Nx as my monorepo management tool. Lately, I've encountered an issue where the Nx Console doesn't function as expected. Simultaneously, I've been experiencing a slow initiation of the terminal in VSCode, accompanied by the error message 'Resolving shell environment fails.'\r\n\r\nThis situation prompted me to investigate the possibility of a problem with the environment variables in my .zshrc configuration file. Upon reviewing my user configuration, I suspect that a particular command in my bash file may be causing these issues. I can't recall when I added that command, but I noticed a significant improvement after either removing or commenting out that particular line.\r\n\r\nI've come across a related issue on GitHub at https://github.com/angular/angular-cli/issues/25608. Unfortunately, the discussion there seems a bit confusing, and I'm unable to add any comments.\r\n\r\nAs a result, I've created a new issue to address this problem and offer a solution. This way, we can help others who might be facing the same issue.\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nOpen a new Window on MacOs and this will continue for about 2 minutes. <img width=\"585\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/43192276/0171138b-110e-423a-b994-91c9e8e691c3\">\r\nHere is the related bash config \r\n\r\n```bash\r\n\r\n...\r\n# Load Angular CLI autocompletion.\r\nsource <(ng completion script)\r\n...\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nOS:MacOS Ventura 13.5.2 (Macbook Air Apple M1)\r\nThe result after running `ng version`:\r\nAngular CLI: 16.2.4\r\nNode: 18.16.0\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.4 (cli-only)\r\n@angular-devkit/core         16.2.4 (cli-only)\r\n@angular-devkit/schematics   16.2.4 (cli-only)\r\n@angular/cli                 16.2.4 (cli-only)\r\n@schematics/angular          16.2.4 (cli-only)\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25910","RelatedDescription":"Open issue \"MacOS ZSH terminal stuck due to ng completion script\" (#25910)"},{"Id":"1915334649","IsPullRequest":true,"CreatedAt":"2023-09-27T12:08:42","Actor":"alan-agius4","Number":"25908","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25908","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25908)"},{"Id":"1915317339","IsPullRequest":false,"CreatedAt":"2023-09-27T11:24:01","Actor":"twilker","Number":"25907","RawContent":null,"Title":"Debugging Angular library not possible in application through `npm link`","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI have a standard Angular 16 library and application in two different workspaces / repositories. I link the build library using `npm link` to the application and start it. I would expect to be able to debug the library sources from the application. But it does not work, as it can only debug to the level of the library.mjs. I have tested it with the chrome devtools and VSCode.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Clone the minimal [app](https://github.com/twilker/vs-debug-angular-app) and [library](https://github.com/twilker/vs-debug-angular-library)\r\n2. In the library project execute\r\n```\r\nnpm i\r\nnpm run build\r\ncd ./dist/library\r\nnpm link\r\n```\r\n3. In the app project execute\r\n```\r\nnpm i\r\nnpm link library\r\n```\r\n4. Set breakpoint in app.component.ts L12\r\n5. Start Debugging (F5)\r\n6. Step Into -> leads to library.mjs although a source map exists for this file which would lead to the .ts source file\r\n![mjs-not-resolved](https://github.com/angular/angular-cli/assets/2802526/00f385de-a914-40ea-a0e7-06cfd85bda5f)\r\n\r\n\r\n### Exception or Error\r\n\r\nSee above\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.3\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI have opened another issue for VSCode [here](https://github.com/microsoft/vscode-js-debug/issues/1823). But as it does not work in VSCode and Chrome devtools I assumed the issue is with the Angular setup.","Url":"https://github.com/angular/angular-cli/issues/25907","RelatedDescription":"Closed issue \"Debugging Angular library not possible in application through `npm link`\" (#25907)"},{"Id":"1915232689","IsPullRequest":true,"CreatedAt":"2023-09-27T10:41:48","Actor":"alan-agius4","Number":"25906","RawContent":null,"Title":"Bump version to \"v17.0.0-next.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25906","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.6\" with changelog.\" (#25906)"},{"Id":"1915221202","IsPullRequest":true,"CreatedAt":"2023-09-27T10:34:04","Actor":"alan-agius4","Number":"25905","RawContent":null,"Title":"docs: release notes for the v16.2.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/25905","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.4 release\" (#25905)"},{"Id":"1915204046","IsPullRequest":true,"CreatedAt":"2023-09-27T10:32:24","Actor":"alan-agius4","Number":"25904","RawContent":null,"Title":"Bump version to \"v16.2.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25904","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.4\" with changelog.\" (#25904)"},{"Id":"1915158238","IsPullRequest":true,"CreatedAt":"2023-09-27T10:05:27","Actor":"alan-agius4","Number":"25903","RawContent":null,"Title":"feat(@angular/ssr): add performance profiler to `CommonEngine`","State":"open","Body":"This commit adds an option to the `CommonEngine` to enable performance profiling. When enabled, timings of a number of steps will be outputted in the server console.\r\n\r\nExample:\r\n```\r\n********** Performance results **********\r\nRetrieve SSG Page:       0.3ms\r\nRender Page:             25.4ms\r\nInline Critical CSS:     2.3ms\r\n*****************************************\r\n```\r\n\r\nTo enable profiling set `enablePeformanceProfiler: true` in the `CommonEngine` options.\r\n\r\n```ts\r\nconst commonEngine = new CommonEngine({\r\n  enablePeformanceProfiler: true\r\n});\r\n```\r\n","Url":"https://github.com/angular/angular-cli/pull/25903","RelatedDescription":"Open PR \"feat(@angular/ssr): add performance profiler to `CommonEngine`\" (#25903)"},{"Id":"1910968239","IsPullRequest":true,"CreatedAt":"2023-09-26T18:30:51","Actor":"alan-agius4","Number":"25900","RawContent":null,"Title":"feat(@schematics/angular): generate functional interceptors by default","State":"closed","Body":"This commit updates the interceptor schematic to generate function intererceptors by default.\r\n\r\nBREAKING CHANGE: `ng g interceptor` now generate a functional interceptor by default. or guard by default. To generate a class-based interceptor the `--no-functional` command flag should be used.\r\n","Url":"https://github.com/angular/angular-cli/pull/25900","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): generate functional interceptors by default\" (#25900)"},{"Id":"1910839707","IsPullRequest":true,"CreatedAt":"2023-09-26T18:06:31","Actor":"angular-robot","Number":"25898","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25898","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25898)"},{"Id":"1913536159","IsPullRequest":false,"CreatedAt":"2023-09-26T14:30:37","Actor":"SandorSzilard","Number":"25902","RawContent":null,"Title":"\"An asset cannot be written to a location outside of the output path\" after update to v16 (16.2.5 && 16.2.6)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nupgrade\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI was trying to update an Angular app to Angular 16 (from Angular 15), but I get the following error after the update process when running `npm run start`:` An unhandled exception occurred: An asset cannot be written to a location outside of the output path.`\r\n\r\nA more detailed error description is:\r\n\r\n```\r\nC:\\**redacted for confidentiality**\\node_modules\\rxjs\\dist\\cjs\\internal\\util\\reportUnhandledError.js:13\r\n            throw err;\r\n            ^\r\n\r\nError: An asset cannot be written to a location outside of the output path.\r\n    at C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-asset-patterns.js:87:19\r\n    at Array.map (<anonymous>)\r\n    at normalizeAssetPatterns (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-asset-patterns.js:50:26)\r\n    at normalizeBrowserSchema (C:\\**redacted for confidentiality**\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\normalize-builder-schema.js:22:71)\r\n    at generateBrowserWebpackConfigFromContext (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\webpack-browser-config.js:116:66)\r\n    at async generateI18nBrowserWebpackConfigFromContext (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\utils\\webpack-browser-config.js:67:20)\r\n    at async setup (C:\\***redacted for confidentiality***\\node_modules\\@angular-devkit\\build-angular\\src\\builders\\dev-server\\webpack-server.js:96:34)\r\n    \r\n\r\nNode.js v18.17.1\r\n```\r\nNodeJS 18.17.1 Windows 10\r\n\r\nI updated the app from Angular 15 to Angular 16 (`npm run ng update`). Everything went fine, I have ran `npm install` after and when running the project for test I got this error.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.2.5 && 16.2.6\r\n\r\n\r\nAngular CLI: 16.2.2\r\nNode: 18.17.1\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.2\r\n@angular-devkit/build-angular   16.2.2\r\n@angular-devkit/core            16.2.2\r\n@angular-devkit/schematics      16.2.2\r\n@angular/cdk                    16.2.4\r\n@angular/cli                    16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.2.2\r\nrxjs                            6.6.7\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25902","RelatedDescription":"Closed issue \"\"An asset cannot be written to a location outside of the output path\" after update to v16 (16.2.5 && 16.2.6)\" (#25902)"},{"Id":"1912237448","IsPullRequest":true,"CreatedAt":"2023-09-25T20:30:52","Actor":"sp90","Number":"25901","RawContent":null,"Title":"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe:\r\n\r\nI often feel that skipTests add a lot of code that is unessary for non test applications and could probably benefit from adding it if there are added tests later on\r\n\r\n## What is the current behavior?\r\n\r\n`ng new newApp --skip-tests` it only skip `.spec.ts` \r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nIt does also skip the angular.json build configuration for tests\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n\r\nI think this could be a first PR in a series of PR's where we go towards having skip-tests applied by default to reduce boilerplate of a base angular app. \r\n\r\nAnd then i think we should later on create scripts/packages like `ng add @angular/test/jest` or `ng add @angular/e2e/playwright` \r\n\r\nThis also aligns perfectly with making rxjs optional and having angular/ssr as an optional part of angular\r\n","Url":"https://github.com/angular/angular-cli/pull/25901","RelatedDescription":"Open PR \"fix(@schematics/angular): remove test build options from angular.json if skipTests is passed\" (#25901)"},{"Id":"1910887014","IsPullRequest":true,"CreatedAt":"2023-09-25T18:17:02","Actor":"alan-agius4","Number":"25899","RawContent":null,"Title":"feat(@schematics/angular): add `ng new --ssr`","State":"closed","Body":"\r\n\r\nThis commit enabled users to opt-in adding SSR and SSG to their application during the `ng new` experience. This can be done either by using the `--ssr` option or answer `Yes` when prompted.","Url":"https://github.com/angular/angular-cli/pull/25899","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add `ng new --ssr`\" (#25899)"},{"Id":"1909717207","IsPullRequest":true,"CreatedAt":"2023-09-25T10:28:59","Actor":"angular-robot","Number":"25896","RawContent":null,"Title":"build: update actions/checkout action to v4.1.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/checkout](https://togithub.com/actions/checkout) | action | minor | `v4.0.0` -> `v4.1.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>actions/checkout (actions/checkout)</summary>\n\n### [`v4.1.0`](https://togithub.com/actions/checkout/blob/HEAD/CHANGELOG.md#v410)\n\n[Compare Source](https://togithub.com/actions/checkout/compare/v4.0.0...v4.1.0)\n\n-   [Add support for partial checkout filters](https://togithub.com/actions/checkout/pull/1396)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25896","RelatedDescription":"Closed or merged PR \"build: update actions/checkout action to v4.1.0\" (#25896)"},{"Id":"1910163574","IsPullRequest":false,"CreatedAt":"2023-09-24T10:33:10","Actor":"hubnerd","Number":"25897","RawContent":null,"Title":"Building angular using webpack is not importing modules correctly","State":"closed","Body":"### Command\n\nother\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\n\r\nI have build a small example app to show off this issue. It seems when importing modules in the module declaration it does import the modules declarations. For example when I import the browser module it does not import NgIf, NgFor etc etc and when I import NgSelect it does not import any of its Schema or components. I am building the app without using angular-cli as I am currently migrating an app from angularjs to angular and moving it to use angular-cli would be an issue.\r\n\r\nI have set up the webpack config like\r\n\r\n```\r\nconst path = require('path'),\r\nAngularWebpackPlugin = require('@ngtools/webpack'),\r\nwebpack = require('webpack'),\r\nHtmlWebpackPlugin = require('html-webpack-plugin'),\r\nWebpackDevServer = require('webpack-dev-server');\r\n\r\nmodule.exports = {\r\n    entry: {\r\n        'test': { import: \"./app/app.module.ts\", filename: 'js/[name].bundle.min.js' },\r\n    },\r\n    mode: 'none',\r\n    output: {\r\n        path: path.resolve(__dirname, \"dist\"),\r\n        clean: true\r\n    },\r\n    resolve: {\r\n        //extensions: ['.ts', '...'],\r\n        extensions: ['.tsx', '.ts', '.js', '.mjs', '.json']\r\n    },\r\n    optimization: {\r\n    },\r\n    plugins: [\r\n        new webpack.ProvidePlugin({\r\n            moment: 'moment'\r\n        }),\r\n        new HtmlWebpackPlugin({\r\n            title: 'Test',\r\n            template: './app/index.hbs',\r\n            cache: false,\r\n            hash: true,\r\n            inject: false\r\n        }),\r\n        new AngularWebpackPlugin.AngularWebpackPlugin({\r\n            'tsconfig': 'tsconfig.json',\r\n            //\"compilerOptions\": {},\r\n            \"sourceMap\": true,\r\n            'jitMode': true\r\n        })\r\n    ],\r\n    module: {\r\n        rules: \r\n            [\r\n                { \r\n                    test: /\\.hbs$/i, \r\n                    use: \"handlebars-loader\",\r\n                    exclude: /node_modules/, \r\n                },\r\n                {\r\n                    test: /\\.[jt]sx?$/,\r\n                    loader: '@ngtools/webpack',\r\n                     include: /app[\\\\/]/,\r\n                    exclude: [ /node_modules/ ]                \r\n                },\r\n                {\r\n                    test: /\\.[cm]?js$/,\r\n                    use: {\r\n                      loader: 'babel-loader',\r\n                      options: {\r\n                        cacheDirectory: true,\r\n                        compact: false,\r\n                        plugins: ['@angular/compiler-cli/linker/babel'],\r\n                      },\r\n                      \r\n                    },\r\n                },\r\n                {\r\n                    test: /\\.template\\.html$/,\r\n                    exclude: /node_modules/,\r\n                    use: \r\n                        [\r\n                            {\r\n                                loader: 'raw-loader',\r\n                                options: \r\n                                {\r\n                                    esModule: false,\r\n                                },\r\n                            }\r\n                        ],   \r\n                }, \r\n                {\r\n                    test: /\\.css$/i,\r\n                    exclude: /node_modules/,\r\n                    use: \r\n                        [  \r\n                            {\r\n                                loader: 'css-loader',\r\n                                options: {\r\n                                    import: false,\r\n                                    url: false,\r\n                                    modules: false\r\n                                }\r\n                            }    \r\n                        ]\r\n                }\r\n            ],\r\n        },\r\n        devServer: {\r\n            static: {\r\n              directory: path.join(__dirname, 'dist'),\r\n              watch: true\r\n            },\r\n            host: \"localhost\",\r\n            compress: true,\r\n            port: 5000,\r\n            server: 'https',\r\n            open: true,\r\n            liveReload: false,\r\n            hot: true,\r\n            client: {\r\n                overlay: true,\r\n                progress: true,\r\n            }\r\n          }\r\n}\r\n```\r\n\r\nand the angular test app is\r\n\r\n```\r\napp.module.ts\r\n\r\nimport 'zone.js';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        NgSelectModule,\r\n    ],\r\n    providers: [\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)  \r\n  .catch(err => console.error(err));   \r\n```\r\n\r\napp.component.ts\r\n\r\n```\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    template: require('./app.template.html'),\r\n})\r\nexport class AppComponent implements OnInit {\r\n    public source = [ { id: 1, name: \"moo\" }]\r\n    public selected = null;\r\n\r\n    ngOnInit(): void {\r\n        console.log(\"YAY!\");        \r\n    }\r\n}\r\n\r\n```\r\napp.template.html\r\n```\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <title ng-bind=\"title\">T.I.E.R</title>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <meta content=\"IE=edge, chrome=1\" http-equiv=\"X-UA-Compatible\" />\r\n</head>\r\n<body>\r\n    <app-root></app-root>\r\n    <script defer src=\"js/test.bundle.min.js?904b25da0a6807f141ae\"></script>\r\n</body></html>\r\n```\r\n\r\nand my tsconfig is:\r\n\r\n```\r\n{\r\n    \"compileOnSave\": false,\r\n    \"compilerOptions\": {\r\n      \"baseUrl\": \"./\",\r\n      \"outDir\": \"./dist/out-tsc\",\r\n      \"resolveJsonModule\": true,\r\n      \"forceConsistentCasingInFileNames\": true,\r\n      \"strict\": false,\r\n      \"noImplicitOverride\": false,\r\n      \"noPropertyAccessFromIndexSignature\": false,\r\n      \"noImplicitReturns\": true,\r\n      \"noFallthroughCasesInSwitch\": true,\r\n      \"sourceMap\": true,\r\n      \"declaration\": true,\r\n      \"emitDecoratorMetadata\": true,\r\n      \"downlevelIteration\": true,\r\n      \"experimentalDecorators\": true,\r\n      \"moduleResolution\": \"Node\",\r\n      \"importHelpers\": true,\r\n      \"target\": \"ES2022\",\r\n      \"module\": \"ES2022\",\r\n      \"useDefineForClassFields\": false,\r\n      \"lib\": [\r\n        \"ES2022\",\r\n        \"dom\"\r\n      ]\r\n    },\r\n    \"angularCompilerOptions\": {\r\n      \"enableI18nLegacyMessageIdFormat\": false,\r\n      \"strictInjectionParameters\": true,\r\n      \"strictInputAccessModifiers\": true,\r\n      \"strictTemplates\": true,\r\n      \"compilationMode\": \"partial\"\r\n    }\r\n  }\r\n```\r\n\r\nAs far as I can tell I am building the Ivy partials but I am getting the errors:\r\n\r\nNG0304: 'ng-select' is not a known element (used in the 'AppComponent' component template):\r\n\r\n    If 'ng-select' is an Angular component, then verify that it is a part of an @NgModule where this component is declared.\r\n    If 'ng-select' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n\r\nand\r\n\r\nNG0303: Can't bind to 'ngModel' since it isn't a known property of 'ng-select' (used in the 'AppComponent' component template).\r\n\r\n    If 'ng-select' is an Angular component and it has the 'ngModel' input, then verify that it is a part of an @NgModule where this component is declared.\r\n    If 'ng-select' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n    To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n\r\nas if it is not imported. Apart from that angular is working fine. If I put NgIf in imports I can use it but it should be imported from BrowserModule or CommonModule.\n\n### Minimal Reproduction\n\n- Create webpack.config.js with above config\r\n- Run webpack\r\n- Run webpack dev server\r\n- Check console.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n$ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.4\r\nNode: 18.13.0\r\nPackage Manager: npm 9.2.0\r\nOS: win32 x64\r\n\r\nAngular: 16.2.5\r\n... animations, common, compiler, compiler-cli, core\r\n... platform-browser, platform-browser-dynamic, upgrade\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1601.4 (cli-only)\r\n@angular-devkit/core         16.1.4 (cli-only)\r\n@angular-devkit/schematics   16.1.4 (cli-only)\r\n@schematics/angular          16.1.4 (cli-only)\r\nrxjs                         7.8.1\r\nwebpack                      5.88.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25897","RelatedDescription":"Closed issue \"Building angular using webpack is not importing modules correctly\" (#25897)"},{"Id":"1909717150","IsPullRequest":true,"CreatedAt":"2023-09-23T05:11:50","Actor":"angular-robot","Number":"25895","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `914324e` -> `ab6afbc` |\n| [@angular/animations](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fanimations/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `029a92c` -> `f731eda` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `4ed5693` -> `2cfafd6` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `3dbb262` -> `2012c27` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `6f48ac1` -> `b305660` |\n| [@angular/common](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcommon/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `cded431` -> `3cf7ced` |\n| [@angular/compiler](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcompiler/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `0c285d6` -> `b62c956` |\n| [@angular/compiler-cli](https://togithub.com/angular/angular/tree/main/packages/compiler-cli) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcompiler-cli/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `ba20742` -> `a77b580` |\n| [@angular/core](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fcore/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `3cf1bf0` -> `16ca005` |\n| [@angular/forms](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fforms/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `9f73400` -> `1e66e7e` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `b3d875d` -> `d24d3f7` |\n| [@angular/localize](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2flocalize/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `b96b50d` -> `759f9cf` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.4` -> `17.0.0-next.5`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.4/17.0.0-next.5) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `fa84136` -> `bfdad92` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `5eb122d` -> `cabb66d` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `66d8c79` -> `99ff190` |\n| [@angular/platform-browser](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `b4eed00` -> `f38629b` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fplatform-browser-dynamic/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `e1f56c2` -> `ba46754` |\n| [@angular/platform-server](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fplatform-server/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `f0e11a9` -> `9ce8432` |\n| [@angular/router](https://togithub.com/angular/angular/tree/main/packages/router) ([source](https://togithub.com/angular/angular)) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2frouter/17.0.0-next.5/17.0.0-next.6) |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `1b2f44f` -> `d75d651` |\n| [@angular/service-worker](https://togithub.com/angular/angular) | devDependencies | patch | [`17.0.0-next.5` -> `17.0.0-next.6`](https://renovatebot.com/diffs/npm/@angular%2fservice-worker/17.0.0-next.5/17.0.0-next.6) |\n| angular/dev-infra | action | digest | `c71cf50` -> `76c632f` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/angular (@&#8203;angular/animations)</summary>\n\n### [`v17.0.0-next.6`](https://togithub.com/angular/angular/blob/HEAD/CHANGELOG.md#1700-next6-2023-09-27)\n\n[Compare Source](https://togithub.com/angular/angular/compare/17.0.0-next.5...17.0.0-next.6)\n\n#### Breaking Changes\n\n##### router\n\n-   Absolute redirects no longer prevent further redirects.\n    Route configurations may need to be adjusted to prevent infinite\n    redirects where additional redirects were previously ignored after an\n    absolute redirect occurred.\n-   The `setupTestingRouter` function has been removed. Use\n    `RouterModule.forRoot` or `provideRouter` to setup the `Router` for\n    tests instead.\n\n#### Deprecations\n\n##### animations\n\n-   The `AnimationDriver.NOOP` symbol is deprecated, use `NoopAnimationDriver` instead.\n\n##### animations\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [0598613950](https://togithub.com/angular/angular/commit/0598613950c76f4a13601c6942e30ab4ce1e3b67) | refactor | deprecation of `AnimationDriver.NOOP` ([#&#8203;51843](https://togithub.com/angular/angular/pull/51843)) |\n\n##### compiler\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [23bfa10ac8](https://togithub.com/angular/angular/commit/23bfa10ac809f6b27d32647210c52329f0e4262e) | fix | add diagnostic for inaccessible deferred trigger ([#&#8203;51922](https://togithub.com/angular/angular/pull/51922)) |\n| [31295a3cf9](https://togithub.com/angular/angular/commit/31295a3cf907a61e7115d9039a83a232b263a676) | fix | allocating unnecessary slots in conditional instruction ([#&#8203;51913](https://togithub.com/angular/angular/pull/51913)) |\n\n##### compiler-cli\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [377a7abfda](https://togithub.com/angular/angular/commit/377a7abfda60a6ddd55a41531e3653bcad78b0a2) | fix | bypass static resolving of the component's changeDetection field in local compilation mode ([#&#8203;51848](https://togithub.com/angular/angular/pull/51848)) |\n| [f91f222b55](https://togithub.com/angular/angular/commit/f91f222b55f249089d267c72a9c0ab5b09d7c932) | fix | resolve component encapsulation enum in local compilation mode ([#&#8203;51848](https://togithub.com/angular/angular/pull/51848)) |\n\n##### core\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [c7127b98b5](https://togithub.com/angular/angular/commit/c7127b98b555449f99e24a81c828ab7b1c6c4a4e) | feat | add schematic to escape block syntax characters ([#&#8203;51905](https://togithub.com/angular/angular/pull/51905)) |\n| [3cbb2a8ecf](https://togithub.com/angular/angular/commit/3cbb2a8ecf202c814c37ab241ce9f57fb574692e) | feat | implement deferred block interaction triggers ([#&#8203;51830](https://togithub.com/angular/angular/pull/51830)) |\n| [8be2c48b7c](https://togithub.com/angular/angular/commit/8be2c48b7cda5e99f3d1efa9f26eb2615fea6a8b) | feat | implement new block syntax ([#&#8203;51891](https://togithub.com/angular/angular/pull/51891)) |\n| [687b96186c](https://togithub.com/angular/angular/commit/687b96186c7da731927e55e714061ea2de718505) | feat | support deferred hover triggers ([#&#8203;51874](https://togithub.com/angular/angular/pull/51874)) |\n| [e2e3d69a27](https://togithub.com/angular/angular/commit/e2e3d69a277990ab79aac7aae43cbdd398e13ed9) | feat | support deferred triggers with implicit triggers ([#&#8203;51922](https://togithub.com/angular/angular/pull/51922)) |\n| [16f5fc40a4](https://togithub.com/angular/angular/commit/16f5fc40a49cee0d29711df1783f297ff30b5c6e) | feat | support deferred viewport triggers ([#&#8203;51874](https://togithub.com/angular/angular/pull/51874)) |\n| [dcf18dc74c](https://togithub.com/angular/angular/commit/dcf18dc74c260253bbf394626beb712a831824f3) | fix | allow toSignal calls in reactive context ([#&#8203;51831](https://togithub.com/angular/angular/pull/51831)) |\n\n##### platform-browser\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [3c0577f991](https://togithub.com/angular/angular/commit/3c0577f99140b75688cb8ae969738325cc871548) | perf | disable styles of removed components instead of removing ([#&#8203;51808](https://togithub.com/angular/angular/pull/51808)) |\n\n##### router\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [86e91463af](https://togithub.com/angular/angular/commit/86e91463afc1f3d3d71a669fb2919f2b8bc5a1ca) | feat | Add option to skip the first view transition ([#&#8203;51825](https://togithub.com/angular/angular/pull/51825)) |\n| [ce1b915868](https://togithub.com/angular/angular/commit/ce1b915868e654cdb679e9381db9d3bd3d68d5c4) | fix | Allow redirects after an absolute redirect ([#&#8203;51731](https://togithub.com/angular/angular/pull/51731)) |\n| [3c6258c85b](https://togithub.com/angular/angular/commit/3c6258c85b37535c1178e84509b7c9ed3a1359e4) | fix | Remove deprecated setupTestingRouter function ([#&#8203;51826](https://togithub.com/angular/angular/pull/51826)) |\n\n##### service-worker\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [dcaad169ec](https://togithub.com/angular/angular/commit/dcaad169ec8bf0a61d032ae1ae68fb90d1face09) | fix | throw a critical error when `handleFetch` fails ([#&#8203;51885](https://togithub.com/angular/angular/pull/51885)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.5`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next5-aerogel-aurora-2023-09-27)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.4...17.0.0-next.5)\n\n#### Breaking Changes\n\n##### material\n\n-   There are new styles emitted by `mat.radio-theme` that are not\n    emitted by any of: `mat.radio-color`, `mat.radio-typography`,\n    `mat.radio-density`. If you rely on the partial mixins only and don't\n    call `mat.radio-theme`, you can add `mat.radio-base` to get the\n    missing styles.\n\n##### material-experimental\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [fbc7bdda93](https://togithub.com/angular/components/commit/fbc7bdda93b7c261705da81cec6720bbf607c5ce) | feat | **theming:** add M3 slider support ([#&#8203;27826](https://togithub.com/angular/components/pull/27826)) |\n| [6b57edb1b1](https://togithub.com/angular/components/commit/6b57edb1b164909f8aa1eddac87a915c037e6905) | feat | **theming:** add M3 snackbar support ([#&#8203;27824](https://togithub.com/angular/components/pull/27824)) |\n| [545db61b41](https://togithub.com/angular/components/commit/545db61b41957df26c5e3c95a2959ca6c83a9190) | feat | **theming:** add M3 toolbar support ([#&#8203;27812](https://togithub.com/angular/components/pull/27812)) |\n| [1930b1dacf](https://togithub.com/angular/components/commit/1930b1dacf07826750ffc72dbce551fe6653fd4f) | feat | **theming:** add M3 tooltip support ([#&#8203;27810](https://togithub.com/angular/components/pull/27810)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [4c3ef50d6e](https://togithub.com/angular/components/commit/4c3ef50d6e7147f1af71885346503791897f2c78) | fix | **datepicker:** improved missing dateAdapters error message to include matLuxon and matDateFns ([#&#8203;26889](https://togithub.com/angular/components/pull/26889)) |\n| [943b5dabf3](https://togithub.com/angular/components/commit/943b5dabf3fc14cf0dee80174a6891fef8a588c8) | fix | **radio:** move unthemable tokens to theme mixin ([#&#8203;27809](https://togithub.com/angular/components/pull/27809)) |\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [d336370565](https://togithub.com/angular/components/commit/d336370565deb6a4db666783d484040e1fd99648) | fix | **menu:** context menu closing immediately on control + click on Safari ([#&#8203;27838](https://togithub.com/angular/components/pull/27838)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDIuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25895","RelatedDescription":"Open PR \"build: update angular\" (#25895)"},{"Id":"1908900426","IsPullRequest":false,"CreatedAt":"2023-09-22T23:42:19","Actor":"MicahThierry","Number":"25892","RawContent":null,"Title":"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/issues/25892","RelatedDescription":"Closed issue \"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\" (#25892)"},{"Id":"1909189966","IsPullRequest":true,"CreatedAt":"2023-09-22T17:56:32","Actor":"alan-agius4","Number":"25893","RawContent":null,"Title":"    fix(@angular/cli): add `@angular/ssr` as part of the ng update `packageGroup`","State":"closed","Body":"This ensures that when the CLI is updates so is `@angular/ssr`","Url":"https://github.com/angular/angular-cli/pull/25893","RelatedDescription":"Closed or merged PR \"    fix(@angular/cli): add `@angular/ssr` as part of the ng update `packageGroup`\" (#25893)"},{"Id":"1909194243","IsPullRequest":true,"CreatedAt":"2023-09-22T17:56:19","Actor":"alan-agius4","Number":"25894","RawContent":null,"Title":"fix(@schematics/angular): update `@angular/cli` version specifier to use `^`","State":"closed","Body":"\r\n\r\nThis is to match all other Angular framework and Angular devkit dependencies\r\n","Url":"https://github.com/angular/angular-cli/pull/25894","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): update `@angular/cli` version specifier to use `^`\" (#25894)"},{"Id":"1908776309","IsPullRequest":true,"CreatedAt":"2023-09-22T15:34:46","Actor":"alan-agius4","Number":"25891","RawContent":null,"Title":"fix(@angular/ssr): enable `prerender` and `ssr` for all build configuration","State":"closed","Body":"\r\n\r\nThis commit configures both `ssr` and `prerender` both both development and production configurations. This is needed to improve DX and allow for a better debugging.\r\n","Url":"https://github.com/angular/angular-cli/pull/25891","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): enable `prerender` and `ssr` for all build configuration\" (#25891)"},{"Id":"1908612066","IsPullRequest":true,"CreatedAt":"2023-09-22T15:34:21","Actor":"alan-agius4","Number":"25889","RawContent":null,"Title":" feat(@schematics/angular): enable hydration when adding SSR, SSG or AppShell","State":"closed","Body":"This commits updates the internal server schematic that is used by SSR and AppShell schematics to include `provideClientHydration` in the list of providers, which causes hydration to be enabled for application.\r\n    \r\nFor more information about `provideClientHydration`, see: https://angular.io/api/platform-browser/provideClientHydration\r\n\r\nFYI @AndrewKushnir ","Url":"https://github.com/angular/angular-cli/pull/25889","RelatedDescription":"Closed or merged PR \" feat(@schematics/angular): enable hydration when adding SSR, SSG or AppShell\" (#25889)"},{"Id":"1908195578","IsPullRequest":true,"CreatedAt":"2023-09-22T14:48:35","Actor":"angular-robot","Number":"25887","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `b8b41c5` -> `4ed5693` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `5af68f6` -> `3dbb262` |\n| [@angular/cdk](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fcdk/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `6a436c9` -> `b96b50d` |\n| [@angular/material](https://togithub.com/angular/components) | devDependencies | patch | [`17.0.0-next.3` -> `17.0.0-next.4`](https://renovatebot.com/diffs/npm/@angular%2fmaterial/17.0.0-next.3/17.0.0-next.4) |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bd1435d` -> `fa84136` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `3bde09e` -> `5eb122d` |\n| angular/dev-infra | action | digest | `62e28b7` -> `c71cf50` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Release Notes\n\n<details>\n<summary>angular/components (@&#8203;angular/cdk)</summary>\n\n### [`v17.0.0-next.4`](https://togithub.com/angular/components/blob/HEAD/CHANGELOG.md#1700-next4-titanium-turtle-2023-09-20)\n\n[Compare Source](https://togithub.com/angular/components/compare/17.0.0-next.3...17.0.0-next.4)\n\n##### cdk\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [2409e7071](https://togithub.com/angular/components/commit/2409e7071a4c1e035a6f212249e96ba36d7aeb4f) | fix | **schematics:** account for single string in styles and new styleUrl ([#&#8203;27798](https://togithub.com/angular/components/pull/27798)) |\n| [31187abae](https://togithub.com/angular/components/commit/31187abae619cf76e7f0a7771ca6e5900a50e90c) | fix | **scrolling:** unsubscribe from scrolled stream when viewport is destroyed ([#&#8203;27800](https://togithub.com/angular/components/pull/27800)) |\n\n##### material\n\n| Commit | Type | Description |\n| -- | -- | -- |\n| [8c3d8d645](https://togithub.com/angular/components/commit/8c3d8d645857a381cb2a752a600796c36338ea9e) | fix | **form-field:** style the cursor the same way as the rest of the input ([#&#8203;26491](https://togithub.com/angular/components/pull/26491)) ([#&#8203;27795](https://togithub.com/angular/components/pull/27795)) |\n| [c7db4960e](https://togithub.com/angular/components/commit/c7db4960e16d0f74b0764cfa5be752392e8c30f6) | fix | **list:** Emit tokens under mixin root selector ([#&#8203;27711](https://togithub.com/angular/components/pull/27711)) |\n\n<!-- CHANGELOG SPLIT MARKER -->\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDAuMCIsInVwZGF0ZWRJblZlciI6IjM2LjEwMC4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25887","RelatedDescription":"Closed or merged PR \"build: update angular\" (#25887)"},{"Id":"1908052887","IsPullRequest":true,"CreatedAt":"2023-09-22T14:47:56","Actor":"clydin","Number":"25886","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support basic web worker bundling with esbuild builders","State":"closed","Body":"When using the esbuild-based builders (`application`/`browser`), Web Workers that use the supported syntax will now be bundled. The bundling process currently uses an additional synchronous internal esbuild execution. The execution must be synchronous due to the usage within a TypeScript transformer. TypeScript's compilation process is fully synchronous. The bundling itself currently does not provide all the features of the Webpack-based builder. \r\nThe following limitations are present in the current implementation but will be addressed in upcoming changes:\r\n- Worker code is not type-checked\r\n- Nested workers are not supported","Url":"https://github.com/angular/angular-cli/pull/25886","RelatedDescription":"Closed or merged PR \"feat(@angular-devkit/build-angular): support basic web worker bundling with esbuild builders\" (#25886)"},{"Id":"1906963829","IsPullRequest":true,"CreatedAt":"2023-09-22T14:42:36","Actor":"alan-agius4","Number":"25884","RawContent":null,"Title":"feat(@schematics/angular): enable standalone by default in new applications","State":"closed","Body":"This commit update the schematics to generate a standalone application by default.","Url":"https://github.com/angular/angular-cli/pull/25884","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): enable standalone by default in new applications\" (#25884)"},{"Id":"1908772046","IsPullRequest":true,"CreatedAt":"2023-09-22T13:41:59","Actor":"alan-agius4","Number":"25890","RawContent":null,"Title":"perf(@angular-devkit/build-angular): disable ahead of time prerendering in vite dev-server","State":"closed","Body":"\r\n\r\nWhen using the devserver, instead of prerendering every page for every incremental change, we now perform a server rendering on the page during request time. This ensures that incremental build times are faster when prerending is enabled as we avoid rendering of pages that are never viewed.\r\n","Url":"https://github.com/angular/angular-cli/pull/25890","RelatedDescription":"Closed or merged PR \"perf(@angular-devkit/build-angular): disable ahead of time prerendering in vite dev-server\" (#25890)"},{"Id":"1908551421","IsPullRequest":true,"CreatedAt":"2023-09-22T09:57:54","Actor":"alan-agius4","Number":"25888","RawContent":null,"Title":"test: update output regexp in i18n tests to account for change in filename","State":"closed","Body":"\r\nThis update the regexp to account for the change in https://github.com/angular/angular-cli/pull/25877. A filename that has the hash included will be `main.[hash]` in Webpack and `main-[hash]` when using esbuild.","Url":"https://github.com/angular/angular-cli/pull/25888","RelatedDescription":"Closed or merged PR \"test: update output regexp in i18n tests to account for change in filename\" (#25888)"},{"Id":"1907279392","IsPullRequest":false,"CreatedAt":"2023-09-21T15:45:26","Actor":"ilyakonrad","Number":"25885","RawContent":null,"Title":"Karma/Jasmine tests don't run after upgrading from Angular 14 to 15","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nAfter upgrading from Angular 14 to Angular 15, my Karma unit tests don't run anymore.\r\nI have 10 on them, so I used to see `Executed 10 of 10 SUCCESS`, now I see `Executed 0 of 0 SUCCESS`.\r\n\r\nI noticed that the upgrade removed few lines of code in `test.ts` but bringing them back doesn't help.\r\n\r\n<img width=\"615\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/25200186/d483a91e-87c3-467f-91c0-dcaa837eb32a\">\r\n\r\n[Playing around with `includes` property](https://stackoverflow.com/questions/74890907/after-migration-to-angular-15-context-was-removed-from-test-ts) in `angular.json` didn't help.\r\n\r\n[This gentleman's solution](https://github.com/angular/angular-cli/issues/24389#issuecomment-1342861688) didn't help me either.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Upgrade from 14 to 15.\r\n2. Question life choices.\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.9\r\nNode: 18.12.1\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.1502.9\r\n@angular-devkit/build-angular      15.2.9\r\n@angular-devkit/core               15.2.9\r\n@angular-devkit/schematics         15.2.9\r\n@angular/cdk                       14.2.7\r\n@angular/fire                      7.5.0\r\n@angular/material                  14.2.7\r\n@angular/material-moment-adapter   14.2.7\r\n@schematics/angular                15.2.9\r\nrxjs                               7.8.0\r\ntypescript                         4.8.4\r\nwebpack                            5.76.0\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nHere's my `tsconfig.spec.ts`\r\n\r\n```\r\n{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"../out-tsc/spec\",\r\n    \"baseUrl\": \"./\",\r\n    \"downlevelIteration\": true,\r\n    \"types\": [\r\n      \"jasmine\",\r\n      \"node\"\r\n    ]\r\n  },\r\n  \"files\": [\r\n    \"test.ts\",\r\n    \"polyfills.ts\"\r\n  ],\r\n  \"include\": [\r\n    \"**/*.spec.ts\",\r\n    \"**/*.d.ts\"\r\n  ]\r\n}\r\n```\r\n\r\nHere's my test config in `angular.json`\r\n```\r\n        \"test\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"preserveSymlinks\": true,\r\n            \"main\": \"src/test.ts\",\r\n            \"karmaConfig\": \"./karma.conf.js\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"src/tsconfig.spec.json\",\r\n            \"scripts\": [],\r\n            \"styles\": [\"src/styles.css\"],\r\n            \"assets\": [\"src/assets\", \"src/favicon.ico\", \"src/manifest.webmanifest\"]\r\n          }\r\n        }\r\n```\r\n\r\nHere's my Karma config\r\n```\r\n// Karma configuration file, see link for more information\r\n// https://karma-runner.github.io/1.0/config/configuration-file.html\r\n\r\nmodule.exports = function (config) {\r\n  config.set({\r\n    basePath: '',\r\n    frameworks: ['jasmine', '@angular-devkit/build-angular'],\r\n    plugins: [\r\n      require('karma-jasmine'),\r\n      require('karma-chrome-launcher'),\r\n      require('karma-jasmine-html-reporter'),\r\n      require('karma-junit-reporter'),\r\n      require('karma-coverage-istanbul-reporter'),\r\n      require('@angular-devkit/build-angular/plugins/karma')\r\n    ],\r\n    client:{\r\n      clearContext: false // leave Jasmine Spec Runner output visible in browser\r\n    },\r\n    coverageIstanbulReporter: {\r\n      reports: [ 'html', 'lcovonly' ],\r\n      fixWebpackSourcePaths: true\r\n    },\r\n    angularCli: {\r\n      environment: 'test'\r\n    },\r\n    reporters: ['progress', 'kjhtml'],\r\n    port: 9876,\r\n    colors: true,\r\n    logLevel: config.LOG_INFO,\r\n    autoWatch: true,\r\n    browsers: ['Chrome'],\r\n    singleRun: false,\r\n    junitReporter: {\r\n      outputDir: process.env.TEST_RESULTS,\r\n      outputFile: 'karma-results.xml',\r\n      useBrowserName: false\r\n    },\r\n  });\r\n};\r\n```\r\n\r\nHere's one of my tests\r\n```\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { TestBed, waitForAsync, ComponentFixture } from '@angular/core/testing'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { By } from '@angular/platform-browser'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { TranslateModule } from '@ngx-translate/core'\r\nimport { Store } from '@ngxs/store'\r\nimport { Observable, of } from 'rxjs'\r\n\r\nimport { SharedModule } from '../../shared/modules/shared.module'\r\nimport { AuthService } from '../../core/services'\r\nimport { LoginComponent } from './login.component'\r\nimport { PhoneNumberModule } from '../../shared/modules/phone-number/phone-number.module'\r\nimport { Organization } from '../../core/interfaces/organization/organization'\r\n\r\ndescribe('LoginComponent', () => {\r\n  let fixture: ComponentFixture<LoginComponent>\r\n  let fakeAuthService: AuthService\r\n\r\n  class ActivatedRouteMock {\r\n    queryParams = new Observable((observer) => {\r\n      const urlParams = { redirectTo: '' }\r\n      observer.next(urlParams)\r\n      observer.complete()\r\n    })\r\n  }\r\n\r\n  class StoreMock {}\r\n\r\n  beforeEach(waitForAsync(() => {\r\n    fakeAuthService = jasmine.createSpyObj<AuthService>('AuthService', {\r\n      loginAdminDashboard: of({ clubs: [{ name: 'Organization' } as Organization], sponsors: [] })\r\n    })\r\n\r\n    TestBed.configureTestingModule({\r\n      declarations: [LoginComponent],\r\n      imports: [TranslateModule.forRoot(), BrowserAnimationsModule, SharedModule, PhoneNumberModule],\r\n      providers: [\r\n        { provide: ActivatedRoute, useClass: ActivatedRouteMock },\r\n        { provide: Store, useClass: StoreMock },\r\n        { provide: AuthService, useValue: fakeAuthService }\r\n      ]\r\n    }).compileComponents()\r\n\r\n    fixture = TestBed.createComponent(LoginComponent)\r\n    fixture.detectChanges()\r\n  }))\r\n\r\n  it('submits the form succesfully', () => {\r\n    fixture.componentInstance.loginForm.patchValue({\r\n      phoneCountryCode: '+47',\r\n      phoneMobile: '91910101',\r\n      password: 'password'\r\n    })\r\n\r\n    const form = fixture.debugElement.query(By.css(`[data-testid=\"form\"]`))\r\n    form.triggerEventHandler('ngSubmit')\r\n\r\n    expect(fakeAuthService.loginAdminDashboard).toHaveBeenCalled()\r\n  })\r\n\r\n  it(`does not submit the form when it's not valid`, () => {\r\n    fixture.componentInstance.loginForm.patchValue({\r\n      phoneCountryCode: '+47',\r\n      phoneMobile: '',\r\n      password: ''\r\n    })\r\n\r\n    const form = fixture.debugElement.query(By.css(`[data-testid=\"form\"]`))\r\n    form.triggerEventHandler('ngSubmit')\r\n\r\n    expect(fakeAuthService.loginAdminDashboard).not.toHaveBeenCalled()\r\n  })\r\n})\r\n```","Url":"https://github.com/angular/angular-cli/issues/25885","RelatedDescription":"Open issue \"Karma/Jasmine tests don't run after upgrading from Angular 14 to 15\" (#25885)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1916547678","IsPullRequest":false,"CreatedAt":"2023-09-28T00:57:39","Actor":"albahrawy","Number":"27859","RawContent":null,"Title":"feat(MatDatePicker): adding ability to use flexable format","State":"open","Body":"### Feature Description\r\n\r\nI'm just wondering if we can add the feature of dateFormat to the datepicker\r\n\r\ndatepicker-input-base.ts\r\n\r\n```\r\n@Input displayFormat: string|undefined|null;\r\n@Input parseFormat: string|undefined|null;\r\n```\r\n\r\nand in the code:\r\n\r\n```\r\n  protected _formatValue(value: D | null) {\r\n  **const format = this.displayFormat ?? this._dateFormats.display.dateInput;**\r\n    this._elementRef.nativeElement.value =\r\n      value != null ? this._dateAdapter.format(value, **format**) : '';\r\n  }\r\n\r\n _onInput(value: string) {\r\n    const lastValueWasValid = this._lastValueValid;\r\n  **const format = this.parseFormat?? this._dateFormats.parse.dateInput;**\r\n    let date = this._dateAdapter.parse(value, **format** );\r\n// ... remaining code\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\nin this case we can alow different pasing/display format in the same app\r\nthe first input will use custom format and the second one use the default one.\r\nboth are in the same component\r\n```\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" displayFormat=\"DD/MM/YYYY\" parseFormat=\"DD/MM/YYYY\">\r\n  <mat-hint>DD/MM/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker1\">\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker1></mat-datepicker>\r\n</mat-form-field>\r\n```","Url":"https://github.com/angular/components/issues/27859","RelatedDescription":"Open issue \"feat(MatDatePicker): adding ability to use flexable format\" (#27859)"},{"Id":"1916031517","IsPullRequest":true,"CreatedAt":"2023-09-27T19:57:58","Actor":"mmalerba","Number":"27858","RawContent":null,"Title":"Bump version to \"v17.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27858","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.5\" with changelog.\" (#27858)"},{"Id":"1915993867","IsPullRequest":true,"CreatedAt":"2023-09-27T17:18:57","Actor":"mmalerba","Number":"27857","RawContent":null,"Title":"docs: release notes for the v16.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27857","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.6 release\" (#27857)"},{"Id":"1915991523","IsPullRequest":true,"CreatedAt":"2023-09-27T17:03:38","Actor":"mmalerba","Number":"27856","RawContent":null,"Title":"Bump version to \"v16.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27856","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.6\" with changelog.\" (#27856)"},{"Id":"1910375906","IsPullRequest":false,"CreatedAt":"2023-09-27T16:35:21","Actor":"stephanietuerk","Number":"27837","RawContent":null,"Title":"docs-bug(slider): Clarify doc description of ability for range sider thumbs to overlap","State":"closed","Body":"### Documentation Feedback\n\nThe Slider docs in the [Selecting a range](https://material.angular.io/components/slider/overview#selecting-a-range) section may benefit from some clarification. Currently the documentation states that:\r\n\r\n> Each of the thumbs has an independent value, but they won't be allowed to overlap\r\n\r\nbut very clearly the two thumbs in a range slider can be positioned to have the same value. \r\n\r\nI'm not sure what is intended by \"they won't be allowed to overlap,\" but to me this is confusing text given the behavior. \r\n\r\n![image](https://github.com/angular/components/assets/13357861/ba14791a-554f-493f-b06b-ea761f6c7005)\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/slider/overview#selecting-a-range","Url":"https://github.com/angular/components/issues/27837","RelatedDescription":"Closed issue \"docs-bug(slider): Clarify doc description of ability for range sider thumbs to overlap\" (#27837)"},{"Id":"1915480087","IsPullRequest":true,"CreatedAt":"2023-09-27T16:29:33","Actor":"allexgut","Number":"27854","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27854","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27854)"},{"Id":"1915561112","IsPullRequest":false,"CreatedAt":"2023-09-27T15:41:26","Actor":"magentaRE","Number":"27855","RawContent":null,"Title":"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.7 (non MDC-based components)\r\n\r\n### Description\r\n\r\nWhen tabbing onto a checkbox, no CSS classes from CDK directives get applied to a checkbox. https://material.angular.io/cdk/a11y/overview#cdkmonitorelementfocus-and-cdkmonitorsubtreefocus\r\n\r\nThis used to work natively without even setting `cdkMonitorElementFocus` directive onto a checkbox. CSS classes don't get applied even if you put `cdkMonitorElementFocus` on the element. This was not a problem in the old non-MDC components. Screenshot from my app, old non MDC-based components, Material version 14.x.x:\r\n\r\n![image](https://github.com/angular/components/assets/48152706/2c874ec4-530b-4afc-80d9-fb496f73af45)\r\n\r\nThis behavior works in `<mat-radio-button>`, you don't even have to set `cdkMonitorElementFocus` on the radio button. Those CSS classes get applied onto the focused radio button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: not needed\r\nSteps to reproduce:\r\n1. Go to [https://material.angular.io/components/checkbox/overview](https://material.angular.io/components/checkbox/overview)\r\n2. Observe any checkbox on the site in DevTools\r\n3. Tab onto that checkbox on the site with keyboard or any other way (programatically, mouse,...)\r\n4. `<mat-checkbox>` element should be getting `.cdk-focused` and `.cdk-${origin}-focused` CSS classes\r\n\r\n\r\n### Expected Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes should be applied onto checkbox when focused, clicked, etc.\r\n\r\n### Actual Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes are **NOT** getting applied onto checkbox when focused, clicked, etc.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.5\r\n- Browser(s): any (tried Chrome and Firefox)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): tried it on Windows, I don't know if it does work on others\r\n","Url":"https://github.com/angular/components/issues/27855","RelatedDescription":"Closed issue \"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus\" (#27855)"},{"Id":"1915452053","IsPullRequest":true,"CreatedAt":"2023-09-27T12:31:25","Actor":"allexgut","Number":"27853","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27853","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27853)"},{"Id":"1913654047","IsPullRequest":false,"CreatedAt":"2023-09-27T09:55:53","Actor":"Bernoulli-IT","Number":"27847","RawContent":null,"Title":"MatExpansionPanel: CSS class without mdc- prefix","State":"closed","Body":"### Description\r\n\r\nWhy is the \"older\" .mat-expansion-panel css class applied to a <mat-expansion-panel> component? This feels very inconsistent with all the updated css class names for other components. \r\n\r\n### Expected Behavior\r\n\r\n<mat-expansion-panel class=\"mat-mdc-expansion-panel mdc-expansion-panel></mat-expansion-panel>\r\n\r\n### Actual Behavior\r\n\r\n<mat-expansion-panel class=\"mat-expansion-panel></mat-expansion-panel>\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome, Firefox, Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Win10\r\n\r\n### Example\r\n![2023-09-27 08_11_12-DevTools - argaleo digitwin work_loggedout](https://github.com/angular/components/assets/9802752/a6e383c9-3188-453b-b25e-cb41543d65e5)\r\n\r\n👆🏼 looks very inconsistent:\r\n\r\n- MatCard\r\n  - mat-mdc-card & mdc-card \r\n\r\n- MatCardHeader\r\n  - mat-mdc-card-header\r\n\r\n- MatCardActions\r\n  - mat-mdc-card-actions & mdc-card__actions\r\n\r\nA mixture of mat-mdc-, mdc- and even some css class with a double underscore?\r\n\r\n","Url":"https://github.com/angular/components/issues/27847","RelatedDescription":"Closed issue \"MatExpansionPanel: CSS class without mdc- prefix\" (#27847)"},{"Id":"1913983601","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:47","Actor":"rockcoolt","Number":"27849","RawContent":null,"Title":"feat(Angular Material Design): Angular Material Design to Material 3","State":"closed","Body":"### Feature Description\n\nHello 👋🏾\r\nI'm sorry if my question has already been asked; I've been searching for a reliable answer for days. 😵‍💫\r\n\r\nIs there a plan to migrate the design of Angular Material to Material 3?\r\nIf not, I think I'll have to use the web version of Material 3, which is not well-suited for Angular.\r\n\r\nThank you for your answers 🙏🏾\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27849","RelatedDescription":"Closed issue \"feat(Angular Material Design): Angular Material Design to Material 3\" (#27849)"},{"Id":"1915092771","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:14","Actor":"StevenSwitten","Number":"27852","RawContent":null,"Title":"bug(menu): Focus lost when an input with a label is in a menu item","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've encountered this very weird bug where I have an input in a mat-menu-item. If the input has a label, and you type the first letter of that label in the input, the input loses focus.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-kjzj77?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Click the button to show the menu\r\n2. Type anything without the letter \"D\" -> it works fine.\r\n3. Type the letter \"D\" -> focus is lost\r\n\n\n### Expected Behavior\n\nFocus should not be lost\n\n### Actual Behavior\n\nFocus is lost\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows & Android\r\n","Url":"https://github.com/angular/components/issues/27852","RelatedDescription":"Closed issue \"bug(menu): Focus lost when an input with a label is in a menu item\" (#27852)"},{"Id":"1914805513","IsPullRequest":false,"CreatedAt":"2023-09-27T06:40:43","Actor":"shhdharmen","Number":"27851","RawContent":null,"Title":"bug(BUTTON): \"$line-height\" is not respected when provided in typography config","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf we create a custom typography config, and provide it in theme, `$line-height` value for `$button` is not respected from the config, instead `.mdc-button`'s `line-height` takes precedence. See below for example:\r\n\r\n```scss\r\n@use \"sass:map\";\r\n@use \"@angular/material\" as mat;\r\n\r\n$my-app-light-primary: mat.define-palette(mat.$indigo-palette);\r\n$my-app-light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-app-light-warn: mat.define-palette(mat.$red-palette);\r\n\r\n$regular-font-family: \"'Inter', sans-serif\";\r\n\r\n$my-app-typography: mat.define-typography-config(\r\n  $button: mat.define-typography-level($font-family: $regular-font-family, $font-size: 16px, $line-height: 2.5),\r\n);\r\n\r\n$my-app-light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $my-app-light-primary,\r\n      accent: $my-app-light-accent,\r\n      warn: $my-app-light-warn,\r\n    ),\r\n    typography: $my-app-typography,\r\n  )\r\n);\r\n\r\n@include mat.core();\r\n\r\n@include mat.core-theme($my-app-light-theme);\r\n@include mat.button-theme($my-app-light-theme);\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Inter', sans-serif;\r\n}\r\n```\r\n\r\n![Screenshot 2023-09-27 115600](https://github.com/angular/components/assets/6831283/6cec20f1-9bf8-45a4-a9a9-974d7bd32a0b)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-4udget?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Observe `styles.scss`\r\n2. Observe styles applied to button\r\n\n\n### Expected Behavior\n\nButton should have `line-height` give in typography config\n\n### Actual Behavior\n\nButton have `line-height` from `.mdc-button` class instead\n\n### Environment\n\n- Angular: 16.2.5\r\n- CDK/Material: 16.2.4\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27851","RelatedDescription":"Open issue \"bug(BUTTON): \"$line-height\" is not respected when provided in typography config\" (#27851)"},{"Id":"1909863502","IsPullRequest":false,"CreatedAt":"2023-09-26T21:19:26","Actor":"LanderBeeuwsaert","Number":"27834","RawContent":null,"Title":"bug(OVERLAY): Overlay scrollblock always adds a scrollbar even if there is no scrolling possible","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nMake sure that:\r\n- the browser tab is zoomed to more than 100%\r\n- you're on a page that doesn't have a vertical scrollbar\r\n\r\nactivate a CDK overlay, even the one serving as the mat-dialog background is good enough.\r\nthe page will now have a vertical scrollbar:\r\n<img width=\"1920\" alt=\"image\" src=\"https://github.com/angular/components/assets/1098243/6f5a134c-d433-4247-b166-ddef3e23fbd0\">\r\n\r\n\r\nOverriding \r\n<img width=\"263\" alt=\"image\" src=\"https://github.com/angular/components/assets/1098243/7caa5b3b-86d3-47ba-969f-92b250672735\">\r\ndoes the trick.\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo scrollbar if there is no scrollbar in the page.\r\n\r\n### Actual Behavior\r\n\r\nA scrollbar if there is no scrollbar in the page.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2\r\n- CDK/Material: 16.2 half MDC half not\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\r\n","Url":"https://github.com/angular/components/issues/27834","RelatedDescription":"Closed issue \"bug(OVERLAY): Overlay scrollblock always adds a scrollbar even if there is no scrolling possible\" (#27834)"},{"Id":"1912374790","IsPullRequest":true,"CreatedAt":"2023-09-26T20:20:58","Actor":"stephanietuerk","Number":"27846","RawContent":null,"Title":"docs(material/slider): clarify behavior of slider range thumbs","State":"closed","Body":"Clarifies possible behavior/values of matStartThumb and matEndThumb in slider component 'Selecting a range' documentation.\r\n\r\nAddresses #27837","Url":"https://github.com/angular/components/pull/27846","RelatedDescription":"Closed or merged PR \"docs(material/slider): clarify behavior of slider range thumbs\" (#27846)"},{"Id":"1914080598","IsPullRequest":true,"CreatedAt":"2023-09-26T18:33:50","Actor":"zarend","Number":"27850","RawContent":null,"Title":"remove subscription for expandAll and collapseAll","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27850","RelatedDescription":"Open PR \"remove subscription for expandAll and collapseAll\" (#27850)"},{"Id":"1913743732","IsPullRequest":false,"CreatedAt":"2023-09-26T15:13:01","Actor":"intellix","Number":"27848","RawContent":null,"Title":"feat(Sidenav): Support hydration","State":"open","Body":"### Feature Description\r\n\r\nSidenav and various other components should support Clientside Hydration. When I deliver the initial HTML from the server, the client should be able to hydrate my entire site without having a flash of replaced and recreated content.\r\n\r\nI've been fighting with enabling it and then started to investigate why 2x components are skipping hydration. I thought that it was strange because I never explicitly added it and now that I can see that it was 100% disabled for anything inside a Sidenav: https://github.com/angular/components/commit/1a6f924e2da852be6bd78445f43bac0275264b6e\r\n\r\nThe whole application exists within a Sidenav but Material completely disables it (I assume due to direct DOM manipulation). It would be great if material didn't disable hydration, so we can improve UX and SEO with better lighthouse scores.\r\n\r\n### Use Case\r\n\r\nIt would allow Material based websites to not suffer from poor lighthouse scores and flashing pages. ","Url":"https://github.com/angular/components/issues/27848","RelatedDescription":"Open issue \"feat(Sidenav): Support hydration\" (#27848)"},{"Id":"1909468822","IsPullRequest":false,"CreatedAt":"2023-09-25T20:26:45","Actor":"emilyzhang242","Number":"27831","RawContent":null,"Title":"bug(Autocomplete): Flickering/reappearing dropdown menu ","State":"closed","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nUsing the legacy autocomplete component. We migrated to MDC. \n\n### Description\n\nWhen you select an option in the matAutocomplete menu, the option dropdown flickers/flashes briefly. You can see this in any of the examples on the material angular page.\r\n\r\nhttps://material.angular.io/components/autocomplete/examples\r\n\r\nThis is problematic because when I try to reopen the matAutocomplete panel using `requestAnimationFrame`, the old panel still exists and it pushes the new panel to the side for a brief moment while it reappears, causing really strange flickering behavior.\n\n### Reproduction\n\nN/A\n\n### Expected Behavior\n\nThe dropdown should not flicker/reappear and should just vanish when an option is selected.\n\n### Actual Behavior\n\nThe dropdown disappears and then reappears very briefly after selecting an option.\n\n### Environment\n\n- Angular: 2 \r\n- CDK/Material: Material\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27831","RelatedDescription":"Closed issue \"bug(Autocomplete): Flickering/reappearing dropdown menu \" (#27831)"},{"Id":"1911724682","IsPullRequest":false,"CreatedAt":"2023-09-25T20:14:39","Actor":"nbianka99","Number":"27842","RawContent":null,"Title":"bug(mat.core()): Undeclared mixin","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI want to make a custom theme for my Angular Project and I receive the 'Undeclared mixin' error even though I insert the following line at the top of my theme file: @use '@angular/material' as mat;\r\nWhen I try to @include mat.core(); I receive this error.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create a .scss file \r\n2. Add the following code to it:\r\n`@use '@angular/material' as mat;\r\n\r\n@include mat.core();\r\n\r\n$my-primary: mat.define-palette(mat.$indigo-palette, 500);\r\n$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-theme: mat.define-light-theme((\r\n color: (\r\n   primary: $my-primary,\r\n   accent: $my-accent,\r\n ),\r\n typography: mat.define-typography-config(),\r\n density: 0,\r\n));\r\n\r\n@include mat.all-component-themes($my-theme);`\r\n4. \r\n\n\n### Expected Behavior\n\nIt should not throw an error\n\n### Actual Behavior\n\nIt throws an error\n\n### Environment\n\n- Angular:  16.2.3\r\n- CDK/Material: 16.2.5\r\n- Browser(s): Chrome/Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/27842","RelatedDescription":"Closed issue \"bug(mat.core()): Undeclared mixin\" (#27842)"},{"Id":"1911981696","IsPullRequest":false,"CreatedAt":"2023-09-25T17:23:00","Actor":"stnor","Number":"27845","RawContent":null,"Title":"MatFormField (outline) label cut off in MatDialog","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nforms\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen setting theme density to -1 and using `<mat-form-field>` with appearance: 'outline' the top of the form field gets cut off in a MatDialog unless using the following rule as a global style:\r\n```\r\n  .mat-mdc-dialog-content > mat-form-field {\r\n    margin-top: 4px !important;\r\n  }\r\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/components/issues/27845","RelatedDescription":"Open issue \"MatFormField (outline) label cut off in MatDialog\" (#27845)"},{"Id":"1911852979","IsPullRequest":false,"CreatedAt":"2023-09-25T16:11:06","Actor":"raphael22","Number":"27844","RawContent":null,"Title":"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS","State":"open","Body":"### Feature Description\n\nAdd a token to allow default options for mat-badge.\n\n### Use Case\n\nAlignment with other DEFAULT_OPTIONS token.","Url":"https://github.com/angular/components/issues/27844","RelatedDescription":"Open issue \"feat(BADGE): add MAT_BADGE_DEFAULT_OPTIONS\" (#27844)"},{"Id":"1911826099","IsPullRequest":false,"CreatedAt":"2023-09-25T15:56:01","Actor":"Simona25","Number":"27843","RawContent":null,"Title":"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nPreviously the mat-tab-nav-bar tabs could be activated both with space and enter, while now the space key still works but the enter doesn't trigger the action anymore. \n\n### Reproduction\n\nLink:  https://material.angular.io/components/tabs/examples official material example (Basic tab nav bar)\r\nSteps to reproduce:\r\n1. Use the keyboard to move the focus inside the tab nav bar,\r\n2. Pressing Enter nothing happen,\r\n3. Pressing the Space the tab is correctly activated.\r\n\n\n### Expected Behavior\n\nPressing Enter the tab should be activated like when using hte Space.\n\n### Actual Behavior\n\nPressing Space works, while pressing Enter doesn't and the tab link isn't activated.\n\n### Environment\n\n- Angular: 16.2.5 (but also on the 15.2.5 for example)\r\n- CDK/Material:  16.2.5 (but also on the 15.2.5 for example)\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27843","RelatedDescription":"Open issue \"bug(tabs): mat-tab-nav-bar tab working with space but not with enter key\" (#27843)"},{"Id":"1911717338","IsPullRequest":false,"CreatedAt":"2023-09-25T15:04:22","Actor":"PatnamBalaji","Number":"27841","RawContent":null,"Title":"MatDialog: When using in dynamically loaded component using module federation throws error No provider for MatDialogRef","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\n**test.component.ts**\r\n```\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-test-dialog',\r\n  template: `<h1>Hello world</h1>`,\r\n})\r\nexport class TestDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TestDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    // console.log(this.data)\r\n  }\r\n}\r\n```\r\n\r\n**webpack.config.ts**\r\n```\r\nplugins: [\r\n    new ModuleFederationPlugin({\r\n      name: 'test',\r\n      library: { type: 'var', name: 'test' },\r\n      filename: 'remoteEntry.js',\r\n      exposes: {\r\n        TestModule: './src/app/feature/test/test.module.ts',\r\n        TestDialogComponent: './src/app/feature/test-dialog/test-dialog.component.ts',\r\n      },\r\n})\r\n```\r\n\r\n\r\n**app.component.ts**\r\n```\r\nconst { TestDialogComponent } = await loadRemoteModule({\r\n      remoteName: 'test',\r\n      remoteEntry: 'http://localhost:4200/remoteEntry.js',\r\n      exposedModule: 'TestModule',\r\n    });\r\n    this.dialog.open(TestDialogComponent, {\r\n      width: '80%',\r\n      data: {\r\n        person: {\r\n          name: 'Simon',\r\n          age: 32,\r\n        },\r\n      },\r\n    });\r\n```\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Create any dialog component and inject (MatDialogRef/MAT_DIALOG_DATA)\r\n2. Expose the component in the webpack.config.ts file\r\n3. Install loadRemoteModule package\r\n4. Load the remoteEntry url and open component using mat-dialog\r\n\r\n\r\n### Expected Behavior\r\n\r\nIt should work without throwing any error.\r\n\r\n\r\n\r\n### Actual Behavior\r\n\r\nThrows below error:\r\n\r\n```\r\nvendor.js:115817 ERROR Error: Uncaught (in promise): NullInjectorError: R3InjectorError(AppModule)[MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef]: \r\n  NullInjectorError: No provider for MatDialogRef!\r\nNullInjectorError: R3InjectorError(AppModule)[MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef -> MatDialogRef]: \r\n  NullInjectorError: No provider for MatDialogRef!\r\n    at NullInjector.get (vendor.js:119280:27)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at R3Injector.get (vendor.js:119447:33)\r\n    at NgModuleRef$1.get (vendor.js:133512:33)\r\n    at Object.get (vendor.js:133226:35)\r\n    at resolvePromise (polyfills.js:212556:31)\r\n    at polyfills.js:212463:17\r\n    at polyfills.js:212479:33\r\n    at asyncGeneratorStep (src_app_feature_app_module_ts-_7c230.js:5645:5)\r\n    at _next (src_app_feature_app_module_ts-_7c230.js:5664:9)\r\n    at _ZoneDelegate.invoke (polyfills.js:211717:26)\r\n    at Object.onInvoke (vendor.js:136853:33)\r\n    at _ZoneDelegate.invoke (polyfills.js:211716:52)\r\n    at Zone.run (polyfills.js:211479:43)\r\n    at polyfills.js:212620:36\r\n```\r\n\r\n### Environment\r\n\r\n- Angular: 12.2.0\r\n- CDK/Material:12.2.0\r\n- Browser(s):Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):Windows & Chrome\r\n","Url":"https://github.com/angular/components/issues/27841","RelatedDescription":"Open issue \"MatDialog: When using in dynamically loaded component using module federation throws error No provider for MatDialogRef\" (#27841)"},{"Id":"1911522085","IsPullRequest":false,"CreatedAt":"2023-09-25T13:31:41","Actor":"ilyakonrad","Number":"27840","RawContent":null,"Title":"feat(theming): Provide reasonable theme defaults if no themes are included","State":"open","Body":"### Feature Description\n\nI'm working on upgrading to version 15 and after running the migration and starting to investigate the changes required, I noticed that if you don't define a custom theme or import a default one, components' styles will be broken.\r\n\r\nWhen I went with a default theme, I wanted to fix some structural strangeness like this:\r\n<img width=\"294\" alt=\"image\" src=\"https://github.com/angular/components/assets/25200186/0013e819-d5f8-471f-8208-803cc9e51568\">\r\nThen I noticed that this and other structural styles (like paddings etc...) are defined in a theme file instead of being a part of the core.\r\n\r\nWhy? Aren't they supposed to be the same? Shouldn't theme be about color and typography?\r\nAm I missing the density here? But even if so, why not have a default styles that can **optionally** be overwritten by applying a theme?\n\n### Use Case\n\nIncluding (at least) structural styles into the core styles imo would make it clearer and easier to start using the library, since you wouldn't have to learn about the theming (you gotta admit, it's confusing). Also it feels less of a hack to overwrite library's CSS from one source than multiple.","Url":"https://github.com/angular/components/issues/27840","RelatedDescription":"Open issue \"feat(theming): Provide reasonable theme defaults if no themes are included\" (#27840)"},{"Id":"1909491704","IsPullRequest":false,"CreatedAt":"2023-09-25T11:33:15","Actor":"varzaman","Number":"27832","RawContent":null,"Title":"bug(CdkMenu): Context Menu closes after opening when using ctrl+ left click in Safari","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using Safari, the CDK Menu upon being triggered with control + left click opens, and then automatically closes on mouse up.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-kxocsn?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the StackBlitz link in Safari \r\n2. Right click in the application screen. A context menu will show up. Close it. (This is just to verify you get the context menu).\r\n3. Open up the context menu using ctrl + left click.\r\n4. Observe the behavior.\r\n\n\n### Expected Behavior\n\n- Context Menu opens up the same way as using right click. \r\n- Context Menu gets dismissed when the context menu is clicked off of.\n\n### Actual Behavior\n\n- Context Menu opens, and automatically closes on mouse up\n\n### Environment\n\n- Angular: 16.2.2\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Safari 16.6\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MAC OS Ventura 13.5.2\r\n","Url":"https://github.com/angular/components/issues/27832","RelatedDescription":"Closed issue \"bug(CdkMenu): Context Menu closes after opening when using ctrl+ left click in Safari\" (#27832)"},{"Id":"1910841615","IsPullRequest":true,"CreatedAt":"2023-09-25T11:33:14","Actor":"crisbeto","Number":"27838","RawContent":null,"Title":"fix(cdk/menu): context menu closing immediately on control + click on Safari","State":"closed","Body":"Works around a browser inconsistency that was causing the context menu to close immediately when it is opened with control + left click on Safari.\r\n\r\nFixes #27832.","Url":"https://github.com/angular/components/pull/27838","RelatedDescription":"Closed or merged PR \"fix(cdk/menu): context menu closing immediately on control + click on Safari\" (#27838)"},{"Id":"1911141517","IsPullRequest":false,"CreatedAt":"2023-09-25T10:08:28","Actor":"poveu","Number":"27839","RawContent":null,"Title":"bug(material/chip): textContent of any HTML element inside mat-chip-row is being appended to FormControl value on focus out (blur) event","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nWhen there is any HTML element inside `<mat-chip-row>`, or even just the matChipRemove button is wrapped inside some `<ng-container>` (like with `*ngIf`, checking if the user has the privilege to delete), then the whole chip-row's value contains this element's textContent (button with `<mat-icon>cancel</mat-icon>` in this case) after focusing out of the component.\r\n\r\nSo for example, value `[\"Apple\"]` becomes `[\"Apple cancel\"]` (because `cancel` is part of `<mat-icon>`'s textContent).\r\n\r\n```\r\n<mat-chip-row *ngFor=\"let fruit of formControl.value\">\r\n  {{ fruit }}\r\n  <ng-container *ngIf=\"true\">\r\n    <button matChipRemove>\r\n      <mat-icon>cancel</mat-icon>\r\n    </button>\r\n  </ng-container>\r\n</mat-chip-row>\r\n```\r\n\r\n(when `matChipRemove` button is not wrapped inside `<ng-container>` or any other HTML element then its textContent is being ignored, which, I guess, is correct behavior)\r\n\r\n### Reproduction\r\n\r\nStackBlitz link:\r\nhttps://stackblitz.com/edit/ovb2sn-s41kjs?file=src%2Fapp%2Fchips-autocomplete-example.html,src%2Fapp%2Fchips-autocomplete-example.ts\r\n\r\nSteps to reproduce:\r\nClick on the text input and then focus it out.\r\nThis will run Material's blur/focusOut code and update the form control value with the chips' textContent which becomes `[\"Apple cancel\"]`.\r\nMore focus in/out clicks will keep appending ` cancel` to the form control's value.\r\n\r\n### Expected Behavior\r\n\r\nNot appending HTML elements' textContent to chip's form control value\r\n\r\n### Actual Behavior\r\n\r\nHTML element's textContent is being appended to chip's form control value\r\n\r\n### Environment\r\n\r\n- Angular: 15+\r\n- CDK/Material: 15+\r\n- Browser(s): Any browser\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Any OS\r\n","Url":"https://github.com/angular/components/issues/27839","RelatedDescription":"Open issue \"bug(material/chip): textContent of any HTML element inside mat-chip-row is being appended to FormControl value on focus out (blur) event\" (#27839)"},{"Id":"1910137335","IsPullRequest":true,"CreatedAt":"2023-09-25T07:20:32","Actor":"crisbeto","Number":"27836","RawContent":null,"Title":"build: update to latest version of Sass","State":"closed","Body":"Updates the repo to the latest version of Sass since we had fallen behind a bit.","Url":"https://github.com/angular/components/pull/27836","RelatedDescription":"Closed or merged PR \"build: update to latest version of Sass\" (#27836)"},{"Id":"1909774757","IsPullRequest":true,"CreatedAt":"2023-09-24T17:23:19","Actor":"crisbeto","Number":"27833","RawContent":null,"Title":"build: replace custom lint rule with compiler option","State":"closed","Body":"We currently have a lint rule that prevents dotted access in `SimpleChanges` objects, because it will break with property minification. These changes replace the rule with the built-in `noPropertyAccessFromIndexSignature` compiler option which has the same effect with the added benefit of aligning us closer with g3 and reducing the amount of code we need to maintain.","Url":"https://github.com/angular/components/pull/27833","RelatedDescription":"Closed or merged PR \"build: replace custom lint rule with compiler option\" (#27833)"},{"Id":"1910025897","IsPullRequest":true,"CreatedAt":"2023-09-23T22:56:52","Actor":"wartab","Number":"27835","RawContent":null,"Title":"feat(material/core): improve date parsing in the NativeDateAdapter","State":"open","Body":"Improve date parsing by taking the supplied locale into account for date component ordering and inferring current year if it hasn't been supplied.\r\n\r\nThis partially addresses the issue https://github.com/angular/components/issues/27412 and should make the NativeDateAdapter become significantly more useful, especially for non English locales.\r\n\r\nThis also addresses things discussed in (mainly that it was too complicated):\r\nhttps://github.com/angular/components/pull/27495","Url":"https://github.com/angular/components/pull/27835","RelatedDescription":"Open PR \"feat(material/core): improve date parsing in the NativeDateAdapter\" (#27835)"},{"Id":"1908923224","IsPullRequest":true,"CreatedAt":"2023-09-22T13:34:18","Actor":"amysorto","Number":"27830","RawContent":null,"Title":"fix(material/dialog): Emit tokens under mixin root selector","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27830","RelatedDescription":"Open PR \"fix(material/dialog): Emit tokens under mixin root selector\" (#27830)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-28T03:30:02.745834Z","RunDurationInMilliseconds":1851}