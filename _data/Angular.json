{"Data":{"Angular-Issues":{"Issues":[{"Id":"2068945097","IsPullRequest":true,"CreatedAt":"2024-01-07T03:12:41","Actor":"NathanLaing","Number":"53820","RawContent":null,"Title":"docs(docs-infra): amend instructions for deploying to github pages wi…","State":"open","Body":"…th v17\r\n\r\nThe V17 CLI outputs built files under a `browser` subdirectory. The content deployment guide advises to point the GitHub pages source to `docs` however the content is now nested under `docs/browser`. This commit adjusts the relevant references of `docs/*` to `docs/browser/*`\r\n\r\nFixes #53664\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #53664 \r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53820","RelatedDescription":"Open PR \"docs(docs-infra): amend instructions for deploying to github pages wi…\" (#53820)"},{"Id":"2068930827","IsPullRequest":true,"CreatedAt":"2024-01-07T02:02:27","Actor":"Ahmed-Hakeem","Number":"53819","RawContent":null,"Title":"docs: show the difference between pseudo classes angular uses and nat…","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/53819","RelatedDescription":"Open PR \"docs: show the difference between pseudo classes angular uses and nat…\" (#53819)"},{"Id":"2068839277","IsPullRequest":false,"CreatedAt":"2024-01-06T21:41:50","Actor":"Abodawoud","Number":"53818","RawContent":null,"Title":"angular.dev documentation has wrong sentence","State":"closed","Body":"### Describe the problem that you experienced\n\n### I found in the documentation a _wrong sentence_ at the end of the [if-block](https://angular.dev/essentials/conditionals-and-loops#if-block) section \r\n\r\n![image](https://github.com/angular/angular/assets/109487123/f19ce507-9a80-402b-8dec-24624ac15178)\r\n\r\nIt said:\r\nIn this example, Angular only renders the `<section>` element if the `isAdmin` property is true. Otherwise, it does not appear page.\r\n\r\n**The sentence is wrong as it should be `<button>` element  instead of `<section>` element** \r\n\r\n\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/essentials/conditionals-and-loops#if-block\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53818","RelatedDescription":"Closed issue \"angular.dev documentation has wrong sentence\" (#53818)"},{"Id":"2068751012","IsPullRequest":true,"CreatedAt":"2024-01-06T17:59:23","Actor":"zlatanov","Number":"53817","RawContent":null,"Title":"refactor(router): in RouterLink, urlTree is created every time we access it, so when used we should read it only once.","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nWhen accessing the `urlTree` property from RouterLink we end up creating a new instance. There are methods where the urlTree is read more than once, but is not expected to have changed.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWhen the `urlTree` needs to be used more than once in a given function, a local const variable is used so we read it only once.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53817","RelatedDescription":"Open PR \"refactor(router): in RouterLink, urlTree is created every time we access it, so when used we should read it only once.\" (#53817)"},{"Id":"2068567949","IsPullRequest":true,"CreatedAt":"2024-01-06T11:45:41","Actor":"macvag","Number":"53816","RawContent":null,"Title":"docs: fix broken hyperlink in tutorials first app search","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nNow in the [https://angular.dev/tutorials/first-app/search ](https://angular.dev/tutorials/first-app/search)there is a broken hyperlink\r\nThis example uses a [template reference variable](https://angular.dev/guide/templatess) to get access to the input element as its value.\r\n\r\nIssue Number: #53757\r\n\r\n## What is the new behavior?\r\nFixed the broken link to redirect correctly to [template reference variable](https://angular.dev/guide/templates)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53816","RelatedDescription":"Open PR \"docs: fix broken hyperlink in tutorials first app search\" (#53816)"},{"Id":"2068567183","IsPullRequest":true,"CreatedAt":"2024-01-06T11:42:57","Actor":"jsaguet","Number":"53815","RawContent":null,"Title":"feat(http): expose transferStateInterceptorFn in public api","State":"open","Body":"Expose `transferStateInterceptorFn` in public api so that developers can use it where best suited in the interceptor chain. This is useful when different urls are used to access the same APIs between server and browser. By placing the interceptor before requests urls become different, the cached request can be reused on the client.\r\n\r\nNote on usage: `provideClientHydration` should be called with `withNoTransferCache` to disable the default cache interceptor which is the last one executed.\r\n\r\nFixes #53702\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrently, it is not possible to use http transfer cache when urls used to access the different APIs differ between calls made from the server and the browser.\r\n\r\nThis is a common use case when server side rendering happens in a private network in large companies.\r\nIt is mainly done to reduce latency, avoiding network proxies and even SSL handshakes when using HTTP in the private network.\r\n\r\nSince the `transferCacheInterceptorFn` is always the last executed interceptor, urls will be different and therefore not reused on the client.\r\n\r\nIssue Number: #53702\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThis PR exposes the `transferCacheInterceptorFn` in the public API so that developers can provide it manually in `provideHttpClient()` to be able to solve their specific use cases.\r\n\r\nBy placing `transferCacheInterceptorFn`at the right place in the interceptor chain (e.g. before server & browser urls differ), developers can make sure that the requests will be reused on the client during hydration.\r\n\r\nThe behavior of `provideClientHydration()` is kept exactly the same (disabling http transfer cache with `withNoHttpTransferCache()` and using global options with `withHttpTransferCacheOptions()`.\r\n\r\nThe idea is that good defaults are applied for classic use cases while providing some flexibility for more complex cases.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n\r\n## Other information\r\n\r\nI would like for this PR to serve as discussion regarding the best option to solve use cases mentionned in #53702 \r\n","Url":"https://github.com/angular/angular/pull/53815","RelatedDescription":"Open PR \"feat(http): expose transferStateInterceptorFn in public api\" (#53815)"},{"Id":"2068542626","IsPullRequest":true,"CreatedAt":"2024-01-06T11:34:07","Actor":"macvag","Number":"53814","RawContent":null,"Title":"docs: fix broken hyperlink in tutorials first app search","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nNow in the [ https://angular.dev/tutorials/first-app/search ]( https://angular.dev/tutorials/first-app/search ) there is a broken hyperlink \r\nThis example uses a [template reference variable](https://angular.dev/guide/templatess) to get access to the input element as its value.\r\n\r\nIssue Number: #53757\r\n\r\n## What is the new behavior?\r\nFixed the broken link to redirect correctly to  [template reference variable](https://angular.dev/guide/templates)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53814","RelatedDescription":"Closed or merged PR \"docs: fix broken hyperlink in tutorials first app search\" (#53814)"},{"Id":"2068338876","IsPullRequest":false,"CreatedAt":"2024-01-06T03:35:19","Actor":"chucknelson","Number":"53813","RawContent":null,"Title":"ISO week-numbering year incorrect for some years","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nWhen using the ISO week-numbering year format in a date pipe (e.g., 'YYYY' format string), for some years it seems to calculate incorrectly versus other common date libraries and other external sources like various calculators on the web.\r\n\r\nBelow is a quick summary looking at the calendar year and ISO week-numbering years as calculated by different implementations for December 31st (one of the days where the ISO week-number year often differs from the calendar year). The yellow rows are examples of years where the date pipe seems to be incorrect.\r\n\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/angular/angular/assets/110720/1c339380-25c3-441b-ac94-de815367c919\">\r\n\r\nThis was sanity checked against independent sources on the web, such as:\r\n* https://myweb.ecu.edu/mccartyr/isowdcal.html\r\n* https://planetcalc.com/8540/?week=1&day=1&year=2024&date=2023-12-31%2000%3A00%3A00\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-tdkfa6?file=src%2Fmain.ts\r\n\r\n> Note that the reproduction uses the most current versions of packages at this time, including Angular 17.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nSee description for examples of the issue.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 15.2.10\r\nNode: 16.20.2\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.10\r\n... animations, cli, common, compiler, compiler-cli, core\r\n... elements, forms, localize, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.10\r\n@angular-devkit/build-angular   15.2.10\r\n@angular-devkit/core            15.2.10\r\n@angular-devkit/schematics      13.3.11\r\n@schematics/angular             15.2.10\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nVersions of other date libraries:\r\n* date-fns@2.29.3\r\n* luxon@3.4.4\r\n\r\nAs noted above, the reproduction in StackBlitz uses the most current versions of packages at this time, including Angular 17.\r\n","Url":"https://github.com/angular/angular/issues/53813","RelatedDescription":"Open issue \"ISO week-numbering year incorrect for some years\" (#53813)"},{"Id":"2067344736","IsPullRequest":false,"CreatedAt":"2024-01-05T23:07:22","Actor":"andresmq","Number":"53809","RawContent":null,"Title":"Conflicting paragraph in `Component host elements` doc page","State":"closed","Body":"### Describe the problem that you experienced\n\nIn this page there is the following parapraph:\r\n\r\n> Always prefer using the host property over [@HostBinding](https://angular.dev/api/core/HostBinding) and [@HostListener](https://angular.dev/api/core/HostListener). These decorators exist exclusively for backwards compatibility.\r\n\r\nOn the other hand, in the [Angular coding style guide](https://angular.io/guide/styleguide#hostlistenerhostbinding-decorators-versus-host-metadata) (Style 06-03) we found this:\r\n\r\n> Consider preferring the @[HostListener](https://angular.io/api/core/HostListener) and @[HostBinding](https://angular.io/api/core/HostBinding) to the host property of the @[Directive](https://angular.io/api/core/Directive) and @[Component](https://angular.io/api/core/Component) decorators.\r\n\r\nWhich one is the correct?\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/guide/components/host-elements#the-hostbinding-and-hostlistener-decorators\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/53809","RelatedDescription":"Closed issue \"Conflicting paragraph in `Component host elements` doc page\" (#53809)"},{"Id":"2068111884","IsPullRequest":true,"CreatedAt":"2024-01-05T22:16:21","Actor":"atscott","Number":"53812","RawContent":null,"Title":"refactor(core): node removal should notify the scheduler","State":"open","Body":"This commit ensures that change detection runs when an `LView` is removed. Change detection is required because DOM nodes aren't actually removed until the animation engine flushes and this doesn't happen until the end of `detectChangesInternal` (`rendererFactory.end`).","Url":"https://github.com/angular/angular/pull/53812","RelatedDescription":"Open PR \"refactor(core): node removal should notify the scheduler\" (#53812)"},{"Id":"2067216177","IsPullRequest":false,"CreatedAt":"2024-01-05T19:04:47","Actor":"andresmq","Number":"53807","RawContent":null,"Title":"Broken link in the roadmap page","State":"closed","Body":"### Describe the problem that you experienced\r\n\r\nThe following link is present in the roadmap page (https://angular.dev/roadmap) but it doesn't work: [Try out Inject](https://angular.dev/di)\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/roadmap\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nNothing special, just reading the readmap\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\n_No response_\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53807","RelatedDescription":"Closed issue \"Broken link in the roadmap page\" (#53807)"},{"Id":"2067779303","IsPullRequest":true,"CreatedAt":"2024-01-05T17:44:37","Actor":"kabrunko-dev","Number":"53811","RawContent":null,"Title":"docs(docs-infra): sort api reference children's children navigation items","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSort [API Reference](https://angular.dev/api) navigation items children label (e.g. [\"AnimationEvent\"](https://angular.dev/api/animations/AnimationEvent) and [\"NoopAnimationPlayer\"](https://angular.dev/api/animations/NoopAnimationPlayer)) with a similar sort compare callback function used in API Reference page overview (source at file `adev/src/app/features/references/api-reference-list/api-reference-manager.service.ts`.\r\n\r\n![screenshot (1)](https://github.com/angular/angular/assets/142346548/984f30b1-dcf1-4112-b16c-c2b924e05230)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n","Url":"https://github.com/angular/angular/pull/53811","RelatedDescription":"Open PR \"docs(docs-infra): sort api reference children's children navigation items\" (#53811)"},{"Id":"2066885661","IsPullRequest":false,"CreatedAt":"2024-01-05T15:25:33","Actor":"inmativ","Number":"53804","RawContent":null,"Title":"Signal components: Why call the constructor before the required inputs and static child queries are ready?","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nI'm late to the discussion on signal components, which was done at this link: https://github.com/angular/angular/discussions/49682\r\nHowever, I would like to offer my thoughts for your consideration.\r\n\r\nA recurring problem for me is the optionality of fields. I always use the strictPropertyInitialization flag. Therefore, in ngOnInit you have to either check for the presence of inputs, or suppress typing using the definite assignment assertion operator (prop!: Type). It's messy and sometimes unsafe.\r\n\r\nSignal components may or may not solve this problem. If we initialize mandatory inputs with \"type | undefined\", then this is no different from the previous approach. We will still have to have multiple checks to exclude undefined from the type.\n\n### Proposed solution\n\nBut what if we wait for mandatory inputs, as well as for static viewChild, until the initial values ​​for them are passed and only then call the constructor?\n\n### Alternatives considered\n\nAs I understand it, my proposal is late. Probably, development is already underway in a different direction. In this case, the issue should be closed or marked as a question.","Url":"https://github.com/angular/angular/issues/53804","RelatedDescription":"Closed issue \"Signal components: Why call the constructor before the required inputs and static child queries are ready?\" (#53804)"},{"Id":"2067496165","IsPullRequest":false,"CreatedAt":"2024-01-05T15:02:48","Actor":"hittten","Number":"53810","RawContent":null,"Title":"Angular 17 with SSR injection server response is null, when you use response.status. ERROR: Cannot read properties of null (reading 'status')","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-server, Don't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIndeed, several things about SSR need to be documented, for example since the move from @nguniversal/express-engine to @angular/ssr the express tokens were lost:\r\n\r\nhttps://github.com/angular/universal/blob/e798d256de5e4377b704e63d993dc56ea35df97d/modules/express-engine/tokens/injection-tokens.ts\r\n\r\nI had to search the internet for a while to understand that I had to add the \"src/express.tokens.ts\" file now because it no longer comes in the @angular/ssr package and that's what I did\r\n\r\nI have published a repo with the minimum to recreate the SSR problem with angular 17: https://github.com/hittten/angularSSR17\r\n\r\n## Clone & Setup:\r\n```bash \r\ngit clone https://github.com/hittten/angularSSR17\r\nnpm install\r\nnpm start\r\n```\r\n\r\n## Log\r\nNavigate to http://localhost:4200/404\r\n```\r\nERROR TypeError: Cannot read properties of null (reading 'status')\r\n    at _NotFoundPageComponent (/Workspace/hittten/angularSSR17/src/app/pages/not-found-page/not-found-page.component.ts:17:21)\r\n```\r\n\r\n## Angular 16 code (working):\r\n```typescript\r\nimport {RESPONSE} from \"@nguniversal/express-engine/tokens\";\r\nimport {Response} from \"express\";\r\n\r\nconstructor(\r\n    @Optional() @Inject(RESPONSE) private response: Response,\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n  ) {\r\n    if (isPlatformServer(this.platformId)) {\r\n      this.response.status(404)\r\n    } else {\r\n      console.error(`response status code 404`)\r\n    }\r\n  }\r\n```\r\n\r\n## Angular 17 code (not working):\r\n```typescript\r\nimport { InjectionToken } from '@angular/core';\r\nimport { Request, Response } from 'express';\r\n\r\nconst REQUEST = new InjectionToken<Request>('REQUEST');\r\nconst RESPONSE = new InjectionToken<Response>('RESPONSE');\r\n\r\nconstructor(\r\n    @Optional() @Inject(RESPONSE) private response: Response,\r\n    @Inject(PLATFORM_ID) private platformId: object,\r\n  ) {\r\n    if (isPlatformServer(this.platformId)) {\r\n      this.response.status(404)\r\n    } else {\r\n      console.error(`response status code 404`)\r\n    }\r\n  }\r\n```\r\n\r\n## Info\r\nbasically I have created a project like this:\r\n\r\n```bash\r\nnpx @angular/cli@17.0.8 new angularSSR17 --ssr --routing --scss --skip-tests\r\ncd angularSSR17\r\nnpm i -D firebase-tools@13.0.2\r\nng g c pages/homePage\r\nng g c pages/aboutPage\r\nng g c pages/notFoundPage\r\n```\r\nI also disable pre-render in angular.json:\r\n\r\n```json\r\n{\r\n    \"scripts\": [],\r\n    \"server\": \"src/main.server.ts\",\r\n    \"prerender\": false,\r\n    \"ssr\": {\r\n      \"entry\": \"server.ts\"\r\n    }\r\n}\r\n```\r\n\r\nand I have done the settings of the routes for lazy load. I have not installed @angular/fire because it is not necessary to recreate the SSR error.\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/hittten/angularSSR17\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.8\r\nNode: 20.10.0\r\nPackage Manager: npm 10.2.5\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\nI also intent to provide express tokens in /server.ts: `provide: REQUEST, useValue: req }, { provide: RESPONSE, useValue: res },` which is not necessary to do in angular 16, but it doesn't work either.\r\n\r\n```typescript\r\n  server.get('*', (req, res, next) => {\r\n    const { protocol, originalUrl, baseUrl, headers } = req;\r\n\r\n    commonEngine\r\n      .render({\r\n        bootstrap,\r\n        documentFilePath: indexHtml,\r\n        url: `${protocol}://${headers.host}${originalUrl}`,\r\n        publicPath: browserDistFolder,\r\n        providers: [\r\n          { provide: APP_BASE_HREF, useValue: baseUrl },\r\n          { provide: REQUEST, useValue: req },\r\n          { provide: RESPONSE, useValue: res },\r\n        ],\r\n      })\r\n      .then((html) => res.send(html))\r\n      .catch((err) => next(err));\r\n  });\r\n\r\n```\r\n","Url":"https://github.com/angular/angular/issues/53810","RelatedDescription":"Closed issue \"Angular 17 with SSR injection server response is null, when you use response.status. ERROR: Cannot read properties of null (reading 'status')\" (#53810)"},{"Id":"2067340947","IsPullRequest":true,"CreatedAt":"2024-01-05T13:19:48","Actor":"devversion","Number":"53808","RawContent":null,"Title":"#3 Signal inputs","State":"open","Body":"See individual commits and #53521 for more context.","Url":"https://github.com/angular/angular/pull/53808","RelatedDescription":"Open PR \"#3 Signal inputs\" (#53808)"},{"Id":"2067000232","IsPullRequest":true,"CreatedAt":"2024-01-05T09:22:49","Actor":"danieljancar","Number":"53806","RawContent":null,"Title":"docs: revise documentation for 'track $index' in the @for control flow","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #53800 \r\n\r\nIn the `adev` and `aio` docs we recommend `track $index` as a good default when using the @for control flow. The above linked issue describes possible negative side effects and unexpected behaviour. \r\n\r\nStackblitz example by d-koppenhagen: https://stackblitz.com/edit/angular-track-list-comp?file=src%2Fmain.ts\r\n\r\n## What is the new behavior?\r\n\r\nIn the refactored docs, it's not recommended to use `track $index` as a default for every case. It depends on the context, data, and so on, also considering @JeanMeche's input/demo.\r\n\r\n**Old:**\r\n```markdown\r\nWhen in doubt, using `track $index` is a good default.\r\n```\r\n\r\n**New:** \r\n```markdown\r\nIn some cases, especially with static or less dynamic data, you might find `track $index` handy. However, be cautious as\r\nit isn't a one-size-fits-all solution. If you're dealing with mutable data or frequent changes, it might behave\r\nunpredictably. It's best to stick with a unique and immutable property from your data as the tracking key; this ensures\r\nobjects are identified correctly. Context matters a lot, so choose the `track` expression that fits your data\r\nscenario.\r\n```\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nClose #53800 ","Url":"https://github.com/angular/angular/pull/53806","RelatedDescription":"Open PR \"docs: revise documentation for 'track $index' in the @for control flow\" (#53806)"},{"Id":"2066536245","IsPullRequest":true,"CreatedAt":"2024-01-05T09:03:39","Actor":"reafernandes10","Number":"53801","RawContent":null,"Title":"docs(testing): Fix the escaped characters visible during search","State":"closed","Body":"Update the Query for the <h1> in Component testing scenarios to avoid escaped characters during search\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nSearch for section titles with HTML markup displays escaped characters.\r\n\r\nIssue Number: #53741 \r\n\r\n\r\n## What is the new behavior?\r\nSearch for section titles with HTML markup DOES NOT displays escaped characters #53741\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53801","RelatedDescription":"Closed or merged PR \"docs(testing): Fix the escaped characters visible during search\" (#53801)"},{"Id":"2066626342","IsPullRequest":true,"CreatedAt":"2024-01-05T09:01:57","Actor":"caseycolvell","Number":"53803","RawContent":null,"Title":"53771 issue fix","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: [https://github.com/angular/angular/issues/53771](https://github.com/angular/angular/issues/53771)\r\n\r\n\r\n## What is the new behavior?\r\n\r\nThe documentation example returns the correct method.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/53803","RelatedDescription":"Closed or merged PR \"53771 issue fix\" (#53803)"},{"Id":"2066940073","IsPullRequest":false,"CreatedAt":"2024-01-05T08:48:57","Actor":"JasinRefiku","Number":"53805","RawContent":null,"Title":"Typo on angular.dev","State":"closed","Body":"### Describe the problem that you experienced\r\n\r\nOn outputs' section, 'customizing output names' on angular.dev's documentation, an example is presented with an `@Input` decorator instead of an `@Output`. \r\n![image](https://github.com/angular/angular/assets/93801443/cd7397d8-6669-4cd0-bcb1-8ee26bbe60f4)\r\n\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/guide/components/outputs\r\n","Url":"https://github.com/angular/angular/issues/53805","RelatedDescription":"Closed issue \"Typo on angular.dev\" (#53805)"},{"Id":"2066599278","IsPullRequest":true,"CreatedAt":"2024-01-05T01:48:58","Actor":"AndrewKushnir","Number":"53802","RawContent":null,"Title":"[Test-only] Local compilation mode changes","State":"closed","Body":"This draft PR contains commits from https://github.com/angular/angular/pull/53543 and https://github.com/angular/angular/pull/53591. This PR is needed for testing purposes only, do no review.","Url":"https://github.com/angular/angular/pull/53802","RelatedDescription":"Closed or merged PR \"[Test-only] Local compilation mode changes\" (#53802)"},{"Id":"2066271990","IsPullRequest":true,"CreatedAt":"2024-01-04T21:56:26","Actor":"mgechev","Number":"53798","RawContent":null,"Title":"docs: remove state of js 2023 banner","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/53798","RelatedDescription":"Closed or merged PR \"docs: remove state of js 2023 banner\" (#53798)"},{"Id":"2066380605","IsPullRequest":false,"CreatedAt":"2024-01-04T21:47:33","Actor":"d-koppenhagen","Number":"53800","RawContent":null,"Title":"Docs: don't recommend using `$index` as a good default","State":"open","Body":"### Describe the problem that you experienced\r\n\r\nIn the docs (angular.io / angular.dev), the following sentence is written:\r\n\r\n>  Because of the potential for poor performance, the track expression is required for the @for loops. When in doubt, using track $index is a good default.\r\n\r\nSee references: https://github.com/search?q=repo%3Aangular%2Fangular+%22is+a+good+default.%22&type=code\r\n\r\nIn my opinion tracking the `$index` isn't a good tracking criteria at all since the index may changes and in conclusion this can result in unexpected behavior.\r\n\r\nI created a Stackblitz Demo project to simulate this behavor:\r\nhttps://stackblitz.com/edit/angular-track-list-comp?file=src%2Fmain.ts\r\n\r\n\r\n\r\n### Enter the URL of the topic with the problem\r\n\r\nhttps://angular.dev/api/core/@for\r\n\r\n### Describe what you were looking for in the documentation\r\n\r\nhttps://github.com/search?q=repo%3Aangular%2Fangular+%22is+a+good+default.%22&type=code\r\n\r\n### Describe the actions that led you to experience the problem\r\n\r\n_No response_\r\n\r\n### Describe what you want to experience that would fix the problem\r\n\r\nThe recommendation should be changed.\r\nThere are also situations which should be discussed such as how to handle tracking a non-unique string array?\r\ne.g. `['apple', 'pea', 'orange', 'pea']`\r\n\r\n### Add a screenshot if that helps illustrate the problem\r\n\r\n_No response_\r\n\r\n### If this problem caused an exception or error, please paste it here\r\n\r\n_No response_\r\n\r\n### If the problem is browser-specific, please specify the device, OS, browser, and version\r\n\r\n_No response_\r\n\r\n### Provide any additional information here in as much as detail as you can\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/53800","RelatedDescription":"Open issue \"Docs: don't recommend using `$index` as a good default\" (#53800)"},{"Id":"2066360037","IsPullRequest":true,"CreatedAt":"2024-01-04T21:28:48","Actor":"atscott","Number":"53799","RawContent":null,"Title":"refactor(router): Update integration tests to cover navigation and history API","State":"open","Body":"This commit updates the router integration tests to cover both the classic History and the new Navigation API. There is more work to be done here, but this commit works to prove the efficacy of the `FakeNavigation` implementation.\r\n","Url":"https://github.com/angular/angular/pull/53799","RelatedDescription":"Open PR \"refactor(router): Update integration tests to cover navigation and history API\" (#53799)"},{"Id":"2066217521","IsPullRequest":false,"CreatedAt":"2024-01-04T19:28:03","Actor":"nkosi23","Number":"53797","RawContent":null,"Title":"DOM nodes duplicated / not removed ONLY in production configuration","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore, forms\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI am facing a disturbing and unexpected issue just as I need to push code in production asap.  My application works perfectly fine using the development configuration, however in the production configuration I see many issues boiling down to the fact that after change detection some DOM nodes are not removed from the DOM while they should. \r\n\r\nI see things like the below at random places of my application:\r\n\r\n![image](https://github.com/angular/angular/assets/6731436/a4692eba-c6f8-48c3-b7e3-229f01d61a67)\r\n\r\n```html\r\nif (selectedPeriodDurationInMonths > 1) {\r\n        <span i18n>months</span>\r\n    } @else {\r\n        <span i18n>month</span>\r\n    }\r\n```\r\n\r\n(yeah I know there is a dedicated syntax for pluralization but this is just one of many examples)\r\n\r\n![image](https://github.com/angular/angular/assets/6731436/4d0de922-a801-4703-89ef-6b9fc0cc9bd6)\r\n\r\n```html\r\n  @if (!isUKCompany) {\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"EUR\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>Euros</span></label>\r\n      </div>\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"USD\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>American Dollars</span></label>\r\n      </div>\r\n  }\r\n  @if (isUKCompany) {\r\n      <div>\r\n          <label class=\"ms-1\">\r\n              <p-radioButton\r\n                      inputId=\"ukCurrency\"\r\n                      [formControl]=\"orderForm.controls.currency\"\r\n                      value=\"GBP\"\r\n                      name=\"currencySelection\"\r\n              ></p-radioButton>\r\n              <span i18n>British Pound</span></label>\r\n      </div>\r\n}\r\n```\r\n\r\nBasically controls are not being removed from the DOM while they should. Does anyone have any idea on what could be the cause? I initially suspected the *ngIf syntax, but I had one page using the new control flow syntax on its forms, and the other one using the old directives and both were having this problem.\r\n\r\nThe fact that the there can be such radically different behaviors between development and build configurations is something I really dislike with Angular. I've already been beaten by these differences in the past and this is not something one would except. In other stacks, the only thing that happens when a default production configuration is switch ON is performance improvements.\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\nThere is no error in the development console\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.9\r\nNode: 20.8.1\r\nPackage Manager: npm 10.1.0\r\nOS: linux x64\r\n\r\nAngular: 17.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.9\r\n@angular-devkit/build-angular   17.0.9\r\n@angular-devkit/core            17.0.9\r\n@angular-devkit/schematics      17.0.9\r\n@angular/cli                    17.0.9\r\n@schematics/angular             17.0.9\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nAngular.json:\r\n\r\n```json\r\n\"production\": {\r\n    \"optimization\": {\r\n    \"scripts\": true,\r\n    \"styles\": {\r\n        \"minify\": true,\r\n        \"inlineCritical\": false\r\n    },\r\n    \"fonts\": true\r\n    },\r\n    \"outputHashing\": \"all\",\r\n    \"localize\": [\"en\"]\r\n},\r\n\"development\": {\r\n    \"buildOptimizer\": true,\r\n    \"optimization\": true,\r\n    \"vendorChunk\": true,\r\n    \"extractLicenses\": false,\r\n    \"sourceMap\": true,\r\n    \"namedChunks\": true,\r\n    \"localize\": [\"en\"]\r\n}\r\n```\r\n_No response_","Url":"https://github.com/angular/angular/issues/53797","RelatedDescription":"Open issue \"DOM nodes duplicated / not removed ONLY in production configuration\" (#53797)"},{"Id":"2066129041","IsPullRequest":false,"CreatedAt":"2024-01-04T18:20:50","Actor":"ShacharHarshuv","Number":"53796","RawContent":null,"Title":"Unit test a service that uses effect and injects ChangeDetectorRef","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm not sure if that's actually a bug or if I just don't understand how I am supposed to do it. I couldn't find any related information in the docs. \r\n\r\nThe problem is when trying to unit test a service that looks like this:\r\n\r\n```ts\r\n@Injectable()\r\nexport class MyService {\r\n  readonly eff = effect(() => {});\r\n\r\n  constructor(cdf: ChangeDetectorRef) {}\r\n}\r\n```\r\n\r\nWhen doing the basic setup:\r\n\r\n```ts\r\ndescribe('MyService', () => {\r\n  let service: MyService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [MyService],\r\n    });\r\n    service = TestBed.inject(MyService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});\r\n```\r\nYou get the exception: \r\n```\r\nNullInjectorError: R3InjectorError(DynamicTestModule)[MyService -> ChangeDetectorRef -> ChangeDetectorRef]: \r\n  NullInjectorError: No provider for ChangeDetectorRef!\r\n```\r\n\r\nMy understanding is that you're supposed to create your own mock for the ChangeDetectorRef like so:\r\n\r\n```ts\r\nproviders: [\r\n  {\r\n    provide: ChangeDetectorRef,\r\n    useValue: {\r\n      detectChanges: () => {},\r\n    },\r\n  },\r\n  MyService,\r\n]\r\n```\r\nHowever, when you do that, you get this cryptic exception:\r\n\r\n```\r\nTypeError: Cannot read properties of undefined (reading '2')\r\n```\r\n\r\nI managed to narrow it down to line 293 in effect.ts: `if (!cdr || !(cdr._lView[FLAGS] & LViewFlags.FirstLViewPass)) {`, where the `ChangeDetectorRef` is being injected, but it gets the mock instead, so `cdr._lView` is undefined, which is not properly handled. \r\n\r\nI believe that's a bug in the `effect` function, as it should allow consumers to mock `ChangeDetectorRef` without breaking (it works if it's not provided at all...)\r\n\r\nIf this is the intended behavior, please tell me how am I supposed to fix it from my side.\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nTypeError: Cannot read properties of undefined (reading '2')\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.1.0-next.2\r\nNode: 18.13.0\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: undefined\r\n...\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0-next.2+sha-9d7d136\r\n@angular-devkit/architect-cli   0.1700.7\r\n@angular-devkit/build-angular   17.1.0-next.2+sha-9d7d136\r\n@angular-devkit/core            17.1.0-next.2+sha-9d7d136\r\n@angular-devkit/schematics      17.1.0-next.2\r\n@angular/animations             17.0.7\r\n@angular/build-tooling          0.0.0-2ec28a960001deacf7a54952e5dcfbbdd810deca\r\n@angular/cdk                    17.1.0-next.2\r\n@angular/cli                    17.1.0-next.2\r\n@angular/docs                   0.0.0-e00986799c9f15a3d8f264fdca07de8ef338c3ad\r\n@angular/material               17.1.0-next.2\r\n@angular/ng-dev                 <error>\r\n@bazel/bazelisk                 1.18.0\r\n@bazel/buildifier               6.3.3\r\n@bazel/concatjs                 5.8.1\r\n@bazel/esbuild                  5.8.1\r\n@bazel/ibazel                   v0.16.2\r\n@bazel/jasmine                  5.8.1\r\n@bazel/protractor               5.8.1\r\n@bazel/rollup                   5.8.1\r\n@bazel/runfiles                 5.8.1\r\n@bazel/terser                   5.8.1\r\n@bazel/worker                   5.8.1\r\n@schematics/angular             17.1.0-next.2\r\nrxjs                            7.8.1\r\ntypescript                      5.3.2\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53796","RelatedDescription":"Open issue \"Unit test a service that uses effect and injects ChangeDetectorRef\" (#53796)"},{"Id":"2065838115","IsPullRequest":false,"CreatedAt":"2024-01-04T15:16:42","Actor":"preda7or","Number":"53795","RawContent":null,"Title":"Add typing for NgElement Outputs","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nelements\r\n\r\n### Description\r\n\r\nI was experimenting with Angular's custom elements. The [documentation](https://angular.io/guide/elements) mentions how attributes/inputs of such elements could be typed,\r\n```typescript\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'my-dialog': NgElement & WithProperties<{content: string}>;\r\n    'my-other-element': NgElement & WithProperties<{foo: 'bar'}>;\r\n    …\r\n  }\r\n}\r\n```\r\nbut it does not mention how the events/outputs could be typed.\r\n\r\n### Proposed solution\r\n\r\nI would propose to either add (similar to the WithProperties) a WithEvents/WithOutputs type or even better to add a wrapper type that does the merging of addEventListener signatures better:\r\n\r\nUsing the `type-fest` library my solution is \r\n```typescript\r\nimport { Merge, UnionToIntersection } from \"type-fest\";\r\nimport { NgElement, WithProperties } from \"@angular/elements\";\r\n\r\nexport type TypedNgElement<Inputs extends Record<string, any>, Outputs extends Record<string, any> = {}> = Merge<\r\n  NgElement,\r\n  WithProperties<Inputs> &\r\n    UnionToIntersection<\r\n      {\r\n        [K in keyof Outputs]: {\r\n          addEventListener(type: K, listener: (event: CustomEvent<Outputs[K]>) => void, options?: boolean | AddEventListenerOptions): void;\r\n        };\r\n      }[keyof Outputs]\r\n    >\r\n>;\r\n```\r\n\r\nThat can later be used as follows:\r\n```typescript\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    \"my-custom-element-selector\": TypedNgElement<\r\n      {\r\n        inputOne: SomeType;\r\n        inputTwo?: boolean;\r\n      },\r\n      {\r\n        outputOne: SomeType;\r\n        outputTwo: void;\r\n      }\r\n    >;\r\n  }\r\n}\r\n```\r\n\r\n### Alternatives considered\r\n\r\nI see alternatives (as I mentioned in the solution) in the way the type is introduced.","Url":"https://github.com/angular/angular/issues/53795","RelatedDescription":"Open issue \"Add typing for NgElement Outputs\" (#53795)"},{"Id":"2065504565","IsPullRequest":false,"CreatedAt":"2024-01-04T11:42:39","Actor":"manuks","Number":"53794","RawContent":null,"Title":"broken link to lifecycle hooks","State":"open","Body":"### Describe the problem that you experienced\n\nIt shows \"page not found\" on the lifecycle hooks link. Instead of using the link https://angular.dev/guide/components/lifecycle it is using the link https://angular.dev/guide/lifecycle-hooks\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/tutorials/learn-angular\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![image](https://github.com/angular/angular/assets/570393/c42b1d08-835e-4212-a393-d001968b330b)\r\nThe link to the `Lifecycle Hooks` in the popup above `@Component` decorator is pointing to https://angular.dev/guide/lifecycle-hooks which shows as below\r\n![image](https://github.com/angular/angular/assets/570393/686431bd-17d4-401a-8956-0efeeff6214b)\r\n\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n```true\nThe link should be https://angular.dev/guide/components/lifecycle\n```\n","Url":"https://github.com/angular/angular/issues/53794","RelatedDescription":"Open issue \"broken link to lifecycle hooks\" (#53794)"},{"Id":"2065324411","IsPullRequest":false,"CreatedAt":"2024-01-04T09:44:38","Actor":"NithinProdapt","Number":"53793","RawContent":null,"Title":"14.2.13 and 17.0.9 Vulnerability Report - Node.js (node-pkg) - CVE-2022-25883","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n\r\nI have identified a vulnerability in the Angular v14 an v17 application related to the Node.js (node-pkg) package. The vulnerability is categorized as CVE-2022-25883, with a severity level of MEDIUM. The affected library is \"semver\" as specified in the package.json file.\r\n\r\nVulnerability Details:\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nStatus: Fixed\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)\r\n\r\nI recommend that the Angular team investigates and addresses this vulnerability promptly to ensure the security of the application. Please review the provided details and take appropriate actions to mitigate the risk associated with this security issue.Your timely guidance on the recommended version and any necessary steps for a secure migration would be immensely valuable.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nIN Angular CLI: 14.2.13\r\n\r\nVulnerability Details:\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nStatus: Fixed\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: CVE-2022-25883\r\n\r\n\r\nAngular CLI: 17.0.9\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\n\r\nVulnerability_issue:\r\nLibrary: axios (package.json)\r\nVulnerability: CVE-2023-45857\r\nSeverity: MEDIUM\r\nInstalled Version: 0.21.4\r\nFixed Version: 1.6.0\r\nTitle: axios: exposure of confidential data stored in cookies\r\nReference: CVE-2023-45857\r\nVulnerability 2:\r\n-------------------------------------------------------------\r\nLibrary: semver (package.json)\r\nVulnerability: CVE-2022-25883\r\nSeverity: MEDIUM\r\nInstalled Version: 7.3.8\r\nFixed Version(s): 7.5.2, 6.3.1, 5.7.2\r\nTitle: nodejs-semver: Regular expression denial of service\r\nReference: CVE-2022-25883\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 14.2.13\r\nNode: 14.18.0\r\nPackage Manager: npm 6.14.15\r\nOS: win32 x64\r\n\r\n AND\r\n\r\nAngular CLI: 17.0.9\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: npm 10.2.4\r\nOS: linux x64\r\n\r\nAngular: 17.0.8\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.9\r\n@angular-devkit/build-angular   16.2.11\r\n@angular-devkit/core            17.0.9\r\n@angular-devkit/schematics      17.0.9\r\n@angular/cli                    17.0.9\r\n@angular/ssr                    17.0.9\r\n@schematics/angular             17.0.9\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else?\n\nThe current state of our project security is critical, and I am eager to collaborate with your team to implement the necessary measures promptly. Your swift response and guidance in resolving these issues are highly appreciated.\r\nYour timely guidance on the recommended version and any necessary steps for a secure migration would be immensely valuable.","Url":"https://github.com/angular/angular/issues/53793","RelatedDescription":"Open issue \"14.2.13 and 17.0.9 Vulnerability Report - Node.js (node-pkg) - CVE-2022-25883\" (#53793)"},{"Id":"2065303492","IsPullRequest":false,"CreatedAt":"2024-01-04T09:34:59","Actor":"dr-ananthakrishna","Number":"53791","RawContent":null,"Title":"NavigationEnd event not firing on constructor","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHi,\r\nI am using the following snippet for performing a check in a route, it goes like:\r\n```javascript\r\nconst routeSubscription = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n       console.log('here');\r\n        // Perform an operation     \r\n      }\r\n});\r\n```\r\nThis is inside a `constructor`. But the event is not firing on first load. It was happening till my Angular version was 11, now after upgrade to 15, it stopped.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 15.2.10\r\nNode: 16.17.0\r\nPackage Manager: npm 8.15.0\r\nOS: darwin x64\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/53791","RelatedDescription":"Closed issue \"NavigationEnd event not firing on constructor\" (#53791)"},{"Id":"2065305767","IsPullRequest":false,"CreatedAt":"2024-01-04T09:31:45","Actor":"axos88","Number":"53792","RawContent":null,"Title":"Ability to call constructors within a template","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler, core\n\n### Description\n\nI'd like to be able to do something like:\r\n\r\n```\r\n  <button (onClick)=\"myHandler(new Foo(42))\"></button>\r\n```  \n\n### Proposed solution\n\nSupport the new keyword in the template language\n\n### Alternatives considered\n\nI tried `Foo.constructor(42)`, `Foo.prototype.constructor(42)`, `Foo.constructor.call(42)`, `Foo.prototype.constructor.call(42)`, but nothing seems to work.","Url":"https://github.com/angular/angular/issues/53792","RelatedDescription":"Open issue \"Ability to call constructors within a template\" (#53792)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2068674561","IsPullRequest":true,"CreatedAt":"2024-01-06T15:12:05","Actor":"angular-robot","Number":"26811","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`6.17.0` -> `6.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/6.17.0/6.18.0) |\n| [@typescript-eslint/parser](https://togithub.com/typescript-eslint/typescript-eslint) ([source](https://togithub.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`6.17.0` -> `6.18.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/6.17.0/6.18.0) |\n| [quicktype-core](https://togithub.com/quicktype/quicktype) | devDependencies | patch | [`23.0.80` -> `23.0.81`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.80/23.0.81) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v6.18.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#6180-2024-01-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.17.0...v6.18.0)\n\n##### 🚀 Features\n\n-   **typescript-estree:** throw on invalid update expressions\n\n-   **eslint-plugin:** \\[no-var-requires, no-require-imports] allow option\n\n##### ❤️  Thank You\n\n-   auvred\n-   Joshua Chen\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v6.18.0`](https://togithub.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#6180-2024-01-06)\n\n[Compare Source](https://togithub.com/typescript-eslint/typescript-eslint/compare/v6.17.0...v6.18.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.81`](https://togithub.com/quicktype/quicktype/compare/2a60269d431b392b658e671df2c1fb5479aec855...838c5e0e63a50d7c7790dc81118e664480fc4a80)\n\n[Compare Source](https://togithub.com/quicktype/quicktype/compare/2a60269d431b392b658e671df2c1fb5479aec855...838c5e0e63a50d7c7790dc81118e664480fc4a80)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26811","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#26811)"},{"Id":"2068083970","IsPullRequest":false,"CreatedAt":"2024-01-05T21:54:24","Actor":"cexbrayat","Number":"26810","RawContent":null,"Title":"web-test-runner: handle multiple spec files with same name","State":"open","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the experimental web test runner builder, a project with several spec files with the same name (in differetn directories) can't run `ng test`\n\n### Minimal Reproduction\n\n```\r\nnpx @angular/cli@next new wtr-same-name --defaults --no-routing\r\ncd wtr-same-name\r\nnpm i --save-dev @web/test-runner\r\n```\r\n\r\nReplace the test runner in `angular.json`with `@angular-devkit/build-angular:web-test-runner`\r\n\r\n```\r\nng test --no-watch\r\nng g c other/app\r\nng test --no-watch\r\n```\r\n\r\nThe second `ng test` fails as there are two spec files names `app.component.spec.ts`\n\n### Exception or Error\n\n```text\n❯ ng test\r\nNOTE: The Web Test Runner builder is currently EXPERIMENTAL and not ready for production use.\r\nThe 'assets' option is not yet supported by this builder.\r\nThe 'styles' option is not yet supported by this builder.\r\nThe 'inlineStyleLanguage' option is not yet supported by this builder.\r\nThe 'stylePreprocessorOptions' option is not yet supported by this builder.\r\nThe 'sourceMap' option is not yet supported by this builder.\r\nThe 'progress' option is not yet supported by this builder.\r\n⠙ Building...\r\n✘ [ERROR] Two output files share the same path but have different contents: app.component.spec.js.map\r\n\r\n\r\n✘ [ERROR] Two output files share the same path but have different contents: app.component.spec.js\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.1.0-rc.0\r\nNode: 18.19.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.1.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1701.0-rc.0\r\n@angular-devkit/build-angular   17.1.0-rc.0\r\n@angular-devkit/core            17.1.0-rc.0\r\n@angular-devkit/schematics      17.1.0-rc.0\r\n@angular/cli                    17.1.0-rc.0\r\n@schematics/angular             17.1.0-rc.0\r\nrxjs                            7.8.1\r\ntypescript                      5.3.3\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26810","RelatedDescription":"Open issue \"web-test-runner: handle multiple spec files with same name\" (#26810)"},{"Id":"2068022504","IsPullRequest":false,"CreatedAt":"2024-01-05T20:48:30","Actor":"AndrewKushnir","Number":"26809","RawContent":null,"Title":"Throw an error if client builds retain references to `*.server.ts` files","State":"open","Body":"### Command\r\n\r\nbuild\r\n\r\n### Description\r\n\r\nWhen SSR is enabled in an Angular project, there are a few `.server.ts` files produced (e.g. `app.config.server.ts`). The `.server.ts` suffix is also used by different applications as a way to structure and separate client and server code.\r\n\r\nThe proposal is to update the build pipeline to throw an error in case files with `.server.ts` suffix are present in the final client build output.\r\n\r\n// cc @alan-agius4 ","Url":"https://github.com/angular/angular-cli/issues/26809","RelatedDescription":"Open issue \"Throw an error if client builds retain references to `*.server.ts` files\" (#26809)"},{"Id":"2067931831","IsPullRequest":false,"CreatedAt":"2024-01-05T20:38:13","Actor":"dev-garcia","Number":"26808","RawContent":null,"Title":"Version issue when initializing a new project","State":"closed","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17.0.1\n\n### Description\n\nWhen creating a new project the angular core version is in version 17.0.0 and the 'ng update' command does not find new versions, in projects that have been updated from version 16.2.10, when using the 'ng update' command, it finds the latest versions of angular core normally.\r\n\r\n\"dependencies\": {\r\n    \"@angular/animations\": \"^17.0.0\",\r\n    \"@angular/common\": \"^17.0.0\",\r\n    \"@angular/compiler\": \"^17.0.0\",\r\n    \"@angular/core\": \"^17.0.0\",\r\n    \"@angular/forms\": \"^17.0.0\",\r\n    \"@angular/platform-browser\": \"^17.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^17.0.0\",\r\n    \"@angular/platform-server\": \"^17.0.0\",\r\n    \"@angular/router\": \"^17.0.0\",\r\n    \"@angular/ssr\": \"^17.0.9\",\r\n    \"express\": \"^4.18.2\",\r\n    \"rxjs\": \"~7.8.0\",\r\n    \"tslib\": \"^2.3.0\",\r\n    \"zone.js\": \"~0.14.2\"\r\n  },\n\n### Minimal Reproduction\n\nng new project\r\n\r\nng update\n\n### Exception or Error\n\n```text\n\"We analyzed your package.json and everything seems to be in order. Good work!\"\n```\n\n\n### Your Environment\n\n```text\n17.0.9\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26808","RelatedDescription":"Closed issue \"Version issue when initializing a new project\" (#26808)"},{"Id":"2067840255","IsPullRequest":true,"CreatedAt":"2024-01-05T18:37:11","Actor":"dgp1130","Number":"26807","RawContent":null,"Title":"Fix Web Test Runner e2e test on Windows","State":"closed","Body":"This is a cherry pick of https://github.com/angular/angular-cli/pull/26797 applied to the RC branch (17.1.x). I accidentally targeted that PR to `minor` instead of `rc`, so the change didn't make it to 17.1.x.","Url":"https://github.com/angular/angular-cli/pull/26807","RelatedDescription":"Closed or merged PR \"Fix Web Test Runner e2e test on Windows\" (#26807)"},{"Id":"2067672881","IsPullRequest":true,"CreatedAt":"2024-01-05T16:40:36","Actor":"clydin","Number":"26806","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): move bundler context setup into separate file","State":"open","Body":"To reduce the amount of code within the main `application` builder execution function, the bundler context setup has been moved into a separate file. This also reduces the amount of imports within the main execution function's module.","Url":"https://github.com/angular/angular-cli/pull/26806","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): move bundler context setup into separate file\" (#26806)"},{"Id":"2067603391","IsPullRequest":true,"CreatedAt":"2024-01-05T16:06:00","Actor":"leosvelperez","Number":"26805","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fix normalization of the application builder extensions","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nThe `buildApplication` function normalizes the provided extensions incorrectly. When an object of the`ApplicationBuilderExtensions` type is provided with the esbuild plugin and/or the index HTML transformer function, the value is lost and the `buildApplicationInternal` function is invoked with `undefined`.\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\n<!-- Please describe the new behavior that. -->\r\n\r\nThe `buildApplication` function normalizes the provided extensions correctly. If an object of `ApplicationBuilderExtensions` type is provided, it is used as is.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26805","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): fix normalization of the application builder extensions\" (#26805)"},{"Id":"2066993914","IsPullRequest":true,"CreatedAt":"2024-01-05T15:30:07","Actor":"alan-agius4","Number":"26803","RawContent":null,"Title":"Retain existing EOL when updating JSON files","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26803","RelatedDescription":"Closed or merged PR \"Retain existing EOL when updating JSON files\" (#26803)"},{"Id":"2066992893","IsPullRequest":true,"CreatedAt":"2024-01-05T15:29:53","Actor":"alan-agius4","Number":"26802","RawContent":null,"Title":"refactor(@schematics/angular): update server schematic to use new dependency utility","State":"closed","Body":"\r\n\r\nThis commit updates the server schematic to use the new dependency utility.\r\n","Url":"https://github.com/angular/angular-cli/pull/26802","RelatedDescription":"Closed or merged PR \"refactor(@schematics/angular): update server schematic to use new dependency utility\" (#26802)"},{"Id":"2067352835","IsPullRequest":false,"CreatedAt":"2024-01-05T13:50:32","Actor":"rodchenkov","Number":"26804","RawContent":null,"Title":"npm WARN deprecated abab@2.0.6","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi, I'm getting warning: **npm WARN deprecated abab@2.0.6: Use your platform's native atob() and btoa() methods instead**\r\n\r\n**@angular-devkit/build-angular** uses **source-map-loader@4.0.1** that has dependency on deprecated **abab** package.\r\nI think that you can just update **source-map-loader** to latest (4.0.2) version as it already do not have dependency on **abab** package and warning will disappear.\r\n\r\nThank you!\n\n### Minimal Reproduction\n\nsetup new project with latest angluar/cli and run npm ci\r\n\r\nyou will get this warning message\r\n`npm WARN deprecated abab@2.0.6: Use your platform's native atob() and btoa() methods instead`\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.8\r\nNode: 18.16.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1700.8 (cli-only)\r\n@angular-devkit/core         17.0.8 (cli-only)\r\n@angular-devkit/schematics   17.0.8 (cli-only)\r\n@schematics/angular          17.0.8 (cli-only)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26804","RelatedDescription":"Closed issue \"npm WARN deprecated abab@2.0.6\" (#26804)"},{"Id":"2066323677","IsPullRequest":true,"CreatedAt":"2024-01-05T09:47:51","Actor":"clydin","Number":"26796","RawContent":null,"Title":"fix(@angular-devkit/build-angular): show diagnostic messages after build stats","State":"closed","Body":"To improve the readability and discoverability of any warnings or errors present during build, the diagnostic messages will be shown after the build stats are displayed. For large projects the amount of generated files previously could cause warnings to scroll off the screen and potentially be missed.\r\n\r\nCloses #26514","Url":"https://github.com/angular/angular-cli/pull/26796","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): show diagnostic messages after build stats\" (#26796)"},{"Id":"2066787825","IsPullRequest":true,"CreatedAt":"2024-01-05T09:38:15","Actor":"angular-robot","Number":"26800","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | dependencies | patch | [`8.4.32` -> `8.4.33`](https://renovatebot.com/diffs/npm/postcss/8.4.32/8.4.33) |\n| [postcss](https://postcss.org/) ([source](https://togithub.com/postcss/postcss)) | devDependencies | patch | [`8.4.32` -> `8.4.33`](https://renovatebot.com/diffs/npm/postcss/8.4.32/8.4.33) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`5.0.10` -> `5.0.11`](https://renovatebot.com/diffs/npm/vite/5.0.10/5.0.11) |\n| [vite](https://vitejs.dev) ([source](https://togithub.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`5.0.10` -> `5.0.11`](https://renovatebot.com/diffs/npm/vite/5.0.10/5.0.11) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>postcss/postcss (postcss)</summary>\n\n### [`v8.4.33`](https://togithub.com/postcss/postcss/blob/HEAD/CHANGELOG.md#8433)\n\n[Compare Source](https://togithub.com/postcss/postcss/compare/8.4.32...8.4.33)\n\n-   Fixed `NoWorkResult` behavior difference with normal mode (by Romain Menke).\n-   Fixed `NoWorkResult` usage conditions (by [@&#8203;ahmdammarr](https://togithub.com/ahmdammarr)).\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v5.0.11`](https://togithub.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small5011-2024-01-05-small)\n\n[Compare Source](https://togithub.com/vitejs/vite/compare/v5.0.10...v5.0.11)\n\n-   fix: don't pretransform classic script links ([#&#8203;15361](https://togithub.com/vitejs/vite/issues/15361)) ([19e3c9a](https://togithub.com/vitejs/vite/commit/19e3c9a)), closes [#&#8203;15361](https://togithub.com/vitejs/vite/issues/15361)\n-   fix: inject `__vite__mapDeps` code before sourcemap file comment ([#&#8203;15483](https://togithub.com/vitejs/vite/issues/15483)) ([d2aa096](https://togithub.com/vitejs/vite/commit/d2aa096)), closes [#&#8203;15483](https://togithub.com/vitejs/vite/issues/15483)\n-   fix(assets): avoid splitting `,` inside base64 value of `srcset` attribute ([#&#8203;15422](https://togithub.com/vitejs/vite/issues/15422)) ([8de7bd2](https://togithub.com/vitejs/vite/commit/8de7bd2)), closes [#&#8203;15422](https://togithub.com/vitejs/vite/issues/15422)\n-   fix(html): handle offset magic-string slice error ([#&#8203;15435](https://togithub.com/vitejs/vite/issues/15435)) ([5ea9edb](https://togithub.com/vitejs/vite/commit/5ea9edb)), closes [#&#8203;15435](https://togithub.com/vitejs/vite/issues/15435)\n-   chore(deps): update dependency strip-literal to v2 ([#&#8203;15475](https://togithub.com/vitejs/vite/issues/15475)) ([49d21fe](https://togithub.com/vitejs/vite/commit/49d21fe)), closes [#&#8203;15475](https://togithub.com/vitejs/vite/issues/15475)\n-   chore(deps): update tj-actions/changed-files action to v41 ([#&#8203;15476](https://togithub.com/vitejs/vite/issues/15476)) ([2a540ee](https://togithub.com/vitejs/vite/commit/2a540ee)), closes [#&#8203;15476](https://togithub.com/vitejs/vite/issues/15476)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26800","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#26800)"},{"Id":"2066593543","IsPullRequest":false,"CreatedAt":"2024-01-05T09:25:38","Actor":"n614cd","Number":"26798","RawContent":null,"Title":"Expose webpack dev-server config to allow for multiple projects","State":"closed","Body":"### Command\n\nserve\n\n### Description\n\nLike others (https://github.com/angular/angular-cli/issues/12181), we are utilizing the multi-project features of Angular to create smaller and more efficient SPAs.\r\nThe production reality is they are served within separate URI contexts on a web server. \r\nCurrently in development we are required to run multiple servers on separate ports. This is inefficient, and introduces more variables compared to production.\r\nTherefore, it would be beneficial to allow webpack to with each application project underneath its own URI context. \r\n\r\n\n\n### Describe the solution you'd like\n\nNew command to the CLI such as \"serveAll\" which launches a single web server, with URI context defined for each project.\n\n### Describe alternatives you've considered\n\nTwo solutions so far. Spin up Apache web server, and configure (using a sledge hammer for a nail).\r\nCreate a script which spawns \"ng build --project=name\" for each project with a standalone dev project with just webpack-dev-server in it. The webpack.config.js contains hard coded static sections for each project.","Url":"https://github.com/angular/angular-cli/issues/26798","RelatedDescription":"Closed issue \"Expose webpack dev-server config to allow for multiple projects\" (#26798)"},{"Id":"2066805263","IsPullRequest":true,"CreatedAt":"2024-01-05T06:31:58","Actor":"m4s7","Number":"26801","RawContent":null,"Title":"fix(@angular-devkit/build-angular): fix support for proxy.conf.ts fil…","State":"open","Body":"…es in ssr-dev-server\r\n\r\nThis fix activates normalization in loadProxyConfiguration for the ssr-dev-server to support formats beyond JSON. This enhancement follows up on the unified proxy configuration loading introduced in PR #26651. Added a test to confirm TypeScript config file functionality.\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nWhile the TS format proxy configuration is successfully loaded, it is not interpreted correctly due to the lack of normalization.\r\n\r\nIssue Number: #26651\r\n\r\n## What is the new behavior?\r\n\r\nThe interpretation of the TS format proxy configuration is now correct and the regular expressions generated through the normalization process are accurately passed as filters to the proxy.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/26801","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): fix support for proxy.conf.ts fil…\" (#26801)"},{"Id":"2066787679","IsPullRequest":true,"CreatedAt":"2024-01-05T06:13:26","Actor":"angular-robot","Number":"26799","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `fb2bc97` -> `bfb26af` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `b3d2c6b` -> `ba527ca` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `3a793c8` -> `0e4dc7b` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `8abb9fe` -> `3322b02` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `7586edd` -> `8b9bc49` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `e7e4b0f` -> `0be438c` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `bee64e1` -> `f314348` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `fe8b0ce` -> `c16ae5f` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `e44df02` -> `4a31f2d` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `9b5ea18` -> `378526a` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `0d71da2` -> `b9081f3` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `6272f36` -> `f7ae81a` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `6aae229` -> `f35bfcc` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `7cf6a10` -> `d6d6d17` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `b451a38` -> `7f932ae` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `610f952` -> `e2dc3df` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `f5eac0d` -> `d29c8ad` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `5e35b03` -> `cf13a46` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `7622f57` -> `1ed1094` |\n| angular/dev-infra | action | digest | `276ea03` -> `dd565fc` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26799","RelatedDescription":"Open PR \"build: update angular\" (#26799)"},{"Id":"2066338485","IsPullRequest":true,"CreatedAt":"2024-01-04T21:25:36","Actor":"dgp1130","Number":"26797","RawContent":null,"Title":"Fix Web Test Runner e2e test on Windows","State":"closed","Body":"Needed to set `$CHROME_PATH` correctly for Web Test Runner / Chrome launcher to correctly find the the Chrome binary provided by Bazel.","Url":"https://github.com/angular/angular-cli/pull/26797","RelatedDescription":"Closed or merged PR \"Fix Web Test Runner e2e test on Windows\" (#26797)"},{"Id":"2066174617","IsPullRequest":true,"CreatedAt":"2024-01-04T20:45:23","Actor":"dgp1130","Number":"26795","RawContent":null,"Title":"ci: fix `sauce-connect-proxy` version","State":"closed","Body":"Somehow the requested and resolved versions of `sauce-connect-proxy` got desynced and downgraded to 4.8.1 in 68dae539adfa12d6088f96ac5c9f224d9bb52e17. This reverts that change and bumps it back up to 4.9.1 which appears to fix Saucelabs CI.","Url":"https://github.com/angular/angular-cli/pull/26795","RelatedDescription":"Closed or merged PR \"ci: fix `sauce-connect-proxy` version\" (#26795)"},{"Id":"2064793406","IsPullRequest":true,"CreatedAt":"2024-01-04T13:11:46","Actor":"dgp1130","Number":"26790","RawContent":null,"Title":"refactor: remove `process.cwd` from Web Test Runner builder","State":"closed","Body":"Turns out this isn't needed for `application` builder to correctly resolve inputs. Not using `process.cwd` should make this builder a little less brittle for monorepo use cases or when running `ng test` inside a subdirectory.","Url":"https://github.com/angular/angular-cli/pull/26790","RelatedDescription":"Closed or merged PR \"refactor: remove `process.cwd` from Web Test Runner builder\" (#26790)"},{"Id":"2065070263","IsPullRequest":true,"CreatedAt":"2024-01-04T10:02:07","Actor":"angular-robot","Number":"26792","RawContent":null,"Title":"build: update angular","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `96a98e8` -> `fb2bc97` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `99804dc` -> `b3d2c6b` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `4a08d93` -> `8abb9fe` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `598a957` -> `7586edd` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `c30a001` -> `e7e4b0f` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `4edeb0e` -> `bee64e1` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `81587ca` -> `fe8b0ce` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `a544a6b` -> `e44df02` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `00d2878` -> `9b5ea18` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `ae53beb` -> `0d71da2` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `59ad436` -> `6272f36` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `6ce0136` -> `6aae229` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `8903960` -> `b451a38` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `01f5e33` -> `610f952` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `e1ccbe1` -> `f5eac0d` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `5dee447` -> `5e35b03` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `20adba7` -> `7622f57` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26792","RelatedDescription":"Closed or merged PR \"build: update angular\" (#26792)"},{"Id":"2064802389","IsPullRequest":true,"CreatedAt":"2024-01-04T10:01:00","Actor":"dgp1130","Number":"26791","RawContent":null,"Title":"ci: add `ci-*` to GitHub actions config","State":"closed","Body":"This automatically runs full CI for any branch prefixed with `ci-`. This makes it easier to manually run CI prior to opening a pull request without having to update any files and make sure they aren't accidentally included in the final PR.","Url":"https://github.com/angular/angular-cli/pull/26791","RelatedDescription":"Closed or merged PR \"ci: add `ci-*` to GitHub actions config\" (#26791)"},{"Id":"2065117767","IsPullRequest":true,"CreatedAt":"2024-01-04T10:00:36","Actor":"dgp1130","Number":"26794","RawContent":null,"Title":"ci: disable WTR e2e test on Windows","State":"closed","Body":"It doesn't appear to be finding the Chrome binary from Bazel correctly. Likely a Bazel-specific issue. This should get the build green immediately, will need to spend more time looking into the issue.","Url":"https://github.com/angular/angular-cli/pull/26794","RelatedDescription":"Closed or merged PR \"ci: disable WTR e2e test on Windows\" (#26794)"},{"Id":"2065070659","IsPullRequest":true,"CreatedAt":"2024-01-04T10:00:25","Actor":"angular-robot","Number":"26793","RawContent":null,"Title":"build: update dependency @web/test-runner to ^0.18.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@web/test-runner](https://togithub.com/modernweb-dev/web/tree/master/packages/test-runner) ([source](https://togithub.com/modernweb-dev/web/tree/HEAD/packages/test-runner)) | peerDependencies | minor | [`^0.17.3` -> `^0.18.0`](https://renovatebot.com/diffs/npm/@web%2ftest-runner/0.17.3/0.18.0) |\n| [@web/test-runner](https://togithub.com/modernweb-dev/web/tree/master/packages/test-runner) ([source](https://togithub.com/modernweb-dev/web/tree/HEAD/packages/test-runner)) | devDependencies | minor | [`^0.17.3` -> `^0.18.0`](https://renovatebot.com/diffs/npm/@web%2ftest-runner/0.17.3/0.18.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>modernweb-dev/web (@&#8203;web/test-runner)</summary>\n\n### [`v0.18.0`](https://togithub.com/modernweb-dev/web/blob/HEAD/packages/test-runner/CHANGELOG.md#0180)\n\n[Compare Source](https://togithub.com/modernweb-dev/web/compare/@web/test-runner@0.17.3...@web/test-runner@0.18.0)\n\n##### Minor Changes\n\n-   [`c185cba`](https://togithub.com/modernweb-dev/web/commit/c185cbaa): Set minimum node version to 18\n\n##### Patch Changes\n\n-   Updated dependencies \\[[`c185cba`](https://togithub.com/modernweb-dev/web/commit/c185cbaa)]\n    -   [@&#8203;web/test-runner-commands](https://togithub.com/web/test-runner-commands)[@&#8203;0](https://togithub.com/0).9.0\n    -   [@&#8203;web/test-runner-chrome](https://togithub.com/web/test-runner-chrome)[@&#8203;0](https://togithub.com/0).15.0\n    -   [@&#8203;web/test-runner-mocha](https://togithub.com/web/test-runner-mocha)[@&#8203;0](https://togithub.com/0).9.0\n    -   [@&#8203;web/test-runner-core](https://togithub.com/web/test-runner-core)[@&#8203;0](https://togithub.com/0).13.0\n    -   [@&#8203;web/config-loader](https://togithub.com/web/config-loader)[@&#8203;0](https://togithub.com/0).3.0\n    -   [@&#8203;web/browser-logs](https://togithub.com/web/browser-logs)[@&#8203;0](https://togithub.com/0).4.0\n    -   [@&#8203;web/dev-server](https://togithub.com/web/dev-server)[@&#8203;0](https://togithub.com/0).4.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMDUuMyIsInVwZGF0ZWRJblZlciI6IjM3LjEwNS4zIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/26793","RelatedDescription":"Closed or merged PR \"build: update dependency @web/test-runner to ^0.18.0\" (#26793)"},{"Id":"2064297316","IsPullRequest":false,"CreatedAt":"2024-01-04T09:58:56","Actor":"segrey","Number":"26783","RawContent":null,"Title":"Angular 17 compiler errors have zero-based column, but one-based column would be more expected","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16\n\n### Description\n\nSince Angular 17, compilation errors have zero-based column while having one-based line.\r\nIt would be more natural to have both line and column one-based.\r\n\r\n\r\n\n\n### Minimal Reproduction\n\n1. Generate an example Angular 17 app\r\n2. Make an intentional compilation error, e.g. change `src/app/app.component.html` to\r\n```\r\n<span>{{ title.foo }} app is running!</span>\r\n```\r\n3. Run `ng serve`. The error with zero-based column (15) will appear:\r\n```\r\n✘ [ERROR] NG9: Property 'foo' does not exist on type 'string'. [plugin angular-compiler]\r\n\r\n    src/app/app.component.html:1:15:\r\n      1 │ <span>{{ title.foo }} app is running!</span>\r\n        ╵                ~~~\r\n```\r\n\r\nPreviously, in Angular 16, columns in errors were one-based:\r\n```\r\nError: src/app/app.component.html:1:16 - error TS2339: Property 'foo' does not exist on type 'string'.\r\n\r\n1 <span>{{ title.foo }} app is running!</span>\r\n                 ~~~\r\n```\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 17.0.8\r\nNode: 18.19.0\r\nPackage Manager: npm 10.2.3\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.8\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.8\r\n@angular-devkit/build-angular   17.0.8\r\n@angular-devkit/core            17.0.8\r\n@angular-devkit/schematics      17.0.8\r\n@schematics/angular             17.0.8\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26783","RelatedDescription":"Closed issue \"Angular 17 compiler errors have zero-based column, but one-based column would be more expected\" (#26783)"},{"Id":"2064790429","IsPullRequest":false,"CreatedAt":"2024-01-03T23:48:07","Actor":"adover","Number":"26789","RawContent":null,"Title":"router-outlet reference in App Shell does not accept self closing router-outlet","State":"closed","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the regex for matching a router outlet in the app shell generation, it fails to match the new self closing syntax `<router-outlet/>`.\r\n\r\nThis can be remediated by modifying the regex to `/<router-outlet.*?(\\/?)>([\\s\\S]*?)(?:<\\/router-outlet>)?/`\r\n\n\n### Minimal Reproduction\n\nTo reproduce\r\n\r\nCreate a new application and add `<router-outlet/>` to the app.component.html.\r\n\r\nRun `ng generate app-shell` and observe the failure.\r\n\r\nChange it to `<router-outlet></router-outlet>` and observe it works as expected.\r\n\n\n### Exception or Error\n\n```text\nPrerequisite for application shell is to define a router-outlet in your root component.\n```\n\n\n### Your Environment\n\n```text\n17.0.7\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/26789","RelatedDescription":"Closed issue \"router-outlet reference in App Shell does not accept self closing router-outlet\" (#26789)"},{"Id":"2064470512","IsPullRequest":true,"CreatedAt":"2024-01-03T18:28:08","Actor":"alan-agius4","Number":"26788","RawContent":null,"Title":"Update next branch to reflect new release-train \"v17.2.0-next.0\".","State":"closed","Body":"The previous \"next\" release-train has moved into the release-candidate phase. This PR updates the next branch to the subsequent release-train.\n\nAlso this PR cherry-picks the changelog for v17.1.0-rc.0 into the main branch so that the changelog is up to date.","Url":"https://github.com/angular/angular-cli/pull/26788","RelatedDescription":"Closed or merged PR \"Update next branch to reflect new release-train \"v17.2.0-next.0\".\" (#26788)"},{"Id":"2064435492","IsPullRequest":true,"CreatedAt":"2024-01-03T18:26:23","Actor":"alan-agius4","Number":"26787","RawContent":null,"Title":"Bump version to \"v17.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26787","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-rc.0\" with changelog.\" (#26787)"},{"Id":"2064369937","IsPullRequest":true,"CreatedAt":"2024-01-03T17:19:05","Actor":"alan-agius4","Number":"26786","RawContent":null,"Title":"Bump version to \"v17.1.0-rc.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26786","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.1.0-rc.0\" with changelog.\" (#26786)"},{"Id":"2064363107","IsPullRequest":true,"CreatedAt":"2024-01-03T17:04:47","Actor":"alan-agius4","Number":"26785","RawContent":null,"Title":"docs: release notes for the v17.0.9 release","State":"closed","Body":"Cherry-picks the changelog from the \"17.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/26785","RelatedDescription":"Closed or merged PR \"docs: release notes for the v17.0.9 release\" (#26785)"},{"Id":"2064357955","IsPullRequest":true,"CreatedAt":"2024-01-03T17:02:13","Actor":"alan-agius4","Number":"26784","RawContent":null,"Title":"Bump version to \"v17.0.9\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/26784","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.9\" with changelog.\" (#26784)"},{"Id":"2064161826","IsPullRequest":false,"CreatedAt":"2024-01-03T14:45:43","Actor":"mivanyna","Number":"26782","RawContent":null,"Title":"esbuild with proxy doesn't return Content-Language headers for OPTIONS request","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nupgrade, Don't known / other\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nI upgraded my project to Angular 17 and switched to `\"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`. For local env I use proxy config to redirect requests to test env.\r\n\r\nI receive all the data, except for `OPTIONS` request there is no `Content-Language` header in response.\r\nIt works on prev version(Angular 16 and `\"builder\": \"@angular-devkit/build-angular:browser\"`)\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n_No response_\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.7\r\nNode: 21.5.0 (Unsupported)\r\nPackage Manager: yarn 1.22.19\r\nOS: win32 x64\r\n\r\nAngular: 17.0.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n... upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.7\r\n@angular-devkit/build-angular   17.0.7\r\n@angular-devkit/architect       0.1700.7\r\n@angular-devkit/build-angular   17.0.7\r\n@angular-devkit/core            17.0.7\r\n@angular-devkit/schematics      17.0.7\r\n@schematics/angular             17.0.7\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.2\r\n\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\nI switched to `\"builder\": \"@angular-devkit/build-angular:browser-esbuild\"`\r\nWith proxy for the local env\r\npackage.json:\r\n```\r\n{\r\n...\r\n\"start\": \"ng serve --proxy-config config/proxy.conf.js --hmr --port 3000 --open=true\",\r\n...\r\n}\r\n```\r\nMy proxy config looks like this:\r\n```\r\nconst PROXY_CONFIG = [\r\n  {\r\n    context: [\r\n      \"/api\"\r\n    ],\r\n    target: \"test env link\",\r\n    secure: true,\r\n    changeOrigin: true,\r\n  }\r\n]\r\n\r\nmodule.exports = PROXY_CONFIG;\r\n```\r\n","Url":"https://github.com/angular/angular-cli/issues/26782","RelatedDescription":"Open issue \"esbuild with proxy doesn't return Content-Language headers for OPTIONS request\" (#26782)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2068478405","IsPullRequest":true,"CreatedAt":"2024-01-06T09:00:05","Actor":"crisbeto","Number":"28382","RawContent":null,"Title":"fix(material/stepper): enable hydration","State":"open","Body":"Enables hydration on the stepper and adds a workaround for an issue that prevented the content from being rendered out.","Url":"https://github.com/angular/components/pull/28382","RelatedDescription":"Open PR \"fix(material/stepper): enable hydration\" (#28382)"},{"Id":"2067998988","IsPullRequest":true,"CreatedAt":"2024-01-05T20:32:46","Actor":"essjay05","Number":"28381","RawContent":null,"Title":"fix(material/dialog): dialog actions overflow and are unreachable","State":"open","Body":"Fixes a bug in the Angular Material dialog component where buttons/actions are unreachable due to dialog overflowing because of unspecified max-height for the mat-dialog-container parent flexbox.\r\n\r\nFixes #24785","Url":"https://github.com/angular/components/pull/28381","RelatedDescription":"Open PR \"fix(material/dialog): dialog actions overflow and are unreachable\" (#28381)"},{"Id":"2067847424","IsPullRequest":true,"CreatedAt":"2024-01-05T18:28:39","Actor":"atscott","Number":"28380","RawContent":null,"Title":"fix(material/tabs): Eliminate ExpressionChanged... errors for active tab changes","State":"open","Body":"Using signals eliminates the `ExpressionChangedAfterItHasBeenCheckedError` when an active tab changes after the tab panel has been checked.\r\n\r\nfixes #28379\r\n\r\n\r\n(draft): Kind of just an example of how using signals internally can be beneficial in components repo","Url":"https://github.com/angular/components/pull/28380","RelatedDescription":"Open PR \"fix(material/tabs): Eliminate ExpressionChanged... errors for active tab changes\" (#28380)"},{"Id":"2067700751","IsPullRequest":false,"CreatedAt":"2024-01-05T16:56:38","Actor":"muenchto","Number":"28379","RawContent":null,"Title":"bug(Tabs): ExpressionChangedAfterItHasBeenCheckedError when providing MatTabNavPanel to tabPanel input of mat-tab-nav-bar","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nAngular Material pre-MDC\n\n### Description\n\nmat-tab-nav-bar requires a reference to it's MatTabNavPanel via the tabPanel input. Documentation says this is optional but code makes it required as reported in https://github.com/angular/components/issues/26270.\r\n\r\nHowever, when the mat-tab-nav-bar is wrapped in some other component, e.g. an AppHeaderComponent, but the MatTabNavPanel is outside this component, we need to pass the reference to the MatTabNavPanel via Input into the wrapper component like AppHeaderComponent and then use it in the template. This is the only way I can think of, but it throws a ExpressionChangedAfterItHasBeenCheckedError (quite obvious for everyone who understand Angular's CD resolution algorithm really good, but hard to understand for everyone else), for example \r\n\r\n> ERROR Error: NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value for 'attr.aria-labelledby': 'mat-tab-link-4'. Current value: 'mat-tab-link-2'. Expression location: TabNavBarBasicExample component.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/udrwuw?file=src%2Fexample%2Ftab-nav-bar-basic-example.html\r\nSteps to reproduce:\r\n1. Open developer console in browser\r\n2. Click around on the Nav Items\r\n3. Observe error in developer console\r\n\n\n### Expected Behavior\n\nNo error. I suggest simply making tabPanel optional like stated in Documentation, but of course would be nice to have a good solution to use mat-tab-nav-bar in a wrapper component\n\n### Actual Behavior\n\nExpressionChangedAfterItHasBeenCheckedError\n\n### Environment\n\n- Angular: 16+\r\n- CDK/Material: 16+ aka MDC \r\n- Browser(s): any\r\n- Operating System (e.g. Windows, macOS, Ubuntu): any\r\n","Url":"https://github.com/angular/components/issues/28379","RelatedDescription":"Open issue \"bug(Tabs): ExpressionChangedAfterItHasBeenCheckedError when providing MatTabNavPanel to tabPanel input of mat-tab-nav-bar\" (#28379)"},{"Id":"2067636442","IsPullRequest":false,"CreatedAt":"2024-01-05T16:20:24","Actor":"vitale232","Number":"28378","RawContent":null,"Title":"bug(MatAutocomplete): When setting `MatAutocomplete.requireSelection = true`  and using the `MatAutocomplete.displayWith` input parameter, the `MatInput`'s `FormControl.valueChanges` observable does not emit values on text input, only on value selection","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the `MatAutcomplete` with the input property `requireSelection` set to `true`, everything works as expected for the simple case (filtering an array of strings).\r\n\r\nWhen setting `requireSelection` to `true` while _also_ using the `MatAtocomplete.dispalyWith` input property, the `FormControl.valueChanges` observable on the `MatInput` instance only fires when an element is selected from the list. When the user types into the keyboard, the observable does not fire, thus the suggestions do not filter.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ea5mfd?file=src%2Fexample%2Fautocomplete-display-example.html\r\nSteps to reproduce:\r\n1. Focus on the input in the example.\r\n2. Start typing. You'll notice that the list does not filter, and the `pre` element below the input still has a value of null\r\n3. Select a value from the list with the keyboard or the mouse. You'll see that the `valueChanges` trigger, and the `pre` element contains our \"complex object\"\r\n\n\n### Expected Behavior\n\nI would expect typing in the input would trigger `valueChanges` with the text that's been input, similar to how it works when the `requireSelection` property is set to false. \r\n\r\nAdditionally, I would expect that entering a value that is not present in the list would result in no changes to the selected value, as documented by the `requireSelection` documentation, even when it's used in conjunction with `displayWith`\n\n### Actual Behavior\n\nWhen using `displayWith` in conjunction with `requireSelection`, the input `valueChanges` are only triggered by selecting a value from the list manually. Typing changes into the input _does not_ fire the observable. \n\n### Environment\n\n- Angular: 17.0.4\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): N/A\r\n","Url":"https://github.com/angular/components/issues/28378","RelatedDescription":"Open issue \"bug(MatAutocomplete): When setting `MatAutocomplete.requireSelection = true`  and using the `MatAutocomplete.displayWith` input parameter, the `MatInput`'s `FormControl.valueChanges` observable does not emit values on text input, only on value selection\" (#28378)"},{"Id":"2067437291","IsPullRequest":false,"CreatedAt":"2024-01-05T14:31:40","Actor":"maxime1992","Number":"28377","RawContent":null,"Title":"bug(MatDialog): When creating a dialog from APP_INITIALIZER the MAT_DIALOG_DATA is always undefined","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen creating a dialog from APP_INITIALIZER the MAT_DIALOG_DATA is always undefined.\r\n\n\n### Reproduction\n\nThe code I've got:\r\n\r\n```typescript\r\nbootstrapApplication(App, {\r\n  providers: [\r\n    importProvidersFrom(MatDialogModule),\r\n    {\r\n      provide:APP_INITIALIZER,\r\n      multi:true,\r\n      useFactory: (dialog:MatDialog) => {\r\n        dialog.open(DialogComponent, {\r\n          data: {\r\n            helloWorld: true,\r\n          },\r\n        });\r\n        return () => true\r\n      },\r\n      deps:[MatDialog]\r\n    }\r\n  ],\r\n});\r\n```\r\n\r\nAnd my dialog component looks like this:\r\n\r\n```typescript\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class DialogComponent {\r\n  @Inject(MAT_DIALOG_DATA) public dialogData: any;\r\n\r\n  constructor() {\r\n    console.log({ dialogData: this.dialogData }); // this is always `undefined`\r\n  }\r\n}\r\n```\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-hbwckt?file=src%2Fmain.ts\r\n\r\nThen look at the console or the view where I've put a `| json` to debug.\r\n\n\n### Expected Behavior\n\nBeing able to access the data passed to a dialog.\n\n### Actual Behavior\n\nData is always undefined.\n\n### Environment\n\n- Angular: `17.0.8`\r\n- CDK/Material: `17.0.4`\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28377","RelatedDescription":"Closed issue \"bug(MatDialog): When creating a dialog from APP_INITIALIZER the MAT_DIALOG_DATA is always undefined\" (#28377)"},{"Id":"2067068880","IsPullRequest":false,"CreatedAt":"2024-01-05T10:06:24","Actor":"webmichelle","Number":"28376","RawContent":null,"Title":"bug(mat-progress-spinner): stroke-width of svg circle not calculated properly for some diameter + strokeWidth values","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe `circle` element of the `mat-progress-spinner`'s SVG does not fill up to the whole space of it's container. This only occurs for some combinations of `strokeWidth` and `diameter` inputs and only if the `stokeWidth` is smaller than 10.  \r\n\r\nE.g. for the values of `diameter=10` and `strokeWidth=5` the circle's `stroke-width` style is calculated to be `20.8333%` which is not filling up to the edge of the SVG container:    \r\n![image](https://github.com/angular/components/assets/25979251/3b88b29a-5d6e-4cea-965f-237c41f3b03c)    \r\n\r\n\r\nIf the value of the circle's `stroke-width` is manually set to ~26%, it fits:   \r\n![image](https://github.com/angular/components/assets/25979251/19f5cd26-8cfe-4236-88c3-30003d960ea0)\r\n\r\n\r\n\n\n### Reproduction\n\n[StackBlitz link](https://stackblitz.com/edit/cxwm1t?file=src%2Fexample%2Fprogress-spinner-configurable-example.html,src%2Fexample%2Fprogress-spinner-configurable-example.html)   \r\n\r\nSteps to reproduce:\r\n1. Use mat-progress-spinner\r\n2. Set strokeWidth to value < 10 \r\n3. Set diameter to e.g. 24\r\n\n\n### Expected Behavior\n\nThe SVG's `circle` element should fill up the whole space of its container element\n\n### Actual Behavior\n\nThe SVG's `circle` element does not fill up the whole space of its container element and leaves some space in between\n\n### Environment\n\n- Angular: 17.0.7\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu","Url":"https://github.com/angular/components/issues/28376","RelatedDescription":"Open issue \"bug(mat-progress-spinner): stroke-width of svg circle not calculated properly for some diameter + strokeWidth values\" (#28376)"},{"Id":"2066995981","IsPullRequest":true,"CreatedAt":"2024-01-05T09:19:34","Actor":"crisbeto","Number":"28375","RawContent":null,"Title":"feat(material-experimental/theming): add M3 button tokens","State":"open","Body":"Sets up the tokens for the M3 buttons.\r\n\r\n**Note:** the button shape doesn't show up at the moment. It'll be fixed once #28373 lands.","Url":"https://github.com/angular/components/pull/28375","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 button tokens\" (#28375)"},{"Id":"2066784696","IsPullRequest":true,"CreatedAt":"2024-01-05T08:22:59","Actor":"crisbeto","Number":"28374","RawContent":null,"Title":"refactor(material/button): emit button tokens at the root","State":"closed","Body":"Reworks the button theme to emit the non-palette tokens at the root.","Url":"https://github.com/angular/components/pull/28374","RelatedDescription":"Closed or merged PR \"refactor(material/button): emit button tokens at the root\" (#28374)"},{"Id":"2066770228","IsPullRequest":true,"CreatedAt":"2024-01-05T05:52:12","Actor":"crisbeto","Number":"28373","RawContent":null,"Title":"Button token fixes","State":"open","Body":"* Moves the base tokens of the button to the theme, rather than the structural styles. This is necessary for M3.\r\n* Emits the non-palette button tokens at the root of the theme.","Url":"https://github.com/angular/components/pull/28373","RelatedDescription":"Open PR \"Button token fixes\" (#28373)"},{"Id":"2066553086","IsPullRequest":false,"CreatedAt":"2024-01-05T00:33:40","Actor":"gregworking","Number":"28372","RawContent":null,"Title":"docs-bug(Homepage): app-support description text reads awkwardly","State":"open","Body":"### Documentation Feedback\n\nAt the bottom of the homepage, in the app-support section, at a particular screen size, the description text reads as\r\n\r\n\"   StackOverflow                               Discord\r\nQuestions tagged with angular-Angular Community on Discord\r\nmaterial or angular-cdk\" \r\n\r\nwhich is incorrect. Please add a few pixels of spacing between elements so that they always read as intended.\r\n<img width=\"446\" alt=\"image\" src=\"https://github.com/angular/components/assets/138836074/295c5a9f-467c-4e97-b4ca-f495537a7f1e\">\r\n\n\n### Affected documentation page\n\nhttps://material.angular.io/","Url":"https://github.com/angular/components/issues/28372","RelatedDescription":"Open issue \"docs-bug(Homepage): app-support description text reads awkwardly\" (#28372)"},{"Id":"2066387214","IsPullRequest":false,"CreatedAt":"2024-01-04T21:54:25","Actor":"marek-aguita","Number":"28371","RawContent":null,"Title":"feat(Toolbar & Tabs): support more density scale levels in Toolbar or Tabs","State":"open","Body":"### Feature Description\r\n\r\nCurrently there are these densities supported for Tabs:\r\n\r\nhttps://github.com/angular/components/blob/a7f87a80a18a62d75a8c5621fd89dbc2cf28a865/src/material/core/tokens/m2/mdc/_tab.scss#L69\r\n\r\n![image](https://github.com/angular/components/assets/15703819/eb7d56e0-9669-4c37-8c95-95f0e93828da)\r\n\r\nand these for Toolbar:\r\n\r\nhttps://github.com/angular/components/blob/a7f87a80a18a62d75a8c5621fd89dbc2cf28a865/src/material/core/tokens/m2/mat/_toolbar.scss#L38\r\n\r\n![image](https://github.com/angular/components/assets/15703819/d86718dd-4303-4e2d-b068-9e737a7464de)\r\n\r\nFrom these `scale levels vs height in pixels` maps we can see that the highest Tabs have their Tab Header 48px high and the lowest Toolbar is 52px high (on desktop). This means these two components never get the same height regardless the density applied.\r\n\r\nIn case they are used next to each other, when Tabs are used as kind of a 'toolbar' on a screen, it causes a visual discrepancy. Here is a demonstration where default 0 density is used for Tabs and -3 density used for Toolbars:\r\n\r\nhttps://stackblitz.com/edit/egbtbh?file=src%2Ftheme.scss\r\n\r\n![image](https://github.com/angular/components/assets/15703819/605962a4-0db7-40cf-832a-7bec85e248fc)\r\n\r\nThis may look as a tiny problem, but the Design, Business or QA departments may have very attentive eyes and report this as a visual bug (as it happened in my team). I am trying to avoid changing the heights with some custom CSS as this is not an approach recommended by Angular Material team as per this section in the official docs: https://material.angular.io/guide/customizing-component-styles#targeting-custom-styles\r\n\r\n![image](https://github.com/angular/components/assets/15703819/534edb36-b9a9-4043-a112-2a3f8c22fa1c)\r\n\r\nTherefore my question is, would it be please possible to add more density scale levels for either Tabs or Toolbar and still be compliant to the Material Design specs? Or maybe the whole use case of having Tabs next to a Toolbar is not correct from the Material Design specs point of view and I should ask our Design department to fix the designs?\r\n\r\n\r\n\r\n### Use Case\r\n\r\n_No response_","Url":"https://github.com/angular/components/issues/28371","RelatedDescription":"Open issue \"feat(Toolbar & Tabs): support more density scale levels in Toolbar or Tabs\" (#28371)"},{"Id":"2066314509","IsPullRequest":true,"CreatedAt":"2024-01-04T20:48:20","Actor":"atscott","Number":"28370","RawContent":null,"Title":"refactor(material/snack-bar): Remove NgZone.onMicrotaskEmpty dependency","State":"open","Body":"`onMicrotaskEmpty` will not emit when an application is using `NoopNgZone`. There wasn't a test around this bit of code when it was added so I can't be completely sure this doesn't break anything. It's unclear to me whether it's meant to wait for rendering or just meant to be async. It's possible that simply making the code execute in the microtask queue will have the same overall effect as before.","Url":"https://github.com/angular/components/pull/28370","RelatedDescription":"Open PR \"refactor(material/snack-bar): Remove NgZone.onMicrotaskEmpty dependency\" (#28370)"},{"Id":"2065410525","IsPullRequest":true,"CreatedAt":"2024-01-04T20:39:04","Actor":"crisbeto","Number":"28366","RawContent":null,"Title":"fix(material/tabs): enable hydration","State":"closed","Body":"Adds a workaround that allows us to enable hydration in the tab group component.","Url":"https://github.com/angular/components/pull/28366","RelatedDescription":"Closed or merged PR \"fix(material/tabs): enable hydration\" (#28366)"},{"Id":"2066275986","IsPullRequest":true,"CreatedAt":"2024-01-04T20:15:57","Actor":"wagnermaciel","Number":"28369","RawContent":null,"Title":"fix(material/slider): m3 ripple color","State":"open","Body":"","Url":"https://github.com/angular/components/pull/28369","RelatedDescription":"Open PR \"fix(material/slider): m3 ripple color\" (#28369)"},{"Id":"2063591160","IsPullRequest":false,"CreatedAt":"2024-01-04T16:33:10","Actor":"MikaStark","Number":"28357","RawContent":null,"Title":"feat(material-date-fns-adapter): add support for date-fns 3","State":"closed","Body":"### Feature Description\n\n`date-fns` 3 is now available (https://blog.date-fns.org/v3-is-out/). It would be great Angular Material supports it in `material-date-fns-adapter` package.\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/28357","RelatedDescription":"Closed issue \"feat(material-date-fns-adapter): add support for date-fns 3\" (#28357)"},{"Id":"2065186368","IsPullRequest":true,"CreatedAt":"2024-01-04T16:33:08","Actor":"crisbeto","Number":"28364","RawContent":null,"Title":"feat(material-date-fns-adapter): support date-fns 3.0","State":"closed","Body":"Adds support for `date-fns` 3 to the date adapter.\r\n\r\nFixes #28357.","Url":"https://github.com/angular/components/pull/28364","RelatedDescription":"Closed or merged PR \"feat(material-date-fns-adapter): support date-fns 3.0\" (#28364)"},{"Id":"2065940659","IsPullRequest":true,"CreatedAt":"2024-01-04T16:16:09","Actor":"wagnermaciel","Number":"28368","RawContent":null,"Title":"fix(material/slider): safari value correction bug","State":"open","Body":"* Fixes an issue where the slider value would sometimes not get immediately corrected on pointerdown in safari.\r\n* This bug only gets triggered when the user triggers a user begins dragging directly on the hidden native inputs slider thumb.","Url":"https://github.com/angular/components/pull/28368","RelatedDescription":"Open PR \"fix(material/slider): safari value correction bug\" (#28368)"},{"Id":"2064003249","IsPullRequest":true,"CreatedAt":"2024-01-04T12:34:23","Actor":"alexfriesen","Number":"28359","RawContent":null,"Title":"build: import sass","State":"closed","Body":"This PR will will use `import` instead of `require` for sass.","Url":"https://github.com/angular/components/pull/28359","RelatedDescription":"Closed or merged PR \"build: import sass\" (#28359)"},{"Id":"2065465484","IsPullRequest":false,"CreatedAt":"2024-01-04T11:56:38","Actor":"vartikaagrawal411","Number":"28367","RawContent":null,"Title":"Issue in Material/Select with ngx-scrollbar","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI need to use ngx scrollbar inside mat select component. For that I am giving \r\nmax-height like this\r\n![image](https://github.com/angular/components/assets/149461813/3cf29e3c-0119-4bd0-8fb3-e2acd0f22833)\r\nand autoHeightDisabled= false  ,\r\n![image](https://github.com/angular/components/assets/149461813/6df3edd6-cc1a-4d51-a1bc-c95bbc2514b3)\r\n\r\nbut, mat select dropdown is not adjusting it's position on top,  and is getting clipped\r\n![image](https://github.com/angular/components/assets/149461813/5cc21532-3db5-4dde-9714-9a4be8cea7d1)\r\n\r\n\r\n\r\n### Reproduction\r\n1. Go to Scroll-event section\r\n2. see the behavior in given dropdown\r\n\r\nStackBlitz link: https://stackblitz.com/edit/ngx-scrollbar-jpa7wb?file=src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.html,src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.module.ts,src%2Fapp%2Fscroll-event-example%2Fscroll-event-example.scss,src%2Fapp%2Fapp.component.html,src%2Fapp%2Fapp.component.css\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nmat select dropdown should adjust itself on top so that content don't get clipped\r\n\r\n### Actual Behavior\r\n\r\nmat select dropdown is not getting adjusted on top and is getting clipped\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.15\r\n- CDK/Material: 16.1.15\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/28367","RelatedDescription":"Closed issue \"Issue in Material/Select with ngx-scrollbar\" (#28367)"},{"Id":"2065234709","IsPullRequest":true,"CreatedAt":"2024-01-04T08:40:47","Actor":"crisbeto","Number":"28365","RawContent":null,"Title":"fix(material/slide-toggle): delete custom typography tokens","State":"open","Body":"Removes the custom typography tokens from the slide toggle since the typography is controlled through the internal MDC form field. This should be a no-op since the token values are the same.","Url":"https://github.com/angular/components/pull/28365","RelatedDescription":"Open PR \"fix(material/slide-toggle): delete custom typography tokens\" (#28365)"},{"Id":"2064789050","IsPullRequest":true,"CreatedAt":"2024-01-03T23:43:52","Actor":"eneajaho","Number":"28363","RawContent":null,"Title":"fix(multiple): add code docs for date adapters standalone APIs","State":"open","Body":"This commit adds docs for the new *provider* functions. \r\n\r\nAlso refactors the code to use these functions directly in the NgModules providers array, so we don't have code repetition.","Url":"https://github.com/angular/components/pull/28363","RelatedDescription":"Open PR \"fix(multiple): add code docs for date adapters standalone APIs\" (#28363)"},{"Id":"2064424980","IsPullRequest":false,"CreatedAt":"2024-01-03T17:49:07","Actor":"bart113","Number":"28362","RawContent":null,"Title":"bug(MatAutocomplete): when using single mat-autocomplete with multiple inputs,  panel does not open in some circumstances and displays incorrect option as selected","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nMatAutocomplete enters a broken state (invisible, but clickable), when the following conditions are met:\r\n* a single `<mat-autocomplete>` instance is used by multiple `<input>`s\r\n* user moves focus between these inputs using a mouse\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/ajkqp1?file=src%2Fexample%2Fautocomplete-simple-example.html\r\n\r\nSteps to reproduce:\r\n1. Open the StackBlitz demo.\r\n2. Click the \"Number 2\" input.\r\n3. Observe that the autocomplete panel is now open.\r\n4. Click the \"Number 1\" input.\n\n### Expected Behavior\n\nThe autocomplete panel for the \"Number 1\" input is now open.\n\n### Actual Behavior\n\nThe autocomplete panel was visible for a brief moment, and then disappeared.\r\n\r\nIn particular, the panel still exists and is clickable, but has `opacity: 0`. This style appears to have been set by the [animation](https://github.com/angular/components/blob/main/src/material/autocomplete/animations.ts#L26) of the panel that has just been closed.\r\n\r\nNote that:\r\n* The bug cannot be observed, if user does not click, but uses Tab to navigate between the `<input>` fields.\r\n* The panel works correctly in Angular Material 17, if every input has its own `<mat-autocomplete>` defined. [Demo](https://stackblitz.com/edit/ajkqp1-fgaxvw?file=src%2Fexample%2Fautocomplete-simple-example.html).\r\n* Using a single `<mat-autocomplete>` for multiple `<input>`s used to work in Angular Material 14.2.7. [Demo](https://stackblitz.com/edit/pcajwp?file=src%2Fapp%2Fautocomplete-simple-example.html).\r\n\n\n### Environment\n\n- Angular: 17.0.0\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome 120.0.6099.129\r\n- Operating System: Linux\r\n","Url":"https://github.com/angular/components/issues/28362","RelatedDescription":"Open issue \"bug(MatAutocomplete): when using single mat-autocomplete with multiple inputs,  panel does not open in some circumstances and displays incorrect option as selected\" (#28362)"},{"Id":"2064368492","IsPullRequest":false,"CreatedAt":"2024-01-03T17:07:49","Actor":"GhoshWorld","Number":"28361","RawContent":null,"Title":"\"Select/Unselect\" event for mat-tab-group","State":"open","Body":"### Feature Description\r\n\r\nIn this mat-tab-group, I need a \"Select Unselect\" event for same tab. When I select the tab the tab is fully selected and the page is properly routing but when I go to sub-route on this same page then the page changes but the tab remains selected. At that time I want the tab to be unselected or the event is deleted.\r\n","Url":"https://github.com/angular/components/issues/28361","RelatedDescription":"Open issue \"\"Select/Unselect\" event for mat-tab-group\" (#28361)"},{"Id":"2064126549","IsPullRequest":false,"CreatedAt":"2024-01-03T14:25:25","Actor":"Kmaczek","Number":"28360","RawContent":null,"Title":"bug(Datepicker): In multi-year view, date picker doesnt announce selected year range","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nSteps to reproduce:\r\n1. Open multi year view.\r\n![image](https://github.com/angular/components/assets/1743813/1ad1c08f-8d7c-4ebb-b7d3-51a0e0b7efad)\r\n3. Tab to previous (or next) arrow and press enter.\r\n![image](https://github.com/angular/components/assets/1743813/2b0d5fcd-6cf2-44b2-bb0f-8e8d8fc64e4b)\r\n4. Observe that, displayed year range is updated, but it's not announced\r\n5. Tab back to the year range (incorrectly announced for firefox)\r\n![image](https://github.com/angular/components/assets/1743813/18e19d9e-8950-4301-8491-fc957b5b0bb3)\r\n\r\n\r\n![image](https://github.com/angular/components/assets/1743813/1c7e28c5-7c4c-4adb-a9e9-f12fb90d68f8)\r\n\n\n### Reproduction\n\nCan be reproduced on documentation page: https://material.angular.io/components/datepicker/overview#accessibility with basic datepicker example (first one)\r\nI checked it for versions 17.0.4 and 16.2.12, 15.2.9, 14.2.7 and 12.2.13\r\n\r\nI used NVDA, Jaws, Firefox, Chrome\r\n\r\n\n\n### Expected Behavior\n\n- **Related to Repro step no. 3**: Announce change of year range. \r\n![image](https://github.com/angular/components/assets/1743813/f2ecd099-9e9d-42e2-87ec-cc55c43034ee)\r\n\r\n\r\n- **Related to Repro step no. 4**: Announce '1992 to 2015'\n\n### Actual Behavior\n\n- **Related to Repro step no. 3**: Visual changes should be announced to the user. This doesn't happen since version 15.\r\nHappens for both JAWS/NVDA and Chrome/Firefox\r\n\r\n- **Related to Repro step no. 4**:  its announcing previous range '2016 to 2039', instead announcing '1992 to 2015' according to displayed label. This happens for Firefox only.\n\n### Environment\n\n- Angular: 16.1.3 (any after 14)\r\n- CDK/Material: 16.1.3 (any after 14)\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28360","RelatedDescription":"Open issue \"bug(Datepicker): In multi-year view, date picker doesnt announce selected year range\" (#28360)"},{"Id":"2062764531","IsPullRequest":true,"CreatedAt":"2024-01-03T13:00:04","Actor":"programmerkgit","Number":"28353","RawContent":null,"Title":"fix(guides/theming.md) Typo fix of theming.md","State":"closed","Body":"I guess the word \"us\" might be a typo of \"use\". \r\n\r\n\r\n### Seems wrong passage\r\n\r\nThe recommended approach is to rely on the `theme` mixins to lay down your base styles, and if needed _**us**_ the single dimension mixins to override particular aspects for parts of your app (see the section on...\r\n","Url":"https://github.com/angular/components/pull/28353","RelatedDescription":"Closed or merged PR \"fix(guides/theming.md) Typo fix of theming.md\" (#28353)"},{"Id":"2063649264","IsPullRequest":false,"CreatedAt":"2024-01-03T09:53:47","Actor":"MikaStark","Number":"28358","RawContent":null,"Title":"feat(icon): provide standalone-friendly APIs for icon registry testing","State":"open","Body":"### Feature Description\r\n\r\nIt would be nice to have a standalone `provideFakeIconRegistry` function to provide the `MatIconRegistry` with `FakeMatIconRegistry` as a replacement for using `MatIconTestingModule`.\r\n\r\nThis feature request is motivated by the want to enforce standalone APIs way of doing.\r\n\r\nJust like the effort made in this commit : https://github.com/angular/components/commit/7840cd3a779b6e7388971e279bd60de2bcb1e89b\r\n\r\n\r\n\r\n### Use Case\r\n\r\nReplace :\r\n```ts\r\nTestBed.configureTestingModule({\r\n  imports: [MatIconTestingModule, /* ... */],\r\n  // ...\r\n})\r\n\r\n// OR\r\n\r\nTestBed.configureTestingModule({\r\n  providers: [\r\n    //...\r\n   {\r\n      provide: MatIconRegistry,\r\n      useClass: FakeMatIconRegistry,\r\n    },\r\n  ],\r\n  // ...\r\n})\r\n```\r\n\r\nBy :\r\n```ts\r\nTestBed.configureTestingModule({\r\n  providers: [provideFakeIconRegistry(), /* ... */],\r\n  // ...\r\n})\r\n```","Url":"https://github.com/angular/components/issues/28358","RelatedDescription":"Open issue \"feat(icon): provide standalone-friendly APIs for icon registry testing\" (#28358)"},{"Id":"2063567837","IsPullRequest":true,"CreatedAt":"2024-01-03T09:11:53","Actor":"crisbeto","Number":"28356","RawContent":null,"Title":"fix(cdk/table): support hydration","State":"open","Body":"Reworks the table so that it can support hydration. There were a few issues that broke hydration:\r\n1. There wasn't a catch-all `ng-content` slot which meant that the comment nodes representing the table content were dropped, causing an error.\r\n2. The table needs to conditionally wrap some content with native table sections (`thead`,  `tbody` etc.) which was done with direct DOM manipulation. This breaks hydration because Angular won't know about those elements.\r\n\r\nThe first issue is easily resolved by adding an `ng-content` element. It shouldn't affect existing tables, since all the projected content is composed of comment nodes.\r\n\r\nThe second issue is a bit trickier, because we were using content queries to resolve the individual table outlets. Wrapping them in a conditional breaks the query so we have to use something else to resolve them. I've worked around it by using DI which doesn't have the exact same timing, but it appears to be close enough.\r\n\r\nFixes #28355.","Url":"https://github.com/angular/components/pull/28356","RelatedDescription":"Open PR \"fix(cdk/table): support hydration\" (#28356)"},{"Id":"2062874647","IsPullRequest":false,"CreatedAt":"2024-01-02T19:53:34","Actor":"tsenguunchik","Number":"28355","RawContent":null,"Title":"bug(mat-table): Mat Table has skip hydration attribute","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've noticed a lot of material components have ngSkipHydration attribute present such as mat-table. \r\n\r\nThe sidenav component fixed this issue recently in https://github.com/angular/components/pull/28340 and I'm very grateful. Hoping to see all the rest of the components have this fix.\n\n### Reproduction\n\nSteps to reproduce:\r\n1. ng new example --ssr\r\n2. add mat-table \r\n\n\n### Expected Behavior\n\nHydration working as expected when using mat-table\n\n### Actual Behavior\n\nI still see double flicker rendering which means the hydration is not properly working\n\n### Environment\n\n- Angular: 17.0.8\r\n- CDK/Material: 17.0.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/28355","RelatedDescription":"Open issue \"bug(mat-table): Mat Table has skip hydration attribute\" (#28355)"},{"Id":"2062770770","IsPullRequest":true,"CreatedAt":"2024-01-02T18:08:10","Actor":"kseamon","Number":"28354","RawContent":null,"Title":"perf(cdk/table): Use afterRender hooks","State":"open","Body":"Per Chrome devtools, in the Angular Material devapp, cuts down startup rendering time by about 60ms (~25%). In a real app screen with a single large table, the reduction is ~16%. The main difference is that the change makes a bigger difference when multiple tables are rendering at the same time, since previously separate CoalescedStyleScheduler instances would be grouping tasks separately per-table. Seems to reduce scripting time a smidge as well.","Url":"https://github.com/angular/components/pull/28354","RelatedDescription":"Open PR \"perf(cdk/table): Use afterRender hooks\" (#28354)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-07T03:30:02.3699697Z","RunDurationInMilliseconds":1584}