{"Data":{"Angular-Issues":{"Issues":[{"Id":"1923024939","IsPullRequest":true,"CreatedAt":"2023-10-03T00:02:18","Actor":"alxhub","Number":"51991","RawContent":null,"Title":"fix(core): adjust toSignal types to handle more common cases","State":"open","Body":"This commit cleans up the signatures of `toSignal` to better handle the types of situations that it might be used in, and produce better type inference results.\r\n\r\nFixes #50687\r\nFixes #50591","Url":"https://github.com/angular/angular/pull/51991","RelatedDescription":"Open PR \"fix(core): adjust toSignal types to handle more common cases\" (#51991)"},{"Id":"1922980015","IsPullRequest":true,"CreatedAt":"2023-10-02T23:23:24","Actor":"AndrewKushnir","Number":"51990","RawContent":null,"Title":"build: update domino digest to latest","State":"open","Body":"This commit updates the hash of the Domino fork to the latest.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Build related changes\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51990","RelatedDescription":"Open PR \"build: update domino digest to latest\" (#51990)"},{"Id":"1922957753","IsPullRequest":true,"CreatedAt":"2023-10-02T23:08:03","Actor":"JeanMeche","Number":"51989","RawContent":null,"Title":"fix(service-worker): throw a critical error when handleFetch fail","State":"open","Body":"This commit is a backport to 15.2 of #51960 and #50378 \r\n\r\nThrowing `SwCriticalError` allows the driver to fallback to `safeFetch` and ensure responseWith doesn't fail.\r\n\r\nFixes #50378","Url":"https://github.com/angular/angular/pull/51989","RelatedDescription":"Open PR \"fix(service-worker): throw a critical error when handleFetch fail\" (#51989)"},{"Id":"1922825827","IsPullRequest":true,"CreatedAt":"2023-10-02T22:12:00","Actor":"mmalerba","Number":"51988","RawContent":null,"Title":"WIP: propagate i18n blocks into child templates","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51988","RelatedDescription":"Open PR \"WIP: propagate i18n blocks into child templates\" (#51988)"},{"Id":"1922708763","IsPullRequest":true,"CreatedAt":"2023-10-02T21:02:42","Actor":"ydomenjoud","Number":"51987","RawContent":null,"Title":"Rewrite CSSSelector.parse to prevent wrong or unsupported syntax","State":"open","Body":"fix CssSelector parser for better understanding of how directive's selector works. Prevent unsupported css syntax to be used.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nActual CSSSelector.parse function doesn't parse real CSS.\r\nEvery new coworker i'm training on Angular since 6 years, doesn't understand how directive's selector work, because they keep trying to use valid CSS , for the small proportion of them who understand CSS. The rest just give up with very basic selector. \r\n\r\nI know docs explain how this selector work, but a lot of developer try to cross element boundaries ( despite the documentation ), and the compiler doesn't flinch a bit.\r\n\r\nFor exemple :\r\n* `input[type^=text]` is parsed as `text`\r\n* `.hover input`  is parsed as `input.hover`\r\n* `input > .selected`  , `.selected input` and `input.selected`  are parsed as `input.selected`\r\n\r\nI extracted the actual CSSSelector parser in this github page to show my teams how they can improve their directive's selector : https://ydomenjoud.github.io/angular-selector-parser/ \r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nThe purpose of this pull request is to throw explicit error on wrong, or unsupported selector syntax. With theses errors : \r\n ```\r\n  NotInNot = 'Nesting :not in a selector is not allowed',\r\n  CommaInNot = 'Multiple selectors in :not are not supported',\r\n  PseudoElement = 'Pseudo element are not supported',\r\n  Combinators = 'CSS combinators (> + ~ \"space\" ) are not supported',\r\n  MultipleTagName = 'Multiple tagName are not allowed',\r\n```\r\n\r\nI added unit test to cover this upgrade, add missing test for internal :svg:* syntax ( uncovered before )\r\nAnd removed some NBSP added by previous commit\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ x] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\nWrong Directive syntax which were valid with previous parser will throw error with this new one. \r\nIf this suits you better, I can switch to warning instead.\r\n\r\n## Other information\r\nLove Angular so much for so many years now :)\r\nthanks for all your work\r\n","Url":"https://github.com/angular/angular/pull/51987","RelatedDescription":"Open PR \"Rewrite CSSSelector.parse to prevent wrong or unsupported syntax\" (#51987)"},{"Id":"1922693376","IsPullRequest":true,"CreatedAt":"2023-10-02T20:53:54","Actor":"alxhub","Number":"51986","RawContent":null,"Title":"o16n: primitives code location","State":"open","Body":"Nothing to see here, Enea","Url":"https://github.com/angular/angular/pull/51986","RelatedDescription":"Open PR \"o16n: primitives code location\" (#51986)"},{"Id":"1922643089","IsPullRequest":true,"CreatedAt":"2023-10-02T20:29:05","Actor":"MicahThierry","Number":"51985","RawContent":null,"Title":"Update index.md","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/51985","RelatedDescription":"Closed or merged PR \"Update index.md\" (#51985)"},{"Id":"1922629522","IsPullRequest":true,"CreatedAt":"2023-10-02T20:21:45","Actor":"josephperrott","Number":"51984","RawContent":null,"Title":"[16.2.x] build: update dependency css-selector-parser to v3","State":"open","Body":"patch version of #51983","Url":"https://github.com/angular/angular/pull/51984","RelatedDescription":"Open PR \"[16.2.x] build: update dependency css-selector-parser to v3\" (#51984)"},{"Id":"1922581839","IsPullRequest":true,"CreatedAt":"2023-10-02T19:56:52","Actor":"josephperrott","Number":"51983","RawContent":null,"Title":"build: update dependency css-selector-parser to v3","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51983","RelatedDescription":"Open PR \"build: update dependency css-selector-parser to v3\" (#51983)"},{"Id":"1922386166","IsPullRequest":false,"CreatedAt":"2023-10-02T18:12:08","Actor":"spock123","Number":"51982","RawContent":null,"Title":"[v17 Next 6] Property aliasing in @if possible?","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nHi, I am playing around with the new absolutely mind blowing amazing template syntax, enabled in v17-Next6.\r\n\r\nEspecially the @defer feature is alone a game changer for us.\r\nI do however, have a feature request if it's not already in the works 👍 \r\n\r\nPreviously with `*ngIf` it was possible to create an alias, like this: \r\n\r\n`<ng-container *ngIf=\"my.deep.state.very.deep.objectsignal() as state\">`\r\n\r\nHowever using `@if:`\r\n\r\n`@if( my.deep.state.very.deep.objectsignal() as state) {`\r\n\r\n... throws an error.\r\n\r\nWould this be possible in the future? \r\nThanks a lot for the amazing changes that are coming in\r\n\r\n\n\n### Proposed solution\n\nAllow variable alias\n\n### Alternatives considered\n\nFor now I have to stay with *ngIf as we use this feature extensively throughout the application.","Url":"https://github.com/angular/angular/issues/51982","RelatedDescription":"Closed issue \"[v17 Next 6] Property aliasing in @if possible?\" (#51982)"},{"Id":"1922299111","IsPullRequest":true,"CreatedAt":"2023-10-02T17:55:53","Actor":"crisbeto","Number":"51981","RawContent":null,"Title":"build: fix compilation error due to conflict","State":"closed","Body":"Fixes a compilation error that happened, because a couple of related PRs landed at the same time.\r\n","Url":"https://github.com/angular/angular/pull/51981","RelatedDescription":"Closed or merged PR \"build: fix compilation error due to conflict\" (#51981)"},{"Id":"1920729047","IsPullRequest":false,"CreatedAt":"2023-10-02T16:12:55","Actor":"elgreco247","Number":"51970","RawContent":null,"Title":"@defer: placeholder and loading blocks are not removed by BaseAnimationRenderer (TransitionAnimationEngine)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nanimations\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nThe defer control flow blocks `@placeholder` and `@loading` are not removed when the animation providers are loaded (via `provideAnimations()`).\r\n\r\nThe problem seems to be in the TransitionAnimationEngine, which is called by the BaseAnimationRenderer when a node removal is requested: https://github.com/angular/angular/blob/c4d77fde120ba84874708187ce640bc0b6860f26/packages/animations/browser/src/render/transition_animation_engine.ts#L748\r\nThe host element namespace is `undefined` and thus the node is not removed.\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/stackblitz-starters-s7jtnu?file=src%2Fapp%2Fapp.component.ts\r\n\r\n### Please provide the exception or error you saw\r\n\r\nsee above\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nAngular CLI: 17.0.0-next.6\r\nNode: 18.18.0\r\nPackage Manager: npm 9.4.2\r\nOS: linux x64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\r\n```\r\n\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/51970","RelatedDescription":"Closed issue \"@defer: placeholder and loading blocks are not removed by BaseAnimationRenderer (TransitionAnimationEngine)\" (#51970)"},{"Id":"1920952836","IsPullRequest":true,"CreatedAt":"2023-10-02T16:12:54","Actor":"crisbeto","Number":"51971","RawContent":null,"Title":"fix(core): deferred blocks not removing content immediately when animations are enabled","State":"closed","Body":"Fixes an issue where if animations are enabled, deferred blocks don't remove their placeholder blocks immediately from the DOM. The problem is that we register the event handlers in `afterRender` which runs outside the zone, but the logic that removes the DOM nodes during animations is tied to change detection.\r\n\r\nThese changes resolve the issue by binding the listeners inside the zone. This was the intention from the beginning, I just forgot that `afterRender` runs outside the zone.\r\n\r\nFixes #51970.","Url":"https://github.com/angular/angular/pull/51971","RelatedDescription":"Closed or merged PR \"fix(core): deferred blocks not removing content immediately when animations are enabled\" (#51971)"},{"Id":"1920037821","IsPullRequest":true,"CreatedAt":"2023-10-02T15:35:58","Actor":"AndrewKushnir","Number":"51965","RawContent":null,"Title":"test(core): enable previously failing @defer tests","State":"closed","Body":"This commit re-enables previously flaky tests. The original issue was resolved by mocking `requestIdleCallback` in tests.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Other... Please describe: testing-related changes.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51965","RelatedDescription":"Closed or merged PR \"test(core): enable previously failing @defer tests\" (#51965)"},{"Id":"1921015701","IsPullRequest":false,"CreatedAt":"2023-10-02T15:35:14","Actor":"robertIsaac","Number":"51973","RawContent":null,"Title":"@defer isn't working properly with style and http requests","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nwhen using the new `@defer` I notice that two examples aren't working and I'm not sure why\r\n1. when loading data using http, while the http request does appear in the browser network it's content never show up in the dom\r\n2. the defer component styles aren't implemented at all\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/robertIsaac/first-look-at-angular-defer\n\n### Please provide the exception or error you saw\n\n```true\nyou will find in the repo two branches called `before-defer` and `master`\r\nI expect the two example have the same behavior after and before defer\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.0.0-next.6\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@angular/cdk                    17.0.0-next.5\r\n@angular/material               17.0.0-next.5\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else?\n\nI understand this is still a work in progress, I just wanted to give you test cases to help with the development of this great work you are doing","Url":"https://github.com/angular/angular/issues/51973","RelatedDescription":"Closed issue \"@defer isn't working properly with style and http requests\" (#51973)"},{"Id":"1921069935","IsPullRequest":true,"CreatedAt":"2023-10-02T15:35:13","Actor":"AndrewKushnir","Number":"51975","RawContent":null,"Title":"refactor(core): invoke `@defer (on idle)` callback in NgZone","State":"closed","Body":"Currently, there is no change detection scheduled after triggering `on idle` condition, since `requestIdleCallback` is not patched by Zone.js. This commit invokes the callback in NgZone, so that the code that is invoked within the callback can use zones and a new change detection round is scheduled as needed.\r\n\r\nFixes #51973.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51975","RelatedDescription":"Closed or merged PR \"refactor(core): invoke `@defer (on idle)` callback in NgZone\" (#51975)"},{"Id":"1922090662","IsPullRequest":true,"CreatedAt":"2023-10-02T14:57:30","Actor":"pkozlowski-opensource","Number":"51980","RawContent":null,"Title":"List reconciliation","State":"open","Body":"Draft: needs minor cleanups, mostly around updating and enabling tests that were assuming certain pattern of calls to the trackBy function.","Url":"https://github.com/angular/angular/pull/51980","RelatedDescription":"Open PR \"List reconciliation\" (#51980)"},{"Id":"1921762561","IsPullRequest":true,"CreatedAt":"2023-10-02T11:48:32","Actor":"crisbeto","Number":"51979","RawContent":null,"Title":"Linker fixes to handle @ syntax","State":"open","Body":"Includes some fixes in the linker to parse blocks for libraries compiled with v17 or above and to enable block parsing through the linker. Split into the following commits:\r\n\r\n### fix(compiler): enable block syntax in the linker\r\nAdds some logic to enable parsing of block syntax in the linker. Note that the syntax is only enabled on code compiled with Angular v17 or later.\r\n\r\n### fix(compiler): update the minVersion if component uses block syntax\r\nIncreases the `minVersion` of component declarations that use blocks to v17 in order to indicate to users that they need to update if the library they're using is on the new syntax, while preserving backwards compatibility for libraries that do not use the syntax.","Url":"https://github.com/angular/angular/pull/51979","RelatedDescription":"Open PR \"Linker fixes to handle @ syntax\" (#51979)"},{"Id":"1921704357","IsPullRequest":true,"CreatedAt":"2023-10-02T11:07:46","Actor":"angular-robot","Number":"51978","RawContent":null,"Title":"build: update dependency css-selector-parser to v3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [css-selector-parser](https://togithub.com/mdevils/css-selector-parser) | devDependencies | major | [`^1.4.1` -> `^3.0.0`](https://renovatebot.com/diffs/npm/css-selector-parser/1.4.1/3.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>mdevils/css-selector-parser (css-selector-parser)</summary>\n\n### [`v3.0.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#300-2023-09-26)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.2...v3.0.0)\n\n##### ⚠ BREAKING CHANGES\n\n-   API is backwards incompatible.\n\n##### Migrating from 2.x to 3.x\n\n1.  `Rule.tag` was moved to `Rule.items`.\n\n    Example selector: `div`.\n\n    -   Before: `{type: 'Rule', tagName: {type: 'TagName', name: 'div'}}`\n    -   After: `{type: 'Rule', items: [{type: 'TagName', name: 'div'}]}`\n\n2.  `Rule.classNames` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `.user.hidden`\n\n    -   Before: `{type: 'Rule', classNames: ['user', 'hidden']}`\n    -   After: `{type: 'Rule', items: [{type: 'ClassName', name: 'user'}, {type: 'ClassName', name: 'hidden'}]}`\n\n3.  `Rule.ids` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `#root#user-1`\n\n    -   Before: `{type: 'Rule', ids: ['root', 'user-1']}`\n    -   After: `{type: 'Rule', items: [{type: 'Id', name: 'root'}, {type: 'Id', name: 'user-1'}]}`\n\n4.  `Rule.attributes` was moved to `Rule.items`.\n\n    Example selector: `[href^=/][role]`\n\n    -   Before: `{type: 'Rule', attributes: [{type: 'Attribute', name: 'href', operator: '^=', value: {type: 'String', value: '/'}}, {type: 'Attribute', name: 'role'}]}`\n    -   After: `{type: 'Rule', items: [{type: 'Attribute', name: 'href', operator: '^=', value: {type: 'String', value: '/'}}, {type: 'Attribute', name: 'role'}]}`\n\n5.  `Rule.pseudoClasses` was moved to `Rule.items`.\n\n    Example selector: `:hover:lang(en)`\n\n    -   Before: `{type: 'Rule', pseudoClasses: [{type: 'PseudoClass', name: 'hover'}, {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}]}`\n    -   After: `{type: 'Rule', items: [{type: 'PseudoClass', name: 'hover'}, {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}]}`\n\n6.  `Rule.pseudoElement` was converted to an AST entity and moved to `Rule.items`.\n\n    Example selector: `::before`\n\n    -   Before: `{type: 'Rule', pseudoElement: 'before'}`\n    -   After: `{type: 'Rule', items: [{type: 'PseudoElement', name: 'before'}]}`\n\n##### New AST methods\n\n-   `ast.id` and `ast.isId` to create and test ast nodes with type `Id`.\n-   `ast.className` and `ast.isClassName` to create and test ast nodes with type `ClassName`.\n-   `ast.pseudoElement` and `ast.isPseudoElement` to create and test ast nodes with type `PseudoElement`.\n\n##### New Syntax Definition configuration\n\n-   `pseudoElements.definitions` was updated to accept signatures in otder to support specifying pseudo-elements with\n    an argument.\n    Example: `createParser({syntax: {pseudoElements: {definitions: {NoArgument: ['before'], String: ['highlight'], Selector: ['slotted']}}}})`.\n\n##### Migrating from 1.x to 3.x\n\n##### `CssSelectorParser` -> `createParser`\n\nIn 1.x versions there was `CssSelectorParser` class which had to be contructed and then configured.\nIn 3.x versions there is `createParser()` function which returns a `parse()` function. All the configutation is passed\nto `createParser()` params.\n\nBefore:\n\n```javascript\nvar CssSelectorParser = require('css-selector-parser').CssSelectorParser,\nparser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNumericPseudos('nth-child');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\n\nconst selector = parser.parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\nAfter:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({\n    syntax: {\n        pseudoClasses: {\n            // In 1.x any pseudo-classes were accepted.\n            // in 2.x parser only accepts known psuedo-classes unless `unknown: accept` was specified. \n            unknown: 'accept',\n            definitions: {\n                // This is a replacement for registerSelectorPseudos().\n                Selector: ['has'],\n                // This is a replacement for registerNumericPseudos().\n                Formula: ['nth-child']\n            }\n        },\n        // This is a replacement for registerNestingOperators().\n        combinators: ['>', '+', '~'],\n        attributes: {\n            // This a replacement for registerAttrEqualityMods().\n            // Note that equals sign (\"=\") is included into the operator definitions.\n            operators: ['^=', '$=', '*=', '~=']\n        }\n    },\n    // This is a replacement for enableSubstitutes()\n    substitutes: true\n});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\n-   [All syntax definition options.](docs/interfaces/SyntaxDefinition.md)\n-   [All the psudo-class definition options.](docs/interfaces/SyntaxDefinition.md#pseudoclasses)\n-   [All the attribute definition options.](docs/interfaces/SyntaxDefinition.md#attributes)\n\n##### Predefined CSS syntax definitions\n\nYou no longer need to make an extensive configuration of `css-selector-parser` in order to make it understand\nthe necessary CSS standards. You can now just define CSS/CSS selectors version directly:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3'});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:nth-child(2n + 1)::before');\n```\n\nHere are the pre-defined CSS standards for your disposal:\n\n-   `css1`: https://www.w3.org/TR/CSS1/\n-   `css2`: https://www.w3.org/TR/CSS2/\n-   `css3`/`selectors-3`: https://www.w3.org/TR/selectors-3/\n-   `selectors-4`: https://www.w3.org/TR/selectors-4/\n-   `latest`: refers to `selectors-4`\n-   `progressive`: `latest` + accepts unknown psudo-classes, psudo-elements and attribute case sensitivity modifiers\n\n##### Make sure you use proper `strict` value\n\nCSS selector parser in modern browsers is very forgiving. For instance, it works fine with unclosed attribute\nselectors: `\"[attr=value\"`. If you would like to mimic this behavior from browsers, set `strict` to `false`, i.e.:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3', strict: false});\n\nconst selector = parse(':lang(en'); // doesn't crash\n```\n\n##### Render is now a separate export\n\n`render()` method used to be a method of `CssSelectorParser` class. Now it can be imported directly and used.\n\nExample:\n\n```javascript\nimport {createParser, render} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'progressive'});\n\nconst selector = parse('div#user-123.user:lang(en)::before');\n\nconsole.log(render(selector)); // div#user-123.user:lang(en)::before\n```\n\n##### AST changes\n\nAST had a lot of changes.\n\n##### Selector\n\n[New type info.](docs/interfaces/AstSelector.md)\n\n1.  Type changed: `selector` -> `Selector`.\n2.  Prop changed: `selectors` -> `rules`, also `selectors` contained `ruleSet[]`, which in turn has `rule` field,\n    and new `rules` contains `Rule[]` directly.\n\nBefore: `{type: 'selector', selectors: [ {type: 'ruleSet', rule: {<RULE 1 DATA>}}, {type: 'ruleSet', rule: {<RULE 2 DATA>}} ]}`.\n\nAfter: `{type: 'Selector', rules: [ {<RULE 1 DATA>}, {<RULE 2 DATA>} ]}`.\n\n##### Rule\n\n[New type info.](docs/interfaces/AstRule.md)\n\n1.  Type changed: `rule` -> `Rule`.\n2.  Prop changed: `id: string` -> `items: [{type: 'Id', name: '<ID>'}, ...]`. According to the CSS spec one rule may have\n    more than 1 `id`, so `#root#root` is a valid selector.\n3.  Prop renamed: `nestingOperator` -> `combinator`. A proper name according to CSS spec was chosen.\n4.  Prop renamed: `rule` -> `nestedRule`. A proper name to indicate nesting was chosen.\n5.  Prop changed: `tagName: string` -> `items: [TagName | WildcardTag, ...]`. Using explicit distinction between\n    TagName (i.e. `div`) and WildcardTag (`*`), because tag name can also be `*` if escaped properly (`\\*`).\n6.  Prop changed: `attrs` -> `items: [<ATTRIBUTE>, ...]`. Attribute type was changed, see below.\n7.  Prop changed: `pseudos` -> `items: [<PSEUDO CLASS>, ...]`. There are pseudo-elements and pseudo-classes, now they are\n    separated properly (there is a separate `pseudoElement` type). Pseudo class type was changed, see below.\n\nBefore:\n\n```javascript\n({\n    type: 'rule',\n    tagName: 'div',\n    id: 'user-123',\n    classNames: ['user'],\n    attrs: [\n        {name: 'role', operator: '$=', valueType: 'string', value: 'button'}\n    ],\n    pseudos: [\n        {name: 'lang', valueType: 'string', value: 'en'}\n    ],\n    nestingOperator: '>'\n})\n```\n\nAfter:\n\n```javascript\n({\n    type: 'Rule',\n    items: [\n       {type: 'TagName', name: 'div'},\n       {type: 'Id', name: 'user-123'},\n       {type: 'ClassName', name: 'user'},\n       {type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}},\n       {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}\n    ],\n    combinator: '>'\n})\n```\n\n##### Attribute\n\n[New type info.](docs/interfaces/AstAttribute.md)\n\n1.  Type introduced: `Attribute`.\n2.  Prop `value` and `valueType` were combined to a single prop `value` with a field `type`.\n\n[All possible value types.](docs/interfaces/AstAttribute.md#value)\n\n##### Example 1\n\nBefore: `{name: 'role'}`.\n\nAfter: `{type: 'Attribute', name: 'role'}`.\n\n##### Example 2\n\nBefore: `{name: 'role', operator: '$=', valueType: 'string', value: 'button'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}`.\n\n##### Example 3\n\nBefore: `{name: 'role', operator: '=', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '=', value: {type: 'Substitute', name: 'var'}}`.\n\n##### Pseudo Classes\n\n[New type info.](docs/interfaces/AstPseudoClass.md)\n\n1.  Type introduced: `PseudoClass`.\n2.  Prop `value` and `valueType` were combined to a single prop `argument` with a field `type`.\n\n[All possible argument types.](docs/interfaces/AstPseudoClass.md#argument)\n\n##### Example 1\n\nBefore: `{name: 'visited'}`.\n\nAfter: `{type: 'PseudoClass', name: 'visited'}`.\n\n##### Example 2\n\nBefore: `{name: 'lang', valueType: 'string', value: 'en'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'String', value: 'en'}}`.\n\n##### Example 3\n\nBefore: `{name: 'lang', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'Substitute', name: 'var'}}`.\n\n##### Example 4\n\nBefore: `{name: 'has', valueType: 'selector', value: {type: 'selector', selectors: [{type: 'ruleSet', rule: {type: 'rule', tagName: 'div'}}]}}`.\n\nAfter: `{type: 'PseudoClass', name: 'has', argument: {type: 'Selector', rules: [{type: 'Rule', tag: {type: 'TagName', name: 'div'}}]}}`.\n\n##### Pseudo Elements\n\n[New type info.](docs/interfaces/AstPseudoElement.md)\n\n1.  Type introduced: `PseudoElement`.\n\n[All possible argument types.](docs/interfaces/AstPseudoElement.md#argument)\n\n##### Features\n\n-   upgrade API in order to reflect upcoming complexity in CSS selectors ([cece4df](https://togithub.com/mdevils/css-selector-parser/commit/cece4dff647b19c6211dd6c9defbd7887eca62b5))\n\n##### [2.3.2](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.1...v2.3.2) (2023-06-25)\n\n##### Bug Fixes\n\n-   fix foruma parsing with negative A, closes [#&#8203;28](https://togithub.com/mdevils/css-selector-parser/issues/28) ([824312f](https://togithub.com/mdevils/css-selector-parser/commit/824312fc65a677a78699814ad222af3298afd772))\n-   include js file extension into the mjs build, closes [#&#8203;22](https://togithub.com/mdevils/css-selector-parser/issues/22) ([f50b350](https://togithub.com/mdevils/css-selector-parser/commit/f50b350bd28db0085d4fc05a3f74475c812b05c3))\n-   rendering nested selectors with combinators, closes [#&#8203;27](https://togithub.com/mdevils/css-selector-parser/issues/27) ([40fb434](https://togithub.com/mdevils/css-selector-parser/commit/40fb4345f3d720bf27e6d8a7809ee51e282bc512))\n\n##### [2.3.1](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.0...v2.3.1) (2023-06-24)\n\n##### Bug Fixes\n\n-   fix file inclusion ([925b13a](https://togithub.com/mdevils/css-selector-parser/commit/925b13ad9bf26fcc9620df0678102c40a64fbb78))\n\n### [`v2.3.2`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#232-2023-06-25)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.1...v2.3.2)\n\n### [`v2.3.1`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#231-2023-06-24)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.3.0...v2.3.1)\n\n### [`v2.3.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#230-2023-06-24)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.3...v2.3.0)\n\n##### Features\n\n-   publish hybrid package: CommonJS and ESM modules ([16fd8a1](https://togithub.com/mdevils/css-selector-parser/commit/16fd8a1b1b4b8bc2107ccba5b36b05ea1384b8c2))\n\n### [`v2.2.3`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#221-223)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.2...v2.2.3)\n\n-   Update published docs.\n\n### [`v2.2.2`](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.1...v2.2.2)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.1...v2.2.2)\n\n### [`v2.2.1`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#221-223)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.2.0...v2.2.1)\n\n-   Update published docs.\n\n### [`v2.2.0`](https://togithub.com/mdevils/css-selector-parser/blob/HEAD/CHANGELOG.md#220)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/v2.1.0...v2.2.0)\n\n-   Full refactoring.\n-   Switch to typescript.\n-   Pre-defined CSS syntaxes were included.\n-   The whole AST was documented.\n\n##### Migrating from 1.x\n\n##### `CssSelectorParser` -> `createParser`\n\nIn 1.x versions there was `CssSelectorParser` class which had to be contructed and then configured.\nIn 2.x versions there is `createParser()` function which returns a `parse()` function. All the configutation is passed\nto `createParser()` params.\n\nBefore:\n\n```javascript\nvar CssSelectorParser = require('css-selector-parser').CssSelectorParser,\nparser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNumericPseudos('nth-child');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\n\nconst selector = parser.parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\nAfter:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({\n    syntax: {\n        pseudoClasses: {\n            // In 1.x any pseudo-classes were accepted.\n            // in 2.x parser only accepts known psuedo-classes unless `unknown: accept` was specified. \n            unknown: 'accept',\n            definitions: {\n                // This is a replacement for registerSelectorPseudos().\n                Selector: ['has'],\n                // This is a replacement for registerNumericPseudos().\n                Formula: ['nth-child']\n            }\n        },\n        // This is a replacement for registerNestingOperators().\n        combinators: ['>', '+', '~'],\n        attributes: {\n            // This a replacement for registerAttrEqualityMods().\n            // Note that equals sign (\"=\") is included into the operator definitions.\n            operators: ['^=', '$=', '*=', '~=']\n        }\n    },\n    // This is a replacement for enableSubstitutes()\n    substitutes: true\n});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:lt($var):nth-child(5)');\n```\n\n-   [All syntax definition options.](docs/interfaces/SyntaxDefinition.md)\n-   [All the psudo-class definition options.](docs/interfaces/SyntaxDefinition.md#pseudoclasses)\n-   [All the attribute definition options.](docs/interfaces/SyntaxDefinition.md#attributes)\n\n##### Predefined CSS syntax definitions\n\nYou no longer need to make an extensive configuration of `css-selector-parser` in order to make it understand\nthe necessary CSS standards. You can now just define CSS/CSS selectors version directly:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3'});\n\nconst selector = parse('a[href^=/], .container:has(nav) > a[href]:nth-child(2n + 1)::before');\n```\n\nHere are the pre-defined CSS standards for your disposal:\n\n-   `css1`: https://www.w3.org/TR/CSS1/\n-   `css2`: https://www.w3.org/TR/CSS2/\n-   `css3`/`selectors-3`: https://www.w3.org/TR/selectors-3/\n-   `selectors-4`: https://www.w3.org/TR/selectors-4/\n-   `latest`: refers to `selectors-4`\n-   `progressive`: `latest` + accepts unknown psudo-classes, psudo-elements and attribute case sensitivity modifiers\n\n##### Make sure you use proper `strict` value\n\nCSS selector parser in modern browsers is very forgiving. For instance, it works fine with unclosed attribute\nselectors: `\"[attr=value\"`. If you would like to mimic this behavior from browsers, set `strict` to `false`, i.e.:\n\n```javascript\nimport {createParser} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'css3', strict: false});\n\nconst selector = parse(':lang(en'); // doesn't crash\n```\n\n##### Render is now a separate export\n\n`render()` method used to be a method of `CssSelectorParser` class. Now it can be imported directly and used.\n\nExample:\n\n```javascript\nimport {createParser, render} from 'css-selector-parser';\n\nconst parse = createParser({syntax: 'progressive'});\n\nconst selector = parse('div#user-123.user:lang(en)');\n\nconsole.log(render(selector)); // div#user-123.user:lang(en)\n```\n\n##### AST changes\n\nAST had a lot of changes.\n\n##### Selector\n\n[New type info.](docs/interfaces/AstSelector.md)\n\n1.  Type changed: `selector` -> `Selector`.\n2.  Prop changed: `selectors` -> `rules`, also `selectors` contained `ruleSet[]`, which in turn has `rule` field,\n    and new `rules` contains `Rule[]` directly.\n\nBefore: `{type: 'selector', selectors: [ {type: 'ruleSet', rule: {<RULE 1 DATA>}}, {type: 'ruleSet', rule: {<RULE 2 DATA>}} ]}`.\n\nAfter: `{type: 'Selector', rules: [ {<RULE 1 DATA>}, {<RULE 2 DATA>} ]}`.\n\n##### Rule\n\n[New type info.](docs/interfaces/AstRule.md)\n\n1.  Type changed: `rule` -> `Rule`.\n2.  Prop changed: `id: string` -> `ids: string[]`. According to the CSS spec one rule may have more than 1 `id`,\n    so `#root#root` is a valid selector.\n3.  Prop renamed: `nestingOperator` -> `combinator`. A proper name according to CSS spec was chosen.\n4.  Prop renamed: `rule` -> `nestedRule`. A proper name to indicate nesting was chosen.\n5.  Prop changed: `tagName: string` -> `tag: TagName | WildcardTag`. Using explicit distinction between\n    TagName (i.e. `div`) and WildcardTag (`*`), because tag name can also be `*` if escaped properly (`\\*`).\n6.  Prop changed: `attrs` -> `attributes`. Attribute type was changed, see below.\n7.  Prop changed: `pseudos` -> `pseudoClasses`. There are pseudo-elements and pseudo-classes, now they are separated\n    properly (there is a separate `pseudoElement` property). Pseudo class type was changed, see below.\n\nBefore:\n\n```javascript\n({\n    type: 'rule',\n    tagName: 'div',\n    id: 'user-123',\n    classNames: ['user'],\n    attrs: [\n        {name: 'role', operator: '$=', valueType: 'string', value: 'button'}\n    ],\n    pseudos: [\n        {name: 'lang', valueType: 'string', value: 'en'}\n    ],\n    nestingOperator: '>'\n})\n```\n\nAfter:\n\n```javascript\n({\n    type: 'Rule',\n    tag: {type: 'TagName', name: 'div'},\n    ids: ['user-123'],\n    classNames: ['user'],\n    attributes: [\n        {type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}\n    ],\n    pseudoClasses: [\n        {type: 'PseudoClass', name: 'lang', value: {type: 'String', value: 'en'}}\n    ],\n    combinator: '>'\n})\n```\n\n##### Attribute\n\n[New type info.](docs/interfaces/AstAttribute.md)\n\n1.  Type introduced: `Attribute`.\n2.  Prop `value` and `valueType` were combined to a single prop `value` with a field `type`.\n\n[All possible value types.](docs/interfaces/AstAttribute.md#value)\n\n##### Example 1\n\nBefore: `{name: 'role'}`.\n\nAfter: `{type: 'Attribute', name: 'role'}`.\n\n##### Example 2\n\nBefore: `{name: 'role', operator: '$=', valueType: 'string', value: 'button'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '$=', value: {type: 'String', value: 'button'}}`.\n\n##### Example 3\n\nBefore: `{name: 'role', operator: '=', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'Attribute', name: 'role', operator: '=', value: {type: 'Substitute', name: 'var'}}`.\n\n##### Pseudo Classes\n\n[New type info.](docs/interfaces/AstPseudoClass.md)\n\n1.  Type introduced: `PseudoClass`.\n2.  Prop `value` and `valueType` were combined to a single prop `argument` with a field `type`.\n\n[All possible argument types.](docs/interfaces/AstPseudoClass.md#argument)\n\n##### Example 1\n\nBefore: `{name: 'visited'}`.\n\nAfter: `{type: 'PseudoClass', name: 'visited'}`.\n\n##### Example 2\n\nBefore: `{name: 'lang', valueType: 'string', value: 'en'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'String', value: 'en'}}`.\n\n##### Example 3\n\nBefore: `{name: 'lang', valueType: 'substitute', value: 'var'}`.\n\nAfter: `{type: 'PseudoClass', name: 'lang', argument: {type: 'Substitute', name: 'var'}}`.\n\n##### Example 4\n\nBefore: `{name: 'has', valueType: 'selector', value: {type: 'selector', selectors: [{type: 'ruleSet', rule: {type: 'rule', tagName: 'div'}}]}}`.\n\nAfter: `{type: 'PseudoClass', name: 'has', argument: {type: 'Selector', rules: [{type: 'Rule', tag: {type: 'TagName', name: 'div'}}]}}`.\n\n### [`v2.1.0`](https://togithub.com/mdevils/css-selector-parser/compare/0e517dc411b050964f2a291dcbe2218df9f1ef28...v2.1.0)\n\n[Compare Source](https://togithub.com/mdevils/css-selector-parser/compare/0e517dc411b050964f2a291dcbe2218df9f1ef28...v2.1.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/51978","RelatedDescription":"Open PR \"build: update dependency css-selector-parser to v3\" (#51978)"},{"Id":"1921562569","IsPullRequest":true,"CreatedAt":"2023-10-02T09:31:01","Actor":"Teebo","Number":"51977","RawContent":null,"Title":"Update directives.ts to correct semantic for host keys description","State":"open","Body":"correct semantic for host keys description\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51977","RelatedDescription":"Open PR \"Update directives.ts to correct semantic for host keys description\" (#51977)"},{"Id":"1921396300","IsPullRequest":false,"CreatedAt":"2023-10-02T08:01:05","Actor":"JKAngular","Number":"51976","RawContent":null,"Title":"How to resolve this?","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nI am facing this issue when I run angular project \r\n\r\nError:\r\n\r\n opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],\r\n  library: 'digital envelope routines',\r\n  reason: 'unsupported',\r\n  code: 'ERR_OSSL_EVP_UNSUPPORTED'\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nHow to resolve this issue\r\n\r\n opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],\r\n  library: 'digital envelope routines',\r\n  reason: 'unsupported',\r\n  code: 'ERR_OSSL_EVP_UNSUPPORTED'\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI :16.2.0\r\n\r\nNode :V18.13.0\n```\n\n\n### Anything else?\n\n opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],\r\n  library: 'digital envelope routines',\r\n  reason: 'unsupported',\r\n  code: 'ERR_OSSL_EVP_UNSUPPORTED'","Url":"https://github.com/angular/angular/issues/51976","RelatedDescription":"Closed issue \"How to resolve this?\" (#51976)"},{"Id":"1921020385","IsPullRequest":true,"CreatedAt":"2023-10-01T23:04:33","Actor":"AndrewKushnir","Number":"51974","RawContent":null,"Title":"refactor(core): add support for `on timer` trigger in `@defer` blocks","State":"open","Body":"This commit adds the logic to support `on timer` triggers in `@defer` blocks in both rendering and prefetching conditions.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51974","RelatedDescription":"Open PR \"refactor(core): add support for `on timer` trigger in `@defer` blocks\" (#51974)"},{"Id":"1920989585","IsPullRequest":true,"CreatedAt":"2023-10-01T21:43:59","Actor":"Erbenos","Number":"51972","RawContent":null,"Title":"fix(router): propagate resolver data to children even when their 'runGuardsAndResolvers' returns false","State":"open","Body":"## PR Checklist\r\n\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: #51934\r\n\r\n## What is the new behavior?\r\n\r\nThe resolver data is propagated to all the child routes of the route that own the given resolver, except for when it would override either different resolver thats configured under the same key or a static data thats defined under the same key.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\nNot sure, I guess some people may have depended on old / incorrect behavior? Probably unlikely.\r\n\r\n- [X] Yes\r\n- [ ] No\r\n\r\nData of the routes down the tree originating from the node that declares the resolvers now actually inherits data according to the paramsInheritanceStrategy.","Url":"https://github.com/angular/angular/pull/51972","RelatedDescription":"Open PR \"fix(router): propagate resolver data to children even when their 'runGuardsAndResolvers' returns false\" (#51972)"},{"Id":"1920615484","IsPullRequest":true,"CreatedAt":"2023-10-01T07:27:01","Actor":"crisbeto","Number":"51969","RawContent":null,"Title":"build: align schematics tsconfig with rest of the project","State":"open","Body":"Adds `noPropertyAccessFromIndexSignature` to the tsconfig of the schematics in order to align it with the rest of the project.","Url":"https://github.com/angular/angular/pull/51969","RelatedDescription":"Open PR \"build: align schematics tsconfig with rest of the project\" (#51969)"},{"Id":"1920382564","IsPullRequest":false,"CreatedAt":"2023-10-01T07:12:54","Actor":"aialok","Number":"51967","RawContent":null,"Title":"Replace twitter logo with 'X' logo in the homepage of Angular","State":"closed","Body":"### Describe the problem that you experienced\n\nIt is not a problem. Just little amendment in twiiter logo with X logo on the homepage of angular \n\n### Enter the URL of the topic with the problem\n\n_No response_\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n![twitter logo should change on homepage](https://github.com/angular/angular/assets/66772290/c933dce5-0b77-4b20-b2e1-42affeca3789)\r\n\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/51967","RelatedDescription":"Closed issue \"Replace twitter logo with 'X' logo in the homepage of Angular\" (#51967)"},{"Id":"1920423431","IsPullRequest":true,"CreatedAt":"2023-09-30T22:52:39","Actor":"wardbell","Number":"51968","RawContent":null,"Title":"docs: Phase2 - convert providers sample to Standalone","State":"open","Body":"The `providers.md` page that goes with the `providers` sample code is listed in NgModules section. It seems to be the NgModule version of `dependency-injection-providers.md`.\r\n\r\nI didn’t realize that this guide was in the NgModules section until AFTER I had converted the sample code to Standalone and modified the text of `providers.md`.\r\n\r\nIn so doing, I improved the sample to show how to provide services in a route setup. This is actually working code, unlike the markdown version in `guide/standalone-components.md` !!!\r\n\r\nOverall, I think the text and code changes are an improvement, properly inform the NgModules reader, and should be incorporated in the updated docs.\r\n\r\nHowever, should you disagree, you can easily discard these changes as this commit is in its own PR.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/51968","RelatedDescription":"Open PR \"docs: Phase2 - convert providers sample to Standalone\" (#51968)"},{"Id":"1920002132","IsPullRequest":true,"CreatedAt":"2023-09-30T22:24:24","Actor":"dylhunn","Number":"51963","RawContent":null,"Title":"Template Pipeline: Don't emit properties on structural `ng-template`s","State":"closed","Body":"Consider an `ng-template` which is generated as a result of a structural directive:\r\n\r\n```\r\n<div *ngFor=\"let inner of items\"\r\n             (click)=\"onClick(inner)\"\r\n             [title]=\"getTitle()\"\r\n             >\r\n```\r\n\r\nThis should logically expand into something like the following:\r\n\r\n```\r\n<ng-template [ngForOf]=\"...\" >\r\n        <div (click)=\"...\" [title]=\"...\"></div>\r\n</ng-template>\r\n```\r\n\r\nNote that the `(click)` handler and the `[title]` property are only present on the inner div, *not* on the enclosing generated `ng-template`.\r\n\r\nPreviously, Template Pipeline would place these bindings on *both* the tempate and the inner element.\r\n\r\nHowever, we can't just remove them completely, because these bindings should still be matchable on the generated `ng-template` (which is very surprising, but nonetheless true).\r\n\r\nWe resolve this issue with two improvements:\r\n(1) The ingestion step is now much smarter about determining not only if a binding is on a template element, but whether it actually targets that template element.\r\n(2) We use `ExtractedAttributeOp` directly, rather than going through `BindingOp`, to cause the `ng-template` to still receive these bindings in its `consts` array for matching purposes.","Url":"https://github.com/angular/angular/pull/51963","RelatedDescription":"Closed or merged PR \"Template Pipeline: Don't emit properties on structural `ng-template`s\" (#51963)"},{"Id":"1920290296","IsPullRequest":true,"CreatedAt":"2023-09-30T15:03:41","Actor":"angular-robot","Number":"51966","RawContent":null,"Title":"docs: update events","State":"open","Body":"Generated `events.json` with the latest events retrieved from the Firebase DB.\n\nCloses #51955","Url":"https://github.com/angular/angular/pull/51966","RelatedDescription":"Open PR \"docs: update events\" (#51966)"},{"Id":"1920027968","IsPullRequest":true,"CreatedAt":"2023-09-30T00:10:05","Actor":"AndrewKushnir","Number":"51964","RawContent":null,"Title":"refactor(core): allow nested @defer block to contain the same dependency","State":"open","Body":"Currently, if there are 2 nested `@defer` blocks with the same dependency, Angular throws an error at runtime to indicate that there was a duplicate component def in the registry. This commit updates the logic to only append dependencies when they didn't previously exist in the registry.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/51964","RelatedDescription":"Open PR \"refactor(core): allow nested @defer block to contain the same dependency\" (#51964)"},{"Id":"1919974747","IsPullRequest":true,"CreatedAt":"2023-09-29T22:23:59","Actor":"angular-robot","Number":"51962","RawContent":null,"Title":"docs: update Angular CLI help [main]","State":"closed","Body":"Updated Angular CLI help contents.","Url":"https://github.com/angular/angular/pull/51962","RelatedDescription":"Closed or merged PR \"docs: update Angular CLI help [main]\" (#51962)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1922979740","IsPullRequest":false,"CreatedAt":"2023-10-02T23:23:12","Actor":"apangr","Number":"25936","RawContent":null,"Title":"Tests don't run in Angular 16 using Jasmine/Karma","State":"open","Body":"### Command\r\n\r\ntest\r\n\r\n### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n15\r\n\r\n### Description\r\n\r\nThe project compiles well, and the tests worked in version 15 of Angular. After running `ng test` I am receiving the following error:\r\n\r\n `ng-virtual-main.js!=!data:text/javascript;base64 ...Unknown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unknown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nAfter running `ng test` I am receiving the following error:\r\n\r\n `ng-virtual-main.js!=!data:text/javascript;base64 ...Unknown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unknown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n\r\n### Exception or Error\r\n\r\n```text\r\n`ng-virtual-main.js!=!data:text/javascript;base64 ...Unkown string like token - Error: Module build failed (from ./node_modules/@ngtools/webpack/src/ivy/index.js):  ...Unkown string like token s missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.`\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nnpm ls @ngtools/webpack\r\n\r\n`└─┬ @angular-devkit/build-angular@16.2.4\r\n  └── @ngtools/webpack@16.2.4`\r\n\r\nng version \r\n\r\n`Angular CLI: 16.2.4\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: linux x64\r\n\r\nAngular: 16.2.7\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1602.4\r\n@angular-devkit/build-angular        16.2.4\r\n@angular-devkit/core                 16.2.4\r\n@angular-devkit/schematics           16.2.4\r\n@angular/cdk                         16.2.6\r\n@angular/cli                         16.2.4\r\n@angular/material                    16.2.6\r\n@angular/material-date-fns-adapter   16.2.6\r\n@schematics/angular                  16.2.4\r\nrxjs                                 7.5.7\r\ntypescript                           4.9.3\r\nzone.js                              0.13.3\r\n`\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25936","RelatedDescription":"Open issue \"Tests don't run in Angular 16 using Jasmine/Karma\" (#25936)"},{"Id":"1921687060","IsPullRequest":true,"CreatedAt":"2023-10-02T13:30:30","Actor":"alan-agius4","Number":"25934","RawContent":null,"Title":"fix(@schematics/angular): remove `baseUrl` from `tsconfig.json`","State":"closed","Body":"The `baseUrl` is no longer needed since NGCC has been removed. This also enables better auto-import suggestions.\r\n\r\nCloses #18834\r\n","Url":"https://github.com/angular/angular-cli/pull/25934","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): remove `baseUrl` from `tsconfig.json`\" (#25934)"},{"Id":"1921521370","IsPullRequest":true,"CreatedAt":"2023-10-02T13:30:03","Actor":"alan-agius4","Number":"25933","RawContent":null,"Title":"feat(@schematics/angular): add migration to replace usages of `@nguniversal/builders`","State":"closed","Body":"This migration replaces usages of `@nguniversal/builders` with `@angular-devkit/build-angular`.","Url":"https://github.com/angular/angular-cli/pull/25933","RelatedDescription":"Closed or merged PR \"feat(@schematics/angular): add migration to replace usages of `@nguniversal/builders`\" (#25933)"},{"Id":"1921718288","IsPullRequest":false,"CreatedAt":"2023-10-02T11:17:17","Actor":"vbraun","Number":"25935","RawContent":null,"Title":"ESbuild slower incremental rebuilds","State":"open","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nIncremental rebuilds with the new `@angular-devkit/build-angular:browser-esbuild` are a bit slower for us than the old webpack dev server, especially for minor changes at the leaves of the import graph. This is unexpected as esbuild's sole raison d'être is to be fast ;)\r\n\r\nIt is understood that the first incremental rebuild is slower than subsequent rebuilds, so for all tests we tigger the incremental build multiple times until times stabilize.\r\n\r\nOur app has >1000 components in >100 libraries. For testing, I just `touch` a typescript file in a feature library. So very few files should have to be recompiled & rebundled. With esbuild I get 11 sec for incremental builds, with webpack 9 seconds. \r\n\r\nLooking at running processes I see esbuild pegging most CPU cores at 100% for most of the time during the incremental rebuild. This seems to be corroborated by enabling `NG_BUILD_DEBUG_PERF`, which only logs negligible times:\r\n```\r\n$ NG_BUILD_DEBUG_PERF=1 ng build\r\n⠋ Changes detected. Rebuilding...One or more browsers which are configured in the project's Browserslist configuration will be ignored as ES5 output is not supported by the Angular CLI.\r\nIgnored browsers: kaios 2.5, op_mini all\r\nDURATION[NG_READ_CONFIG]: 0.018551948s\r\nDURATION[NG_CREATE_PROGRAM]: 0.237099920s\r\n⠙ Changes detected. Rebuilding...\r\n  mobile-list-view.component.css  284b \r\n\r\n⚡ Done in 0ms\r\nDURATION[NG_ANALYZE_PROGRAM]: 0.616578717s\r\nDURATION[NG_FIND_AFFECTED]: 0.000006410s\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.021461028s\r\nDURATION[NG_EMIT_TS]: 0.064279846s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.001562300s [count: 11431; avg: 0.000000137s; min: 0.000000070s; max: 0.000005060s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.004640593s [count: 11431; avg: 0.000000406s; min: 0.000000100s; max: 0.000057390s]\r\nDURATION[NG_EMIT_JS*]: 0.002667022s [count: 34; avg: 0.000078442s; min: 0.000003780s; max: 0.000820767s]\r\n⠸ Changes detected. Rebuilding...\r\n[... snip chunks output...]\r\nApplication bundle generation complete. [11.095 seconds]\r\n```\r\n\r\nWhat is esbuild doing? Unfortunately there is no official profiling support, but it seems there is a lot of filesystem churn. When attaching strace to the running esbuild server (pid 698557 here), I get a surprising number of stat calls. For starters:\r\n```\r\nstrace -f -p 698557 |& grep /home/vbraun/frontend/package.json\r\n[pid 698634] newfstatat(AT_FDCWD, \"/home/vbraun/frontend/package.json\",  <unfinished ...>\r\n[...]\r\n```\r\ngives 71083 `stat()` calls to the `package.json` file from the different PIDs of esbuild's thread pool, each time an incremental build is triggered. Stat should run in a few microseconds but that alone probably adds up to more than 0.1s. \r\n\r\nThis is how far I have gotten debugging this..\r\n\r\n### Minimal Reproduction\r\n\r\nThis is a private repo but others have reported the same: https://github.com/angular/angular-cli/issues/25130#issuecomment-1684157200\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\n$ npx ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 16.2.3\r\nNode: 16.18.1\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, router, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cdk                    16.2.5\r\n@angular/cli                    16.2.3\r\n@angular/material               16.2.5\r\n@schematics/angular             15.2.6\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n* Fedora 38 x86_64, btrfs\r\n* Ryzen 7900X 12-Core Processor, 64 GB RAM, nvme SSD\r\n* Using `NODE_OPTIONS=--max_old_space_size=8192` to avoid memory bottlenecks","Url":"https://github.com/angular/angular-cli/issues/25935","RelatedDescription":"Open issue \"ESbuild slower incremental rebuilds\" (#25935)"},{"Id":"1921373596","IsPullRequest":true,"CreatedAt":"2023-10-02T07:16:31","Actor":"angular-robot","Number":"25932","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25932","RelatedDescription":"Open PR \"build: lock file maintenance\" (#25932)"},{"Id":"1921004983","IsPullRequest":true,"CreatedAt":"2023-10-01T22:24:33","Actor":"twoco","Number":"25931","RawContent":null,"Title":"Allow CJS dependencies by wildcard.","State":"open","Body":"## PR Checklist\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\nNot sure where to find docs sources. Perhabs we don't need to update the docs in this case. Maybe add a sentence:\r\n\"Use wildcard '*' to allow all.\"\r\n\r\n## PR Type\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] Other... Please describe:\r\n\r\nJust a minor change to extends the option `allowedCommonJsDependencies` to allow all CJS using `*` wildcard.\r\n\r\n## What is the current behavior?\r\n\r\nIssue Number: 25784\r\n\r\n## What is the new behavior?\r\n\r\nYou can now use `*` for `allowedCommonJsDependencies` to allow all without need to add each individual dependency.\r\nBut you can use this as before. No further changes. Just be able to use `*` on list. No more, no less.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n\r\nSee the ref issue. I have simular issues with that. In a large project you cannot avoid using CJS/AMD. The developers should decide if allow all instead of adding each to the list which is exhausting and in a monorepo annoying.\r\n\r\nIt's a simple addition to the code at `packages/angular_devkit/build_angular/src/tools/esbuild/commonjs-checker.ts` checking for `allowedRequests.has('*')` too.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/25931","RelatedDescription":"Open PR \"Allow CJS dependencies by wildcard.\" (#25931)"},{"Id":"1920157133","IsPullRequest":true,"CreatedAt":"2023-09-30T07:27:50","Actor":"crisbeto","Number":"25930","RawContent":null,"Title":"build: re-enable Material tests","State":"open","Body":"Re-enables Material tests that had to be disabled during the TS 5.2 update.\r\n","Url":"https://github.com/angular/angular-cli/pull/25930","RelatedDescription":"Open PR \"build: re-enable Material tests\" (#25930)"},{"Id":"1918973850","IsPullRequest":false,"CreatedAt":"2023-09-29T16:47:40","Actor":"eneajaho","Number":"25924","RawContent":null,"Title":"Component ID generation collision detected is thrown after first change when running default angular installation","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nComponent ID generation collision detected is thrown after first change when running default angular installation\n\n### Minimal Reproduction\n\n1. npm create @angular@next \r\n2. Choose ssr to be enabled\r\n3. ng serve\r\n4. change app component html -> no warning\r\n5. change app component html again -> warning is shown in console\r\n\r\n![CleanShot 2023-09-29 at 11 56 57@2x](https://github.com/angular/angular-cli/assets/25394362/0167ebf0-9f7a-49a3-b9cf-99b2437b087a)\r\n\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.6\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router, ssr\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25924","RelatedDescription":"Closed issue \"Component ID generation collision detected is thrown after first change when running default angular installation\" (#25924)"},{"Id":"1919107260","IsPullRequest":true,"CreatedAt":"2023-09-29T16:47:39","Actor":"alan-agius4","Number":"25927","RawContent":null,"Title":"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR","State":"closed","Body":"\r\n\r\nThis commit clean ups the compiled components state when the build is being executed in watch mode. This is required as otherwise during development `Component ID generation collision detected` are displayed on the server.\r\n\r\nCloses: #25924\r\n","Url":"https://github.com/angular/angular-cli/pull/25927","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): clean up internal Angular state during rendering SSR\" (#25927)"},{"Id":"1919446068","IsPullRequest":false,"CreatedAt":"2023-09-29T15:19:55","Actor":"Potapich","Number":"25929","RawContent":null,"Title":"No matching version found for @angular-devkit/core@16.2.4","State":"closed","Body":"### Command\n\nversion\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.2.2\n\n### Description\n\nnpm install -g @angular/cli@latest\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\r\n\n\n### Minimal Reproduction\n\ntry to install in terminal:\r\nnpm install -g @angular/cli@latest\r\n\r\noutput error is:\r\nnpm ERR! code ETARGET\r\nnpm ERR! notarget No matching version found for @angular-devkit/core@16.2.4.\r\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\r\nnpm ERR! notarget a package version that doesn't exist.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\non version 16.2.2 works fine\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25929","RelatedDescription":"Closed issue \"No matching version found for @angular-devkit/core@16.2.4\" (#25929)"},{"Id":"1919258672","IsPullRequest":true,"CreatedAt":"2023-09-29T13:49:53","Actor":"cexbrayat","Number":"25928","RawContent":null,"Title":"fix(@schematics/angular): use @types/node v18","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nCurrently, running a schematics that adds `@types/node` to a project, like `ng add @angular/ssr`, will add the v16 types. \r\n\r\n## What is the new behavior?\r\n\r\nAs nodejs v16 is now EOL, this PR updates the types to v18.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25928","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): use @types/node v18\" (#25928)"},{"Id":"1919085366","IsPullRequest":true,"CreatedAt":"2023-09-29T11:42:45","Actor":"alan-agius4","Number":"25926","RawContent":null,"Title":"test(@angular/cli): remove Safari 15 test","State":"closed","Body":"Safari v15 is longer included in the default browserlist configuration of CLI apps.\r\n","Url":"https://github.com/angular/angular-cli/pull/25926","RelatedDescription":"Closed or merged PR \"test(@angular/cli): remove Safari 15 test\" (#25926)"},{"Id":"1919050019","IsPullRequest":false,"CreatedAt":"2023-09-29T11:09:33","Actor":"nikita-fuchs","Number":"25925","RawContent":null,"Title":"ng update assumes incorrect version present","State":"closed","Body":"### Command\r\n\r\nupdate\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nAfter a failed run of `ng update`, successive runs will assume the presence of the version I tried updating to.\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` It basically forgets about the current project not being updated yet and the migration scripts it still needs to run: \r\n```\r\n$ cat package.json \r\n...\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^12.2.18\",\r\n    \"@angular-devkit/core\": \"^16.2.4\",\r\n    \"@angular/animations\": \"^11.2.14\",\r\n    \"@angular/cli\": \"~11.2.19\",\r\n    \"@angular/common\": \"^11.2.14\",\r\n    \"@angular/compiler\": \"^11.2.14\",\r\n    \"@angular/compiler-cli\": \"^11.2.14\",\r\n    \"@angular/core\": \"^11.2.14\",\r\n    \"@angular/forms\": \"^11.2.14\",\r\n    \"@angular/language-service\": \"^11.2.14\",\r\n    \"@angular/platform-browser\": \"^11.2.14\",\r\n    \"@angular/platform-browser-dynamic\": \"^11.2.14\",\r\n    \"@angular/router\": \"^11.2.14\",\r\n    \"@types/extend\": \"^3.0.0\",\r\n    \"@types/jasmine\": \"~3.6.0\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"@types/prismjs\": \"~1.4.18\",\r\n    \"bowser\": \"^1.7.2\",\r\n    \"codelyzer\": \"^6.0.0\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"date-fns\": \"2.0.0-alpha.1\",\r\n    \"element-closest\": \"^2.0.2\",\r\n    \"extend\": \"^3.0.1\",\r\n    \"fs-extra\": \"^5.0.0\",\r\n    \"is-ua-webview\": \"^1.0.0\",\r\n    \"jasmine-core\": \"~3.8.0\",\r\n    \"jasmine-spec-reporter\": \"~5.0.0\",\r\n    \"karma\": \"~6.4.2\",\r\n    \"karma-chrome-launcher\": \"~3.1.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\r\n    \"karma-jasmine\": \"~4.0.0\",\r\n    \"karma-jasmine-html-reporter\": \"^1.5.0\",\r\n    \"karma-min-reporter\": \"^0.1.0\",\r\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\r\n    \"karma-remap-istanbul\": \"~0.4.0\",\r\n    \"ng-packagr\": \"^11.2.4\",\r\n    \"popper.js\": \"^1.14.0\",\r\n    \"prismjs\": \"^1.29.0\",\r\n    \"rxjs\": \"^6.6.7\",\r\n    \"ts-node\": \"~5.0.1\",\r\n    \"tslint\": \"~6.1.0\",\r\n    \"typescript\": \"~4.0.8\",\r\n    \"web-animations-js\": \"^2.3.2\",\r\n    \"zone.js\": \"~0.10.2\"\r\n  }\r\n}%     \r\n```\r\n\r\nBonus: I think angular CLI is so excited to be updated globally (which makes no sense when just trying to upgrade a project) that it totally forgets to check if the angular project you're in  right now actually needs an upgrade ?\r\n\r\n```\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n\r\nnone of which actually applies to the project of course.\r\n\r\n### Minimal Reproduction\r\n\r\nRepro: \r\n\r\n0. Have an angular 11 project (applies to other versions, too)\r\n1. In the project dir, make a run of `$ ng update @angular/cli@12` fail for some dependency reasons\r\n2. fix the issue, rerun `$ ng update @angular/cli@12` and get `Package '@angular/cli' is already up to date.` although \r\n\r\n### Exception or Error\r\n\r\n```text\r\nPackage '@angular/cli' is already up to date.\r\n```\r\n\r\n\r\n### Your Environment\r\n\r\n```text\r\nThis was installed trying to upgrade the above mentioned project.\r\n\r\n\r\n$ ng version\r\n\r\n\r\nAngular CLI: 12.2.18\r\nNode: 16.20.2 (Unsupported)\r\nPackage Manager: npm 8.19.4\r\nOS: darwin x64\r\n\r\nAngular: 12.2.17\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1202.18\r\n@angular-devkit/build-angular   12.2.18\r\n@angular-devkit/core            16.2.4\r\n@angular-devkit/schematics      16.2.4\r\n@angular/cli                    12.2.18\r\n@schematics/angular             12.2.18\r\nng-packagr                      12.2.7\r\nrxjs                            6.6.7\r\ntypescript                      4.3.5\r\n\r\n```\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25925","RelatedDescription":"Closed issue \"ng update assumes incorrect version present\" (#25925)"},{"Id":"1918785653","IsPullRequest":false,"CreatedAt":"2023-09-29T08:41:24","Actor":"nblaudez","Number":"25923","RawContent":null,"Title":"Angular SSR - ReferenceError : window is not defined","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n\r\nI use Angular for my application. I'm able to build for web and ssr but i have this error when i run : npm run serve:ssr:\r\n\r\n\"ReferenceError: window is not defined\"\r\n\n\n### Minimal Reproduction\n\n\r\nI have added this code in my server.ts\r\n\r\nconst mocks = require('mock-browser').delegates.AbstractBrowser;\r\nconst MockBrowser = mocks.MockBrowser;\r\nconst mock = new MockBrowser();\r\n(global as any).document = mock.getDocument();\r\n(global as any).navigator = mock.getNavigator();\r\n(global as any).window = mock.getWindow();\r\n(global as any).WebSocket = require('ws');\r\n(global as any).XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\r\nDoes someone can help me ?\n\n### Exception or Error\n\n```text\nReferenceError: window is not defined\r\n    at 18214 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5591033)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 12643 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:5563889)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 20783 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:3091734)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 30097 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:694)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\r\n    at 96846 (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:39497)\r\n    at __webpack_require__ (/home/nico/Private/tchat.cafe/front/dist/front/server/main.js:1:6617819)\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.0.6\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: npm 9.6.7\r\nOS: linux x64\r\n\r\nAngular: 16.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.1\r\n@angular-devkit/build-angular   16.2.1\r\n@angular-devkit/core            16.2.1\r\n@angular-devkit/schematics      16.0.6\r\n@angular/cdk                    16.2.2\r\n@angular/cli                    16.0.6\r\n@angular/material               16.2.2\r\n@nguniversal/builders           16.2.0\r\n@nguniversal/express-engine     16.2.0\r\n@schematics/angular             16.0.6\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25923","RelatedDescription":"Closed issue \"Angular SSR - ReferenceError : window is not defined\" (#25923)"},{"Id":"1918150648","IsPullRequest":false,"CreatedAt":"2023-09-29T06:13:57","Actor":"rcsilva83","Number":"25920","RawContent":null,"Title":"Enable a way to update packages that depend on Angular when `ng update` is ran","State":"closed","Body":"### Command\n\nupdate\n\n### Description\n\nOn an Angular application we always use packages that depend on Angular, like `ng-bootstrap`. These libraries often have specific versions for each Angular version. In the case o `ng-bootstrap`, you have to use v14.x.x for Angular 15 and v15.x.x for Angular 16, but these dependencies must be manually updated and migrated when we update Angular.\n\n### Describe the solution you'd like\n\nIt would be awesome if `ng update` could also update and migrate code from these external packages the same way if does for Angular components. The could be done by some kind of hook, like the `install` script that gets executed for all dependencies that have it when you `npm install` your application.\r\n\r\nThis should support updating Angular to an older version (`ng update @angular/cli@15 @angular/core@15`), as it would update `ng-bootstrap` to v14 instead of v15 and execute required code migrations for this version.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25920","RelatedDescription":"Closed issue \"Enable a way to update packages that depend on Angular when `ng update` is ran\" (#25920)"},{"Id":"1918239296","IsPullRequest":false,"CreatedAt":"2023-09-29T05:55:13","Actor":"segevfiner","Number":"25921","RawContent":null,"Title":"Use esbuild's support for transforming async/await to generator","State":"closed","Body":"### Command\n\nbuild\n\n### Description\n\nAFAIK Angular CLI is using Babel plugins to transform async/await to generators for zone.js support as that transformation wasn't supported by esbuils. But support has been added https://github.com/evanw/esbuild/issues/2780, which you might be able to use to speed up the build.\r\n\r\nThis is just letting you know, as I requested that feature while playing around with zone.js for a different non Angular based project where I have hit this limitation of zone.js which the Angular CLI hides from you.\n\n### Describe the solution you'd like\n\nUse the native esbuild transform for transforming async/awaitnto generators.\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25921","RelatedDescription":"Closed issue \"Use esbuild's support for transforming async/await to generator\" (#25921)"},{"Id":"1918610067","IsPullRequest":true,"CreatedAt":"2023-09-29T05:13:47","Actor":"angular-robot","Number":"25922","RawContent":null,"Title":"build: update angular","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | `ab6afbc` -> `a814ae2` |\n| [@angular/bazel](https://togithub.com/angular/bazel-builds) | devDependencies | digest | `f731eda` -> `166af48` |\n| [@angular/build-tooling](https://togithub.com/angular/dev-infra-private-build-tooling-builds) | devDependencies | digest | `2cfafd6` -> `cc70f65` |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | `2012c27` -> `0e0418b` |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | `b305660` -> `c630ec9` |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | `3cf7ced` -> `280f8a9` |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | `b62c956` -> `636f19d` |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | `a77b580` -> `d595fa2` |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | `16ca005` -> `4f56028` |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | `1e66e7e` -> `ce40590` |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | `d24d3f7` -> `9eaf8ff` |\n| [@angular/material](https://togithub.com/angular/material-builds) | dependencies | digest | `759f9cf` -> `d8f3572` |\n| [@angular/material-moment-adapter](https://togithub.com/angular/material-moment-adapter-builds) | dependencies | digest | `bfdad92` -> `cc860b3` |\n| [@angular/ng-dev](https://togithub.com/angular/dev-infra-private-ng-dev-builds) | devDependencies | digest | `cabb66d` -> `26b676b` |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | `99ff190` -> `94b8c90` |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | `f38629b` -> `c91a861` |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | `ba46754` -> `8e98676` |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | `9ce8432` -> `c1a4d63` |\n| [@angular/service-worker](https://togithub.com/angular/service-worker-builds) | dependencies | digest | `d75d651` -> `71940d3` |\n| angular/dev-infra | action | digest | `76c632f` -> `9b1adb2` |\n\n🔡 If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM3LjMuMSIsInRhcmdldEJyYW5jaCI6Im1haW4ifQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/25922","RelatedDescription":"Open PR \"build: update angular\" (#25922)"},{"Id":"1918039375","IsPullRequest":false,"CreatedAt":"2023-09-28T18:14:00","Actor":"johncrim","Number":"25919","RawContent":null,"Title":"Support multi-project workspaces with jest and karma tests","State":"open","Body":"### Command\n\ntest\n\n### Description\n\nToday one can run `ng test` to run tests across all projects with a configured `test` builder, or `ng test <project>` to run tests in a single project. However if the monorepo contains projects with both jest and karma tests it gets pretty clunky to run both. \r\n\r\nAs Angular moves toward multiple test builders there should be support for running all tests globally for select types of tests.\n\n### Describe the solution you'd like\n\nIdeally `ng test` would run all tests across all projects using all configured test builders, and it would be possible to configure multiple test builders for a single project. And then it would be possible to only run tests for a single test builder using a property, like `ng test --runner=karma`, where the runner value is defined by the builder.\n\n### Describe alternatives you've considered\n\nThe following can be added to angular.json for each project:\r\n```json\r\n\"projects\": {\r\n    \"mylib\": {\r\n      \"projectType\": \"library\",\r\n      \"root\": \"projects/mylib\",\r\n      \"sourceRoot\": \"projects/mylib/src\",\r\n      \"prefix\": \"lib\",\r\n      \"architect\": {\r\n        \"build\": {\r\n...\r\n        },\r\n        \"test-karma\": {\r\n          \"builder\": \"@angular-devkit/build-angular:karma\",\r\n          \"options\": {\r\n            \"tsConfig\": \"projects/mylib/tsconfig.karma-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.karma-spec.ts\"\r\n            ],\r\n            \"codeCoverageExclude\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        },\r\n        \"test-jest\": {\r\n          \"builder\": \"@angular-devkit/build-angular:jest\",\r\n          \"options\": {\r\n            \"tsConfig\": \"tsconfig.jest-spec.json\",\r\n            \"polyfills\": [\r\n              \"zone.js\",\r\n              \"zone.js/testing\"\r\n            ],\r\n            \"include\": [\r\n              \"**/*.jest-spec.ts\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    },\r\n```\r\n\r\nSuch a configuration supports 2 test builders for the project, so `ng mylib:test-karma` and `ng mylib:test-jest` works, but I can no longer `ng test` to run all tests in the workspace. Of course I could avoid leave one of the builder using `test` in all my projects, but it is still a limitation. \r\n\r\nThe current lines in my package.json would have to be updated for each new project. The following is required for only 2 projects, and it would get unwieldy for 15-20 projects:\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test:karma\": \"ng run mylib:test-karma --watch false && ng run myapp:test-karma --watch false\",\r\n    \"test:jest\": \"NODE_NO_WARNINGS=1 ng run mylib:test-jest && NODE_NO_WARNINGS=1 ng run myapp:test-jest\"\r\n```\r\n\r\nThis project (checkout the `dev/jest` branch) provides an example:\r\nhttps://github.com/johncrim/ng16-yarn-pnp/tree/dev/jest\r\n\r\n(Note also that running `yarn test:jest` runs all the jest tests 2x, presumably because the `tsconfig.jest-spec.json` references test files from multiple projects. Obviously this can be fixed with tsconfig files in each project)\r\n","Url":"https://github.com/angular/angular-cli/issues/25919","RelatedDescription":"Open issue \"Support multi-project workspaces with jest and karma tests\" (#25919)"},{"Id":"1916712730","IsPullRequest":true,"CreatedAt":"2023-09-28T15:33:00","Actor":"angular-robot","Number":"25914","RawContent":null,"Title":"build: update github/codeql-action action to v2.21.9","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | patch | `v2.21.8` -> `v2.21.9` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action (github/codeql-action)</summary>\n\n### [`v2.21.9`](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.21.8...v2.21.9)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNi4xMDcuMSIsInVwZGF0ZWRJblZlciI6IjM2LjEwNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25914","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.21.9\" (#25914)"},{"Id":"1917681749","IsPullRequest":true,"CreatedAt":"2023-09-28T15:32:16","Actor":"cexbrayat","Number":"25917","RawContent":null,"Title":"fix(@schematics/angular): pass `ssr` option to application schematics","State":"closed","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe generated project with `ng new --ssr` has no changes (no extra dependencies, no `server.ts`, no àngualr.json` updates...) using next.6.\r\n\r\n## What is the new behavior?\r\n\r\nRunning `ng new --ssr` will now run the ssr schematics\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25917","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): pass `ssr` option to application schematics\" (#25917)"},{"Id":"1917503191","IsPullRequest":true,"CreatedAt":"2023-09-28T15:31:52","Actor":"alan-agius4","Number":"25916","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor","State":"closed","Body":"\r\nThis commit refactors the route extractor to use the newly `whenStable` API.\r\n","Url":"https://github.com/angular/angular-cli/pull/25916","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): use `whenStable` private API in route extractor\" (#25916)"},{"Id":"1917726436","IsPullRequest":false,"CreatedAt":"2023-09-28T14:58:26","Actor":"chopswil15","Number":"25918","RawContent":null,"Title":"Ability For Ngr Standard Library To Work Across Different Versions of Ng","State":"closed","Body":"### Command\n\nversion\n\n### Description\n\nIn the .Net world there is .Net Standard, and when you write a .Net Standrd DLL it can work across different versions of .Net without doing anything special and no complaints about version issues.\r\n\r\nI would like to have an Ng Standrd so I can write common code library once and add the library to any Ng version project without it complaining about version issues.\r\n\n\n### Describe the solution you'd like\n\nsee above\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25918","RelatedDescription":"Closed issue \"Ability For Ngr Standard Library To Work Across Different Versions of Ng\" (#25918)"},{"Id":"1917022908","IsPullRequest":false,"CreatedAt":"2023-09-28T08:55:30","Actor":"dev-rajat-bacancy","Number":"25915","RawContent":null,"Title":"unable to check angular version with node hydrogen version","State":"closed","Body":"### Command\n\nadd, build, config, doc, e2e, extract-i18n, generate, help, lint, new, other, run, serve, test, update, version\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nnode 18.12.1\n\n### Description\n\n![image](https://github.com/angular/angular-cli/assets/144689525/778ad759-ed2c-43e1-925e-14fb836e4b1a)\r\n\r\n\r\n![image](https://github.com/angular/angular-cli/assets/144689525/1d971e92-2962-459a-bcb3-06146cba85ef)\r\n\r\n\r\nWhen I update to latest node version 18.18.0 all angular command is not working for any of my angular project.\r\nWhen I am using 18.12.0 everything was working fine.\n\n### Minimal Reproduction\n\nhit any of **ng** command I am facting this issue\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nafter executing any command that start from ng I'm getting this which opens new terminal.\r\n\r\n-----Mg: version                          (fundamental)----All-------------------\r\n(New file)\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25915","RelatedDescription":"Closed issue \"unable to check angular version with node hydrogen version\" (#25915)"},{"Id":"1916041098","IsPullRequest":true,"CreatedAt":"2023-09-27T17:40:09","Actor":"cexbrayat","Number":"25913","RawContent":null,"Title":"feat(@angular-devkit/build-angular): support namedChunks option in application builder","State":"open","Body":"## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n<!-- Please check all that apply using \"x\". -->\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nThe `application` builder does not support `namedChunks` yet.\r\n\r\n## What is the new behavior?\r\n\r\nThis adds the support of `namedChunks` for the new `application` builder.\r\nIt generates output like the following:\r\n\r\n```\r\nInitial Chunk Files         | Names         |  Raw Size | Estimated Transfer Size\r\nchunk-ACXUMF56.js           | -             |  94.14 kB |                28.25 kB\r\nmain-3WP5KDHR.js            | main          |  71.95 kB |                18.31 kB\r\npolyfills-4UVFGIFL.js       | polyfills     |  32.85 kB |                10.68 kB\r\nchunk-2XJVAMHT.js           | -             | 449 bytes |               449 bytes\r\nstyles-5INURTSO.css         | styles        |   0 bytes |                 0 bytes\r\n\r\n                            | Initial Total | 199.38 kB |                57.68 kB\r\n\r\nLazy Chunk Files            | Names         |  Raw Size | Estimated Transfer Size\r\nabout.component-2PJOS5PM.js | -             | 401 bytes |               401 bytes\r\nhome.component-25UHFOEY.js  | -             | 398 bytes |               398 bytes\r\n```\r\n\r\nThis is really handy to get a glimpse at what a chunk is referring to and be able to analyze it (especially in applications with dozens of chunks).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/25913","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): support namedChunks option in application builder\" (#25913)"},{"Id":"1915417272","IsPullRequest":true,"CreatedAt":"2023-09-27T16:58:32","Actor":"alan-agius4","Number":"25909","RawContent":null,"Title":"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server","State":"closed","Body":"\r\n\r\nThis commit disables logging `Angular is running in development mode.` when using SSR with vite dev-server. This to avoid polluting the server console with `Angular is running in development mode.` logs for each page load and reload.\r\n\r\nExample:\r\n```\r\nng s\r\n\r\nInitial Chunk Files | Names         | Raw Size\r\nmain.js             | main          | 34.31 kB | \r\npolyfills.js        | polyfills     | 95 bytes | \r\nstyles.css          | styles        | 95 bytes | \r\n\r\n                    | Initial Total | 34.49 kB\r\n\r\nApplication bundle generation complete. [5.205 seconds]\r\n\r\n  ➜  Local:   http://localhost:4200/\r\nWatch mode enabled. Watching for file changes...\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\nAngular is running in development mode.\r\n```","Url":"https://github.com/angular/angular-cli/pull/25909","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): do not print `Angular is running in development mode.` in the server console when using dev-server\" (#25909)"},{"Id":"1915968876","IsPullRequest":false,"CreatedAt":"2023-09-27T16:08:06","Actor":"psarno","Number":"25912","RawContent":null,"Title":"\"ng serve\" requires restart when template error is fixed","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncompiler\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nIf we change a component to a self-closing tag after another error has occured during compilation, it refuses to pick up the changes to the self-closing tag.\r\n\r\nI don't know what area this is in, I chose \"compiler\" because that seemed the closest.\r\n\r\nExample:\r\n\r\nYou call the wrong method in a component:\r\n\r\n`<some-component (onClick)=\"doThis($event)\"></some-component>`\r\n\r\nYou have not declared `doThis(event)`, and save the HTML.\r\n\r\nThe compilation runs, and fails, due to the method not being implemented.\r\n\r\nYou realize this was supposed to call \"doSomething\", and then return to the component to make your changes.  At the same time, you realize it can use Angular 16's new self-closing tags:\r\n\r\n`<some-component (onClick)=\"doSomething($event)\" />`\r\n\r\nYou save this.  The compiler will still error out, stating now that:\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNowhere in the code does it now reference the \"doThis\" mistake.  Everything is saved.\r\n\r\nBut it won't compile anymore.  It requires stopping the \"`ng serve`\" and re-running it.  Then it works fine.\r\n\r\n### Please provide the exception or error you saw\r\n\r\n> X [ERROR] NG9: Property 'doThis' does not exist on type 'SomeCompnent'. [plugin angular-compiler]\r\n\r\nNote \"`doThis`\" does not exist in the HTML anymore.  The file has been saved.  When the compiler runs again, it complains about this.  The HTML now contains `doSomething()`, the correct call.  It is seeing the older version.\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\n@angular-devkit/architect       0.1602.0\r\n@angular-devkit/build-angular   16.2.0\r\n@angular-devkit/core            16.2.0\r\n@angular-devkit/schematics      16.2.0\r\n@angular/cdk                    16.2.1\r\n@angular/cli                    16.2.0\r\n@schematics/angular             16.2.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nzone.js                         0.13.1\r\n```\r\n### Anything else?\r\n\r\nNope.","Url":"https://github.com/angular/angular-cli/issues/25912","RelatedDescription":"Open issue \"\"ng serve\" requires restart when template error is fixed\" (#25912)"},{"Id":"1915878868","IsPullRequest":false,"CreatedAt":"2023-09-27T15:53:25","Actor":"cexbrayat","Number":"25911","RawContent":null,"Title":"`application` builder issue with localize","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen using the application builder, using a component that relies on localize results in an exception, even if localize has been added to the project.\r\n\r\nConsider a route config as follow:\r\n```ts\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n```\r\n\r\n`HomeComponent` uses `NgbPagination` from ng-boostrap, which uses localize.\r\n```html\r\n<ngb-pagination [collectionSize]=\"20\" size=\"lg\"></ngb-pagination>\r\n```\r\n\r\nEven after adding `localize` with `ng add @angular/localize` , the application has a runtime error when displaying the component.\n\n### Minimal Reproduction\n\nclone https://github.com/cexbrayat/i18n-lazy-loading\r\n\r\n```\r\nnpm i\r\nng serve\r\n```\r\n\r\nIf you change the builder to the browser one, then the pagination component correctly displays\n\n### Exception or Error\n\n```text\nERROR Error: Uncaught (in promise): Error: It looks like your application or one of its dependencies is using i18n.\r\nAngular 9 introduced a global `$localize()` function that needs to be loaded.\r\nPlease run `ng add @angular/localize` from the Angular CLI.\r\n(For non-CLI projects, add `import '@angular/localize/init';` to your `polyfills.ts` file.\r\nFor server-side rendering applications add the import to your `main.server.ts` file.)\r\n_global.$localize<@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:22191:11\r\nconsts@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/@ng-bootstrap_ng-bootstrap.js?v=793732a8:18830:17\r\ncreateTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10416:58\r\ngetOrCreateComponentTView@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10407:24\r\naddComponentLogic@http://localhost:4200/.angular/cache/17.0.0-next.6/vite/deps/chunk-ZVLRK7IP.js?v=5921499a:10…\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 17.0.0-next.6\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: darwin arm64\r\n\r\nAngular: 17.0.0-next.5\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1700.0-next.6\r\n@angular-devkit/build-angular   17.0.0-next.6\r\n@angular-devkit/core            17.0.0-next.6\r\n@angular-devkit/schematics      17.0.0-next.6\r\n@angular/cli                    17.0.0-next.6\r\n@schematics/angular             17.0.0-next.6\r\nrxjs                            7.8.1\r\ntypescript                      5.2.2\r\nzone.js                         0.14.0\n```\n\n\n### Anything else relevant?\n\nThe error goes away when shifting back to the `browser` builder","Url":"https://github.com/angular/angular-cli/issues/25911","RelatedDescription":"Open issue \"`application` builder issue with localize\" (#25911)"},{"Id":"1915633518","IsPullRequest":false,"CreatedAt":"2023-09-27T13:47:49","Actor":"LennonReid","Number":"25910","RawContent":null,"Title":"MacOS ZSH terminal stuck due to ng completion script","State":"open","Body":"### Command\r\n\r\nlint\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm an Angular developer and rely on Nx as my monorepo management tool. Lately, I've encountered an issue where the Nx Console doesn't function as expected. Simultaneously, I've been experiencing a slow initiation of the terminal in VSCode, accompanied by the error message 'Resolving shell environment fails.'\r\n\r\nThis situation prompted me to investigate the possibility of a problem with the environment variables in my .zshrc configuration file. Upon reviewing my user configuration, I suspect that a particular command in my bash file may be causing these issues. I can't recall when I added that command, but I noticed a significant improvement after either removing or commenting out that particular line.\r\n\r\nI've come across a related issue on GitHub at https://github.com/angular/angular-cli/issues/25608. Unfortunately, the discussion there seems a bit confusing, and I'm unable to add any comments.\r\n\r\nAs a result, I've created a new issue to address this problem and offer a solution. This way, we can help others who might be facing the same issue.\r\n\r\n\r\n### Minimal Reproduction\r\n\r\nOpen a new Window on MacOs and this will continue for about 2 minutes. <img width=\"585\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/43192276/0171138b-110e-423a-b994-91c9e8e691c3\">\r\nHere is the related bash config \r\n\r\n```bash\r\n\r\n...\r\n# Load Angular CLI autocompletion.\r\nsource <(ng completion script)\r\n...\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nOS:MacOS Ventura 13.5.2 (Macbook Air Apple M1)\r\nThe result after running `ng version`:\r\nAngular CLI: 16.2.4\r\nNode: 18.16.0\r\nPackage Manager: yarn 1.22.19\r\nOS: darwin arm64\r\n\r\nAngular: undefined\r\n... \r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.1602.4 (cli-only)\r\n@angular-devkit/core         16.2.4 (cli-only)\r\n@angular-devkit/schematics   16.2.4 (cli-only)\r\n@angular/cli                 16.2.4 (cli-only)\r\n@schematics/angular          16.2.4 (cli-only)\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25910","RelatedDescription":"Open issue \"MacOS ZSH terminal stuck due to ng completion script\" (#25910)"},{"Id":"1915334649","IsPullRequest":true,"CreatedAt":"2023-09-27T12:08:42","Actor":"alan-agius4","Number":"25908","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/25908","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#25908)"},{"Id":"1915317339","IsPullRequest":false,"CreatedAt":"2023-09-27T11:24:01","Actor":"twilker","Number":"25907","RawContent":null,"Title":"Debugging Angular library not possible in application through `npm link`","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI have a standard Angular 16 library and application in two different workspaces / repositories. I link the build library using `npm link` to the application and start it. I would expect to be able to debug the library sources from the application. But it does not work, as it can only debug to the level of the library.mjs. I have tested it with the chrome devtools and VSCode.\r\n\r\n### Minimal Reproduction\r\n\r\n1. Clone the minimal [app](https://github.com/twilker/vs-debug-angular-app) and [library](https://github.com/twilker/vs-debug-angular-library)\r\n2. In the library project execute\r\n```\r\nnpm i\r\nnpm run build\r\ncd ./dist/library\r\nnpm link\r\n```\r\n3. In the app project execute\r\n```\r\nnpm i\r\nnpm link library\r\n```\r\n4. Set breakpoint in app.component.ts L12\r\n5. Start Debugging (F5)\r\n6. Step Into -> leads to library.mjs although a source map exists for this file which would lead to the .ts source file\r\n![mjs-not-resolved](https://github.com/angular/angular-cli/assets/2802526/00f385de-a914-40ea-a0e7-06cfd85bda5f)\r\n\r\n\r\n### Exception or Error\r\n\r\nSee above\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 16.2.3\r\nNode: 18.17.0\r\nPackage Manager: npm 9.6.7\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\nI have opened another issue for VSCode [here](https://github.com/microsoft/vscode-js-debug/issues/1823). But as it does not work in VSCode and Chrome devtools I assumed the issue is with the Angular setup.","Url":"https://github.com/angular/angular-cli/issues/25907","RelatedDescription":"Closed issue \"Debugging Angular library not possible in application through `npm link`\" (#25907)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1922369828","IsPullRequest":false,"CreatedAt":"2023-10-02T18:11:27","Actor":"yohannestikabo","Number":"27877","RawContent":null,"Title":"Material table broken after upgrading angular from 14 to 16","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14\n\n### Description\n\nUnhandled Application Error TypeError: Cannot read properties of null (reading 'flags') at isDirectivelost (core.mis: 2157:19) at elementStart (core.mjs: 16300:27) at eelement (core.mjs: 16377:5) at DocumentsComponent_ng_template_14_mat_cell_13_Template (template.htm:65:15) at executeTemplate (core.mjs: 11986:13) at renderView (core.mjs: 13184:13) at createndRenderEmbeddedLView (core.mjs: 23961:5) at TemplateRef.createEmbeddedViewImp1 (core.mjs: 24047:31) at ViewcontainerRef.createEmbeddedView(core.mjs:24355:37) at MatTable._renderCellTemplateForItem\n\n### Reproduction\n\nI were not able to reproduce this in StackBlitz\r\n\r\n\n\n### Expected Behavior\n\nThis supposed to display a material table with data, and it was working in Angular 14.\n\n### Actual Behavior\n\nDisplay a material table with data\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27877","RelatedDescription":"Closed issue \"Material table broken after upgrading angular from 14 to 16\" (#27877)"},{"Id":"1921370461","IsPullRequest":false,"CreatedAt":"2023-10-02T16:14:19","Actor":"amirheydari9","Number":"27874","RawContent":null,"Title":"feat(datepicker): add timepicker to datepicker","State":"closed","Body":"### Feature Description\n\n add timepicker to datepicker\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27874","RelatedDescription":"Closed issue \"feat(datepicker): add timepicker to datepicker\" (#27874)"},{"Id":"1921416504","IsPullRequest":true,"CreatedAt":"2023-10-02T11:42:52","Actor":"crisbeto","Number":"27876","RawContent":null,"Title":"build: fix lint failure","State":"closed","Body":"Fixes a lint failure on the main branch.","Url":"https://github.com/angular/components/pull/27876","RelatedDescription":"Closed or merged PR \"build: fix lint failure\" (#27876)"},{"Id":"1921405256","IsPullRequest":true,"CreatedAt":"2023-10-02T07:41:43","Actor":"crisbeto","Number":"27875","RawContent":null,"Title":"fix(cdk/schematics): support both application and browser builders","State":"open","Body":"In #27792 the schematics were updated to use the new default `application` builder instead of the `browser` builder. According to the CLI team we'll have to support both so these changes update our existing logic to account for both cases.","Url":"https://github.com/angular/components/pull/27875","RelatedDescription":"Open PR \"fix(cdk/schematics): support both application and browser builders\" (#27875)"},{"Id":"1918056146","IsPullRequest":true,"CreatedAt":"2023-10-01T17:38:35","Actor":"mmalerba","Number":"27865","RawContent":null,"Title":"feat(material/theming): Open up new APIs to access theme values","State":"closed","Body":"This PR opens up the following Sass APIs used to access theme values:\r\n- `get-theme-version`: Gets the version of the theme object\r\n- `get-theme-type`: Gets the type of theme (light or dark)\r\n- `get-theme-color`: Gets a color from the theme\r\n- `get-theme-typography`: Gets a typography value from the theme\r\n- `get-theme-density`: Gets the density scale from the theme\r\n- `theme-has`: Checks if the theme has information for the given theming system","Url":"https://github.com/angular/components/pull/27865","RelatedDescription":"Closed or merged PR \"feat(material/theming): Open up new APIs to access theme values\" (#27865)"},{"Id":"1918035673","IsPullRequest":true,"CreatedAt":"2023-10-01T17:36:54","Actor":"mmalerba","Number":"27864","RawContent":null,"Title":"fix(material/radio): Apply tokens at mixin root","State":"closed","Body":"Applies radio tokens at the theme mixin's root selector (or html if the mixin is called with no selector). This makes it easier for users to override tokens without worrying about specificity.","Url":"https://github.com/angular/components/pull/27864","RelatedDescription":"Closed or merged PR \"fix(material/radio): Apply tokens at mixin root\" (#27864)"},{"Id":"1920347933","IsPullRequest":false,"CreatedAt":"2023-09-30T22:15:52","Actor":"jy95","Number":"27873","RawContent":null,"Title":"bug(Material): No provider for MatExpansionPanel","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nError: NG0201: No provider for MatExpansionPanel found in NodeInjector. Find more at https://angular.io/errors/NG0201\n\n### Reproduction\n\nMy repo is public : https://github.com/jy95/ngx-json-schema-viewer\r\nSo stackblitz link is https://stackblitz.com/github/jy95/ngx-json-schema-viewer\r\n\r\nIf for some reason, it doesn't work - run following commands at the root level & you will get the error I have in console :\r\n```bash\r\n// Install dependancies\r\nnpm install\r\n// Build the lib so that storybook can use it\r\nnpm run buildLib\r\n// Launch Storybook\r\nnpm run storybook\r\n```\n\n### Expected Behavior\n\nIt should work\n\n### Actual Behavior\n\n![image](https://github.com/angular/components/assets/9306961/36ee6a2d-8aa5-46e4-83a1-e9949731886c)\r\n\n\n### Environment\n\n```\r\nAngular CLI: 16.2.3\r\nNode: 18.18.0\r\nPackage Manager: npm 9.8.1\r\nOS: win32 x64\r\n\r\nAngular: 16.2.6\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1602.3\r\n@angular-devkit/build-angular   16.2.3\r\n@angular-devkit/core            16.2.3\r\n@angular-devkit/schematics      16.2.3\r\n@angular/cli                    16.2.3\r\n@schematics/angular             16.2.3\r\nng-packagr                      16.2.3\r\nrxjs                            7.8.1\r\ntypescript                      5.1.6\r\nzone.js                         0.13.3\r\n```\r\n","Url":"https://github.com/angular/components/issues/27873","RelatedDescription":"Closed issue \"bug(Material): No provider for MatExpansionPanel\" (#27873)"},{"Id":"1920261708","IsPullRequest":false,"CreatedAt":"2023-09-30T13:30:14","Actor":"manik96m","Number":"27872","RawContent":null,"Title":"bug(drag-drop): Slot content not visible when we start dragging an element","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi,\r\n\r\nBackground:\r\nI am creating a reusable dynamic list component which also has the ability to drag and drop items in a list.\r\nThis component uses **slots** to dynamically project content from the consumer component.\r\n\r\nProblem: \r\nThe component renders correctly.\r\nBut when I start dragging an item, the content in the slot is not visible.\r\n\r\nDoes anyone know how to solve this issue or any workaround for this?\r\n\r\n@angular/cdk\r\n@angular/cdk/drag-drop\r\n\r\nThanks!\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/stackblitz-starters-jbsaba?file=src%2Fmain.ts\r\nSteps to reproduce:\r\n1. Click on \"Item 1 in slot\" and start dragging it.\r\n2. Notice that the text \"Item 1 in slot\" is not visible while you are dragging the item.\r\n\r\n\r\n### Expected Behavior\r\n\r\nAny content in a slot element should be visible while dragging the element.\r\n\r\n### Actual Behavior\r\n\r\nContent in the slot is not visible while you are dragging the item.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.7\r\n- CDK/Material: 16.2.6\r\n- Browser(s): Chrome\r\n- Operating System: macOS\r\n\r\n\r\n### REASON - \r\nI am still debugging but found the reason behind this problem.\r\nAs per documentation,\r\n\"When a cdkDrag element is picked up, it will create a preview element visible while dragging.\"\r\nThis causes another slot element to be created with the same name which is why we don't see its content.\r\n\r\nStill trying to find a solution.\r\n","Url":"https://github.com/angular/components/issues/27872","RelatedDescription":"Open issue \"bug(drag-drop): Slot content not visible when we start dragging an element\" (#27872)"},{"Id":"1919536513","IsPullRequest":true,"CreatedAt":"2023-09-29T16:38:25","Actor":"josephperrott","Number":"27871","RawContent":null,"Title":"ci: setup slack messages for integration test","State":"closed","Body":"Setup the slack messages for failed integration tests on releasable branchces","Url":"https://github.com/angular/components/pull/27871","RelatedDescription":"Closed or merged PR \"ci: setup slack messages for integration test\" (#27871)"},{"Id":"1917020036","IsPullRequest":true,"CreatedAt":"2023-09-29T15:39:35","Actor":"crisbeto","Number":"27862","RawContent":null,"Title":"fix(material/tabs): nav bar not navigating on enter presses","State":"closed","Body":"Fixes that the tab nav bar wasn't navigating when pressing the enter key.\r\n\r\nFixes #27843.","Url":"https://github.com/angular/components/pull/27862","RelatedDescription":"Closed or merged PR \"fix(material/tabs): nav bar not navigating on enter presses\" (#27862)"},{"Id":"1919239334","IsPullRequest":false,"CreatedAt":"2023-09-29T13:05:26","Actor":"angelaki","Number":"27870","RawContent":null,"Title":"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening","State":"open","Body":"### Feature Description\n\nI'm waiting quite long for this feature and was just about to implement / PR it myself. Haven't found something, but is this already in discussion? And I can't get the `npm install` to run because of conficts, is this currently broken?\n\n### Use Case\n\nBeing able to set the items on demand in lazy loading / paged scenarios.","Url":"https://github.com/angular/components/issues/27870","RelatedDescription":"Open issue \"feat(mat-select): Call a `beforeOpen` observable that can modify the options before opening\" (#27870)"},{"Id":"1918765773","IsPullRequest":true,"CreatedAt":"2023-09-29T08:38:24","Actor":"crisbeto","Number":"27869","RawContent":null,"Title":"build: update to latest Angular and fix test failures","State":"closed","Body":"Updates to the latest version of Angular and fixes some tests that were broken by the CLI switching to generating standalone apps by default.","Url":"https://github.com/angular/components/pull/27869","RelatedDescription":"Closed or merged PR \"build: update to latest Angular and fix test failures\" (#27869)"},{"Id":"1918373925","IsPullRequest":true,"CreatedAt":"2023-09-28T22:58:38","Actor":"mmalerba","Number":"27868","RawContent":null,"Title":"feat(material-experimental/theming): add M3 progress-spinner support","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27868","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 progress-spinner support\" (#27868)"},{"Id":"1918326961","IsPullRequest":true,"CreatedAt":"2023-09-28T21:58:56","Actor":"mmalerba","Number":"27867","RawContent":null,"Title":"feat(material-experimental/theming): add M3 radio support","State":"open","Body":"Depends on #27864","Url":"https://github.com/angular/components/pull/27867","RelatedDescription":"Open PR \"feat(material-experimental/theming): add M3 radio support\" (#27867)"},{"Id":"1918154295","IsPullRequest":true,"CreatedAt":"2023-09-28T19:41:21","Actor":"wagnermaciel","Number":"27866","RawContent":null,"Title":"refactor(material/button): switch raised-button to density tokens","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27866","RelatedDescription":"Open PR \"refactor(material/button): switch raised-button to density tokens\" (#27866)"},{"Id":"1917535405","IsPullRequest":false,"CreatedAt":"2023-09-28T16:48:51","Actor":"YasirHL","Number":"27863","RawContent":null,"Title":"Unable to fetch package metadata: minTimeout is greater than maxTimeout","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n![Screenshot (761)](https://github.com/angular/components/assets/103892542/bc30953a-04fe-4137-a6ca-8bab5cc99082)\r\nThis screenshot describe my issue: Unable to install angular material.\r\n\r\nTried:\r\n1. Delete the Node module and install it again\r\n2. Disabled firewall\r\n\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\n\n### Expected Behavior\n\nIt should install angular material\n\n### Actual Behavior\n\nIt should install angular material\n\n### Environment\n\n- Angular:\r\n- CDK/Material:\r\n- Browser(s):\r\n- Operating System (e.g. Windows, macOS, Ubuntu):\r\n","Url":"https://github.com/angular/components/issues/27863","RelatedDescription":"Closed issue \"Unable to fetch package metadata: minTimeout is greater than maxTimeout\" (#27863)"},{"Id":"1916857936","IsPullRequest":true,"CreatedAt":"2023-09-28T12:28:23","Actor":"crisbeto","Number":"27860","RawContent":null,"Title":"feat(material/dialog): switch to standalone","State":"closed","Body":"Reworks `MatDialog` to support standalone.","Url":"https://github.com/angular/components/pull/27860","RelatedDescription":"Closed or merged PR \"feat(material/dialog): switch to standalone\" (#27860)"},{"Id":"1916915041","IsPullRequest":false,"CreatedAt":"2023-09-28T07:47:08","Actor":"HairingX","Number":"27861","RawContent":null,"Title":"bug(autocomplete): Setting input value from code does not update autocomplete selected item","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAutocomplete works beautifully when working from the user inputs.\r\n\r\nWhen we set the value from the code-behind (either via FormControl or on the element directly) the selected option does not update.\r\n\r\nIn the attached example we need to clear the input from code, but the previously selected option still has the \"selected\" checkmark and foreground color.\r\n\r\n\n\n### Reproduction\n\nStackBlitz link: [components-issue-hmgdm3](https://stackblitz.com/edit/components-issue-hmgdm3?file=src%2Fapp%2Fexample-component.ts)\r\n\r\nSteps to reproduce:\r\n1. Select an option from the autocomplete\r\n2. Clear the selection by using the button\r\n3. Focus the input and you can see the previously selected option still having the \"selected\" indicators (checkmark and foreground)\r\n\n\n### Expected Behavior\n\nThe autocomplete is supposed to remove the selected indication on the last selected option when the value of our input is cleared\n\n### Actual Behavior\n\nThe autocomplete keeps previously selected option as \"selected\"\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome, Firefox latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27861","RelatedDescription":"Open issue \"bug(autocomplete): Setting input value from code does not update autocomplete selected item\" (#27861)"},{"Id":"1916547678","IsPullRequest":false,"CreatedAt":"2023-09-28T00:57:39","Actor":"albahrawy","Number":"27859","RawContent":null,"Title":"feat(MatDatePicker): adding ability to use flexable format","State":"open","Body":"### Feature Description\r\n\r\nI'm just wondering if we can add the feature of dateFormat to the datepicker\r\n\r\ndatepicker-input-base.ts\r\n\r\n```\r\n@Input displayFormat: string|undefined|null;\r\n@Input parseFormat: string|undefined|null;\r\n```\r\n\r\nand in the code:\r\n\r\n```\r\n  protected _formatValue(value: D | null) {\r\n  **const format = this.displayFormat ?? this._dateFormats.display.dateInput;**\r\n    this._elementRef.nativeElement.value =\r\n      value != null ? this._dateAdapter.format(value, **format**) : '';\r\n  }\r\n\r\n _onInput(value: string) {\r\n    const lastValueWasValid = this._lastValueValid;\r\n  **const format = this.parseFormat?? this._dateFormats.parse.dateInput;**\r\n    let date = this._dateAdapter.parse(value, **format** );\r\n// ... remaining code\r\n}\r\n```\r\n\r\n### Use Case\r\n\r\nin this case we can alow different pasing/display format in the same app\r\nthe first input will use custom format and the second one use the default one.\r\nboth are in the same component\r\n```\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" displayFormat=\"DD/MM/YYYY\" parseFormat=\"DD/MM/YYYY\">\r\n  <mat-hint>DD/MM/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker1\">\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker1></mat-datepicker>\r\n</mat-form-field>\r\n```","Url":"https://github.com/angular/components/issues/27859","RelatedDescription":"Open issue \"feat(MatDatePicker): adding ability to use flexable format\" (#27859)"},{"Id":"1916031517","IsPullRequest":true,"CreatedAt":"2023-09-27T19:57:58","Actor":"mmalerba","Number":"27858","RawContent":null,"Title":"Bump version to \"v17.0.0-next.5\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27858","RelatedDescription":"Closed or merged PR \"Bump version to \"v17.0.0-next.5\" with changelog.\" (#27858)"},{"Id":"1915993867","IsPullRequest":true,"CreatedAt":"2023-09-27T17:18:57","Actor":"mmalerba","Number":"27857","RawContent":null,"Title":"docs: release notes for the v16.2.6 release","State":"closed","Body":"Cherry-picks the changelog from the \"16.2.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/27857","RelatedDescription":"Closed or merged PR \"docs: release notes for the v16.2.6 release\" (#27857)"},{"Id":"1915991523","IsPullRequest":true,"CreatedAt":"2023-09-27T17:03:38","Actor":"mmalerba","Number":"27856","RawContent":null,"Title":"Bump version to \"v16.2.6\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27856","RelatedDescription":"Closed or merged PR \"Bump version to \"v16.2.6\" with changelog.\" (#27856)"},{"Id":"1915480087","IsPullRequest":true,"CreatedAt":"2023-09-27T16:29:33","Actor":"allexgut","Number":"27854","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27854","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27854)"},{"Id":"1915561112","IsPullRequest":false,"CreatedAt":"2023-09-27T15:41:26","Actor":"magentaRE","Number":"27855","RawContent":null,"Title":"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14.2.7 (non MDC-based components)\r\n\r\n### Description\r\n\r\nWhen tabbing onto a checkbox, no CSS classes from CDK directives get applied to a checkbox. https://material.angular.io/cdk/a11y/overview#cdkmonitorelementfocus-and-cdkmonitorsubtreefocus\r\n\r\nThis used to work natively without even setting `cdkMonitorElementFocus` directive onto a checkbox. CSS classes don't get applied even if you put `cdkMonitorElementFocus` on the element. This was not a problem in the old non-MDC components. Screenshot from my app, old non MDC-based components, Material version 14.x.x:\r\n\r\n![image](https://github.com/angular/components/assets/48152706/2c874ec4-530b-4afc-80d9-fb496f73af45)\r\n\r\nThis behavior works in `<mat-radio-button>`, you don't even have to set `cdkMonitorElementFocus` on the radio button. Those CSS classes get applied onto the focused radio button.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: not needed\r\nSteps to reproduce:\r\n1. Go to [https://material.angular.io/components/checkbox/overview](https://material.angular.io/components/checkbox/overview)\r\n2. Observe any checkbox on the site in DevTools\r\n3. Tab onto that checkbox on the site with keyboard or any other way (programatically, mouse,...)\r\n4. `<mat-checkbox>` element should be getting `.cdk-focused` and `.cdk-${origin}-focused` CSS classes\r\n\r\n\r\n### Expected Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes should be applied onto checkbox when focused, clicked, etc.\r\n\r\n### Actual Behavior\r\n\r\n`.cdk-focused` and `.cdk-${origin}-focused` CSS classes are **NOT** getting applied onto checkbox when focused, clicked, etc.\r\n\r\n### Environment\r\n\r\n- Angular: 16.2.6\r\n- CDK/Material: 16.2.5\r\n- Browser(s): any (tried Chrome and Firefox)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): tried it on Windows, I don't know if it does work on others\r\n","Url":"https://github.com/angular/components/issues/27855","RelatedDescription":"Closed issue \"bug(mat-checkbox): cdk-keyboard-focused CSS class missing in checkbox after focus\" (#27855)"},{"Id":"1915452053","IsPullRequest":true,"CreatedAt":"2023-09-27T12:31:25","Actor":"allexgut","Number":"27853","RawContent":null,"Title":"docs(material/slider): Page Up/Down increase value but not by 10 steps","State":"closed","Body":"Change the documentation so it's clearer that the Page Up/Down buttons of the slider component increase/decrease the value of the slider by 10% (of the max value), rather than 10 steps as it was described previously.\r\n\r\nFixes #27402.","Url":"https://github.com/angular/components/pull/27853","RelatedDescription":"Closed or merged PR \"docs(material/slider): Page Up/Down increase value but not by 10 steps\" (#27853)"},{"Id":"1913983601","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:47","Actor":"rockcoolt","Number":"27849","RawContent":null,"Title":"feat(Angular Material Design): Angular Material Design to Material 3","State":"closed","Body":"### Feature Description\n\nHello 👋🏾\r\nI'm sorry if my question has already been asked; I've been searching for a reliable answer for days. 😵‍💫\r\n\r\nIs there a plan to migrate the design of Angular Material to Material 3?\r\nIf not, I think I'll have to use the web version of Material 3, which is not well-suited for Angular.\r\n\r\nThank you for your answers 🙏🏾\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27849","RelatedDescription":"Closed issue \"feat(Angular Material Design): Angular Material Design to Material 3\" (#27849)"},{"Id":"1915092771","IsPullRequest":false,"CreatedAt":"2023-09-27T09:54:14","Actor":"StevenSwitten","Number":"27852","RawContent":null,"Title":"bug(menu): Focus lost when an input with a label is in a menu item","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI've encountered this very weird bug where I have an input in a mat-menu-item. If the input has a label, and you type the first letter of that label in the input, the input loses focus.\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-kjzj77?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Click the button to show the menu\r\n2. Type anything without the letter \"D\" -> it works fine.\r\n3. Type the letter \"D\" -> focus is lost\r\n\n\n### Expected Behavior\n\nFocus should not be lost\n\n### Actual Behavior\n\nFocus is lost\n\n### Environment\n\n- Angular: 16.2.1\r\n- CDK/Material: 16.2.1\r\n- Browser(s): Chrome latest\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows & Android\r\n","Url":"https://github.com/angular/components/issues/27852","RelatedDescription":"Closed issue \"bug(menu): Focus lost when an input with a label is in a menu item\" (#27852)"},{"Id":"1914805513","IsPullRequest":false,"CreatedAt":"2023-09-27T06:40:43","Actor":"shhdharmen","Number":"27851","RawContent":null,"Title":"bug(BUTTON): \"$line-height\" is not respected when provided in typography config","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf we create a custom typography config, and provide it in theme, `$line-height` value for `$button` is not respected from the config, instead `.mdc-button`'s `line-height` takes precedence. See below for example:\r\n\r\n```scss\r\n@use \"sass:map\";\r\n@use \"@angular/material\" as mat;\r\n\r\n$my-app-light-primary: mat.define-palette(mat.$indigo-palette);\r\n$my-app-light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\r\n\r\n$my-app-light-warn: mat.define-palette(mat.$red-palette);\r\n\r\n$regular-font-family: \"'Inter', sans-serif\";\r\n\r\n$my-app-typography: mat.define-typography-config(\r\n  $button: mat.define-typography-level($font-family: $regular-font-family, $font-size: 16px, $line-height: 2.5),\r\n);\r\n\r\n$my-app-light-theme: mat.define-light-theme(\r\n  (\r\n    color: (\r\n      primary: $my-app-light-primary,\r\n      accent: $my-app-light-accent,\r\n      warn: $my-app-light-warn,\r\n    ),\r\n    typography: $my-app-typography,\r\n  )\r\n);\r\n\r\n@include mat.core();\r\n\r\n@include mat.core-theme($my-app-light-theme);\r\n@include mat.button-theme($my-app-light-theme);\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Inter', sans-serif;\r\n}\r\n```\r\n\r\n![Screenshot 2023-09-27 115600](https://github.com/angular/components/assets/6831283/6cec20f1-9bf8-45a4-a9a9-974d7bd32a0b)\r\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-4udget?file=src%2Fstyles.scss\r\nSteps to reproduce:\r\n1. Observe `styles.scss`\r\n2. Observe styles applied to button\r\n\n\n### Expected Behavior\n\nButton should have `line-height` give in typography config\n\n### Actual Behavior\n\nButton have `line-height` from `.mdc-button` class instead\n\n### Environment\n\n- Angular: 16.2.5\r\n- CDK/Material: 16.2.4\r\n- Browser(s): Edge\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27851","RelatedDescription":"Open issue \"bug(BUTTON): \"$line-height\" is not respected when provided in typography config\" (#27851)"},{"Id":"1914080598","IsPullRequest":true,"CreatedAt":"2023-09-26T18:33:50","Actor":"zarend","Number":"27850","RawContent":null,"Title":"remove subscription for expandAll and collapseAll","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27850","RelatedDescription":"Open PR \"remove subscription for expandAll and collapseAll\" (#27850)"},{"Id":"1913743732","IsPullRequest":false,"CreatedAt":"2023-09-26T15:13:01","Actor":"intellix","Number":"27848","RawContent":null,"Title":"feat(Sidenav): Support hydration","State":"open","Body":"### Feature Description\r\n\r\nSidenav and various other components should support Clientside Hydration. When I deliver the initial HTML from the server, the client should be able to hydrate my entire site without having a flash of replaced and recreated content.\r\n\r\nI've been fighting with enabling it and then started to investigate why 2x components are skipping hydration. I thought that it was strange because I never explicitly added it and now that I can see that it was 100% disabled for anything inside a Sidenav: https://github.com/angular/components/commit/1a6f924e2da852be6bd78445f43bac0275264b6e\r\n\r\nThe whole application exists within a Sidenav but Material completely disables it (I assume due to direct DOM manipulation). It would be great if material didn't disable hydration, so we can improve UX and SEO with better lighthouse scores.\r\n\r\n### Use Case\r\n\r\nIt would allow Material based websites to not suffer from poor lighthouse scores and flashing pages. ","Url":"https://github.com/angular/components/issues/27848","RelatedDescription":"Open issue \"feat(Sidenav): Support hydration\" (#27848)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-03T03:30:02.931706Z","RunDurationInMilliseconds":1979}