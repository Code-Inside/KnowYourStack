{"Data":{"Angular-Issues":{"Issues":[{"Id":"2800583679","IsPullRequest":false,"CreatedAt":"2025-01-21T02:58:55","Actor":"msmallest","Number":"59640","RawContent":null,"Title":"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nedit: it's just `provideAnimationsAsync()`. Removed it from the module and now the styling worked, and I removed it from the standalone app and it worked.\n\nModule based apps seem to not have style changes applied when a style is changed in a component (inline style or file-based style). Same applies for module based but in a standalone component... and even an app fully converted to standalone from what I can tell?\n\nFully module based\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\nProblem component is a standalone component inside a component used in a module\nhttps://github.com/msmallest/module-based-hmr/tree/issue2-module-root-standalone-component\n\n(edit: see first comment by me, I realized the problem) \nI converted the whole app to standalone and there is still an issue. But I have had working fully standalone apps before with the latest patches, so I must be missing something. But I can't tell what is missing between those fresh ones and this example. I even cleared `.angular/`, restarted the serve server, re-opened IDE, and even tried in a different browser from the other tests\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--fully-standalone\n\n(edit: see first comment by me, I realized the problem) \nedit: here is a repo I used for a different issue a couple days ago - but in a new branch `issue-59640-comparison-never-module`. It was and still is in a working state with the newest patch versions. I made the same component as the above examples in this app that never had modules, and it has no style issues whether it is file-based or inline style https://github.com/msmallest/hmr-issue-multiple-components/tree/issue-59640-comparison-never-module. I will take a closer look at the difference between this and `issue2--fully-standalone` later, but between this and the other issue I'm a bit confused at the moment.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/msmallest/module-based-hmr/tree/issue2--module-styling-issues\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59640","RelatedDescription":"Open issue \"bug(HMR): style changes not applied in module app w/module, w/module+standalone, and fully standalone\" (#59640)"},{"Id":"2800548801","IsPullRequest":false,"CreatedAt":"2025-01-21T02:19:38","Actor":"msmallest","Number":"59639","RawContent":null,"Title":"bug(HMR): `NgFor/AsyncPipe` break in module components when template/style reload occurs from that component","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser, common\n\n### Is this a regression?\n\nYes\n\n### Description\n\nIn a module based application, HMR reloads that occur after saving the template or style in a component declared in a module cause errors related to `NgFor/AsyncPipe`.\n\n While my reproduction gets these from `BrowserModule`, I originally observed the errors in a real application with both `BrowserModule` in the `AppModule` as well as the trouble component being declared in a different module that included `CommonModule`.\n\n- This seems to be module specific, or down to perhaps `BrowserModule`. When I ran the standalone schematic with \"Convert all components, directive and pipes to standalone\" + \"./\" path, this error no longer occurred.\n- This is definitely HMR related though. In both branches, I ran it with HMR on by default, and then with `--hmr false`. Of the four permutations, only the module declared component version with HMR on gave any issues.\n- When I changed the template or style of `app-root` which contains the module component (`app-authorized-users`), there is no issue. Only when editing `app-authorized-users`'s template is there an issue.\n- edit: I did not try other variants such as one external file and one inline file in either scenario, but I assume the same\n\n--- \n\nAbout the repo in general, and the two relevant branches: \n\n- This issue's repro repo was generated using Angular CLI version 19.1.1, using the command `ng new module-based-hmr --standalone false`\n- ...and then bumped to latest patch versions. \n- Each branch has a relevant `README.md` with details, including reproducing with or without HMR. \n- The trouble component (`app-authorized-users`) is embedded in the `app-root`.\n\nhttps://github.com/msmallest/module-based-hmr (has errors listed for both the `NgFor` and `AsyncPipe`)\n\nhttps://github.com/msmallest/module-based-hmr/tree/module-root-standalone-component-no-errors (has the output of the migration)\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/msmallest/module-based-hmr\n\n### Please provide the exception or error you saw\n\n```true\nauthorized-users.component.ts:34 NG0303: Can't bind to 'ngForOf' since it isn't a known property of 'ng-container' (used in the '_AuthorizedUsersComponent' component template).\n1. If 'ng-container' is an Angular component and it has the 'ngForOf' input, then verify that it is a part of an @NgModule where this component is declared.\n2. If 'ng-container' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\nAuthorizedUsersComponent_Template\t@\tauthorized-users.component.ts:34\n(anonymous)\t@\tauthorized-users.component.ts:12\nPromise.then\t\t\nAuthorizedUsersComponent_HmrLoad\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tclient:129\nnotifyListeners\t@\tclient:129\nnotifyListeners\t@\tclient:959\nhandleMessage\t@\tclient:904\nonMessage\t@\tclient:298\n(anonymous)\t@\tclient:428\n\n\n\nauthorized-users.component.ts:12 ERROR TypeError: Cannot read properties of null (reading 'pure')\n    at AuthorizedUsersComponent_Template (authorized-users.component.ts:36:43)\n(anonymous)\t@\tauthorized-users.component.ts:12\nPromise.then\t\t\nAuthorizedUsersComponent_HmrLoad\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tauthorized-users.component.ts:12\n(anonymous)\t@\tclient:129\nnotifyListeners\t@\tclient:129\nnotifyListeners\t@\tclient:959\nhandleMessage\t@\tclient:904\nonMessage\t@\tclient:298\n(anonymous)\t@\tclient:428\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nThere is another issue seemingly related to HMR and modules that I am writing up now. edit: https://github.com/angular/angular/issues/59640","Url":"https://github.com/angular/angular/issues/59639","RelatedDescription":"Open issue \"bug(HMR): `NgFor/AsyncPipe` break in module components when template/style reload occurs from that component\" (#59639)"},{"Id":"2800149275","IsPullRequest":true,"CreatedAt":"2025-01-20T19:27:58","Actor":"clydin","Number":"59637","RawContent":null,"Title":"fix(compiler-cli): handle conditional expressions when extracting dependencies","State":"open","Body":"Updates the HMR dependencies extraction logic to handle conditional expressions. For example, `providers: [condition ? providersA : providersB]`.\r\n\r\nCloses #59634","Url":"https://github.com/angular/angular/pull/59637","RelatedDescription":"Open PR \"fix(compiler-cli): handle conditional expressions when extracting dependencies\" (#59637)"},{"Id":"2800122618","IsPullRequest":true,"CreatedAt":"2025-01-20T19:08:13","Actor":"contesa737","Number":"59636","RawContent":null,"Title":"Update README.md","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [x] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [x] Build related changes\r\n- [x] CI related changes\r\n- [x] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59636","RelatedDescription":"Closed or merged PR \"Update README.md\" (#59636)"},{"Id":"2800121299","IsPullRequest":true,"CreatedAt":"2025-01-20T19:06:00","Actor":"arturovt","Number":"59635","RawContent":null,"Title":"fix(core): prevent stash listener conflicts","State":"open","Body":"The stash event listener is a global function that might be unsafely overridden if multiple microfrontend applications exist on the page.\r\n\r\nIn this commit, we create a map of `APP_ID` to stash event listener functions. This map prevents conflicts because multiple applications might be bootstrapped simultaneously on the client (one rendered on the server and one rendering only on the client).\r\n\r\nI.e., the code that might be used is:\r\n\r\n```ts\r\n// Given that `app-root` is rendered on the server\r\nbootstrapApplication(AppComponent, appConfig);\r\n\r\nbootstrapApplication(BlogRootComponent, appBlogConfig);\r\n```\r\n\r\nTwo bootstrapped applications would conflict and override each other's code.","Url":"https://github.com/angular/angular/pull/59635","RelatedDescription":"Open PR \"fix(core): prevent stash listener conflicts\" (#59635)"},{"Id":"2800064414","IsPullRequest":false,"CreatedAt":"2025-01-20T18:24:26","Actor":"mattlewis92","Number":"59634","RawContent":null,"Title":"HMR broken with dynamic component providers","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\nWhen trying out the new component HMR we ran into a couple issues when using dynamic component providers\n\nFor example:\n\n```\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [isDevelopmentMode ? DirectiveTimingService : []],\n  standalone: false,\n})\nexport class AppComponent {}\n```\n\nThrows `app.component.ts:108 ReferenceError: DirectiveTimingService is not defined` at runtime:\n\n![Image](https://github.com/user-attachments/assets/524f07e5-2c71-42eb-a588-88ff0c3cf54b)\n\nNot sure if this is the same or a different issue, but declaring a provider with `useFactory` and `deps` also throws an error\n\n\n```\n@Component({\n  selector: 'cu-prompt-template-empty-description',\n  templateUrl: './prompt-template-empty-description.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: DropdownListKeyboardController,\n      useFactory: (\n        parentInjector: Injector,\n        dropdownListKeyboardController?: DropdownListKeyboardController,\n      ) => {\n        if (!dropdownListKeyboardController) {\n          const injector = Injector.create({\n            providers: [{ provide: DropdownListKeyboardController }],\n            parent: parentInjector,\n          });\n          dropdownListKeyboardController = injector.get(\n            DropdownListKeyboardController,\n          );\n        }\n\n        return dropdownListKeyboardController;\n      },\n      deps: [\n        Injector,\n        [new Optional(), new SkipSelf(), DropdownListKeyboardController],\n      ],\n    },\n  ],\n  standalone: false,\n})\nexport class PromptTemplateEmptyDescriptionComponent {}\n```\n\n\nWill throw `ReferenceError: Optional is not defined`:\n\n![Image](https://github.com/user-attachments/assets/d9a2856b-8dab-4da8-aa9a-a3324d408f33)\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nPlease let me know if the information above isn't sufficient to create a test case!\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, elements\n... forms, language-service, localize, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/build                  19.1.3\n@angular/cdk                    18.2.2\n@angular/google-maps            15.2.9\n@schematics/angular             19.1.3\nng-packagr                      19.0.1\nrxjs                            7.8.0\ntypescript                      5.6.3\nwebpack                         5.96.1\nzone.js                         0.14.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59634","RelatedDescription":"Open issue \"HMR broken with dynamic component providers\" (#59634)"},{"Id":"2800000630","IsPullRequest":true,"CreatedAt":"2025-01-20T17:43:35","Actor":"pkozlowski-opensource","Number":"59633","RawContent":null,"Title":"Runtime refactor component ref directives","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59633","RelatedDescription":"Open PR \"Runtime refactor component ref directives\" (#59633)"},{"Id":"2799705345","IsPullRequest":false,"CreatedAt":"2025-01-20T16:04:18","Actor":"Sergiobop","Number":"59632","RawContent":null,"Title":"HMR Breaks self-referencing components","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nRelated to https://github.com/angular/angular/issues/59602\n\nHaving a nested component make \"children\" components not render with HMR enabled. When i tried `ng serve \\--no-hmr` everything works as expected.\n\n```ts\nimport { Component, Input } from '@angular/core';\n\ninterface Comment {\n  id: number;\n  author: string;\n  text: string;\n  children?: Comment[];\n}\n\n@Component({\n  selector: 'app-comment',\n  template: `\n    <div class=\"comment\">\n      <div class=\"comment-content\">\n        <strong>{{ comment.author }}</strong>: {{ comment.text }}\n      </div>\n\n      <div class=\"comment-children\">\n          <!-- THIS IS NOT RENDERED -->\n         @for (children of comment.children; track children.id) {\n          <app-comment [comment]=\"child\" />\n         }\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .comment {\n        margin: 10px 0;\n        padding-left: 20px;\n        border-left: 2px solid #ccc;\n      }\n      .comment-content {\n        margin-bottom: 5px;\n      }\n      .comment-children {\n        margin-top: 10px;\n      }\n    `,\n  ],\n})\nexport class CommentComponent {\n  @Input() comment!: Comment;\n}\n```\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.3\nNode: 20.18.0\nPackage Manager: npm 11.0.0\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n... service-worker\n\nPackage                            Version\n------------------------------------------------------------\n@angular-devkit/architect          0.1901.3\n@angular-devkit/build-angular      19.1.3\n@angular-devkit/core               18.2.8\n@angular-devkit/schematics         18.2.8\n@angular/cdk                       19.1.0\n@angular/cli                       19.1.3\n@angular/material                  19.1.0\n@angular/material-moment-adapter   19.1.0\n@angular/youtube-player            19.1.0\n@schematics/angular                19.1.3\nrxjs                               7.8.1\ntypescript                         5.7.3\nzone.js                            0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59632","RelatedDescription":"Open issue \"HMR Breaks self-referencing components\" (#59632)"},{"Id":"2799541453","IsPullRequest":true,"CreatedAt":"2025-01-20T15:16:28","Actor":"pkozlowski-opensource","Number":"59631","RawContent":null,"Title":"Runtime refactor component ref component view","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59631","RelatedDescription":"Open PR \"Runtime refactor component ref component view\" (#59631)"},{"Id":"2799377812","IsPullRequest":true,"CreatedAt":"2025-01-20T14:14:49","Actor":"pkozlowski-opensource","Number":"59630","RawContent":null,"Title":"docs: release notes for the v19.1.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59630","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.2 release\" (#59630)"},{"Id":"2799371674","IsPullRequest":true,"CreatedAt":"2025-01-20T14:10:32","Actor":"pkozlowski-opensource","Number":"59629","RawContent":null,"Title":"Bump version to \"v19.1.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59629","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.2\" with changelog.\" (#59629)"},{"Id":"2799303668","IsPullRequest":true,"CreatedAt":"2025-01-20T13:40:54","Actor":"hawkgs","Number":"59628","RawContent":null,"Title":"fix(devtools): increase font size and fix search border color in dark mode","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the new behavior?\r\n\r\n- Increase the font size slightly\r\n- Fix search input border color in dark mode\r\n- Get rid of horizontal separator between the icon and the field (as per the doc)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/59628","RelatedDescription":"Open PR \"fix(devtools): increase font size and fix search border color in dark mode\" (#59628)"},{"Id":"2799155065","IsPullRequest":false,"CreatedAt":"2025-01-20T12:35:45","Actor":"pahlers","Number":"59627","RawContent":null,"Title":"[RFC] Store config in the environment (ENV)","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncompiler\n\n### Description\n\n## Current solutions\n\nWe have several options to add configuration into a Angular application\n1. use `environment.ts` and add the configuration during the build fase,\n1. use `/assets/config.json` and fetch the configuration during the initialization of the application (which can go wrong, etc).\n1. Maybe there is another solutions I'm not aware of.\n\nAll these solutions have a con and that is *it can't change the configuration during deployment of the application*. \n\nWhich is bad because its violates the guideline `III. Config` of `The Twelve-Factor App`.\n\n## The Twelve-Factor App (https://12factor.net/)\n\n> The twelve-factor app is a methodology for building software-as-a-service apps that:\n> - Use declarative formats for setup automation, to minimize time and cost for new developers joining the project;\n> - Have a clean contract with the underlying operating system, offering maximum portability between execution environments;\n> - Are suitable for deployment on modern cloud platforms, obviating the need for servers and systems administration;\n> - Minimize divergence between development and production, enabling continuous deployment for maximum agility;\n> - And can scale up without significant changes to tooling, architecture, or development practices.\n> The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc).\n\n*As a developer we want to follow these guidelines so the app can be deployed in several ways on several systems.*\n\n## III. Config - Store config in the environment\n\n> An app’s config is everything that is likely to vary between deploys (staging, production, developer environments, etc). This includes:\n> \n> - Resource handles to the database, Memcached, and other backing services\n> - Credentials to external services such as Amazon S3 or Twitter\n> - Per-deploy values such as the canonical hostname for the deploy\n> \n> Apps sometimes store config as constants in the code. This is a violation of twelve-factor, which requires strict separation of config from code. Config varies substantially across deploys, code does not.\n\nAs you can read the `environment.ts` solution violates this rule `store config as constants in the code` (but I like that the config is build into the application).\n\nSo why don't want I use the `/assets/config.json` solution? Because;\n- **Performance**. Every time the application starts it needs to fetch the configuration file.\n- **Failure**. Fetching the configuration file could be going wrong. So you need to implement a fail-over and an error-page to inform the user, etc.\n\n## Solution \n*I would like to see a solution which provides a way to add the configuration during the deployment of the server in the environment as the ` III. Config - Store config in the environment` rule suggests.*\n\n### Proposed solution\n\nInspired by the working of the Angular [TransferState](https://angular.dev/api/core/TransferState)\n\n1. The web server transfers the environments to the `environment`-element in the index.html during startup, and\n2. During startup of the application the content of the `environment`-element is parsed an can be used as configuration.\n\nDuring development a default configuration is used.\n\n\n\n### Alternatives considered\n\nAlways compile the `environment.ts` in a separated file, in a predictable format, so we can change the values during startup of the web server.","Url":"https://github.com/angular/angular/issues/59627","RelatedDescription":"Open issue \"[RFC] Store config in the environment (ENV)\" (#59627)"},{"Id":"2799070354","IsPullRequest":true,"CreatedAt":"2025-01-20T11:58:25","Actor":"hawkgs","Number":"59626","RawContent":null,"Title":"feat(devtools): select the root element by default","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nNothing is selected by default.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nSelect the application root element when you start Angular DevTools.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59626","RelatedDescription":"Open PR \"feat(devtools): select the root element by default\" (#59626)"},{"Id":"2799017121","IsPullRequest":true,"CreatedAt":"2025-01-20T11:33:30","Actor":"crisbeto","Number":"59625","RawContent":null,"Title":"fix(core): skip component ID collision warning during SSR","State":"open","Body":"The component ID collision check tries to account for components being replaced by checking for the `type`, however that might not work during SSR.\r\n\r\nThese changes disable the warning since it's primarily useful on the browser anyways.\r\n\r\nCloses https://github.com/angular/angular-cli/issues/29408\r\n","Url":"https://github.com/angular/angular/pull/59625","RelatedDescription":"Open PR \"fix(core): skip component ID collision warning during SSR\" (#59625)"},{"Id":"2798797834","IsPullRequest":false,"CreatedAt":"2025-01-20T10:06:39","Actor":"alan-agius4","Number":"59624","RawContent":null,"Title":"Show warning when `withEnabledBlockingInitialNavigation` Is used with `provideClientHydration`","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nrouter, platform-browser\n\n### Description\n\nThe `withEnabledBlockingInitialNavigation` option was designed specifically for use cases involving deferred hydration to prevent UI flickers during initial navigation. However, when used with `provideClientHydration`, which supports standard hydration, the issue of flickering does not arise. To avoid confusion and misuse, a warning should be displayed in the console when these two configurations are used together, as they are not intended to work in tandem.\n\n### Proposed solution\n\nIssue warning when these 2 methods are used togather.\n","Url":"https://github.com/angular/angular/issues/59624","RelatedDescription":"Open issue \"Show warning when `withEnabledBlockingInitialNavigation` Is used with `provideClientHydration`\" (#59624)"},{"Id":"2798659578","IsPullRequest":true,"CreatedAt":"2025-01-20T09:11:53","Actor":"angular-robot","Number":"59623","RawContent":null,"Title":"build: update dependency shiki to v2","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [shiki](https://redirect.github.com/shikijs/shiki) ([source](https://redirect.github.com/shikijs/shiki/tree/HEAD/packages/shiki)) | devDependencies | major | [`^1.11.1` -> `^2.0.0`](https://renovatebot.com/diffs/npm/shiki/1.27.0/2.0.3) |\n| [shiki](https://redirect.github.com/shikijs/shiki) ([source](https://redirect.github.com/shikijs/shiki/tree/HEAD/packages/shiki)) | dependencies | major | [`^1.10.3` -> `^2.0.0`](https://renovatebot.com/diffs/npm/shiki/1.29.1/2.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>shikijs/shiki (shiki)</summary>\n\n### [`v2.0.3`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.3)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.2...v2.0.3)\n\n#####    🐞 Bug Fixes\n\n-   **core**: Soft require `engine` options  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(10a6f)</samp>](https://redirect.github.com/shikijs/shiki/commit/10a6f781)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.2...v2.0.3)\n\n### [`v2.0.2`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.2)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.1...v2.0.2)\n\n#####    🐞 Bug Fixes\n\n-   Mark `engine` required in `createHighlighterCore`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(1212f)</samp>](https://redirect.github.com/shikijs/shiki/commit/1212f473)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.1...v2.0.2)\n\n### [`v2.0.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v2.0.0...v2.0.1)\n\n#####    🚀 Features\n\n-   Improve warning messages  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(0f27a)</samp>](https://redirect.github.com/shikijs/shiki/commit/0f27a20d)\n\n#####    🐞 Bug Fixes\n\n-   Warn about missing deprecation  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(708e3)</samp>](https://redirect.github.com/shikijs/shiki/commit/708e3f24)\n-   **colorized-brackets**: Use object style `htmlStyle`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(eab5b)</samp>](https://redirect.github.com/shikijs/shiki/commit/eab5bd18)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v2.0.0...v2.0.1)\n\n### [`v2.0.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v2.0.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.29.1...v2.0.0)\n\n##### Read the announcement: [Shiki v2](https://shiki.style/blog/v2)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.29.1...v2.0.0)\n\n### [`v1.29.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.29.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.29.0...v1.29.1)\n\n#####    🚀 Features\n\n-   Improve warning messages  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(ad525)</samp>](https://redirect.github.com/shikijs/shiki/commit/ad525a9c)\n-   Expose `shiki/types`  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(0b027)</samp>](https://redirect.github.com/shikijs/shiki/commit/0b027f3d)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.29.0...v1.29.1)\n\n### [`v1.29.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.29.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.28.0...v1.29.0)\n\n#####    🚀 Features\n\n-   **transformers**: Introduce `matchAlgorithm` option for new matching algorithm  -  by [@&#8203;fuma-nama](https://redirect.github.com/fuma-nama) and [@&#8203;antfu](https://redirect.github.com/antfu) in [https://github.com/shikijs/shiki/issues/835](https://redirect.github.com/shikijs/shiki/issues/835) [<samp>(ceca9)</samp>](https://redirect.github.com/shikijs/shiki/commit/ceca984e)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.28.0...v1.29.0)\n\n### [`v1.28.0`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.28.0)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.2...v1.28.0)\n\n#####    🚀 Features\n\n-   **engine-js**: Improve performance for some languages  -  by [@&#8203;slevithan](https://redirect.github.com/slevithan) in [https://github.com/shikijs/shiki/issues/897](https://redirect.github.com/shikijs/shiki/issues/897) [<samp>(e86ca)</samp>](https://redirect.github.com/shikijs/shiki/commit/e86ca5fa)\n\n#####    🐞 Bug Fixes\n\n-   **rehype**: Improve `lazy` performance  -  by [@&#8203;fuma-nama](https://redirect.github.com/fuma-nama) in [https://github.com/shikijs/shiki/issues/896](https://redirect.github.com/shikijs/shiki/issues/896) [<samp>(5c10f)</samp>](https://redirect.github.com/shikijs/shiki/commit/5c10f25b)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.2...v1.28.0)\n\n### [`v1.27.2`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.27.2)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.1...v1.27.2)\n\n*No significant changes*\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.1...v1.27.2)\n\n### [`v1.27.1`](https://redirect.github.com/shikijs/shiki/releases/tag/v1.27.1)\n\n[Compare Source](https://redirect.github.com/shikijs/shiki/compare/v1.27.0...v1.27.1)\n\n#####    🚀 Features\n\n-   **engine-js**: Update deps, support more languages  -  by [@&#8203;slevithan](https://redirect.github.com/slevithan) and [@&#8203;antfu](https://redirect.github.com/antfu) in [https://github.com/shikijs/shiki/issues/890](https://redirect.github.com/shikijs/shiki/issues/890) [<samp>(d82af)</samp>](https://redirect.github.com/shikijs/shiki/commit/d82af156)\n-   **langs-precompiled**: Mark `EmulatedRegExp` as pure  -  by [@&#8203;antfu](https://redirect.github.com/antfu) [<samp>(11ef0)</samp>](https://redirect.github.com/shikijs/shiki/commit/11ef0cd9)\n\n#####     [View changes on GitHub](https://redirect.github.com/shikijs/shiki/compare/v1.27.0...v1.27.1)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59623","RelatedDescription":"Open PR \"build: update dependency shiki to v2\" (#59623)"},{"Id":"2798524699","IsPullRequest":true,"CreatedAt":"2025-01-20T08:13:53","Actor":"angular-robot","Number":"59621","RawContent":null,"Title":"build: lock file maintenance","State":"open","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwiYXJlYTogYnVpbGQgJiBjaSIsInRhcmdldDogcGF0Y2giXX0=-->\n","Url":"https://github.com/angular/angular/pull/59621","RelatedDescription":"Open PR \"build: lock file maintenance\" (#59621)"},{"Id":"2798436642","IsPullRequest":true,"CreatedAt":"2025-01-20T08:10:16","Actor":"alan-agius4","Number":"59620","RawContent":null,"Title":"fix(compiler): update `@ng/component` URL to be relative","State":"closed","Body":"This change is required to resolve https://github.com/angular/angular-cli/pull/29248 and works in conjunction with https://github.com/angular/angular-cli/pull/29386. It ensures that HMR (Hot Module Replacement) functions correctly with `base href`, proxies, and other advanced development setups.\r\n","Url":"https://github.com/angular/angular/pull/59620","RelatedDescription":"Closed or merged PR \"fix(compiler): update `@ng/component` URL to be relative\" (#59620)"},{"Id":"2798148251","IsPullRequest":false,"CreatedAt":"2025-01-20T05:44:34","Actor":"sarahwang93","Number":"59618","RawContent":null,"Title":"Some features do not work well under Angular 17","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nYes\n\n### Description\n\nNgOnChange and Angular Directive do not work on Angular 17. \nSituation: I tried to implemented SimpleChanges with ngOnChange and angular directive under Angular 17, both of these features do not work. I have googled most of tutorials including angular tutorial, and reproduced issues on my environment, both of them does not work. \n\nAnd the Injection Token, I have labelled the value of injection token, as well as useValue in providers, where the error is thrown NoInjectionProvider, is there any step I was missing? \n\n----------->  ask to angular team\nRegards, \n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nas above\nEspecially the directive and SimpleChange interface.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 17.3.3\nNode: 23.5.0 (Unsupported)\nPackage Manager: npm 10.9.2\nOS: darwin x64\n\nAngular: 17.3.3\n... animations, cli, common, compiler, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1703.3\n@angular-devkit/build-angular   17.3.3\n@angular-devkit/core            17.3.3\n@angular-devkit/schematics      17.3.3\n@angular/cdk                    12.1.4\n@angular/compiler-cli           17.3.10\n@angular/fire                   18.0.1\n@angular/http                   7.2.16\n@angular/material               12.1.4\n@schematics/angular             17.3.3\nrxjs                            7.8.1\ntypescript                      5.4.3\nzone.js                         0.14.4\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59618","RelatedDescription":"Closed issue \"Some features do not work well under Angular 17\" (#59618)"},{"Id":"2798213913","IsPullRequest":false,"CreatedAt":"2025-01-20T05:19:50","Actor":"blackat","Number":"59619","RawContent":null,"Title":"Input signal with default value is undefined in the template","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHello,\nin my component I use input signal with a default value provided by a static method:\n```\nsymbolProfile = input<SymbolProfile>(SymbolProfileMaker.create());\n```\n\nin the template I am obliged to check the undefined before using the value:\n```\n<p-accordion class=\"block mt-5\">\n      <p-accordionTab header=\"{{  symbolProfile() && symbolProfile().companyName }} Overview\">\n        <span class=\"accordion-description\">{{ symbolProfile() && symbolProfile().description }}</span>\n      </p-accordionTab>\n</p-accordion>\n```\n\nI would have thought that providing a default value would have avoided me to check against undefined but it seems the default value in the input signal is provided too late.\nIf I log the input signal value in the constructor I can see the default value.\n\nCould you please tell me what I am doing wrong or why I need to check for undefined?\n\nThanks a in advance.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.1.3\nNode: 22.6.0\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 18.1.3\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... forms, localize, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1801.3\n@angular-devkit/build-angular   18.1.3\n@angular-devkit/core            18.1.3\n@angular-devkit/schematics      18.1.3\n@schematics/angular             18.1.3\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59619","RelatedDescription":"Open issue \"Input signal with default value is undefined in the template\" (#59619)"},{"Id":"2798146064","IsPullRequest":true,"CreatedAt":"2025-01-20T04:25:02","Actor":"vladboisa","Number":"59617","RawContent":null,"Title":"docs(docs-infra): add comparing section of for control-flow","State":"open","Body":"Added the ` Comparing built-in control flow to NgFor ` section, and implement the tip section to know more about this in core\r\n\r\nFixes Provide example with track function in `@for` docs #59356\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\n\r\nIssue Number: #59356\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59617","RelatedDescription":"Open PR \"docs(docs-infra): add comparing section of for control-flow\" (#59617)"},{"Id":"2797873066","IsPullRequest":false,"CreatedAt":"2025-01-20T02:27:55","Actor":"kzhdev","Number":"59616","RawContent":null,"Title":"WebSocket onopen callback invokation throws exception","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm trying to use WebSocket. The WbSocket's onopen invokation callback throws the following exception:\n\n`\nTypeError [ERR_INVALID_ARG_TYPE]: The \"event\" argument must be an instance of Event. Received an instance of Event\n    at WebSocket.dispatchEvent (node:internal/event_target:757:13)\n    at fireEvent (node:internal/deps/undici/undici:11637:14)\n    at #onConnectionEstablished (node:internal/deps/undici/undici:12806:9)\n    at node:internal/deps/undici/undici:12614:66\n    at Object.processResponse (node:internal/deps/undici/undici:11980:11)\n    at node:internal/deps/undici/undici:10709:23\n    at _ZoneDelegate.invokeTask (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:402:33)\n    at ZoneImpl.runTask (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:159:47)\n    at drainMicroTaskQueue (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:581:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  code: 'ERR_INVALID_ARG_TYPE'\n}\n`\n\nHere is how to reproduce the issue:\n\n1. Create a WebSocket service:\n\n`import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketDataService {\n\n    private WS_API_URL = \"wss://advanced-trade-ws.coinbase.com\";\n    private _ws: WebSocket;\n\n    constructor() {\n        this._ws = new WebSocket(this.WS_API_URL);\n        this._ws.addEventListener(\"open\", (event:Event) => {\n            console.log(event);\n        });\n        this._ws.onmessage = (data: MessageEvent) => {\n            console.log(data);\n        }; \n        this._ws.onerror = (ev) => { console.error(ev); };\n        this._ws.onclose = (ev: CloseEvent) => {\n            console.info(ev);\n        }\n    }\n}\n`\n2. Simple inject the Service in the app.component.ts\n\n`import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MarketDataService } from './services/market_data.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'coinbase';\n\n  constructor(md_Service: MarketDataService) {\n  }\n}\n`\n\n### Please provide a link to a minimal reproduction of the bug\n\nSee the description\n\n### Please provide the exception or error you saw\n\n```true\nTypeError [ERR_INVALID_ARG_TYPE]: The \"event\" argument must be an instance of Event. Received an instance of Event\n    at WebSocket.dispatchEvent (node:internal/event_target:757:13)\n    at fireEvent (node:internal/deps/undici/undici:11637:14)\n    at #onConnectionEstablished (node:internal/deps/undici/undici:12806:9)\n    at node:internal/deps/undici/undici:12614:66\n    at Object.processResponse (node:internal/deps/undici/undici:11980:11)\n    at node:internal/deps/undici/undici:10709:23\n    at _ZoneDelegate.invokeTask (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:402:33)\n    at ZoneImpl.runTask (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:159:47)\n    at drainMicroTaskQueue (D:\\repo\\coinbase\\coinbase\\.angular\\vite-root\\coinbase\\node_modules\\zone.js\\fesm2015\\zone-node.js:581:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  code: 'ERR_INVALID_ARG_TYPE'\n}\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.1\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.1.1\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.1\n@angular-devkit/build-angular   19.1.1\n@angular-devkit/core            19.1.1\n@angular-devkit/schematics      19.1.1\n@angular/cdk                    19.1.0\n@angular/material               19.1.0\n@schematics/angular             19.1.1\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59616","RelatedDescription":"Closed issue \"WebSocket onopen callback invokation throws exception\" (#59616)"},{"Id":"2797833366","IsPullRequest":false,"CreatedAt":"2025-01-19T21:12:46","Actor":"eneajaho","Number":"59615","RawContent":null,"Title":"Discussion: How to name functions that compose signals, inject fn & destroy ref?","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nCreating composables in Angular is really easy nowadays with the help of (inject, DestroyRef & signals), just like we can do custom hooks in react or composable fns in Vue. \nMy question to the Angular team and the community is: how to properly name these functions? \n\nIf a function uses **inject** internally (either to inject DestroyRef, or some other token), I think we should properly showcase that the function needs to be called in an injection context, that's why we went with `injectX` pattern in `ngxtension`, so that devs always make sure those are called in an injection context. \n\nIf a function just composes signals (without any usage of **effect** which also needs an injection context), how should we name those functions? \n\nExample with a counter:\n\n```ts\nexport function createCounter(initialValue: number = 0): WritableSignal<number> & {increase: () => void; decrease: () => void; reset: () => void} {\n  const c = signal(initialValue);\n  \n  return Object.assign(c, { \n    increase: () => {\n       c.update(x => x + 1);\n    },\n    decrease: () => {\n       c.update(x => x - 1);\n    },\n    reset: () => {\n       c.set(initialValue);\n    }\n  })\n}\n\n// usage\n\n@Component()\nexport class SomeCmp {\n  c = createCounter();\n\n  onClick() {\n    this.c.increase();\n    this.c.decrease();\n\n    this.c.reset();\n    this.c.set(100);\n    this.c.update(x => x + 2);\n  }\n}\n```\n\nWhat would be the best way to go forward for the naming convention of these type of functions? \n- **useCounter**?  - follows the same pattern as the Vue and React community\n- **createCounter**?   - makes sense as it creates a counter that we can update using specific functions\n- **injectCounter**? (doesn't make much sense as we don't need inject here)\n\n\n--- \n\nIn cases of functions that need inject, should we also use these other patterns inside of `injectX` ? \n\nExample with network state. \n\nHaving `injectNetwork` as a fn name tells me as a dev that I need injection context, because I've subscribed to some browser state and I need to clean up the subscription. \n\nHaving `createNetwork` doesn't make much sense here as we are not creating a network state, but we're reading it from somewhere else. \n\nHaving `useNetwork` feels better but can be misused because the name doesn't tell me that it needs injection context. \n\n---\n\nHow should we go with this?\n\n### Proposed solution\n\nUse `createX` when we create functions that provide some special abilities to signals. \nUse `injectX` when we create functions that use inject to inject DestroyRef or other deps internally (I'm not totally sold on this one). \n\n### Alternatives considered\n\nUse `useX` as other communities. ","Url":"https://github.com/angular/angular/issues/59615","RelatedDescription":"Open issue \"Discussion: How to name functions that compose signals, inject fn & destroy ref?\" (#59615)"},{"Id":"2797750928","IsPullRequest":true,"CreatedAt":"2025-01-19T17:54:59","Actor":"arturovt","Number":"59614","RawContent":null,"Title":"refactor(core): prevent duplicating `isRootView` checks","State":"open","Body":"The `type_checks` module already exposes a utility function that checks whether `LView` is marked as a root view. There is no need to check flags in other places, as we can reuse the helper function.","Url":"https://github.com/angular/angular/pull/59614","RelatedDescription":"Open PR \"refactor(core): prevent duplicating `isRootView` checks\" (#59614)"},{"Id":"2797606873","IsPullRequest":true,"CreatedAt":"2025-01-19T12:45:51","Actor":"ChristopherPHolder","Number":"59613","RawContent":null,"Title":"docs: reduce cost of reflow","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [x] Other... Please describe:\r\n\r\nPerformance improvement to the  [docs](https://angular.dev)\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nOn the [Component testing scenarios page](https://angular.dev/guide/testing/components-scenarios) the rendering performance is low. \r\n\r\nThe current cost of a `full-relayout` is approximately 800ms on a mid-tier mobile device.\r\n\r\n![image](https://github.com/user-attachments/assets/6bfb773b-3537-4e16-aad4-2812a9e7422b)\r\n\r\nIssue Number: N/A\r\n\r\n## What is the new behavior?\r\n\r\nUsing CSS containment the `full-relayout` on a mid-tier device takes \r\n![image](https://github.com/user-attachments/assets/1d10ac3c-e033-4d4e-b95e-83d70e80c635)\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n## Other information\r\n\r\nThe `cost of a full-relayout` was calculated by:\r\n\r\n> Changing the zoom level of the page causes recalculations of styles. When running the script multiple times in a row while recording in the performance tab, you can and get rough estimations about the different parts of the DOM.\r\n\r\nThe script and many other can be found at [@push-based/awesome-web-performance-snippets](https://github.com/push-based/awesome-web-performance-snippets/tree/main/snippets/full-relayout)\r\n","Url":"https://github.com/angular/angular/pull/59613","RelatedDescription":"Open PR \"docs: reduce cost of reflow\" (#59613)"},{"Id":"2797557887","IsPullRequest":false,"CreatedAt":"2025-01-19T10:45:22","Actor":"naveedahmed1","Number":"59612","RawContent":null,"Title":"Feature Request: Intelligent Handling of `@` Character in Angular Templates","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler\n\n### Is this a regression?\n\nYes\n\n### Description\n\n## **Description**\nThe new control flow syntax introduced in Angular (e.g., `@if`, `@for`) significantly improves template readability and logic management. However, it introduces an unexpected limitation when writing an `@` character directly in HTML templates, which is common in scenarios such as email addresses.\n\nCurrently, when the `@` character is used in text (e.g., `someone@example.com`), the compiler throws the following error:\n\n> \"If you meant to write the `@` character, you should use the `&#64;` HTML entity instead. [plugin angular-compiler]\"\n\nThis creates unnecessary friction and impacts developer experience, particularly when working with textual content that naturally includes the `@` character.\n\n---\n\n## **Proposed Solution**\nThe Angular compiler should be enhanced to intelligently distinguish between:\n1. **Control flow statements** (e.g., `@if`, `@for`) and  \n2. **Textual uses of the `@` character** (e.g., email addresses, usernames, etc.).\n\nInstead of requiring developers to escape the `@` character with the `&#64;` entity, the compiler could determine its context and handle it appropriately:\n- Treat it as a control flow directive if it matches a valid syntax (e.g., `@if`, `@for`).\n- Treat it as plain text if it appears within a string or text node.\n\n---\n\n## **Benefits**\n- **Improved Developer Experience**: Eliminates unnecessary escaping for the `@` character in common scenarios like email addresses, making templates cleaner and more intuitive.\n- **Backward Compatibility**: Existing templates using `&#64;` for the `@` character will remain functional.\n- **Aligns with Expectations**: Developers expect `@` to work as plain text unless explicitly used as a control flow statement.\n\n---\n\n## **Example**\n### Current Behavior\n```html\n<p>Contact us at: &#64;example.com</p> <!-- Required to avoid compilation error -->\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.6\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: win32 x64\n\nAngular: 19.0.5\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.6\n@angular-devkit/build-angular   19.0.6\n@angular-devkit/core            19.0.6\n@angular-devkit/schematics      19.0.6\n@angular/cdk                    19.1.0-next.1\n@angular/cli                    19.0.6\n@angular/fire                   18.0.1\n@angular/google-maps            19.1.0-next.1\n@angular/material               19.1.0-next.1\n@angular/pwa                    19.0.6\n@angular/ssr                    19.0.6\n@schematics/angular             19.0.6\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59612","RelatedDescription":"Open issue \"Feature Request: Intelligent Handling of `@` Character in Angular Templates\" (#59612)"},{"Id":"2797544533","IsPullRequest":true,"CreatedAt":"2025-01-19T10:12:07","Actor":"arturovt","Number":"59611","RawContent":null,"Title":"refactor(core): prevent duplicating `componentOffset` checks","State":"open","Body":"The `type_checks` module already exposes a utility function that checks whether `TNode.componentOffset` is greater than -1. There is no need to check that property manually in other places, as we can reuse the helper function.","Url":"https://github.com/angular/angular/pull/59611","RelatedDescription":"Open PR \"refactor(core): prevent duplicating `componentOffset` checks\" (#59611)"},{"Id":"2797158303","IsPullRequest":false,"CreatedAt":"2025-01-18T22:08:17","Actor":"JCornat","Number":"59610","RawContent":null,"Title":"HMR fatal error URL constructor with browserslistrc file","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello, I have an issue with the new HMR when my project contains a ` .browserslistrc` file.\n\nIt contains : \n\n```\n> 0.2% and not dead\n```\n\nWhen compiling, I have these warnings :\n\n```\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/app.component.ts:13:99:\n      13 │ ... + encodeURIComponent(t), import.meta.url).href).then(m => m.de...\n         ╵                              ~~~~~~~~~~~\n\n\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/app.component.ts:13:361:\n      13 │ ...efined\" || ngDevMode) && (import.meta.hot && import.meta.hot.on...\n         ╵                              ~~~~~~~~~~~\n\n\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/app.component.ts:13:380:\n      13 │ ...e) && (import.meta.hot && import.meta.hot.on(\"angular:component...\n         ╵                              ~~~~~~~~~~~\n\n\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/empty/empty.component.ts:11:114:\n      11 │ ... + encodeURIComponent(t), import.meta.url).href).then(m => m.de...\n         ╵                              ~~~~~~~~~~~\n\n\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/empty/empty.component.ts:11:369:\n      11 │ ...efined\" || ngDevMode) && (import.meta.hot && import.meta.hot.on...\n         ╵                              ~~~~~~~~~~~\n\n\n▲ [WARNING] \"import.meta\" is not available in the configured target environment (\"chrome109.0\", \"edge131.0\", \"firefox115.0\", \"ios11.0\", \"opera114.0\", \"safari16.6\" + 5 overrides) and will be empty [empty-import-meta]\n\n    src/app/empty/empty.component.ts:11:388:\n      11 │ ...e) && (import.meta.hot && import.meta.hot.on(\"angular:component...\n         ╵                              ~~~~~~~~~~~\n```\n\nAnd when I load the app with Firefox or Chrome, I have this fatal error \n\n```\nUncaught TypeError: URL constructor: /@ng/component?c=src%2Fapp%2Fempty%2Fempty.component.ts%40C7zEmptyComponent&t=1737229993392 is not a valid URL. main.js:39:27\n    C7zEmptyComponent_HmrLoad main.js:39\n    <anonymous> empty.component.ts:7\n    <anonymous> empty.component.ts:7\n    C7zEmptyComponent_HmrLoad main.js:39\n    <anonymous> empty.component.ts:7\n    <anonymous> empty.component.ts:7\n```\n\n\nWhen I remove the ` .browserslistrc` file, I have no more errors.\n\nThank you for your time !\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/JCornat/angular-19-1-hmr-bug\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.2\nNode: 22.4.1\nPackage Manager: npm 10.8.1\nOS: linux x64\n\nAngular: 19.1.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.2\n@angular-devkit/build-angular   19.1.2\n@angular-devkit/core            19.1.2\n@angular-devkit/schematics      19.1.2\n@angular/cli                    19.1.2\n@schematics/angular             19.1.2\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n","Url":"https://github.com/angular/angular/issues/59610","RelatedDescription":"Closed issue \"HMR fatal error URL constructor with browserslistrc file\" (#59610)"},{"Id":"2797066899","IsPullRequest":false,"CreatedAt":"2025-01-18T16:36:38","Actor":"LuckyT89","Number":"59608","RawContent":null,"Title":"Add link to Language Service page from the Installation page","State":"open","Body":"### Describe the problem that you experienced\n\nIt would be helpful to have a blurb somewhere on the Installation page of the documentation with a recommendation to setup the Language Service extension and a link to that page of the documentation. For new Angular developers, this is the first place they will come to learn how to setup a new project and get going. The Language Service page is way further down in the documentation and a new developer could potentially spend a very long time without this critical editor extension until they finally stumble upon that page. This should be highlighted at the very start of their journey. \n\n### Enter the URL of the topic with the problem\n\nhttps://angular.dev/installation\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\n```true\n\n```","Url":"https://github.com/angular/angular/issues/59608","RelatedDescription":"Open issue \"Add link to Language Service page from the Installation page\" (#59608)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2800275016","IsPullRequest":false,"CreatedAt":"2025-01-20T21:10:27","Actor":"alan-agius4","Number":"29424","RawContent":null,"Title":"`Error: [vite] cannot find entry point module 'file:///D:/<PROJECT_FOLDER>/.angular/vite-root/spa-near-me/@ng/component?c=src%2Fapp%2Fcomponents%2Fheader%2Fheader.component.ts%40HeaderComponent&t=1737401566323'`on Windows","State":"open","Body":"> I updated all my projects to use \"@angular/core\": \"19.1.2\" & \"@angular/cli\": \"19.1.3\". But now when I start the dev server using \"ng serve\" and visit the localhost:4200, the nodejs server crashes with the following error:\n> \n> `\n> NOTE: Raw file sizes do not reflect development server per-request transformations.\n>   ➜  Local:   http://localhost:4200/\n>   ➜  press h + enter to show help\n> node:internal/process/promises:394\n>     triggerUncaughtException(err, true /* fromPromise */);\n>     ^\n> \n> Error: [vite] cannot find entry point module 'file:///D:/<PROJECT_FOLDER>/.angular/vite-root/spa-near-me/@ng/component?c=src%2Fapp%2Fcomponents%2Fheader%2Fheader.component.ts%40HeaderComponent&t=1737401566323'.\n>     at fetchModule (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:51477:13)\n>     at async handleInvoke (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44166:22)\n>     at async EventEmitter.listenerForInvokeHandler (file:///D:/<PROJECT_FOLDER>/node_modules/@angular/build/node_modules/vite/dist/node/chunks/dep-BJP6rrE_.js:44239:19) {`\n> \n> All my projects are using tailwind CSS and I've also enabled `provideExperimentalZonelessChangeDetection()` .\n> \n> This problem goes away if I use `ng serve --no-hmr`.\n> \n> Here are my dependencies \n> `\n> \"dependencies\": {\n>     \"@angular/animations\": \"^19.1.2\",\n>     \"@angular/common\": \"^19.1.2\",\n>     \"@angular/compiler\": \"^19.1.2\",\n>     \"@angular/core\": \"^19.1.2\",\n>     \"@angular/forms\": \"^19.1.2\",\n>     \"@angular/platform-browser\": \"^19.1.2\",\n>     \"@angular/platform-browser-dynamic\": \"^19.1.2\",\n>     \"@angular/platform-server\": \"^19.1.2\",\n>     \"@angular/router\": \"^19.1.2\",\n>     \"@angular/ssr\": \"^19.1.3\",\n>     \"express\": \"^4.18.2\",\n>     \"rxjs\": \"~7.8.0\",\n>     \"tslib\": \"^2.3.0\",\n>     \"zone.js\": \"~0.15.0\"\n>   },\n>   \"devDependencies\": {\n>     \"@angular-devkit/build-angular\": \"^19.1.3\",\n>     \"@angular/cli\": \"^19.1.3\",\n>     \"@angular/compiler-cli\": \"^19.1.2\",\n>     \"@types/express\": \"^4.17.17\",\n>     \"@types/jasmine\": \"~5.1.0\",\n>     \"@types/node\": \"^18.18.0\",\n>     \"autoprefixer\": \"^10.4.20\",\n>     \"daisyui\": \"^4.12.23\",\n>     \"jasmine-core\": \"~5.5.0\",\n>     \"karma\": \"~6.4.0\",\n>     \"karma-chrome-launcher\": \"~3.2.0\",\n>     \"karma-coverage\": \"~2.2.0\",\n>     \"karma-jasmine\": \"~5.1.0\",\n>     \"karma-jasmine-html-reporter\": \"~2.1.0\",\n>     \"lucide-angular\": \"^0.473.0\",\n>     \"postcss\": \"^8.5.1\",\n>     \"prettier\": \"^3.4.2\",\n>     \"tailwindcss\": \"^3.4.17\",\n>     \"typescript\": \"~5.7.2\",\n>     \"xmlbuilder\": \"^15.1.1\"\n>   }`\n> \n>  \n\n _Originally posted by @rabikr in [#59602](https://github.com/angular/angular/issues/59602#issuecomment-2603131259)_","Url":"https://github.com/angular/angular-cli/issues/29424","RelatedDescription":"Open issue \"`Error: [vite] cannot find entry point module 'file:///D:/<PROJECT_FOLDER>/.angular/vite-root/spa-near-me/@ng/component?c=src%2Fapp%2Fcomponents%2Fheader%2Fheader.component.ts%40HeaderComponent&t=1737401566323'`on Windows\" (#29424)"},{"Id":"2797651802","IsPullRequest":false,"CreatedAt":"2025-01-20T17:51:24","Actor":"zip-fa","Number":"29400","RawContent":null,"Title":"v19.1 with SSR not building/responding in dev mode: The operation was aborted due to timeout","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0\n\n### Description\n\nHey. Updating v19.0.x app to v19.1.x breaks build with this error:\n\n\n✘ [ERROR] An error occurred while extracting routes.\n\nRoutes extraction was aborted.\nTimeoutError: The operation was aborted due to timeout\n\nNo routes, no code, no logic.\nMinimal repro available here: https://github.com/zip-fa/19-1-endless-build\n\nSwitching from server config:\n\n```json\n\"server\": \"src/main.server.ts\",\n        \"outputMode\": \"server\",\n        \"ssr\": {\n          \"entry\": \"src/server.ts\"\n        }\n```\n\nTo static config:\n\n```json\n\"outputMode\": \"static\"\n```\nimmediately helps\n\n### Minimal Reproduction\n\nnx build 19-1-endless-build\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nng version\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.2\nNode: 22.13.0\nPackage Manager: npm 10.9.2\nOS: darwin arm64\n\nAngular: 19.1.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.2\n@angular-devkit/build-angular   19.1.2\n@angular-devkit/core            19.1.2\n@angular-devkit/schematics      19.1.2\n@angular/cli                    19.1.2\n@angular/ssr                    19.1.2\n@schematics/angular             19.1.2\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29400","RelatedDescription":"Closed issue \"v19.1 with SSR not building/responding in dev mode: The operation was aborted due to timeout\" (#29400)"},{"Id":"2798800042","IsPullRequest":true,"CreatedAt":"2025-01-20T17:51:23","Actor":"alan-agius4","Number":"29411","RawContent":null,"Title":"fix(@angular/ssr): unblock route extraction with `withEnabledBlockingInitialNavigation`","State":"closed","Body":"\r\nThis fix ensures that route extraction is not blocked when `withEnabledBlockingInitialNavigation` is used.\r\n\r\nCloses #29400\r\n","Url":"https://github.com/angular/angular-cli/pull/29411","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): unblock route extraction with `withEnabledBlockingInitialNavigation`\" (#29411)"},{"Id":"2799722202","IsPullRequest":true,"CreatedAt":"2025-01-20T16:08:41","Actor":"devversion","Number":"29423","RawContent":null,"Title":"Migrate more tests to `rules_js`","State":"open","Body":"See individual commits","Url":"https://github.com/angular/angular-cli/pull/29423","RelatedDescription":"Open PR \"Migrate more tests to `rules_js`\" (#29423)"},{"Id":"2799442474","IsPullRequest":false,"CreatedAt":"2025-01-20T15:17:31","Actor":"denisyilmaz","Number":"29420","RawContent":null,"Title":"Since 19.1: `CommonEngine` SSR App crashing in 19.1 when `UrlMatcher` is used","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n19.0\n\n### Description\n\nCommit 6edb908837 introduced a error message to indicate that `UrlMatcher` is not supported with SSR.\nAfter further discussion in  angular/angular-cli#29384 @alan-agius4 described that moving back to the `CommonEngine` might solve the issue, as only the `AngularNodeAppEngine` does not support the `UrlMatcher` in SSR Mode.\n\n\n\n### Minimal Reproduction\n\nUnfortunately this is not resolving the issue. I created the following reproduction which shows that both applications (either with `CommonEngine` or `AngularNodeAppEngine`) are crashing as soon as a matcher function is used in the Router Config.\n\nhttps://github.com/ynmstudio/bug-angular-19.1-commonengine-matcher-crash\n\n*CommonEngine*\n1. `cd repro-app-commonengine`\n2. `npm install`\n3. `npm start`\n\n*AngularNodeAppEngine*\n1. `cd repro-app-appengine`\n2. `npm install`\n3. `npm start`\n\n\n\n### Exception or Error\nboth applications fail with:\n\n```text\nError(s) occurred while extracting routes:\n- The route '/' uses a route matcher which is not supported.\n- The route '/' uses a route matcher which is not supported.\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.1.3\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.1.2\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.3\n@angular-devkit/build-angular   19.1.3\n@angular-devkit/core            19.1.3\n@angular-devkit/schematics      19.1.3\n@angular/cli                    19.1.3\n@angular/ssr                    19.1.3\n@schematics/angular             19.1.3\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29420","RelatedDescription":"Closed issue \"Since 19.1: `CommonEngine` SSR App crashing in 19.1 when `UrlMatcher` is used\" (#29420)"},{"Id":"2799485801","IsPullRequest":true,"CreatedAt":"2025-01-20T15:17:29","Actor":"alan-agius4","Number":"29421","RawContent":null,"Title":"fix(@angular/ssr): prevent route matcher error when SSR routing is not used","State":"closed","Body":"\r\n\r\nAlthough route matchers are not supported with the SSR Routing API, they still function with the legacy `CommonEngine`. Therefore, no error should be issued in this case.\r\n\r\nCloses #29420","Url":"https://github.com/angular/angular-cli/pull/29421","RelatedDescription":"Closed or merged PR \"fix(@angular/ssr): prevent route matcher error when SSR routing is not used\" (#29421)"},{"Id":"2799497430","IsPullRequest":true,"CreatedAt":"2025-01-20T15:01:08","Actor":"alan-agius4","Number":"29422","RawContent":null,"Title":"fix(@angular/build): only issue invalid i18n config error for duplicate `subPaths` with inlined locales","State":"open","Body":"\r\nThe i18n configuration validation was incorrectly flagging errors for identical `subPaths` when both locales were not inlined within the same build. This was due to the validation not properly accounting for the inlining of locales.\r\n\r\nThis commit fixes this issue by ensuring that the validation only checks for duplicate `subPaths` when the locales are inlined.\r\n\r\nCloses https://github.com/angular/angular-cli/issues/29396 and closes https://github.com/angular/angular-cli/issues/29398","Url":"https://github.com/angular/angular-cli/pull/29422","RelatedDescription":"Open PR \"fix(@angular/build): only issue invalid i18n config error for duplicate `subPaths` with inlined locales\" (#29422)"},{"Id":"2799393626","IsPullRequest":true,"CreatedAt":"2025-01-20T14:30:16","Actor":"devversion","Number":"29416","RawContent":null,"Title":"[19.1.x] build: delete npm archive accidentally committed","State":"closed","Body":"This archive was accidentally committed and should be deleted.","Url":"https://github.com/angular/angular-cli/pull/29416","RelatedDescription":"Closed or merged PR \"[19.1.x] build: delete npm archive accidentally committed\" (#29416)"},{"Id":"2799408257","IsPullRequest":true,"CreatedAt":"2025-01-20T14:25:20","Actor":"alan-agius4","Number":"29419","RawContent":null,"Title":"refactor(@angular/build): remove code path that is no longer needed","State":"open","Body":"This has been changed in the framework.\r\n","Url":"https://github.com/angular/angular-cli/pull/29419","RelatedDescription":"Open PR \"refactor(@angular/build): remove code path that is no longer needed\" (#29419)"},{"Id":"2799402020","IsPullRequest":true,"CreatedAt":"2025-01-20T14:23:11","Actor":"alan-agius4","Number":"29418","RawContent":null,"Title":"docs: release notes for the v19.1.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29418","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.3 release\" (#29418)"},{"Id":"2799393973","IsPullRequest":true,"CreatedAt":"2025-01-20T14:21:08","Actor":"alan-agius4","Number":"29417","RawContent":null,"Title":"Bump version to \"v19.1.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29417","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.3\" with changelog.\" (#29417)"},{"Id":"2798505489","IsPullRequest":true,"CreatedAt":"2025-01-20T13:29:58","Actor":"angular-robot","Number":"29407","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29407","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#29407)"},{"Id":"2799102190","IsPullRequest":true,"CreatedAt":"2025-01-20T13:29:08","Actor":"devversion","Number":"29413","RawContent":null,"Title":"build: delete npm archive accidentally committed","State":"closed","Body":"This archive was accidentally commited and should be deleted.","Url":"https://github.com/angular/angular-cli/pull/29413","RelatedDescription":"Closed or merged PR \"build: delete npm archive accidentally committed\" (#29413)"},{"Id":"2799259322","IsPullRequest":true,"CreatedAt":"2025-01-20T13:21:34","Actor":"alan-agius4","Number":"29415","RawContent":null,"Title":"refactor(@angular/build): Invoke `destroyAngularServerApp` after module invalidation","State":"open","Body":"The previous approach of calling it beforehand is no longer required.\r\n","Url":"https://github.com/angular/angular-cli/pull/29415","RelatedDescription":"Open PR \"refactor(@angular/build): Invoke `destroyAngularServerApp` after module invalidation\" (#29415)"},{"Id":"2799172724","IsPullRequest":true,"CreatedAt":"2025-01-20T12:43:38","Actor":"alan-agius4","Number":"29414","RawContent":null,"Title":"fix(@angular/ssr): properly manage catch-all routes with base href","State":"open","Body":"This fix ensures that catch-all routes (e.g., wildcard routes like `**`) are handled correctly when a base href is configured in an Angular SSR application.\r\n\r\nCloses #29397","Url":"https://github.com/angular/angular-cli/pull/29414","RelatedDescription":"Open PR \"fix(@angular/ssr): properly manage catch-all routes with base href\" (#29414)"},{"Id":"2798755122","IsPullRequest":true,"CreatedAt":"2025-01-20T11:47:28","Actor":"alan-agius4","Number":"29409","RawContent":null,"Title":"fix(@angular/build): resolve incorrect component ID collision warning","State":"closed","Body":"This warning was mistakenly triggered when making component changes, even outside of Hot Module Replacement (HMR).\r\n\r\nCloses #29408\r\n","Url":"https://github.com/angular/angular-cli/pull/29409","RelatedDescription":"Closed or merged PR \"fix(@angular/build): resolve incorrect component ID collision warning\" (#29409)"},{"Id":"2799005340","IsPullRequest":false,"CreatedAt":"2025-01-20T11:28:23","Actor":"AmadejBukorovic","Number":"29412","RawContent":null,"Title":"Relative media path resolution for url(), when using a SCSS mixin, requires a path relative to mixin file","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n17\n\n### Description\n\nI apologize if this might not be considered a bug, but rather a future improvement. I opted for a bug because the behavior has changed since v17, and I couldn't find any mentions of intentional change, which is not to say there might have been. \n\nThe issue is specific to the new `@angular-devkit/build-angular:application` builder, and a change that seems to have occurred with Angular v18, and is still present in v19.  \n\nThe issue being that the resolution behavior for relatively referenced media files (resource), used with url(), when calling SCSS mixins, seems to have changed. I'm talking about the rebasing, fingerprinting and copying of image files to the output folder, when building an application.\n\nPreviously, using v17 and the new `@angular-devkit/build-angular:application` builder, as well as the webpack based builder in prior versions, the relative path to the media file had to be relative to the SCSS in which it was \"declared\", even when calling a SCSS mixin in another location, that would end up being the one that contains the CSS url() declaration.\n\nE.g., having a simple mixin such as the one below\n```\n@mixin icon-size-24($icon-path) {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  background-image: url($icon-path);\n}\n```\n\nWould require that it's called with a relative path based on the calling file, regardless of the mixin location. \n\nUsing such a mixin inside application and/or component stylesheet would require the relative path to written based on that file's location, and not the location of the mixin. E.g.:\n```\n@use '../../../../shared-styles';\n\n.icon-container-1 {\n  // The background url needs to be relative to the entry caller:\n  background-image: url('../../../../shared-styles/resources/add_a_photo.svg');\n}\n.icon-container-2 {\n  @include shared-styles.icon-size-24('../../../../shared-styles/resources/add_a_photo.svg');\n}\n```\n\nSuch resolution behavior is still present when using the old, webpack based `@angular-devkit/build-angular:browser`, as well as when creating libraries using the `@angular-devkit/build-angular:ng-packagr` builder. It worked using the new `@angular-devkit/build-angular:application` builder` in version 17.\n\nBut since v18, in case of the `@angular-devkit/build-angular:application` builder, the required path that is passed to the mixins needs to be relative to the mixin location, presumably because that's where the style using the url() is located. Meaning the above code needs to change to e.g.: \n\n```\n@use '../../../../shared-styles';\n\n.icon-container-1 {\n  // The background url needs to be relative to the entry caller:\n  background-image: url('../../../shared-styles/resources/add_a_photo.svg');\n}\n\n.icon-container-2 {\n  // Same file being referenced as above, but because we are calling a mixin that contains the style declaration using url(), \n  // the path needs to be written based on the called mixin location.\n  @include shared-styles.icon-size-24('../resources/add_a_photo.svg');\n}\n```\n\nI think the new behavior, compared to the previous one, has negative side effects:\n- requires awareness of the location of the file containing the mixin, which can be intentionally obscured by using SCSS barrel files and forwarding as a mean to decrease coupling (the mixin could in fact be part of a library, being consumed by the workspace, and any change to the inner structure of the SCSS files can force the consumers to have to rewrite their file paths)\n- is different from the behavior of ng-packgr, preventing the use of path mapping to the source of libraries when building applications\n- potentially more confusing as it's inconsistent across the builders (e.g. ng-packgr), and because you might end up with multiple references of the same source of icon files, with a very different base, inside the same SCSS file\n\nI realize the above points might not really matter in terms of officially supported / intended behavior. Personally, I think the new inconsistency between `@angular-devkit/build-angular:ng-packagr` and  `@angular-devkit/build-angular:application` is the most problematic, since you effectively can't consume libraries in your workspace via their source, instead of build output, in applications that you also have in the same workspace. Well, you can, provided you either avoid such mixins completely, or turn off css inlining for libraries.\n\n### Minimal Reproduction\n\nYou can checkout https://github.com/AmadejBukorovic/ng-18-mixin-resource-resolve. The repository contains an application and library, which the application depends upon, showcasing the differences mentioned above.\n\nRun `npm run build` to build the library and consuming application successfully. The changes in Angular v18+ have no direct effect on this behavior, when consuming libraries from the workspace via build outputs, other than the obvious differences in how to correctly write relative paths for `url()`.\n\nRun `ng serve`, which will fail as it attempts to utilize the `tsconfig.app-dev.json` to bypass the requirement to build the dependant library for development purposes (if you will). This fails due to differences in the behavior of SCSS resource resolution between different builders. Something that is not an issue in v17 and prior.\n\n\n\n### Exception or Error\n\n```text\nX [ERROR] Could not resolve \"../../../shared-styles/resources/add_a_photo.svg\" [plugin angular-css-resource]\n\n    projects/sample-app/src/styles.scss:9:24:\n      9 │ ...image: url(\"../../../shared-styles/icon||file:../../../shared-st...\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  Preprocessor stylesheets may not show the exact file location of the error.\n```\n\n### Your Environment\n\n```text\nX [ERROR] Could not resolve \"../../../../shared-styles/resources/add_a_photo.svg\" [plugin angular-css-resource]\n\n    projects/sample-lib/src/lib/sample-lib.component.scss:9:24:\n      9 │ ...image: url(\"../../../../shared-styles/icon||file:../../../../sha...\n        ╵               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  Preprocessor stylesheets may not show the exact file location of the error.\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29412","RelatedDescription":"Open issue \"Relative media path resolution for url(), when using a SCSS mixin, requires a path relative to mixin file\" (#29412)"},{"Id":"2798797343","IsPullRequest":true,"CreatedAt":"2025-01-20T10:06:28","Actor":"angular-robot","Number":"29410","RawContent":null,"Title":"build: update all non-major dependencies","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@typescript-eslint/eslint-plugin](https://typescript-eslint.io/packages/eslint-plugin) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin)) | devDependencies | minor | [`8.20.0` -> `8.21.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2feslint-plugin/8.20.0/8.21.0) |\n| [@typescript-eslint/parser](https://typescript-eslint.io/packages/parser) ([source](https://redirect.github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser)) | devDependencies | minor | [`8.20.0` -> `8.21.0`](https://renovatebot.com/diffs/npm/@typescript-eslint%2fparser/8.20.0/8.21.0) |\n| [quicktype-core](https://redirect.github.com/quicktype/quicktype) | devDependencies | patch | [`23.0.170` -> `23.0.171`](https://renovatebot.com/diffs/npm/quicktype-core/23.0.170/23.0.171) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.8` -> `6.0.10`](https://renovatebot.com/diffs/npm/vite/6.0.8/6.0.10) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.8` -> `6.0.10`](https://renovatebot.com/diffs/npm/vite/6.0.8/6.0.10) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/eslint-plugin)</summary>\n\n### [`v8.21.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/eslint-plugin/CHANGELOG.md#8210-2025-01-20)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.20.0...v8.21.0)\n\n##### 🩹 Fixes\n\n-   **eslint-plugin:** \\[no-duplicate-enum-values] handle template literal ([#&#8203;10675](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10675))\n-   **eslint-plugin:** \\[no-base-to-string] don't crash for recursive array or tuple types ([#&#8203;10633](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10633))\n-   **eslint-plugin:** \\[no-for-in-array] report on any type which may be an array or array-like ([#&#8203;10535](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10535))\n-   **eslint-plugin:** check JSX spread elements for misused spread usage ([#&#8203;10653](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10653))\n-   **eslint-plugin:** \\[no-unnecessary-type-arguments] handle type args on jsx ([#&#8203;10630](https://redirect.github.com/typescript-eslint/typescript-eslint/pull/10630))\n\n##### ❤️ Thank You\n\n-   Ronen Amiel\n-   YeonJuan [@&#8203;yeonjuan](https://redirect.github.com/yeonjuan)\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>typescript-eslint/typescript-eslint (@&#8203;typescript-eslint/parser)</summary>\n\n### [`v8.21.0`](https://redirect.github.com/typescript-eslint/typescript-eslint/blob/HEAD/packages/parser/CHANGELOG.md#8210-2025-01-20)\n\n[Compare Source](https://redirect.github.com/typescript-eslint/typescript-eslint/compare/v8.20.0...v8.21.0)\n\nThis was a version bump only for parser to align it with other projects, there were no code changes.\n\nYou can read about our [versioning strategy](https://main--typescript-eslint.netlify.app/users/versioning) and [releases](https://main--typescript-eslint.netlify.app/users/releases) on our website.\n\n</details>\n\n<details>\n<summary>quicktype/quicktype (quicktype-core)</summary>\n\n### [`v23.0.171`](https://redirect.github.com/quicktype/quicktype/compare/29bb8160660a7daa2a837ac0cb1e92f99729ad8e...37320e76f718b2778f90db2a89cfd69a078fb980)\n\n[Compare Source](https://redirect.github.com/quicktype/quicktype/compare/29bb8160660a7daa2a837ac0cb1e92f99729ad8e...37320e76f718b2778f90db2a89cfd69a078fb980)\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.10`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small6010-2025-01-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.9...v6.0.10)\n\n-   fix: try parse `server.origin` URL ([#&#8203;19241](https://redirect.github.com/vitejs/vite/issues/19241)) ([2495022](https://redirect.github.com/vitejs/vite/commit/2495022420fda05ee389c2dcf26921b21e2aed3b)), closes [#&#8203;19241](https://redirect.github.com/vitejs/vite/issues/19241)\n\n### [`v6.0.9`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small609-2025-01-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.8...v6.0.9)\n\n-   fix!: check host header to prevent DNS rebinding attacks and introduce `server.allowedHosts` ([bd896fb](https://redirect.github.com/vitejs/vite/commit/bd896fb5f312fc0ff1730166d1d142fc0d34ba6d))\n-   fix!: default `server.cors: false` to disallow fetching from untrusted origins ([b09572a](https://redirect.github.com/vitejs/vite/commit/b09572acc939351f4e4c50ddf793017a92c678b1))\n-   fix: verify token for HMR WebSocket connection ([029dcd6](https://redirect.github.com/vitejs/vite/commit/029dcd6d77d3e3ef10bc38e9a0829784d9760fdb))\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29410","RelatedDescription":"Open PR \"build: update all non-major dependencies\" (#29410)"},{"Id":"2797672751","IsPullRequest":true,"CreatedAt":"2025-01-20T09:52:33","Actor":"angular-robot","Number":"29401","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [less](http://lesscss.org) ([source](https://redirect.github.com/less/less.js)) | dependencies | patch | [`4.2.1` -> `4.2.2`](https://renovatebot.com/diffs/npm/less/4.2.1/4.2.2) |\n| [less](http://lesscss.org) ([source](https://redirect.github.com/less/less.js)) | devDependencies | patch | [`4.2.1` -> `4.2.2`](https://renovatebot.com/diffs/npm/less/4.2.1/4.2.2) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | dependencies | minor | [`4.30.1` -> `4.31.0`](https://renovatebot.com/diffs/npm/rollup/4.30.1/4.31.0) |\n| [rollup](https://rollupjs.org/) ([source](https://redirect.github.com/rollup/rollup)) | devDependencies | minor | [`4.30.1` -> `4.31.0`](https://renovatebot.com/diffs/npm/rollup/4.30.1/4.31.0) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | dependencies | patch | [`6.0.7` -> `6.0.8`](https://renovatebot.com/diffs/npm/vite/6.0.7/6.0.8) |\n| [vite](https://vite.dev) ([source](https://redirect.github.com/vitejs/vite/tree/HEAD/packages/vite)) | devDependencies | patch | [`6.0.7` -> `6.0.8`](https://renovatebot.com/diffs/npm/vite/6.0.7/6.0.8) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>less/less.js (less)</summary>\n\n### [`v4.2.2`](https://redirect.github.com/less/less.js/blob/HEAD/CHANGELOG.md#v422-2025-01-04)\n\n[Compare Source](https://redirect.github.com/less/less.js/compare/v4.2.1...1df9072ee9ebdadc791bf35dfb1dbc3ef9f1948f)\n\n-   [#&#8203;4290](https://redirect.github.com/less/less.js/pull/4290) Fix [#&#8203;4268](https://redirect.github.com/less/less.js/issues/4268) nested pseudo-selector parsing ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4291](https://redirect.github.com/less/less.js/pull/4291) Enhance Less.js test environment setup ([#&#8203;4291](https://redirect.github.com/less/less.js/issues/4291)) ([@&#8203;iChenLei](https://redirect.github.com/iChenLei))\n-   [#&#8203;4295](https://redirect.github.com/less/less.js/pull/4295) Fix [#&#8203;4252](https://redirect.github.com/less/less.js/issues/4252) container queries created via mixin evaluating variables incorrectly ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4294](https://redirect.github.com/less/less.js/pull/4294) Fix [#&#8203;3737](https://redirect.github.com/less/less.js/issues/3737) allow blank variable declarationd ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4292](https://redirect.github.com/less/less.js/pull/4292) Fix [#&#8203;4258](https://redirect.github.com/less/less.js/issues/4258) variable interpolation after math ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4293](https://redirect.github.com/less/less.js/pull/4293) Fix [#&#8203;4264](https://redirect.github.com/less/less.js/issues/4264) strip line comment from expression ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4302](https://redirect.github.com/less/less.js/pull/4302) Fix [#&#8203;4301](https://redirect.github.com/less/less.js/issues/4301) at-rule declarations missing ([@&#8203;puckowski](https://redirect.github.com/puckowski))\n-   [#&#8203;4309](https://redirect.github.com/less/less.js/pull/4309) Fix Node 23 CI ([#&#8203;4309](https://redirect.github.com/less/less.js/issues/4309)) ([@&#8203;iChenLei](https://redirect.github.com/iChenLei))\n\n</details>\n\n<details>\n<summary>rollup/rollup (rollup)</summary>\n\n### [`v4.31.0`](https://redirect.github.com/rollup/rollup/blob/HEAD/CHANGELOG.md#4310)\n\n[Compare Source](https://redirect.github.com/rollup/rollup/compare/v4.30.1...v4.31.0)\n\n*2025-01-19*\n\n##### Features\n\n-   Do not immediately quit when trying to use watch mode from within non-TTY environments ([#&#8203;5803](https://redirect.github.com/rollup/rollup/issues/5803))\n\n##### Bug Fixes\n\n-   Handle files with more than one UTF-8 BOM header ([#&#8203;5806](https://redirect.github.com/rollup/rollup/issues/5806))\n\n##### Pull Requests\n\n-   [#&#8203;5792](https://redirect.github.com/rollup/rollup/pull/5792): fix(deps): update rust crate swc_compiler_base to v8 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5793](https://redirect.github.com/rollup/rollup/pull/5793): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5794](https://redirect.github.com/rollup/rollup/pull/5794): chore(deps): lock file maintenance ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5801](https://redirect.github.com/rollup/rollup/pull/5801): chore(deps): update dependency eslint-config-prettier to v10 ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5802](https://redirect.github.com/rollup/rollup/pull/5802): fix(deps): lock file maintenance minor/patch updates ([@&#8203;renovate](https://redirect.github.com/renovate)\\[bot])\n-   [#&#8203;5803](https://redirect.github.com/rollup/rollup/pull/5803): Support watch mode in yarn, gradle and containers ([@&#8203;lukastaegert](https://redirect.github.com/lukastaegert))\n-   [#&#8203;5806](https://redirect.github.com/rollup/rollup/pull/5806): fix: strip all BOMs ([@&#8203;TrickyPi](https://redirect.github.com/TrickyPi))\n\n</details>\n\n<details>\n<summary>vitejs/vite (vite)</summary>\n\n### [`v6.0.8`](https://redirect.github.com/vitejs/vite/blob/HEAD/packages/vite/CHANGELOG.md#small608-2025-01-20-small)\n\n[Compare Source](https://redirect.github.com/vitejs/vite/compare/v6.0.7...v6.0.8)\n\n-   fix: avoid SSR HMR for HTML files ([#&#8203;19193](https://redirect.github.com/vitejs/vite/issues/19193)) ([3bd55bc](https://redirect.github.com/vitejs/vite/commit/3bd55bcb7e831d2c4f66c90d7bbb3e1fbf7a02b6)), closes [#&#8203;19193](https://redirect.github.com/vitejs/vite/issues/19193)\n-   fix: build time display 7m 60s ([#&#8203;19108](https://redirect.github.com/vitejs/vite/issues/19108)) ([cf0d2c8](https://redirect.github.com/vitejs/vite/commit/cf0d2c8e232a1af716c71cdd2218d180f7ecc02b)), closes [#&#8203;19108](https://redirect.github.com/vitejs/vite/issues/19108)\n-   fix: don't resolve URL starting with double slash ([#&#8203;19059](https://redirect.github.com/vitejs/vite/issues/19059)) ([35942cd](https://redirect.github.com/vitejs/vite/commit/35942cde11fd8a68fa89bf25f7aa1ddb87d775b2)), closes [#&#8203;19059](https://redirect.github.com/vitejs/vite/issues/19059)\n-   fix: ensure `server.close()` only called once ([#&#8203;19204](https://redirect.github.com/vitejs/vite/issues/19204)) ([db81c2d](https://redirect.github.com/vitejs/vite/commit/db81c2dada961f40c0882b5182adf2f34bb5c178)), closes [#&#8203;19204](https://redirect.github.com/vitejs/vite/issues/19204)\n-   fix: resolve.conditions in ResolvedConfig was `defaultServerConditions` ([#&#8203;19174](https://redirect.github.com/vitejs/vite/issues/19174)) ([ad75c56](https://redirect.github.com/vitejs/vite/commit/ad75c56dce5618a3a416e18f9a5c3880d437a107)), closes [#&#8203;19174](https://redirect.github.com/vitejs/vite/issues/19174)\n-   fix: tree shake stringified JSON imports ([#&#8203;19189](https://redirect.github.com/vitejs/vite/issues/19189)) ([f2aed62](https://redirect.github.com/vitejs/vite/commit/f2aed62d0bf1b66e870ee6b4aab80cd1702793ab)), closes [#&#8203;19189](https://redirect.github.com/vitejs/vite/issues/19189)\n-   fix: use shared sigterm callback ([#&#8203;19203](https://redirect.github.com/vitejs/vite/issues/19203)) ([47039f4](https://redirect.github.com/vitejs/vite/commit/47039f4643179be31a8d7c7fbff83c5c13deb787)), closes [#&#8203;19203](https://redirect.github.com/vitejs/vite/issues/19203)\n-   fix(deps): update all non-major dependencies ([#&#8203;19098](https://redirect.github.com/vitejs/vite/issues/19098)) ([8639538](https://redirect.github.com/vitejs/vite/commit/8639538e6498d1109da583ad942c1472098b5919)), closes [#&#8203;19098](https://redirect.github.com/vitejs/vite/issues/19098)\n-   fix(optimizer): use correct default install state path for yarn PnP ([#&#8203;19119](https://redirect.github.com/vitejs/vite/issues/19119)) ([e690d8b](https://redirect.github.com/vitejs/vite/commit/e690d8bb1e5741e81df5b7a6a5c8c3c1c971fa41)), closes [#&#8203;19119](https://redirect.github.com/vitejs/vite/issues/19119)\n-   fix(types): improve `ESBuildOptions.include / exclude` type to allow `readonly (string | RegExp)[]`  ([ea53e70](https://redirect.github.com/vitejs/vite/commit/ea53e7095297ea4192490fd58556414cc59a8975)), closes [#&#8203;19146](https://redirect.github.com/vitejs/vite/issues/19146)\n-   chore(deps): update dependency pathe to v2 ([#&#8203;19139](https://redirect.github.com/vitejs/vite/issues/19139)) ([71506f0](https://redirect.github.com/vitejs/vite/commit/71506f0a8deda5254cb49c743cd439dfe42859ce)), closes [#&#8203;19139](https://redirect.github.com/vitejs/vite/issues/19139)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://redirect.github.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xMDYuMCIsInVwZGF0ZWRJblZlciI6IjM5LjEwNi4wIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6WyJhY3Rpb246IG1lcmdlIiwidGFyZ2V0OiBtaW5vciJdfQ==-->\n","Url":"https://github.com/angular/angular-cli/pull/29401","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29401)"},{"Id":"2797906307","IsPullRequest":true,"CreatedAt":"2025-01-20T09:52:11","Actor":"clydin","Number":"29404","RawContent":null,"Title":"test(@angular/build): enable i18n localize watch test for dev-server","State":"closed","Body":"The existing test for i18n `$localize` replacement during watch mode has been re-enabled.","Url":"https://github.com/angular/angular-cli/pull/29404","RelatedDescription":"Closed or merged PR \"test(@angular/build): enable i18n localize watch test for dev-server\" (#29404)"},{"Id":"2797969744","IsPullRequest":true,"CreatedAt":"2025-01-20T09:51:30","Actor":"clydin","Number":"29405","RawContent":null,"Title":"fix(@angular/build): perform full reload for templates with `$localize` usage","State":"closed","Body":"Component template updates that contain `$localize` usage currently may result in incorrect updates at runtime. To avoid this problem, any template update module that contains `$localize` will now perform a full rebuild. Support for component updates of these templates will be added in a future release.","Url":"https://github.com/angular/angular-cli/pull/29405","RelatedDescription":"Closed or merged PR \"fix(@angular/build): perform full reload for templates with `$localize` usage\" (#29405)"},{"Id":"2797806680","IsPullRequest":true,"CreatedAt":"2025-01-20T09:51:12","Actor":"clydin","Number":"29402","RawContent":null,"Title":"fix(@angular/build): allow asset changes to reload page on incremental updates","State":"closed","Body":"Changes to asset files were previously not considered when determining if an incremental build result could be background update and not cause a page reload. Asset modifications will now cause a page reload in incremental update cases.\r\nAdditionally, a superfluous component update result will no longer be emitted in this case. The required page reload will account for the component updates.\r\n\r\nReview Note: Enable hide whitespace for a more readable diff","Url":"https://github.com/angular/angular-cli/pull/29402","RelatedDescription":"Closed or merged PR \"fix(@angular/build): allow asset changes to reload page on incremental updates\" (#29402)"},{"Id":"2797896032","IsPullRequest":true,"CreatedAt":"2025-01-20T09:51:01","Actor":"clydin","Number":"29403","RawContent":null,"Title":"test(@angular/build): add dev-server HMR enabled console message tests","State":"closed","Body":"Tests of the development server's console message output for the `hmr` option including enabled, disabled, and default cases.","Url":"https://github.com/angular/angular-cli/pull/29403","RelatedDescription":"Closed or merged PR \"test(@angular/build): add dev-server HMR enabled console message tests\" (#29403)"},{"Id":"2798609936","IsPullRequest":false,"CreatedAt":"2025-01-20T02:00:21","Actor":"Ruisi-Lu","Number":"29408","RawContent":null,"Title":"19.1.X NG0912: Incorrect Component ID collision warning","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\n \"NG0912: Component ID generation collision detected\" is being thrown incorrectly despite all component selectors and IDs being unique.\n\n### Minimal Reproduction\n\n1. Create a new Angular project using version 19.1.x\n2. Run dev server\n3. Continuously modify the app.component.html or the template of any other component. \n4. Observe the terminal for the NG0912 warning. It appears sporadically during rebuilds triggered by these template modifications.\n\n### Exception or Error\n\n```text\nNG0912: Component ID generation collision detected. Components '_AppComponent' and '_AppComponent' with selector 'app-root' generated the same component ID. To fix this, you can change the selector of one of those components or add an extra host attribute to force a different ID. Find more at https://angular.dev/errors/NG0912\n```\n\n### Your Environment\n\nEnabled SSR\n\n```text\nAngular CLI: 19.1.2\nNode: 20.18.1\nPackage Manager: pnpm 10.0.0\nOS: win32 x64\n\nAngular: 19.1.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.2\n@angular-devkit/build-angular   19.1.2\n@angular-devkit/core            19.1.2\n@angular-devkit/schematics      19.1.2\n@angular/cli                    19.1.2\n@angular/ssr                    19.1.2\n@schematics/angular             19.1.2\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29408","RelatedDescription":"Open issue \"19.1.X NG0912: Incorrect Component ID collision warning\" (#29408)"},{"Id":"2797646295","IsPullRequest":false,"CreatedAt":"2025-01-19T14:08:41","Actor":"hannah23280","Number":"29399","RawContent":null,"Title":"Exclude TestBed.configureTestingModule in unit test code for Standalone Component","State":"open","Body":"### Command\n\ngenerate\n\n### Description\n\nHi,\n    I not sure if there is any current plan for this.  \n    Currently, generating a new component with Angular CLI includes the below statement\n  \n```\nawait TestBed.configureTestingModule({\n      imports: [ProductListComponent]\n    })\n    .compileComponents();\n```\n    \n\n### Describe the solution you'd like\n\nGiven that **TestBed.configureTestingModule** is no longer required, as component is standalone by default, the statement should be excluded from the generated unit test file (to avoid cluttering the code) when generating component with Angular CLI , unless standalone option is turned off explicitly\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29399","RelatedDescription":"Open issue \"Exclude TestBed.configureTestingModule in unit test code for Standalone Component\" (#29399)"},{"Id":"2797617269","IsPullRequest":false,"CreatedAt":"2025-01-19T13:08:32","Actor":"zip-fa","Number":"29398","RawContent":null,"Title":"Invalid i18n configuration: Locales 'ru' and 'en' cannot have the same subPath: ''.","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHey.\nWith v19.1 it's not possible to build with this config:\n\n```json\n\"sourceLocale\": {\n      \"code\": \"ru\",\n      \"subPath\": \"\"\n    },\n    \"locales\": {\n      \"en\": {\n        \"translation\": \"apps/frontend/src/locale/messages.en.xlf\",\n        \"subPath\": \"\"\n      }\n    },\n\"configurations\": {\n        \"production-en\": {\n          \"localize\": [\"en\"]\n        },\n        \"production\": {\n          \"localize\": [\"ru\"],\n}\n```\n\nHow about moving non-unique subPath check inside build configuration, but not global?\n\nThis should fail:\n\n```json\n\"configurations\": {\n \"production\": {\n          \"localize\": [\"ru\", \"en\"],\n}\n}\n```\n\nThis should not:\n\n```json\n\"configurations\": {\n \"production\": {\n          \"localize\": [\"ru\"],\n}\n}\n```\n\n### Minimal Reproduction\n\nng build\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nv19.1\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29398","RelatedDescription":"Open issue \"Invalid i18n configuration: Locales 'ru' and 'en' cannot have the same subPath: ''.\" (#29398)"},{"Id":"2797610102","IsPullRequest":false,"CreatedAt":"2025-01-19T12:53:03","Actor":"ciriousjoker","Number":"29397","RawContent":null,"Title":"Prerendering doesn't generate index.html for root path of localized website versions","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.0.3 (after updating to 19.0, it started)\n\n### Description\n\nI'm trying to prerender a localized website.\n```\n/ -> English website (homepage)\n/some-english-page (subpage)\n/de -> German website (homepage)\n/de/some-german-page (subpage)\n```\n\nI therefore need an index.html file (not just the index.csr.html!) at / and /de.\n\n![Image](https://github.com/user-attachments/assets/398b0c77-9b76-4fe3-8e84-f4fb808bcee6)\n\n### Minimal Reproduction\n\nhttps://github.com/ciriousjoker/repro-angular-indexcsrhtml\nJust check out the commit history, I've named them in a way that explains when it breaks.\n\nSpecifically this seems to be an issue:\n```ts\nexport const routes: Routes = [\n  {\n    path: '**',\n    component: TestComponent,\n  },\n];\n```\n\nKeep in mind this exact code worked in Angular 18.\n\n### Exception or Error\n\n```text\nindex.csr.html is generated for / and /de, but index.html is only generated for /, not for /de.\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.1.2\nNode: 20.18.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.1.1\n... animations, common, compiler, compiler-cli, core, forms\n... localize, platform-browser, platform-browser-dynamic\n... platform-server, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.2\n@angular-devkit/build-angular   19.1.2\n@angular-devkit/core            19.1.2\n@angular-devkit/schematics      19.1.2\n@angular/cli                    19.1.2\n@angular/ssr                    19.1.2\n@schematics/angular             19.1.2\nrxjs                            7.8.1\ntypescript                      5.7.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29397","RelatedDescription":"Open issue \"Prerendering doesn't generate index.html for root path of localized website versions\" (#29397)"},{"Id":"2797105017","IsPullRequest":false,"CreatedAt":"2025-01-18T16:43:42","Actor":"jusfeel","Number":"29396","RawContent":null,"Title":"Do Not Deprecate baseHref in i18n Configuration","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nlocalize\n\n### Description:\nThe recent deprecation of the `baseHref` field in the `i18n.sourceLocale` configuration causes significant issues for projects that rely on a **shared base URL** for multiple localized builds.\n\nWhile the `subPath` feature is a welcome addition for structuring locale builds, it is limiting for developers who:\n\n1. Want locale-specific builds in subdirectories (`subPath`) without altering the `<base>` tag in `index.html`.\n2. Depend on a static `baseHref` for all builds due to server or application constraints.\n\n### Current Behavior:\nWith `subPath` enabled:\n\nAngular modifies the `<base href>` tag in `index.html` to include the locale-specific subpath (e.g., `/zh-hans/`), and there is no built-in way to override this behavior.\nWithout `baseHref`:\n\nDevelopers are forced to implement error-prone and maintenance-heavy post-build scripts to reset the `<base>` tag to their desired value.\n### Expected Behavior:\nProjects with `subPath` configured should still have the option to:\n\nUse `baseHref` as a static value across all locale builds.\nSeparate the functionality of `subPath` (output directory) from the `<base>` tag in `index.html`.\n\n### Proposed solution\n\nInstead of fully deprecating `baseHref`, it could coexist with `subPath` to give developers more flexibility. Suggested behavior:\n\n1. `baseHref` **takes precedence if defined**. This ensures that:\n    - The `<base>` tag in `index.html` uses `baseHref` for all builds.\n    - subPath is only used for structuring the output directory, not modifying `index.html`.\n \n2. If `baseHref` is not specified, the current `subPath` behavior remains unchanged.\n\n### Alternatives considered\n\nDevelopers are forced to implement error-prone and maintenance-heavy post-build scripts to reset the <base> tag to their desired value.","Url":"https://github.com/angular/angular-cli/issues/29396","RelatedDescription":"Open issue \"Do Not Deprecate baseHref in i18n Configuration\" (#29396)"},{"Id":"2796915046","IsPullRequest":false,"CreatedAt":"2025-01-18T12:59:46","Actor":"Mostafa-Abdollahi","Number":"29394","RawContent":null,"Title":"angular 19.1.1 crashes serve when changing html file with HMR","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\n[vite] Pre-transform error: Failed to load url /main-HF3FQSCH.js (resolved id: /main-HF3FQSCH.js)\nafter making a a change in one my html files, served app crashesh and i get above error in terminal, i have to set hmr to false.\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nangular/cli: 19.1.1\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29394","RelatedDescription":"Closed issue \"angular 19.1.1 crashes serve when changing html file with HMR\" (#29394)"},{"Id":"2796915159","IsPullRequest":false,"CreatedAt":"2025-01-18T11:15:51","Actor":"nhnb","Number":"29395","RawContent":null,"Title":"HMR in Angular 19.1.1 breaks page reload by ignoring --serve-path","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nSince Angular 19.1.x the --serve-path parameter is ignored by hot template replacements requests. As a result the page is neither updated nor reloaded automatically. A manual reload is required.\n\nSteps to reproduce:\n\n1. Start the dev server: `ng serve --no-hmr --port 5602 --host 127.0.0.1 --serve-path /frontend`\n2. Modify a .html file\n\nResult in 19.0.x: The page is automatically reloaded\nResult in 19.1.x: Nothing happens. The old page is still shown\n\nWorkaround: Start the dev server with: `ng serve --no-hmr --port 5602 --host 127.0.0.1 --serve-path /frontend` \n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nError message: 404 http://localhost:8080/@ng/component?c=src%2Fapp%2Ffs%2Ftestform.component.ts%40TestformComponent&t=1737187096102\n\nNote the missing `/frontend/` before `@ng`\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.1.2\nNode: 20.18.1\nPackage Manager: yarn 1.22.19\nOS: linux x64\n\nAngular: 19.1.1\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1901.2\n@angular-devkit/build-angular   19.1.2\n@angular-devkit/core            19.1.2\n@angular-devkit/schematics      19.1.2\n@angular/cdk                    17.3.10\n@angular/cli                    19.1.2\n@schematics/angular             19.1.2\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29395","RelatedDescription":"Closed issue \"HMR in Angular 19.1.1 breaks page reload by ignoring --serve-path\" (#29395)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2800452085","IsPullRequest":false,"CreatedAt":"2025-01-21T00:18:45","Actor":"zohar-chiprut","Number":"30359","RawContent":null,"Title":"Package.json contains duplicate key in exports","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nDuplicat key might cause unexpected behavior to consumers importing the package.\n```\n{\n  \"name\": \"@angular/material\",\n  \"version\": \"19.1.0\",\n  \"description\": \"Angular Material\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/angular/components.git\"\n  },\n...\n  \"exports\": {\n      \".\": {\n        \"sass\": \"./_index.scss\",\n        \"types\": \"./index.d.ts\",\n        \"default\": \"./fesm2022/material.mjs\"\n      },\n      \"./theming\": {\n        \"sass\": \"./_theming.scss\"\n      },\n      \"./_theming\": {                              //duplicate key\n        \"sass\": \"./_theming.scss\".   \n      },\n  ...\n  }\n...\n}\n```\n\n### Reproduction\n\nKInorder to reproduce the issuew just npm install @angular/material@19.0.1 and view exports files in package.json, it contains duplicate key \"./theming\"\n\n### Expected Behavior\n\nRemove duplicate keys in exports filed in package.json\n\n### Actual Behavior\n\nthe package contains duplicate key in exports prop\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.1.0\n- Browser(s): Nodejs/ pnpm install\n- Operating macOs\n","Url":"https://github.com/angular/components/issues/30359","RelatedDescription":"Open issue \"Package.json contains duplicate key in exports\" (#30359)"},{"Id":"2800057420","IsPullRequest":false,"CreatedAt":"2025-01-20T18:19:09","Actor":"luvcraft1228","Number":"30358","RawContent":null,"Title":"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.2.14\n\n### Description\n\nIn a space constrained layout, submenus will occasionally overlap with parent menus. When clicking a parent item with the intention of opening a submenu, the submenu will appear over the parent item and seem to receive a mouse event, thereby selecting it. This behavior is unexpected and could lead to accidental user actions.\n\n### Reproduction\n\nReproduction\nSteps to reproduce:\n\nhttps://material.angular.io/components/menu/examples\nPick mat-menu\nIn dev tools set screen to 256px wide\nClick nested menu -> Animal index -> click near arrow on vertebrates\nMammals will be selected accidentally\n\nPlease see reference to [old issue](https://github.com/angular/components/issues/26306) (v14). Seems to be the same problem. Was fixed in v18.\n\n\n\n\n\n### Expected Behavior\n\n\nExpected Behavior\nSubmenu should not have an item selected as a result of a click on its parent.\n\n![Image](https://github.com/user-attachments/assets/f95787e4-76f9-4272-9480-e0956907e63b)\n\n### Actual Behavior\n\nActual Behavior\nSubmenu has an item selected as a result of a click on its parent.\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19.0.5\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows / Android\n","Url":"https://github.com/angular/components/issues/30358","RelatedDescription":"Open issue \"bug(mat-menu): Overlapping nested menu item will accidentally trigger after click on parent\" (#30358)"},{"Id":"2799605427","IsPullRequest":false,"CreatedAt":"2025-01-20T15:37:48","Actor":"sherinkd","Number":"30357","RawContent":null,"Title":"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIf I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\nEntered Date: 1999-01-01\nExpected Date: 01/01/1999\n\n![Image](https://github.com/user-attachments/assets/8becb99d-3805-4af9-8851-47e4d8b661dc)\n\n### Reproduction\n\nStep 1: Enter Date: 1999-01-01\nStep 2: blur out\n\n\n### Expected Behavior\n\nExpected Date: 01/01/1999\n\n### Actual Behavior\n\nDisplayed Date: 10/9/1999\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material:  19.0.4\n- Browser(s): any browser\n- Operating System (e.g. Windows, macOS, Ubuntu): any OS\n","Url":"https://github.com/angular/components/issues/30357","RelatedDescription":"Open issue \"bug(datepicker): if I manually type the date in the format of 1999-10-10 into the date field, the resulting date is converted to 10/9/1999; one day is subtracted.\" (#30357)"},{"Id":"2791729100","IsPullRequest":false,"CreatedAt":"2025-01-20T13:37:05","Actor":"codestrelaoffice","Number":"30338","RawContent":null,"Title":"bug(COMPONENT): Date Picker Icon Comes on a new Line","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn the datepicker calendar icon comes in new line on.\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nCalendar icon should come in the same line \n\n### Actual Behavior\n\nIt should come in same line as the date .\n\n### Environment\n\n- Angular:\n- CDK/Material:\n- Browser(s):\n- Operating System (e.g. Windows, macOS, Ubuntu):\n","Url":"https://github.com/angular/components/issues/30338","RelatedDescription":"Closed issue \"bug(COMPONENT): Date Picker Icon Comes on a new Line\" (#30338)"},{"Id":"2799275893","IsPullRequest":true,"CreatedAt":"2025-01-20T13:28:43","Actor":"crisbeto","Number":"30356","RawContent":null,"Title":"fix(material/autocomplete): switch away from animations module","State":"open","Body":"Switches the autocomplete away from the animations module. The animations are implemented using CSS instead.","Url":"https://github.com/angular/components/pull/30356","RelatedDescription":"Open PR \"fix(material/autocomplete): switch away from animations module\" (#30356)"},{"Id":"2799093523","IsPullRequest":true,"CreatedAt":"2025-01-20T12:08:18","Actor":"crisbeto","Number":"30355","RawContent":null,"Title":"fix(cdk/text-field): clear cached line height on resize","State":"open","Body":"Clears the cached heights in the autosize directive when the window is resized since they may change.","Url":"https://github.com/angular/components/pull/30355","RelatedDescription":"Open PR \"fix(cdk/text-field): clear cached line height on resize\" (#30355)"},{"Id":"2792116549","IsPullRequest":false,"CreatedAt":"2025-01-20T10:10:40","Actor":"naaajii","Number":"30341","RawContent":null,"Title":"setting up repository locally always create issues on Windows.","State":"closed","Body":"### Documentation Feedback\n\nI don't have my own system so I use my work laptop to contribute and I'm always juggling between different laptops so I have to setup again and again. Setting up repository on Ubuntu seems fairly easy & works out of the box but Windows bothers alot. I have been using a Windows 11 for past few months & whenever I find free time to contribute I struggle to run on Windows 10 & 11 all the time.\n\nI have been provided a new laptop & I'm facing issues such as:\n\n1. error Couldn't find match for <package hash> in \"refs/heads/main\" for \"https://github.com/angular/dev-infra-private-ng-dev-builds.git\".\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command. \n\nSometimes gets fixed on yarn cache clear, mostly happens whenever I update the work and run yarn after a long time.\n\n2. iBazel [1:54PM]: Error writing failure to stdin: write |1: file already closed\n\nhappens all the time, gets fixed sometimes when I delete bazel folders and end all processes from task manager.\n\n3. iBazel [1:08PM]: Error starting process: fork/exec C:\\Users\\CENTRI~1\\AppData\\Local\\Temp\\bazel_script_path4055922069.bat: %1 is not a valid Win32 application.\niBazel [1:08PM]: Run start failed fork/exec C:\\Users\\CENTRI~1\\AppData\\Local\\Temp\\bazel_script_path4055922069.bat: %1 is not a valid Win32 application.\n\nI checked the bat file and its 0kb so I'm not sure whats causing it to generate an empty file. I also have added BAZEL_SH to the environment variables. I also came across other issues where peopled claimed its caused by WSL on Windows but I have had it disabled it on both work laptops. I also have used bash and Windows command to run the project but errors are always the same.\n\n### Affected documentation page\n\nhttps://github.com/angular/components/blob/1e5663636eb38d5556f500840dd7e00dd9950b70/DEV_ENVIRONMENT.md?plain=1","Url":"https://github.com/angular/components/issues/30341","RelatedDescription":"Closed issue \"setting up repository locally always create issues on Windows.\" (#30341)"},{"Id":"2794987955","IsPullRequest":false,"CreatedAt":"2025-01-20T05:57:59","Actor":"richardsengers","Number":"30350","RawContent":null,"Title":"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working","State":"closed","Body":"\n### Description\n\nExpansion panels have a default container shape. When setting strong focus indicators, the corner of the strong focus-indicator are not rounded\n\n<img width=\"454\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ec041ad7-39e9-4e63-91f0-e4236537c07b\" />\n\nIn this example, it's just a little bit, but since we have a container-shape token, this can get worse when setting the shape to full\nhttps://m3.material.io/styles/shape/shape-scale-tokens\n\nIssue  2 \nWhen setting the container-shape token to one of the values described by m3 https://m3.material.io/styles/shape/shape-scale-tokens nothing happens. It looks more like container-shape is a true or false token instead of one of the options decribed by m3\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/lhvfsmcd?file=src%2Fstyles.scss\nSteps to reproduce:\n1. Click on the first or last panel\n\n\n### Expected Behavior\n\n1. Strong focus indicator should also be rounded \n2. Token container-shape should have one of the 7 options described by m3 \n\n### Actual Behavior\n\nStrong focus indicator do not have a rounded corner\nSetting container-shape to one of the 7 values removes the rounded corners\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30350","RelatedDescription":"Closed issue \"bug(Expansion panel): strong focus indicator not respacting shape + container-shape token not working\" (#30350)"},{"Id":"2796838648","IsPullRequest":true,"CreatedAt":"2025-01-20T05:57:58","Actor":"crisbeto","Number":"30352","RawContent":null,"Title":"fix(material/expansion): inherit shape for focus indicator","State":"closed","Body":"Fixes that the focus indicator had a different shape from the header.\r\n\r\nFixes #30350.","Url":"https://github.com/angular/components/pull/30352","RelatedDescription":"Closed or merged PR \"fix(material/expansion): inherit shape for focus indicator\" (#30352)"},{"Id":"2797786254","IsPullRequest":true,"CreatedAt":"2025-01-19T19:17:24","Actor":"crisbeto","Number":"30354","RawContent":null,"Title":"fix(material/form-field): remove dependency on animations module","State":"open","Body":"Switches the form field to use CSS for the subscript animations, instead of going through the animations module.","Url":"https://github.com/angular/components/pull/30354","RelatedDescription":"Open PR \"fix(material/form-field): remove dependency on animations module\" (#30354)"},{"Id":"2797601036","IsPullRequest":false,"CreatedAt":"2025-01-19T12:32:25","Actor":"alanpurple","Number":"30353","RawContent":null,"Title":"docs-bug(ALL): No examples of how to apply theme html-element-wise","State":"open","Body":"### Documentation Feedback\n\nthere is no way to apply defined primary, secondary, error, etc   color to components\n\nfor one, there is no example how to apply secondary or tertiary color to material button\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30353","RelatedDescription":"Open issue \"docs-bug(ALL): No examples of how to apply theme html-element-wise\" (#30353)"},{"Id":"2794115737","IsPullRequest":true,"CreatedAt":"2025-01-17T21:01:31","Actor":"mmalerba","Number":"30348","RawContent":null,"Title":"fix(material/autocomplete): fix initial render logic","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30348","RelatedDescription":"Closed or merged PR \"fix(material/autocomplete): fix initial render logic\" (#30348)"},{"Id":"2793875667","IsPullRequest":true,"CreatedAt":"2025-01-17T20:47:46","Actor":"mmalerba","Number":"30347","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30347","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30347)"},{"Id":"2795786220","IsPullRequest":false,"CreatedAt":"2025-01-17T15:51:23","Actor":"bmayen","Number":"30351","RawContent":null,"Title":"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen","State":"open","Body":"### Feature Description\n\nWhen using keyboard navigation, the \"close calendar\" button is placed at the bottom of the calendar after tabbing through the other interactive elements in the component. If this button would be positioned offscreen, it should be repositioned into view to improve accessibility.\n\n### Use Case\n\nA user may increase the browser size to 200%, or the calendar may just be positioned toward the bottom of the screen, which may cause this close button to render offscreen when displayed. ","Url":"https://github.com/angular/components/issues/30351","RelatedDescription":"Open issue \"feat(mat-calendar): Automatically reposition \"close calendar\" button if it is offscreen\" (#30351)"},{"Id":"2794929495","IsPullRequest":false,"CreatedAt":"2025-01-17T09:03:50","Actor":"richardsengers","Number":"30349","RawContent":null,"Title":"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nM2\n\n### Description\n\nA mat-dialog has a default of 560px as a max-width. \nOffcourse we can override this behaviour but to me it looks like it's a wrong default because all dialogs are max 560px when changing to the new m3\n\n<img width=\"737\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/964023b0-cb10-4cc7-b000-a23a7218f219\" />\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/tjvfafte-mzvlpzlp?file=src%2Fexample%2Fdialog-overview-example.ts\nSteps to reproduce:\n1. Make screen larger then 560px, you will notice the dialog isn't getting larger\n\n\n### Expected Behavior\n\nWhen a width is set to the dialog, the dialog should be as wide as the given width\n\n### Actual Behavior\n\nThe dialog has a max width of 560px\n\n### Environment\n\nAngular CLI: 19.0.5\nNode: 22.3.0\nPackage Manager: yarn 1.22.17\nOS: win32 x64\n\nAngular: 19.0.4\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... platform-server, router, service-worker\n\nPackage                              Version\n--------------------------------------------------------------\n@angular-devkit/architect            0.1900.5 (cli-only)\n@angular-devkit/build-angular        19.0.5\n@angular-devkit/core                 19.0.5\n@angular-devkit/schematics           19.0.5\n@angular/cdk                         19.0.3\n@angular/cli                         19.0.5\n@angular/material                    19.0.3\n@angular/material-date-fns-adapter   19.0.3\n@schematics/angular                  19.0.5\nrxjs                                 7.8.1\ntypescript                           5.6.3\nzone.js                              0.15.0\n\n","Url":"https://github.com/angular/components/issues/30349","RelatedDescription":"Open issue \"bug(Dialog): dialogs have default max-width of 560px for screen larger then 560px\" (#30349)"},{"Id":"2793752150","IsPullRequest":true,"CreatedAt":"2025-01-16T21:01:03","Actor":"mmalerba","Number":"30346","RawContent":null,"Title":"fix(material/chip): fix chip blur timing","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30346","RelatedDescription":"Closed or merged PR \"fix(material/chip): fix chip blur timing\" (#30346)"},{"Id":"2793022046","IsPullRequest":true,"CreatedAt":"2025-01-16T15:10:00","Actor":"mmalerba","Number":"30345","RawContent":null,"Title":"Bump version to \"v19.2.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30345","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.2.0-next.0\" with changelog.\" (#30345)"},{"Id":"2792999349","IsPullRequest":true,"CreatedAt":"2025-01-16T14:58:39","Actor":"mmalerba","Number":"30344","RawContent":null,"Title":"docs: release notes for the v19.1.0 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.1.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30344","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.1.0 release\" (#30344)"},{"Id":"2792996624","IsPullRequest":true,"CreatedAt":"2025-01-16T14:52:31","Actor":"mmalerba","Number":"30343","RawContent":null,"Title":"Bump version to \"v19.1.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30343","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0\" with changelog.\" (#30343)"},{"Id":"2792945331","IsPullRequest":true,"CreatedAt":"2025-01-16T14:43:51","Actor":"mmalerba","Number":"30342","RawContent":null,"Title":"Revert \"test(material/timepicker): updates timepicker.spec.ts (#30335)\"","State":"closed","Body":"This reverts commit 0df6e0347206c2496922441812330ca0b0a15f04.","Url":"https://github.com/angular/components/pull/30342","RelatedDescription":"Closed or merged PR \"Revert \"test(material/timepicker): updates timepicker.spec.ts (#30335)\"\" (#30342)"},{"Id":"2789129679","IsPullRequest":true,"CreatedAt":"2025-01-16T12:25:51","Actor":"crisbeto","Number":"30332","RawContent":null,"Title":"fix(material/checkbox): ensure focus indicator has the correct shape","State":"closed","Body":"The specificity for the checkbox's focus indicator was very low which means that if the ripple styles are loaded later, it can be overwritten.\r\n\r\nFixes #30326.","Url":"https://github.com/angular/components/pull/30332","RelatedDescription":"Closed or merged PR \"fix(material/checkbox): ensure focus indicator has the correct shape\" (#30332)"},{"Id":"2791906861","IsPullRequest":false,"CreatedAt":"2025-01-16T07:27:18","Actor":"jolenius","Number":"30340","RawContent":null,"Title":"bug(COMPONENT): chip with autocomplete adds two chips when selecting filtered option using keyboard","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen combining chips with the autocomplete component you get two entries of chips when filtering the list of options by typing a few characters and then selecting an option by using your keyboard (arrow down and enter).\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/2qghuqyq?file=src%2Fexample%2Fchips-autocomplete-example.ts\n(stackblitz fetched from the Chips Autocomplete example at https://material.angular.io/components/chips/examples)\nSteps to reproduce:\n1. Enter a few characters to start filtering the autocomplete list\n2. Use the keyboard to select a option (up/down arrow followed by enter)\n\n\n### Expected Behavior\n\nOnly the selected option from the autocomplete list is added the the chips\n\n### Actual Behavior\n\nThe selected option from the autocomplete list and the current value of the input field are added as two sepparate entries to the chips\n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, Linux (RHEL 8)\n","Url":"https://github.com/angular/components/issues/30340","RelatedDescription":"Open issue \"bug(COMPONENT): chip with autocomplete adds two chips when selecting filtered option using keyboard\" (#30340)"},{"Id":"2791891364","IsPullRequest":false,"CreatedAt":"2025-01-16T07:19:10","Actor":"jolenius","Number":"30339","RawContent":null,"Title":"bug(COMPONENT): chip with autocomplete does not clear the input field after adding new chip","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen combining chips with the autocomplete component the input field isn't cleared between each entry. Despite setting the input fields value to a empty string at the end of my function that is invoked by the optionSelected event.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/2qghuqyq?file=src%2Fexample%2Fchips-autocomplete-example.ts\n(stackblitz fetched from the Chips Autocomplete example at https://material.angular.io/components/chips/examples)\nSteps to reproduce:\n1. Enter a few characters to start filtering the autocomplete list\n2. Select an item on the list by using your mouse\n\n\n### Expected Behavior\n\nAfter clicking an item from the autocomplete list the input field should be cleared\n\n### Actual Behavior\n\nThe value in the input field is unchanged \n\n### Environment\n\n- Angular: 19\n- CDK/Material: 19\n- Browser(s): Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Linux (RHEL 8)\n","Url":"https://github.com/angular/components/issues/30339","RelatedDescription":"Open issue \"bug(COMPONENT): chip with autocomplete does not clear the input field after adding new chip\" (#30339)"},{"Id":"2790607442","IsPullRequest":true,"CreatedAt":"2025-01-15T22:04:20","Actor":"essjay05","Number":"30335","RawContent":null,"Title":"test(material/timepicker): update timepicker tests to match timepicker toggle changes","State":"closed","Body":"Updates Timepicker.spec.ts to match recent changes to Timepicker toggle having\r\na default aria-label.","Url":"https://github.com/angular/components/pull/30335","RelatedDescription":"Closed or merged PR \"test(material/timepicker): update timepicker tests to match timepicker toggle changes\" (#30335)"},{"Id":"2791020821","IsPullRequest":false,"CreatedAt":"2025-01-15T21:56:58","Actor":"mudcovered","Number":"30337","RawContent":null,"Title":"docs-bug(material): Documentation on how to use M3 styles is completely inadequate","State":"open","Body":"### Documentation Feedback\n\nThere are no examples showing how to use the overrides to generate appropriate colour schemes. As an example I was trying to mimic the -mat-toolbar azure/blue colour scheme in the angular material 19 toolbar but was unable to figure it out.\n\nThe documentation tells me what styles exist but provides no examples on how to achieve useful results.\n\nIn comparison the M2 themes which had default color decisions made this far easier for beginners.\n\nIts not clear whether this is a problem that impacts other component documentation so this could be the tip of a much larger iceberg.\n\n\n\n\n### Affected documentation page\n\nhttps://material.angular.io/components/toolbar/styling","Url":"https://github.com/angular/components/issues/30337","RelatedDescription":"Open issue \"docs-bug(material): Documentation on how to use M3 styles is completely inadequate\" (#30337)"},{"Id":"2790834149","IsPullRequest":false,"CreatedAt":"2025-01-15T20:55:39","Actor":"uttamvs-rp","Number":"30336","RawContent":null,"Title":"feat(mat-table): The column ordering in the Mat Table isn't working when the columns and rows are based on different arrays","State":"closed","Body":"### Feature Description\n\nI've got a situation where I need to use two different column arrays for the material table. The column rendering array has two properties: fieldName (which is the actual field from the backend API response) and displayName (the name that shows up in the UI). Here's a quick example:\n\n`<th mat-header-cell cdkDrag *matHeaderCellDef>{{column.displayName}}</th><td mat-cell *matCellDef=\"let element\">{{element[column.fieldName]}}</td>`\n\nSo, when I'm setting up the row, I've got this simple string array that just has the field names from the array above. This way, the actual data can connect with the table columns. Here's a quick example:\n\n`<tr mat-header-row *matHeaderRowDef=\"displayedColumnsFields\"></tr><tr mat-row *matRowDef=\"let element; columns:displayedColumnsField;\"></tr>`\n\nSo after this code change, the material column reordering isn't working anymore. Does anyone know what might be going on or how to fix it? Or is this just a bug with the Angular Material table?\n\nI've put together a working StackBlitz example here so you can get a better idea of what's going on: [StackBlitz ](https://stackblitz.com/edit/x39nz1ba?file=src%2Fexample%2Ftable-reorderable-example.ts)\n\n\n\n \n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30336","RelatedDescription":"Closed issue \"feat(mat-table): The column ordering in the Mat Table isn't working when the columns and rows are based on different arrays\" (#30336)"},{"Id":"2790427198","IsPullRequest":true,"CreatedAt":"2025-01-15T17:24:50","Actor":"amysorto","Number":"30334","RawContent":null,"Title":"feat(material/theming): Expose tonal palette values in the system level variables","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30334","RelatedDescription":"Open PR \"feat(material/theming): Expose tonal palette values in the system level variables\" (#30334)"},{"Id":"2790405378","IsPullRequest":false,"CreatedAt":"2025-01-15T17:16:02","Actor":"andrewseguin","Number":"30333","RawContent":null,"Title":"feat(cdk/drag-drop): allow drag to be canceled after dragged over list","State":"open","Body":"### Feature Description\n\nItems actively dragged from one list to another, but without releasing the drag, cannot be canceled. The list changes immediately and the user cannot undo the action. This issue tracks the request to enable an API that lets dragging be canceled, e.g. by undo'ing the list changes (or not change the lists at all) if the item is not dropped onto a drop container\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/30333","RelatedDescription":"Open issue \"feat(cdk/drag-drop): allow drag to be canceled after dragged over list\" (#30333)"},{"Id":"2788964200","IsPullRequest":false,"CreatedAt":"2025-01-15T08:02:32","Actor":"mazhar-fis","Number":"30331","RawContent":null,"Title":"bug(Paginator): Disabled buttons are still focusable via keyboard","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18.0.0\n\n### Description\n\nThe disabled button(Navigation buttons for First Page, Previous Page, Next Page, Last Page) of paginator are now accessible, hover-able and focusable via keyboard.\n\n<img width=\"536\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a83ed4bb-827c-4c09-a33e-f7b1171f93bb\" />\n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. Hover over disabled navigation buttons\n2. navigate to disabled navigation buttons using keyboard\n\n\n### Expected Behavior\n\nThe disabled button(Navigation buttons for First Page, Previous Page, Next Page, Last Page) of paginator should not be accessible, hover-able and focusable via keyboard.\n\n<img width=\"537\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d083a98b-fc23-4bb6-8446-1ee8f8df2e3b\" />\n\n### Actual Behavior\n\nThe disabled button(Navigation buttons for First Page, Previous Page, Next Page, Last Page) of paginator are now accessible, hover-able and focusable via keyboard.\n\n<img width=\"536\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5854eb4b-5fa9-4ec1-8202-6bd6e26a0e2e\" />\n\n### Environment\n\n- Angular: 19.0.0\n- CDK/Material: 19.0.0\n- Browser(s): Chrome, Firefox, Edge\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30331","RelatedDescription":"Closed issue \"bug(Paginator): Disabled buttons are still focusable via keyboard\" (#30331)"},{"Id":"2788196859","IsPullRequest":true,"CreatedAt":"2025-01-14T20:13:44","Actor":"giorgi1441","Number":"30330","RawContent":null,"Title":"turns accordion class into signals","State":"open","Body":"","Url":"https://github.com/angular/components/pull/30330","RelatedDescription":"Open PR \"turns accordion class into signals\" (#30330)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-21T03:30:02.3405068Z","RunDurationInMilliseconds":1508}