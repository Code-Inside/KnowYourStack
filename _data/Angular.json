{"Data":{"Angular-Issues":{"Issues":[{"Id":"2720699862","IsPullRequest":true,"CreatedAt":"2024-12-06T00:16:52","Actor":"arielbackenroth","Number":"59073","RawContent":null,"Title":"fix(core): Snapshots can return nullish values; don't run the snapsho…","State":"closed","Body":"fix(core): Snapshots can return nullish values; don't run the snapshotted function twice if it does.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ X] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ X] Tests for the changes have been added (for bug fixes / features)\r\n- [ X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59073","RelatedDescription":"Closed or merged PR \"fix(core): Snapshots can return nullish values; don't run the snapsho…\" (#59073)"},{"Id":"2719679448","IsPullRequest":true,"CreatedAt":"2024-12-06T00:15:16","Actor":"crisbeto","Number":"59061","RawContent":null,"Title":"fix(compiler-cli): consider pre-release versions when detecting feature support","State":"closed","Body":"Fixes that the logic which checks whether a feature is supported didn't account for pre-releases.\r\n\r\nFixes https://github.com/angular/vscode-ng-language-service/issues/2123.\r\n","Url":"https://github.com/angular/angular/pull/59061","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): consider pre-release versions when detecting feature support\" (#59061)"},{"Id":"2719904868","IsPullRequest":true,"CreatedAt":"2024-12-06T00:14:04","Actor":"crisbeto","Number":"59064","RawContent":null,"Title":"fix(compiler-cli): error in unused standalone imports diagnostic","State":"closed","Body":"Fixes a null pointer error in the unused standalone imports diagnostic. It was caused by an inconsistency in TypeScript's built-in types.\r\n\r\nFixes #58872.\r\n","Url":"https://github.com/angular/angular/pull/59064","RelatedDescription":"Closed or merged PR \"fix(compiler-cli): error in unused standalone imports diagnostic\" (#59064)"},{"Id":"2721464839","IsPullRequest":true,"CreatedAt":"2024-12-06T00:01:18","Actor":"alxhub","Number":"59083","RawContent":null,"Title":"Empty the circular dependencies golden","State":"closed","Body":"Collection of commits which use `import type` to remove every existing circular dependency exception.","Url":"https://github.com/angular/angular/pull/59083","RelatedDescription":"Closed or merged PR \"Empty the circular dependencies golden\" (#59083)"},{"Id":"2719011726","IsPullRequest":true,"CreatedAt":"2024-12-05T23:24:46","Actor":"tbondwilkinson","Number":"59059","RawContent":null,"Title":"refactor(core): Remove event_contract_multi_container","State":"closed","Body":"This code has been moved internally.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n","Url":"https://github.com/angular/angular/pull/59059","RelatedDescription":"Closed or merged PR \"refactor(core): Remove event_contract_multi_container\" (#59059)"},{"Id":"2721481417","IsPullRequest":false,"CreatedAt":"2024-12-05T21:37:26","Actor":"naveedahmed1","Number":"59084","RawContent":null,"Title":"Enhance renderMode Configuration for Angular Router","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe introduction of the `renderMode` option in Angular Router is a fantastic feature, allowing developers to configure whether a route should be server-rendered, pre-rendered, or client-side rendered. However, the current implementation requires adding a separate configuration in the application's providers list, specifying which routes require SSR.\n\n```\nexport const serverRoutes: ServerRoute[] = [\n  {\n    path: '**',\n    renderMode: RenderMode.Server\n  }\n];\n```\n\n`provideServerRoutesConfig(serverRoutes)`\n\nThis approach, while functional, introduces redundancy and makes the configuration less intuitive.\n\n**Proposal**:\n\nAllow specifying the renderMode directly within the route definition itself. This would streamline the configuration, making it more straightforward and easier to understand. Developers could define the rendering mode for each route without needing a separate list in the providers.\n\n**Example**:\n\n```\nimport { Routes, RenderMode } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    renderMode: RenderMode.Server\n  },\n  {\n    path: 'about',\n    component: AboutComponent,\n    renderMode: RenderMode.Prerender\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    renderMode: RenderMode.Client // Default\n  }\n];\n```\n\n**Benefits**:\n\n- Simplified Configuration: No need for a separate provider configuration. The renderMode is specified where routes are defined.\n- Better Readability: The rendering mode is directly associated with the route, making it easier to understand at a glance.\n- Reduced Redundancy: Avoids the need to maintain a separate list of server-rendered routes, reducing the risk of mismatch or errors.\n- Backward Compatibility:\n\nIf the renderMode property is not specified in the route, it would default to RenderMode.Client, ensuring backward compatibility.\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.12.2\nPackage Manager: npm 10.6.0\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, platform-server\n... router, service-worker, ssr\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59084","RelatedDescription":"Open issue \"Enhance renderMode Configuration for Angular Router\" (#59084)"},{"Id":"2721391448","IsPullRequest":false,"CreatedAt":"2024-12-05T20:59:09","Actor":"jnizet","Number":"59082","RawContent":null,"Title":"ComponentFixture.detectChanges causes NG0100 in zoneless mode","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn zoneless mode, calling `ComponentFixture.detectChanges()` throws an NG0100 error.\n\nLet's take the following component as an example:\n\n```ts\n@Component({\n  selector: 'app-root',\n  template: '{{ value }}',\n})\nexport class AppComponent {\n  value = 0;\n}\n```\n \nI am well aware that in real life, since we use zoneless change detection, changing the value of the component should not trigger a change detection, because no signal is being modified.\n\nLet's run the following (bad) test for it:\n\n```ts\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent],\n      providers: [provideExperimentalZonelessChangeDetection()],\n    }).compileComponents();\n  });\n\n  it('should detect changes', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    \n    fixture.detectChanges();\n    expect(fixture.nativeElement.textContent).toBe('0');\n\n    fixture.componentInstance.value = 1;\n    fixture.detectChanges();\n    \n    expect(fixture.nativeElement.textContent).toBe('1');\n  });\n});\n```\n\nWhen executed, I expect this test to pass, because we imperatively launch a change detection instead of letting Angular autodetect the changes.\n\nBut the test neither passes nor properly fails. Instead, it throws an NG0100 error.\n\nThe better test, letting Angular auto-detect the changes, fails correctly:\n\n```ts\nimport { ComponentFixtureAutoDetect, TestBed } from '@angular/core/testing';\nimport { AppComponent } from './app.component';\nimport { provideExperimentalZonelessChangeDetection } from '@angular/core';\n\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [AppComponent],\n      providers: [\n        provideExperimentalZonelessChangeDetection(),\n        { provide: ComponentFixtureAutoDetect, useValue: true },\n      ],\n    }).compileComponents();\n  });\n\n  it('should detect changes', async () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    await fixture.whenStable();\n\n    expect(fixture.nativeElement.textContent).toBe('0');\n\n    fixture.componentInstance.value = 1;\n    await fixture.whenStable();\n\n    expect(fixture.nativeElement.textContent).toBe('1');\n  });\n});\n```\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-ah4pxu?file=demo%2Fsrc%2Fapp%2Fapp.component.spec.ts,demo%2Fsrc%2Fapp%2Fapp.component.better.spec.ts\n\n### Please provide the exception or error you saw\n\n```true\nError: NG0100: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '0'. Current value: '1'. Expression location: AppComponent component. Find more at https://angular.dev/errors/NG0100\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.4\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.3\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\nTo run the tests in the stackblitz:\n\n- `cd demo`\n- `npm i`\n- `ng test`\n","Url":"https://github.com/angular/angular/issues/59082","RelatedDescription":"Open issue \"ComponentFixture.detectChanges causes NG0100 in zoneless mode\" (#59082)"},{"Id":"2721380134","IsPullRequest":false,"CreatedAt":"2024-12-05T20:55:03","Actor":"alexprudhomme","Number":"59081","RawContent":null,"Title":"Angular is decoding reserved characters from fragments","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncore\n\n### Is this a regression?\n\nNo\n\n### Description\n\nWe use fragments (`#`) in the url to manage the search part of the state in our [redux based library](https://github.com/coveo/ui-kit/blob/master/packages/headless/README.md). When we encounter reserved characters in the state such as `&`, we use [encoreURIComponent](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent) to encode them. \n\nThis works fine in most contexts. In the context of Angular we are encountering a problem where angular decodes those reserved characters and changes the url with the decoded part. \n\n\nHere is an example where `%26` is wrongfully changed into `&`.\nhttps://kathleenwest.github.io/sample-angular-app/#q=This%26That\nturns into \nhttps://kathleenwest.github.io/sample-angular-app/#q=This&That\n\nThis does not happen if we use query parameters (`?`)\nhttps://kathleenwest.github.io/sample-angular-app/?q=This%26That\nstays \nhttps://kathleenwest.github.io/sample-angular-app/#q=This%26That\n\nIs this intended ? Why is angular decoding reserved characters in fragments ?\n\n### Please provide a link to a minimal reproduction of the bug\n\nAny new angular project\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.4\n@angular-devkit/build-angular   19.0.4\n@angular-devkit/core            19.0.4\n@angular-devkit/schematics      19.0.4\n@angular/cli                    19.0.4\n@schematics/angular             19.0.4\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59081","RelatedDescription":"Open issue \"Angular is decoding reserved characters from fragments\" (#59081)"},{"Id":"2721114649","IsPullRequest":true,"CreatedAt":"2024-12-05T18:26:19","Actor":"thePunderWoman","Number":"59080","RawContent":null,"Title":"ci: consolidate pullapprove groups","State":"open","Body":"This change was originally proposed by @alxhub. We should all be comfortable reviewing and approving any and all code in the repo. This consolidation removes the barriers for that to happen.\r\n\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/59080","RelatedDescription":"Open PR \"ci: consolidate pullapprove groups\" (#59080)"},{"Id":"2721076983","IsPullRequest":true,"CreatedAt":"2024-12-05T18:04:25","Actor":"BreadInvasion","Number":"59079","RawContent":null,"Title":"Update Dependency Injection Guide Preferring inject()","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nCurrently the Dependency Injection in-depth guide uses the constructor approach for injecting a dependency into a component, but inject() is now the preferred approach.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWhen demonstrating injection into a component, the guide now uses inject() instead of constructor().\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/59079","RelatedDescription":"Open PR \"Update Dependency Injection Guide Preferring inject()\" (#59079)"},{"Id":"2721023488","IsPullRequest":true,"CreatedAt":"2024-12-05T17:35:59","Actor":"amysorto","Number":"59078","RawContent":null,"Title":"docs: add component harnesses guides","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/59078","RelatedDescription":"Open PR \"docs: add component harnesses guides\" (#59078)"},{"Id":"2720977260","IsPullRequest":true,"CreatedAt":"2024-12-05T17:12:39","Actor":"angular-robot","Number":"59077","RawContent":null,"Title":"build: update actions/cache digest to 1bd1e32","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [actions/cache](https://redirect.github.com/actions/cache) | action | digest | `6849a64` -> `1bd1e32` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://redirect.github.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS40OS4xIiwidXBkYXRlZEluVmVyIjoiMzkuNDkuMSIsInRhcmdldEJyYW5jaCI6Im1haW4iLCJsYWJlbHMiOlsiYWN0aW9uOiBtZXJnZSIsImFyZWE6IGJ1aWxkICYgY2kiLCJ0YXJnZXQ6IHBhdGNoIl19-->\n","Url":"https://github.com/angular/angular/pull/59077","RelatedDescription":"Open PR \"build: update actions/cache digest to 1bd1e32\" (#59077)"},{"Id":"2719712157","IsPullRequest":false,"CreatedAt":"2024-12-05T17:01:45","Actor":"kienhoefr","Number":"59062","RawContent":null,"Title":"adev: IP blocked by firewall","State":"closed","Body":"### Describe the problem that you experienced\n\nHi everyone,\n\nI'm not sure if GitHub is the right place for this report, but I figured this is the best way to reach the people who know who to talk to.\n\nEver since the launch of angular.dev as the main website (since v18), we can no longer reliably access the site from our corporate network.\nIT claims the (apparently shared) Google Cloud IPs used to serve the angular websites (.dev and .io) have bad reputation and are classified as botnet by our firewall vendor (Clavister).\n\nHere are some public IP reputation listings that classify the IP as malicious:\n- https://www.abuseipdb.com/check/199.36.158.100\n- https://www.ipqualityscore.com/bot-management/bot-detection-check/lookup/199.36.158.100\n- https://www.apivoid.com/tools/ip-reputation-check/\n\nTherefore accessing any websites served over those IPs are blocked (inbound and outbound).\nSometimes accessing the site works again, but then the IP changes and is blocked again.\nI would have thought that Google would host their own websites using clean, Google-reserved IPs, but I suppose that is not the case.\n\nWe looked into whitelisting the Angular website in the firewall, but our firewall package does not include dynamically whitelisting IPs associated with a given DNS record. And since the IP of the website is not static, manually whitelisting the specific IP is not feasible.\n\n### Enter the URL of the topic with the problem\n\nThe whole site\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\nWe would like to ask the operator of the site (I assume this is either someone on Google's Angular team or at some other team at Google) to look into this matter and consider moving towards using IP adresses with good reputation to host the website.\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n```true\n\n```\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n```true\n\n```\n\n### Provide any additional information here in as much as detail as you can\n\nIf hosting the site with a good IP is not possible, we would have to host our own mirror of the angular.dev website (at least; maybe we would also need to deploy the v17 aio version, too, since there is still some content not available on adev yet).\nThis, however, is undesired since we would have to keep track of updates ourselves and we would probably have to hijack the angular.dev and v17.angular.io hostnames in our network to point to our local deployment to be able to click on links on Google and StackOverflow, for example.\nI have been able to construct a dockerfile for building and running adev locally by looking into the GitHub actions workflows.\nIn case this is the route we would have to take I would be thankful for any tips and caveats regarding hosting adev locally.\n\nThanks so much for looking into this!\n\nRaphael\n","Url":"https://github.com/angular/angular/issues/59062","RelatedDescription":"Closed issue \"adev: IP blocked by firewall\" (#59062)"},{"Id":"2720914414","IsPullRequest":false,"CreatedAt":"2024-12-05T16:42:51","Actor":"wysssa","Number":"59076","RawContent":null,"Title":"Styling in Angular Elements Angular 18","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nelements\n\n### Is this a regression?\n\nYes\n\n### Description\n\nStyling of Angular Material ist not applied in our Web Component if we don't import the style sheet. However, if we add the style sheet it overwrites the style from other Website-Components.\n\nThis was not a problem before we updated to Angular 17 respectively 18 and it was also not necessary to import the style sheet of the Web Component in order to have the proper styling.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://github.com/wysssa/angular18-elements\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 18.2.3\nNode: 18.17.0\nPackage Manager: npm 10.2.4\nOS: darwin arm64\n\nAngular: 18.2.3\n... animations, cdk, cli, common, compiler, compiler-cli, core\n... elements, forms, material, material-moment-adapter\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1802.3\n@angular-devkit/build-angular   18.2.3\n@angular-devkit/core            18.2.10\n@angular-devkit/schematics      18.2.10\n@angular/fire                   18.0.1\n@schematics/angular             18.2.3\nng-packagr                      18.2.1\nrxjs                            7.8.1\ntypescript                      5.4.5\nzone.js                         0.14.10\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59076","RelatedDescription":"Open issue \"Styling in Angular Elements Angular 18\" (#59076)"},{"Id":"2720906527","IsPullRequest":false,"CreatedAt":"2024-12-05T16:40:26","Actor":"NikNeutron1","Number":"59075","RawContent":null,"Title":"DOM independency","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nangular-core\n\n### Description\n\nI use Angulars Dependency Injection within a WebWorker Scope. \n\nAngular Core references Types Window, Document, HTMLElement, Elementand Node, which are only visible within Window Scope. However I can import and use { Injectable, Injector } from '@angular/core' if i hack following lines into index.d.ts.\n\n`/**\n * @license Angular v16.2.10\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscribable } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\n/*NEW LINES ADDED*/\ntype Window = any;\ntype Document = any;\ntype HTMLElement = any;\ntype Element = any;\ntype Node = any;\n\n/**\n * @description\n *\n * Represents an abstract class `T`, if applied to a concrete class it would stop being\n * instantiable.\n *\n * @publicApi\n */\nexport declare interface AbstractType<T>...\n`\n\nI will try publishing this change as \"neutron-angular-core\" and see if I can clean up my setup this way. However I love that rxjs can be used in any context and angular-core, also doesn't really depend on anything other then rxjs. So i think finding an official way to decouple angular core from DOM would be a great feature.\n\n### Proposed solution\n\nProposal 1)\nMove ɵɵresolveBody and other method from angular-core to angular-documents or something.\n\nProposal 2)\nDeclare the problematic types they same way I did, but with the constraints in mind, that the respective methods need instead of = any.\n\n### Alternatives considered\n\nMy workaround with a seperate package could be sufficient, but if the licence changes I would have a problem.","Url":"https://github.com/angular/angular/issues/59075","RelatedDescription":"Open issue \"DOM independency\" (#59075)"},{"Id":"2720889876","IsPullRequest":false,"CreatedAt":"2024-12-05T16:34:38","Actor":"mgechev","Number":"59074","RawContent":null,"Title":"Precache JavaScript in SW to speed up incremental hydration","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nTo speed up responding to user interaction when using incremental hydration we can precache the JavaScript chunks we extract at build time.\n\n### Proposed solution\n\nThe angular service worker could be a good candidate for precaching chunks. Ideally, we can create a mapping of JavaScript per page, start precaching the JavaScript for the current page with higher priority and after that precache the rest.\n\n### Alternatives considered\n\nWe can compare this approach to simply inlining link[rel=prefetch] in the page header.","Url":"https://github.com/angular/angular/issues/59074","RelatedDescription":"Open issue \"Precache JavaScript in SW to speed up incremental hydration\" (#59074)"},{"Id":"2720659715","IsPullRequest":true,"CreatedAt":"2024-12-05T15:18:29","Actor":"josephperrott","Number":"59071","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59071","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#59071)"},{"Id":"2720649479","IsPullRequest":true,"CreatedAt":"2024-12-05T15:17:32","Actor":"josephperrott","Number":"59070","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59070","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#59070)"},{"Id":"2720660140","IsPullRequest":true,"CreatedAt":"2024-12-05T15:05:14","Actor":"hawkgs","Number":"59072","RawContent":null,"Title":"docs(docs-infra): make font styles consistent in the API code ToC","State":"open","Body":"\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nSince code lines are wrapped in `<button>`-s, the native font styles overrides the parent's one which results in the font-family and font-size (esp. Safari) difference.\r\n\r\n<img width=\"774\" alt=\"Screenshot 2024-12-05 at 16 33 48\" src=\"https://github.com/user-attachments/assets/d6d581f6-6c54-4d0c-947b-d832331aaba6\">\r\n\r\n## What is the new behavior?\r\n\r\nThis is a bug fix of the described issue.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59072","RelatedDescription":"Open PR \"docs(docs-infra): make font styles consistent in the API code ToC\" (#59072)"},{"Id":"2720628572","IsPullRequest":false,"CreatedAt":"2024-12-05T14:52:18","Actor":"pkozlowski-opensource","Number":"59069","RawContent":null,"Title":"adev: getApiNavigationItems contains expensive sorting and delays application's bootstrap","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nNo\n\n### Description\n\nProfiling https://angular.dev/api shows that there is (relatively) expensive `getApiNavigationItems` executed well before application bootstrap. This delays initial rendering. As far as I can tell the culprit is in the sorting of the navigation items.\n\n![Image](https://github.com/user-attachments/assets/d1ef9fe4-7864-4e66-9700-2880c22849ab)\n\nMaybe we could sort those entries at the build time? \n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59069","RelatedDescription":"Open issue \"adev: getApiNavigationItems contains expensive sorting and delays application's bootstrap\" (#59069)"},{"Id":"2720537242","IsPullRequest":true,"CreatedAt":"2024-12-05T14:15:45","Actor":"hawkgs","Number":"59068","RawContent":null,"Title":"docs(docs-infra): drop tabs layout from the API reference details page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.dev application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n\r\nThe contents of the API reference details page are separated by tabs (Material).\r\n\r\n## What is the new behavior?\r\n\r\nThe tabs layout is removed in favor of a single page separated by sections. This resulted in the following major changes:\r\n\r\n- Removal of Material tabs\r\n- Refactoring of the API gen pipeline rendering templates to match the new tabless layout, i.e. the `tab-*.tsx` templates had been updated to `section-*.tsx`. There are some other minor changes like removal of redundant wrapping elements, etc.\r\n- Reducing the template of the API and CLI reference details page to a single `docs-viewer` call\r\n- Clean up of the scroll services (no longer needed code)\r\n- Refactoring of the reference details styles – now they reside in a `shared-docs/styles` since they are applied to `docs-viewer`\r\n- Added handler for legacy `?tab=<TAB>` URL-s that scroll you to the section that represents the tab\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/angular/angular/pull/59068","RelatedDescription":"Open PR \"docs(docs-infra): drop tabs layout from the API reference details page\" (#59068)"},{"Id":"2720477957","IsPullRequest":false,"CreatedAt":"2024-12-05T13:51:03","Actor":"csisy-bt4w","Number":"59067","RawContent":null,"Title":"\"Input is required but no value is available yet\" with toObservable if the content is dynamic","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nJust updated to Angular v19 and started to experience an error. Created an example with as minimal code as possible. Unfortunately it doesn't make too much sense without additional context, but it is what it is.\n\nSo the setup is the following:\n- We have a directive that has a required input (`ModelDirective`)\n- We have a component that queries a `ModelDirective` and uses its required input (`FormFieldComponent`)\n- We also need to turn that input signal into an rxjs observable (for reasons that is not obvious by the example)\n\nThe problem is observed within the `toObservable` but only if the queried directive is created dynamically within a dynamically created component. If you run the example, you can see that the input is actually set properly - if we directly use the computed signal, its value is successfully displayed. However, once we try to read the observable's value, an error is thrown.\n\nIf, however, the directive or the owning component is available without any condition, everything works fine (there is a commented line in the example template).\n\nThis setup was working fine in Angular v18.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-vjskep?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nERROR RuntimeError: NG0950: Input is required but no value is available yet.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.11.1\nPackage Manager: npm 10.2.4\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core\n... localize, platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1800.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            18.0.3\n@angular-devkit/schematics      18.2.11\n@angular/cdk                    19.0.2\n@schematics/angular             18.2.11\nng-packagr                      19.0.1\nrxjs                            7.8.1\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59067","RelatedDescription":"Open issue \"\"Input is required but no value is available yet\" with toObservable if the content is dynamic\" (#59067)"},{"Id":"2720414762","IsPullRequest":false,"CreatedAt":"2024-12-05T13:26:01","Actor":"UchihaYuki","Number":"59066","RawContent":null,"Title":"Found lots of logical errors in  \"Hierarchical injectors\" doc","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ndocs\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIt's so hard to read [this doc](https://angular.dev/guide/di/hierarchical-dependency-injection#example-elementinjector-use-cases), because there are lots of errors (at least, I think they are errors). I can't list all of them, let me for example:\n1.\n![Image](https://github.com/user-attachments/assets/0e97eb64-8770-4ee3-85b1-b4be981e35ad)\n2.\n![Image](https://github.com/user-attachments/assets/8a31a092-aca9-4f1c-bc64-029c4d4a22de)\n\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59066","RelatedDescription":"Open issue \"Found lots of logical errors in  \"Hierarchical injectors\" doc\" (#59066)"},{"Id":"2720192682","IsPullRequest":false,"CreatedAt":"2024-12-05T11:48:14","Actor":"bjarketrux","Number":"59065","RawContent":null,"Title":"NavigationEnd resolves before DOM is updated on initial load with nested router-outlets","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nrouter\n\n### Is this a regression?\n\nNo\n\n### Description\n\nIn our application we follow the accessibility pattern: [Focus management after navigation](https://angular.dev/best-practices/a11y#focus-management-after-navigation).\n\nThis has worked for a while, but recently we introduced an extra LayoutComponent in the router turning the existing components into children of it. This caused a bug as the element to focus on `NavigationEnd` does not get focus on the initial page load (disregard that this might be better for accessibility).\n\nIn the attached StackBlitz I have recreated the \"bug\" (or inconsistency). There is a `debugger;` statement at the line where the focus is supposed to be set (open DevTools to make it trigger).\n\n### Scenario 1 (not as expected)\n1. Open DevTools on the StackBlitz example\n2. Click the preview reload icon to make the preview page reload\n3. **Observe**: When the break point is hit, the `Layout2` component and the `Focus` div is not rendered in the DOM (but `Main` and `Layout1` is)\n\n### Scenario 2 (as expected)\n1. Continue from previous example\n2. Click continue to continue execution\n3. Press the Page 1 or Page 2 link\n4. **Observe**: When the break point is hit, the `Layout2` component and the `Focus` div **is** rendered in the DOM\n\n### Expected behavior\nI expected (maybe wrongly) that when `NavigationEnd` is triggered, all router-outlets have been rendered to DOM.\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-yue3ta?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.0\nNode: 18.20.3\nPackage Manager: npm 10.2.3\nOS: linux x64\n\nAngular: 19.0.0\n... animations, build, cli, common, compiler, compiler-cli, core\n... forms, platform-browser, router\n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.0\n@angular-devkit/core         19.0.0\n@angular-devkit/schematics   19.0.0\n@schematics/angular          19.0.0\nrxjs                         7.8.1\ntypescript                   5.6.3\nzone.js                      0.15.0\n```\n\n### Anything else?\n\nA possible workaround - if the navigation event works as expected - is to add a `setTimeout` around the DOM manipulation (maybe?).","Url":"https://github.com/angular/angular/issues/59065","RelatedDescription":"Open issue \"NavigationEnd resolves before DOM is updated on initial load with nested router-outlets\" (#59065)"},{"Id":"2719742578","IsPullRequest":false,"CreatedAt":"2024-12-05T08:37:18","Actor":"AruljothySundaramoorthy","Number":"59063","RawContent":null,"Title":"NG0909: Expected to be in Angular Zone, but it is not!","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\nHave updated my angular application from V16 to V17 then moved to V18, while the running the App. in V18 its throwing err like \"NG0909: Expected to be in Angular Zone, but it is not!\"\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\"NG0909: Expected to be in Angular Zone, but it is not!\"\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59063","RelatedDescription":"Open issue \"NG0909: Expected to be in Angular Zone, but it is not!\" (#59063)"},{"Id":"2719341854","IsPullRequest":false,"CreatedAt":"2024-12-05T05:10:07","Actor":"clark-pan-canva","Number":"59060","RawContent":null,"Title":"UMD version of Zone.js is incorrectly transpiled","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nzone.js\n\n### Is this a regression?\n\nNo\n\n### Description\n\nThe implementation of ZoneAwarePromise.allWithCallback uses a `for(... of ...)` loop. This is expected and correct, as [Promise.all](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all) expects an iterable.\n\nHowever, the latest published [UMD version](https://unpkg.com/zone.js@0.15.0/bundles/zone.umd.js) of zone.js transpiles that down to `for (var _i = 0, values_3 = values; _i < values_3.length; _i++) {`, which will only work with Arrays (or ArrayLike) values.\n\nThis fails when Promise.all is used with Iterables\n\n### Please provide a link to a minimal reproduction of the bug\n\n[JSFiddle showing bug when umd version of zone is installed](https://jsfiddle.net/32o5ydsj/4/)\n\n[JSFiddle showing correct behaviour without zone.js](https://jsfiddle.net/32o5ydsj/3/)\n\n### Please provide the exception or error you saw\n\n```true\nN/A\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nN/A\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59060","RelatedDescription":"Open issue \"UMD version of Zone.js is incorrectly transpiled\" (#59060)"},{"Id":"2719006404","IsPullRequest":false,"CreatedAt":"2024-12-04T23:46:00","Actor":"grzegorzszymonik","Number":"59058","RawContent":null,"Title":"Angular 19: Issue with Style Flickering When Switching Views (ng serve)","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nDon't known / other\n\n### Is this a regression?\n\nYes\n\n### Description\n\nHello everyone,\n\n**The problem occurs when starting the project via npm run start (i.e. ng serve). When the project is built, the problem does not occur.**\n\nI'd like to inform you about a problem I've encountered after updating to Angular 19. When navigating from one view to another and back, I've noticed a flickering effect related to the styles of a specific component. As the component loads, it appears without any styles for a split second before the styles are applied and everything returns to normal.\n\nThis issue did not occur in Angular 18.\n\nHow to reproduce the problem:\n\nCreate a new project in Angular 19.\nCreate two routable components, e.g., view1 and view2.\nAdd HTML elements to each component, such as `<h1>, <p>`, and a <button> with a routerLink navigating between view1 and view2.\nAdd styles to these components, like background, font-size, etc.\nRun the application and navigate to the main page. If you refresh the page directly or using the refresh button, everything works correctly.\nNavigate using the button with routerLink to the second view and back. You'll notice that for a moment, the components are displayed without styles, and then the styles load.\n\nAdditional Information:\nBrowser: Google Chrome 131.0.6778.70\n\nExample in stackblitz: https://stackblitz.com/edit/stackblitz-starters-rb8wat\n\nSeems like this bug is bound to the HMR of stylesheets cause once built, there is no bug anymore.\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-rb8wat\n\n### Please provide the exception or error you saw\n\n```true\nWhen navigating from one view to another and back, I've noticed a flickering effect related to the styles of a specific component. As the component loads, it appears without any styles for a split second before the styles are applied and everything returns to normal. As if there was a delay in loading the styles.\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 19.0.3\nNode: 20.13.1\nNpm: 8.3.0\n\nAngular: 19.0.3\n\n@angular-devkit/build-angular: \"19.0.3\",\n@angular/cli: \"19.0.3\",\n@angular/compiler-cli: \"19.0.3\",\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/59058","RelatedDescription":"Open issue \"Angular 19: Issue with Style Flickering When Switching Views (ng serve)\" (#59058)"},{"Id":"2718640543","IsPullRequest":false,"CreatedAt":"2024-12-04T19:40:42","Actor":"LanderBeeuwsaert","Number":"59057","RawContent":null,"Title":"[FR] A utility similar to react-scan, but then for angular","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nHaving a tool similar to react scan ( https://github.com/aidenybai/react-scan ) for angular would be great. \n\n### Proposed solution\n\nHaving a tool similar to react scan ( https://github.com/aidenybai/react-scan ) for angular would be great. \n\n### Alternatives considered\n\nnone","Url":"https://github.com/angular/angular/issues/59057","RelatedDescription":"Open issue \"[FR] A utility similar to react-scan, but then for angular\" (#59057)"},{"Id":"2718621784","IsPullRequest":true,"CreatedAt":"2024-12-04T19:30:03","Actor":"pkozlowski-opensource","Number":"59056","RawContent":null,"Title":"Bump version to \"v19.1.0-next.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/59056","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.2\" with changelog.\" (#59056)"},{"Id":"2718609150","IsPullRequest":true,"CreatedAt":"2024-12-04T19:23:03","Actor":"pkozlowski-opensource","Number":"59055","RawContent":null,"Title":"docs: release notes for the v19.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular/pull/59055","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.3 release\" (#59055)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"2721541487","IsPullRequest":false,"CreatedAt":"2024-12-05T22:13:36","Actor":"erikgiovani","Number":"29070","RawContent":null,"Title":"Improve the default angular template and I want to add it to the cli.","State":"open","Body":"### Command\n\nnew\n\n### Description\n\nI think the current design can be improved, This is how it currently looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/29bbe795-404a-4215-ac2b-1788d15c268f)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/fe5718a4-4adc-4bce-be85-8d5f1ad8b613)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/21ae9a7a-ade2-47c3-b5f7-fb5d878ac6e6)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/6671b1fc-6ea2-4680-adeb-06c4daca09e4)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/3876c386-833c-4be6-b42c-4fb4f2fe24b9)\n\n\n\n### Describe the solution you'd like\n\nI made a design with 27 lines of code less than the current one and it still uses svg, This is how it looks:\n\n## iPhone 12: 390x844\n![Image](https://github.com/user-attachments/assets/76af5e77-c238-4323-8017-1120ccf21a57)\n\n## iPad: 768x1024\n![Image](https://github.com/user-attachments/assets/a98ec057-34da-4c0f-8356-322eb2eecf0d)\n\n## Desktop PC Small: 1024x768\n![Image](https://github.com/user-attachments/assets/e08bee47-ab86-46a0-bd57-72161e6822de)\n\n## MacBook Pro: 1440x900\n![Image](https://github.com/user-attachments/assets/a0ec1753-6b78-4641-a0bd-1f5cee402aae)\n\n## Desktop PC: 1920x1080\n![Image](https://github.com/user-attachments/assets/83a806e1-f9ca-4875-b999-02cdb7222202)\n\n\n\n### Describe alternatives you've considered\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29070","RelatedDescription":"Open issue \"Improve the default angular template and I want to add it to the cli.\" (#29070)"},{"Id":"2720910532","IsPullRequest":true,"CreatedAt":"2024-12-05T19:24:30","Actor":"jkrems","Number":"29066","RawContent":null,"Title":"fix(@angular-devkit/build-angular): webpack config transform for karma","State":"closed","Body":"This PR is 10% passing an argument that got dropped during refactoring and 90% finding a way to test the behavior.\r\n\r\nI'm making up a new concept for the harness (`additionalExecuteArguments`) which is pretty ugly but I couldn't think of a cleaner way of doing it. There might be a way to capture rest arguments of the `execute` function signature inside of the harness to make the cast go away. But I'm not 100% convinced that the more complicated types leaking throughout the harness code would really be worth it for this edge case.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/29003","Url":"https://github.com/angular/angular-cli/pull/29066","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): webpack config transform for karma\" (#29066)"},{"Id":"2721166801","IsPullRequest":true,"CreatedAt":"2024-12-05T19:18:35","Actor":"alan-agius4","Number":"29069","RawContent":null,"Title":"refactor(@angular/build): move `getDepOptimizationConfig` into utils file","State":"closed","Body":"\r\nReduce the amount of code in vite-server.ts\r\n","Url":"https://github.com/angular/angular-cli/pull/29069","RelatedDescription":"Closed or merged PR \"refactor(@angular/build): move `getDepOptimizationConfig` into utils file\" (#29069)"},{"Id":"2721034857","IsPullRequest":true,"CreatedAt":"2024-12-05T17:48:55","Actor":"alan-agius4","Number":"29068","RawContent":null,"Title":"docs: release notes for the v19.0.4 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29068","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.4 release\" (#29068)"},{"Id":"2721029076","IsPullRequest":true,"CreatedAt":"2024-12-05T17:41:03","Actor":"alan-agius4","Number":"29067","RawContent":null,"Title":"Bump version to \"v19.0.4\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29067","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.4\" with changelog.\" (#29067)"},{"Id":"2720884918","IsPullRequest":true,"CreatedAt":"2024-12-05T17:30:57","Actor":"alan-agius4","Number":"29065","RawContent":null,"Title":"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`","State":"closed","Body":"\r\n\r\nThis commit ensures consistent behavior between `ng build` and `ng serve`. Previously, `ng serve` did not display an error message when Node.js built-in modules were included in browser bundles. By default, Vite replaces Node.js built-ins with empty modules, which can lead to unexpected runtime issues. This update addresses the problem by surfacing clear error messages, providing better developer feedback and alignment between the two commands.\r\n\r\nCloses: #27425\r\n(cherry picked from commit 06f478bc18d3e0daa8902d0fef94e55a5d052348)\r\n","Url":"https://github.com/angular/angular-cli/pull/29065","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`\" (#29065)"},{"Id":"2720499429","IsPullRequest":true,"CreatedAt":"2024-12-05T16:44:44","Actor":"alan-agius4","Number":"29059","RawContent":null,"Title":"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`","State":"closed","Body":"\r\nThis commit ensures consistent behavior between `ng build` and `ng serve`. Previously, `ng serve` did not display an error message when Node.js built-in modules were included in browser bundles. By default, Vite replaces Node.js built-ins with empty modules, which can lead to unexpected runtime issues. This update addresses the problem by surfacing clear error messages, providing better developer feedback and alignment between the two commands.\r\n\r\nCloses: #27425","Url":"https://github.com/angular/angular-cli/pull/29059","RelatedDescription":"Closed or merged PR \"fix(@angular/build): show error when Node.js built-ins are used during `ng serve`\" (#29059)"},{"Id":"2720293960","IsPullRequest":true,"CreatedAt":"2024-12-05T15:31:25","Actor":"clydin","Number":"29057","RawContent":null,"Title":"perf(@angular/build): reuse TS package.json cache when rebuilding","State":"closed","Body":"TypeScript 5.6 and higher added functionality that will search for a `package.json` file for source files that are part of the program (e.g., `.d.ts`) and within a node modules directory. This can be an expensive tasks especially considering the large amount of `.d.ts` files within packages. TypeScript supports using a cache of known `package.json` files to improve the performance of this task. The Angular CLI will now provide and reuse this cache across rebuilds during watch mode. This includes the use of `ng serve`.\r\n\r\nThe performance difference is most apparent for the Angular template diagnostic step of the build. Internally the Angular compiler creates a new template typechecking program which causes the `package.json` search process to occur. By leveraging the cache, this process becomes a series of cache hits. In the event that files are modified within the node modules directory, the cache is invalidated and the following rebuild may be longer as a result.\r\n\r\n(cherry picked from commit 75998ebabb041f60aab40bf5a11979e8f3615537)","Url":"https://github.com/angular/angular-cli/pull/29057","RelatedDescription":"Closed or merged PR \"perf(@angular/build): reuse TS package.json cache when rebuilding\" (#29057)"},{"Id":"2720241424","IsPullRequest":true,"CreatedAt":"2024-12-05T15:21:37","Actor":"alan-agius4","Number":"29056","RawContent":null,"Title":"docs(@angular/ssr): remove duplicate `@return` comment","State":"closed","Body":"Remove duplicate `@return` tsdoc comment.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29056","RelatedDescription":"Closed or merged PR \"docs(@angular/ssr): remove duplicate `@return` comment\" (#29056)"},{"Id":"2720674973","IsPullRequest":true,"CreatedAt":"2024-12-05T15:21:13","Actor":"alan-agius4","Number":"29064","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29064","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29064)"},{"Id":"2720663050","IsPullRequest":true,"CreatedAt":"2024-12-05T15:20:52","Actor":"alan-agius4","Number":"29062","RawContent":null,"Title":"ci: update dev-infra sha to use latest Bazel keys","State":"closed","Body":"This commit consumes the latest version of dev-infra to fix CI.\r\n\r\nSee: angular/dev-infra@40b2cbd\r\n","Url":"https://github.com/angular/angular-cli/pull/29062","RelatedDescription":"Closed or merged PR \"ci: update dev-infra sha to use latest Bazel keys\" (#29062)"},{"Id":"2720665449","IsPullRequest":true,"CreatedAt":"2024-12-05T15:13:14","Actor":"josephperrott","Number":"29063","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29063","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29063)"},{"Id":"2720647849","IsPullRequest":true,"CreatedAt":"2024-12-05T15:12:59","Actor":"josephperrott","Number":"29060","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29060","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#29060)"},{"Id":"2720658740","IsPullRequest":true,"CreatedAt":"2024-12-05T15:08:55","Actor":"alan-agius4","Number":"29061","RawContent":null,"Title":"ci: update dev-infra sha to use latest Bazel keys","State":"closed","Body":"This commit consumes the latest version of dev-infra to fix CI.\r\n\r\nSee: https://github.com/angular/dev-infra/commit/40b2cbdbcc40f36f125d721c4e8decd3bb607ea4\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/29061","RelatedDescription":"Closed or merged PR \"ci: update dev-infra sha to use latest Bazel keys\" (#29061)"},{"Id":"2720299228","IsPullRequest":true,"CreatedAt":"2024-12-05T12:35:03","Actor":"alan-agius4","Number":"29058","RawContent":null,"Title":"test(@angular/ssr): refine spec setup to resolve component ID collision warnings","State":"open","Body":"\r\n\r\nThis update addresses excessive log noise caused by the following warning: `NG0912: Component ID generation collision detected. Components 'AppComponent' and 'AppComponent' with selector 'app-root' generated the same component ID. To fix this, you can change the selector of one of those components or add an extra host attribute to force a different ID. Find more at https://angular.dev/errors/NG0912`.\r\n","Url":"https://github.com/angular/angular-cli/pull/29058","RelatedDescription":"Open PR \"test(@angular/ssr): refine spec setup to resolve component ID collision warnings\" (#29058)"},{"Id":"2718817524","IsPullRequest":true,"CreatedAt":"2024-12-05T08:40:09","Actor":"clydin","Number":"29053","RawContent":null,"Title":"perf(@angular/build): reuse TS package.json cache when rebuilding","State":"closed","Body":"TypeScript 5.6 and higher added functionality that will search for a `package.json` file for source files that are part of the program (e.g., `.d.ts`) and within a node modules directory. This can be an expensive task especially considering the large amount of `.d.ts` files within packages. TypeScript supports using a cache of known `package.json` files to improve the performance of this task. The Angular CLI will now provide and reuse this cache across rebuilds during watch mode. This includes the use of `ng serve`.\r\n\r\nThe performance difference is most apparent for the Angular template diagnostic step of the build. Internally the Angular compiler creates a new template typechecking program which causes the `package.json` search process to occur. By leveraging the cache, this process becomes a series of cache hits. In the event that files are modified within the node modules directory, the cache is invalidated and the following rebuild may be longer as a result.\r\n\r\nPrevious:\r\n```\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.040498750s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.000079378s [count: 265; avg: 0.000000300s; min: 0.000000166s; max: 0.000003042s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.000095121s [count: 265; avg: 0.000000359s; min: 0.000000250s; max: 0.000004500s]\r\nDURATION[NG_DIAGNOSTICS_TEMPLATE]: 0.040161625s [count: 1; avg: 0.040161625s; min: 0.040161625s; max: 0.040161625s]\r\n```\r\n\r\nNow:\r\n```\r\nDURATION[NG_DIAGNOSTICS_TOTAL]: 0.007495333s\r\nDURATION[NG_DIAGNOSTICS_SYNTACTIC]: 0.000082327s [count: 265; avg: 0.000000311s; min: 0.000000208s; max: 0.000002750s]\r\nDURATION[NG_DIAGNOSTICS_SEMANTIC]: 0.000109290s [count: 265; avg: 0.000000412s; min: 0.000000291s; max: 0.000003875s]\r\nDURATION[NG_DIAGNOSTICS_TEMPLATE]: 0.007141042s [count: 1; avg: 0.007141042s; min: 0.007141042s; max: 0.007141042s]\r\n```","Url":"https://github.com/angular/angular-cli/pull/29053","RelatedDescription":"Closed or merged PR \"perf(@angular/build): reuse TS package.json cache when rebuilding\" (#29053)"},{"Id":"2718563625","IsPullRequest":true,"CreatedAt":"2024-12-05T06:12:04","Actor":"alan-agius4","Number":"29052","RawContent":null,"Title":"build: pin `@angular/` deps","State":"closed","Body":"This would enable renovate to auto update when there is a new version.\r\n","Url":"https://github.com/angular/angular-cli/pull/29052","RelatedDescription":"Closed or merged PR \"build: pin `@angular/` deps\" (#29052)"},{"Id":"2718973810","IsPullRequest":true,"CreatedAt":"2024-12-04T23:18:48","Actor":"aaronshim","Number":"29055","RawContent":null,"Title":"fix(@angular/build): Fixing auto-csp edge cases","State":"open","Body":"- <script> is the last tag before </head> close\r\n- .appendChild is called before </head> (because document.body is undefined then)\r\n- <script> tags with a src attribute and no specified type attribute should not write <script type=\"undefined\" ...>\r\n\r\n## PR Checklist\r\n\r\nPlease check to confirm your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular-cli/blob/main/CONTRIBUTING.md#-commit-message-guidelines\r\n- [X] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n## PR Type\r\n\r\nWhat kind of change does this PR introduce?\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n\r\nAuto-CSP creates non-loading loader scripts\r\n\r\nIssue Number: #29054 \r\n\r\n## What is the new behavior?\r\n\r\nAuto-CSP generates loading loader scripts\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular-cli/pull/29055","RelatedDescription":"Open PR \"fix(@angular/build): Fixing auto-csp edge cases\" (#29055)"},{"Id":"2718970766","IsPullRequest":false,"CreatedAt":"2024-12-04T23:15:44","Actor":"aaronshim","Number":"29054","RawContent":null,"Title":"Auto-CSP generates invalid loader scripts for some <script> tags","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAuto-CSP relies on rewriting scripts of the form `<script src=\"...\"></script>` into an inline loader script that will dynamically re-create these tags and add them to the DOM.\n\nThere are some `<script src=\"...\">` configurations that generate inline loader scripts that will not run on the transformed page, such as\n\n- Having your `<script src=\"...\">` tag appear in the `<head>` rather than the `<body>` of the document.\n- Having your `<script src=\"...\">` tag interpreted as something that will create a `type=\"undefined\"` attribute on the generated node added to the DOM\n\n### Minimal Reproduction\n\nThe `index.html` should have the following:\n\n```\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <base href=\"/\">\n  <script src='script1.js'></script>\n</head>\n<body>\n  <app-root></app-root>  \n  <script src='script2.js'></script>\n  </body>\n</html>\n```\n\n### Exception or Error\n\n```text\n`script1.js` and `script2.js` do not run.\n```\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.3\nNode: 20.15.1\nPackage Manager: npm 10.7.0\nOS: linux x64\n\nAngular: \n... \n\nPackage                      Version\n------------------------------------------------------\n@angular-devkit/architect    0.1900.3 (cli-only)\n@angular-devkit/core         19.0.3 (cli-only)\n@angular-devkit/schematics   19.0.3 (cli-only)\n@schematics/angular          19.0.3 (cli-only)\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29054","RelatedDescription":"Open issue \"Auto-CSP generates invalid loader scripts for some <script> tags\" (#29054)"},{"Id":"2718479806","IsPullRequest":true,"CreatedAt":"2024-12-04T18:36:53","Actor":"alan-agius4","Number":"29051","RawContent":null,"Title":"test: disable colors in vite tests","State":"closed","Body":"This forcefully removes the colors.\r\n","Url":"https://github.com/angular/angular-cli/pull/29051","RelatedDescription":"Closed or merged PR \"test: disable colors in vite tests\" (#29051)"},{"Id":"2718444312","IsPullRequest":true,"CreatedAt":"2024-12-04T18:12:02","Actor":"alan-agius4","Number":"29050","RawContent":null,"Title":"test: Introduce delay for file write to minimize flakiness","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29050","RelatedDescription":"Closed or merged PR \"test: Introduce delay for file write to minimize flakiness\" (#29050)"},{"Id":"2718031059","IsPullRequest":true,"CreatedAt":"2024-12-04T15:09:12","Actor":"alan-agius4","Number":"29048","RawContent":null,"Title":"Bump version to \"v19.1.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29048","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.0\" with changelog.\" (#29048)"},{"Id":"2718020221","IsPullRequest":true,"CreatedAt":"2024-12-04T15:03:24","Actor":"alan-agius4","Number":"29047","RawContent":null,"Title":"Bump version to \"v19.1.0-next.0\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29047","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.0\" with changelog.\" (#29047)"},{"Id":"2717681825","IsPullRequest":true,"CreatedAt":"2024-12-04T14:57:17","Actor":"alan-agius4","Number":"29041","RawContent":null,"Title":"test: Introduce delay for file write to minimize flakiness","State":"closed","Body":"With recent updates to Vite, rebuild times have become significantly faster. To ensure reliable testing, we’ve added a deliberate delay to slow down the process during file writes.\r\n","Url":"https://github.com/angular/angular-cli/pull/29041","RelatedDescription":"Closed or merged PR \"test: Introduce delay for file write to minimize flakiness\" (#29041)"},{"Id":"2718008254","IsPullRequest":true,"CreatedAt":"2024-12-04T14:56:42","Actor":"alan-agius4","Number":"29046","RawContent":null,"Title":"docs: release notes for the v19.0.3 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/angular-cli/pull/29046","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.3 release\" (#29046)"},{"Id":"2718000038","IsPullRequest":true,"CreatedAt":"2024-12-04T14:55:00","Actor":"alan-agius4","Number":"29045","RawContent":null,"Title":"Bump version to \"v19.0.3\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29045","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.3\" with changelog.\" (#29045)"},{"Id":"2717804136","IsPullRequest":true,"CreatedAt":"2024-12-04T14:37:28","Actor":"alan-agius4","Number":"29043","RawContent":null,"Title":"build: update all non-major dependencies","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/29043","RelatedDescription":"Closed or merged PR \"build: update all non-major dependencies\" (#29043)"},{"Id":"2717879070","IsPullRequest":true,"CreatedAt":"2024-12-04T14:09:32","Actor":"alan-agius4","Number":"29044","RawContent":null,"Title":"feat(@angular/ssr): redirect to preferred locale when accessing root route without a specified locale","State":"open","Body":"    \r\nWhen users access the root route `/` without providing a locale, the application now redirects them to their preferred locale based on the `Accept-Language` header.\r\n    \r\nThis enhancement leverages the user's browser preferences to determine the most appropriate locale, providing a seamless and personalized experience without requiring manual locale selection.\r\n","Url":"https://github.com/angular/angular-cli/pull/29044","RelatedDescription":"Open PR \"feat(@angular/ssr): redirect to preferred locale when accessing root route without a specified locale\" (#29044)"},{"Id":"2717744856","IsPullRequest":false,"CreatedAt":"2024-12-04T13:45:25","Actor":"The-Duuude-dot","Number":"29042","RawContent":null,"Title":"debug 4.3.7 (@angular/localize 18.2.13)","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\nlocalize\n\n### Is this a regression?\n\nYes\n\n### Description\n\nImporting @angular/localize 18.2.13 as a package.json dependency causes builds with debug 4.3.7 packaging ending up in prod builds according to checkmarx analysis.\nExample:\n```\n\"dependencies\": {\n\t\t\t\t\"@angular/common\": \"^18.2.13\",\n\t\t\t\t\"@angular/core\": \"^18.2.13\",\n\t\t\t\t\"@angular/forms\": \"^18.2.13\",\n\t\t\t\t\"@angular/localize\": \"^18.2.13\",\n```\n\n\nThis does not happen for debug 2.6.9 (@angular-devkit/build-angular 18.2.12) when imported like:\nExample:\n```\n\t\t\t\"devDependencies\": {\n\t\t\t\t\"@angular-devkit/build-angular\": \"^18.2.12\",\n```\n\n\nOf course this module exhibits the following :\nCategory CWE-1333 | Inefficient Regular Expression Complexity\n\nCVE Details\nPublished: Dec 10, 2020\nIn NPM debug, the enable function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user's browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.\n\n\nWe're not sure why a debug package is used in prod builds? There maybe is a good reason for this. It's up to you to tell.\n \nFor your info, debug npm module is \"A tiny JavaScript debugging utility modelled after Node.js core's debugging technique. Works in Node.js and web browsers.\"\n\n\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\n\n```\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\n- Does not depend on  Node version, \n- Angular 16, 17, 18...\n```\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29042","RelatedDescription":"Closed issue \"debug 4.3.7 (@angular/localize 18.2.13)\" (#29042)"},{"Id":"2717345235","IsPullRequest":false,"CreatedAt":"2024-12-04T10:58:31","Actor":"rubiesonthesky","Number":"29040","RawContent":null,"Title":"Budget warnings calculated incorrectly with esbuild builder","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18 (Well, with webpack, I did not test esbuild builder with Angular 18)\n\n### Description\n\nThis inconsistency is between esbuild and webpack builders. I have set that \"styles\" budget is `310.82kB`, but I get warning while building saying `styles failed to meet minimum budget. Budget 317.25 kB was not met by 6.44 kB with a total of 310.82 kB.`. \n\nAfter writing scripts to calculate these sizes myself, it seems that in version 18 with webpack builder, bytes where converted to `kB` with multiplier `1024`. With esbuild, it seems that `kB` sizes are calculated with multiplied `1000`. So when `stats.json` says `bytes: 34607`, you need to multiply it with 1000 to get the same size that `build` report gives \n\n```\nstyles-7LUPB3L5.css   | styles                            | 310.82 kB |                33.90 kB\npolyfills-4HAGG4WH.js | polyfills                         |  34.61 kB |                11.34 kB\n```\n\nBut then it gives warnings\n\n```\n▲ [WARNING] styles failed to meet minimum budget. Budget 317.25 kB was not met by 6.44 kB with a total of 310.82 kB.\n▲ [WARNING] polyfills failed to meet minimum budget. Budget 35.34 kB was not met by 728 bytes with a total of 34.61 kB.\n```\n\nMy `angular.json` has this\n\n```\n                {\n                  \"type\": \"bundle\",\n                  \"name\": \"styles\",\n                  \"baseline\": \"310.816kB\",\n                  \"warning\": \"1kB\",\n                  \"error\": \"100kB\"\n                },\n                {\n                  \"type\": \"bundle\",\n                  \"name\": \"polyfills\",\n                  \"baseline\": \"34.607kB\",\n                  \"warning\": \"0.1kB\",\n                  \"error\": \"5kB\"\n                },\n```\n\nSo I think those warnings are reported incorrectly. It seems that the values are taken from `angular.json` and then multiplied to get `317.25 kB` and `35.34 kB` when they should not be multiplied. \n\n### Minimal Reproduction\n\nI can repro this with new Angular 19 app, which uses `\"builder\": \"@angular-devkit/build-angular:application\",`\n\nI added budget constraint to `angular.json`\n\n```\n                {\n                  \"type\": \"bundle\",\n                  \"name\": \"main\",\n                  \"baseline\": \"208.23kB\",\n                  \"warning\": \"1b\",\n                  \"error\": \"5kB\"\n                },\n```\n\nAfter which I get warning\n\n```\n❯ ng build\nInitial chunk files   | Names         |  Raw size | Estimated transfer size\nmain-IEYM3F25.js      | main          | 208.23 kB |                56.85 kB\npolyfills-FFHMD2TL.js | polyfills     |  34.52 kB |                11.28 kB\nstyles-5INURTSO.css   | styles        |   0 bytes |                 0 bytes\n\n                      | Initial total | 242.75 kB |                68.13 kB\n\nApplication bundle generation complete. [1.775 seconds]\n\n▲ [WARNING] main failed to meet minimum budget. Budget 213.23 kB was not met by 4.99 kB with a total of 208.23 kB.\n```\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nThis is from newly created project\n\n\n\n     _                      _                 ____ _     ___\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\n                |___/\n    \n\nAngular CLI: 19.0.2\nNode: 20.11.1\nPackage Manager: npm 10.8.2\nOS: darwin arm64\n\nAngular: 19.0.1\n... animations, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            19.0.2\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/29040","RelatedDescription":"Open issue \"Budget warnings calculated incorrectly with esbuild builder\" (#29040)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"2721519823","IsPullRequest":true,"CreatedAt":"2024-12-05T21:58:49","Actor":"kseamon","Number":"30136","RawContent":null,"Title":"feat(cdk-experimental/column-resize): Support column size persistance…","State":"open","Body":"… hooks","Url":"https://github.com/angular/components/pull/30136","RelatedDescription":"Open PR \"feat(cdk-experimental/column-resize): Support column size persistance…\" (#30136)"},{"Id":"2721329785","IsPullRequest":false,"CreatedAt":"2024-12-05T20:30:16","Actor":"horesse","Number":"30135","RawContent":null,"Title":"bug(Timepicker): With changing the time, date is changing too","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nIn FormControl, when the time changes, the date also changes\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/czbajk-h7xm7v?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.ts\nSteps to reproduce:\n1. Add FormControl\n2. Add DatePicker and TimePicker\n3. Change Date\n4. Change Time\n5. See formControl value and value in DatePicker\n\n\n### Expected Behavior\n\nChange only time in value\n\n### Actual Behavior\n\nChange date\n\n### Environment\n\n- Angular: latest\n- CDK/Material: latest\n- Browser(s): Chrome \n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30135","RelatedDescription":"Open issue \"bug(Timepicker): With changing the time, date is changing too\" (#30135)"},{"Id":"2721322153","IsPullRequest":false,"CreatedAt":"2024-12-05T20:25:58","Actor":"horesse","Number":"30134","RawContent":null,"Title":"bug(Timepicker): Disabled not working in FormControl","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThe disabled property does not work correctly in timepicker. It blocks the time selection, but the selection from the menu is available\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/czbajk?file=src%2Fexample%2Ftimepicker-datepicker-integration-example.html\nSteps to reproduce: \n1. Use FormControl\n2. Disable input\n3. U can change time\n\n\n### Expected Behavior\n\nLock time selector\n\n### Actual Behavior\n\nTime selection is available\n\n### Environment\n\n- Angular: 19.0.0 - 19.0.2\n- CDK/Material: latest\n- Browser(s): Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30134","RelatedDescription":"Open issue \"bug(Timepicker): Disabled not working in FormControl\" (#30134)"},{"Id":"2720316470","IsPullRequest":true,"CreatedAt":"2024-12-05T19:27:21","Actor":"crisbeto","Number":"30131","RawContent":null,"Title":"build: update to TypeScript 5.7","State":"closed","Body":"Updates the repo to the latest version of TypeScript.","Url":"https://github.com/angular/components/pull/30131","RelatedDescription":"Closed or merged PR \"build: update to TypeScript 5.7\" (#30131)"},{"Id":"2720654296","IsPullRequest":true,"CreatedAt":"2024-12-05T15:19:26","Actor":"josephperrott","Number":"30133","RawContent":null,"Title":"ci: update to latest version of dev-infra actions","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30133","RelatedDescription":"Closed or merged PR \"ci: update to latest version of dev-infra actions\" (#30133)"},{"Id":"2720353149","IsPullRequest":false,"CreatedAt":"2024-12-05T12:58:45","Actor":"keatkeat87","Number":"30132","RawContent":null,"Title":"bug(MatTooltip): body line-height will affect tooltip gap","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\napp.component.html\n\n`<button mat-button #matTooltip=\"matTooltip\" matTooltip=\"Info about the action\" style=\"background-color: pink;\">Action</button>`\n\nstyles.scss\n```\nbody {\n  line-height: 24px;\n}\n```\n\nThe problems:\nthere is a 1px gap between button and tooltip.\n![Image](https://github.com/user-attachments/assets/ba665f90-a94b-41f8-ac20-7916249ee868)\nif line-height 28px, the gap will become 2px.\n\n\n\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/github/keatkeat87/ng-mat-tooltips-gap-issue\nSteps to reproduce:\n1. ng serve --open\n2. hover to button\n\n\n### Expected Behavior\n\nno extra 1px gap.\n\n### Actual Behavior\n\nthere is a 1px extra gap\n\n### Environment\n\nAngular CLI: 19.0.3\nNode: 20.18.0\nPackage Manager: yarn 1.22.19\nOS: win32 x64\n\nAngular: 19.0.3\n... animations, cli, common, compiler, compiler-cli, core, forms\n... platform-browser, platform-browser-dynamic, router\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.3\n@angular-devkit/build-angular   19.0.3\n@angular-devkit/core            19.0.3\n@angular-devkit/schematics      19.0.3\n@angular/cdk                    19.0.2\n@angular/material               19.0.2\n@schematics/angular             19.0.3\nrxjs                            7.8.1\ntypescript                      5.6.3\nzone.js                         0.15.0","Url":"https://github.com/angular/components/issues/30132","RelatedDescription":"Open issue \"bug(MatTooltip): body line-height will affect tooltip gap\" (#30132)"},{"Id":"2712614827","IsPullRequest":true,"CreatedAt":"2024-12-05T12:53:16","Actor":"crisbeto","Number":"30119","RawContent":null,"Title":"fix(material/expansion): switch away from animations module","State":"closed","Body":"Reworks the expansion panel to animate purely with CSS, rather than going through the `@angular/animations` module. This simplifies the setup and allows us to resolve several long-standing bug reports.\r\n\r\nFixes #27946.\r\nFixes #22715.\r\nFixes #21434.\r\nFixes #20517.\r\nFixes #17177.\r\nFixes #16534.\r\nFixes #16503.\r\nFixes #14952.\r\nFixes #14759.\r\nFixes #14075.\r\nFixes #11765.","Url":"https://github.com/angular/components/pull/30119","RelatedDescription":"Closed or merged PR \"fix(material/expansion): switch away from animations module\" (#30119)"},{"Id":"2719800037","IsPullRequest":false,"CreatedAt":"2024-12-05T09:04:24","Actor":"ptu14","Number":"30130","RawContent":null,"Title":"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen the `@angular/cdk/menu` directive is applied to a scrollable element, it causes scroll behavior abnormalities. Clicking in the empty space within the scrollable area causes the content to unexpectedly scroll to the top. Additionally, general mouse scrolling behavior becomes erratic and unpredictable.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/gwxbpu?file=src%2Fexample%2Fcdk-menu-inline-example.css,src%2Fexample%2Fcdk-menu-inline-example.html\nSteps to reproduce:\n- [x] 1. Create a scrollable container with some content that exceeds the container height\n- [x] 2. Apply the @angular/cdk/menu directive to this container\n- [ ] 3. Try to scroll using the mouse:\n- [ ] 4. Click in the empty space within the scrollable area\n\nvideo:\nhttps://github.com/user-attachments/assets/1604a8f4-06b6-4bbf-809d-de0ecb2bb2f6\n\n\n### Expected Behavior\n\nClicking in empty space of the scrollbar should behave like natively, i.e. actually scroll down\n\n### Actual Behavior\n\nClicking in empty space within the scrollable area causes the content to immediately scroll to the top\n\n### Environment\n\n- Angular: 19.0.2\n- CDK/Material: 19.0.2\n- Browser(s): Chrome Version 131.0.6778.85 (Official Build) (arm64), Safari Version 18.1 (18619.2.8.111.5, 18619), Probably all browsers\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS, probably all systems\n","Url":"https://github.com/angular/components/issues/30130","RelatedDescription":"Open issue \"bug(CDK menu): Menu directive breaks scrollbar scrolling behavior\" (#30130)"},{"Id":"2713492722","IsPullRequest":true,"CreatedAt":"2024-12-04T20:12:48","Actor":"kseamon","Number":"30120","RawContent":null,"Title":"feat(material-experimental/column-resize): Add support for \"lazy\" rat…","State":"closed","Body":"…her than live updating during resizing.\r\n\r\nFor complex tables, live resizing is laggy and difficult to use. Keeping the current behavior as default, but we may want to revisit that going forward.","Url":"https://github.com/angular/components/pull/30120","RelatedDescription":"Closed or merged PR \"feat(material-experimental/column-resize): Add support for \"lazy\" rat…\" (#30120)"},{"Id":"2718638817","IsPullRequest":true,"CreatedAt":"2024-12-04T19:49:11","Actor":"andrewseguin","Number":"30129","RawContent":null,"Title":"Bump version to \"v19.1.0-next.1\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30129","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.1.0-next.1\" with changelog.\" (#30129)"},{"Id":"2718548520","IsPullRequest":true,"CreatedAt":"2024-12-04T19:36:25","Actor":"andrewseguin","Number":"30128","RawContent":null,"Title":"docs: release notes for the v19.0.2 release","State":"closed","Body":"Cherry-picks the changelog from the \"19.0.x\" branch to the next branch (main).","Url":"https://github.com/angular/components/pull/30128","RelatedDescription":"Closed or merged PR \"docs: release notes for the v19.0.2 release\" (#30128)"},{"Id":"2718540835","IsPullRequest":true,"CreatedAt":"2024-12-04T18:49:20","Actor":"andrewseguin","Number":"30127","RawContent":null,"Title":"Bump version to \"v19.0.2\" with changelog.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/30127","RelatedDescription":"Closed or merged PR \"Bump version to \"v19.0.2\" with changelog.\" (#30127)"},{"Id":"2714304616","IsPullRequest":true,"CreatedAt":"2024-12-04T15:25:35","Actor":"crisbeto","Number":"30121","RawContent":null,"Title":"fix(material/tabs): ink bar not showing when same tab is re-selected","State":"closed","Body":"Fixes that if a tab is active, it gets cleared and the re-selected, the ink bar wasn't showing up.\r\n\r\nFixes #30036.","Url":"https://github.com/angular/components/pull/30121","RelatedDescription":"Closed or merged PR \"fix(material/tabs): ink bar not showing when same tab is re-selected\" (#30121)"},{"Id":"2716936456","IsPullRequest":true,"CreatedAt":"2024-12-04T13:25:52","Actor":"crisbeto","Number":"30126","RawContent":null,"Title":"fix(youtube-player): update to latest typings","State":"closed","Body":"Updates the YouTube player to the latest typings to account for a breaking change.","Url":"https://github.com/angular/components/pull/30126","RelatedDescription":"Closed or merged PR \"fix(youtube-player): update to latest typings\" (#30126)"},{"Id":"2716826551","IsPullRequest":false,"CreatedAt":"2024-12-04T07:50:16","Actor":"xylplm","Number":"30125","RawContent":null,"Title":"bug(COMPONENT): docs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\ndocs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated \n\n### Reproduction\n\nStackBlitz link: \nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nNew Example Method\n\n### Actual Behavior\n\n FlatTreeControl  is  deprecated \n\nFlat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n\n@deprecated\nUse one of levelAccessor or childrenAccessor instead. To be removed in a future version.\n\n@breaking-change — 21.0.0\n\n### Environment\n\n- Angular: 18\n- CDK/Material:18\n- Browser(s): edge\n- Operating System (e.g. Windows, macOS, Ubuntu): windows\n","Url":"https://github.com/angular/components/issues/30125","RelatedDescription":"Open issue \"bug(COMPONENT): docs components/tree/examples Tree with dynamic data  esample FlatTreeControl   deprecated\" (#30125)"},{"Id":"2716236072","IsPullRequest":false,"CreatedAt":"2024-12-03T23:48:14","Actor":"erikrestificar","Number":"30124","RawContent":null,"Title":"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMatPaginator should not be able to move to previous or next pages if disabled\n\nBreaking change: https://github.com/angular/components/pull/29379\n\n### Reproduction\n\n1) Go to [MatPaginator Demo](https://material.angular.io/components/paginator/examples)\n2) Select disabled\n3) Click next page button\n\n### Expected Behavior\n\nClicking next page should have no effect because its disabled\n\n### Actual Behavior\n\nUser is able to go to next page\n\n### Environment\n\nAny environment","Url":"https://github.com/angular/components/issues/30124","RelatedDescription":"Open issue \"bug(COMPONENT): MatPaginator should not be able to move to previous or next pages if disabled\" (#30124)"},{"Id":"2715554931","IsPullRequest":false,"CreatedAt":"2024-12-03T17:03:11","Actor":"Ktojan","Number":"30123","RawContent":null,"Title":"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version","State":"open","Body":"### Documentation Feedback\n\nJust found a bug on 19v due to the newly added tab Styling.\n\n**STR:**\n\n1. Open version 19.0.1. (or >19 in future)\n2. Go to any component's page --> Styling tab (e.g. https://material.angular.io/components/grid-list/styling )\n3. Toggle to any previous version of doc\n\nBUG: 404 error \"Page Not Found\" \n\nProposition: Implement switching to Overview Tab\n\n### Affected documentation page\n\nhttps://material.angular.io/components/grid-list/styling","Url":"https://github.com/angular/components/issues/30123","RelatedDescription":"Open issue \"docs-bug(COMPONENT): 404 when being on Styling tab and toggling to older version\" (#30123)"},{"Id":"2715312411","IsPullRequest":false,"CreatedAt":"2024-12-03T15:18:10","Actor":"marjoleinveenendaal","Number":"30122","RawContent":null,"Title":"docs-bug(Form Field): Section references deprecated object","State":"open","Body":"### Documentation Feedback\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol\n\nThis section references `mat-chip-list`, that has been deprecated since v17: https://v17.material.angular.io/guide/mdc-migration#chips\n\n### Affected documentation page\n\nhttps://material.angular.io/components/form-field/overview#error-mat-form-field-must-contain-a-matformfieldcontrol","Url":"https://github.com/angular/components/issues/30122","RelatedDescription":"Open issue \"docs-bug(Form Field): Section references deprecated object\" (#30122)"},{"Id":"2708941881","IsPullRequest":false,"CreatedAt":"2024-12-03T07:19:28","Actor":"xylplm","Number":"30111","RawContent":null,"Title":"bug(COMPONENT): cdkDragHandle not work in mat-table td","State":"closed","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nMy table rows can be dragged. But I don't want the entire row to trigger dragging. Use cdkDragHandle to specify a drag button on td to achieve row dragging.\nBut cdkDragHandle did not take effect, and now the entire row can still trigger dragging。\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/w368zz?file=src%2Fexample%2Ftable-basic-example.html\nSteps to reproduce:\n1. \n2.\n\n\n### Expected Behavior\n\nOnly buttons can be dragged, other positions in the row cannot be dragged\n\n### Actual Behavior\n\nBoth rows and buttons can trigger dragging\n\n### Environment\n\n- Angular:18/19\n- CDK/Material:18/19\n- Browser(s):edge\n- Operating System (e.g. Windows, macOS, Ubuntu):win11\n","Url":"https://github.com/angular/components/issues/30111","RelatedDescription":"Closed issue \"bug(COMPONENT): cdkDragHandle not work in mat-table td\" (#30111)"},{"Id":"2707299905","IsPullRequest":true,"CreatedAt":"2024-12-03T06:23:10","Actor":"andgdk","Number":"30109","RawContent":null,"Title":"docs: remove duplicated tabs example","State":"closed","Body":"This PR drops a duplicated example.\r\n\r\nThe tab-group-inverted-example is removed in favor of the identical tab-group-header-below example. Remaining consistent with the allowed inputs for `headerPosition` (`above || below`)","Url":"https://github.com/angular/components/pull/30109","RelatedDescription":"Closed or merged PR \"docs: remove duplicated tabs example\" (#30109)"},{"Id":"2711341115","IsPullRequest":false,"CreatedAt":"2024-12-02T18:20:39","Actor":"Raphyyy","Number":"30115","RawContent":null,"Title":"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19","State":"closed","Body":"### Command\n\nupdate\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n18\n\n### Description\n\nWhile performing the update migration from Angular Material v18 to v19 I am running through an error that I am not capable to debug : \n```\n> ng update @angular/material --from 18 --to 19 --migrate-only\nUsing package manager: npm\nCollecting installed dependencies...\nFound 97 dependencies.\n** Executing migrations of package '@angular/material' **\n\n❯ Updates Angular Material to v19.\n✖ Migration failed: <css input>:73:2: Unclosed string\n  See \"C:\\Users\\Raphael\\AppData\\Local\\Temp\\ng-ZlQfqb\\angular-errors.log\" for further details.\n```\n\nThe `angular-errors.log` file :\n```\n[error] CssSyntaxError: <css input>:73:2: Unclosed string\n    at Input.error (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:4080:20)\n    at unclosed (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6770:21)\n    at Object.nextToken (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6883:17)\n    at ScssParser.other (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5625:34)\n    at ScssParser.parse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5669:20)\n    at scssParse (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7199:14)\n    at new LazyResult (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:5952:20)\n    at Processor.process (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:6487:18)\n    at MatCoreMigration2.visitStylesheet (\\node_modules\\@angular\\material\\schematics\\ng-update\\index_bundled.js:7242:19)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:51\n    at Array.forEach (<anonymous>)\n    at \\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:130:36\n    at Array.forEach (<anonymous>)\n    at UpdateProject.migrate (\\node_modules\\@angular\\cdk\\schematics\\update-tool\\index.js:124:39)\n    at runMigrations (\\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:121:42)\n    at \\node_modules\\@angular\\cdk\\schematics\\ng-update\\devkit-migration-rule.js:84:17\n```\n\nI removed any sass deprecated usage\n\n### Minimal Reproduction\n\nng update @angular/material --from 18 --to 19 --migrate-only\n\n### Exception or Error\n\n```text\n\n```\n\n### Your Environment\n\n```text\nAngular CLI: 19.0.2\nNode: 22.11.0\nPackage Manager: npm 8.18.0\nOS: win32 x64\n\nAngular: 19.0.1\n... animations, cdk, common, compiler, compiler-cli, core, forms\n... language-service, localize, material\n... material-date-fns-adapter, platform-browser\n... platform-browser-dynamic, router, service-worker\n\nPackage                         Version\n---------------------------------------------------------\n@angular-devkit/architect       0.1900.2\n@angular-devkit/build-angular   19.0.2\n@angular-devkit/core            18.2.7\n@angular-devkit/schematics      19.0.2\n@angular/cli                    19.0.2\n@schematics/angular             19.0.2\nrxjs                            6.5.5\ntypescript                      5.5.4\nzone.js                         0.15.0\n```\n\n### Anything else relevant?\n\n`ng build` doesn't produce any error.","Url":"https://github.com/angular/components/issues/30115","RelatedDescription":"Closed issue \"\"✖ Migration failed: <css input>:73:2: Unclosed string\" While updating Angular Material v18 to v19\" (#30115)"},{"Id":"2711434029","IsPullRequest":true,"CreatedAt":"2024-12-02T18:20:37","Actor":"crisbeto","Number":"30116","RawContent":null,"Title":"mat.core migration fixes","State":"closed","Body":"Includes the following fixes for the `mat.core` migration:\r\n\r\n### fix(material/schematics): error if stylesheet contains syntax errors \r\nFixes that the `mat.core` migration was breaking the whole update process if a stylesheet has syntax errors.\r\n\r\n### fix(material/schematics): avoid parsing stylesheets that don't include Material\r\n\r\nAdds a check in the `mat.core` migration so that it avoids parsing stylesheets that don't contain `@angular/material` altogether. This both makes the schematic faster and avoids potential issues for stylesheets we don't care about.\r\n\r\nFixes #30115.","Url":"https://github.com/angular/components/pull/30116","RelatedDescription":"Closed or merged PR \"mat.core migration fixes\" (#30116)"},{"Id":"2711662962","IsPullRequest":true,"CreatedAt":"2024-12-02T12:53:08","Actor":"crisbeto","Number":"30117","RawContent":null,"Title":"build: run unit tests against newer version of iOS","State":"closed","Body":"Updates the unit tests to run against iOS 18 in an attempt to make them more stable.","Url":"https://github.com/angular/components/pull/30117","RelatedDescription":"Closed or merged PR \"build: run unit tests against newer version of iOS\" (#30117)"},{"Id":"2711770891","IsPullRequest":false,"CreatedAt":"2024-12-02T12:31:07","Actor":"VeroNemo","Number":"30118","RawContent":null,"Title":"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen applying custom density (via a custom CSS class) using Angular Material Theme API directly to Angular Material button (e.g., mat-flat-button, mat-stroked-button), the height is adjusted as expected. However, when the custom density context (the same CSS class as for mat-stroked-button etc) is applied directly to a button mat-icon-button, the size of it remains unchanged. The density changes are only applied if the mat-icon-button is wrapped in an element with the density class.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/sb1-41rfph?file=src%2Fapp%2Fapp.component.scss\nStackOverflow link: https://stackoverflow.com/questions/79227144/mat-icon-button-needs-to-be-wrapped-to-apply-density\n\nSteps to reproduce:\n1. Create css class:\n   `.ui-high-density {\n   @include mat.icon-button-density(-2);\n    }`\n\n2. Apply css class .ui-high-density to button:   \n   A. mat-flat-button\n     `<button mat-flat-button class=\"ui-high-density\">Some text</button>`\n   B. mat-icon-button\n     `<button mat-icon-button class=\"ui-high-density\">Some text</button>`\n\n### Expected Behavior\n\nThe size of height on both, mat-flat-button and mat-icon-button, will change.\n\n### Actual Behavior\n\nThe height change only on mat-flat-button and mat-icon-button stay the same. \n\nWhen I wrapped mat-icon-button into div with class ui-hight-density, the height of button changed.\n`<div class=\"ui-high-density\">`\n   `   <button mat-icon-button>`\n      `     <mat-icon>home</mat-icon>`\n   `   </button>`\n `</div>`\n\n### Environment\n\n- Angular: 18.2.11\n- CDK/Material: 18.2.13\n- Browser(s): Google Chrome\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Sonoma \n","Url":"https://github.com/angular/components/issues/30118","RelatedDescription":"Open issue \"bug(COMPONENT): mat-icon-button needs to be wrapped to apply density\" (#30118)"},{"Id":"2707589696","IsPullRequest":false,"CreatedAt":"2024-12-02T10:29:28","Actor":"Vagner8","Number":"30110","RawContent":null,"Title":"When switch to a mobile view the MatBottomSheetModule does not work correctly","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI happens only on the mobile view. \nWhen you clicked the edge of the MatBottomSheetModule  the whole MatBottomSheetModule is blinking.\n\n### Reproduction\n\nStackBlitz link: https://material.angular.io/components/bottom-sheet/overview\nSteps to reproduce:\n1.  Go to the link - https://material.angular.io/components/bottom-sheet/overview\n2. Switch to the mobile view\n3. Click at the edge of the MatBottomSheetModule like on the screen\n![Image](https://github.com/user-attachments/assets/0e669caa-b739-43d9-a2f1-d1561aefba4d)\n![Image](https://github.com/user-attachments/assets/ff3e1c45-6096-4f25-9347-0e2af56b2a29)\n\n\n\n\n### Expected Behavior\n\nthe MatBottomSheetModule does not blink\n\n### Actual Behavior\n\nthe MatBottomSheetModule is blinking\n\n### Environment\n\n- Angular: 18.2.11\n- CDK/Material: 18.2.14\n- Browser(s): Chrom\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows![Image](https://github.com/user-attachments/assets/dc315ea7-f608-4c1c-af7c-a32e4e24380d)\n\n","Url":"https://github.com/angular/components/issues/30110","RelatedDescription":"Closed issue \"When switch to a mobile view the MatBottomSheetModule does not work correctly\" (#30110)"},{"Id":"2711158118","IsPullRequest":false,"CreatedAt":"2024-12-02T10:25:31","Actor":"kai1992cool","Number":"30114","RawContent":null,"Title":"CALENDAR: start view month is not working","State":"closed","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/gmbffs-5g3jqc?file=src%2Fexample%2Fdate-range-picker-forms-example.html\nSteps to reproduce:\n1.  I have configured start view as month, but it is not showing month view\n\n\n### Expected Behavior\n\nthe month view should be displayed\n\n### Actual Behavior\n\nthe default view is only displayed for other views it is working, month has this problem.\n\n### Environment\n\n- Angular: ^19.0.0\n- CDK/Material:^19.0.0\n- Browser(s): Version 131.0.6778.86 (Official Build) (64-bit)\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\n","Url":"https://github.com/angular/components/issues/30114","RelatedDescription":"Closed issue \"CALENDAR: start view month is not working\" (#30114)"},{"Id":"2710403489","IsPullRequest":false,"CreatedAt":"2024-12-02T04:16:30","Actor":"bitrxjs","Number":"30113","RawContent":null,"Title":"docs-bug(COMPONENT): Provide a way to generate prebuild different combination of theme","State":"open","Body":"### Documentation Feedback\n\nWhen looking at dist folder for M3 theme following themes are prebuilt\n\n- indigo-pink\n- deeppurple-amber\n- pink-bluegrey\n- purple-green\n- azure-blue\n- rose-red\n- cyan-orange\n- magenta-violet\n\nprovide a different way to build a different combination. For eg.\n- pink-indigo\n\n\nDirectly using\n```\nhtml {\n  @include mat.theme((\n    color: (\n      primary: mat.$pink-palette,\n      tertiary: mat.$indigo-palette,\n      theme-type: light,\n    ),\n    typography: Roboto,\n    density: 0\n  ));\n}\n```\nbreak ui on some older mobile browser due light-dark css function and using the css in angular json provides more compatibility.\n \n\n\n### Affected documentation page\n\nhttps://material.angular.io/guide/theming","Url":"https://github.com/angular/components/issues/30113","RelatedDescription":"Open issue \"docs-bug(COMPONENT): Provide a way to generate prebuild different combination of theme\" (#30113)"},{"Id":"2710269976","IsPullRequest":false,"CreatedAt":"2024-12-02T02:55:52","Actor":"yvesguilherme","Number":"30112","RawContent":null,"Title":"bug(COMPONENT): Problem with mat-select in MFE: Options not displaying correctly inside cdk-overlay-container","State":"open","Body":"### Is this a regression?\n\n- [x] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n15\n\n### Description\n\nHey guys, how are you?\n\nI'm having an issue when using the mat-select component in an MFE (Micro Frontend). The MFE is loaded into a shell, which I called mfe-login.\n\nThe problem is that when selecting an item, the mat-options do not appear. They only show up when I scroll, and even then, the dropdown does not disappear properly.\n\nAs you can see in the video below, there's a white vertical bar at the top of the page, and I believe the issue is related to the cdk-overlay-container. Has anyone else faced this issue? If so, how did you fix it?\n\nI've been trying to resolve this for a few days now and even attempted adjusting the z-index, though I consider that a bad practice, and it still didn't work.\n\nAny help would be greatly appreciated!\n\nhttps://github.com/user-attachments/assets/78a9c3b5-cfbc-4f91-82b7-6eb2317f46ef\n\n\n### Reproduction\n\nUnfortunately, I am unable to create a StackBlitz reproduction of this issue due to the complexity and size of the current project. I'm not sure if StackBlitz would support all the dependencies and configurations I've used in this project. However, I can provide any additional details or code snippets to help the team reliably reproduce the issue.\n\n### Expected Behavior\n\nI expected the mat-select options to appear correctly when an item is selected. The dropdown should display the mat-options immediately without the need for scrolling, and the dropdown should close properly once an option is selected. There should be no unexpected visual artifacts, such as the white vertical bar at the top of the page.\n\n### Actual Behavior\n\nWhen selecting an item from the mat-select, the mat-options do not appear immediately. They only become visible after scrolling, and even then, the dropdown does not close properly. Additionally, a white vertical bar appears at the top of the page, which I believe is related to the cdk-overlay-container.\n\n### Environment\n\n- Angular: **18.2.0**\n- CDK/Material: **18.2.14**\n- Browser(s): \n   - **Brave** _Version 1.73.91 Chromium: 131.0.6778.85 (64-bit)_\n   - **Chrome** _Version 131.0.6778.85 (Official Build) (64-bit)_\n- Operating System (e.g. Windows, macOS, Ubuntu): **Pop!_OS 22.04 LTS**\n","Url":"https://github.com/angular/components/issues/30112","RelatedDescription":"Open issue \"bug(COMPONENT): Problem with mat-select in MFE: Options not displaying correctly inside cdk-overlay-container\" (#30112)"},{"Id":"2707259086","IsPullRequest":true,"CreatedAt":"2024-11-30T11:34:47","Actor":"Sepandard","Number":"30108","RawContent":null,"Title":"fix(material/theming): fix not found error in the guide duplicate theming styles document","State":"open","Body":"bring back the missing document\r\nresolves #30072\r\n","Url":"https://github.com/angular/components/pull/30108","RelatedDescription":"Open PR \"fix(material/theming): fix not found error in the guide duplicate theming styles document\" (#30108)"},{"Id":"2705545515","IsPullRequest":false,"CreatedAt":"2024-11-30T08:35:09","Actor":"KamranSohail619","Number":"30107","RawContent":null,"Title":"Yes, this behavior used to work in the previous version","State":"closed","Body":"","Url":"https://github.com/angular/components/issues/30107","RelatedDescription":"Closed issue \"Yes, this behavior used to work in the previous version\" (#30107)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-06T03:30:02.4770431Z","RunDurationInMilliseconds":1718}