{"Data":{"Angular-Issues":{"Issues":[{"Id":"1766516813","IsPullRequest":true,"CreatedAt":"2023-06-21T01:31:53","Actor":"angular-robot","Number":"50784","RawContent":null,"Title":"build: update io_bazel_rules_sass digest to e141d5a","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| io_bazel_rules_sass | http_archive | digest | `13ff55c` -> `e141d5a` |\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - At any time (no schedule defined), Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/50784","RelatedDescription":"Open PR \"build: update io_bazel_rules_sass digest to e141d5a\" (#50784)"},{"Id":"1764679592","IsPullRequest":false,"CreatedAt":"2023-06-20T20:31:33","Actor":"leo6104","Number":"50775","RawContent":null,"Title":"`withFetch` doesn't support json object as body with POST method api call","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncommon\r\n\r\n### Is this a regression?\r\n\r\nYes ( compared with XHR ) \r\n\r\n### Description\r\n\r\nWhen i request like this, \r\n\r\n```\r\nconst httpHeaders = new HttpHeaders();\r\nhttpHeaders.set('Content-Type', 'application/json');\r\nhttpHeaders.set('Accept', 'application/json'); \r\n\r\nconst httpParams = new HttpParams(); \r\nthis.http.request(\r\n  new HttpRequest<T>('POST', 'https://127.0.0.1/api', { payload: 'hello world' }, {\r\n      params: httpParams,\r\n      headers: httpHeaders,\r\n      responseType: 'json',\r\n   })\r\n)\r\n```\r\n\r\n`withFetch()` doesn't support Object and it just goes to '[object Object]' \r\n\r\n![image](https://github.com/angular/angular/assets/7777929/9e1ffbd3-a94f-4018-96d4-25442b23ffa3)\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker, youtube-player\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.2.0-next.0\r\n@angular/cli                    16.1.0\r\n@angular/material               16.2.0-next.0\r\n@nguniversal/builders           16.1.0-rc.0\r\n@nguniversal/common             16.1.0-rc.0\r\n@nguniversal/express-engine     16.1.0-rc.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, elements\r\n... forms, language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker, youtube-player\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.2.0-next.0\r\n@angular/cli                    16.1.0\r\n@angular/material               16.2.0-next.0\r\n@nguniversal/builders           16.1.0-rc.0\r\n@nguniversal/common             16.1.0-rc.0\r\n@nguniversal/express-engine     16.1.0-rc.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\n\r\n```\r\n\r\n### Anything else?\r\n\r\n\r\nhttps://github.com/angular/angular/blob/main/packages/common/http/src/fetch.ts#L224 \r\nHere is the root cause. \r\n\r\nIf i change the implementation like this, it solved.  \r\n```\r\n      body: req.serializeBody(),\r\n```\r\n\r\nIn XhrBackend, `serializeBody` convert its body to be serialized json string.\r\n\r\nhttps://github.com/angular/angular/blob/254023a03c3aaa26e2d01c02f9b9933b82fd971e/packages/common/http/src/request.ts#L295 \r\n","Url":"https://github.com/angular/angular/issues/50775","RelatedDescription":"Closed issue \"`withFetch` doesn't support json object as body with POST method api call\" (#50775)"},{"Id":"1764699619","IsPullRequest":true,"CreatedAt":"2023-06-20T20:31:32","Actor":"leo6104","Number":"50776","RawContent":null,"Title":"fix(http): use `serializeBody` to support JSON payload in FetchBackend","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: https://github.com/angular/angular/issues/50775 \r\n\r\n\r\n## What is the new behavior?\r\nit correctly serialize request body (same behavior with HttpXhrBackend)\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/50776","RelatedDescription":"Closed or merged PR \"fix(http): use `serializeBody` to support JSON payload in FetchBackend\" (#50776)"},{"Id":"1763649899","IsPullRequest":true,"CreatedAt":"2023-06-20T20:00:44","Actor":"devversion","Number":"50769","RawContent":null,"Title":"ci: update codeowners for benchpress","State":"closed","Body":"Pawel and myself have investigated benchpress for quite some time now (and made changes),\r\nand I believe we have the most up-to-date understanding in the team- so it would make sense\r\nto add us to the owners.","Url":"https://github.com/angular/angular/pull/50769","RelatedDescription":"Closed or merged PR \"ci: update codeowners for benchpress\" (#50769)"},{"Id":"1766051084","IsPullRequest":true,"CreatedAt":"2023-06-20T19:48:15","Actor":"simonhock","Number":"50783","RawContent":null,"Title":"docs(core): Improve injectors documentation","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nImprove [Dependency Injection](https://angular.io/guide/hierarchical-dependency-injection#providing-services-in-component) documentation.\r\n\r\nAdds some display of the injected value\r\nFixes Injected value annotations not corresponding to the _note_\r\nFixes a closing <#VIEW> tag\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nN/A","Url":"https://github.com/angular/angular/pull/50783","RelatedDescription":"Open PR \"docs(core): Improve injectors documentation\" (#50783)"},{"Id":"1765897178","IsPullRequest":false,"CreatedAt":"2023-06-20T18:37:42","Actor":"martinmcwhorter","Number":"50782","RawContent":null,"Title":"hgroup is a valid HTML5 element","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\ncore\r\n\r\n### Is this a regression?\r\n\r\nNo\r\n\r\n### Description\r\n\r\nIn the [original bug report](https://github.com/angular/angular/issues/38831) the rational for not supporting hgroup is that it has been removed from the W3C's definition of HTML5. The problem with that rational is that the WHATWG defines the HTML5 standard, not the W3C. \r\n\r\nIn the WHATWG definition, [hgroup](https://html.spec.whatwg.org/dev/sections.html#the-hgroup-element) is a valid HTML5 element. \r\n\r\nAs well as being part of the WHATWG official HTML5 standard, it is a living standard as can be seen in the MDN documentation as well as can-i-use browser support: \r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup\r\nhttps://caniuse.com/?search=hgroup\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\nhttps://stackblitz.com/edit/angular-ivy-vwcpfd?file=src/app/app.component.html\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\n'hgroup' is not a known element:\r\n1. If 'hgroup' is an Angular component, then verify that it is part of this module.\r\n2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_","Url":"https://github.com/angular/angular/issues/50782","RelatedDescription":"Closed issue \"hgroup is a valid HTML5 element\" (#50782)"},{"Id":"1765752881","IsPullRequest":true,"CreatedAt":"2023-06-20T16:31:01","Actor":"devversion","Number":"50781","RawContent":null,"Title":"build: replace legacy saucelabs infrastructure with bazel","State":"open","Body":"Replaces the legacy Saucelabs infrastructure with Bazel, so that we do not have two\r\ncompilation pipelines processing source files.\r\n\r\nThe legacy pipeline caused increased infrastructure complexity, and also made it non-trivial\r\nto work with generated files that are made available via Bazel. e.g. the locale files needed to\r\nbe manually put into the source tree to enable `tsc` to run for the legacy build.\r\n\r\nAdditionally, it was almost impossible to run the legacy saucelabs pipeline locally-\r\nmaking failures super frustrating. Note there was also no caching for the legacy job, so we\r\nstarted browsers unnecessarily, or drained CircleCI usage.\r\n","Url":"https://github.com/angular/angular/pull/50781","RelatedDescription":"Open PR \"build: replace legacy saucelabs infrastructure with bazel\" (#50781)"},{"Id":"1765742588","IsPullRequest":true,"CreatedAt":"2023-06-20T16:23:40","Actor":"josephperrott","Number":"50780","RawContent":null,"Title":"build: update cross-repo angular dependencies ","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/50780","RelatedDescription":"Open PR \"build: update cross-repo angular dependencies \" (#50780)"},{"Id":"1765639221","IsPullRequest":true,"CreatedAt":"2023-06-20T16:04:56","Actor":"devversion","Number":"50779","RawContent":null,"Title":"[16.1.x]: build: update angular dev-infra and chromium","State":"closed","Body":"Patch port of https://github.com/angular/angular/pull/50772","Url":"https://github.com/angular/angular/pull/50779","RelatedDescription":"Closed or merged PR \"[16.1.x]: build: update angular dev-infra and chromium\" (#50779)"},{"Id":"1763901506","IsPullRequest":true,"CreatedAt":"2023-06-20T15:21:02","Actor":"devversion","Number":"50772","RawContent":null,"Title":"build: update angular dev-infra and chromium","State":"closed","Body":"Updates Angular dev-infra and Chromium. Fixed up version of https://github.com/angular/angular/pull/50111\r\n\r\n\r\nRequired a couple of fixes in the dev-infra repository, along with identifying https://github.com/angular/angular-cli/issues/25405 in the router unit tests","Url":"https://github.com/angular/angular/pull/50772","RelatedDescription":"Closed or merged PR \"build: update angular dev-infra and chromium\" (#50772)"},{"Id":"1764647144","IsPullRequest":true,"CreatedAt":"2023-06-20T12:56:14","Actor":"angular-robot","Number":"50774","RawContent":null,"Title":"build: update github/codeql-action action to v2.20.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | minor | `v2.3.6` -> `v2.20.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.20.0`](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm on monday,before 04:00am on tuesday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular/pull/50774","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.20.0\" (#50774)"},{"Id":"1765255399","IsPullRequest":false,"CreatedAt":"2023-06-20T12:26:31","Actor":"Muxriddin8687","Number":"50778","RawContent":null,"Title":"Mainbar's error","State":"closed","Body":"### Describe the problem that you experienced\n\nwhen opened menu item bugged another menu item\r\n![Снимок экрана (48)](https://github.com/angular/angular/assets/58684555/383e473e-640c-4c85-9a97-dc1c2b36a547)\r\n\n\n### Enter the URL of the topic with the problem\n\nhttps://angular.io/guide/singleton-services\n\n### Describe what you were looking for in the documentation\n\n_No response_\n\n### Describe the actions that led you to experience the problem\n\n_No response_\n\n### Describe what you want to experience that would fix the problem\n\n_No response_\n\n### Add a screenshot if that helps illustrate the problem\n\n_No response_\n\n### If this problem caused an exception or error, please paste it here\n\n_No response_\n\n### If the problem is browser-specific, please specify the device, OS, browser, and version\n\n_No response_\n\n### Provide any additional information here in as much as detail as you can\n\n_No response_","Url":"https://github.com/angular/angular/issues/50778","RelatedDescription":"Closed issue \"Mainbar's error\" (#50778)"},{"Id":"1764931925","IsPullRequest":false,"CreatedAt":"2023-06-20T08:41:06","Actor":"kukjevov","Number":"50777","RawContent":null,"Title":"BUG: Angular 16.1.1 causing problem with babel during compilation","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli\n\n### Is this a regression?\n\nYes\n\n### Description\n\nAfter updating to angular 16.1.1 application will not compile anymore. Previous version 16.0.4 works just fine.\r\n\r\nMinimal reproduction for non working version\r\n`git clone https://github.com/kukjevov/ng-universal-demo`\r\n`cd ng-universal-demo`\r\n`git checkout 2.0`\r\n`npm install --legacy-peer-deps`\r\n`npm run build`\r\n\r\nMinimal reproduction for working version\r\n`git clone https://github.com/kukjevov/ng-universal-demo`\r\n`cd ng-universal-demo`\r\n`git checkout 1.0`\r\n`npm install --legacy-peer-deps`\r\n`npm run build`\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n```true\nERROR in ./node_modules/@anglr/notifications/es2020/src/components/notificationMessage/notificationMessage.component.js\r\nModule build failed (from ./node_modules/babel-loader/lib/index.js):\r\nError: D:\\git\\universal-demo\\node_modules\\@anglr\\notifications\\es2020\\src\\components\\notificationMessage\\notificationMessage.component.js: `column` must be greater than or equal to 0 (columns start at column 0)\r\n    at exports.originalPositionFor (D:\\git\\universal-demo\\node_modules\\@jridgewell\\trace-mapping\\dist\\trace-mapping.umd.js:402:23)\r\n    at SourceMap.mark (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\source-map.js:57:65)\r\n    at Buffer._mark (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:191:60)\r\n    at Buffer._appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:135:12)\r\n    at Buffer.appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:104:10)\r\n    at Generator._appendChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:205:15)\r\n    at Generator.tokenChar (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:126:10)\r\n    at Generator.rightParens (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:81:10)\r\n    at Generator.CallExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:196:8)\r\n    at Buffer.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:249:5)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:163:15)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ExpressionStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:227:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printSequence (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:476:10)\r\n    at Generator.BlockStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\base.js:51:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printAndIndentOnComments (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:423:10)\r\n    at Generator.IfStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\statements.js:52:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printSequence (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:476:10)\r\n    at Generator.BlockStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\base.js:51:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.FunctionExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\methods.js:109:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ObjectProperty (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\types.js:82:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printList (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:482:10)\r\n    at Generator.ObjectExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\types.js:49:10)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.printJoin (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:404:12)\r\n    at Generator.printList (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:482:10)\r\n    at Generator.CallExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:195:8)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:159:7)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.AssignmentExpression (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:252:8)\r\n    at Buffer.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\buffer.js:249:5)\r\n    at Generator.exactSource (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:163:15)\r\n    at Generator.print (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\printer.js:333:10)\r\n    at Generator.ExpressionStatement (D:\\git\\universal-demo\\node_modules\\@babel\\generator\\lib\\generators\\expressions.js:227:8)\r\n @ ./node_modules/@anglr/notifications/es2020/src/index.js 4:0-79 4:0-79\r\n @ ./app/boot/app.component.ts 27:0-43 179:90-121\r\n @ ./app/boot/browser-app.module.ts 6:0-47 16:14-26\r\n @ ./app/main.browser.bootstrap.ts 11:0-61 16:45-61\r\n @ ./app/main.browser.ts 11:10-4\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular: 16.1.1\r\nNode: v16.15.0\r\nnpm: 8.19.4\r\nWindows: 10.0.19045\n```\n\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50777","RelatedDescription":"Open issue \"BUG: Angular 16.1.1 causing problem with babel during compilation\" (#50777)"},{"Id":"1764142679","IsPullRequest":false,"CreatedAt":"2023-06-19T19:58:25","Actor":"moniuch","Number":"50773","RawContent":null,"Title":"Add convenience methods to eliminate control getters","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\r\n\r\nforms\r\n\r\n### Description\r\n\r\nOftentimes when working with reactive forms, we need to create control getters in order to be able to get a reference to `AbstractControl` with a coercion to a more specific type:\r\n\r\n```ts\r\nget myArrayCtrl(){\r\n  return this.form.get('path.to.control') as FormArray\r\n}\r\n```\r\n\r\n```html\r\n<div *ngFor=\"let control of myArrayCtrl.controls; let i = index\">\r\n...\r\n</div>\r\n```\r\n\r\nThis happens usually when working with FormArrays, but also when you need a`[formGroup]` in order to be able to use `formControlName` in `ng-template` (Error: NG01050: formControlName must be used with a parent formGroup directive.). Unfortunately, in the template it doesn't seem possible to provide the coercion, so we need to go and create a getter.\r\n\r\nWith just one getter this might not be a big deal, but with complex forms every single getter contributes to unnecessary boilerplate code. Sometimes you need to use the reference in multiple places, so making a getter might actually make a lot of sense, but for just one instance creating a getter feels superficial.\r\n\r\n### Proposed solution\r\n\r\nTherefore, I would propose (assuming that this is feasible at all) that reactive forms provide a collection of convenience methods `getFormGroup | getFormArray | getFormControl | getFormRecord` which internally would do the necessary coercion and **could be used directly within templates**:\r\n\r\n```html\r\n<ng-template [formGroup]=\"form.getFormGroup('path.to.form.group')\">\r\n...\r\n</ng-template>\r\n\r\n<div *ngFor=\"let control of form.getFormArray('my.array').controls; let i = index\">\r\n...\r\n</div>\r\n```\r\n\r\n(or `getAsFormGroup | ...` etc)\r\n\r\nThis would eliminate the getters and slim our code a bit.\r\n\r\n### Alternatives considered\r\n\r\nLet's make the alternative obsolete.","Url":"https://github.com/angular/angular/issues/50773","RelatedDescription":"Open issue \"Add convenience methods to eliminate control getters\" (#50773)"},{"Id":"1763834124","IsPullRequest":true,"CreatedAt":"2023-06-19T16:09:51","Actor":"pkozlowski-opensource","Number":"50771","RawContent":null,"Title":"feat(benchpress): report gc and render time spent in script","State":"open","Body":"GC and render events can happen _while_ running scripts as well as outside of the script blocks. The new metric entries capture both the gc and render time happening in the scrip blocks.\r\n","Url":"https://github.com/angular/angular/pull/50771","RelatedDescription":"Open PR \"feat(benchpress): report gc and render time spent in script\" (#50771)"},{"Id":"1763776430","IsPullRequest":false,"CreatedAt":"2023-06-19T15:49:59","Actor":"keatkeat87","Number":"50770","RawContent":null,"Title":"Support Flexible @Input Required on Directive composition API","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\ncore\n\n### Description\n\nlet's say we have a simple directive that has a required input property 'color'\r\n```\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appHighlightOnHover]',\r\n  standalone: true,\r\n})\r\nexport class HighlightOnHoverDirective {\r\n  @Input({ required: true })\r\n  color!: string;\r\n}\r\n```\r\n\r\nwe want to use it as Host Directives in a component\r\n```\r\n@Component({\r\n  selector: 'app-my-h1',\r\n  standalone: true,\r\n  imports: [CommonModule, HighlightOnHoverDirective],\r\n  templateUrl: './my-h1.component.html',\r\n  styleUrls: ['./my-h1.component.scss'],\r\n  hostDirectives: [\r\n    {\r\n      directive: HighlightOnHoverDirective,\r\n    },\r\n  ],\r\n})\r\nexport class MyH1Component {\r\n   \r\n}\r\n```\r\nboom! it forces us to expose it.\r\n![image](https://github.com/angular/angular/assets/8691013/447988f4-3df3-423c-b6e2-33aee44f1654)\r\nbut...why? \r\nand we don't want to expose it, we do set up internally as below\r\n```\r\nexport class MyH1Component implements OnInit {\r\n  constructor() {\r\n    inject(HighlightOnHoverDirective).color = 'red'; \r\n  }\r\n\r\n  private highlightOnHoverDir = inject(HighlightOnHoverDirective);\r\n  ngOnInit(): void {\r\n    this.highlightOnHoverDir.color = 'red';\r\n  }\r\n}\r\n```\r\n\n\n### Proposed solution\n\ncurrently, I don't have any idea. Because both are new things. \n\n### Alternatives considered\n\nI will love to join to further discuss when someone give me a direction.","Url":"https://github.com/angular/angular/issues/50770","RelatedDescription":"Closed issue \"Support Flexible @Input Required on Directive composition API\" (#50770)"},{"Id":"1763487112","IsPullRequest":true,"CreatedAt":"2023-06-19T13:55:43","Actor":"devversion","Number":"50766","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"test","Url":"https://github.com/angular/angular/pull/50766","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50766)"},{"Id":"1763535019","IsPullRequest":true,"CreatedAt":"2023-06-19T13:38:07","Actor":"devversion","Number":"50768","RawContent":null,"Title":"build: resolve benchmark compare ref from upstream if rev-parse fails","State":"closed","Body":"`rev-parse` returns the original ref name in stdout, even if it wasn't able to resolve the reference. This was preventing the upstream resolution from never happening- causing `main` to be never resolved to the actual SHA.","Url":"https://github.com/angular/angular/pull/50768","RelatedDescription":"Closed or merged PR \"build: resolve benchmark compare ref from upstream if rev-parse fails\" (#50768)"},{"Id":"1763496635","IsPullRequest":true,"CreatedAt":"2023-06-19T13:04:08","Actor":"devversion","Number":"50767","RawContent":null,"Title":"build: fix benchmark sha resolution breaking when compare ref is abbreviated","State":"closed","Body":"When we fetch e.g. `main`, the branch name will not be available locally, and `rev-parse`\r\nwill fail later. We can make the logic more safe by just using `FETCH_HEAD` then.\r\n","Url":"https://github.com/angular/angular/pull/50767","RelatedDescription":"Closed or merged PR \"build: fix benchmark sha resolution breaking when compare ref is abbreviated\" (#50767)"},{"Id":"1763460654","IsPullRequest":true,"CreatedAt":"2023-06-19T12:55:00","Actor":"devversion","Number":"50764","RawContent":null,"Title":"build: resolve benchmark compare SHA from PR branch or upstream remote","State":"closed","Body":"If we try to resolve the benchmark compare ref (which may be just `main`), we are just looking inside the PR branch- but that may not include the `main` SHA. i.e. it's possible to run a comparison where the PR is slightly behind of the `main` branch, or a comparison commit from a different branch is used.\r\n\r\nWe fix this/ and simplify the logic by resolving the SHAs directly in the TypeScript code, instead of relying on the rather brittle Bash.\r\n\r\nNote that current solution still works, but we sometimes may not be able to resolve to an actual SHA- causing issues as in 864bd72cb22bb87f83284959297ab3734230fa91","Url":"https://github.com/angular/angular/pull/50764","RelatedDescription":"Closed or merged PR \"build: resolve benchmark compare SHA from PR branch or upstream remote\" (#50764)"},{"Id":"1763474046","IsPullRequest":false,"CreatedAt":"2023-06-19T12:48:27","Actor":"hebaibrahim76","Number":"50765","RawContent":null,"Title":"Hydration is not being applied in my angular project","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\n\nplatform-browser\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI created a new ssr angular project that uses angular version 16, here is the repo to my project https://github.com/hebaibrahim76/my-angular-ssr-project\r\n\r\nI added provideClientHydration() in my providers in app.module.ts,  but no console related to hydration showed up\r\n\r\nAny ideas on why hydration is not working?\n\n### Please provide a link to a minimal reproduction of the bug\n\n_No response_\n\n### Please provide the exception or error you saw\n\n_No response_\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n_No response_\n\n### Anything else?\n\n_No response_","Url":"https://github.com/angular/angular/issues/50765","RelatedDescription":"Open issue \"Hydration is not being applied in my angular project\" (#50765)"},{"Id":"1763411439","IsPullRequest":true,"CreatedAt":"2023-06-19T12:20:48","Actor":"devversion","Number":"50763","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"Test","Url":"https://github.com/angular/angular/pull/50763","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50763)"},{"Id":"1763387133","IsPullRequest":true,"CreatedAt":"2023-06-19T12:10:32","Actor":"devversion","Number":"50762","RawContent":null,"Title":"Follow-up improvements to benchmark setup","State":"closed","Body":"See individual commits","Url":"https://github.com/angular/angular/pull/50762","RelatedDescription":"Closed or merged PR \"Follow-up improvements to benchmark setup\" (#50762)"},{"Id":"1763259850","IsPullRequest":true,"CreatedAt":"2023-06-19T11:16:02","Actor":"devversion","Number":"50759","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/50759","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50759)"},{"Id":"1763273148","IsPullRequest":false,"CreatedAt":"2023-06-19T11:00:26","Actor":"krismadden","Number":"50761","RawContent":null,"Title":"\\","State":"closed","Body":"","Url":"https://github.com/angular/angular/issues/50761","RelatedDescription":"Closed issue \"\\\" (#50761)"},{"Id":"1763272034","IsPullRequest":true,"CreatedAt":"2023-06-19T10:49:59","Actor":"pkozlowski-opensource","Number":"50760","RawContent":null,"Title":"fix(benchpress): correctly report memory usage numbers","State":"open","Body":"This PR fixes GC memory numbers reported by benchpress, where previously reported amount was always 0.\r\n\r\n## The problem\r\n\r\nTo understand the fix we need to look into all the layers of the benchpress data processing from numbers reported by a browser, all the way up to the UI. Generally speaking there are 3 \"interesting\" layers involved:\r\n* a browser\r\n* a webdriver extension\r\n* perflog metrics processing inside benchpress\r\n\r\nLet's look at the GC memory numbers and data structures at each layer.\r\n\r\nFirstly, the browser is going to report an event similar to:\r\n\r\n```json\r\n{\r\n    \"args\": {\r\n      \"type\": \"finalize incremental marking via stack guard\",\r\n      \"usedHeapSizeAfter\": 19686548,\r\n      \"usedHeapSizeBefore\": 23869760\r\n    },\r\n    \"cat\": \"devtools.timeline,v8\",\r\n    \"dur\": 2250,\r\n    \"name\": \"MajorGC\",\r\n    \"ph\": \"X\",\r\n    \"pid\": 89342,\r\n    \"tdur\": 2090,\r\n    \"tid\": 259,\r\n    \"ts\": 367056011625,\r\n    \"tts\": 239430\r\n  },\r\n```\r\n\r\nWithout going into the details, we can see that a GC event reports duration and before / after heap sizes (`usedHeapSizeBefore`, `usedHeapSizeAfter`). It seems like at this point we've got all the necessary information to report in the UI.\r\n\r\nThe data reported by the browser are then [normalized](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/webdriver/chrome_driver_extension.ts#L149-L162) to the `PerfLogEvent` data structure and the normalization process would produce:\r\n\r\n```javascript\r\n {\r\n    pid: 89342,\r\n    ph: 'X',\r\n    cat: 'timeline',\r\n    ts: 367056011.625,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n```\r\n\r\n[This is the source of the bug](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/webdriver/chrome_driver_extension.ts#L149-L162) as we are **loosing information** (notice that we only capture `usedHeapSizeAfter` !).\r\n\r\nThe final transformation step [takes place in the metrics processing](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/metric/perflog_metric.ts#L186-L196) where the `X` event is split into a pair of begin / end events with the timestamp of the end event update to account for the duration:\r\n\r\n```javascript\r\n{\r\n    pid: 89342,\r\n    ph: 'B',\r\n    cat: 'timeline',\r\n    ts: 367056011.625,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n{\r\n    pid: 89342,\r\n    ph: 'E',\r\n    cat: 'timeline',\r\n    ts: 367056013.875,\r\n    dur: 2.25,\r\n    name: 'gc',\r\n    args: { majorGc: true, usedHeapSize: 19686548 }\r\n  },\r\n```\r\n\r\nNotice that we are still loosing information here - one events was just split into a pair of events but each item in this pair only contains `usedHeapSize`.\r\n\r\nGiven this data the GC reporting logic can only calculate 0 as [the logic](https://github.com/angular/angular/blob/ac13b650743f4b8e5a4199eebf001f77d33ca401/packages/benchpress/src/metric/perflog_metric.ts#L347-L348) looks like follows:\r\n\r\n```typescript\r\nconst amount =\r\n                (startEvent['args']!['usedHeapSize']! - event['args']!['usedHeapSize']!) / 1000;\r\n```\r\n\r\n## The fix\r\n\r\nThe fix sketched in this PR adds a new `gcAmount` filed to the `PerfLogEvent` data structure and populates this data structure in the `ChromeDriverExtension`. \r\n\r\nThis approach works only for Chrome, obviously. Open questions:\r\n* what about other browsers?\r\n* what about the Chrome version update - is the latest version of Chrome producing the same events?","Url":"https://github.com/angular/angular/pull/50760","RelatedDescription":"Open PR \"fix(benchpress): correctly report memory usage numbers\" (#50760)"},{"Id":"1763185793","IsPullRequest":true,"CreatedAt":"2023-06-19T10:41:06","Actor":"devversion","Number":"50758","RawContent":null,"Title":"ci: fix benchmark compare to work with fork pull requests","State":"closed","Body":"The checkout action always assumes the main repository, but the branch name/SHA of the\r\npull request will be from a fork.\r\n\r\nWe fix this by using an updated action that exposes the branch repo owner and name, so that\r\nwe can check out the actual PR branch/SHA.\r\n\r\nAlso commits some lock file changes that seem to be necessary on `main`\r\n","Url":"https://github.com/angular/angular/pull/50758","RelatedDescription":"Closed or merged PR \"ci: fix benchmark compare to work with fork pull requests\" (#50758)"},{"Id":"1763018567","IsPullRequest":false,"CreatedAt":"2023-06-19T08:25:50","Actor":"MikaStark","Number":"50757","RawContent":null,"Title":"Migrate from constructor-based dependency injection to inject() function","State":"open","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\nupgrade\n\n### Description\n\nHi Angular team :)\r\n\r\nFirst of all, thanks for the hard work and the wonderful new features (special mentions to signals and input-route binding).\r\n\r\nTaking from what was said in the last [Building Games and Q/A](https://www.youtube.com/watch?v=ZR_r1H8-Y_E&t=3370s), I think it could be very great to add a schematics to migrate from constructor-based dependency injection to the new `inject()` function.\r\n\r\nAngular team already did something similar in v16 for Standalone APIs and I personally really appreciated what was done.  \n\n### Proposed solution\n\nAdd some clarification on the official documentation to expose advantages of `inject()` function usage\n\n### Alternatives considered\n\nAdd a schematics to simplify migration from constructor-based injection.","Url":"https://github.com/angular/angular/issues/50757","RelatedDescription":"Open issue \"Migrate from constructor-based dependency injection to inject() function\" (#50757)"},{"Id":"1762820746","IsPullRequest":false,"CreatedAt":"2023-06-19T06:11:46","Actor":"JohnnyDevNull","Number":"50756","RawContent":null,"Title":"zone.js update from 0.13.0 to 0.13.1 regression","State":"open","Body":"### Which @angular/* package(s) are the source of the bug?\r\n\r\nzone.js\r\n\r\n### Is this a regression?\r\n\r\nYes\r\n\r\n### Description\r\n\r\nBefore Update to 0.13.1 all Unit-Tests where green in zone.js 0.13.0. After Update to 0.13.1 some Unit-Tests are failing with errors, which  seems not belonging to zone.js, but the changelog let's assuming that patching the node Promise API causes the error.\r\n\r\nThe problem is the mocking logic from jest, which can't `spyOn` some ways now:\r\n\r\ne.g.\r\n\r\n```\r\nimport * as utils from '@redngapps/shared/util';\r\n\r\n...\r\n\r\njest.spyOn(utils, 'sanitizeHtml').mockImplementation(value => value);\r\n```\r\nis failing now, errors see below.\r\n\r\n```\r\nimport * as arrayBufferUtils from '@redngapps/shared/util';\r\n\r\n...\r\n\r\njest.spyOn(arrayBufferUtils, 'generateRandomHexString').mockReturnValue('mock-state');\r\n```\r\nis failing now, errors see below.\r\n\r\nand all other kind of `spyOn` defined the mentioned way above are failing now\r\n\r\n\r\n\r\n### Please provide a link to a minimal reproduction of the bug\r\n\r\n_No response_\r\n\r\n### Please provide the exception or error you saw\r\n\r\n```true\r\nTypeError: Cannot redefine property: sanitizeHtml\r\nTypeError: Cannot redefine property: generateRandomHexString\r\nTypeError: Cannot redefine property: fetchEntity\r\nTypeError: Cannot redefine property: generateRandomUint8Array\r\n```\r\n\r\n\r\n### Please provide the environment you discovered this bug in (run `ng version`)\r\n\r\n```true\r\nNx Version:\r\n- Local: v15.9.4\r\n```\r\n\r\n```\r\n    \"@angular/animations\": \"15.2.9\",\r\n    \"@angular/cdk\": \"15.2.9\",\r\n    \"@angular/common\": \"15.2.9\",\r\n    \"@angular/compiler\": \"15.2.9\",\r\n    \"@angular/core\": \"15.2.9\",\r\n    \"@angular/forms\": \"15.2.9\",\r\n    \"@angular/localize\": \"15.2.9\",\r\n    \"@angular/material\": \"15.2.9\",\r\n    \"@angular/platform-browser\": \"15.2.9\",\r\n    \"@angular/platform-browser-dynamic\": \"15.2.9\",\r\n    \"@angular/router\": \"15.2.9\",\r\n    \"zone.js\": \"0.13.1\"\r\n\r\n\r\n    \"@angular-devkit/architect\": \"0.1502.8\",\r\n    \"@angular-devkit/build-angular\": \"15.2.8\",\r\n    \"@angular-devkit/core\": \"15.2.8\",\r\n    \"@angular-devkit/schematics\": \"15.2.8\",\r\n    \"@angular-eslint/eslint-plugin\": \"15.2.1\",\r\n    \"@angular-eslint/eslint-plugin-template\": \"15.2.1\",\r\n    \"@angular-eslint/template-parser\": \"15.2.1\",\r\n    \"@angular/cli\": \"15.2.8\",\r\n    \"@angular/compiler-cli\": \"15.2.9\",\r\n    \"@angular/language-service\": \"15.2.9\",\r\n```\r\n","Url":"https://github.com/angular/angular/issues/50756","RelatedDescription":"Open issue \"zone.js update from 0.13.0 to 0.13.1 regression\" (#50756)"},{"Id":"1762431713","IsPullRequest":true,"CreatedAt":"2023-06-18T19:39:19","Actor":"devversion","Number":"50755","RawContent":null,"Title":"test: some change to trigger benchmark compare","State":"closed","Body":"Hey","Url":"https://github.com/angular/angular/pull/50755","RelatedDescription":"Closed or merged PR \"test: some change to trigger benchmark compare\" (#50755)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"1766082948","IsPullRequest":true,"CreatedAt":"2023-06-20T20:11:29","Actor":"clydin","Number":"25410","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): configure AOT compiler to skip class metadata in esbuild","State":"open","Body":"The esbuild plugin used within the esbuild-based browser application builder will not use the newly introduced internal `supportTestBed` AOT compiler option to disable the emit of class metadata functions within the output code. This removes the need to perform an additional transformation of the AOT compiler generated code to immediately remove the class metadata. The class metadata is only needed when using TestBed with AOT generated code but testing infrastructure within the CLI only performs unit-testing in JIT mode. In the future event that AOT enabled unit-testing is supported, this compiler option can be enabled for test related builds.\r\n","Url":"https://github.com/angular/angular-cli/pull/25410","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): configure AOT compiler to skip class metadata in esbuild\" (#25410)"},{"Id":"1766025836","IsPullRequest":true,"CreatedAt":"2023-06-20T19:31:01","Actor":"josephperrott","Number":"25409","RawContent":null,"Title":"ci: publish to builds repos for all managed branches (feature and releasable branches)","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/25409","RelatedDescription":"Open PR \"ci: publish to builds repos for all managed branches (feature and releasable branches)\" (#25409)"},{"Id":"1765789670","IsPullRequest":true,"CreatedAt":"2023-06-20T16:55:45","Actor":"clydin","Number":"25408","RawContent":null,"Title":"fix(@angular-devkit/build-angular): track postcss provided file depenencies in esbuild builder","State":"open","Body":"Postcss plugins may provide result messages that contain stylesheet dependencies that should be watched and should trigger a rebuild of the stylesheet being processed. These files will now be linked to the stylesheet and will allow the provided file dependencies to be watched and in-memory caches to be invalidated. Both the `dependency` and `dir-dependency` postcss messages are supported.","Url":"https://github.com/angular/angular-cli/pull/25408","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): track postcss provided file depenencies in esbuild builder\" (#25408)"},{"Id":"1762908147","IsPullRequest":true,"CreatedAt":"2023-06-20T16:19:53","Actor":"angular-robot","Number":"25401","RawContent":null,"Title":"build: lock file maintenance","State":"closed","Body":"This PR contains the following updates:\n\n| Update | Change |\n|---|---|\n| lockFileMaintenance | All locks refreshed |\n\n🔧 This Pull Request updates lock files to use the latest dependency versions.\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"before 4am on monday\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n👻 **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/angular/dev-infra) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25401","RelatedDescription":"Closed or merged PR \"build: lock file maintenance\" (#25401)"},{"Id":"1765410971","IsPullRequest":false,"CreatedAt":"2023-06-20T16:16:19","Actor":"devversion","Number":"25405","RawContent":null,"Title":"RxJS v6 testing breaking with ESBuild bundling (Jest testing)","State":"closed","Body":"### Command\n\ntest\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nmain\n\n### Description\n\nCurrently, using a builder that leverages ESBuild under the hood. e.g. the Jest builder- results in runtime breakages when **RxJS v6** is used together with the `TestScheduler` code.\r\n\r\n```ts\r\n  it('should work', () => {\r\n    new TestScheduler((a, b) => expect(a).toEqual(b)).run(({cold, expectObservable}) => {\r\n      expectObservable(cold('-t', {t: 'hi'})).toBe('-t', {t: 'hi'});\r\n    });\r\n  });\r\n```\r\n\r\n**Root cause**:\r\n\r\nRxJS v6 does not have exports conditions, so the `mainFields` will be respected. The ESBuild code path\r\ndoes not match the ES2015+ main fields, but instead matches just `module`- causing the ES5 distribution\r\nto be bundled. This ends up breaking at runtime. If the `es2015` main field would have matched- no error\r\nwould have occurred.\r\n\r\nThis seems to happen **because**, the ES5 distribution applies mixins for the `ColdObservable` class using a `@PURE` side-effect call, while in ES2015 it's not marked as side-effect free.\r\n\r\n**ES5 (breaking)**\r\n<img width=\"638\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/4987015/1747d2c8-b6ca-4992-b909-787f8006fe8d\">\r\n\r\n\r\n**ES2015**\r\n<img width=\"606\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/4987015/57e7c94f-a615-4288-9655-0045fff6f802\">\r\n\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nhttps://github.com/devversion/rxjs-v6-esbuild-cli-breaking\n\n### Exception or Error\n\n```text\n● AppComponent › should work\r\n\r\n    expect(received).toEqual(expected) // deep equality\r\n\r\n    - Expected  - 5\r\n    + Received  + 5\r\n\r\n      Array [\r\n        Object {\r\n    -     \"frame\": 1,\r\n    +     \"frame\": 0,\r\n          \"notification\": Notification2 {\r\n    -       \"error\": undefined,\r\n    -       \"hasValue\": true,\r\n    -       \"kind\": \"N\",\r\n    -       \"value\": \"hi\",\r\n    +       \"error\": [TypeError: observable.logSubscribedFrame is not a function],\r\n    +       \"hasValue\": false,\r\n    +       \"kind\": \"E\",\r\n    +       \"value\": undefined,\r\n          },\r\n        },\r\n      ]\r\n\r\n      at TestScheduler2.TestScheduler.run.cold.cold [as assertDeepEqual] (src/app/app.component.spec.ts:35:43)\r\n      at node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:122:23\r\n          at Array.filter (<anonymous>)\r\n      at TestScheduler2.flush (node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:120:43)\r\n      at TestScheduler2.run (node_modules/rxjs/_esm5/internal/testing/TestScheduler.js:346:18)\r\n      at src/app/app.component.spec.ts:35:55\r\n      at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:368:26)\r\n      at ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:273:39)\r\n      at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:367:52)\r\n      at _Zone.run (node_modules/zone.js/fesm2015/zone.js:129:43)\r\n      at Object.wrappedFunc (node_modules/zone.js/fesm2015/zone-testing.js:740:30)\r\n```\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 16.14.2\r\nPackage Manager: npm 8.19.2\r\nOS: linux x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            6.6.7\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\nPossible solutions:\r\n\r\n- For RxJS v6, we should add `es2015` as condition.\r\n- We should consider not optimizing when bundling for tests?","Url":"https://github.com/angular/angular-cli/issues/25405","RelatedDescription":"Closed issue \"RxJS v6 testing breaking with ESBuild bundling (Jest testing)\" (#25405)"},{"Id":"1765431425","IsPullRequest":true,"CreatedAt":"2023-06-20T16:16:18","Actor":"devversion","Number":"25406","RawContent":null,"Title":"fix(@angular-devkit/build-angular): experimental esbuild pipeline, add `es2015` to main fields for RxJS v6 compatibility","State":"closed","Body":"Currently, for RxJS v6, no conditions are available, and the ESBuild pipeline will select the\r\nES5 distribution based on the `module` main field. This is fine in most cases, but applications\r\ncould benefit from better optimization with the use of the ES2015 output + there are certain\r\ncode differences that currently would cause runtime breakages when e.g. `rxjs/testing` is used.\r\n\r\nSee: https://github.com/angular/angular-cli/issues/25405 for more details.\r\n\r\nFixes #25405.","Url":"https://github.com/angular/angular-cli/pull/25406","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): experimental esbuild pipeline, add `es2015` to main fields for RxJS v6 compatibility\" (#25406)"},{"Id":"1765638037","IsPullRequest":true,"CreatedAt":"2023-06-20T15:21:21","Actor":"clydin","Number":"25407","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): use direct fs caching for font inlining","State":"open","Body":"The `cacache` package was only minimally used within the font inlining post-build processing. The usage has now been replaced with direct filesystem access and key hashing to cache any font files. This not only lowers the overall dependency count but also provides a small performance improvement by removing the need to resolve, load, and evaluate additional JavaScript at build time.","Url":"https://github.com/angular/angular-cli/pull/25407","RelatedDescription":"Open PR \"refactor(@angular-devkit/build-angular): use direct fs caching for font inlining\" (#25407)"},{"Id":"1764890344","IsPullRequest":false,"CreatedAt":"2023-06-20T08:14:16","Actor":"wartab","Number":"25404","RawContent":null,"Title":"Runtime error with some projects since Angular CLI 16.1.0 when using esbuild.","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.6\n\n### Description\n\nWhen runnning `ng serve` and then opening the project in the browser, the application fails to load printing errors in console.\r\n\r\nThis only happens with Angular CLI 16.1.0 in combination with esbuild. When using Angular CLI 16.0.6 with esbuild or Angular CLI 16.1.0 without esbuild, this error does not happen.\n\n### Minimal Reproduction\n\nThe error is hard to reproduce, but I have an extract of our project in a Github repository where the error occurs. Unfortunately, I can't share it publicly, but can provide it privately if needed (I'm wartab in the Angular Discord if you need to contact me).\n\n### Exception or Error\n\n```text\ntemplate.html:26 NG0304: 'router-outlet' is not a known element (used in the '_a48' component template):\r\n1. If 'router-outlet' is an Angular component, then verify that it is a part of an @NgModule where this component is declared.\r\n2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\r\n   template.html:1 NG0303: Can't bind to 'ngIf' since it isn't a known property of 'ng-container' (used in the '_a48' component template).\r\n   If the 'ngIf' is an Angular control flow directive, please make sure that either the 'NgIf' directive or the 'CommonModule' is a part of an @NgModule where this component is declared.\r\n```\n```\n\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.4\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25404","RelatedDescription":"Open issue \"Runtime error with some projects since Angular CLI 16.1.0 when using esbuild.\" (#25404)"},{"Id":"1764853922","IsPullRequest":false,"CreatedAt":"2023-06-20T07:51:24","Actor":"zehavibarak","Number":"25403","RawContent":null,"Title":"Build error with library dependency","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.4\n\n### Description\n\nWe're developing a library package that is locally hosted in a test app.\r\nBuilding the library works. However, while running `build` on the app, we're getting:\r\n\r\n` Error: Module build failed (from ./node_modules/@angular-devkit/build-angular/src/tools/babel/webpack-loader.js):  `column` must be greater than or equal to 0 (columns start`\r\n\r\nThis is a regression from previous version.\n\n### Minimal Reproduction\n\nNot sure where the issue here.\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.6.6\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic\r\n... platform-server, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@nguniversal/express-engine     16.1.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\r\nwebpack                         5.87.0\n```\n\n\n### Anything else relevant?\n\nThanks","Url":"https://github.com/angular/angular-cli/issues/25403","RelatedDescription":"Open issue \"Build error with library dependency\" (#25403)"},{"Id":"1764552305","IsPullRequest":false,"CreatedAt":"2023-06-20T03:29:30","Actor":"sergey-morenets","Number":"25402","RawContent":null,"Title":"Data path \"\" must have required property 'project'.","State":"open","Body":"### Command\n\ngenerate\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nHi\r\n\r\nWe have two projects that use Angular and Angular CLI. After we've upgraded both projects to Angular 16.x we can't use schematics for one of the projects (second project is fine). \r\nWe tried to clear node_modules or cache folders but it didn't help.\r\n\r\n\r\n\r\n\n\n### Minimal Reproduction\n\nAny time we try to use schematics we always receive an error:\r\n\r\n`ng generate class Test`\n\n### Exception or Error\n\n```text\nSchematic input does not validate against the Schema: {\"name\":\"Test\",\"path\":\"src/app/model\"}\r\nErrors:\r\n\r\n  Data path \"\" must have required property 'project'.\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: yarn 3.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... google-maps, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25402","RelatedDescription":"Open issue \"Data path \"\" must have required property 'project'.\" (#25402)"},{"Id":"1762177012","IsPullRequest":false,"CreatedAt":"2023-06-18T08:19:21","Actor":"leon","Number":"25400","RawContent":null,"Title":"using tailwind with esbuild doesn't trigger reload of styles","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI setup a bare minimum angular project  using css (also tried scss but no different), and follow the guide here\r\nhttps://tailwindcss.com/docs/guides/angular\r\n\r\nusing webpack `ng serve` will correctly handle changes when changing any components class such as `class=\"bg-white text-blue\"`\r\n\r\nBut If I then switch to the new esbuild version by changing angular.json to `@angular-devkit/build-angular:browser-esbuild`\r\nThe browser reloads, but the tailwind css is not getting updated.\r\nIf I stop `ng serve` and start up again the changes are there.\r\n\r\n\r\nHas anyone else got esbuild and tailwind working well together?\r\n\n\n### Minimal Reproduction\n\n- pnpx @angular/cli new --routing --standalone --strict --style=css --view-encapsulation=None --package-manager=pnpm myapp\r\n- follow https://tailwindcss.com/docs/guides/angular\r\n- change angular.json to use `@angular-devkit/build-angular:browser-esbuild` for serve executor\r\n- change the app.component.html to contain some tailwind classes\r\n\r\nHere is a reproduction repo\r\nhttps://github.com/leon/bug-angular-esbuild-tailwind\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: pnpm 8.6.0\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25400","RelatedDescription":"Open issue \"using tailwind with esbuild doesn't trigger reload of styles\" (#25400)"},{"Id":"1761899271","IsPullRequest":false,"CreatedAt":"2023-06-17T15:38:17","Actor":"sir-babagee","Number":"25399","RawContent":null,"Title":"Cannot add @angular/pwa to my angular project","State":"open","Body":"### Command\r\n\r\nadd\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI'm trying to add @angular/pwa to my angular project but I keep running into this error.\r\n\r\n`× Unable to load package information from registry: The \"timeout\" argument must be of type number. Received type string ('6000000')`\r\n\r\nI've been looking and I can't seem to find anywhere where this error occurred. I would appreciate if a solution to this can be provided.\r\n\r\n### Minimal Reproduction\r\n\r\nCan't really say what caused the issue or how to reproduce as this project is pretty large and has been in the works for a while\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.7\r\nNode: 18.16.0\r\nPackage Manager: npm 9.7.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... core\r\n\r\nPackage                             Version\r\n-------------------------------------------------------------\r\n@angular-devkit/architect           0.1502.7\r\n@angular-devkit/build-angular       15.2.7\r\n@angular-devkit/core                16.1.0\r\n@angular-devkit/schematics          16.1.0\r\n@angular/animations                 15.2.8\r\n@angular/cdk                        15.2.8\r\n@angular/cli                        15.2.7\r\n@angular/common                     15.2.8\r\n@angular/compiler                   15.2.8\r\n@angular/compiler-cli               15.2.8\r\n@angular/fire                       7.5.0\r\n@angular/forms                      15.2.8\r\n@angular/material                   15.2.8\r\n@angular/platform-browser           15.2.8\r\n@angular/platform-browser-dynamic   15.2.8\r\n@angular/router                     15.2.8\r\n@schematics/angular                 16.1.0\r\nrxjs                                7.8.1\r\ntypescript                          4.8.4\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25399","RelatedDescription":"Open issue \"Cannot add @angular/pwa to my angular project\" (#25399)"},{"Id":"1761761356","IsPullRequest":false,"CreatedAt":"2023-06-17T11:25:54","Actor":"zygarios","Number":"25398","RawContent":null,"Title":"Add HMR support for esbuild","State":"closed","Body":"### Which @angular/* package(s) are relevant/related to the feature request?\n\n_No response_\n\n### Description\n\nI would like to have the option of using HMR when using esbuild:\r\n@angular-devkit/build-angular:browser-esbuild.\r\n\r\nCurrently, this is possible when using the classic approach, but esbuild is faster, and this functionality is highly anticipated by me.\n\n### Proposed solution\n\nAdd HMR support for ESbuild :)\n\n### Alternatives considered\n\nNo idea","Url":"https://github.com/angular/angular-cli/issues/25398","RelatedDescription":"Closed issue \"Add HMR support for esbuild\" (#25398)"},{"Id":"1761097072","IsPullRequest":true,"CreatedAt":"2023-06-16T18:08:41","Actor":"alan-agius4","Number":"25397","RawContent":null,"Title":"build: update critters to 0.19.0","State":"open","Body":"Update critters to the latest version.\r\n\r\nCloses #25388\r\n","Url":"https://github.com/angular/angular-cli/pull/25397","RelatedDescription":"Open PR \"build: update critters to 0.19.0\" (#25397)"},{"Id":"1760911123","IsPullRequest":true,"CreatedAt":"2023-06-16T16:28:58","Actor":"clydin","Number":"25396","RawContent":null,"Title":"refactor(@angular-devkit/build-angular): remove unneeded static block workaround","State":"closed","Body":"esbuild 0.18.2 contains a fix that removes the need for the workaround of disabling support for static class blocks.\r\nRelated issue: https://github.com/evanw/esbuild/issues/2950","Url":"https://github.com/angular/angular-cli/pull/25396","RelatedDescription":"Closed or merged PR \"refactor(@angular-devkit/build-angular): remove unneeded static block workaround\" (#25396)"},{"Id":"1760278216","IsPullRequest":true,"CreatedAt":"2023-06-16T16:05:22","Actor":"alan-agius4","Number":"25390","RawContent":null,"Title":"build: update build-tooling package and enable Node.js 18 tests","State":"closed","Body":"This commit updates the build-tooling package which contains fixes for RBE on Node.js 18. It also enables the Node.js 18 test suit.","Url":"https://github.com/angular/angular-cli/pull/25390","RelatedDescription":"Closed or merged PR \"build: update build-tooling package and enable Node.js 18 tests\" (#25390)"},{"Id":"1760482674","IsPullRequest":false,"CreatedAt":"2023-06-16T15:51:33","Actor":"LanderBeeuwsaert","Number":"25393","RawContent":null,"Title":"es-build starts to fail when upgrading from 16.0.5 to 16.1.0","State":"closed","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n16.0.5\n\n### Description\n\nes-build starts to fail when upgrading from 16.0.5 to 16.1.0\r\n\r\n<img width=\"1259\" alt=\"image\" src=\"https://github.com/angular/angular-cli/assets/1098243/b9130ad6-dca9-4c67-bc53-d5d018a54828\">\r\n\n\n### Minimal Reproduction\n\n---\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nPS C:\\lander\\devprojects\\acro-companion> ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 8.6.0\r\nOS: win32 x64\r\n\r\nAngular: 16.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\n\r\nPackage                              Version\r\n--------------------------------------------------------------\r\n@angular-devkit/architect            0.1601.0\r\n@angular-devkit/build-angular        16.1.0\r\n@angular-devkit/core                 16.1.0\r\n@angular-devkit/schematics           16.1.0\r\n@angular/cdk                         14.2.4\r\n@angular/fire                        7.6.1\r\n@angular/google-maps                 14.2.4\r\n@angular/material                    14.2.4\r\n@angular/material-date-fns-adapter   14.2.4\r\n@angular/youtube-player              14.2.4\r\n@bazel/typescript                    5.8.1\r\n@schematics/angular                  16.1.0\r\nrxjs                                 7.8.1\r\ntypescript                           5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25393","RelatedDescription":"Closed issue \"es-build starts to fail when upgrading from 16.0.5 to 16.1.0\" (#25393)"},{"Id":"1760839362","IsPullRequest":false,"CreatedAt":"2023-06-16T15:16:30","Actor":"atsjo","Number":"25395","RawContent":null,"Title":"esbuild ng serve not watching html and css files outside project root","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nThis is a follow-up to https://github.com/angular/angular-cli/issues/25011\r\n\r\n16.1 fixed watching ts files, but it still doesn't pick up changes in html and css files in library components. It picks up the change if first changing html, then a dummy write to the component ts file, but changes to the html/css doesn't trigger re-generation itself.\n\n### Minimal Reproduction\n\nhttps://github.com/angular/angular-cli/issues/25011\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nNode   : 18.16.0\r\n   OS     : win32 x64\r\n   pnpm   : 8.6.2\r\n   Hasher : Native\r\n   \r\n   nx                 : 16.3.2\r\n   @nx/js             : 16.3.2\r\n   @nx/jest           : 16.3.2\r\n   @nx/linter         : 16.3.2\r\n   @nx/workspace      : 16.3.2\r\n   @nx/angular        : 16.3.2\r\n   @nx/cypress        : 16.3.2\r\n   @nx/devkit         : 16.3.2\r\n   @nx/esbuild        : 16.3.2\r\n   @nx/eslint-plugin  : 16.3.2\r\n   @nrwl/tao          : 16.3.2\r\n   @nx/webpack        : 16.3.2\r\n   typescript         : 5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25395","RelatedDescription":"Open issue \"esbuild ng serve not watching html and css files outside project root\" (#25395)"},{"Id":"1760664647","IsPullRequest":true,"CreatedAt":"2023-06-16T14:20:28","Actor":"clydin","Number":"25394","RawContent":null,"Title":"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"","State":"closed","Body":"These changes are causing imported types to be incorrectly retained.\r\n\r\nThis reverts commit https://github.com/angular/angular-cli/commit/c462d9cb90377342980384c6bccb3ddfef533282.","Url":"https://github.com/angular/angular-cli/pull/25394","RelatedDescription":"Closed or merged PR \"Revert \"fix(@angular-devkit/build-angular): preemptively remove AOT metadata in esbuild builder\"\" (#25394)"},{"Id":"1760263416","IsPullRequest":true,"CreatedAt":"2023-06-16T14:14:07","Actor":"alan-agius4","Number":"25389","RawContent":null,"Title":"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/25379","Url":"https://github.com/angular/angular-cli/pull/25389","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): unpin and downgrade `browserslist`\" (#25389)"},{"Id":"1759341493","IsPullRequest":true,"CreatedAt":"2023-06-16T14:13:53","Actor":"clydin","Number":"25385","RawContent":null,"Title":"fix(@angular-devkit/build-angular): actually disable Vite prebundling file discovery","State":"closed","Body":"The `entries` option should be used instead of the `includes` option to disable the file entry based discovery for Vite's prebundling. This discovery is unneeded due to the built application files existing only in memory.","Url":"https://github.com/angular/angular-cli/pull/25385","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): actually disable Vite prebundling file discovery\" (#25385)"},{"Id":"1758052767","IsPullRequest":true,"CreatedAt":"2023-06-16T14:13:09","Actor":"angular-robot","Number":"25382","RawContent":null,"Title":"build: update dependency piscina to v4","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [piscina](https://togithub.com/piscinajs/piscina) | dependencies | major | [`3.2.0` -> `4.0.0`](https://renovatebot.com/diffs/npm/piscina/3.2.0/4.0.0) |\n| [piscina](https://togithub.com/piscinajs/piscina) | devDependencies | major | [`3.2.0` -> `4.0.0`](https://renovatebot.com/diffs/npm/piscina/3.2.0/4.0.0) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>piscinajs/piscina</summary>\n\n### [`v4.0.0`](https://togithub.com/piscinajs/piscina/releases/tag/v4.0.0)\n\n[Compare Source](https://togithub.com/piscinajs/piscina/compare/v3.2.0...v4.0.0)\n\n##### What's Changed\n\n##### Breaking Change\n\n-   Drop support to Node.js <=14\n\n##### Minor/Patch\n\n-   Add dependabot by [@&#8203;nicholas-l](https://togithub.com/nicholas-l) in [https://github.com/piscinajs/piscina/pull/162](https://togithub.com/piscinajs/piscina/pull/162)\n-   Add Node.js 17.x to the CI matrix by [@&#8203;jasnell](https://togithub.com/jasnell) in [https://github.com/piscinajs/piscina/pull/165](https://togithub.com/piscinajs/piscina/pull/165)\n-   feat: expose `maxThreads` and `minThreads` out of Piscina instance by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/149](https://togithub.com/piscinajs/piscina/pull/149)\n-   Add communication from worker to main thread by [@&#8203;Elyahou](https://togithub.com/Elyahou) in [https://github.com/piscinajs/piscina/pull/213](https://togithub.com/piscinajs/piscina/pull/213)\n-   Update README.md by [@&#8203;Prinzhorn](https://togithub.com/Prinzhorn) in [https://github.com/piscinajs/piscina/pull/308](https://togithub.com/piscinajs/piscina/pull/308)\n-   test: fix issue at new Node versions by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/350](https://togithub.com/piscinajs/piscina/pull/350)\n-   doc: update Node.js recommendation to v16+ by [@&#8203;RafaelGSS](https://togithub.com/RafaelGSS) in [https://github.com/piscinajs/piscina/pull/351](https://togithub.com/piscinajs/piscina/pull/351)\n-   chore: Update CI by [@&#8203;metcoder95](https://togithub.com/metcoder95) in [https://github.com/piscinajs/piscina/pull/349](https://togithub.com/piscinajs/piscina/pull/349)\n-   v4.0.0 by [@&#8203;RafaelGSS](https://togithub.com/RafaelGSS) in [https://github.com/piscinajs/piscina/pull/353](https://togithub.com/piscinajs/piscina/pull/353)\n\n**Full Changelog**: https://github.com/piscinajs/piscina/compare/v3.2.0...v4.0.0\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25382","RelatedDescription":"Closed or merged PR \"build: update dependency piscina to v4\" (#25382)"},{"Id":"1758052470","IsPullRequest":true,"CreatedAt":"2023-06-16T14:12:54","Actor":"angular-robot","Number":"25381","RawContent":null,"Title":"build: update github/codeql-action action to v2.20.0","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [github/codeql-action](https://togithub.com/github/codeql-action) | action | minor | `v2.3.6` -> `v2.20.0` |\n\n---\n\n### Release Notes\n\n<details>\n<summary>github/codeql-action</summary>\n\n### [`v2.20.0`](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n[Compare Source](https://togithub.com/github/codeql-action/compare/v2.3.6...v2.20.0)\n\n</details>\n\n---\n\n### Configuration\n\n📅 **Schedule**: Branch creation - \"after 10:00pm every weekday,before 4:00am every weekday,every weekend\" in timezone America/Tijuana, Automerge - At any time (no schedule defined).\n\n🚦 **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n🔕 **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/renovatebot/renovate).\n<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNS4xMTcuMSIsInVwZGF0ZWRJblZlciI6IjM1LjExNy4xIiwidGFyZ2V0QnJhbmNoIjoibWFpbiJ9-->\n","Url":"https://github.com/angular/angular-cli/pull/25381","RelatedDescription":"Closed or merged PR \"build: update github/codeql-action action to v2.20.0\" (#25381)"},{"Id":"1760429096","IsPullRequest":false,"CreatedAt":"2023-06-16T11:27:50","Actor":"gmfun","Number":"25392","RawContent":null,"Title":"esbuild dev server thowing error","State":"open","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0.1\n\n### Description\n\n`Uncaught SyntaxError: The requested module '/.angular/cache/16.1.0/vite/deps/@angular_core.js?v=73a37d0a' does not provide an export named 'Signal'`\r\n\r\nI am seeing the above error when running `ng serve` with esbuild\n\n### Minimal Reproduction\n\n- Create a new standalone app using nx (application should be inside apps directory)\r\n- Add `someSignal: Signal<any> = signal('123')` in `app.component.ts`\r\n- switch to esbuild\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cdk                    16.0.3\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.0.5\r\nng-packagr                      16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25392","RelatedDescription":"Open issue \"esbuild dev server thowing error\" (#25392)"},{"Id":"1760198864","IsPullRequest":false,"CreatedAt":"2023-06-16T08:44:32","Actor":"mbertuzzi","Number":"25388","RawContent":null,"Title":"v16.1 build escapes special characters in index.html","State":"open","Body":"### Command\n\nbuild\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\nv16.0\n\n### Description\n\nBuilding a project with some special characters in index.html (e.g. '$' or '&') makes them to be escaped in HTML format (&#x24; or &amp;)\r\n\r\n<img width=\"1335\" alt=\"immagine\" src=\"https://github.com/angular/angular-cli/assets/103991825/995f522e-87e7-4dfd-b1c0-7794f0407dd2\">\r\n\n\n### Minimal Reproduction\n\nCreate a new empty angular 16.1 project, change the title e.g. with ${title} in index.html and build it.\r\nIn the dist folder the index.html has the escaped string &#x24;{title} instead of the original string\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\nAngular CLI: 16.1.0\r\nNode: 18.15.0\r\nPackage Manager: npm 9.5.0\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25388","RelatedDescription":"Open issue \"v16.1 build escapes special characters in index.html\" (#25388)"},{"Id":"1759556293","IsPullRequest":false,"CreatedAt":"2023-06-15T21:13:39","Actor":"JSMike","Number":"25387","RawContent":null,"Title":"Blue Oak license in dependency tree is not OSI approved","State":"open","Body":"### Command\n\nnew\n\n### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nRecent changes to `glob` result in issues with licenses. `glob` now depends on `jackspeak` and `path-scurry` which are using the new `Blue Oak` license. The `Blue Oak` license is not approved by OSI. This is impacting my company's ability to pull in `@angular-devkit/build-angular@16` and `@angular/cli@15`, along with any other company that relies on OSI standards for legal.\r\n\r\nhttps://github.com/isaacs/path-scurry/issues/7\n\n### Minimal Reproduction\n\n`npx @angular/cli@latest new blueoak16 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls jackspeak\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak (master)\r\n$ npm ls path-scurry\r\nblueoak16@0.0.0 C:\\Users\\Mike\\dev\\blueoak16\r\n└─┬ @angular-devkit/build-angular@16.1.0\r\n  └─┬ cacache@17.1.3\r\n    └─┬ glob@10.2.7\r\n      └── path-scurry@1.9.2\r\n\r\nor:\r\n\r\n`npx @angular/cli@l15.2.4 new blueoak15 --interactive=false`\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls jackspeak\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── jackspeak@2.2.1\r\n\r\n\r\nMike@DESKTOP ~/dev/blueoak15 (master)\r\n$ npm ls path-scurry\r\nblueoak15@0.0.0 C:\\Users\\Mike\\dev\\blueoak15\r\n└─┬ @angular/cli@15.2.8\r\n  └─┬ pacote@15.1.0\r\n    └─┬ read-package-json@6.0.4\r\n      └─┬ glob@10.2.7\r\n        └── path-scurry@1.9.2\n\n### Exception or Error\n\n_No response_\n\n### Your Environment\n\n```text\n_                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: npm 9.5.1\r\nOS: win32 x64\r\n\r\nAngular: 16.1.1\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@angular/cli                    16.1.0\r\n@schematics/angular             16.1.0\r\nrxjs                            7.8.1\r\ntypescript                      5.1.3\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25387","RelatedDescription":"Open issue \"Blue Oak license in dependency tree is not OSI approved\" (#25387)"},{"Id":"1759490305","IsPullRequest":false,"CreatedAt":"2023-06-15T20:34:31","Actor":"zip-fa","Number":"25386","RawContent":null,"Title":"Dev server crashing with &:host in scss","State":"closed","Body":"### Command\n\nserve\n\n### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nAccidentally added & before :host could lead to devserver crash\n\n### Minimal Reproduction\n\nThese styles crashed my dev-server:\r\n\r\n```\r\n&:host {\r\n  position: relative;\r\n  display: block;\r\n}\r\n```\n\n### Exception or Error\n\n```text\nnode:internal/event_target:1037\r\n  process.nextTick(() => { throw err; });\r\n                           ^\r\nTypeError [Error]: Cannot read properties of undefined (reading 'column')\r\n    at convertSourceSpan (/Users/name/Documents/project/node_modules/@angular-devkit/build-angular/src/sass/worker.js:146:30)\r\n    at MessagePort.<anonymous> (/Users/name/Documents/project/node_modules/@angular-devkit/build-angular/src/sass/worker.js:111:27)\r\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:762:20)\r\n    at exports.emitMessage (node:internal/per_context/messageport:23:28)\r\nEmitted 'error' event on Worker instance at:\r\n    at [kOnErrorMessage] (node:internal/worker:326:10)\r\n    at [kOnMessage] (node:internal/worker:337:37)\r\n    at MessagePort.<anonymous> (node:internal/worker:232:57)\r\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:762:20)\r\n    at exports.emitMessage (node:internal/per_context/messageport:23:28)\r\n\r\nNode.js v20.3.0\n```\n\n\n### Your Environment\n\n```text\nAngular CLI: 16.0.1\r\nNode: 20.3.0 (Unsupported)\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 16.1.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... localize, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1600.1\r\n@angular-devkit/build-angular   16.0.1\r\n@angular-devkit/core            16.0.1\r\n@angular-devkit/schematics      16.0.1\r\n@angular/cdk                    16.0.1\r\n@angular/cli                    16.0.1\r\n@angular/material               16.0.1\r\n@nguniversal/builders           16.0.1\r\n@nguniversal/express-engine     16.0.1\r\n@schematics/angular             16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\n```\n\n\n### Anything else relevant?\n\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25386","RelatedDescription":"Closed issue \"Dev server crashing with &:host in scss\" (#25386)"},{"Id":"1758637942","IsPullRequest":true,"CreatedAt":"2023-06-15T11:37:25","Actor":"alan-agius4","Number":"25384","RawContent":null,"Title":"feat(@angular-devkit/build-angular): add initial application builder implementation","State":"open","Body":"\r\nThis commits add the initial application builder schema and build configuration and refactors several files.\r\n","Url":"https://github.com/angular/angular-cli/pull/25384","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): add initial application builder implementation\" (#25384)"},{"Id":"1758452812","IsPullRequest":false,"CreatedAt":"2023-06-15T11:09:20","Actor":"edimitchel","Number":"25383","RawContent":null,"Title":"Vite prebundling issue with Angular 16.1","State":"closed","Body":"### Which @angular/* package(s) are the source of the bug?\n\ncompiler-cli, platform-browser\n\n### Is this a regression?\n\nNo\n\n### Description\n\nI'm trying the Vite compiler by running our application with the latest version of Angular 16.1.\r\n\r\nI run the app with nx: `pnpm nx serve app -- --force-esbuild`. Server run but when I start the application in the browser, I got following error:\r\n\r\n\n\n### Please provide a link to a minimal reproduction of the bug\n\nhttps://stackblitz.com/edit/stackblitz-starters-rsyx1w?file=src%2Fmain.ts\n\n### Please provide the exception or error you saw\n\n```true\nUncaught Error: Dynamic require of \"@angular/platform-browser\" is not supported\r\n    at main.js:27:9\r\n    at packages/app/src/main.ts (app.module.ts:61:14)\r\n    at __require2 (main.js:45:50)\r\n    at main.ts:7:37\r\n(anonymes) @ main.js:27\r\npackages/app/src/main.ts @ app.module.ts:61\r\n__require2 @ main.js:45\r\n(anonymes) @ main.ts:7\n```\n\n\n### Please provide the environment you discovered this bug in (run `ng version`)\n\n```true\nAngular CLI: 16.1.0\r\nNode: 18.16.0\r\nPackage Manager: pnpm 8.5.0\r\nOS: linux x64\r\n\r\nAngular: 16.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1601.0\r\n@angular-devkit/build-angular   16.1.0\r\n@angular-devkit/core            16.1.0\r\n@angular-devkit/schematics      16.1.0\r\n@schematics/angular             16.1.0\r\nng-packagr                      16.0.1\r\nrxjs                            7.8.1\r\ntypescript                      5.0.4\r\nwebpack                         5.86.0\n```\n\n\n### Anything else?\n\nThe reproduction link is not showing the issue, will try to make it but I don't have time","Url":"https://github.com/angular/angular-cli/issues/25383","RelatedDescription":"Closed issue \"Vite prebundling issue with Angular 16.1\" (#25383)"},{"Id":"1756785996","IsPullRequest":false,"CreatedAt":"2023-06-14T12:48:11","Actor":"szape89","Number":"25380","RawContent":null,"Title":"serve proxy configuration incorrect path / target URL match","State":"closed","Body":"### Command\r\n\r\nserve\r\n\r\n### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen running `ng serve`, it seems that the `/` character is not taken into consideration in the proxy configuration file.\r\nA request to `/somethingelse/whatever` matches `/something/*`, which does not feel right, it acts like it should for `/something*` (without the `/` character at the end).\r\nThis feels like a bug, but if there is a reasonable explanation, please elaborate.\r\n\r\n### Minimal Reproduction\r\n\r\nproxy.conf.json\r\n\r\n```\r\n{\r\n  \"/something/*\": {\r\n    \"target\": \"http://localhost:1234\"\r\n  },\r\n  \"/somethingelse/*\": {\r\n    \"target\": \"http://localhost:5678\"\r\n  }\r\n}\r\n```\r\n\r\nng serve logs\r\n\r\n```\r\n[webpack-dev-server] [HPM] GET /something/whatever -> http://localhost:1234\r\n[webpack-dev-server] [HPM] GET /somethingelse/whatever -> http://localhost:1234\r\n```\r\n\r\nproxy.conf.json\r\n\r\n```\r\n{\r\n  \"/somethingelse/*\": {\r\n    \"target\": \"http://localhost:5678\"\r\n  },\r\n  \"/something/*\": {\r\n    \"target\": \"http://localhost:1234\"\r\n  }\r\n}\r\n```\r\n\r\nng serve logs\r\n\r\n```\r\n[webpack-dev-server] [HPM] GET /something/whatever -> http://localhost:1234\r\n[webpack-dev-server] [HPM] GET /somethingelse/whatever -> http://localhost:5678\r\n```\r\n\r\n### Exception or Error\r\n\r\n_No response_\r\n\r\n### Your Environment\r\n\r\n```text\r\nAngular CLI: 15.2.8\r\nNode: 18.14.2\r\nPackage Manager: npm 9.5.0\r\nOS: win32 x64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.8\r\n@angular-devkit/build-angular   15.2.8\r\n@angular-devkit/core            15.2.8\r\n@angular-devkit/schematics      15.2.8\r\n@angular/cli                    15.2.8\r\n@schematics/angular             15.2.8\r\nrxjs                            7.8.1\r\ntypescript                      4.9.5\r\n```\r\n\r\n\r\n### Anything else relevant?\r\n\r\n_No response_","Url":"https://github.com/angular/angular-cli/issues/25380","RelatedDescription":"Closed issue \"serve proxy configuration incorrect path / target URL match\" (#25380)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"1766192306","IsPullRequest":false,"CreatedAt":"2023-06-20T21:14:44","Actor":"bdirito","Number":"27337","RawContent":null,"Title":"bug(mat-input): MatInput's autofill styling only covers part of the displayed input","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen you add an autofill attribute (autofill=\"name\" here) the browser may add some styling as part of its user agent. https://developer.mozilla.org/en-US/docs/Web/CSS/:autofill\r\n\r\nThis looks very poor on angular material as the autofill color only covers part of the input box;  the rest is covered with the configured material color.\r\n![mat16](https://github.com/angular/components/assets/8117238/dac17999-591e-4b57-8174-ed18eeca1651)\r\n\n\n### Reproduction\n\nStackBlitz link:  https://stackblitz.com/edit/g3qkzv?file=src%2Fexample%2Fform-field-appearance-example.html\r\nSteps to reproduce:\r\n1.  Click the 'Fill form field'\r\n2.  Select an autocomplete \r\n\n\n### Expected Behavior\n\nAutofill styling should cover the whole input box\n\n### Actual Behavior\n\nThe chrome defined 'blue area' only covers the internal 'input', the rest of the mat-input gets its gray background styling.\r\n\r\nAuto-fill behavior appears work 'correctly' on the mdc-web 'demo' page https://material-components.github.io/material-components-web-catalog/#/component/text-field\r\n\r\n(I added the autofill attribute)\r\n![mdc](https://github.com/angular/components/assets/8117238/1ab5e128-b034-4e34-9c3f-746eda922867)\r\n\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s):  Chrome 113.0.5672.126 (Official Build) (64-bit) \r\n- Operating System (e.g. Windows, macOS, Ubuntu):  Ubuntu 22.04.2 LTS\r\n","Url":"https://github.com/angular/components/issues/27337","RelatedDescription":"Open issue \"bug(mat-input): MatInput's autofill styling only covers part of the displayed input\" (#27337)"},{"Id":"1765936190","IsPullRequest":true,"CreatedAt":"2023-06-20T19:41:45","Actor":"wagnermaciel","Number":"27335","RawContent":null,"Title":"refactor(material/core): handle global ripples disabled state","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27335","RelatedDescription":"Closed or merged PR \"refactor(material/core): handle global ripples disabled state\" (#27335)"},{"Id":"1766020371","IsPullRequest":true,"CreatedAt":"2023-06-20T19:26:29","Actor":"zarend","Number":"27336","RawContent":null,"Title":"docs(material/chips): require communicating to AT how to edit a chip","State":"open","Body":"Update the accessibility section of chips component to adress editable chips. Require developer to communicate to AT how to edit a chip using a keyboard.\r\n\r\nRelates to issue #27106.","Url":"https://github.com/angular/components/pull/27336","RelatedDescription":"Open PR \"docs(material/chips): require communicating to AT how to edit a chip\" (#27336)"},{"Id":"1765888163","IsPullRequest":true,"CreatedAt":"2023-06-20T17:59:45","Actor":"wagnermaciel","Number":"27334","RawContent":null,"Title":"perf(material/chips): make chip ripples lazy","State":"open","Body":"","Url":"https://github.com/angular/components/pull/27334","RelatedDescription":"Open PR \"perf(material/chips): make chip ripples lazy\" (#27334)"},{"Id":"1762886222","IsPullRequest":true,"CreatedAt":"2023-06-20T16:40:59","Actor":"crisbeto","Number":"27325","RawContent":null,"Title":"refactor(material/paginator): switch to tokens API","State":"closed","Body":"Reworks the paginator use the new tokens theming API.","Url":"https://github.com/angular/components/pull/27325","RelatedDescription":"Closed or merged PR \"refactor(material/paginator): switch to tokens API\" (#27325)"},{"Id":"1765612660","IsPullRequest":true,"CreatedAt":"2023-06-20T16:27:32","Actor":"devversion","Number":"27332","RawContent":null,"Title":"test: trigger core changes","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/27332","RelatedDescription":"Closed or merged PR \"test: trigger core changes\" (#27332)"},{"Id":"1765740044","IsPullRequest":false,"CreatedAt":"2023-06-20T16:21:44","Actor":"mattiLeBlanc","Number":"27333","RawContent":null,"Title":"bug(Youtube player): Gtm.video event keeps emitting even after component is destroyed","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nI am having issues in Angular with the youtube video player and GTM integration.\r\nI know the issue most likely is caused in GTM, but  I have no access to that for support.\r\n\r\nWhat happens is that when I play a video, I am seeing `gtm.video` events. But when I navigate away from the videoplayer page (and the components get destroyed), I am still seeing `gtm.video: progress` events being emitted from the last video.\r\n\r\nI have tried loading GTM via an angular plugin, directly as instructed on the GTM website, I have tried adding youtube via this youtube component and manually used and Iframe or create it myself using the YT class.\r\n\r\nAll these efforts have the same end result; I keep getting `gtm.video` events in my analytic debugger.\r\n\r\nI found something on stackoverflow: \r\n`https://stackoverflow.com/questions/66569432/tag-manager-youtube-progress-trigger-continues-after-iframe-removed-from-dom`\r\nand people seem to confirm the issue.\r\n\r\nPausing the video, wait for 500ms and then do a Route navigation is not really an option in my app.\r\nHow do I get this under the attention of the GTM team?\r\nOr can Angular do anything for this issue?\n\n### Reproduction\n\nIt is hard for me to create a copy of our app in stackblitz, or create an example where you can navigate away from the youtube player to another client side url.\r\n\r\nTo reproduce, I use `angular-google-tag-manager` and `@angular/youtube-player` and setup my GTM and use a chrome plugin called Analytics Debugger to see the events pushed to the DataLayer.\r\nThen I start playing a video, and navigate to another client side url in the app and after 1 minute or so, I see another `gtm.video` event appear in the debugger.\n\n### Expected Behavior\n\nWhen video is destroyed, all GTM related events should stop.\r\n\n\n### Actual Behavior\n\nGTM progress events are still being emitted even when the video is no longer playing, buffering or even exists in the Dom.\n\n### Environment\n\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): Chrome\r\n- Operating System : Macos\r\n","Url":"https://github.com/angular/components/issues/27333","RelatedDescription":"Open issue \"bug(Youtube player): Gtm.video event keeps emitting even after component is destroyed\" (#27333)"},{"Id":"1765396230","IsPullRequest":false,"CreatedAt":"2023-06-20T13:18:37","Actor":"TheSlimvReal","Number":"27331","RawContent":null,"Title":"bug(MatDialog): Closes before `canDeactivate` of route is checked on navigation","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nI want to prevent navigation while a dialog is open.\r\nFor this I am using a `canDeactivate` guard on the route which checks if there is an open dialog. \r\nThe problem is now that when using the browser back button then the popup is already closed **before** the `canDeactivate` guard is even checked. This then results in the behaviour that the popup is closed even when no navigation happens.\r\n\r\nI know there is the `closeOnNavigation` option but I only want to prevent navigation and the dialog from closing in certain cases (e.g. unsaved changes in a popup).\r\n\r\n### Reproduction\r\n\r\nClone `https://github.com/TheSlimvReal/angular-dialog-route-guard.git` (does not work in Stackblitz because the back button triggers a page reload there)\r\nSteps to reproduce:\r\n1. Click `First`\r\n2. Click `Dialog`\r\n3. Click the back button of browser\r\n\r\nThe app will route to `second` even though the `canDeactivate` guard is checking whether a dialog is open.\r\nThis is because the dialog is closed **before** route guards are checked.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe dialog should only close if navigation actually happens.\r\n\r\n### Actual Behavior\r\n\r\nThe dialog is always closed.\r\n\r\n### Environment\r\n\r\nAngular CLI: 16.1.0\r\nNode: 16.16.0\r\nPackage Manager: npm 8.17.0\r\nOS: darwin x64\r\n\r\nAngular: 16.1.1\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\n","Url":"https://github.com/angular/components/issues/27331","RelatedDescription":"Open issue \"bug(MatDialog): Closes before `canDeactivate` of route is checked on navigation\" (#27331)"},{"Id":"1762064791","IsPullRequest":false,"CreatedAt":"2023-06-20T11:53:03","Actor":"CrowhopTech","Number":"27321","RawContent":null,"Title":"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle","State":"closed","Body":"### Feature Description\n\nWith newer updates of Angular Material, the Material Slider now has a checkmark when activated, and a minus sign when deactivated. This is good for \"activate/deactivate\" cases, but makes it less useful for cases where I just want a toggle when neither is the \"active\" one.\r\n\r\nMy preferred fix would be a boolean (true by default) to show/hide the icons. If false, it would make it into a simple slide toggle, with no checkmark or minus sign, though the colors would still change.\n\n### Use Case\n\nIn my case, I was using this toggle to indicate \"match any/match all\". While the new slide toggle still technically works for this, it would be more appealing without implying one is the \"active\" choice.","Url":"https://github.com/angular/components/issues/27321","RelatedDescription":"Closed issue \"feat(Slide Toggle): Provide option for more \"neutral\" slide toggle\" (#27321)"},{"Id":"1764779637","IsPullRequest":true,"CreatedAt":"2023-06-20T11:53:01","Actor":"crisbeto","Number":"27330","RawContent":null,"Title":"feat(material/slide-toggle): allow for icon to be hidden","State":"closed","Body":"Adds an input that allows users to opt into hiding the slide toggle icon.\r\n\r\nFixes #27321.","Url":"https://github.com/angular/components/pull/27330","RelatedDescription":"Closed or merged PR \"feat(material/slide-toggle): allow for icon to be hidden\" (#27330)"},{"Id":"1763551173","IsPullRequest":false,"CreatedAt":"2023-06-19T13:28:35","Actor":"bradws","Number":"27329","RawContent":null,"Title":"bug(Table Schematic Code): Build warning error in the 'table' schematic code","State":"open","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nWhen creating a fresh Angular v16.1.0 project, then adding Angular Material to the project, and finally adding the 'table' schematic to produce an example component, the component produces an Angular build warning error in line 20 of the html template stating that the '?.' operator can be replaced with the '.' operator.\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [Build Warning Error](https://stackblitz.com/edit/stackblitz-starters-barqkq?file=src%2Fmy-table%2Fmy-table.component.html)\r\nSteps to reproduce:\r\n1. Create a fresh Angular v16.1.0 project:\r\n>ng new angular-material-ex2 --standalone\r\n2. Change directory:\r\n>cd angular-material-ex2/src/app\r\n3. Add Angular Material:\r\n>ng add @angular/material\r\n4. Generate the 'table' schematic:\r\n>ng g @angular/material:table MyTable\r\n5. Modify code to accept the newly-created MyTable\r\n  5.1 In app.component.ts file, change code line from:\r\n    imports: [CommonModule],\r\n    ..to..\r\n    imports: [CommonModule, MyTableComponent],\r\n  5.2 In app.component.ts file, after the code line:\r\n    import { CommonModule } from '@angular/common';\r\n    ..put an additional code line..\r\n    import { MyTableComponent } from './my-table/my-table.component';\r\n6. Build the project:\r\n>ng run build\r\n7. You will be presented with the Angular build warning error:\r\n\"Warning: src/app/my-table/my-table.component.html:20:29 - warning NG8107: The left side of this optional chain operation does not include 'null' or 'undefined' in its type, therefore the '?.' operator can be replaced with the '.' operator.\"\r\n**Note**: _The Stackblitz code sample should show the error_\r\n8. To fix, just remove the two Optional Chaining operators; i.e. the two question marks\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo Build warning error will appear.\r\n\r\n### Actual Behavior\r\n\r\nCode will compile with out any errors.\r\n\r\n### Environment\r\n\r\n- Angular: 16.1.0\r\n- CDK/Material: 16.1.1 / 16.1.1\r\n- Browser(s): Any (Firefox & Chrome)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 11\r\n","Url":"https://github.com/angular/components/issues/27329","RelatedDescription":"Open issue \"bug(Table Schematic Code): Build warning error in the 'table' schematic code\" (#27329)"},{"Id":"1763459460","IsPullRequest":false,"CreatedAt":"2023-06-19T12:39:49","Actor":"dkimmich-onventis","Number":"27328","RawContent":null,"Title":"bug(snack-bar): action button color not changeable","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n14\r\n\r\n### Description\r\n\r\nI have a snack bar with a custom component. In this component I have a custom action button. I want this button to be in the primary color, so I set the `color` attribute of the button to `\"primary\"`:\r\n\r\n```\r\n<button mat-button color=\"primary\" matSnackBarAction>\r\n  My custom action\r\n</button>\r\n```\r\n\r\nBefore MDC, the `color` attribute was respected, and the button changed its color accordingly. After MDC migration, the button stays in the accent color regardless of what `color` is set.\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: https://stackblitz.com/edit/kbv7nf\r\n\r\nSteps to reproduce:\r\n1. Create a custom snack bar component / template\r\n2. Add an action button to the custom snack bar\r\n3. Set the `color` of the action button to `\"primary\"`\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe button is displayed in the primary color\r\n\r\n### Actual Behavior\r\n\r\nThe button is displayed in the accent color\r\n\r\n### Environment\r\n\r\n- Angular: 16\r\n- CDK/Material: 16\r\n- Browser(s): all\r\n- Operating System (e.g. Windows, macOS, Ubuntu): all\r\n\r\n### Further notes\r\n\r\nI investigated the issue a bit, and it seems like using the `matSnackBarAction` directive overrides the color of the button. Omitting this directive fixes the issue, however the [docs](https://material.angular.io/components/snack-bar/api#MatSnackBarAction) state that this directive should be used.\r\n","Url":"https://github.com/angular/components/issues/27328","RelatedDescription":"Open issue \"bug(snack-bar): action button color not changeable\" (#27328)"},{"Id":"1763359271","IsPullRequest":false,"CreatedAt":"2023-06-19T12:33:00","Actor":"JoranLive","Number":"27327","RawContent":null,"Title":"feat(COMPONENT): Customize component size","State":"closed","Body":"### Feature Description\n\nHello,\r\n\r\nWe usually needs to customize the size of angular material components.\r\n\r\nEspecially, mat form fields & buttons.\r\n\r\nFrom what I know, there isn't any elegant way to customize the default size of Angular components.\r\nUsually, we have to play with the deprecated \"::ngdeep\".\r\nWorking at class levels can also make our application incompatible with future versions.\r\n\r\nCould it be good to adapt all the components size according to the font-size of the parent ?\r\n\n\n### Use Case\n\n_No response_","Url":"https://github.com/angular/components/issues/27327","RelatedDescription":"Closed issue \"feat(COMPONENT): Customize component size\" (#27327)"},{"Id":"1762994944","IsPullRequest":false,"CreatedAt":"2023-06-19T08:10:46","Actor":"rcb98","Number":"27326","RawContent":null,"Title":"feat(theming): roadmap for the theming API","State":"open","Body":"Since a new token-based theming API is on the works, we would like to get some insight as to what exactly we will be getting on future versions of Angular Material, perhaps in the form of a roadmap.\r\n\r\nFor instance, Material 3 support [Shapes](https://m3.material.io/styles/shape/overview), offering full range of roundedness for components, which would be very useful, but when can we expect to be able to use all of these features?","Url":"https://github.com/angular/components/issues/27326","RelatedDescription":"Open issue \"feat(theming): roadmap for the theming API\" (#27326)"},{"Id":"1762151074","IsPullRequest":true,"CreatedAt":"2023-06-18T21:44:12","Actor":"crisbeto","Number":"27323","RawContent":null,"Title":"refactor(material/select): rename some tokens for more clarity","State":"closed","Body":"Renames some of the `mat-select` tokens to make it clearer what they're referring to.","Url":"https://github.com/angular/components/pull/27323","RelatedDescription":"Closed or merged PR \"refactor(material/select): rename some tokens for more clarity\" (#27323)"},{"Id":"1762317822","IsPullRequest":true,"CreatedAt":"2023-06-18T19:49:29","Actor":"SaishNarvekar","Number":"27324","RawContent":null,"Title":"docs(material/theming): add missing theme variable to theming guide docs","State":"closed","Body":"Fixes missing $theme variable in [Reading color values](https://material.angular.io/guide/theming-your-components#reading-color-values) in [Theme your own components](https://material.angular.io/guide/theming-your-components)\r\n\r\nFixes https://github.com/angular/components/issues/24405","Url":"https://github.com/angular/components/pull/27324","RelatedDescription":"Closed or merged PR \"docs(material/theming): add missing theme variable to theming guide docs\" (#27324)"},{"Id":"1761684333","IsPullRequest":true,"CreatedAt":"2023-06-18T17:57:50","Actor":"crisbeto","Number":"27319","RawContent":null,"Title":"test(cdk/testing): attempt to deflake webdriver tests","State":"closed","Body":"The Selenium Webdriver tests for harnesses have been flaky for a while now, because the click coordinates haven't been consistent across test runs. My theory is that it's due to the page being scrolled down on some of them.\r\n\r\nThese changes attempt to reduce the flakes by making the clicked element fixed.","Url":"https://github.com/angular/components/pull/27319","RelatedDescription":"Closed or merged PR \"test(cdk/testing): attempt to deflake webdriver tests\" (#27319)"},{"Id":"1762083441","IsPullRequest":false,"CreatedAt":"2023-06-18T02:43:10","Actor":"robmv","Number":"27322","RawContent":null,"Title":"bug(datepicker): Date range picker emit repeated events after the first date is selected","State":"open","Body":"### Is this a regression?\n\n- [ ] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen a date range picker is opened and the start date is selected, two consecutive `valueChanges` event are triggered, and after the end date is selected the final event is triggered, in total 3 events happens instead of only two.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/shrtut?\r\nSteps to reproduce:\r\n1. Click on the `mat-datepicker-toggle` button.\r\n2. Select a start date like: 6/18/2023\r\n3. Notice on the _Changes_ section below that two events were triggered.\r\n4. Select the end date: 6/24/2023.\r\n5. A final event in logged on the _Changes_ section.\r\n\n\n### Expected Behavior\n\nAfter selecting the first date only a single `valueChanges` event should be triggered.\r\n\r\nThe expected behavior is show on the _Workaround Changes_ section where a `debounceTime(0)` is forced in order to remove the spurious repeated event.\n\n### Actual Behavior\n\nTwo events are triggered after selecting the start date\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Firefox, Chrome.\r\n- Operating System: Linux (Fedora)\r\n","Url":"https://github.com/angular/components/issues/27322","RelatedDescription":"Open issue \"bug(datepicker): Date range picker emit repeated events after the first date is selected\" (#27322)"},{"Id":"1761702917","IsPullRequest":true,"CreatedAt":"2023-06-17T11:28:31","Actor":"crisbeto","Number":"27320","RawContent":null,"Title":"build: fix out of sync file","State":"closed","Body":"Fixes that the select.scss is out of sync with g3.","Url":"https://github.com/angular/components/pull/27320","RelatedDescription":"Closed or merged PR \"build: fix out of sync file\" (#27320)"},{"Id":"1761349985","IsPullRequest":false,"CreatedAt":"2023-06-16T21:07:52","Actor":"DJayFreshBlock","Number":"27318","RawContent":null,"Title":"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]","State":"open","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n6\r\n\r\n### Description\r\n\r\nExpansion panels currently render with a flash of content when nested in MatStepper -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\nReported fixed by #13870 \r\nHowever this is just when opened in a dialog without any other nesting\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: [https://angular-issue13870-stepper-dialog.stackblitz.io](https://angular-issue13870-stepper-dialog.stackblitz.io)\r\nSteps to reproduce:\r\n1. Create a MatStepper component to contain an expansion panel\r\n3. Add a MatExpansionPanel\r\n4. Set [expanded]=\"false\"\r\n\r\n\r\n### Expected Behavior\r\n\r\nMatExpansionPanels currently render with a flash of content when nested -- they always temporarily appear as expanded, regardless of what the \"expanded\" attribute is set to. After a moment, all expansion panels that have been explicitly set to closed collapse.\r\n\r\n### Actual Behavior\r\n\r\nMatExpansionPanels should appear as collapsed when the dialog opens when `expanded=false` instead of briefly appearing as expanded, then collapsing after a delay.\r\n\r\n### Environment\r\n\r\n- Angular: 14.2\r\n- CDK/Material: 14.2\r\n- Browser(s): Chrome\r\n- Operating System : Windows\r\n\r\n","Url":"https://github.com/angular/components/issues/27318","RelatedDescription":"Open issue \"bug(MatExpansionPanel): Panel Expanded in MatStepper regardless of [expanded]\" (#27318)"},{"Id":"1758173483","IsPullRequest":true,"CreatedAt":"2023-06-16T20:47:31","Actor":"crisbeto","Number":"27310","RawContent":null,"Title":"refactor(material/select): switch to tokens API","State":"closed","Body":"Reworks the select to use the new tokens-based theming API.","Url":"https://github.com/angular/components/pull/27310","RelatedDescription":"Closed or merged PR \"refactor(material/select): switch to tokens API\" (#27310)"},{"Id":"1761293746","IsPullRequest":true,"CreatedAt":"2023-06-16T20:32:55","Actor":"zarend","Number":"27317","RawContent":null,"Title":"fix(material/chips): remove button role from editable chips","State":"open","Body":"[fix(material/chips): remove button role from editable chips](https://github.com/angular/components/pull/27317/commits/b056fc25b8bccce941b861cc774ad9185aa9a303) \r\n\r\nRemoves the button role from editable input chips. Fix accessibility\r\nissue in ChipRow where the chip action element is mislabeled as a\r\nbutton (https://github.com/angular/components/issues/27106). Remove butotn role by remove DOM node thtat used to\r\nhave button role and using the gridcell role element for the primary\r\nchip action instead.\r\n\r\nTested cross-browser with supported screen readers on MacOS and Windows.\r\nTested on \"Chips with input\" example by verifying that a chip could be\r\nadded then edited after adding. Also verifying that AT read the chip's\r\naria description.\r\n\r\nTesting Environment\r\n - macOS 13.4 (22F66) / VoiceOver\r\n   - Chrome Version 114.0.5735.133 (Official Build) (arm64)\r\n   - Firefox 114.0.1 (64-bit)\r\n - windows 10 Enteprise Version 22H2\r\n   - JAWS VERSION 2020.2006.12 ILM\r\n   - NVDA version 2022.3\r\n   - Chrome Version 114.0.5735.134 (Official Build) (64-bit)\r\n   - Firefox 114.0.2 (64-bit)\r\n\r\nFix https://github.com/angular/components/issues/27106","Url":"https://github.com/angular/components/pull/27317","RelatedDescription":"Open PR \"fix(material/chips): remove button role from editable chips\" (#27317)"},{"Id":"1760746801","IsPullRequest":false,"CreatedAt":"2023-06-16T14:24:14","Actor":"jbgtmartin","Number":"27316","RawContent":null,"Title":"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n14.2.7\n\n### Description\n\nIn iOS Safari, when the [step] input is used, the slider can not be dragged from outside of the thumb. It means that if I start dragging on the slider track for instance, but not on the slider thumb itself, the thumb's ripple will show, but the thumb won't move to my finger's location.\r\n\r\nIf I remove the [step] input, the thumb is behaving correctly.\r\n\r\nI didn't have this issue with the legacy implementation.\r\n\r\nIt can be measleading, because if the user drags a little outside the \"drag target\", the ripple will show as if the interaction was working, but the thumb will not move.\n\n### Reproduction\n\nStackBlitz link: https://stackblitz.com/edit/components-issue-bf7qpd?file=src%2Fapp%2Fexample-component.html\r\nSteps to reproduce:\r\n1. Open the stackblitz on iOS. You can also see it on Angular's website in the [first example](https://material.angular.io/components/slider/examples), by switching between 0 and non-0 step value.\r\n2. Start dragging on the track, not on the thumb itself\r\n\n\n### Expected Behavior\n\nThe thumb should move to the finger's location, and then follow the finger.\n\n### Actual Behavior\n\nThe thumb's ripple shows, but the thumb does not move.\n\n### Environment\n\n- Angular: 16.1.1\r\n- CDK/Material: 16.1.1\r\n- Browser(s): Safari on iOS\r\n- Operating System (e.g. Windows, macOS, Ubuntu): iOS 16.3.1, iPad OS 16.2, iPad OS 15.6\r\n","Url":"https://github.com/angular/components/issues/27316","RelatedDescription":"Open issue \"bug(mat-slider): Slider can not be dragged from outside the thumb when [step] input is used, in Safari iOS\" (#27316)"},{"Id":"1760047954","IsPullRequest":true,"CreatedAt":"2023-06-16T11:24:04","Actor":"crisbeto","Number":"27315","RawContent":null,"Title":"fix(cdk/a11y): don't emit blurred events on the server","State":"closed","Body":"The `FocusMonitor` is set up to emit `null` when an element is blurred and we have some components that depend on that value to mark themselves as touched. However, it's also set up to return an rxjs observale `of(null)` on the server which means that it'll emit and complete immediately. This is problematic, because it can mark components as touched even though they haven't been.\r\n\r\nThese changes remove the parameter from `of()` so it never emits.\r\n\r\nFixes #27234.","Url":"https://github.com/angular/components/pull/27315","RelatedDescription":"Closed or merged PR \"fix(cdk/a11y): don't emit blurred events on the server\" (#27315)"},{"Id":"1759206737","IsPullRequest":true,"CreatedAt":"2023-06-15T17:36:45","Actor":"devversion","Number":"27314","RawContent":null,"Title":"build: speed up RBE by allowing more concurrent jobs","State":"closed","Body":"Bazel detects maximum number of jobs based on host resources. Since we run remotely, we can increase this number significantly.","Url":"https://github.com/angular/components/pull/27314","RelatedDescription":"Closed or merged PR \"build: speed up RBE by allowing more concurrent jobs\" (#27314)"},{"Id":"1758377423","IsPullRequest":false,"CreatedAt":"2023-06-15T17:14:51","Actor":"GarfieldDeepClone","Number":"27312","RawContent":null,"Title":"Button inside Datepicker has mdc* classes though I'm using legacy","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n_No response_\r\n\r\n### Description\r\n\r\nHi\r\n\r\nFirst, I wanted to open a discussion and not a bug because I'm not sure if I'm doing something wrong.\r\n\r\nI upgraded from Angular 14 to 15 and also updated Material with this command:\r\nng update @angular/material@15\r\n\r\nI'd like to use all the legacy stuff and migrate at a later point.\r\nAll material components look like before except the datepicker.\r\n\r\nI'm using the datepicker like:\r\n`<mat-form-field appearance=\"legacy\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tmatInput\r\n\t\t\t\t[formControl]=\"datepickerInputControl\"\r\n\t\t\t\t[matDatepicker]=\"datePicker\"\r\n\t\t\t\t[min]=\"dateRange.start\"\r\n\t\t\t\t[max]=\"dateRange.end\"\r\n\t\t\t\t(dateChange)=\"onDateChange()\"\r\n\t\t\t/>\r\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\r\n\t\t\t<mat-datepicker #datePicker></mat-datepicker>\r\n\t\t</mat-form-field>`\r\n\r\nWe styled the datepicker on our own and after the material update it looks different than before.\r\nI noticed that the button inside the datepicker for selecting a period has some additional classes (the mdc* ones) which destroys our styling.\r\n\r\n`<button mat-button=\"\" type=\"button\" aria-live=\"polite\" class=\"mat-calendar-period-button mdc-button mat-mdc-button mat-unthemed mat-mdc-button-base\"`\r\n\r\nmdc is the new styling right? So why is this added when I'm using legacy?\r\n\r\nSo I thought I'm not really using the legacy button and imported it explicitly in the module where this component is used:\r\n`import { MatLegacyButtonModule } from '@angular/material/legacy-button';\r\nimports: [\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatButtonModule,\r\n\t\tMatDatepickerModule,\r\n\t]`\r\n\r\nBut that didn't change anything. And I also noticed that there isn't a MatLegacyDatepickerModule?\r\n\r\nSo what I'm doing wrong?\r\n\r\n\r\n### Expected Behavior\r\n\r\nButton without mdc classes\r\n\r\n### Actual Behavior\r\n\r\nbutton with mdc classes\r\n\r\n### Environment\r\n\r\nAngular CLI: 15.2.8\r\nNode: 16.18.0\r\nPackage Manager: npm 9.6.7\r\nOS: darwin arm64\r\n\r\nAngular: 15.2.9\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, material-moment-adapter, platform-browser\r\n... platform-browser-dynamic, upgrade\r\n\r\nPackage                         Version\r\n---------------------------------------------------------\r\n@angular-devkit/architect       0.1502.8\r\n@angular-devkit/build-angular   15.2.8\r\n@angular-devkit/core            15.2.8\r\n@angular-devkit/schematics      15.2.8\r\n@angular/cli                    15.2.8\r\n@schematics/angular             15.2.8\r\nrxjs                            7.8.0\r\ntypescript                      4.9.5\r\nwebpack                         5.75.0\r\n\r\n\r\n\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/27312","RelatedDescription":"Closed issue \"Button inside Datepicker has mdc* classes though I'm using legacy\" (#27312)"},{"Id":"1758377272","IsPullRequest":false,"CreatedAt":"2023-06-15T17:06:05","Actor":"SebastianRzk","Number":"27311","RawContent":null,"Title":"bug(MatSelect): Translated (Transloco) Mat select does not show text without interaction when transloco string is the only non-whitepace character","State":"closed","Body":"### Is this a regression?\r\n\r\n- [ ] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\nI don't know, I am using transloco the first time and with nx-translate I experienced no inconvenience. \r\n\r\n### Description\r\n\r\nWhen my option text contains only a translated string (with transloco), the initial value selection is not presented\r\n\r\nExample code:\r\n\r\n```html\r\n<mat-form-field>\r\n    <mat-label>nach Erfolg</mat-label>\r\n    <mat-select value=\"only-fehlerhaft\" (selectionChange)=\"onChange()\" [(value)]=\"selectedOption\">\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_FEHLERHAFT\">\r\n            {{\"some.cool.key.nurFehlerhaft\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_ERFOLGREICH\">{{\"some.cool.key.nurErfolgreich\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ALLE\">{{\"some.cool.key.alle\" | transloco}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n```\r\nResults in:\r\n![drowdown_broken](https://github.com/angular/components/assets/5215946/12f903bd-390f-439c-b350-57bd1c9e1f3e)\r\n\r\nWhen I put text / or a non-whitespace character (e.g. `&zwnj;` ) next to a translation-key, it works as expected:\r\n\r\n```html\r\n<mat-form-field>\r\n    <mat-label>nach Erfolg</mat-label>\r\n    <mat-select value=\"only-fehlerhaft\" (selectionChange)=\"onChange()\" [(value)]=\"selectedOption\">\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_FEHLERHAFT\">\r\n            &zwnj;{{\"some.cool.key.nurFehlerhaft\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ONLY_ERFOLGREICH\">{{\"some.cool.key.nurErfolgreich\" | transloco}}</mat-option>\r\n        <mat-option\r\n                [value]=\"OPTION_ALLE\">{{\"some.cool.key.alle\" | transloco}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n```\r\n![drowdown_workaround](https://github.com/angular/components/assets/5215946/0921e8a2-adeb-4be9-b1da-6fbba931165d)\r\n\r\n\r\nWhat I've already tried:\r\n\r\n* Calling ChangeDetectorRef manually -> Does not help\r\n* Change ChangeDetectionStrategy from OnPush to Default -> Does not help\r\n* Inserting cool whitespace char-hack -> works :D\r\n\r\n\r\n\r\n### Reproduction\r\n\r\nStackBlitz link: \r\nSteps to reproduce:\r\n1. \r\n2.\r\n\r\n\r\n### Expected Behavior\r\n\r\nShould show translated text.\r\n\r\n### Actual Behavior\r\n\r\nDoes not show the text. But there is a workaround. \r\n\r\n### Environment\r\n\r\n- Angular: 16.0.0\r\n- CDK/Material: 16.0.0\r\n- Transloco: 4.2.6\r\n- Browser(s): Firefox and Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27311","RelatedDescription":"Closed issue \"bug(MatSelect): Translated (Transloco) Mat select does not show text without interaction when transloco string is the only non-whitepace character\" (#27311)"},{"Id":"1757817290","IsPullRequest":false,"CreatedAt":"2023-06-15T16:42:38","Actor":"leonandroid","Number":"27308","RawContent":null,"Title":"bug(DatePicker): Not working with [(ngModel)] anymore","State":"closed","Body":"### Is this a regression?\r\n\r\n- [X] Yes, this behavior used to work in the previous version\r\n\r\n### The previous version in which this bug was not present was\r\n\r\n11.2.12\r\n\r\n### Description\r\n\r\nWhen using Angular Material Datepicker with model (using ngModel) the values are not set in the variable when the date is finally picked.\r\n\r\nUsing the code in the example, I added the ngModel:\r\n```\r\n\r\n<mat-form-field>\r\n  <mat-label>Choose a date</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"someDate\">\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n```\r\n\r\nThe someDate value will never have the value from the picker after it is chosen.\r\nThe same code works fine in previous versions of Angular Material.\r\n\r\nbtw, the workaround I came up is this:\r\nReplace `[(ngModel)]=\"someDate\"` with\r\n```\r\n[value]=\"someDate\"\r\n(dateChange)=\"someValue = $event. Value\"\r\n```\r\n\r\n### Reproduction\r\n\r\n\r\nSteps to reproduce:\r\n1. Create an example with the code provided, using datepicker\r\n2. Add a variable to bind it to ngModel\r\n3. Pick a date\r\n4. Inspect the variable\r\n\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe variable should have the value from the picker.\r\n\r\n### Actual Behavior\r\n\r\nThe variable is empty.\r\n\r\n### Environment\r\n\r\n- Angular: 15\r\n- CDK/Material: 15\r\n- Browser(s): Chromium\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/27308","RelatedDescription":"Closed issue \"bug(DatePicker): Not working with [(ngModel)] anymore\" (#27308)"},{"Id":"1758777471","IsPullRequest":false,"CreatedAt":"2023-06-15T12:59:39","Actor":"AntonEvseev","Number":"27313","RawContent":null,"Title":"bug(table): Table with sticky header 'jumping'","State":"open","Body":"### Is this a regression?\n\n- [X] Yes, this behavior used to work in the previous version\n\n### The previous version in which this bug was not present was\n\n_No response_\n\n### Description\n\nWhen scrolling, a table with a sticky header \"jumps\" if you add an element that has a absolute position. For example, if you display the tooltip and scroll, then the sticky header will change position for a short time. \r\nThis is also true with the mat-progress-bar element.\n\n### Reproduction\n\nStackBlitz link: \r\nSteps to reproduce:\r\n1. Open [link](https://stackblitz.com/edit/gatzhq-oe6hfq?file=src%2Fexample%2Ftable-sticky-header-example.ts) \r\n2. The sticky header changes the position on scroll when there is another element on the page with absolute position\r\n\r\nhttps://github.com/angular/components/assets/16895663/bf5172c5-8cba-4a0b-b5da-89afab55d7ee\r\n\r\n\n\n### Expected Behavior\n\nThe sticky header should not change position on scroll when there is another element on the page with an absolute position\n\n### Actual Behavior\n\nThe sticky header changes the position on scroll when there is another element on the page with absolute position\n\n### Environment\n\n- Angular: v12, v15, v16\r\n- CDK/Material:  v12, v15, v16\r\n- Browser(s): **Chrome Version 114.0.5735.110 (Official Build) (64-bit)**\r\n- Operating System (e.g. Windows, macOS, Ubuntu): **Windows**\r\n","Url":"https://github.com/angular/components/issues/27313","RelatedDescription":"Open issue \"bug(table): Table with sticky header 'jumping'\" (#27313)"},{"Id":"1757843276","IsPullRequest":true,"CreatedAt":"2023-06-15T00:34:45","Actor":"mmalerba","Number":"27309","RawContent":null,"Title":"refactor(material-experimental/theming): condense matx.theme and matx.retheme into a single mixin","State":"open","Body":"Rather than having a separate mixin for \"retheming\" we have a single mixin `matx.theme` that can either emit fallback token defaults or not depending on how its configured. Added `matx.token-defaults` which can be used to configure the fallbacks.","Url":"https://github.com/angular/components/pull/27309","RelatedDescription":"Open PR \"refactor(material-experimental/theming): condense matx.theme and matx.retheme into a single mixin\" (#27309)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-21T03:30:03.3518888Z","RunDurationInMilliseconds":2374}