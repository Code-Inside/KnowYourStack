{"Data":{"GitHub":{"Issues":[{"Id":"1071268606","IsPullRequest":true,"CreatedAt":"2021-12-04T18:32:30","Actor":"gpetrou","Number":"6287","RawContent":null,"Title":"Enable nullability in ChildAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ChildAccessibleObject\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6287)","Url":"https://github.com/dotnet/winforms/pull/6287","RelatedDescription":"Open PR \"Enable nullability in ChildAccessibleObject\" (#6287)"},{"Id":"1071267107","IsPullRequest":true,"CreatedAt":"2021-12-04T18:23:55","Actor":"gpetrou","Number":"6286","RawContent":null,"Title":"Enable nullability in Command","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Command\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6286)","Url":"https://github.com/dotnet/winforms/pull/6286","RelatedDescription":"Open PR \"Enable nullability in Command\" (#6286)"},{"Id":"1071261597","IsPullRequest":true,"CreatedAt":"2021-12-04T17:55:26","Actor":"gpetrou","Number":"6285","RawContent":null,"Title":"Enable nullability in DCMapping","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DCMapping.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6285)","Url":"https://github.com/dotnet/winforms/pull/6285","RelatedDescription":"Open PR \"Enable nullability in DCMapping\" (#6285)"},{"Id":"1071260839","IsPullRequest":true,"CreatedAt":"2021-12-04T17:51:24","Actor":"gpetrou","Number":"6284","RawContent":null,"Title":"Enable nullability in DataFormats","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataFormats.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6284)","Url":"https://github.com/dotnet/winforms/pull/6284","RelatedDescription":"Open PR \"Enable nullability in DataFormats\" (#6284)"},{"Id":"1071258547","IsPullRequest":true,"CreatedAt":"2021-12-04T17:39:09","Actor":"gpetrou","Number":"6283","RawContent":null,"Title":"Enable nullability in BindingManagerBase","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in BindingManagerBase\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6283)","Url":"https://github.com/dotnet/winforms/pull/6283","RelatedDescription":"Open PR \"Enable nullability in BindingManagerBase\" (#6283)"},{"Id":"1071245377","IsPullRequest":true,"CreatedAt":"2021-12-04T16:31:27","Actor":"gpetrou","Number":"6282","RawContent":null,"Title":"Enable nullability in Clipboard","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Clipboard.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6282)","Url":"https://github.com/dotnet/winforms/pull/6282","RelatedDescription":"Open PR \"Enable nullability in Clipboard\" (#6282)"},{"Id":"1071238683","IsPullRequest":true,"CreatedAt":"2021-12-04T15:58:59","Actor":"gpetrou","Number":"6281","RawContent":null,"Title":"Enable nullability in Com2Enum","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Com2Enum\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6281)","Url":"https://github.com/dotnet/winforms/pull/6281","RelatedDescription":"Open PR \"Enable nullability in Com2Enum\" (#6281)"},{"Id":"1071235651","IsPullRequest":true,"CreatedAt":"2021-12-04T15:43:54","Actor":"gpetrou","Number":"6280","RawContent":null,"Title":"Enable nullability in IWin32WindowAdapter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in IWin32WindowAdapter\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6280)","Url":"https://github.com/dotnet/winforms/pull/6280","RelatedDescription":"Open PR \"Enable nullability in IWin32WindowAdapter\" (#6280)"},{"Id":"1071233001","IsPullRequest":true,"CreatedAt":"2021-12-04T15:31:14","Actor":"gpetrou","Number":"6279","RawContent":null,"Title":"Enable nullability in ToolStripItemImageRenderEventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripItemImageRenderEventArgs\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6279)","Url":"https://github.com/dotnet/winforms/pull/6279","RelatedDescription":"Open PR \"Enable nullability in ToolStripItemImageRenderEventArgs\" (#6279)"},{"Id":"1071204414","IsPullRequest":true,"CreatedAt":"2021-12-04T13:44:14","Actor":"dotnet-maestro[bot]","Number":"6278","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211203.8\r\n- **Date Produced**: December 4, 2021 10:22:37 AM UTC\r\n- **Commit**: f179b7634370fc9181610624cc095370ec53e072\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21603.1 to 7.0.0-alpha.1.21603.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/42224c6...f179b76\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6278)","Url":"https://github.com/dotnet/winforms/pull/6278","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6278)"},{"Id":"1071165877","IsPullRequest":true,"CreatedAt":"2021-12-04T09:16:09","Actor":"gpetrou","Number":"6277","RawContent":null,"Title":"Enable nullability in ControlCollection","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ControlCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6277)","Url":"https://github.com/dotnet/winforms/pull/6277","RelatedDescription":"Open PR \"Enable nullability in ControlCollection\" (#6277)"},{"Id":"1071157950","IsPullRequest":true,"CreatedAt":"2021-12-04T08:28:47","Actor":"gpetrou","Number":"6276","RawContent":null,"Title":"Enable nullability in Triangle","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Triangle\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6276)","Url":"https://github.com/dotnet/winforms/pull/6276","RelatedDescription":"Open PR \"Enable nullability in Triangle\" (#6276)"},{"Id":"1071157294","IsPullRequest":true,"CreatedAt":"2021-12-04T08:24:35","Actor":"gpetrou","Number":"6275","RawContent":null,"Title":"Enable nullability in FileDialog","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in FileDialog\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6275)","Url":"https://github.com/dotnet/winforms/pull/6275","RelatedDescription":"Open PR \"Enable nullability in FileDialog\" (#6275)"},{"Id":"1071146163","IsPullRequest":true,"CreatedAt":"2021-12-04T07:14:47","Actor":"gpetrou","Number":"6274","RawContent":null,"Title":"Enable nullability in RadioButton adapters","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in RadioButton adapters.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6274)","Url":"https://github.com/dotnet/winforms/pull/6274","RelatedDescription":"Open PR \"Enable nullability in RadioButton adapters\" (#6274)"},{"Id":"1071145493","IsPullRequest":true,"CreatedAt":"2021-12-04T07:10:22","Actor":"gpetrou","Number":"6273","RawContent":null,"Title":"Enable nullability on CoreSwitches","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability on CoreSwitches\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6273)","Url":"https://github.com/dotnet/winforms/pull/6273","RelatedDescription":"Open PR \"Enable nullability on CoreSwitches\" (#6273)"},{"Id":"1071145173","IsPullRequest":true,"CreatedAt":"2021-12-04T07:08:22","Actor":"gpetrou","Number":"6272","RawContent":null,"Title":"Enable nullability in ImageListUtils","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ImageListUtils\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6272)","Url":"https://github.com/dotnet/winforms/pull/6272","RelatedDescription":"Open PR \"Enable nullability in ImageListUtils\" (#6272)"},{"Id":"1071144321","IsPullRequest":true,"CreatedAt":"2021-12-04T07:03:02","Actor":"gpetrou","Number":"6271","RawContent":null,"Title":"Enable nullability in InvariantComparer","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in InvariantComparer\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6271)","Url":"https://github.com/dotnet/winforms/pull/6271","RelatedDescription":"Open PR \"Enable nullability in InvariantComparer\" (#6271)"},{"Id":"1071089924","IsPullRequest":false,"CreatedAt":"2021-12-04T01:43:02","Actor":"merriemcgaw","Number":"6270","RawContent":null,"Title":"Epic - Align with Win11 look and feel","State":"open","Body":"Windows 11 implemented a new look and feel. While we get most of that automatically through the Common Controls we do have several places where we owner draw our controls and these should be enhanced in some way to look more aligned with Windows. This is part of our dotnet/planning/issues/27 theme.\r\n\r\nI will be creating and adding issues to this epic in the coming weeks to outline precisely what we need to be doing.\r\n\r\n- [ ] Investigate which controls need to be changed to align with Win11\r\n- [ ] If available from Windows, expose a property that indicates whether the OS is in a Dark Mode or a Light Mode. I'm currently working directly with Windows on this.\r\n- [ ] #6153 \r\n- [ ] #5516 \r\n","Url":"https://github.com/dotnet/winforms/issues/6270","RelatedDescription":"Open issue \"Epic - Align with Win11 look and feel\" (#6270)"},{"Id":"1071089083","IsPullRequest":false,"CreatedAt":"2021-12-04T01:38:43","Actor":"merriemcgaw","Number":"6269","RawContent":null,"Title":"Epic - Improve Clipboard functionality","State":"open","Body":"In addition to removing BinaryFormatter we need to make sure that we are creating a safe and efficient Clipboard feature area. This is part of the dotnet/planning/issues/27 theme. We'll add individual issues to this list as we investigate.\r\n\r\n- [ ] Investigate limitations and problems in current Clipboard implementation","Url":"https://github.com/dotnet/winforms/issues/6269","RelatedDescription":"Open issue \"Epic - Improve Clipboard functionality\" (#6269)"},{"Id":"1071087491","IsPullRequest":false,"CreatedAt":"2021-12-04T01:31:18","Actor":"merriemcgaw","Number":"6268","RawContent":null,"Title":"Epic - complete PerMonV2 support in WinForms","State":"open","Body":"We've been working on improving our HDPI experience for the last few releases. We're going to put a significant focus on HPDI as part of .NET 7. \r\n\r\nIssues will be linked as they are scoped into this epic so that we can track them. This is part of the dotnet/planning/issues/27 theme.","Url":"https://github.com/dotnet/winforms/issues/6268","RelatedDescription":"Open issue \"Epic - complete PerMonV2 support in WinForms\" (#6268)"},{"Id":"1071084308","IsPullRequest":false,"CreatedAt":"2021-12-04T01:27:26","Actor":"merriemcgaw","Number":"6267","RawContent":null,"Title":"Epic- Remove BinaryFormatter from WinForms runtime","State":"open","Body":"BinaryFormatter is an inherently unsafe serliazer. WinForms used it quite a bit in early versions and now we should remove as much of this as possible.\r\n\r\nThis is part of the dotnet/planning/issues/27 theme\r\n\r\n- [ ] https://github.com/dotnet/winforms/issues/1251 ","Url":"https://github.com/dotnet/winforms/issues/6267","RelatedDescription":"Open issue \"Epic- Remove BinaryFormatter from WinForms runtime\" (#6267)"},{"Id":"1071052778","IsPullRequest":false,"CreatedAt":"2021-12-03T23:45:33","Actor":"merriemcgaw","Number":"6266","RawContent":null,"Title":"Expect some delays while members are on vacation","State":"open","Body":"Due to seasonal holidays, many of our members are taking time off. Please expect delayed responses until early January.","Url":"https://github.com/dotnet/winforms/issues/6266","RelatedDescription":"Open issue \"Expect some delays while members are on vacation\" (#6266)"},{"Id":"1071037606","IsPullRequest":false,"CreatedAt":"2021-12-03T23:06:02","Actor":"alanhoman","Number":"6265","RawContent":null,"Title":"ChildMdi inactive (not visible) TabPages do not render properly on HDPI change","State":"open","Body":".NET Core Version:\r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\nHave you experienced this same bug with .NET Framework?:\r\nNo\r\n\r\n**Issue:** When moving an MdiParent to a higher DPI monitor, the ChildMdi (Maximized) inactive (not visible) TabPages do not render properly when moved from a 100% to 150% monitor.\r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nDrag the MdiParent to the 150% monitor. The inactive (not visible) tabPage2 and tabPage3 controls do not render properly.  On tabPage2 the groupBox2 and groupBox3 are cut off on the bottom.  On tabPage3, the ListView on tabPage4 is much shorter and should have gone to the bottom of the tab page.\r\n![ChildMdi TabControl 1](https://user-images.githubusercontent.com/2184698/144683021-7101045e-5ed1-41e4-87f6-068820bde6eb.gif)\r\n\r\nIf you start on the 100% monitor with tabPage2 visible, then move to the 150% monitor, tabPage2 renders correctly.  \r\n![ChildMdi TabControl 2](https://user-images.githubusercontent.com/2184698/144683246-106cc214-ac55-49bc-9e58-0720f1c875ab.gif)\r\n\r\nIf you start on the 100% monitor with tabPage3 visible, then move to the 150% monitor, tabPage3 renders correctly.  \r\n![ChildMdi TabControl 3](https://user-images.githubusercontent.com/2184698/144683369-34116614-2230-4cbd-b138-ca2d40d6c6c8.gif)\r\n\r\nIf you use SimpleForm (not MdiParent), the inactive tabs render properly\r\n![ChildMdi TabControl 4](https://user-images.githubusercontent.com/2184698/144683465-76f884ad-8bca-4790-9740-a0a866ac0cf7.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7652835/PerMonitorHDPICore.-.NET.7.0.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6265","RelatedDescription":"Open issue \"ChildMdi inactive (not visible) TabPages do not render properly on HDPI change\" (#6265)"},{"Id":"1070574470","IsPullRequest":true,"CreatedAt":"2021-12-03T13:49:16","Actor":"dotnet-maestro[bot]","Number":"6264","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211203.1\r\n- **Date Produced**: December 3, 2021 11:23:53 AM UTC\r\n- **Commit**: 42224c69786c6386a946dfa47ebbcaf645283f5e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a61c1a3...42224c6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6264)","Url":"https://github.com/dotnet/winforms/pull/6264","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6264)"},{"Id":"1070573798","IsPullRequest":true,"CreatedAt":"2021-12-03T13:08:05","Actor":"dotnet-maestro[bot]","Number":"6263","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211203.6\r\n- **Date Produced**: December 4, 2021 4:37:31 AM UTC\r\n- **Commit**: b3e949192067c8acdaaae35015534f76e92d79d4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21603.6][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/427c059...b3e9491\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6263)\r\n","Url":"https://github.com/dotnet/winforms/pull/6263","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6263)"},{"Id":"1070533927","IsPullRequest":true,"CreatedAt":"2021-12-03T12:18:57","Actor":"Danil-Andrianov","Number":"6262","RawContent":null,"Title":"Rewrite printPreviewDialog, label and DataGridView MAUI tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced DataGridViewMAUI tests into UI IntegrationTests project\r\n- Replaced LabelMAUI tests into UI IntegrationTests project\r\n- Replaced PrintPreviewDialogMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6262)","Url":"https://github.com/dotnet/winforms/pull/6262","RelatedDescription":"Open PR \"Rewrite printPreviewDialog, label and DataGridView MAUI tests\" (#6262)"},{"Id":"1070501079","IsPullRequest":true,"CreatedAt":"2021-12-03T11:38:36","Actor":"Danil-Andrianov","Number":"6261","RawContent":null,"Title":"Rewrite MauiComboBox tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced ComboBoxMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6261)","Url":"https://github.com/dotnet/winforms/pull/6261","RelatedDescription":"Open PR \"Rewrite MauiComboBox tests\" (#6261)"},{"Id":"1070139637","IsPullRequest":false,"CreatedAt":"2021-12-03T01:53:18","Actor":"alanhoman","Number":"6260","RawContent":null,"Title":"ChildMdi Container control rendering issues when Maximized","State":"open","Body":".NET Core Version:\r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\nHave you experienced this same bug with .NET Framework?:\r\nNo\r\n\r\n**Issue:** When moving an MdiParent to a higher DPI monitor, the ChildMdi (Maximized) TabControl on the bottom becomes slightly narrower and slightly shorter after multiple moves.\r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nDrag the MdiParent to the 150% monitor. The Width = 674 and the Height = 267 as displayed in the text box inside the tab control. After moving it to the 100% monitor and back again, the size becomes 672x256. After doing this again, it becomes 671x246.  Also, the list view inside groupBox4 shrinks in height.  This issue does not occur when running the form via Simple Layout (Not MdiParent).\r\n![ChildMDI Maximized](https://user-images.githubusercontent.com/2184698/144530907-95966341-9117-4707-806a-23327456e790.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7646207/PerMonitorHDPICore.-.NET.7.0.zip)","Url":"https://github.com/dotnet/winforms/issues/6260","RelatedDescription":"Open issue \"ChildMdi Container control rendering issues when Maximized\" (#6260)"},{"Id":"1070122826","IsPullRequest":false,"CreatedAt":"2021-12-03T01:15:01","Actor":"alanhoman","Number":"6259","RawContent":null,"Title":"ChildMdi Container control rendering issues when not Maximized","State":"open","Body":"* .NET Core Version: \r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Issue** When moving an MdiParent to a higher DPI monitor, the ChildMdi (not maximized) TabControl on the bottom becomes slightly wider and slightly shorter after multiple moves.  \r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nClick on the Maximize/Minimize to un-maximize the ChildMDI form, then drag the MdiParent to the 150% monitor.  The Width = 613 and the Height = 261 as displayed in the text box inside the tab control.  After moving it to the 100% and back again, the size becomes 619x233.  After doing this again, it becomes 816x204 and the tab control now runs past the right edge.\r\n![ChildMDI Not Maximized](https://user-images.githubusercontent.com/2184698/144527632-4b200a9d-4ed1-4847-b2d2-e07ce2635ce0.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7646074/PerMonitorHDPICore.-.NET.7.0.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6259","RelatedDescription":"Open issue \"ChildMdi Container control rendering issues when not Maximized\" (#6259)"},{"Id":"1069667920","IsPullRequest":true,"CreatedAt":"2021-12-02T15:17:10","Actor":"Danil-Andrianov","Number":"6257","RawContent":null,"Title":"Rewrite ListViewMAUI tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced ListViewMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6257)","Url":"https://github.com/dotnet/winforms/pull/6257","RelatedDescription":"Open PR \"Rewrite ListViewMAUI tests\" (#6257)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-05T05:30:36.3768729Z","RunDurationInMilliseconds":521}