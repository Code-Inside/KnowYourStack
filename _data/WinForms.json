{"Data":{"GitHub":{"Issues":[{"Id":"2978074447","IsPullRequest":false,"CreatedAt":"2025-04-08T01:54:45","Actor":"dotnet-maestro-bot","Number":"13259","RawContent":null,"Title":"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch","State":"closed","Body":"Branch [release/9.0](https://github.com/dotnet/winforms/commits/release/9.0/) in `dotnet/winforms` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-winforms?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/winforms/issues/13259","RelatedDescription":"Closed issue \"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch\" (#13259)"},{"Id":"2975510289","IsPullRequest":false,"CreatedAt":"2025-04-08T00:36:53","Actor":"MelonWang1","Number":"13250","RawContent":null,"Title":"The text is not correct for DropDownItems property in the Items Collection Editor(toolStripMenuItem1.DropDownItems) dialog in the NET481 DemoConsole application","State":"closed","Body":"### .NET version\n\nBranch **Issue_12830_Multi-Target_DemoConsol**e from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis issue caused by the #12996, works well in .NET DemoConsole application. Has previous .NET GH issue: [13040](https://github.com/dotnet/winforms/issues/13040).\n\n### Issue description\n\nThe text is not correct for DropDownItems property in the Items Collection Editor(toolStripMenuItem1.DropDownItems) dialog in the NET481 DemoConsole application.\n\nCurrent Behavior (.NET Framework 4.8.1): \n\n![Image](https://github.com/user-attachments/assets/5cb17985-0e76-47bb-9b8c-528dfd93d13a)\n\nExpected Behavior (.NET 10):\n\n![Image](https://github.com/user-attachments/assets/6bd64e47-e4d3-4273-a9a8-75bf2f832372)\n\n### Steps to reproduce\n\nRun the test the sample app: [DemoConsole](https://github.com/dotnet/winforms/issues/src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) Issue_12830_Multi-Target_DemoConsole branch.","Url":"https://github.com/dotnet/winforms/issues/13250","RelatedDescription":"Closed issue \"The text is not correct for DropDownItems property in the Items Collection Editor(toolStripMenuItem1.DropDownItems) dialog in the NET481 DemoConsole application\" (#13250)"},{"Id":"2973510487","IsPullRequest":true,"CreatedAt":"2025-04-08T00:32:00","Actor":"Tanya-Solyanik","Number":"13238","RawContent":null,"Title":"removed unreferenced config file","State":"closed","Body":"test pipeline passed\r\nhttps://dnceng.visualstudio.com/internal/_build/results?buildId=2662835&view=results\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13238)","Url":"https://github.com/dotnet/winforms/pull/13238","RelatedDescription":"Closed or merged PR \"removed unreferenced config file\" (#13238)"},{"Id":"2978173431","IsPullRequest":true,"CreatedAt":"2025-04-07T22:58:11","Actor":"NikolaMilosavljevic","Number":"13260","RawContent":null,"Title":"Suppress IDE0031","State":"open","Body":"IDE0031 warnings were turned into errors in VMR build, with the latest SDK and compiler - https://github.com/dotnet/sdk/pull/48226\r\n\r\n```\r\nD:\\a\\_work\\1\\vmr\\src\\winforms\\src\\System.Private.Windows.Core\\src\\System\\Private\\Windows\\Ole\\FormatEnumerator.cs(59,13): error IDE0031: Null check can be simplified (https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0031) [D:\\a\\_work\\1\\vmr\\src\\winforms\\src\\System.Private.Windows.Core\\src\\System.Private.Windows.Core.csproj::TargetFramework=net8.0]\r\nD:\\a\\_work\\1\\vmr\\src\\winforms\\src\\System.Private.Windows.Core\\src\\System\\Private\\Windows\\Ole\\FormatEnumerator.cs(77,9): error IDE0031: Null check can be simplified (https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0031) [D:\\a\\_work\\1\\vmr\\src\\winforms\\src\\System.Private.Windows.Core\\src\\System.Private.Windows.Core.csproj::TargetFramework=net8.0]\r\n```\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13260)","Url":"https://github.com/dotnet/winforms/pull/13260","RelatedDescription":"Open PR \"Suppress IDE0031\" (#13260)"},{"Id":"2973869208","IsPullRequest":true,"CreatedAt":"2025-04-07T21:48:30","Actor":"dotnet-maestro[bot]","Number":"13241","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [92989bf7-cdf9-483d-64c5-08dcbc356d11](https://maestro.dot.net/subscriptions?search=92989bf7-cdf9-483d-64c5-08dcbc356d11)\n- **Build**: [20250404.5](https://dev.azure.com/dnceng/internal/_build/results?buildId=2679382)\n- **Date Produced**: April 4, 2025 3:54:17 PM UTC\n- **Commit**: [97cbc7361ff28b2948c8182720c166a744049f55](https://github.com/dotnet/arcade/commit/97cbc7361ff28b2948c8182720c166a744049f55)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25164.2 to 9.0.0-beta.25204.5][1]\n\n[1]: https://github.com/dotnet/arcade/compare/5ba9ca776c...97cbc7361f\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13241)","Url":"https://github.com/dotnet/winforms/pull/13241","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#13241)"},{"Id":"2974361724","IsPullRequest":true,"CreatedAt":"2025-04-07T21:00:19","Actor":"gpetrou","Number":"13242","RawContent":null,"Title":"Enable nullability in MaskedTextBoxTextEditorDropDown","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MaskedTextBoxTextEditorDropDown.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13242)","Url":"https://github.com/dotnet/winforms/pull/13242","RelatedDescription":"Closed or merged PR \"Enable nullability in MaskedTextBoxTextEditorDropDown\" (#13242)"},{"Id":"2977564577","IsPullRequest":false,"CreatedAt":"2025-04-07T17:45:37","Actor":"KlausLoeffelmann","Number":"13258","RawContent":null,"Title":"[API Suggestion][Security] Add ExcludeFromScreenCapture API to Forms/Controls","State":"open","Body":"## TL;DR\n\nWith the rise of continuous screen capture tools for AI analysis, sensitive LOB applications are at increased risk of data leakage. This proposal adds a simple API to WinForms that allows developers to prevent their forms and controls from being captured in screenshots, addressing a critical security concern for applications that handle sensitive data.\n\n## Rationale\nModern productivity tools increasingly use continuous screen capturing to feed content to LLMs for summarization, analysis, and automation. While this offers productivity benefits, it creates significant security risks for certain Line of Business (LOB) applications that handle sensitive data, or at least certain areas of those apps.\n\nHere are a few thoughts, which types of applications might require protection against unauthorized screen captures:\n\n1. **Healthcare Applications**: Applications displaying patient records, medical histories, test results, or other protected health information (PHI) covered under HIPAA regulations\n   \n2. **Financial Applications**: Banking software, investment platforms, or accounting systems showing account balances, transaction histories, credit card numbers, or tax information\n   \n3. **Government Systems**: Applications handling citizen data, social security numbers, tax records, or classified information\n   \n4. **Legal Software**: Case management systems containing privileged attorney-client communications, court filings, or sensitive legal strategies\n   \n5. **Insurance Platforms**: Systems displaying policy details, claims information, or personal policyholder data\n   \n6. **HR Software**: Applications showing employee records, salary information, performance reviews, or personal details\n   \n7. **Educational Systems**: Applications containing student records, grades, or other information protected under FERPA\n\n## Proposed API\n\nWindows 10/11 provides the `SetWindowDisplayAffinity` API with the `WDA_EXCLUDEFROMCAPTURE` flag that can block most software-based screen capture methods. This proposal wraps this functionality in a simple, easy-to-use WinForms API that raises awareness about this security concern and gives developers a straightforward way to protect sensitive information.\n\n### New Property for Form Class\n```csharp\n/// <summary>\n/// Gets or sets a value indicating whether this form should be excluded from screen captures.\n/// When set to true, the form will appear blacked out in screenshots and screen recordings.\n/// This only works on Windows 10 version 1803 and higher.\n/// </summary>\npublic bool ExcludeFromScreenCapture { get; set; }\n```\n\n### New Property for Control Class\n```csharp\n/// <summary>\n/// Gets or sets a value indicating whether this control should be excluded from screen captures.\n/// When set to true, the control will appear blacked out in screenshots and screen recordings.\n/// This only works on Windows 10 version 1803 and higher and only applies to controls\n/// that have their own HWND handle.\n/// </summary>\npublic bool ExcludeFromScreenCapture { get; set; }\n```\n\n### Additional Supporting APIs\n```csharp\n/// <summary>\n/// Enumeration defining the behavior when a form or control is captured in a screenshot.\n/// </summary>\npublic enum ScreenCaptureMode\n{\n    /// <summary>\n    /// The form or control can be captured normally in screenshots.\n    /// </summary>\n    Allow = 0,\n    \n    /// <summary>\n    /// The form or control appears blacked out in screenshots.\n    /// </summary>\n    Exclude = 1,\n    \n    /// <summary>\n    /// The form or control appears blurred in screenshots.\n    /// Requires Windows 11 version 22H2 or higher.\n    /// </summary>\n    Blur = 2\n}\n\n/// <summary>\n/// Gets or sets the behavior of this form when included in screen captures.\n/// </summary>\npublic ScreenCaptureMode ScreenCaptureMode { get; set; }\n\n/// <summary>\n/// Event that fires when a screen capture is detected.\n/// </summary>\npublic event EventHandler ScreenCaptureAttempted;\n```\n\n### New Form Configuration in Visual Studio Designer\nAdd a \"Security\" category in the Properties panel of the WinForms designer with the `ExcludeFromScreenCapture` property for easy discovery and configuration.\n\n## Implementation Notes\n- Assumingly pretty straight forward, low risk, low hanging fruit overall with substantial benefit/impact for customers.\n\n## Limitations/Discussion points\n- This protection only works on Windows 10 version 1803 and higher\n- It of course doesn't prevent hardware-based screen captures (e.g., taking a photo of the screen), which need to be clearly stated in the API docs, along, that this can help securing data but not totally prevent it.\n- Some security monitoring tools may need exceptions to function properly\n- The protection applies at the window level and may not be granular enough for all scenarios\n\n## Benefits\n- Simple API that's easy for developers to adopt\n- Raises awareness about an important security consideration\n- Provides immediate protection against many common screen capture methods\n- Aligns with the \"secure by default\" principle by making security features easily accessible\n","Url":"https://github.com/dotnet/winforms/issues/13258","RelatedDescription":"Open issue \"[API Suggestion][Security] Add ExcludeFromScreenCapture API to Forms/Controls\" (#13258)"},{"Id":"2976121029","IsPullRequest":true,"CreatedAt":"2025-04-07T08:54:45","Actor":"Olina-Zhang","Number":"13257","RawContent":null,"Title":"Add code coverage for FlowLayoutPanelDesigner.cs file","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n\r\n- Add unit test file: FlowLayoutPanelDesignerTests.cs for public method and 6 protected methods of the FlowLayoutPanelDesigner.cs.\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13257)","Url":"https://github.com/dotnet/winforms/pull/13257","RelatedDescription":"Open PR \"Add code coverage for FlowLayoutPanelDesigner.cs file\" (#13257)"},{"Id":"2976113155","IsPullRequest":true,"CreatedAt":"2025-04-07T08:51:51","Actor":"Syareel-Sukeri","Number":"13256","RawContent":null,"Title":"Add code coverage for ToolStripContainerActionList","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test ToolStripContainerActionListTests.cs for public properties and method of the ToolStripContainerActionList.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13256)","Url":"https://github.com/dotnet/winforms/pull/13256","RelatedDescription":"Open PR \"Add code coverage for ToolStripContainerActionList\" (#13256)"},{"Id":"2975919551","IsPullRequest":true,"CreatedAt":"2025-04-07T07:39:51","Actor":"LeafShi1","Number":"13255","RawContent":null,"Title":"Disable validation of InputLanguage.LayoutName in non-English modes in test InputLanguage_FromCulture_SupplementalInputLanguages_Expected ","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13226\r\n\r\n\r\n## Proposed changes\r\n\r\n- Disable validation of InputLanguage.LayoutName in non-English OS in test InputLanguage_FromCulture_SupplementalInputLanguages_Expected \r\n","Url":"https://github.com/dotnet/winforms/pull/13255","RelatedDescription":"Open PR \"Disable validation of InputLanguage.LayoutName in non-English modes in test InputLanguage_FromCulture_SupplementalInputLanguages_Expected \" (#13255)"},{"Id":"2975857065","IsPullRequest":false,"CreatedAt":"2025-04-07T07:12:54","Actor":"TechnVision","Number":"13254","RawContent":null,"Title":"Random error is thrown at runtime at runtime","State":"open","Body":"### .NET version\n\n.net 8, WinForms\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe App works file without any code changes since .net 6.\n\n### Issue description\n\nThe exception unknown software exception 0xx0434352 occurred in the app at location 0x000007FF919E41B39\n\n\nWhy is this error thrown at random places in runtime. My app is a WinForms app, with some DevExpress libraries, when error is thrown the app is closed and user will have to start the app again. I even have `Application.ThreadException` and `AppDomain.CurrentDomain.UnhandledException` in my start-up `Program.cs` file.\n\nMy system performance is running good and has all windows updates, even the sfs scanner shows there is nothing wrong with the system or server.\n\nUpon further researching the error, there is something called KernalBase.dll that is throwing this error.\n\nHow can this be resolved?\n\n### Steps to reproduce\n\nI'm not sure how to reproduce the issue, but occurring and creating issue at user's end.","Url":"https://github.com/dotnet/winforms/issues/13254","RelatedDescription":"Open issue \"Random error is thrown at runtime at runtime\" (#13254)"},{"Id":"2975628131","IsPullRequest":true,"CreatedAt":"2025-04-07T05:45:50","Actor":"dotnet-maestro[bot]","Number":"13252","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250406.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2680495)\n- **Date Produced**: April 6, 2025 2:57:57 PM UTC\n- **Commit**: [367e0a8a23e444a94c029fcb72dcb4ac66bd6717](https://github.com/dotnet/runtime/commit/367e0a8a23e444a94c029fcb72dcb4ac66bd6717)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Management**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25205.3 to 10.0.0-preview.4.25206.1][1]\n\n[1]: https://github.com/dotnet/runtime/compare/a2e1d21bb4...367e0a8a23\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13252)","Url":"https://github.com/dotnet/winforms/pull/13252","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13252)"},{"Id":"2975628178","IsPullRequest":true,"CreatedAt":"2025-04-07T05:45:45","Actor":"dotnet-maestro[bot]","Number":"13253","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [b9a1a4bb-2302-4987-3b3d-08d8b8050dda](https://maestro.dot.net/subscriptions?search=b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n- **Build**: [20250406.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2680561)\n- **Date Produced**: April 6, 2025 5:01:30 PM UTC\n- **Commit**: [37f732fbfa006386f89a16be417278ea4fee375e](https://github.com/dotnet/arcade/commit/37f732fbfa006386f89a16be417278ea4fee375e)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25204.12 to 10.0.0-beta.25206.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/25bd392632...37f732fbfa\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13253)","Url":"https://github.com/dotnet/winforms/pull/13253","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13253)"},{"Id":"2975516893","IsPullRequest":false,"CreatedAt":"2025-04-07T03:22:02","Actor":"MelonWang1","Number":"13251","RawContent":null,"Title":"Columns and rows are not refreshed in the TableLayoutPanel after you click the X to close the Column and Row Styles dialog in the NET481 DemoConsole application","State":"open","Body":"### .NET version\n\nBranch **Issue_12830_Multi-Target_DemoConsole** from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis issue caused by the #12996, works well in .NET  DemoConsole application. Has previous .NET GH issue: [2508](https://github.com/microsoft/winforms-designer/issues/2508).\n\n### Issue description\n\nColumns and rows are not refreshed in the TableLayoutPanel after you click the X to close the Column and Row Styles dialog in the NET481 DemoConsole application.\n\nCurrent Behavior (.NET Framework 4.8.1):\n\nhttps://github.com/user-attachments/assets/a757ec80-6e1a-4df8-bafa-2c44cdd451e2\n\nExpected Behavior (.NET 10):\n\nhttps://github.com/user-attachments/assets/9511417c-b04d-4810-b810-eb8adea33145\n\n### Steps to reproduce\n\n1. Run the test the sample app: [DemoConsole](https://github.com/dotnet/winforms/issues/src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) **Issue_12830_Multi-Target_DemoConsole** branch.\n2. Switch to \"TabCotrol and TableLayoutPanel\" tab.\n3. Click the Edit Rows and Columns... in TableLayoutPanel smart tag to open the Column and Row Styles dialog.\n4. Click the X in the top-right corner to close the dialog.\n5. Click the Add Column in smart tag and observe the columns in TableLayoutPanel control.","Url":"https://github.com/dotnet/winforms/issues/13251","RelatedDescription":"Open issue \"Columns and rows are not refreshed in the TableLayoutPanel after you click the X to close the Column and Row Styles dialog in the NET481 DemoConsole application\" (#13251)"},{"Id":"2975461149","IsPullRequest":false,"CreatedAt":"2025-04-07T02:30:24","Actor":"Zheng-Li01","Number":"13249","RawContent":null,"Title":"The controls are cannot be deleted under 'TabControl and TableLayoutPanel' tab by using delete keyboard or Delete item under Edit menu when running the DemoConsole application on net481","State":"open","Body":"### .NET version\n\nBranch Issue_12830_Multi-Target_DemoConsole from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe issue caused by the https://github.com/dotnet/winforms/pull/12996.\nAll controls can be deleted except the DataGridView control(knwon issue: [10931](https://github.com/dotnet/winforms/issues/10931)) when running the DemoConsole application on .NET\n\n\n### Issue description\n\nThe controls are cannot be deleted under 'TabControl and TableLayoutPanel' tab by using delete keyboard or Delete item under Edit menu  when running the DemoConsole application on net481\n**.NET:**\n![Image](https://github.com/user-attachments/assets/313d121a-0044-4c77-82b3-9cb1bad975ab)\n\n**.NET Framework:**\n![Image](https://github.com/user-attachments/assets/03ea1d21-66f1-41cf-b7b4-8bf45bbe7697)\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/issues/src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) Issue_12830_Multi-Target_DemoConsole branch","Url":"https://github.com/dotnet/winforms/issues/13249","RelatedDescription":"Open issue \"The controls are cannot be deleted under 'TabControl and TableLayoutPanel' tab by using delete keyboard or Delete item under Edit menu when running the DemoConsole application on net481\" (#13249)"},{"Id":"2975453630","IsPullRequest":false,"CreatedAt":"2025-04-07T02:23:20","Actor":"Zheng-Li01","Number":"13248","RawContent":null,"Title":"The BindingNavigate control missed under ToolStripContainer tab when running the DemoConsole application on net481","State":"open","Body":"### .NET version\n\nBranch Issue_12830_Multi-Target_DemoConsole from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nthis issue caused by the https://github.com/dotnet/winforms/pull/12996, the BindingNavigate control displayed well when running the DemoConsole application on .NET\n\n### Issue description\n\nThe BindingNavigate control missed under ToolStripContainer tab when running the DemoConsole application on net481\n**,NET:**\n![Image](https://github.com/user-attachments/assets/0e099ffa-5036-46a6-a91f-a574844cf396)\n\n**.NET Framework:**\n![Image](https://github.com/user-attachments/assets/69fbb50d-56a7-4338-bb30-fa46e57c666a)\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/issues/src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) Issue_12830_Multi-Target_DemoConsole branch","Url":"https://github.com/dotnet/winforms/issues/13248","RelatedDescription":"Open issue \"The BindingNavigate control missed under ToolStripContainer tab when running the DemoConsole application on net481\" (#13248)"},{"Id":"2975448440","IsPullRequest":false,"CreatedAt":"2025-04-07T02:18:37","Actor":"Zheng-Li01","Number":"13247","RawContent":null,"Title":"Copy & paste the ToolStrip & MenuStrip & contextMenuStrip controls without existing items when running the DemoConsole application on net481","State":"open","Body":"### .NET version\n\nBranch Issue_12830_Multi-Target_DemoConsole from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this issue caused by the https://github.com/dotnet/winforms/pull/12996.\nNot support copy & paste the ToolStrip & MenuStrip & contextMenuStrip controls when running the DemoConsole application on .NET\n\n### Issue description\n\nCopy & paste the ToolStrip & MenuStrip & contextMenuStrip controls without existing items when running the DemoConsole application on net481\n![Image](https://github.com/user-attachments/assets/ccaa1ee3-e6c5-4af7-b577-9edad42e1d23)\n![Image](https://github.com/user-attachments/assets/1339d9e3-af49-42b8-9aa8-af5d9b6e2af7)\n\n\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/issues/src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) Issue_12830_Multi-Target_DemoConsole branch","Url":"https://github.com/dotnet/winforms/issues/13247","RelatedDescription":"Open issue \"Copy & paste the ToolStrip & MenuStrip & contextMenuStrip controls without existing items when running the DemoConsole application on net481\" (#13247)"},{"Id":"2974367980","IsPullRequest":false,"CreatedAt":"2025-04-06T21:55:44","Actor":"JOBAYERAHAMED00","Number":"13243","RawContent":null,"Title":"Uu1","State":"closed","Body":"### Environment\n\nNn11\n\n### .NET version\n\nNn11\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nNn11\n\n### Steps to reproduce\n\n11nn\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/13243","RelatedDescription":"Closed issue \"Uu1\" (#13243)"},{"Id":"2975014767","IsPullRequest":false,"CreatedAt":"2025-04-06T15:13:06","Actor":"KalleOlaviNiemitalo","Number":"13246","RawContent":null,"Title":"Application.ThreadContext.FromId reads from s_contextHash while another thread may be writing","State":"open","Body":"### .NET version\n\n9.0.3\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI guess it would have worked in .NET 7, because <https://github.com/dotnet/winforms/pull/8161> was not merged there.\n\n### Issue description\n\nThe Application.ThreadContext.FromId method reads from the `s_contextHash` dictionary without locking.  This can cause an error if another thread writes to the dictionary at the same time.\n\n<https://github.com/dotnet/winforms/blob/5bf1bff0e58e41f748a8a6d7c666ed28e033e318/src/System.Windows.Forms/src/System/Windows/Forms/Application.ThreadContext.cs#L513-L521>\n\nWriters do `lock (s_tcInternalSyncObject)` but this reader doesn't.  AFAICT, the callers of Application.ThreadContext.FromId don't lock it either.\n\nBefore <https://github.com/dotnet/winforms/pull/8161>, `s_contextHash` used to be a Hashtable, which is safe for one writer in parallel with multiple readers.  Dictionary\\<TKey, TValue\\> is not safe for that use.\n\n\n### Steps to reproduce\n\nFound by source code inspection, not reproduced.","Url":"https://github.com/dotnet/winforms/issues/13246","RelatedDescription":"Open issue \"Application.ThreadContext.FromId reads from s_contextHash while another thread may be writing\" (#13246)"},{"Id":"2974885848","IsPullRequest":true,"CreatedAt":"2025-04-06T11:17:22","Actor":"pcblues","Number":"13245","RawContent":null,"Title":"Changes and testing for 12042 review","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12042 - TreeNode and ListItem not displaying in dark mode during editing, even though application is set to be in dark mode.\r\n\r\n\r\n## Proposed changes\r\n\r\nIf the application is in dark mode, capture the parent's windows message to identify the start of editing, and change the colour of the brush to match the parent's window color. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCorrection of incorrect color selection.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\nI tried to limit the impact of the change to only occurring when the application is in dark mode. I'm not sure of the impact, if any, on custom ListView subitems, or custom-drawn TreeNodes.\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://github.com/user-attachments/assets/a6dbc58a-68c0-4580-a4f2-0c05dd873245)\r\n\r\n![image](https://github.com/user-attachments/assets/1cdefca2-f029-43bc-965b-d0e3f6a87e5d)\r\n\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://github.com/user-attachments/assets/3b9dfb3a-69fd-4b74-825b-82bd75d6d784)\r\n\r\n![image](https://github.com/user-attachments/assets/b875af92-df60-4781-a85c-ff360493b4bd)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nI used the test application provided to highlight the bug in the ticket to test the new behaviour.\r\n\r\nNote that I added the following lines (uncommitted) to tests\\integration\\WinformsControlsTest\\Program.cs\r\nin order to enable dark mode.\r\n\r\nIt made the buttons look hard to read.\r\n        //Application.EnableVisualStyles();\r\n        //Application.SetHighDpiMode(HighDpiMode.PerMonitorV2);\r\n#pragma warning disable WFO5001\r\n        Application.SetColorMode(SystemColorMode.Dark);\r\n\r\nI haven't tested with the commented out option uncommented.\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12672)\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12674)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13245)","Url":"https://github.com/dotnet/winforms/pull/13245","RelatedDescription":"Open PR \"Changes and testing for 12042 review\" (#13245)"},{"Id":"2974692698","IsPullRequest":true,"CreatedAt":"2025-04-06T05:39:11","Actor":"dotnet-maestro[bot]","Number":"13244","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250405.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2680085)\n- **Date Produced**: April 5, 2025 5:15:34 PM UTC\n- **Commit**: [a2e1d21bb4faf914363968b812c990329ba92d8e](https://github.com/dotnet/runtime/commit/a2e1d21bb4faf914363968b812c990329ba92d8e)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Management**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25204.11 to 10.0.0-preview.4.25205.3][1]\n\n[1]: https://github.com/dotnet/runtime/compare/5854863b33...a2e1d21bb4\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13244)","Url":"https://github.com/dotnet/winforms/pull/13244","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13244)"},{"Id":"2973868742","IsPullRequest":true,"CreatedAt":"2025-04-05T05:44:00","Actor":"dotnet-maestro[bot]","Number":"13239","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250404.11](https://dev.azure.com/dnceng/internal/_build/results?buildId=2679784)\n- **Date Produced**: April 5, 2025 4:10:22 AM UTC\n- **Commit**: [5854863b33ba57d45f9c25f38634e092687c49aa](https://github.com/dotnet/runtime/commit/5854863b33ba57d45f9c25f38634e092687c49aa)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Management**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25203.14 to 10.0.0-preview.4.25204.11][1]\n\n[1]: https://github.com/dotnet/runtime/compare/720f517d06...5854863b33\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13239)","Url":"https://github.com/dotnet/winforms/pull/13239","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13239)"},{"Id":"2973868779","IsPullRequest":true,"CreatedAt":"2025-04-05T05:38:40","Actor":"dotnet-maestro[bot]","Number":"13240","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [b9a1a4bb-2302-4987-3b3d-08d8b8050dda](https://maestro.dot.net/subscriptions?search=b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n- **Build**: [20250404.12](https://dev.azure.com/dnceng/internal/_build/results?buildId=2679778)\n- **Date Produced**: April 5, 2025 2:15:56 AM UTC\n- **Commit**: [25bd3926321ea9b6ca66c772e03a76e7a5010227](https://github.com/dotnet/arcade/commit/25bd3926321ea9b6ca66c772e03a76e7a5010227)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25203.1 to 10.0.0-beta.25204.12][1]\n\n[1]: https://github.com/dotnet/arcade/compare/63c161539b...25bd392632\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13240)","Url":"https://github.com/dotnet/winforms/pull/13240","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13240)"},{"Id":"2971278839","IsPullRequest":true,"CreatedAt":"2025-04-04T21:53:48","Actor":"dotnet-maestro[bot]","Number":"13236","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [b9a1a4bb-2302-4987-3b3d-08d8b8050dda](https://maestro.dot.net/subscriptions?search=b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n- **Build**: [20250403.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2678399)\n- **Date Produced**: April 3, 2025 9:17:23 AM UTC\n- **Commit**: [63c161539bde4a68f27bc66598137da578331d85](https://github.com/dotnet/arcade/commit/63c161539bde4a68f27bc66598137da578331d85)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/3fddad170a...63c161539b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13236)","Url":"https://github.com/dotnet/winforms/pull/13236","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13236)"},{"Id":"2973063276","IsPullRequest":false,"CreatedAt":"2025-04-04T18:05:41","Actor":"KlausLoeffelmann","Number":"13237","RawContent":null,"Title":"WFO2001: Analyzer doesn't trigger the 'wrong async overload' warning with implicit member access.","State":"open","Body":"There are 2 ways to use `InvokeAsync` - from the outside, which always needs explicit member access, and from the inside, which can be using explicit member access (`this` or `Me` in VB), but usually, we do not do it and use it implicitly. Inside most Microsoft repos, _.editorconfig_ is even configures to make the explicit usage where implicit is possible an error (see code sample below).\n\nFor the implicit member access, the WFO2001 Analyzer is not being triggered.\n\n```CSharp\n// Example 1: Explicit member access (control.InvokeAsync)\nprivate async void UpdateButtonFromBackgroundThread()\n{\n    var result = await Task.Run(() => PerformLongRunningOperation())\n                           .ConfigureAwait(false);\n    \n    // Explicit access is necessary - we need to define the instance.\n>>> await button1.InvokeAsync(() => {\n        button1.Text = result;\n        button1.Enabled = true;\n    });\n}\n\n// Example 2: Implicit use from within a Form\nprivate async void MyForm_Load(object sender, EventArgs e)\n{\n    var data = await Task.Run(() => FetchDataFromDatabase())\n                        .ConfigureAwait(false);\n    \n    // .editorconfig is often configured to have including this/me causing an error.\n    // We have to InvokeAsync often as implicit member access.\n>>> await [this.]InvokeAsync(() => {\n        dataGridView1.DataSource = data;\n        statusLabel.Text = \"Data loaded successfully\";\n    });\n}\n```\n\n","Url":"https://github.com/dotnet/winforms/issues/13237","RelatedDescription":"Open issue \"WFO2001: Analyzer doesn't trigger the 'wrong async overload' warning with implicit member access.\" (#13237)"},{"Id":"2971278678","IsPullRequest":true,"CreatedAt":"2025-04-04T05:38:57","Actor":"dotnet-maestro[bot]","Number":"13235","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250403.14](https://dev.azure.com/dnceng/internal/_build/results?buildId=2678961)\n- **Date Produced**: April 4, 2025 3:18:46 AM UTC\n- **Commit**: [720f517d064d394d6862d9e121ef4664ffaca040](https://github.com/dotnet/runtime/commit/720f517d064d394d6862d9e121ef4664ffaca040)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Management**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n\n[1]: https://github.com/dotnet/runtime/compare/970070e3b7...720f517d06\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13235)","Url":"https://github.com/dotnet/winforms/pull/13235","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13235)"},{"Id":"2971094261","IsPullRequest":false,"CreatedAt":"2025-04-04T02:10:55","Actor":"Liv-Goh","Number":"13234","RawContent":null,"Title":"Extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application","State":"open","Body":"### .NET version\n\nBranch **Issue_12830_Multi-Target_DemoConsole** from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes\n\n### Issue description\n\n**Current Behavior (.NET Framework 4.8.1)**\nExtra ToolStripContainer Tasks dialog pops up when running the DemoConsole application \n\nhttps://github.com/user-attachments/assets/e700b96a-c596-48c9-8556-c0f89472615a\n\n**Expected Behavior (.NET 10)**\nNo extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application \n\nhttps://github.com/user-attachments/assets/f8c3c5b8-7c2f-4150-96e2-22f91cf5298b\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) **Issue_12830_Multi-Target_DemoConsole** branch\n\n\n### More Info\nThis bug is created to resolve before https://github.com/dotnet/winforms/pull/12996 is merged","Url":"https://github.com/dotnet/winforms/issues/13234","RelatedDescription":"Open issue \"Extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application\" (#13234)"},{"Id":"2968608924","IsPullRequest":false,"CreatedAt":"2025-04-03T18:53:21","Actor":"NagarajManimaran","Number":"13232","RawContent":null,"Title":"CustomToolStrip Not Selectable & Smart Tag not shown in .NET Core Designer","State":"closed","Body":"### Environment\n\nVisual Studio professional 2022 - version 17.13.0\n\n### .NET version\n\n.NetCore 6,7,8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nNo, it doesn't work on previous NetCore versions.\n\n### Issue description\n\n**Description:**\n\nWe encountered an issue when using a CustomToolStrip in a .NET Core WinForms designer.\n\nWhen we drag and drop the CustomToolStrip onto the form, it appears in the designer.\n\nHowever, when we click on the control, it cannot be selected, and the smart tag menu and \"Add Controls\" dropdown do not appear.\n\nThis issue does not occur in .NET Framework, where everything works as expected.\n\n**Implementation Details:**\n\nWe created CustomToolStrip, inheriting from ToolStrip.\n\nWe also implemented CustomToolStripDesigner, which uses reflection to load System.Windows.Forms.Design.ToolStripDesigner.\n\nIn .NET Framework, the reflection mechanism works correctly, allowing the CustomToolStrip to behave the same as the standard ToolStrip (including selection, smart tags, and designer support).\n\nHowever, in .NET Core, the reflection does not seem to work properly, preventing the designer from enabling the expected functionality for CustomToolStrip.\n\n\n**Expected Behavior:**\n\n![Image](https://github.com/user-attachments/assets/387b05a9-8158-4362-bdff-7c612a7b8b56)\n\nCustomToolStrip should be selectable.\n\nThe smart tag menu and \"Add Controls\" dropdown should be visible in the designer.\n\n**Issue in .NET Core:**\n\n![Image](https://github.com/user-attachments/assets/f67aec32-d598-47cd-89bf-e7d9373fe097)\n\nThe CustomToolStrip is not selectable in the designer.\n\nThe smart tag menu and \"Add Controls\" dropdown do not appear.\n\n\n\nCould you please provide a solution or workaround for enabling proper designer support in .NET Core?\n\n[customcontrol.zip](https://github.com/user-attachments/files/19581940/customcontrol.zip)\n\n### Steps to reproduce\n\n**Steps to Reproduce:**\n\nDrag and drop CustomToolStrip onto a WinForms form in a .NET Core project.\n\nTry to select or click on CustomToolStrip in the designer.\n\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/13232","RelatedDescription":"Closed issue \"CustomToolStrip Not Selectable & Smart Tag not shown in .NET Core Designer\" (#13232)"},{"Id":"2970239912","IsPullRequest":false,"CreatedAt":"2025-04-03T17:23:18","Actor":"KlausLoeffelmann","Number":"13233","RawContent":null,"Title":"[API Suggestion] Consider Control/Window Cloaking During Initialization","State":"open","Body":"## TL;DR\n\nImplement a cloaking mechanism for WinForms controls during initialization to eliminate jarring visual flashes, particularly critical for dark mode users and those with photosensitivity. This approach leverages Windows DWM cloaking flags to keep controls hidden until fully themed and ready, significantly improving accessibility compliance and user experience across all applications.\n\n## Rationale\n\nThe current WinForms runtime suffers from momentary visual flashing when controls are created or initialized. This occurs because the Desktop Window Manager (DWM) applies default white rendering before the application can override with themed styling. For users with dark mode enabled or those with photosensitivity conditions, this creates an uncomfortable white flash effect. (I am target-audience here, it REALLY does!!)\n\nThis issue represents both a user-experience-problem and a significant accessibility concern. Visual flashing during UI transitions can trigger adverse reactions in users with photosensitive epilepsy, migraines, or visual processing sensitivities. Modern accessibility standards (WCAG 2.1) explicitly recommend avoiding content that flashes to prevent these issues.\n\nSimilar problems were previously resolved in Windows components like File Explorer and addressed in Chromium-based browsers, demonstrating that this issue is recognized and solvable at the platform level. The WinForms runtime should implement an equivalent solution to ensure consistent visual experiences, especially for dark mode and high-contrast scenarios.\n\n## 30,000-Feet View of the principal Approach\n\nI propose implementing a standardized cloaking mechanism in the WinForms runtime that would:\n\n1. Temporarily make controls/windows invisible during initialization using DWM cloaking flags, either by a global setting which leads to that behavior implicitly, or with a per-instance-approach by changing certain behaviors on control itself.\n2. TBD: Scope of cloaking/duration of cloaking:\n   a) Only Pre-Filling background\n      - Pre-fill the background with the appropriate theme color before rendering begins.\n      - Remove cloak.\n      \n   b) Whole initialization process:\n      - Pre-fill the background with the appropriate theme color before rendering begins.\n      - Complete all initialization, property setting, and child control population.\n      - Remove the cloak only when the control is fully ready to display.\n\n### New APIs on Application\n\nAn additional setting similar to the `SetHighDpiMode` method or the `HighDpiMode` property on Application:\n\n`Application.SetCloakControlsMode(Never|Always|TypeBased|InstanceBased)` with its default as backwards compatible: `Never`.\n\nFor the Options `CloakControlsMode.TypeBased` and `CloakControlsMode.InstanceBased` we would need a global event handler based on Application (rough idea):\n\nThe EventArgs needed:\n\n```csharp\n/// <summary>\n/// Event arguments for cloaking decisions.\n/// </summary>\npublic class CloakEventArgs : EventArgs\n{\n    /// <summary>\n    /// Initializes a new instance of this class.\n    /// </summary>\n    public CloakEventArgs(Type controlType, Control? control = null)\n    {\n        ControlType = controlType;\n        Control = control;\n        ShouldCloak = false; // Default to false\n    }\n\n    /// <summary>\n    ///  The type of control being evaluated for cloaking.\n    /// </summary>\n    public Type ControlType { get; }\n\n    /// <summary>\n    ///  The instance of the control being evaluated for cloaking (if applicable).\n    /// </summary>\n    public Control? Control { get; set; }\n\n    /// <summary>\n    ///  Gets or sets whether the control should be cloaked.\n    ///  Set to true by event handlers to enable cloaking.\n    /// </summary>\n    public bool ShouldCloak { get; set; }\n}\n```\n\nThen, the individual decision for cloaking a type for example, could look something like this:\n\n```csharp\nstatic class Program\n{\n    [STAThread]\n    static void Main()\n    {\n        Application... (Init stuff)\n        \n        // Register cloaking handlers\n        Application.CloakingRequested += OnCloakingRequested;\n        \n        Application.Run(new MainForm());\n    }\n    \n    private static void OnCloakingRequested(object sender, CloakEventArgs e)\n    {\n        // Type-level decisions\n        Type type = e.ControlType;\n        \n        // Check for specific types that should be cloaked\n        if (type == typeof(ToolStrip) || \n            type == typeof(MenuStrip) || \n            type == typeof(StatusStrip))\n        {\n            e.ShouldCloak = true;\n            return;\n        }\n        \n        // Check for types in specific namespaces\n        string ns = type.Namespace ?? \"\";\n        if (ns.StartsWith(\"MyCompany.Controls.Special\"))\n        {\n            e.ShouldCloak = true;\n            return;\n        }\n        \n        // Default is false (already set in the event args)\n    }\n}\n```\n\nBy implementing this enhancement, the .NET WinForms runtime would significantly improve the experience for users of dark mode and those with accessibility needs, bringing it in line with modern UI framework expectations and accessibility standards.\n\nThere are several approaches then for the actual cloaking approach on windows level, which are under investigation and subject for follow-ups and amendments.\n\n## Why not just having a respective `CloakOnInit` property on Control?\n\nSounds way easier right? Just implement it ambient, and we would be done.\nWell, I think the problem is the way, that the WinForms Desiger's CodeDOM serialization has been originally ... designed. Namely, the order in which properties should be set, must not matter, except where it is absolutely necessary in which cases, we'd need to use `ISupportInitialization`. And that does not fly to retro-fit on control AT ALL.\n\n## List of new APIs\n\nTBD.\n","Url":"https://github.com/dotnet/winforms/issues/13233","RelatedDescription":"Open issue \"[API Suggestion] Consider Control/Window Cloaking During Initialization\" (#13233)"},{"Id":"2968399448","IsPullRequest":false,"CreatedAt":"2025-04-03T05:41:24","Actor":"Zheng-Li01","Number":"13231","RawContent":null,"Title":"The (none) text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nThe **(none)** text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application\n**.NET 10:** \n![Image](https://github.com/user-attachments/assets/1a04101c-9b7d-40e8-b533-8a300e096fdf)\n\n**.NET framework 4.8.1:**\n![Image](https://github.com/user-attachments/assets/c9b83dad-2cd3-42a6-b162-43df7b9ef4bd)\n\n**.NET Application:**\n![Image](https://github.com/user-attachments/assets/e16c6025-0ad0-4032-9b41-c4a677106e25)\n\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/13231","RelatedDescription":"Open issue \"The (none) text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application\" (#13231)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-08T03:30:27.4687037Z","RunDurationInMilliseconds":418}