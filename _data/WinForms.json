{"Data":{"GitHub":{"Issues":[{"Id":"2716447681","IsPullRequest":true,"CreatedAt":"2024-12-04T03:07:25","Actor":"JeremyKuhne","Number":"12581","RawContent":null,"Title":"Add WPF test visibility to System.Private.Windows.Core","State":"open","Body":"Add an entry for every test assembly. Not all of these projects exist yet, but they will soon. I'll be forcing all of the WPF test projects to the Open key.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12581)","Url":"https://github.com/dotnet/winforms/pull/12581","RelatedDescription":"Open PR \"Add WPF test visibility to System.Private.Windows.Core\" (#12581)"},{"Id":"2716428850","IsPullRequest":true,"CreatedAt":"2024-12-04T02:49:22","Actor":"Zheng-Li01","Number":"12580","RawContent":null,"Title":"Add code coverage for DataGridViewComboBoxCell.ObjectCollection","State":"open","Body":"related #10453\r\n\r\n## Proposed changes\r\nAdd unit tests for  DataGridViewComboBoxCell.ObjectCollection.cs to test its properties & methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12580)","Url":"https://github.com/dotnet/winforms/pull/12580","RelatedDescription":"Open PR \"Add code coverage for DataGridViewComboBoxCell.ObjectCollection\" (#12580)"},{"Id":"2716091143","IsPullRequest":true,"CreatedAt":"2024-12-03T23:06:48","Actor":"JeremyKuhne","Number":"12579","RawContent":null,"Title":"Define WIC HRESULTs","State":"closed","Body":"Needed for WPF scenarios currently and likely for our own usages as well eventually.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12579)","Url":"https://github.com/dotnet/winforms/pull/12579","RelatedDescription":"Closed or merged PR \"Define WIC HRESULTs\" (#12579)"},{"Id":"2715608604","IsPullRequest":true,"CreatedAt":"2024-12-03T19:23:51","Actor":"ViktorHofer","Number":"12577","RawContent":null,"Title":"Annotate test utility projects so that they don't get built inside the VMR","State":"closed","Body":"I noticed that these get built in the normal product build that shouldn't build tests.","Url":"https://github.com/dotnet/winforms/pull/12577","RelatedDescription":"Closed or merged PR \"Annotate test utility projects so that they don't get built inside the VMR\" (#12577)"},{"Id":"2697792427","IsPullRequest":true,"CreatedAt":"2024-12-03T17:47:40","Actor":"Zheng-Li01","Number":"12553","RawContent":null,"Title":"Add code coverage for DataGridViewColumnDesignTimeVisibleAttribute","State":"closed","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\nAdd unit tests for DataGridViewColumnDesignTimeVisibleAttribute.cs to test its properties & methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12553)","Url":"https://github.com/dotnet/winforms/pull/12553","RelatedDescription":"Closed or merged PR \"Add code coverage for DataGridViewColumnDesignTimeVisibleAttribute\" (#12553)"},{"Id":"2715616454","IsPullRequest":true,"CreatedAt":"2024-12-03T17:31:57","Actor":"lonitra","Number":"12578","RawContent":null,"Title":"Add File Classification for runtime pack","State":"open","Body":"Related: https://github.com/dotnet/windowsdesktop/issues/4796\r\n\r\nThis change includes file classification that is needed for the runtime pack in windowsdesktop in our FileClassification.props to avoid maintaining this list in the windowsdesktop repo. These dlls come from winforms so they should be maintained here and simply pulled into windowsdesktop [like how we are already doing for the ref pack](https://github.com/dotnet/windowsdesktop/blob/main/src/windowsdesktop/src/sfx/Microsoft.WindowsDesktop.App.Ref.sfxproj#L25). The list is currently being maintained https://github.com/dotnet/windowsdesktop/blob/main/src/windowsdesktop/src/sfx/Microsoft.WindowsDesktop.App.Runtime.sfxproj#L22-L39\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12578)","Url":"https://github.com/dotnet/winforms/pull/12578","RelatedDescription":"Open PR \"Add File Classification for runtime pack\" (#12578)"},{"Id":"2714974182","IsPullRequest":true,"CreatedAt":"2024-12-03T13:41:14","Actor":"dotnet-maestro[bot]","Number":"12576","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241203.1\r\n- **Date Produced**: December 3, 2024 10:30:47 AM UTC\r\n- **Commit**: 12afdedd8050847aa90473e254fa782f54360990\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5b9b8d3ae6...12afdedd80\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12576)","Url":"https://github.com/dotnet/winforms/pull/12576","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12576)"},{"Id":"2714318552","IsPullRequest":true,"CreatedAt":"2024-12-03T08:25:17","Actor":"Liv-Goh","Number":"12575","RawContent":null,"Title":"Add unit test for MaskDesignerDialog","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n1. Add unit test MaskDesignerDialogTests.cs for public properties and method of the MaskDesignerDialog.\r\n2. Enable nullability in MaskDesignerDialogTests..cs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12575)","Url":"https://github.com/dotnet/winforms/pull/12575","RelatedDescription":"Open PR \"Add unit test for MaskDesignerDialog\" (#12575)"},{"Id":"2710275894","IsPullRequest":false,"CreatedAt":"2024-12-03T00:34:35","Actor":"Zheng-Li01","Number":"12569","RawContent":null,"Title":"When setting DockStyle.Fill for the axWindowsMediaPlayer control, the test program reports an error System.Runtime.InteropServices.COMException: “Catastrophic failure (0x8000FFFF (E_ UNEXPECTED))”","State":"closed","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe issue cannot reproduce on .NET 6.0 & 7.0, can reproduce from 8.0 to latest  ,NET 10.0\n\n### Issue description\n\nWhen setting DockStyle.Fill for the axWindowsMediaPlayer control, the test program reports an error System.Runtime.InteropServices.COMException: “Catastrophic failure (0x8000FFFF (E_ UNEXPECTED))”\n\n**6.0 & 7.0 Results:**\n![Image](https://github.com/user-attachments/assets/3f60d613-53aa-418a-b6b3-49cb2c30fbec)\n\n**8.0 & 9.0 & 10.0 Results:**\n![Image](https://github.com/user-attachments/assets/7910e5bd-76e6-49a0-8ef2-af9717bf3ac9)\n\n**8.0 & 9.0 & 10.0 uncomment_ this.axWindowsMediaPlayer1.Dock = DockStyle.Fill_codeline_Form1.cs_Results:**\n![Image](https://github.com/user-attachments/assets/e121bf31-e8b2-4a2a-92dc-8587cdb8843c)\n\n**8.0 & 9.0 & 10.0 uncomment_ form.MdiParent = this;_Form2.cs_Results Results:**\n![Image](https://github.com/user-attachments/assets/6bd46241-8149-4252-b152-88af9232bf30)\n\n\n### Steps to reproduce\n\n1. Open the attached application [RepoApplication.zip](https://github.com/user-attachments/files/17971955/RepoApplication.zip)\n2. Run the application\n3. Observe the results:\n\n**Call Stack:**\n![Image](https://github.com/user-attachments/assets/d867080b-1b67-4d3b-8b96-280b15defdc3)\n[CallStack.txt](https://github.com/user-attachments/files/17971993/CallStack.txt)\n\n**More info:**\nThe original feedback link:  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2308642","Url":"https://github.com/dotnet/winforms/issues/12569","RelatedDescription":"Closed issue \"When setting DockStyle.Fill for the axWindowsMediaPlayer control, the test program reports an error System.Runtime.InteropServices.COMException: “Catastrophic failure (0x8000FFFF (E_ UNEXPECTED))”\" (#12569)"},{"Id":"2702085588","IsPullRequest":true,"CreatedAt":"2024-12-02T23:40:36","Actor":"dotnet-maestro[bot]","Number":"12562","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241201.1\r\n- **Date Produced**: December 2, 2024 2:25:25 AM UTC\r\n- **Commit**: 5b9b8d3ae6aaf2a0eb23ff9e2b32ddd64556d442\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24577.1 to 10.0.0-alpha.1.24601.1][5]\r\n\r\n[5]: https://github.com/dotnet/runtime/compare/fe3d5b5f70...5b9b8d3ae6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12562)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/12562","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12562)"},{"Id":"2699922332","IsPullRequest":false,"CreatedAt":"2024-12-02T21:42:15","Actor":"ricardobossan","Number":"12556","RawContent":null,"Title":"`ToolTip` Appears Partially Off-Screen on Left Border","State":"closed","Body":"### .NET version\n\nsdk: 9.0.100\nMicrosoft.NET.Sdk.IL: 10.0.0-alpha.1.24577.1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n## Current Behavior\nRelated to [6151](https://github.com/microsoft/winforms-designer/issues/6151#event-15209033892)\n\nThe `ToolTip` width that extends beyond the left border of the screen is cut off.\n\n![Image](https://github.com/user-attachments/assets/c2227b6d-886a-4db9-bd91-8b1910d9499e)\n\n## Expected Behavior\n\nThe `ToolTip` should be displayed in full, regardless of its proximity to the left edge of the screen.\n\n### Steps to reproduce\n\n1. Create a .NET 5+ WinForms project\n2. Add a `ToolStrip` control\n3. Add some buttons to it\n4. Set the `ToolStrip`'s `TabStop` property to `true`\n5. Run the project\n6. Move the form so it aligns with the left edge of the screen, or maximize it.\n7. Navigate between the buttons using the arrow keys.","Url":"https://github.com/dotnet/winforms/issues/12556","RelatedDescription":"Closed issue \"`ToolTip` Appears Partially Off-Screen on Left Border\" (#12556)"},{"Id":"2700015612","IsPullRequest":true,"CreatedAt":"2024-12-02T21:42:14","Actor":"ricardobossan","Number":"12557","RawContent":null,"Title":"ToolTip Appears Partially Off-Screen on Left Border","State":"closed","Body":" Fixes #12556\r\n\r\n## Proposed changes\r\n\r\n- Updates the `Reposition()` method in the `ToolTip` class to correctly handle cases where the tooltip extends beyond the left boundary of the screen, ensuring it is fully visible and not truncated.\r\n\r\n## Customer Impact\r\n\r\nThe tooltip will be fully visible regardless of how close it is to the left border of the screen.\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://github.com/user-attachments/assets/a1fce753-6bd6-499f-a3cc-6956205f13ec)\r\n\r\n### After\r\n\r\n![after](https://github.com/user-attachments/assets/541e26db-f2f3-4f40-bf2f-da754e153109)\r\n\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Test environment(s)\r\n\r\nSDK: 9.0.100\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12557)","Url":"https://github.com/dotnet/winforms/pull/12557","RelatedDescription":"Closed or merged PR \"ToolTip Appears Partially Off-Screen on Left Border\" (#12557)"},{"Id":"2703426823","IsPullRequest":true,"CreatedAt":"2024-12-02T21:34:36","Actor":"Sachin-NI","Number":"12564","RawContent":null,"Title":"Resolved issue in sending WM_DESTROY msg to ActiveX controls","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12551\r\n\r\n\r\n## Proposed changes\r\n\r\n-  The `DetachWindow` method always sets `IsHandleCreated` to false. This causes the if condition to always be false, preventing the WM_DESTROY message from being sent to ActiveX controls. To fix this, we now store the value of `IsHandleCreated` in a boolean variable before calling the `DetachWindow` method. This was the previous behavior but got disrupted due to [this change](https://github.com/dotnet/winforms/commit/834d0a0d364c82bf70803706886ff9a40bd3e090#diff-dc17cf8f6ef4b80a13b2386597a72cd7ae36cab7375583a0a1e76a62f7f9238fL3556).\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12564)","Url":"https://github.com/dotnet/winforms/pull/12564","RelatedDescription":"Closed or merged PR \"Resolved issue in sending WM_DESTROY msg to ActiveX controls\" (#12564)"},{"Id":"2704345065","IsPullRequest":true,"CreatedAt":"2024-12-02T21:30:57","Actor":"MelonWang1","Number":"12566","RawContent":null,"Title":"Add unit tests for DesignerVerbToolStripMenuItem","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test DesignerVerbToolStripMenuItemTests.cs for public properties and method of the DesignerVerbToolStripMenuItem.\r\n- Enable nullability in DesignerVerbToolStripMenuItem.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12566)","Url":"https://github.com/dotnet/winforms/pull/12566","RelatedDescription":"Closed or merged PR \"Add unit tests for DesignerVerbToolStripMenuItem\" (#12566)"},{"Id":"2713428426","IsPullRequest":false,"CreatedAt":"2024-12-02T21:28:31","Actor":"lonitra","Number":"12574","RawContent":null,"Title":"Expect Delayed Responses for Holiday Season","State":"open","Body":"Hi all, with the holidays coming up please expect delayed responses on issues and PRs until early January. Thank you!","Url":"https://github.com/dotnet/winforms/issues/12574","RelatedDescription":"Open issue \"Expect Delayed Responses for Holiday Season\" (#12574)"},{"Id":"2700455538","IsPullRequest":true,"CreatedAt":"2024-12-02T21:26:08","Actor":"Olina-Zhang","Number":"12558","RawContent":null,"Title":"[release/9.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange","State":"closed","Body":"BackPort of https://github.com/dotnet/winforms/pull/12513 to release/9.0\r\nBugs: https://github.com/dotnet/winforms/issues/12495, https://github.com/dotnet/winforms/issues/4454.\r\n/cc @Tanya-Solyanik @Olina-Zhang\r\n\r\n## Regression? \r\n\r\nFrom NET6.0\r\n\r\n## Customer Impact\r\n\r\nThere is an infinite loop to call ToolStripItemCollection.AddRange(ToolStripItemCollection toolStripItems) with items when they have same owner.\r\nChanges now: converts the ToolStripItemCollection into a temporary array (using ToArray()) to avoid modifying the original collection during iteration. This ensures that items can be safely added to the new collection without causing exceptions or unintended behavior, especially when items are removed from the original collection if they have a different owner control.\r\n\r\n## Risk\r\n\r\nLow\r\n\r\n## Testing\r\n\r\nManual scenario testing and unit test\r\nRegression tests\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12558)","Url":"https://github.com/dotnet/winforms/pull/12558","RelatedDescription":"Closed or merged PR \"[release/9.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange\" (#12558)"},{"Id":"2700591188","IsPullRequest":true,"CreatedAt":"2024-12-02T21:25:48","Actor":"Olina-Zhang","Number":"12559","RawContent":null,"Title":"[release/8.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange","State":"closed","Body":"BackPort of https://github.com/dotnet/winforms/pull/12513 to release/8.0\r\nBugs: https://github.com/dotnet/winforms/issues/12495, https://github.com/dotnet/winforms/issues/4454.\r\n/cc @Tanya-Solyanik @Olina-Zhang\r\n\r\n## Regression? \r\n\r\n- Yes, from .NET 6.0\r\n\r\n\r\n## Customer Impact\r\n\r\n- There is an infinite loop to call ToolStripItemCollection.AddRange(ToolStripItemCollection toolStripItems) with items when they have same owner.\r\n- Changes now: converts the ToolStripItemCollection into a temporary array (using ToArray()) to avoid modifying the original collection during iteration. This ensures that items can be safely added to the new collection without causing exceptions or unintended behavior, especially when items are removed from the original collection if they have a different owner control.\r\n\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Testing\r\n- Manual scenario testing and unit test\r\n- Regression tests\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12559)","Url":"https://github.com/dotnet/winforms/pull/12559","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange\" (#12559)"},{"Id":"2712979835","IsPullRequest":false,"CreatedAt":"2024-12-02T18:48:33","Actor":"JeremyKuhne","Number":"12573","RawContent":null,"Title":"Move test related code under a common test folder","State":"open","Body":"WPF has all of their tests under a single test folder. This is advantageous for a number of reasons.\n\n- Test code can rely on normal build folder hierarchy mechanisms (`Directory.build.*`, `.editorconfig`, etc.)\n- Test projects are easier to find\n- Easier to pattern match\n\nTo better align our repos this is the pattern we should follow as well.","Url":"https://github.com/dotnet/winforms/issues/12573","RelatedDescription":"Open issue \"Move test related code under a common test folder\" (#12573)"},{"Id":"2705052596","IsPullRequest":true,"CreatedAt":"2024-12-02T18:14:49","Actor":"dotnet-maestro[bot]","Number":"12567","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241128.2\r\n- **Date Produced**: November 28, 2024 6:27:21 PM UTC\r\n- **Commit**: e8de3415124309210e4cbd0105e4a9da8dc01696\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24577.1 to 10.0.0-beta.24578.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d0f89c635d...e8de341512\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12567)","Url":"https://github.com/dotnet/winforms/pull/12567","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12567)"},{"Id":"2710830427","IsPullRequest":true,"CreatedAt":"2024-12-02T07:24:41","Actor":"Olina-Zhang","Number":"12572","RawContent":null,"Title":"Add unit tests for LinkLabel","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\n\r\n- Add unit tests for LinkLabel to test its FlatStyle, LinkArea, LinkBehavior, TabStop, Padding, VisitedLinkColor, UseCompatibleTextRendering properties and TabStopChanged, LinkClicked events\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12572)","Url":"https://github.com/dotnet/winforms/pull/12572","RelatedDescription":"Open PR \"Add unit tests for LinkLabel\" (#12572)"},{"Id":"2710681544","IsPullRequest":false,"CreatedAt":"2024-12-02T06:28:43","Actor":"Zheng-Li01","Number":"12571","RawContent":null,"Title":"There no \"Open\" button for the \"DisplayMember\" property and cannot not expand the dropdown list in the PropertyGrid control","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nCan reproduce from .NET Core 3.1 to latest 10.0\n\n### Issue description\n\nThere no \"Open\" button for the \"DiaplayMember\" property and cannot not expand the dropdown list in the PropertyGrid control\n\n**Actual Results:**\n![Image](https://github.com/user-attachments/assets/37f2a1b7-602e-4c0a-b8fe-6421ebe08f23)\n\n**Expected Results:**\n![Image](https://github.com/user-attachments/assets/5ed1a09e-7e0c-49b6-8660-c421b9ad128f)\n\n### Steps to reproduce\n\n1. Create a .NET WinForms project\n2. Add a PropertyGrid & ComboBox control on the Form1.cs[Design]\n3. Select the comboBox1 as Object for propertyGrid1\n4. Build & run the project\n5. Observe the \"Open\" button for **DiaplayMember** property value\n6. Press the **\"Alt + Down\"** keyboard to expand the dropdown list.\n","Url":"https://github.com/dotnet/winforms/issues/12571","RelatedDescription":"Open issue \"There no \"Open\" button for the \"DisplayMember\" property and cannot not expand the dropdown list in the PropertyGrid control\" (#12571)"},{"Id":"2710647272","IsPullRequest":false,"CreatedAt":"2024-12-02T06:08:39","Actor":"Zheng-Li01","Number":"12570","RawContent":null,"Title":"No \"(none)\" text display for the DataSource property in PropertyGrid control","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe DataSource property was enabled since .NET 9.0\n\n### Issue description\n\nNo \"(none)\" text display for the DataSource property in PropertyGrid control\n\n**.NET :**\n![Image](https://github.com/user-attachments/assets/3c23ce36-53c0-45b1-a67f-1ac0c11beee0)\n\n**.NET Farmework:**\n![Image](https://github.com/user-attachments/assets/c42ca4cb-c1cf-4b03-8d63-834fa7b19fd1)\n\n\n### Steps to reproduce\n\n1. Create a .NET WinForms project\n2. Add a PropertyGrid & ComboBox control on the Form1.cs[Design]\n3. Select the comboBox1 as Object for propertyGrid1\n4. Build & run the project\n5. Observe the DataSource property value","Url":"https://github.com/dotnet/winforms/issues/12570","RelatedDescription":"Open issue \"No \"(none)\" text display for the DataSource property in PropertyGrid control\" (#12570)"},{"Id":"2708760611","IsPullRequest":false,"CreatedAt":"2024-12-01T08:20:51","Actor":"stilldesign","Number":"12568","RawContent":null,"Title":"WFO1000 Security analyzer misreports if using own IComponent interface","State":"open","Body":"### .NET version\n\ndotnet 9.0\n\n### Did it work in .NET Framework?\n\nN/A\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe analyzer is new to dotnet 9\n\n### Issue description\n\ndotnet 9 looks to of introduced a new WinForms security analyzer to help with serialization leaks: `WFO1000`\nHowever this analyzer is triggering on classes which inherit from any interface named `IComponent`\n\nThis is an issue for me as I have an interface named `IComponent` as part of my implementation of the [Composite pattern](https://en.wikipedia.org/wiki/Composite_pattern)\n\n### Steps to reproduce\n\n```cs\nnamespace WinFormsApp1;\n\npublic class TestCase : WinFormsApp1.IComponent\n{\n  public string? Test { get; set; }\n}\n\npublic interface IComponent\n{\n}\n```\n\nWill result in the analyzer triggering:\n\n![Image](https://github.com/user-attachments/assets/17b53d99-f8db-4567-ae16-6abbc23b4af6)\n","Url":"https://github.com/dotnet/winforms/issues/12568","RelatedDescription":"Open issue \"WFO1000 Security analyzer misreports if using own IComponent interface\" (#12568)"},{"Id":"2697645738","IsPullRequest":false,"CreatedAt":"2024-11-30T15:16:13","Actor":"at86","Number":"12552","RawContent":null,"Title":"A parent control has WS_EX_COMPOSITED style and with a child TextBox set PlaceholderText attribut cpu stay 3~5%","State":"closed","Body":"### .NET version\n\n.net8-windows \n\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n## used in .net8-windows \n\n- when TextBox set PlaceHolder attribut cpu stay 3~5%\n- remove PlaceHolder attribute, cpu stay 0%\n\n### Steps to reproduce\n\nTextBox add or remove PlaceHolder attribut.","Url":"https://github.com/dotnet/winforms/issues/12552","RelatedDescription":"Closed issue \"A parent control has WS_EX_COMPOSITED style and with a child TextBox set PlaceholderText attribut cpu stay 3~5%\" (#12552)"},{"Id":"2703640200","IsPullRequest":false,"CreatedAt":"2024-11-29T02:14:03","Actor":"MelonWang1","Number":"12565","RawContent":null,"Title":"[Accessibility] NVDA tool does not show focus blue rectangle in property edit","State":"open","Body":"### .NET version\n\n.NET 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, also can repro in .NET8.0/9.0, cannot repro in .NET 6.0/7.0.\n\n### Issue description\n\n## Current Behavior\n\nNVDA does not show focus blue rectangle.\n![Image](https://github.com/user-attachments/assets/90c83755-bc2b-4d32-9318-c94bb037fb2a)\n\nhttps://github.com/user-attachments/assets/a147db27-d749-4819-840f-d11e26e5aa45\n\n\n## Expected Behavior\n\nNVDA should show focus blue rectangle.\nIn .NET7.0/6.0:\n![Image](https://github.com/user-attachments/assets/89c97c0a-3093-4f5a-b4a9-976c337f3b72)\n\nhttps://github.com/user-attachments/assets/f56a1fbe-6a29-4320-b404-cc39df126aa1\n\nIn .NET Framework:\n\n![Image](https://github.com/user-attachments/assets/1dd6a110-90ef-4777-9475-96d88b31f23d)\n\n\n### Steps to reproduce\n\n1. Create a .NET Core Winforms project.\n2. Add a Button and PropertyGrid controls in form designer.\n3. Set the SelectedObject property to Button1 in propertyGrid1 control.\n4. Build and run project.\n5. Open NVDA tool and select FlatStyle property in propertyGrid control.\n6. Press Tab (should focus on edit part)","Url":"https://github.com/dotnet/winforms/issues/12565","RelatedDescription":"Open issue \"[Accessibility] NVDA tool does not show focus blue rectangle in property edit\" (#12565)"},{"Id":"2703312993","IsPullRequest":false,"CreatedAt":"2024-11-28T21:33:19","Actor":"elachlan","Number":"12563","RawContent":null,"Title":"New Control API for locking/unlocking drawing","State":"open","Body":"### Background and motivation\n\nIn WinForms development, there are scenarios where extensive updates to a control's state can cause flickering or performance degradation. For example, adding a large number of items to a list or making bulk changes to a grid may lead to unnecessary redraws. Developers often handle this by temporarily disabling the control's redrawing, applying changes, and re-enabling drawing afterward.\n\nCurrently, there is no built-in, intuitive mechanism in .NET WinForms to lock and unlock drawing for controls. This API proposal introduces methods to facilitate this, reducing flicker, improving performance, and providing a clean, structured way to manage drawing locks using a disposable pattern in C#.\n\n### API Proposal\n\n```csharp\npublic static void LockDrawing(this Control target);\npublic static void UnlockDrawing(this Control target);\npublic static DrawingLock UseDrawingLock(this Control target);\n\npublic ref struct DrawingLock : IDisposable\n{\n    public DrawingLock(Control target);\n    public void Dispose();\n}\n```\n\n\n### API Usage\n\n```csharp\nvar control = someControl;\ncontrol.LockDrawing();\n// Perform bulk updates\ncontrol.UnlockDrawing();\n\nvar control = someControl;\nusing (control.UseDrawingLock())\n{\n    // Perform bulk updates\n}\n```\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n1. Error Handling - If UnlockDrawing is not called (e.g., due to an exception), the control may remain in a non-repainting state.\n2. Thread Safety - Accessing the Control.Handle from a thread other than the UI thread may cause runtime errors.\n3. Invalid Handles - Calling these methods on controls without a valid handle (e.g., before the control is created or after it is disposed) may fail.\n\n### Will this feature affect UI controls?\n\nn/a","Url":"https://github.com/dotnet/winforms/issues/12563","RelatedDescription":"Open issue \"New Control API for locking/unlocking drawing\" (#12563)"},{"Id":"2702084813","IsPullRequest":true,"CreatedAt":"2024-11-28T13:37:02","Actor":"dotnet-maestro[bot]","Number":"12561","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241127.1\r\n- **Date Produced**: November 28, 2024 7:58:53 AM UTC\r\n- **Commit**: d0f89c635d780e183a97ad86af4f3c8d7e95977f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24576.1 to 10.0.0-beta.24577.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9ad0880a9f...d0f89c635d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12561)","Url":"https://github.com/dotnet/winforms/pull/12561","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12561)"},{"Id":"2701537744","IsPullRequest":false,"CreatedAt":"2024-11-28T09:43:56","Actor":"ravipoddar10mca","Number":"12560","RawContent":null,"Title":"In .NET 8 WinForms, the DataSource property of the ComboBox appears disabled in the PropertyGrid control.","State":"open","Body":"\nIn .NET 8 WinForms, the DataSource property of the ComboBox appears disabled in the PropertyGrid control.\n\n![Image](https://github.com/user-attachments/assets/a633e648-7bb8-439d-b1f1-6a8147f62a24)\n","Url":"https://github.com/dotnet/winforms/issues/12560","RelatedDescription":"Open issue \"In .NET 8 WinForms, the DataSource property of the ComboBox appears disabled in the PropertyGrid control.\" (#12560)"},{"Id":"2698460444","IsPullRequest":true,"CreatedAt":"2024-11-27T13:37:26","Actor":"dotnet-maestro[bot]","Number":"12555","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241127.1\r\n- **Date Produced**: November 27, 2024 10:48:35 AM UTC\r\n- **Commit**: fe3d5b5f7039e9f38f022dac77aeb6f01025b19d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/354ec46a63...fe3d5b5f70\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12555)","Url":"https://github.com/dotnet/winforms/pull/12555","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12555)"},{"Id":"2698459540","IsPullRequest":true,"CreatedAt":"2024-11-27T13:36:58","Actor":"dotnet-maestro[bot]","Number":"12554","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241126.1\r\n- **Date Produced**: November 26, 2024 10:27:05 PM UTC\r\n- **Commit**: 9ad0880a9f8450f4ac4e097cfe830e401ea3e22c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2a3bf4e3a4...9ad0880a9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12554)","Url":"https://github.com/dotnet/winforms/pull/12554","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12554)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-04T03:30:30.7692162Z","RunDurationInMilliseconds":447}