{"Data":{"GitHub":{"Issues":[{"Id":"831224739","IsPullRequest":true,"CreatedAt":"2021-03-14T18:26:11","Actor":"weltkante","Number":"4685","RawContent":null,"Title":"Fix inversion of conditional","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nContributes to #4370\r\n\r\n## Proposed changes\r\n\r\nThis regression to Desktop Framework was found while investigating #4370. It is unclear what the effects of this regression are, but [comparing](https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/Control.cs,15700) with Desktop Framework it seems its a mistake from refactoring\r\n\r\nWhen running a debug build of WinForms during investigation of #4370 I had turned on `CompModSwitches.ActiveX` and the broken code resulted in warnings of the ActiveX host passing wrong flags (which of course is wrong, using MFC or Office as host you can assume they pass the right flags).\r\n\r\n## Customer Impact\r\n\r\n- unknown, probably changing behavior of hosted controls due to wrong flags being passed to host\r\n\r\n## Regression? \r\n\r\n- yes\r\n\r\n## Risk\r\n\r\n- low, restoring code to how it was before. There was another recent regression fix for #4370 so this should be fine to accompany the other fix\r\n\r\n### Before\r\n\r\n- running the sample from #4370 (or generally, hosting a WinForms control in a MFC app or other ActiveX host) outputs warnings when using a WinForms debug build with ActiveX tracing turned on\r\n\r\n### After\r\n\r\n- no warnings in debug build\r\n\r\n## Test methodology\r\n\r\n- source inspection\r\n- running the sample from #4370 with a debug build of WinForms, making sure the previously observed warning is gone\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- MFC application (stock app from wizard) initializing the WinForms control from the sample code\r\n- Outlook 16.0.13801.20240 (32 bit) hosting the WinForms control from the sample code\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4685)","Url":"https://github.com/dotnet/winforms/pull/4685","RelatedDescription":"Open PR \"Fix inversion of conditional\" (#4685)"},{"Id":"831084274","IsPullRequest":true,"CreatedAt":"2021-03-14T07:00:34","Actor":"gpetrou","Number":"4684","RawContent":null,"Title":"Enable nullability in PropertyTabChangedEventArgs and PropertyValueCh…","State":"open","Body":"…angedEventArgs\r\n\r\n## Proposed changes\r\n\r\n- Enable nullability in PropertyTabChangedEventArgs and PropertyValueChangedEventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4684)","Url":"https://github.com/dotnet/winforms/pull/4684","RelatedDescription":"Open PR \"Enable nullability in PropertyTabChangedEventArgs and PropertyValueCh…\" (#4684)"},{"Id":"831082242","IsPullRequest":true,"CreatedAt":"2021-03-14T06:51:57","Actor":"gpetrou","Number":"4683","RawContent":null,"Title":"Enable nullability in DrawToolTipEventArgs and DrawTreeNodeEventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DrawToolTipEventArgs and DrawTreeNodeEventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4683)","Url":"https://github.com/dotnet/winforms/pull/4683","RelatedDescription":"Open PR \"Enable nullability in DrawToolTipEventArgs and DrawTreeNodeEventArgs\" (#4683)"},{"Id":"830896751","IsPullRequest":true,"CreatedAt":"2021-03-13T13:14:21","Actor":"dotnet-maestro[bot]","Number":"4682","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210313.9\r\n- **Date Produced**: 3/14/2021 8:49 AM\r\n- **Commit**: 7078862df6b850cbd11b5ada3630bf182adee1f0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21162.1 to 6.0.0-preview.3.21163.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1353e38...7078862\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4682)\r\n","Url":"https://github.com/dotnet/winforms/pull/4682","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#4682)"},{"Id":"830114395","IsPullRequest":true,"CreatedAt":"2021-03-12T13:52:47","Actor":"dotnet-maestro[bot]","Number":"4681","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210312.1\r\n- **Date Produced**: 3/12/2021 10:06 AM\r\n- **Commit**: 1353e3819dd65e4826ae4f8efa04f25923fad47e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21161.2 to 6.0.0-preview.3.21162.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/d67c5a1...1353e38\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4681)","Url":"https://github.com/dotnet/winforms/pull/4681","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4681)"},{"Id":"830113461","IsPullRequest":true,"CreatedAt":"2021-03-12T13:21:17","Actor":"dotnet-maestro[bot]","Number":"4680","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210310.7\r\n- **Date Produced**: 3/11/2021 12:00 AM\r\n- **Commit**: 7f13798e5f567b72ffe63205bf49839245f0f8c1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21160.1 to 6.0.0-beta.21160.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/dcc1a4e...7f13798\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4680)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4680","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#4680)"},{"Id":"830089877","IsPullRequest":false,"CreatedAt":"2021-03-12T12:52:15","Actor":"SergeySmirnov-Akvelon","Number":"4679","RawContent":null,"Title":"The yellow rectangle is not displayed for a subitem when the user hovers over it or selects in the Inspector tree","State":"open","Body":".NET Core Version:\r\n- 5.0.200-preview.20614.14\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- No. It is regression from #3223\r\n\r\n**Minimal repro:**\r\n\r\n1. Create application with ListView.\r\n2. Set View.Tile for ListView\r\n3. Add couple ColumnHeaders to ListView.\r\n4. Add ListViewItem with ListViewSubItem to ListView.\r\n5. Or use [attached project](https://github.com/dotnet/winforms/files/6130220/Issue-4679.zip)\r\n6. Run application.\r\n7. Run Inpsector.\r\n8. Select ListViewItem in Inspector.\r\n9. Expand ListViewItem\r\n10. Select ListViewSubItem.\r\n\r\n**Actual behavior:**\r\nYellow rectangle is not displayed.\r\n![Issue-4678-issue2 - actual ](https://user-images.githubusercontent.com/23376742/110942414-d6d47b00-834a-11eb-8c37-f5758a16f651.png)\r\n\r\n**Expected:**\r\nYellow rectangle should displaye around the ListViewSubItem\r\n![Issue-4678-issue2 - expected](https://user-images.githubusercontent.com/23376742/110942444-df2cb600-834a-11eb-9b89-301919189116.png)\r\n\r\n**Note:**\r\nI think the problem is reproduced due to [this condition](https://github.com/dotnet/winforms/blob/775aef04bf1f5d2c8af3ff01c622749438bc464f/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L3656). `View.Tile` view also supports displaying the first subitem","Url":"https://github.com/dotnet/winforms/issues/4679","RelatedDescription":"Open issue \"The yellow rectangle is not displayed for a subitem when the user hovers over it or selects in the Inspector tree\" (#4679)"},{"Id":"830088267","IsPullRequest":false,"CreatedAt":"2021-03-12T12:50:09","Actor":"SergeySmirnov-Akvelon","Number":"4678","RawContent":null,"Title":"ListViewSubItem of an ListViewItem are not displayed in the Inspector tree when the ListViewItem is in a ListViewGroup.","State":"open","Body":".NET Core Version:\r\n- 5.0.200-preview.20614.14\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- No. It is regression from #3223\r\n\r\n**Minimal repro:**\r\n1. Create application with ListView.\r\n2. Set View.Tile for ListView.\r\n3. Add couple ColumnHeaders to ListView.\r\n4. Add ListViewGroup to ListView.\r\n5. Add ListViewItem with ListViewSubItem to ListView.\r\n6. Select ListViewGroup as Group of the ListViewItem.\r\n7. Or use [attached project](https://github.com/dotnet/winforms/files/6130214/Issue-4678.zip)\r\n8. Run application.\r\n9. Run Inpsector.\r\n10. Select ListViewItem in Inspector.\r\n11. Try to expand ListViewItem\r\n\r\n**Actual behavior:**\r\nListViewItem is empty.\r\n![Issue-4678-issue - actual](https://user-images.githubusercontent.com/23376742/110942192-865d1d80-834a-11eb-80a1-a499931046a1.png)\r\n\r\n**Expected behavior:**\r\nListViewItem should contains ListViewSubItem\r\n![Issue-4678-issue - expected](https://user-images.githubusercontent.com/23376742/110942221-91b04900-834a-11eb-9c04-2a583547a6a3.png)\r\n\r\n**Note**\r\nI think this problem is produced due to strange checking of the `_owningGroup` in [this condition](https://github.com/dotnet/winforms/blob/2178e7a66ed27332202659c3ea86649dc4578c3d/src/System.Windows.Forms/src/System/Windows/Forms/ListViewItem.ListViewItemAccessibleObject.cs#L150)","Url":"https://github.com/dotnet/winforms/issues/4678","RelatedDescription":"Open issue \"ListViewSubItem of an ListViewItem are not displayed in the Inspector tree when the ListViewItem is in a ListViewGroup.\" (#4678)"},{"Id":"830020775","IsPullRequest":true,"CreatedAt":"2021-03-12T11:20:59","Actor":"SergeySmirnov-Akvelon","Number":"4677","RawContent":null,"Title":"Fix issue with showing groups in the Inspector when groups are disabled","State":"open","Body":"Fixes #4205\r\n\r\n## Proposed changes\r\n- Added conditions to ignore `ListViewGroupAccessibleObject` when groups or visual styles are disabled\r\n- Updated unit tests. \r\n\r\n## Customer Impact\r\n\r\n## Regression? \r\n- Yes (from #3223) \r\n\r\n## Risk\r\n- Minimal\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI team\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspector\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4677)","Url":"https://github.com/dotnet/winforms/pull/4677","RelatedDescription":"Open PR \"Fix issue with showing groups in the Inspector when groups are disabled\" (#4677)"},{"Id":"823874276","IsPullRequest":true,"CreatedAt":"2021-03-12T05:58:22","Actor":"gpetrou","Number":"4657","RawContent":null,"Title":"Enable nullability in DrawListView EventArgs","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in DrawListView EventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4657)","Url":"https://github.com/dotnet/winforms/pull/4657","RelatedDescription":"Closed or merged PR \"Enable nullability in DrawListView EventArgs\" (#4657)"},{"Id":"829106483","IsPullRequest":false,"CreatedAt":"2021-03-12T01:04:21","Actor":"rmsmelik","Number":"4673","RawContent":null,"Title":"Propertygrid displays all values in top-left corner of component","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0 (Microsoft.WindowsDesktop.App 5.0.4)\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nIn the 5.0.4 runtime release of March 9 2021, a display issue has been introduced for the WinForms PropertyGrid component that was not present in the previous 5.0.3 release. It seems that all values the property grid should display are placed in the top-left corner of the component, instead of in their cell next to their property name label.\r\n\r\n![PropertyGridValueDisplayIssue](https://user-images.githubusercontent.com/2046078/110787279-71f72300-826d-11eb-93cf-d43775a938a5.png)\r\n\r\n\r\n**Expected behavior:**\r\nValues are displayed in their corresponding cell.\r\n\r\n**Minimal repro:**\r\nThe issue can be reproduced by adding a PropertyGrid component to a Form and setting the SelectedObject to any object. Attached is a minimal example. Make sure to have Microsoft.WindowsDesktop.App 5.0.4 installed when running it.\r\n\r\n[PropertyGridTextLocationIssue.zip](https://github.com/dotnet/winforms/files/6122935/PropertyGridTextLocationIssue.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4673","RelatedDescription":"Closed issue \"Propertygrid displays all values in top-left corner of component\" (#4673)"},{"Id":"827960916","IsPullRequest":false,"CreatedAt":"2021-03-12T00:45:50","Actor":"AngeloCresta","Number":"4670","RawContent":null,"Title":"High DPI support on ToolStrip in .Net 5","State":"closed","Body":"In .Net 5 it seems that there is a regression in toolstrips with High DPI enabled (Per Monitor v2) compared to .Net Framework 4.7.2, check the image below where the 2 apps are running side by side (monitor with scale at 150%). \r\nIt's by design?\r\n![Strips](https://user-images.githubusercontent.com/12256319/110656653-6dc0fc00-81c0-11eb-9a5b-1ff718da439c.png)\r\n\r\nRegards,\r\nAngelo","Url":"https://github.com/dotnet/winforms/issues/4670","RelatedDescription":"Closed issue \"High DPI support on ToolStrip in .Net 5\" (#4670)"},{"Id":"829369293","IsPullRequest":true,"CreatedAt":"2021-03-11T17:35:59","Actor":"gpetrou","Number":"4676","RawContent":null,"Title":"Enable nullability in some DataGridViewRow EventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView EventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4676)","Url":"https://github.com/dotnet/winforms/pull/4676","RelatedDescription":"Open PR \"Enable nullability in some DataGridViewRow EventArgs\" (#4676)"},{"Id":"829150418","IsPullRequest":true,"CreatedAt":"2021-03-11T14:01:20","Actor":"dotnet-maestro[bot]","Number":"4675","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210311.2\r\n- **Date Produced**: 3/11/2021 12:01 PM\r\n- **Commit**: d67c5a112460b3f045be99d6bc82b2200fda641d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21159.16 to 6.0.0-preview.3.21161.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/3eddf4a...d67c5a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4675)","Url":"https://github.com/dotnet/winforms/pull/4675","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4675)"},{"Id":"829149377","IsPullRequest":true,"CreatedAt":"2021-03-11T14:00:04","Actor":"dotnet-maestro[bot]","Number":"4674","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210310.1\r\n- **Date Produced**: 3/10/2021 12:31 PM\r\n- **Commit**: dcc1a4e5315b4f956d228f46999e8135701d8d4f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21155.1 to 6.0.0-beta.21160.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/287fba3...dcc1a4e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4674)","Url":"https://github.com/dotnet/winforms/pull/4674","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4674)"},{"Id":"823878564","IsPullRequest":true,"CreatedAt":"2021-03-11T03:57:52","Actor":"gpetrou","Number":"4658","RawContent":null,"Title":"Enable nullability in TreeViewCancelEventArgs and TreeViewEventArgs","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in TreeViewCancelEventArgs and TreeViewEventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4658)","Url":"https://github.com/dotnet/winforms/pull/4658","RelatedDescription":"Closed or merged PR \"Enable nullability in TreeViewCancelEventArgs and TreeViewEventArgs\" (#4658)"},{"Id":"824317576","IsPullRequest":true,"CreatedAt":"2021-03-11T03:57:25","Actor":"gpetrou","Number":"4660","RawContent":null,"Title":"Enable nullability in TabControlCancelEventArgs and TabControlEventArgs","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in TabControlCancelEventArgs and TabControlEventArgs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4660)","Url":"https://github.com/dotnet/winforms/pull/4660","RelatedDescription":"Closed or merged PR \"Enable nullability in TabControlCancelEventArgs and TabControlEventArgs\" (#4660)"},{"Id":"825928190","IsPullRequest":true,"CreatedAt":"2021-03-11T03:16:55","Actor":"dotnet-maestro[bot]","Number":"4662","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210305.1\r\n- **Date Produced**: 3/5/2021 3:50 PM\r\n- **Commit**: 287fba3cbedce004fbd9823c268327960a69ca88\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21152.1 to 6.0.0-beta.21155.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f95dc73...287fba3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4662)\r\n","Url":"https://github.com/dotnet/winforms/pull/4662","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4662)"},{"Id":"826615110","IsPullRequest":true,"CreatedAt":"2021-03-11T02:50:07","Actor":"dotnet-maestro[bot]","Number":"4666","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20210309.7\r\n- **Date Produced**: 3/9/2021 10:02 PM\r\n- **Commit**: 917ded6b428fc30b40f5ba4e35eb0c863d7f69e1\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.21112.3 to 5.0.0-beta.21159.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d8c68c8...917ded6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4666)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4666","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4666)"},{"Id":"828141994","IsPullRequest":true,"CreatedAt":"2021-03-10T18:37:38","Actor":"dotnet-maestro[bot]","Number":"4672","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20210308.9\r\n- **Date Produced**: 3/9/2021 12:40 AM\r\n- **Commit**: ab42d248928f65dd174a2383f3256e68d9379bb7\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21110.10 to 2.4.1-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21110.10 to 1.0.0-beta.21158.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21110.10 to 2.0.0-beta.21158.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/251249a...ab42d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4672)","Url":"https://github.com/dotnet/winforms/pull/4672","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#4672)"},{"Id":"828070682","IsPullRequest":false,"CreatedAt":"2021-03-10T15:52:10","Actor":"AngeloCresta","Number":"4671","RawContent":null,"Title":"High DPI support on ToolStrip in .Net 5","State":"open","Body":"In .Net 5 it seems that there is a regression in toolstrips with High DPI enabled (Per Monitor v2) compared to .Net Framework 4.7.2, check the image below where the 2 apps are running side by side (monitor with scale at 150%). \r\nIt's by design?\r\n![Strips](https://user-images.githubusercontent.com/12256319/110656653-6dc0fc00-81c0-11eb-9a5b-1ff718da439c.png)\r\n\r\nRegards,\r\nAngelo","Url":"https://github.com/dotnet/winforms/issues/4671","RelatedDescription":"Open issue \"High DPI support on ToolStrip in .Net 5\" (#4671)"},{"Id":"827272150","IsPullRequest":true,"CreatedAt":"2021-03-10T09:43:38","Actor":"RussKie","Number":"4669","RawContent":null,"Title":"Run `dotnet-format` tool","State":"closed","Body":"Run `https://github.com/dotnet/format` against the solution.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4669)","Url":"https://github.com/dotnet/winforms/pull/4669","RelatedDescription":"Closed or merged PR \"Run `dotnet-format` tool\" (#4669)"},{"Id":"827107979","IsPullRequest":false,"CreatedAt":"2021-03-10T05:46:57","Actor":"paul1956","Number":"4667","RawContent":null,"Title":"Is there any interest in supporting Dark Mode in addition to the existing Light Mode?","State":"closed","Body":"This is not a proposal just a question as to what a plans might be to support Dark Mode and/or would there be interest is accepting any PR's that would support dark mode OR make it easier for others to support it. This is not Dark Mode instead of the existing Light Mode but the ability to switch back and forth at Runtime.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nWinForms should have a native way to support Dark Mode or at least better support for it being added by 3rd parties. This might include exposing Border for example on ToolStrip controls. @dualbrain can add more specifics to this about specific issues if there is interest. \r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n    - More exposure of events and properties for controls contained in container controls\r\n    - The simplest would be a Mode Property with Dark or Light and it would propagate to child controls or just a mode on each control.\r\n\r\n**Will this feature affect UI controls?**    Yes\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? Only to set initial Mode\r\n        - What impact will it have on accessibility? None\r\n        - Will this feature need to be localized or be localizable? No\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4667","RelatedDescription":"Closed issue \"Is there any interest in supporting Dark Mode in addition to the existing Light Mode?\" (#4667)"},{"Id":"826486147","IsPullRequest":false,"CreatedAt":"2021-03-09T19:06:58","Actor":"weltkante","Number":"4665","RawContent":null,"Title":"Update FolderNameEditor to use modern folder dialog","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nAs noted [here](https://github.com/dotnet/winforms/pull/4645#pullrequestreview-605774524) `FolderNameEditor` is [using interop](https://github.com/dotnet/winforms/blob/2178e7a66ed27332202659c3ea86649dc4578c3d/src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/FolderNameEditor.cs#L131) for folder selection, thus still opening the legacy folder dialog. `FolderBrowserDialog` has been updated to use the more modern Vista folder dialog. It would make sense to call `FolderBrowserDialog` from `FolderNameEditor` to get the same experience in the designer.\r\n\r\nAlso the `InitialDirectory` properties on `FileDialog` and `FolderBrowserDialog` should be annotated with `FolderNameEditor` to get the proper designer experience.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n\r\nWhile the native interop could be updated to use the Vista dialog it probably makes more sense to just use the existing FolderBrowserDialog?\r\n\r\n**Will this feature affect UI controls?**\r\n- their design time experience will be affected, but the designer should not require any changes\r\n- runtime experience will be affected if a property grid is used at runtime\r\n- accessibility/localization are unaffected","Url":"https://github.com/dotnet/winforms/issues/4665","RelatedDescription":"Open issue \"Update FolderNameEditor to use modern folder dialog\" (#4665)"},{"Id":"826329733","IsPullRequest":true,"CreatedAt":"2021-03-09T17:28:01","Actor":"gero3","Number":"4664","RawContent":null,"Title":"Mdicontainer iconchanges","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4650\r\n\r\n\r\n## Proposed changes\r\n\r\n- cleanup code in accordance to @RussKie review in #4650\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4664)","Url":"https://github.com/dotnet/winforms/pull/4664","RelatedDescription":"Open PR \"Mdicontainer iconchanges\" (#4664)"},{"Id":"826240315","IsPullRequest":false,"CreatedAt":"2021-03-09T16:46:01","Actor":"AArnott","Number":"4663","RawContent":null,"Title":"System.Drawing.Design.ToolboxService is missing","State":"open","Body":"Per [this PR comment](https://github.com/dotnet/winforms/issues/2092#issuecomment-545040231_), I was under the impression that System.Drawing.Design.ToolboxService was to be added in .NET 5. But it's not yet in the .NET 6 previews.\r\n\r\nCan we get that added?","Url":"https://github.com/dotnet/winforms/issues/4663","RelatedDescription":"Open issue \"System.Drawing.Design.ToolboxService is missing\" (#4663)"},{"Id":"824674110","IsPullRequest":false,"CreatedAt":"2021-03-09T08:54:07","Actor":"tanek100","Number":"4661","RawContent":null,"Title":"When form icon is used, form.resx throws an error","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5.0.2 SDK\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n No\r\n**Problem description:**\r\nIf new form is created and Icon is set in properties, then the form resx throws an error: Object reference not set to an instance of an object. Ico files was used.\r\n\r\n![image](https://user-images.githubusercontent.com/3244218/110341906-85b74500-8033-11eb-970f-20decd7b1469.png)\r\n\r\n**Expected behavior:**\r\nresx file should be usable in visual studio after setting icon to form.\r\n\r\n**Minimal repro:**\r\n1. Add new windows form to project (.NET SDK 5.0.2, Visual studio Version 16.9.0).\r\n![image](https://user-images.githubusercontent.com/3244218/110342473-1aba3e00-8034-11eb-8a5f-2c05880bbda0.png)\r\n2.  and add icon to form.\r\n![image](https://user-images.githubusercontent.com/3244218/110342523-2d347780-8034-11eb-9355-08a5bf7b96c7.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4661","RelatedDescription":"Closed issue \"When form icon is used, form.resx throws an error\" (#4661)"},{"Id":"823956582","IsPullRequest":true,"CreatedAt":"2021-03-09T00:48:34","Actor":"gero3","Number":"4659","RawContent":null,"Title":"fixes #1991 => remove disable warning SA1408","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1991\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add parenthesizes around logical And operators that are in logical Or operators.  \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual testing\r\n- existing unit tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4659)","Url":"https://github.com/dotnet/winforms/pull/4659","RelatedDescription":"Closed or merged PR \"fixes #1991 => remove disable warning SA1408\" (#4659)"},{"Id":"823743093","IsPullRequest":true,"CreatedAt":"2021-03-06T20:45:34","Actor":"gero3","Number":"4655","RawContent":null,"Title":"fixes #3686: just insert the tabpage if the handle isn't created","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3686\r\n\r\n\r\n## Proposed changes\r\n\r\n- Insert the tabpage in the controls list and in the tabpages list\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The user can now insert tab pages without creating the Handle.\r\n- The user can now no longer insert tab pages with an index greater than 0 when there are no tabpages in the collection yet.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- unit test\r\n- manual testing\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4655)","Url":"https://github.com/dotnet/winforms/pull/4655","RelatedDescription":"Open PR \"fixes #3686: just insert the tabpage if the handle isn't created\" (#4655)"},{"Id":"823699783","IsPullRequest":false,"CreatedAt":"2021-03-06T17:20:36","Actor":"ekolis","Number":"4654","RawContent":null,"Title":"Enable double buffering by default for all forms and controls","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!--\r\n    A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n  -->\r\nIf I make an app and forget to turn on double buffering in my forms and controls, rendering can be laggy, especially if I handle the Paint event to do GDI rendering.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n<!--\r\n    A clear and concise description of what you want to happen. This includes:\r\n    - Description of what API need to be added or changed.\r\n    - Code that shows the surface area of the API.\r\n    - Code that shows real world scenarios, and how they would otherwise be handled.\r\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\r\n    - Any other context or screenshots about the feature request here.\r\n\r\n    :exclamation: Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md for more details\r\n\r\n  -->\r\n\r\nThe DoubleBuffered property should default to true instead of false on all forms and controls.\r\n\r\nThere might be some downside to this but I'm not aware of it.\r\n\r\n\r\n**Will this feature affect UI controls?**\r\n<!--\r\n    Yes / No\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n        - What impact will it have on accessibility?\r\n        - Will this feature need to be localized or be localizable?\r\n  -->\r\nYes, this will impact UI controls.\r\nThere should be no change to the designer; I'm pretty sure it's smart enough to deal with changes to default values of properties already.\r\nThere should be no impact on accessibility.\r\nThere is no need for localization.\r\n","Url":"https://github.com/dotnet/winforms/issues/4654","RelatedDescription":"Open issue \"Enable double buffering by default for all forms and controls\" (#4654)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-03-15T05:30:37.2598706Z","RunDurationInMilliseconds":643}