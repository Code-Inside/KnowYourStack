{"Data":{"GitHub":{"Issues":[{"Id":"860908458","IsPullRequest":true,"CreatedAt":"2021-04-19T05:25:27","Actor":"AraHaan","Number":"4809","RawContent":null,"Title":"Replace WindowsFormsUtils.EnumValidator.IsEnumWithinShiftedRange with SourceGenerated.EnumValidator.Validate.","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4639\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaces WindowsFormsUtils.EnumValidator.IsEnumWithinShiftedRange only usage inside of MessageBox.cs with the source generated validation.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nTODO: Testing is needed.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   6.0.100-preview.2.21155.3\r\n Commit:    1a9103db2d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.21343\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100-preview.2.21155.3\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0-preview.2.21154.6\r\n  Commit:  3eaf1f316b\r\n\r\n.NET SDKs installed:\r\n  5.0.200-preview.21077.7 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100-preview.2.21155.3 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0-preview.2.21154.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0-preview.2.21154.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0-preview.2.21154.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4809)","Url":"https://github.com/dotnet/winforms/pull/4809","RelatedDescription":"Open PR \"Replace WindowsFormsUtils.EnumValidator.IsEnumWithinShiftedRange with SourceGenerated.EnumValidator.Validate.\" (#4809)"},{"Id":"860609974","IsPullRequest":false,"CreatedAt":"2021-04-18T08:53:05","Actor":"kirsan31","Number":"4808","RawContent":null,"Title":"ToolStripMenuItem can lead to memory leaks","State":"open","Body":"* .NET Core Version: all up to latest (5.0.5)\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\n`ToolStripMenuItem` can lead to memory leaks in some special conditions.\r\n\r\n- Menu with submenu.\r\n``` \r\n windowsToolStripMenuItem \r\n  -> listToolStripMenuItem\r\n```\r\n- Populate and clear submenu in runtime. In fact, only cleaning is important.\r\n```cs\r\nprivate void WindowsToolStripMenuItem_DropDownOpened(object sender, EventArgs e)\r\n{\r\n    for (int i = 0; i < 4; i++)\r\n        listToolStripMenuItem.DropDownItems.Add(\"MenuItem\" + i);\r\n}\r\n\r\nprivate void windowsToolStripMenuItem_DropDownClosed(object sender, EventArgs e)\r\n{\r\n    while (listToolStripMenuItem.DropDownItems.Count > 0)\r\n        listToolStripMenuItem.DropDownItems[listToolStripMenuItem.DropDownItems.Count - 1].Dispose();\r\n}\r\n```\r\nIn certain conditions (I think that is - open only main menu and not opening submenu `listToolStripMenuItem`) after closing main menu some of `listToolStripMenuItem` subitems will remain in memory. See video below.\r\nThis happens due to [`_displayedItems`](https://github.com/dotnet/winforms/blob/c9287e9ca780cd1828633fd3c6e43a6601896147/src/System.Windows.Forms/src/System/Windows/Forms/ToolStrip.cs#L40) collection still have live references to removed menu items. I think this collection ( and may be `_overflowItems` too ) must be checked on item removal.\r\n\r\nhttps://user-images.githubusercontent.com/17767561/115139643-acf23080-a03b-11eb-9be9-c0e4c2527f38.mp4\r\n\r\n*Workaround:*\r\nYou can call `listToolStripMenuItem.DropDown.PerformLayout();` after items removal. This lead to call of [`SetDisplayedItems()`](https://github.com/dotnet/winforms/blob/c9287e9ca780cd1828633fd3c6e43a6601896147/src/System.Windows.Forms/src/System/Windows/Forms/ToolStrip.cs#L4561) which will clear `_displayedItems` of removed elements.\r\n\r\n**Expected behavior:**\r\nAll removed and disposed menu elements must be eligible to GC (have no live references).\r\n\r\n**Minimal repro:**\r\n[WinFormsCoreTest_Grid_Menu.zip](https://github.com/dotnet/winforms/files/6330797/WinFormsCoreTest_Grid_Menu.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/4808","RelatedDescription":"Open issue \"ToolStripMenuItem can lead to memory leaks\" (#4808)"},{"Id":"860603748","IsPullRequest":false,"CreatedAt":"2021-04-18T08:16:52","Actor":"kirsan31","Number":"4807","RawContent":null,"Title":"bound DataGridView with all invisible columns will display first column anyway","State":"open","Body":"* .NET Core Version:  all up to latest (5.0.5)\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\nDataGridView with manual added columns ( `AutoGenerateColumns = false` ). If your set on all of the columns `Visible = false` and then set `DataSource` you'll get 2 bugs:\r\n1. First column become visible.\r\n2. If `RowHeadersVisible = false` column header will be partially visible.\r\n\r\n![Snipaste_2021-04-18_11-05-49](https://user-images.githubusercontent.com/17767561/115138757-aca36680-a036-11eb-85a9-1fcdcf72f866.png)\r\n\r\n\r\n**Expected behavior:**\r\nAll columns must stay invisible.\r\n\r\n**Minimal repro:**\r\n[WinFormsCoreTest_Grid_Menu.zip](https://github.com/dotnet/winforms/files/6330756/WinFormsCoreTest_Grid_Menu.zip) (See `Form2.cs`)\r\n","Url":"https://github.com/dotnet/winforms/issues/4807","RelatedDescription":"Open issue \"bound DataGridView with all invisible columns will display first column anyway\" (#4807)"},{"Id":"860396318","IsPullRequest":true,"CreatedAt":"2021-04-17T12:39:45","Actor":"dotnet-maestro[bot]","Number":"4806","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210416.2\r\n- **Date Produced**: 4/16/2021 4:00 PM\r\n- **Commit**: 53fe29e220fc0db05eafd5c6bc6c8fb9ee7cec7c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21215.5 to 6.0.0-beta.21216.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21215.5 to 6.0.0-beta.21216.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21215.5 to 6.0.0-beta.21216.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21215.5 to 6.0.0-beta.21216.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21215.5 to 6.0.0-beta.21216.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e76fe48...53fe29e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4806)","Url":"https://github.com/dotnet/winforms/pull/4806","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4806)"},{"Id":"860382164","IsPullRequest":false,"CreatedAt":"2021-04-17T10:47:59","Actor":"AlexVallat","Number":"4805","RawContent":null,"Title":"WindowsFormsApplicationBase does not raise StartupNextInstance if MainForm is null (it does in Framework)","State":"open","Body":"* .NET Core Version: found in 5, still present in code in current main branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nWindowsFormsApplicationBase.StartupNextInstance event is not raised if MainForm is null.\r\n\r\n**Expected behavior:**\r\nStartupNextInstance event is raised. This was the behaviour in .NET Framework\r\n\r\n**Minimal repro:**\r\nCreate an WindowsFormsApplicationBase, and set IsSingleInstance to true. Do not assign a MainForm, just Application.Run an ApplicationContext. Add an event handler to StartupNextInstance  Run one instance, then a second instance.\r\n\r\nNote that StartupNextInstance is not raised. No errors are reported either on first or second instance.\r\n\r\nIt seems that https://github.com/dotnet/winforms/blob/b53c2eb7a863a8ff01b5ba28ad4c63c77dc88ad8/src/Microsoft.VisualBasic.Forms/src/Microsoft/VisualBasic/ApplicationServices/WindowsFormsApplicationBase.vb#L801 is specifically checking for MainForm null and not raising the event in this case. Compare with equivalent .NET Framework code which does StartupNextInstanceEvent?.Invoke _before_ the check for MainForm != null","Url":"https://github.com/dotnet/winforms/issues/4805","RelatedDescription":"Open issue \"WindowsFormsApplicationBase does not raise StartupNextInstance if MainForm is null (it does in Framework)\" (#4805)"},{"Id":"860295311","IsPullRequest":true,"CreatedAt":"2021-04-17T01:39:58","Actor":"dotnet-maestro[bot]","Number":"4804","RawContent":null,"Title":"[release/6.0-preview4] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1f97c437-6c16-4648-5a80-08d8ff79a3bc)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 1f97c437-6c16-4648-5a80-08d8ff79a3bc\r\n- **Build**: 20210416.6\r\n- **Date Produced**: 4/17/2021 12:47 AM\r\n- **Commit**: 7878130397bca88d63c5eea7d4a6185e491ee954\r\n- **Branch**: refs/heads/release/6.0-preview4\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.4.21216.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2588311...7878130\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1f97c437-6c16-4648-5a80-08d8ff79a3bc)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4804)","Url":"https://github.com/dotnet/winforms/pull/4804","RelatedDescription":"Open PR \"[release/6.0-preview4] Update dependencies from dotnet/runtime\" (#4804)"},{"Id":"860062918","IsPullRequest":false,"CreatedAt":"2021-04-16T18:15:59","Actor":"Atma9","Number":"4803","RawContent":null,"Title":"VS.IDE deletes components, which cannot be created during the loading of the form","State":"open","Body":"Dear All,\r\n\r\nWhile upgrading to Winforms .NET Core 5.0, we have encountered several situations, where the component, or the control could not be created by the Winforms designer UI (null pointer exception in the constructor). If we disregard the reason, why the error happens, the default behavior of the Winforms UI Designer is to silently delete the component from the source code. The components can be quite elaborate with hundreds of settings. \r\n\r\nIt is of course possible, to \"undo\" the changes, but the trouble is: How do you know that something was deleted?\r\nThere is no error message displayed. Only few days later you can discover that that the \"Forms\" are \"leaking\" controls and components. \r\n\r\n* .NET Core Version: \r\nThis affects .NET 5.0 Winforms and newer. \r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo. \r\n\r\n**Expected behavior:**\r\nDisplay an error message, if a component is to be deleted. Do not silently delete the component. \r\n\r\n**Minimal repro:**\r\nThrow an exception in any component constructor and notice that the VS.IDE Winform Designer removed all trace of that component from the source code without any error message or warning. \r\n\r\nAnother aspect of this problem, is why the controls throw an exception in the constructor:\r\nSometimes the assembly which holds the components cannot be loaded by the VS.IDE. There is so much dynamic loading of assemblies in to the Winforms UI Designer, that it is possible to notice why this sometimes fails (every few minutes). The error messages range from: \r\n\r\na.) The assembly is \"used by another process\". This process can be some subsystem of the VS.IDE itself or of Windows. Even though we have AntiVirus disabled for our project directories, we still sometimes get a message, that the file read/write was blocked because another process was locking the file. It is also not the Search Indexing. We simply could not figure out what that process could have been.  The conclusion was, some bug with Windows OS.\r\n\r\nb.) Interdependent assemblies. Are there some time-outs in place when loading the assemblies and if the load chain is very long (due to frequent dynamic loading of multiple dependent assemblies), the UI appears to occasionally time out? We need to open Forms in quite specific order not to cause this time-out to trigger, because if it does, the assembly loading will fail and components will be deleted without any warning messages. \r\n\r\nc.) Static type initializers. I am not convinced that constructors of static classes are fully functional. Sometimes Frame loading fails, as if the constructors of static classes did not execute quickly enough, after one of the members of the static class was accessed. \r\n\r\nThe practical reality of the current state of Winforms 5.0 .NET Core VS.IDE experience is \"unusable\" for development due to nearly random failure to open forms without loosing components and not giving any error messages, when it happens. \r\n\r\nKind Regards!\r\nAtmapuri\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4803","RelatedDescription":"Open issue \"VS.IDE deletes components, which cannot be created during the loading of the form\" (#4803)"},{"Id":"859756149","IsPullRequest":true,"CreatedAt":"2021-04-16T12:40:23","Actor":"dotnet-maestro[bot]","Number":"4801","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210415.5\r\n- **Date Produced**: 4/15/2021 5:53 PM\r\n- **Commit**: e76fe48d5eb894e58fe7841f3a2c0bcfa654ee80\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21214.5 to 6.0.0-beta.21215.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21214.5 to 6.0.0-beta.21215.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21214.5 to 6.0.0-beta.21215.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21214.5 to 6.0.0-beta.21215.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21214.5 to 6.0.0-beta.21215.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/93a6389...e76fe48\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4801)","Url":"https://github.com/dotnet/winforms/pull/4801","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4801)"},{"Id":"859756621","IsPullRequest":true,"CreatedAt":"2021-04-16T12:10:53","Actor":"dotnet-maestro[bot]","Number":"4802","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210418.1\r\n- **Date Produced**: 4/18/2021 10:13 AM\r\n- **Commit**: ccc25a90082fa6592eeca8e146ff37e1b7d6b79d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21214.9 to 6.0.0-preview.5.21218.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2588311...ccc25a9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4802)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4802","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#4802)"},{"Id":"859583218","IsPullRequest":true,"CreatedAt":"2021-04-16T08:14:58","Actor":"SergeySmirnov-Akvelon","Number":"4800","RawContent":null,"Title":"Fix rectangle of the ListViewGroup","State":"open","Body":"Fixes #4778\r\n\r\n\r\n## Proposed changes\r\n- The issue with the incorrect rectangle is reproduced because the \"FragmentRoot\" property was not overridden. Added an override for the \"FragmentRoot\" property.\r\n\r\n- Added logic for calculating a Bounds if it was not returned by the native control. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n### Case 1\r\n**Before fix:**\r\n![Issue-4778-case1-before](https://user-images.githubusercontent.com/23376742/114997193-41c42500-9ea8-11eb-9d8d-dd2fed7be588.png)\r\n\r\n**After fix:**\r\n![Issue-4778-case1-after](https://user-images.githubusercontent.com/23376742/114997486-8e0f6500-9ea8-11eb-8e14-0aae753335ac.png)\r\n\r\n### Case 2\r\n**Before fix:**\r\n![Issue-4778-case2-before](https://user-images.githubusercontent.com/23376742/114997915-0bd37080-9ea9-11eb-8203-d76619915de9.png)\r\n\r\n**After fix:**\r\n![Issue-4778-case2-after](https://user-images.githubusercontent.com/23376742/114997927-1130bb00-9ea9-11eb-80fe-bee59783f3cf.png)\r\n\r\n## Regression? \r\n\r\n- Yes (from #3224)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- CTI team\r\n- unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspector\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK: 6.0.100-preview.2.21155.3\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4800)","Url":"https://github.com/dotnet/winforms/pull/4800","RelatedDescription":"Open PR \"Fix rectangle of the ListViewGroup\" (#4800)"},{"Id":"859374132","IsPullRequest":true,"CreatedAt":"2021-04-16T02:12:24","Actor":"dreddy-work","Number":"4799","RawContent":null,"Title":"Branding change for Winforms 6.0 preview 5","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4799)","Url":"https://github.com/dotnet/winforms/pull/4799","RelatedDescription":"Closed or merged PR \"Branding change for Winforms 6.0 preview 5\" (#4799)"},{"Id":"859350174","IsPullRequest":true,"CreatedAt":"2021-04-16T01:12:21","Actor":"dreddy-work","Number":"4798","RawContent":null,"Title":"Shipped APIs for Preview 4","State":"closed","Body":"Updating Shipped APIs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4798)","Url":"https://github.com/dotnet/winforms/pull/4798","RelatedDescription":"Closed or merged PR \"Shipped APIs for Preview 4\" (#4798)"},{"Id":"857563993","IsPullRequest":true,"CreatedAt":"2021-04-16T00:20:04","Actor":"SergeySmirnov-Akvelon","Number":"4789","RawContent":null,"Title":"Fix issue with displaying empty ListViewGroups","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4779\r\n\r\n\r\n## Proposed changes\r\n- An ListViewItem is considered invisible when it is in a ListViewGroup but not added to the ListView. In this case, the ListViewGroup contains data about it, but the ListViewItem is not displayed in the list. To solve this problem, the \"VisibleItems\" property was added, which contains a list of only displayed ListViewItems, in which the property \"ListView\" is not empty. Now, when receiving data about the ListViewItems of a ListViewGroup, we use this property and not \"Items\" property of the ListViewGroup.\r\n- if the ListViewGroup is empty or contains invisible ListViewItems (case above), then this ListViewGroup is also not displayed in the ListView. This issue was solved in the same way as the issue above, by adding the \"VisibleGroups\" property that contains a list of only the displayed ListViewGroups.\r\n- Added unit tests for ListViewAccessibleObject, ListViewGroupAccessibleObject, ListViewItemAccessibleObject\r\n\r\n## Customer Impact\r\nSimple code as an example:\r\n```\r\nListViewGroup inVisibleListViewGroup = new ListViewGroup(\"Invisible group\");\r\nListViewGroup visibleListViewGroup = new ListViewGroup(\"Visible group\");\r\nListViewItem invisibleListViewItem = new ListViewItem(\"Invisible item\");\r\nListViewItem visibleListViewItem = new ListViewItem(\"Visible item\");\r\n\r\nlistView.Groups.Add(inVisibleListViewGroup);\r\nlistView.Groups.Add(visibleListViewGroup);\r\n\r\nvisibleListViewGroup.Items.Add(invisibleListViewItem);\r\nvisibleListViewGroup.Items.Add(visibleListViewItem);\r\nlistView.Items.Add(visibleListViewItem);\r\n```\r\n\r\n**Before fix:**\r\n![Issue-4779-before](https://user-images.githubusercontent.com/23376742/114667578-48b43180-9d08-11eb-9a2a-3fbcd16bbd97.png)\r\n\r\n**After fix:**\r\n![Issue-4779-after](https://user-images.githubusercontent.com/23376742/114667598-54075d00-9d08-11eb-9b3a-d5cb0bf7c73a.png)\r\n\r\n## Regression? \r\n\r\n- Yes (regression from #3224)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests \r\n- CTI team\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK: 6.0.100-preview.2.21155.3\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4789)","Url":"https://github.com/dotnet/winforms/pull/4789","RelatedDescription":"Closed or merged PR \"Fix issue with displaying empty ListViewGroups\" (#4789)"},{"Id":"855945189","IsPullRequest":false,"CreatedAt":"2021-04-16T00:20:04","Actor":"SergeySmirnov-Akvelon","Number":"4779","RawContent":null,"Title":"Empty ListViewGroups are displayed in the Inspect tree","State":"closed","Body":".NET Core Version:\r\n- 6.0.100-preview.2.21155.3\r\n\r\nHave you experienced this same bug with .NET Framework?:\r\n- No (regression from #3224)\r\n \r\n**Minimal repro:**\r\n\r\n1. Create an app with a ListView\r\n2. Add several ListViewGroup to the ListView\r\n3. Add ListViewItem related to the first group to the ListView\r\n4. Run the application\r\n5. Run the Inspect\r\n\r\n**Actual behavior**\r\nInvisible (empty) ListViewGroups are displayed in the Inspect tree\r\n![Issue-4779-actual](https://user-images.githubusercontent.com/23376742/114397233-1f2fc480-9ba7-11eb-840e-113328d9cead.png)\r\n\r\n**Expected behavior**\r\nInvisible (empty) ListViewGroups should not be displayed in the Inspect tree\r\n![Issue-4779-expected](https://user-images.githubusercontent.com/23376742/114397246-23f47880-9ba7-11eb-8daf-641f3a7227dd.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4779","RelatedDescription":"Closed issue \"Empty ListViewGroups are displayed in the Inspect tree\" (#4779)"},{"Id":"859314657","IsPullRequest":true,"CreatedAt":"2021-04-15T23:01:36","Actor":"dreddy-work","Number":"4797","RawContent":null,"Title":"[Do not Merge] Fixing Adornment calculations while scaling Controls.","State":"open","Body":"Adornments are scaled by windows. As a result, when winforms scale controls in response to DPI or Font change, we deduct Adornment size before scaling control and then add it back after scaling is done. However, Calculating Adornments were not taking the DPI into account and there by incorrectly scaling controls.\r\n\r\nThis change will help fix it.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4797)","Url":"https://github.com/dotnet/winforms/pull/4797","RelatedDescription":"Open PR \"[Do not Merge] Fixing Adornment calculations while scaling Controls.\" (#4797)"},{"Id":"859251548","IsPullRequest":true,"CreatedAt":"2021-04-15T21:11:01","Actor":"dreddy-work","Number":"4796","RawContent":null,"Title":"[Do not merge] Fix regression in ParkHandle method from .NET framework","State":"open","Body":"Seems this changes was missed from Day 1 and a regression from .NET  Framework.\r\nEx: https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/Control.cs,8435\r\n\r\nWithout these changes, on PMv2 applications, We might be ending up with wrong DpiAwareness than the requested for windows being created  and some times, might end up failing to parent because of inconsistence DpiAwareness between parent and child.\r\n\r\nhttps://github.com/dotnet/winforms/pull/2262  addressed for catching the failure in 'SetParent'  but applications may be still creating windows with incorrect DpiAwareness.\r\n\r\n\r\nNeed to check on how to add a Unit test.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4796)","Url":"https://github.com/dotnet/winforms/pull/4796","RelatedDescription":"Open PR \"[Do not merge] Fix regression in ParkHandle method from .NET framework\" (#4796)"},{"Id":"858817770","IsPullRequest":true,"CreatedAt":"2021-04-15T12:51:36","Actor":"dotnet-maestro[bot]","Number":"4795","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210414.9\r\n- **Date Produced**: 4/15/2021 7:56 AM\r\n- **Commit**: 2588311215b3e9b49c695369941698f333f52fe9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21213.3 to 6.0.0-preview.4.21214.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5d0817a...2588311\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4795)","Url":"https://github.com/dotnet/winforms/pull/4795","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4795)"},{"Id":"858817306","IsPullRequest":true,"CreatedAt":"2021-04-15T12:45:46","Actor":"dotnet-maestro[bot]","Number":"4794","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210414.5\r\n- **Date Produced**: 4/15/2021 6:34 AM\r\n- **Commit**: 93a6389f406e5e900da46ab643c608578f143851\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21212.6 to 6.0.0-beta.21214.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21212.6 to 6.0.0-beta.21214.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21212.6 to 6.0.0-beta.21214.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21212.6 to 6.0.0-beta.21214.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21212.6 to 6.0.0-beta.21214.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/db49d79...93a6389\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4794)","Url":"https://github.com/dotnet/winforms/pull/4794","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4794)"},{"Id":"858601393","IsPullRequest":false,"CreatedAt":"2021-04-15T07:51:15","Actor":"ygra","Number":"4793","RawContent":null,"Title":"ToolTip sometimes briefly flashes the last-shown text when appearing","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0 (the project targets netcoreapp3.0, though, but I get build warnings about .NET 5 assemblies, so no idea which one it uses in actuality)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\nWhen a tooltip instance has shown a tooltip, sometimes when showing the tooltip in another location (triggered via ToolTip.Show) or even on another control, the previous tooltip contents are briefly shown (for a single frame, perhaps; can sometimes only be seen clearly in slow motion), before the actually-intended text pops in (and also resizing the tooltip in the process, if necessary).\r\n\r\nToolbar, with different tooltips for different controls:\r\n\r\nhttps://user-images.githubusercontent.com/1692688/114833131-8b8d0c80-9dcf-11eb-89f8-22229f795928.mp4\r\n\r\nCustom component which uses ToolTip.Show with different texts programmatically:\r\n\r\nhttps://user-images.githubusercontent.com/1692688/114833135-8cbe3980-9dcf-11eb-8053-3b41513303c2.mp4\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe new tooltip should show up with the correct content from the start.\r\n\r\n**Minimal repro:**\r\n\r\nCan be as simple as having two buttons with different tooltips.","Url":"https://github.com/dotnet/winforms/issues/4793","RelatedDescription":"Open issue \"ToolTip sometimes briefly flashes the last-shown text when appearing\" (#4793)"},{"Id":"857833296","IsPullRequest":true,"CreatedAt":"2021-04-14T12:49:08","Actor":"dotnet-maestro[bot]","Number":"4792","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210413.3\r\n- **Date Produced**: 4/13/2021 3:11 PM\r\n- **Commit**: 5d0817a2136b84580a78fea5bfbe9910098bed2b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21213.1 to 6.0.0-preview.4.21213.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5a2df34...5d0817a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4792)","Url":"https://github.com/dotnet/winforms/pull/4792","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4792)"},{"Id":"857704492","IsPullRequest":false,"CreatedAt":"2021-04-14T09:52:09","Actor":"Hefaistos68","Number":"4791","RawContent":null,"Title":"Some events never called in WinForms dialog when overriding Form methods and not calling base","State":"closed","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):  Version:   5.0.201 Commit:    a09bd5c86c\r\nRuntime Environment: Windows  10.0.19042 win10-x64\r\nHost (useful for support):  Version: 5.0.4  Commit:  f27d337295\r\n.NET SDKs installed:  3.0.101, 3.1.407, 5.0.103, 5.0.104, 5.0.200-preview.21077.7, 5.0.201\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nWhen overriding for example the `OnLoad `method, but not calling the `base.OnLoad() `method, neither the Load event nor the Shown event is raised. Probably some other events neither. This behavior is not transparent and is not explained in the documentation. Although documentation states: _When overriding OnLoad(EventArgs) in a derived class, be sure to call the base class's OnLoad(EventArgs) method so that registered delegates receive the event._ there is no indication that this may also affect other events not being raised.\r\n\r\n**Expected behavior:**\r\nFramework should call the virtual OnLoad() method and then raise the events as expected.\r\n\r\n**Minimal repro:**\r\nCreate a basic winforms project, override OnLoad() in the Form1 class, remove the call to base.OnLoad() in the generated method, add handlers for the Load and Show events. Those handlers never get called.\r\n","Url":"https://github.com/dotnet/winforms/issues/4791","RelatedDescription":"Closed issue \"Some events never called in WinForms dialog when overriding Form methods and not calling base\" (#4791)"},{"Id":"857699805","IsPullRequest":false,"CreatedAt":"2021-04-14T09:18:50","Actor":"Atma9","Number":"4790","RawContent":null,"Title":"Trouble with custom CodeDomSerializer on .NET v5 Winforms","State":"open","Body":"Dear All, \r\n\r\nWe have trouble debugging custom CodeDomSerializer on .NET v5 Winforms. When the form loads, the components, which are marked with an attribute to use a custom CodeDomSerializer, are simply deleted from the form without any error message. \r\n\r\nThe custom serializer works with .NET Framework v2 to 4.8, but fails with .NET Core from v5 and newer (including v6). \r\n\r\nThe main problem is that we cant debug in to the C# code used by VS.IDE to serialize/deserialize.\r\n\r\nThe best what we found on internet to debug custom CodeDomSerializers is here:\r\nhttps://stackoverflow.com/questions/47290751/serialization-with-codedomserializer-how-to-initialize-manager-object\r\n\r\nBut no method is known, how to do this for .NET Core Winforms components. \r\n\r\nMinimal repro:\r\nPlease provide a method how to debug custom CodeDomSerializers in Visual Studio .NET IDE. \r\n\r\nThanks!\r\nAtmapuri\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4790","RelatedDescription":"Open issue \"Trouble with custom CodeDomSerializer on .NET v5 Winforms\" (#4790)"},{"Id":"857391094","IsPullRequest":true,"CreatedAt":"2021-04-14T00:15:17","Actor":"dotnet-maestro[bot]","Number":"4787","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20210310.3\r\n- **Date Produced**: 3/10/2021 8:46 PM\r\n- **Commit**: 670382be6a978ba401c21c57ba44311199d2682a\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/917ded6...670382b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4787)","Url":"https://github.com/dotnet/winforms/pull/4787","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4787)"},{"Id":"856898667","IsPullRequest":true,"CreatedAt":"2021-04-14T00:12:18","Actor":"dotnet-maestro[bot]","Number":"4783","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210412.6\r\n- **Date Produced**: 4/12/2021 9:54 PM\r\n- **Commit**: db49d790a4bfa977a9ed7436bf2aa242cefae45e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21209.17 to 6.0.0-beta.21212.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21209.17 to 6.0.0-beta.21212.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21209.17 to 6.0.0-beta.21212.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21209.17 to 6.0.0-beta.21212.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21209.17 to 6.0.0-beta.21212.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/28d9452...db49d79\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4783)","Url":"https://github.com/dotnet/winforms/pull/4783","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4783)"},{"Id":"857404076","IsPullRequest":true,"CreatedAt":"2021-04-14T00:00:15","Actor":"RussKie","Number":"4788","RawContent":null,"Title":"Restructure internal build pipeline","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4788)","Url":"https://github.com/dotnet/winforms/pull/4788","RelatedDescription":"Closed or merged PR \"Restructure internal build pipeline\" (#4788)"},{"Id":"857172576","IsPullRequest":true,"CreatedAt":"2021-04-13T17:56:33","Actor":"dotnet-maestro[bot]","Number":"4785","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20210310.3\r\n- **Date Produced**: 3/10/2021 8:46 PM\r\n- **Commit**: 670382be6a978ba401c21c57ba44311199d2682a\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.21159.7 to 5.0.0-beta.21160.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/917ded6...670382b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4785)","Url":"https://github.com/dotnet/winforms/pull/4785","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4785)"},{"Id":"857177711","IsPullRequest":true,"CreatedAt":"2021-04-13T17:43:39","Actor":"dotnet-maestro[bot]","Number":"4786","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20210311.1\r\n- **Date Produced**: 3/11/2021 9:50 AM\r\n- **Commit**: 9467b1074927ee3fe98d539d3b72f5686c861958\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21158.9 to 2.4.1-beta.21161.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21158.9 to 1.0.0-beta.21161.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21158.9 to 1.0.0-beta.21161.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21158.9 to 2.0.0-beta.21161.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ab42d24...9467b10\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4786)","Url":"https://github.com/dotnet/winforms/pull/4786","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#4786)"},{"Id":"856447412","IsPullRequest":true,"CreatedAt":"2021-04-13T16:48:42","Actor":"RussKie","Number":"4781","RawContent":null,"Title":"Merge in 'release/5.0.5' tags changes","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4781)","Url":"https://github.com/dotnet/winforms/pull/4781","RelatedDescription":"Closed or merged PR \"Merge in 'release/5.0.5' tags changes\" (#4781)"},{"Id":"856899115","IsPullRequest":true,"CreatedAt":"2021-04-13T12:46:43","Actor":"dotnet-maestro[bot]","Number":"4784","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210413.1\r\n- **Date Produced**: 4/13/2021 9:30 AM\r\n- **Commit**: 5a2df345cdabb4ac7f0227ab9052fd40d34e4986\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.4.21211.7 to 6.0.0-preview.4.21213.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/355eff5...5a2df34\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4784)","Url":"https://github.com/dotnet/winforms/pull/4784","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4784)"},{"Id":"856758017","IsPullRequest":true,"CreatedAt":"2021-04-13T09:10:54","Actor":"wreuel","Number":"4782","RawContent":null,"Title":"Replace EnumValidator - Unit Tests and Changing the Validator","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4639\r\n\r\n\r\n## Proposed changes\r\n\r\n- Created tests to Label and RadioButton\r\n- Remove Enum Validator on class\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit Tests created before change\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n.NET SDK (reflecting any global.json):\r\nVersion: 6.0.100-preview.2.21155.3\r\nCommit: 1a9103db2d\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19042\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\6.0.100-preview.2.21155.3\\\r\n\r\nHost (useful for support):\r\nVersion: 6.0.0-preview.2.21154.6\r\nCommit: 3eaf1f316b\r\n\r\n.NET SDKs installed:\r\n3.1.407 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.104 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.201 [C:\\Program Files\\dotnet\\sdk]\r\n6.0.100-preview.2.21155.3 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 6.0.0-preview.2.21154.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.1.26 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 6.0.0-preview.2.21154.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 3.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 6.0.0-preview.2.21154.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4782)","Url":"https://github.com/dotnet/winforms/pull/4782","RelatedDescription":"Open PR \"Replace EnumValidator - Unit Tests and Changing the Validator\" (#4782)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-04-19T05:30:38.5052952Z","RunDurationInMilliseconds":550}