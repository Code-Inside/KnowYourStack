{"Data":{"GitHub":{"Issues":[{"Id":"700482936","IsPullRequest":false,"CreatedAt":"2020-09-14T02:21:11","Actor":"Shadowblitz16","Number":"3891","RawContent":null,"Title":"MDI children look different than the main forms","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nI am using .net framework 4.6.1 but it also seem to happen with 4.7.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes I am not using .net core\r\n\r\n**Problem description:**\r\nMDI children do not obey the theme of the parent window\r\n![image](https://user-images.githubusercontent.com/2453707/93009849-8c5c7800-f53a-11ea-8872-e4d2b2897ebc.png)\r\n\r\n\r\n**Expected behavior:**\r\nI would expect that the titlebar and border would look the same even if its a mdi child\r\n\r\n\r\n**Minimal repro:**\r\n- make a mdi form\r\n- make a mdi child \r\n- add the mdi child to the mdi form\r\n- run it\r\n- see that it looks like windows 7 still\r\n","Url":"https://github.com/dotnet/winforms/issues/3891","RelatedDescription":"Closed issue \"MDI children look different than the main forms\" (#3891)"},{"Id":"698787074","IsPullRequest":true,"CreatedAt":"2020-09-14T02:13:16","Actor":"dotnet-maestro[bot]","Number":"3882","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200912.5\r\n- **Date Produced**: 9/13/2020 2:40 AM\r\n- **Commit**: 54dfce73caac716251ff90e1099c4232f5587e35\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20460.10 to 5.0.0-rc.2.20462.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/3802520...54dfce7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3882)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3882","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3882)"},{"Id":"700594096","IsPullRequest":true,"CreatedAt":"2020-09-13T15:45:37","Actor":"KlausLoeffelmann","Number":"3894","RawContent":null,"Title":"Modify Visual Basic templates for the Visual Basic Application Framework","State":"open","Body":"This fixes #3893.\r\n\r\n## Proposed changes\r\n\r\nEnables the following experiences for Visual Basic WinForms templates:\r\n[to be supplied.]\r\n\r\n## Customer Impact\r\n\r\nWill enable the Customer to use the Visual Basic Application Framework for Windows Forms Apps for >=net 5.0.\r\n\r\n## Regression? \r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. Only affecting VB templates.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nManual testing of the new templates.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3894)","Url":"https://github.com/dotnet/winforms/pull/3894","RelatedDescription":"Open PR \"Modify Visual Basic templates for the Visual Basic Application Framework\" (#3894)"},{"Id":"700592180","IsPullRequest":false,"CreatedAt":"2020-09-13T15:34:36","Actor":"KlausLoeffelmann","Number":"3893","RawContent":null,"Title":"Modify Visual Basic CLI templates for the Visual Basic Application Framework","State":"open","Body":"From Visual Studio 16.8 Preview 4 on, we will have the Application Framework for Visual Basic WinForms App available. The AppDesigner for the Visual Basic Project properties will look about this and will have (almost) parity to NetFx:\r\n\r\n![image](https://user-images.githubusercontent.com/9663150/93021840-fa845780-f599-11ea-8e57-b3be8a499191.png)\r\n\r\nTo make sure that Visual Basic WinForms App will be starting in the `SystemAware` HighDpiMode, we will be introducing a new Application Event named `ApplyHighDpiMode`. For the time being (net5 to net6), this event will be introduced over the Visual Basic Application Framework templates, in net6.0 it will become part of `WindowsFormsApplicationBase` (and the Application Framework template will be changed to accommodate net6.0 accordingly - also see #3861)\r\n\r\n![image](https://user-images.githubusercontent.com/9663150/93022051-8e0a5800-f59b-11ea-8125-8865ca826b4d.png)\r\n\r\nNOTE: The Visual Basic Application Framework will not be available for .NET Core 3.1, ONLY for >= net5.0. Note also, that the Settings feature will not be available in the 16.8 time frame.\r\n","Url":"https://github.com/dotnet/winforms/issues/3893","RelatedDescription":"Open issue \"Modify Visual Basic CLI templates for the Visual Basic Application Framework\" (#3893)"},{"Id":"700512573","IsPullRequest":false,"CreatedAt":"2020-09-13T06:58:06","Actor":"why5684784","Number":"3892","RawContent":null,"Title":"CheckListBox has Bugs","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nThis is a problem with the. Net framework and does not test the. Net core\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThis is a bug from CheckListBox.\r\nWhen I derive a new CheckListBox from CheckListBox, using my derived MyCheckListBox, it will be very slow to change the itemcheckstate when the item is not selected. It will be very fast to change the itemcheckstate after selecting the item. \r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe rate at which itemcheckstate changes is independent of the itemselect state\r\n\r\n**Minimal repro:**\r\nevery time\r\n\r\nCode:\r\n`\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\nnamespace Test.Frm.Control\r\n{\r\n    internal class MyCheckListBox : CheckedListBox\r\n    {\r\n        public delegate void ItemBoxCheckedEventHanlder(object sender, Models.CheckListBoxItemCheckBoxEventArgs mouseEventArgs);\r\n        public event ItemBoxCheckedEventHanlder ItemBoxChecked;\r\n        private bool isUserCheck = false;\r\n        public MyCheckListBox()\r\n        {\r\n            this.DoubleBuffered = false;\r\n        }\r\n        protected override void OnItemCheck(ItemCheckEventArgs ice)\r\n        {\r\n            if (this.isUserCheck)\r\n            {\r\n                this.isUserCheck = false;\r\n                ice.NewValue = ice.CurrentValue;\r\n            }\r\n            base.OnItemCheck(ice);\r\n        }\r\n        protected override void WndProc(ref Message m)\r\n        {\r\n            if (m.Msg == 0x0201)///LeftMouseButtonDown\r\n            {\r\n                uint lPararm = (uint)m.LParam;\r\n                int xPoint = Convert.ToInt32(lPararm & 0xFFFF);///Convert mouse X coordinates\r\n                int yPoint = Convert.ToInt32(lPararm >> 16);///Convert mouse Y coordinates\r\n                int index = this.IndexFromPoint(xPoint, yPoint);\r\n                if (xPoint < 15)\r\n                {\r\n                    Models.CheckListBoxItemCheckBoxEventArgs model = new Models.CheckListBoxItemCheckBoxEventArgs(MouseButtons.Left, xPoint, yPoint, index);\r\n                    base.SetItemCheckState(index, base.GetItemCheckState(index) == CheckState.Unchecked ? CheckState.Checked : CheckState.Unchecked);\r\n                    this.ItemBoxChecked?.Invoke(this, model);\r\n                }\r\n                else\r\n                {\r\n                    this.isUserCheck = true;\r\n                    base.SelectedIndex = index;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                base.WndProc(ref m);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n`","Url":"https://github.com/dotnet/winforms/issues/3892","RelatedDescription":"Open issue \"CheckListBox has Bugs\" (#3892)"},{"Id":"700383179","IsPullRequest":true,"CreatedAt":"2020-09-12T21:28:22","Actor":"JeremyKuhne","Number":"3890","RawContent":null,"Title":"Extend EMF validation","State":"open","Body":"- Add support for save/restore DC\r\n- Add support for world transforms\r\n- Refactor to avoid duplication for DC state validation\r\n- Add Poly16 validators\r\n- Add context to XUnit exceptions to identify faulting validator\r\n- Fix SkipAllValidator\r\n- Start adding another string dump to look at applied transforms\r\n- Add regression validation for DataGridView GridColor rendering\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3890)","Url":"https://github.com/dotnet/winforms/pull/3890","RelatedDescription":"Open PR \"Extend EMF validation\" (#3890)"},{"Id":"700263673","IsPullRequest":false,"CreatedAt":"2020-09-12T16:04:47","Actor":"toolgood","Number":"3889","RawContent":null,"Title":"  Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file","State":"closed","Body":".NET Core Version:  3.1.402\r\n  \r\n\r\n**Problem description:**   Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file\r\n \r\n**Expected behavior:**\r\n\r\n![QQ截图20200912224438.png](https://i.loli.net/2020/09/12/L7CIqkvml8DHYNR.png)","Url":"https://github.com/dotnet/winforms/issues/3889","RelatedDescription":"Closed issue \"  Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file\" (#3889)"},{"Id":"699688408","IsPullRequest":true,"CreatedAt":"2020-09-11T22:09:06","Actor":"JeremyKuhne","Number":"3888","RawContent":null,"Title":"Reset all DpiHelper statics when setting the DPI mode (#3881)","State":"closed","Body":"#### Port of #3881\r\n\r\nReset all DpiHelper statics when setting the DPI mode.\r\n\r\nFixes #3832\r\n\r\n## Proposed changes\r\n\r\n- Reset all DpiHelper state when setting DPI mode\r\n\r\n## Customer Impact\r\n\r\n- DeviceDpi doesn't dynamically update when not using a manifest\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Test methodology\r\n\r\n- Manually ran repro project\r\n- Walked through message handling and statics\r\n\r\ncc: @Pilchie for RC2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3888)","Url":"https://github.com/dotnet/winforms/pull/3888","RelatedDescription":"Closed or merged PR \"Reset all DpiHelper statics when setting the DPI mode (#3881)\" (#3888)"},{"Id":"698733664","IsPullRequest":true,"CreatedAt":"2020-09-11T19:46:03","Actor":"JeremyKuhne","Number":"3881","RawContent":null,"Title":"Reset all DpiHelper statics when setting the DPI mode","State":"closed","Body":"Reset all DpiHelper statics when setting the DPI mode.\r\n\r\nFixes #3832\r\n\r\n## Proposed changes\r\n\r\n- Reset all DpiHelper state when setting DPI mode\r\n\r\n## Customer Impact\r\n\r\n- DeviceDpi doesn't dynamically update when not using a manifest\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Test methodology\r\n\r\n- Manually ran repro project\r\n- Walked through message handling and statics\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3881)","Url":"https://github.com/dotnet/winforms/pull/3881","RelatedDescription":"Closed or merged PR \"Reset all DpiHelper statics when setting the DPI mode\" (#3881)"},{"Id":"699230710","IsPullRequest":true,"CreatedAt":"2020-09-11T12:27:20","Actor":"dotnet-maestro[bot]","Number":"3887","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200909.8\r\n- **Date Produced**: 9/10/2020 1:18 AM\r\n- **Commit**: 91470b0b14ba016c1fb78211b12775287c17b34e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/16b71a2...91470b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3887)","Url":"https://github.com/dotnet/winforms/pull/3887","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3887)"},{"Id":"699181889","IsPullRequest":false,"CreatedAt":"2020-09-11T11:11:10","Actor":"hyperquantum","Number":"3886","RawContent":null,"Title":"DateTimePicker should obey Current(UI)Culture","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version:  3.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\n\r\nIt is not currently possible to change the language used by DateTimePicker. The control ignores CurrentCulture/CurrentUICulture of the current thread and uses the language as configured by the operating system.\r\n\r\nThis problem is an issue for WinForms applications that are localized in different languages and that need to be able to run with a language that is different from the language of the operating system.\r\n\r\nThis problem is (or was) also known as KB 889834.\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n\r\nDateTimePicker adapts to the CurrentCulture/CurrentUICulture of the current thread.\r\n\r\n**Minimal repro:**\r\n\r\nCreate a new WinForms project.\r\n\r\nChange Program.cs as follows (add the 3 lines about culture):\r\n```\r\nprivate static void Main()\r\n{\r\n    var c = CultureInfo.CreateSpecificCulture(\"fr-BE\");\r\n    CultureInfo.CurrentCulture = c;\r\n    CultureInfo.CurrentUICulture = c;\r\n\r\n    Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n    Application.EnableVisualStyles();\r\n    Application.SetCompatibleTextRenderingDefault(false);\r\n    Application.Run(new Form1());\r\n}\r\n```\r\n\r\nIn the form designer, add a Label and a DateTimePicker to the form.\r\n\r\nInitialize the label text in the form's constructor:\r\n```\r\npublic Form1()\r\n{\r\n    InitializeComponent();\r\n\r\n    label1.Text = DateTime.Now.ToLongDateString();\r\n}\r\n```\r\n\r\nFor me, running this program results in:\r\n\r\n![afbeelding](https://user-images.githubusercontent.com/7431685/92917085-6e095600-f42e-11ea-9f0f-fcd9cd4713b3.png)\r\n\r\nThe DateTimePicker should use the same language as the Label but it doesn't.","Url":"https://github.com/dotnet/winforms/issues/3886","RelatedDescription":"Open issue \"DateTimePicker should obey Current(UI)Culture\" (#3886)"},{"Id":"699018083","IsPullRequest":false,"CreatedAt":"2020-09-11T08:26:27","Actor":"John-Qiao","Number":"3885","RawContent":null,"Title":"[Accessibility] ToolTip on Tab needs to support all focusable controls","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20460.31\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\nWhen setting the ToolTip to Form itself, the ToolTip can be focusable using Inspect tool, and no error shows in Accessibility Insights For Windows tool testing result. \r\n![Inspect-Form](https://user-images.githubusercontent.com/45864985/92889321-b46bae80-f448-11ea-8cc6-067859328558.png)\r\n![AI-Form](https://user-images.githubusercontent.com/45864985/92889308-b170be00-f448-11ea-9b06-f3264ffa7ebe.png)\r\n\r\n**Problem description:**\r\nThe ToolTip is not focusable when set it to the control.  \r\n![AI-control](https://user-images.githubusercontent.com/45864985/92889333-b6ce0880-f448-11ea-80a0-07c66c7d08bb.png)\r\n\r\n**Expected behavior:**\r\nThe ToolTip should be focusable when set it to the control.\r\n\r\n**Minimal repro:**\r\n\r\n1. Extract “testApp.zip” and open it in VS.\r\n2. Build and run the project.\r\n3. Move the mouse on button1 to shows its tooltip text.\r\n4. Open Accessibility Insights For Windows tool to test that tooltip text of button1. \r\n[TestApp.zip](https://github.com/dotnet/winforms/files/5207538/TestApp.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3885","RelatedDescription":"Open issue \"[Accessibility] ToolTip on Tab needs to support all focusable controls\" (#3885)"},{"Id":"698937927","IsPullRequest":false,"CreatedAt":"2020-09-11T07:10:48","Actor":"Ashley-Li","Number":"3884","RawContent":null,"Title":"[Accessibility] ToolStripStatusLabel BoundingRectangle property is null","State":"open","Body":"* .NET Core Version:  .Net SDK 5.0.100-rc.2.20460.32\r\n\r\n* Have you experienced this same bug with .NET Framework?\r\nYes\r\n\r\n* More info:\r\nThis issue can reproduce on ToolStrip.\r\n\r\n**Minimal repro:**\r\n1. Extract “[testApp.zip](https://github.com/dotnet/winforms/files/5207198/testApp.zip)” and open it in VS.\r\n2. Build and run the project.\r\n3. Open Accessibility Insights For Windows tool, select focus on form and view result.\r\n\r\n**Actual behavior**\r\nAccessibility Insights For Windows tool complains about ToolStripStatusLabel BoundingRectangle property being null (508 502.3.1).\r\n![image](https://user-images.githubusercontent.com/56664234/92879854-fd6b3500-f43f-11ea-8954-b87da53296d2.png)\r\n\r\n\r\n\r\n**Expected behavior:**\r\nToolStripStatusLabel should have all required properties set.","Url":"https://github.com/dotnet/winforms/issues/3884","RelatedDescription":"Open issue \"[Accessibility] ToolStripStatusLabel BoundingRectangle property is null\" (#3884)"},{"Id":"698873617","IsPullRequest":false,"CreatedAt":"2020-09-11T05:50:58","Actor":"Jenna-Zheng","Number":"3883","RawContent":null,"Title":"[Accessibility] [Color Contrast] The Link is practically invisible when the full dataGridView row is highlighted/selected","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100-rc.1.20454.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nThe website is practically invisible when the full **dataGridView** row is highlighted/selected.\r\n![image](https://user-images.githubusercontent.com/64949616/92851142-d69d0680-f41f-11ea-83d1-2f5d8434114c.png)\r\n\r\n**Expected behavior:**\r\nThe website should be easy to read even if the full row is selected.\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms .Net Core application with a **DataGridView** control.\r\n2. Click **Edit Columns...** in **DataGridView's** smart tag.\r\n3. Click **Add** button in the Edit Columns dialog\r\n4. Set **Type** property value to **DataGridViewLinkColumn** in Add Column dialog and click **Close** button.\r\n5. Click the **ellopsis…** button of the **DefaultCellStyle** property of the **Column1** in the Edit Columns dialog.\r\n6. Set the **NullValue** property value to a website in the CellStyle builder dialog and Click **OK** button.\r\n7. Build and run it, then select the whole first row.\r\n8. Launch the **Accessibility insights** tool to observe the **color contrast** of the link.\r\n\r\n**Or**\r\n\r\n1. Extract \"[WindowsFormsApp3.zip](https://github.com/dotnet/winforms/files/5206913/WindowsFormsApp3.zip)\" and open it in VS.\r\n2. Build and run the project, then select the whole first row.\r\n3. Launch the **Accessibility insights** tool to observe the **color contrast** of the link.","Url":"https://github.com/dotnet/winforms/issues/3883","RelatedDescription":"Open issue \"[Accessibility] [Color Contrast] The Link is practically invisible when the full dataGridView row is highlighted/selected\" (#3883)"},{"Id":"698522557","IsPullRequest":true,"CreatedAt":"2020-09-10T23:25:49","Actor":"dotnet-maestro[bot]","Number":"3880","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200910.10\r\n- **Date Produced**: 9/10/2020 9:10 PM\r\n- **Commit**: 3802520ce6951111092039fe5b365985d9677708\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20460.7 to 5.0.0-rc.2.20460.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/cead74a...3802520\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3880)","Url":"https://github.com/dotnet/winforms/pull/3880","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3880)"},{"Id":"698442073","IsPullRequest":true,"CreatedAt":"2020-09-10T21:32:56","Actor":"dotnet-maestro[bot]","Number":"3879","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200910.7\r\n- **Date Produced**: 9/10/2020 7:40 PM\r\n- **Commit**: cead74acd39b1351b1668e440f6c7e220c216240\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20458.14 to 5.0.0-rc.2.20460.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/482494f...cead74a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3879)","Url":"https://github.com/dotnet/winforms/pull/3879","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3879)"},{"Id":"698302025","IsPullRequest":true,"CreatedAt":"2020-09-10T19:18:42","Actor":"dotnet-maestro[bot]","Number":"3877","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:76994ae1-7c65-4397-4ffb-08d849ef93df)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 76994ae1-7c65-4397-4ffb-08d849ef93df\r\n- **Build**: 20200909.8\r\n- **Date Produced**: 9/10/2020 1:18 AM\r\n- **Commit**: 91470b0b14ba016c1fb78211b12775287c17b34e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20431.1 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20431.1 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20431.1 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20431.1 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20431.1 to 5.0.0-beta.20459.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4be47e4...91470b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:76994ae1-7c65-4397-4ffb-08d849ef93df)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3877)","Url":"https://github.com/dotnet/winforms/pull/3877","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/arcade\" (#3877)"},{"Id":"698388041","IsPullRequest":true,"CreatedAt":"2020-09-10T19:16:31","Actor":"vladimir-krestov","Number":"3878","RawContent":null,"Title":"Adding Text pattern to UpDownControls","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1588\r\n\r\n\r\n## Proposed changes\r\n\r\n- Enable **Text pattern** support for `UpDownEditAccessibleObject`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Visually impaired users will be able to read and interact with the text content of a UpDownControls \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n### Before\r\n\r\n- Narrator does not announce the text navigation and selection of a UpDownControls\r\n\r\n### After\r\n\r\n- Narrator announces the text content of a UpDownControls (navigation, selection)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Narrator and Inspect\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net 5.0 Version: 5.0.0-rc.1.20431.5\r\n- Microsoft Windows [Version 10.0.19041.450]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3878)","Url":"https://github.com/dotnet/winforms/pull/3878","RelatedDescription":"Open PR \"Adding Text pattern to UpDownControls\" (#3878)"},{"Id":"698289886","IsPullRequest":true,"CreatedAt":"2020-09-10T17:45:42","Actor":"vladimir-krestov","Number":"3876","RawContent":null,"Title":"Adding Text pattern to PropertyGridView.GridViewEdit","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3683\r\nOriginal Bug: [1159883](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159883)\r\nBased on PR #2701\r\n\r\n\r\n## Proposed changes\r\n\r\n- Enable **Text pattern** support for `GridViewEditAccessibleObject`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Visually impaired users will be able to read and interact with the text content of a ToolStripTextBox\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n\r\n### Before\r\n\r\n- Narrator does not announce the text navigation and selection of a PropertyGridView.GridViewEdit\r\n\r\n### After\r\n\r\n- Narrator announces the text content of a PropertyGridView.GridViewEdit (navigation, selection)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Narrator and Inspect\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Net 5.0 Version: 5.0.0-rc.1.20431.5\r\n- Microsoft Windows [Version 10.0.19041.450]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3876)","Url":"https://github.com/dotnet/winforms/pull/3876","RelatedDescription":"Open PR \"Adding Text pattern to PropertyGridView.GridViewEdit\" (#3876)"},{"Id":"697417615","IsPullRequest":true,"CreatedAt":"2020-09-10T17:28:28","Actor":"JeremyKuhne","Number":"3873","RawContent":null,"Title":"Respect padding options when rendering text (#3872)","State":"closed","Body":"#### Port of #3872 to RC2\r\n\r\nText padding got lost in the rendering refactor. Pushed the public type down to `TextExtensions` to avoid some of the obfuscation and added rendering and measurement tests for padding.\r\n\r\nFixes #3823\r\n\r\n## Proposed changes\r\n\r\n- Pass through padding options\r\n- Add missing tests\r\n\r\n## Customer Impact\r\n\r\n- Without this you cannot change padding options\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92679361-11e2ec80-f2dd-11ea-8719-c6ff5cf15d26.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92679391-28894380-f2dd-11ea-8855-e99dd6bb7fe1.png)\r\n\r\n## Test methodology\r\n\r\n- Manual testing in sample apps\r\n- Add tests to validate rendering and measurement\r\n\r\ncc: @Pilchie for RC2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3873)","Url":"https://github.com/dotnet/winforms/pull/3873","RelatedDescription":"Closed or merged PR \"Respect padding options when rendering text (#3872)\" (#3873)"},{"Id":"697652415","IsPullRequest":true,"CreatedAt":"2020-09-10T09:09:49","Actor":"RussKie","Number":"3875","RawContent":null,"Title":"Do not reset user fonts in DataGridView","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3033\r\n\r\n\r\n## Proposed changes\r\n\r\n- Do not override user-configured font styles in the `DataGridView` whenever parent's (e.g. form's) font changes. \r\nThis scenario is likely to occur when users migrate their applications from .NET Framework to .NET Core/.NET and wish to retain the original default font. By changing form's font, this change propagates to form controls (e.g. a datagridview) and resets user-defined custom font styles.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- User will be able to migrate existing applications while retaining original default font (for .NET Framework).\r\n- \r\n\r\n## Regression? \r\n\r\n- Not direct, however a side effect of Default Font change in https://github.com/dotnet/winforms/pull/656\r\n\r\n## Risk\r\n\r\n- Small to moderate?\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/92708044-27b5e780-f399-11ea-9302-6c5419f85f90.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/92707894-0523ce80-f399-11ea-88c0-729d783247e4.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n- TBD\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3875)","Url":"https://github.com/dotnet/winforms/pull/3875","RelatedDescription":"Open PR \"Do not reset user fonts in DataGridView\" (#3875)"},{"Id":"697522228","IsPullRequest":true,"CreatedAt":"2020-09-10T06:58:03","Actor":"RussKie","Number":"3874","RawContent":null,"Title":"Remove incorrect assert","State":"open","Body":"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Unlike [WM_DPICHANGED message](https://docs.microsoft.com/en-us/windows/win32/hidpi/wm-dpichanged#parameters), [WM_GETDPISCALEDSIZE message](https://docs.microsoft.com/en-us/windows/win32/hidpi/wm-getdpiscaledsize#parameters) only contains the new DPI value, not X- and Y-axis values. So the assert is being incorrectly triggered in Debug builds when DPI changes.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3874)","Url":"https://github.com/dotnet/winforms/pull/3874","RelatedDescription":"Open PR \"Remove incorrect assert\" (#3874)"},{"Id":"697386950","IsPullRequest":true,"CreatedAt":"2020-09-10T04:13:59","Actor":"JeremyKuhne","Number":"3872","RawContent":null,"Title":"Respect padding options when rendering text","State":"closed","Body":"Text padding got lost in the rendering refactor. Pushed the public type down to `TextExtensions` to avoid some of the obfuscation and added rendering and measurement tests for padding.\r\n\r\nFixes #3823\r\n\r\n## Proposed changes\r\n\r\n- Pass through padding options\r\n- Add missing tests\r\n\r\n## Customer Impact\r\n\r\n- Without this you cannot change padding options\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92679361-11e2ec80-f2dd-11ea-8719-c6ff5cf15d26.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92679391-28894380-f2dd-11ea-8855-e99dd6bb7fe1.png)\r\n\r\n## Test methodology\r\n\r\n- Manual testing in sample apps\r\n- Add tests to validate rendering and measurement\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3872)","Url":"https://github.com/dotnet/winforms/pull/3872","RelatedDescription":"Closed or merged PR \"Respect padding options when rendering text\" (#3872)"},{"Id":"697246163","IsPullRequest":true,"CreatedAt":"2020-09-10T04:04:31","Actor":"JeremyKuhne","Number":"3870","RawContent":null,"Title":"Change DataGridView.GridColor when set. (#3869)","State":"closed","Body":"#### Port of #3869 to RC2\r\n\r\nActually change the GridColor when set. Add a test for GridColor.\r\n\r\nFixes #3829\r\n\r\n## Proposed changes\r\n\r\n- Fix missing property set \r\n\r\n## Customer Impact\r\n\r\n- Can't set the grid color without this change \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Very low\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nSee #3829, grid was black.\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92660008-691d9880-f2ae-11ea-9ac3-bb3cac3126b4.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add test for property\r\n- Validate visually in WinForms app\r\n- Examine GDI calls involved (Tests for the calls forthcoming, need to fill out the emf validation more. The records are a bit complicated as we're using GDI+ to draw the grid and it uses transforms and polylines to draw)\r\n\r\n\r\ncc: @Pilchie for RC2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3870)","Url":"https://github.com/dotnet/winforms/pull/3870","RelatedDescription":"Closed or merged PR \"Change DataGridView.GridColor when set. (#3869)\" (#3870)"},{"Id":"697282696","IsPullRequest":true,"CreatedAt":"2020-09-10T02:39:51","Actor":"RussKie","Number":"3871","RawContent":null,"Title":"Disable `RichTextBox_Text_GetWithHandle_ReturnsExpected`","State":"closed","Body":"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nUnder stress there's likely a race condition loading/unloading RichEdit20W control that leads to test runner crashes.\r\nDisabling the test to unblock 5.0 release. The test will be reworked and fixed in 6.0 branch.\r\n\r\nRelates to https://github.com/dotnet/winforms/issues/3867\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nNone, test infra changes\r\n\r\n\r\n/cc: @Pilchie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3871)","Url":"https://github.com/dotnet/winforms/pull/3871","RelatedDescription":"Closed or merged PR \"Disable `RichTextBox_Text_GetWithHandle_ReturnsExpected`\" (#3871)"},{"Id":"697194705","IsPullRequest":true,"CreatedAt":"2020-09-09T23:09:45","Actor":"JeremyKuhne","Number":"3869","RawContent":null,"Title":"Change DataGridView.GridColor when set.","State":"closed","Body":"Actually change the GridColor when set. Add a test for GridColor.\r\n\r\nFixes #3829\r\n\r\n## Proposed changes\r\n\r\n- Fix missing property set \r\n\r\n## Customer Impact\r\n\r\n- Can't set the grid color without this change \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Very low\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nSee #3829, grid was black.\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/8184940/92660008-691d9880-f2ae-11ea-9ac3-bb3cac3126b4.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add test for property\r\n- Validate visually in WinForms app\r\n- Examine GDI calls involved (Tests for the calls forthcoming, need to fill out the emf validation more. The records are a bit complicated as we're using GDI+ to draw the grid and it uses transforms and polylines to draw)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3869)","Url":"https://github.com/dotnet/winforms/pull/3869","RelatedDescription":"Closed or merged PR \"Change DataGridView.GridColor when set.\" (#3869)"},{"Id":"697167204","IsPullRequest":false,"CreatedAt":"2020-09-09T21:21:44","Actor":"cristianosuzuki77","Number":"3868","RawContent":null,"Title":"[LOC] Assistance with query","State":"open","Body":"\r\nString Resource ID | 0; \"DataGridViewCheckBoxCellCheckedStateDescription\"\r\n-- | --\r\nSource String | {0} check box checked\r\nFilename | System.Windows.Forms\\src\\Resources\\xlf\\SR.xlf\r\nQuestion | What will {0} be? Will it be the nubmer of checkbxes or name? Same with 0; \"DataGridViewCheckBoxCellUncheckedStateDescription\"\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3868","RelatedDescription":"Open issue \"[LOC] Assistance with query\" (#3868)"},{"Id":"696862507","IsPullRequest":true,"CreatedAt":"2020-09-09T14:25:57","Actor":"vladimir-krestov","Number":"3866","RawContent":null,"Title":"Adding Text pattern to DataGridViewTextBoxCell","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2786\r\nOriginal Bug: [1159872](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159872)\r\nBased on PR #2701\r\n\r\n## Proposed changes\r\n\r\n- Enable **Text pattern** support for `DataGridViewTextBoxEditingControlAccessibleObject`\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- Visually impaired users will be able to read and interact with the text content of a DataGridViewTextBoxCell\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Mininmal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n### Before\r\n- Narrator does not announce the text navigation and selection of a DataGridViewTextBoxCell\r\n<!-- TODO -->\r\n\r\n### After\r\n- Narrator announces the text content of a DataGridViewTextBoxCell (navigation, selection)\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n- Unit tests\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Narrator and Inspect\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net 5.0 Version: 5.0.0-rc.1.20431.5\r\n- Microsoft Windows [Version 10.0.19041.450]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3866)","Url":"https://github.com/dotnet/winforms/pull/3866","RelatedDescription":"Open PR \"Adding Text pattern to DataGridViewTextBoxCell\" (#3866)"},{"Id":"696785034","IsPullRequest":true,"CreatedAt":"2020-09-09T12:48:06","Actor":"vladimir-krestov","Number":"3865","RawContent":null,"Title":"Adding Text pattern to ToolStripTextBox","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3860 (BindingNavigator too)\r\nOrginal Bug: [1155254](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1155254)\r\nBased on PR #2701\r\n\r\n## Proposed changes\r\n\r\n- Enable **Text pattern** support for `ToolStripTextBoxControlAccessibleObject`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Visually impaired users will be able to read and interact with the text content of a ToolStripTextBox\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n\r\n### Before\r\n\r\n- Narrator does not announce the text navigation and selection of a ToolStripTextBox\r\n\r\n### After\r\n\r\n- Narrator announces the text content of a ToolStripTextBoxs (navigation, selection)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Narrator and Inspect\r\n   \r\n     \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net 5.0 Version: 5.0.0-rc.1.20431.5\r\n- Microsoft Windows [Version 10.0.19041.450]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3865)","Url":"https://github.com/dotnet/winforms/pull/3865","RelatedDescription":"Open PR \"Adding Text pattern to ToolStripTextBox\" (#3865)"},{"Id":"697032873","IsPullRequest":false,"CreatedAt":"2020-09-09T05:13:04","Actor":"RussKie","Number":"3867","RawContent":null,"Title":"Random \"RangeChecks instrumentation code detected an out of range array access\" in Debug x86 tests","State":"open","Body":"<!--This is just a template - feel free to delete any and all of it and replace as appropriate.-->\r\n\r\n### Description\r\n\r\n5.0-RC2 Windows Forms x86 Debug test appear to be randomly (yet persistently) crashing. E.g.\r\n* https://dev.azure.com/dnceng/internal/_build/results?buildId=806500&view=results\r\n* https://dev.azure.com/dnceng/internal/_build/results?buildId=806484&view=logs&j=7c8326b9-0a5f-532a-e6de-db8515c72d9a&t=99915513-7350-519e-b509-739b27f0b8ea&s=ff05ad62-bb9a-53b6-ce9f-72f329a63e7c\r\n* https://dev.azure.com/dnceng/public/_build/results?buildId=806509&view=artifacts&type=publishedArtifacts\r\n\r\nHowever upon re-run tests often succeed.\r\n\r\nThere's a memdump: https://dev.azure.com/dnceng/_apis/resources/Containers/5033456/Windows_NT_Windows%20Debug?itemPath=Windows_NT_Windows%20Debug%2Fdotnet.exe.49836.dmp which appear to have crashed with the following error:\r\n```\r\nUnhandled exception at 0x770B51D0 (ntdll.dll) in dotnet.exe.49836.dmp: RangeChecks instrumentation code detected an out of range array access.\r\n```\r\n\r\nLooking at the stack trace I'm struggling to form a hypothesis where the Windows Forms code may cause the buffer overrun:\r\n```\r\n     System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.DefWndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 515    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.DefWndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 5040    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.WndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 13032    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.TextBoxBase.WndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 2204    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.RichTextBox.WndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 3725    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.ControlNativeWindow.OnMessage(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 67    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.ControlNativeWindow.WndProc(ref System.Windows.Forms.Message m = {System.Windows.Forms.Message}) Line 119    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.Callback(System.IntPtr hWnd = 0x02a504ec, Interop.User32.WM msg = NCCREATE, System.IntPtr wparam = 0x00000000, System.IntPtr lparam = 0x13a9e0f0) Line 372    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.WindowClass.Callback(System.IntPtr hWnd = 0x02a504ec, Interop.User32.WM msg = NCCREATE, System.IntPtr wparam = 0x00000000, System.IntPtr lparam = 0x13a9e0f0) Line 55    C#    Symbols loaded.\r\n     [Native to Managed Transition]        Annotated Frame\r\n     [Managed to Native Transition]        Annotated Frame\r\n     System.Windows.Forms.Primitives.dll!Interop.User32.CreateWindowExW(Interop.User32.WS_EX dwExStyle = CLIENTEDGE, string lpClassName = \"WindowsForms10.RichEdit20W.app.0.358a177_r3_ad1\", string lpWindowName = null, Interop.User32.WS dwStyle = 1445003332, int X = 0, int Y = 0, int nWidth = 100, int nHeight = 96, System.IntPtr hWndParent = 0x01db0510, System.IntPtr hMenu = 0x00000000, System.IntPtr hInst = 0x00fb0000, object lpParam = null) Line 43    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams cp = {System.Windows.Forms.CreateParams}) Line 460    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.CreateHandle() Line 4934    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.TextBoxBase.CreateHandle() Line 1374    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.CreateControl(bool fIgnoreVisible = false) Line 4998    C#    Symbols loaded.\r\n     System.Windows.Forms.dll!System.Windows.Forms.Control.CreateControl() Line 4960    C#    Symbols loaded.\r\n>    System.Windows.Forms.Tests.dll!System.Windows.Forms.Tests.RichTextBoxTests.RichTextBox_CheckRichEditWithVersionCanCreateOldVersions() Line 10538    C#    Symbols loaded.\r\n```\r\n\r\nThe failures started after https://github.com/dotnet/winforms/pull/3821 was merged, but looking at the code that reportedly causes the failure it's not obvious how it could cause the error:\r\nhttps://github.com/dotnet/winforms/blob/release/5.0-rc2/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/RichTextBoxTests.cs#L10538\r\n\r\n### Configuration\r\n\r\ncoreclr.dll\tx86\\shared\\Microsoft.NETCore.App\\5.0.0-rc.2.20458.14\\coreclr.dll @ 482494f9ecc9a630599278b80893841462c90a5b\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3867","RelatedDescription":"Open issue \"Random \"RangeChecks instrumentation code detected an out of range array access\" in Debug x86 tests\" (#3867)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-09-14T05:30:49.0412052Z","RunDurationInMilliseconds":638}