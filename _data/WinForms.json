{"Data":{"GitHub":{"Issues":[{"Id":"2097446924","IsPullRequest":false,"CreatedAt":"2024-01-25T02:15:23","Actor":"statler","Number":"10731","RawContent":null,"Title":"Clickonce installer does not detect updates for some users","State":"closed","Body":"### .NET version\n\n.Net 7\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nI have near on 1000 clients using a clickonce installer for my winforms app. Since migrating from framework about 8 months ago the behaviour has been unreliable. Some users get prompted for updates, others dont. I have run a full uninstall, delete cache reinstall and it is still unpredictably failing in some cases. The deployment is across a wide range of networks, with some able to autoupdate and some not within the same network.\r\n\r\nAre there specific domain or security settings that impact whether a clickonce app can update itself?\n\n### Steps to reproduce\n\nCreate a .net core clickonce, deploy it to enough people over enough networks and a reasonable number of Clients aren't prompted for an update. As there is no manual API for querying, it is really hard to debug where the problem is.","Url":"https://github.com/dotnet/winforms/issues/10731","RelatedDescription":"Closed issue \"Clickonce installer does not detect updates for some users\" (#10731)"},{"Id":"2099365775","IsPullRequest":false,"CreatedAt":"2024-01-25T00:46:25","Actor":"KlausLoeffelmann","Number":"10741","RawContent":null,"Title":"[Umbrella-Item] Make WinForms DataBinding Apps trimmable","State":"open","Body":"This is an investigation and prototype issue at this point (with some good prospects of success, though).\r\n\r\n- [ ] Investigate options to improve Designer-side code generation to support Trimming for WinForms App which use Designer-hooked-up Data Binding (we will *explicitly* exclude non-type-safe Data Binding, like Runtime-Binding to DataTables/DataViews which use Property Descriptors to create \"Types\" at runtime.)\r\n- [ ] Investigate schema-discovery based on custom type descriptors, and runtime type conversions via reflection and the impact on trimming. Also take \r\n  - [ ] the [`Binding.Format` event](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.binding.format?view=windowsdesktop-8.0)\r\n  - [ ] the [`Binding.Parse` event](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.binding.parse?view=windowsdesktop-8.0)\r\n  - [ ] [the different intrinsic ways to convert to target on binding](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/DataBinding/Binding.cs,826)\r\n  - [ ] [the different intrinsic ways to convert to source on binding](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/DataBinding/Binding.cs,962)\r\n  - [ ] Maybe schema-generation in the DataGridView, [like described in this request/API suggestion](https://github.com/dotnet/winforms/issues/9138) \r\n  \r\n  into account.\r\n- [ ] Investigate runtime API-Improvements around\r\n  - [ ] [Binding](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/DataBinding/Binding.cs,bed1e5beea29de5c)\r\n  - [ ] [BindingSource](https://source.dot.net/#q=BindingSource)\r\n  - [ ] [Formatter](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/Internal/Formatter.cs,e12c083610518727)\r\n  - [ ] [ListBindingHelper](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/DataBinding/ListBindingHelper.cs,cdf058a848f1cd26)\r\n  - [ ] [ListBindingConverter](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/DataBinding/ListBindingConverter.cs,b89feeecce85a487)\r\n  - [ ] [BindingList<T>](https://source.dot.net/#System.ComponentModel.TypeConverter/System/ComponentModel/BindingList.cs,55afabf0a74c12cc)","Url":"https://github.com/dotnet/winforms/issues/10741","RelatedDescription":"Open issue \"[Umbrella-Item] Make WinForms DataBinding Apps trimmable\" (#10741)"},{"Id":"2099340219","IsPullRequest":false,"CreatedAt":"2024-01-25T00:18:30","Actor":"KlausLoeffelmann","Number":"10740","RawContent":null,"Title":"[Umbrella-Item] Investigate feasibility and implement Direct2D and DirectWrite Support","State":"open","Body":"Motivation behind this are performance and ability short-comings we are more and more facing with Font rendering and Bitmap (most of all transparancy) performance in certain contexts (DrawText, Label, Button, CheckBox, Owner-Drawing items, non-Win32-wrapped controls like DataGridView and ToolStripItems).\r\n\r\n**Note:** This is NOT priority-planned for the .NET 9, might be changing though in priority, should the requirements change (A11Y, Localization, Performance).\r\n\r\nWhile the Font-Rendering performance in WinForms has certainly room for improvement, the primary motivation behind this is another: we need rather be concerned about A11Y and localization issues in the future, which makes it important to already have this on our radar and start becoming prepared. (See below for a more detailed explanation around those concerns).\r\n\r\n- [ ] Investigate strategy to iteratively introduce a subset of Direct2D and DirectWrite into WinForms\r\n- [ ] Improve BitBlting by utilizing a subset of the Direct2D Imaging API\r\n- [ ] Add alternative Text-Rendering options for Owner-Item and other Graphics based rendering scenarios\r\n- [ ] Introduce optional DirectWrite-supported Text Rendering for certain controls, which would be A11Y/Localization impacted.\r\n\r\n## Details - concerns about Font-Rendering abilities mid- and long-term:\r\n\r\nWe can generally expect issues with fonts that have complex scripts, ligatures, or advanced typographic features. These fonts are more likely to benefit from DirectWrite for proper rendering or will need DirectWrite to be rendered at all. Here are some examples of font scenarios where GDI/GDI+ may face or already has challenges:\r\n\r\n**Fonts with Complex Scripts:** Fonts designed for languages with complex scripts like Arabic, Hebrew, or Indic languages may not render correctly or fail to render correctly with GDI/GDI+ due to the intricate shaping and contextual glyph substitution required for these scripts. This would quickly lead to A11Y and serious localization issues.\r\n\r\n**Ligature-Heavy Fonts:** Fonts that make extensive use of ligatures (special character combinations) may not display ligatures correctly with GDI/GDI+. DirectWrite can handle ligatures more effectively, or even address ligature rendering altogether, where GDI/GDI+ would fail.\r\n\r\n**Variable Fonts:**: Variable fonts, which allow for variations in weight, width, or other attributes within a single font file, may not be or not sufficiently supported by GDI/GDI+.\r\n\r\n**Color Fonts:**: Fonts that include color information (e.g., emoji fonts) will not render correctly with GDI/GDI+. This will also become more important in the future, since rendering text for all kind of aspects of UI will rely on Fonts providing Symbols, Pictograms, Emoticons, and will quickly turn into A11Y challenges.\r\n\r\n**OpenType Features:** Fonts with advanced OpenType features like stylistic alternates, swashes, or discretionary ligatures may not or not sufficiently supported by GDI/GDI+.\r\n","Url":"https://github.com/dotnet/winforms/issues/10740","RelatedDescription":"Open issue \"[Umbrella-Item] Investigate feasibility and implement Direct2D and DirectWrite Support\" (#10740)"},{"Id":"2099318060","IsPullRequest":false,"CreatedAt":"2024-01-24T23:52:23","Actor":"KlausLoeffelmann","Number":"10739","RawContent":null,"Title":"[Umbrella-Item] Planned \"async feature\" work for .NET 9","State":"open","Body":"Prio 1:\r\n- [ ] #4631\r\n- [ ] #5917\r\n\r\nPrio 2:\r\n- [ ] #8582 \r\n- [ ] #8547 \r\n\r\nPrio 2, but may slip to 10.\r\n- [ ] #4631\r\n","Url":"https://github.com/dotnet/winforms/issues/10739","RelatedDescription":"Open issue \"[Umbrella-Item] Planned \"async feature\" work for .NET 9\" (#10739)"},{"Id":"2099161644","IsPullRequest":true,"CreatedAt":"2024-01-24T23:51:44","Actor":"dotnet-maestro[bot]","Number":"10737","RawContent":null,"Title":"[release/9.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:37db25bc-6fad-4165-2518-08dc1750a536)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 37db25bc-6fad-4165-2518-08dc1750a536\r\n- **Build**: 20240123.11\r\n- **Date Produced**: January 24, 2024 9:20:37 PM UTC\r\n- **Commit**: 96a77b734917357bf3eccb5ca6ae1f72326a8f77\r\n- **Branch**: refs/heads/release/9.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Management**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Speech**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.1.24073.8 to 9.0.0-preview.1.24073.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/923b83a56f...96a77b7349\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:37db25bc-6fad-4165-2518-08dc1750a536)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10737)","Url":"https://github.com/dotnet/winforms/pull/10737","RelatedDescription":"Closed or merged PR \"[release/9.0-preview1] Update dependencies from dotnet/runtime\" (#10737)"},{"Id":"2099291236","IsPullRequest":true,"CreatedAt":"2024-01-24T23:25:23","Actor":"JeremyKuhne","Number":"10738","RawContent":null,"Title":"Type primitive arrays in BinaryFormattedObject","State":"open","Body":"`ArraySinglePrimitive` was taking `IReadOnlyList<object>` which necessitated boxing all items. This converts `ArrayRecord` to be typed so we can avoid this and adds special optimizations for `byte[]`. This is important for performance of the types we're supporting or intending to support (such as `ImageListStreamer`).\r\n\r\nIt may be possible to further improve this. If the array data is always aligned in the input then we can just read/write the data directly as byte arrays. `DateTime`, `TimeSpan`, and `decimal` need individually parsed.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10738)","Url":"https://github.com/dotnet/winforms/pull/10738","RelatedDescription":"Open PR \"Type primitive arrays in BinaryFormattedObject\" (#10738)"},{"Id":"2098866278","IsPullRequest":true,"CreatedAt":"2024-01-24T19:38:08","Actor":"JeremyKuhne","Number":"10736","RawContent":null,"Title":"Clean up ImageListStreamer","State":"closed","Body":"Clean up the code in ImageListStreamer. It should be more efficient now as it uses vector optimized reading and writing from the .NET libraries (through the SpanReader/Writer) .\r\n\r\n- Factor out RLE encoding into RunLengthEncoder\r\n- Add a SpanWriter to go with SpanReader\r\n- Tweak SpanReader to have Position property and add IsNext, TryAdvancePast, and AdvancePast\r\n- Add inherit doc to ImageList P/Invoke overloads\r\n\r\nAlso add a test to catch public types in System.Private.Windows.Core and fix the prior misses.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10736)","Url":"https://github.com/dotnet/winforms/pull/10736","RelatedDescription":"Closed or merged PR \"Clean up ImageListStreamer\" (#10736)"},{"Id":"2097436884","IsPullRequest":true,"CreatedAt":"2024-01-24T18:40:57","Actor":"Tanya-Solyanik","Number":"10730","RawContent":null,"Title":"cleaned up implementations of RuntimeId in AccessibleObjects","State":"closed","Body":"1  fixed style\r\n2. replaced PARAM.ToInt with a cast (int) because InpPtr is now implemented as a nint\r\n3. fixed xml-doc comments\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10730)","Url":"https://github.com/dotnet/winforms/pull/10730","RelatedDescription":"Closed or merged PR \"cleaned up implementations of RuntimeId in AccessibleObjects\" (#10730)"},{"Id":"2098222801","IsPullRequest":true,"CreatedAt":"2024-01-24T13:32:44","Actor":"dotnet-maestro[bot]","Number":"10734","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240123.16\r\n- **Date Produced**: January 24, 2024 9:30:09 AM UTC\r\n- **Commit**: 313ec077c3975e5ff58c08ead212afc7fb58a24e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Management**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Speech**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.2.24072.10 to 9.0.0-preview.2.24073.16][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e3547f1d3a...313ec077c3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10734)","Url":"https://github.com/dotnet/winforms/pull/10734","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10734)"},{"Id":"2098222178","IsPullRequest":true,"CreatedAt":"2024-01-24T13:32:25","Actor":"dotnet-maestro[bot]","Number":"10733","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240124.1\r\n- **Date Produced**: January 24, 2024 9:30:02 AM UTC\r\n- **Commit**: ac3bef13c5ab17858f69c12d015057a992f8da8a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24072.1 to 9.0.0-beta.24074.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/3e1d8f1566...ac3bef13c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10733)","Url":"https://github.com/dotnet/winforms/pull/10733","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10733)"},{"Id":"2098249935","IsPullRequest":false,"CreatedAt":"2024-01-24T13:17:34","Actor":"koszeggy","Number":"10735","RawContent":null,"Title":"[.NET 8]ErrorProvider picks the wrong size from multi-resolution icons","State":"open","Body":"### .NET version\n\n.NET 8.0.100\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nAll .NET Framework versions, and also .NET Core / .NET up to .NET 7\n\n### Issue description\n\nIf you assign a multi-resolution icon to `ErrorProvider`, then before .NET 8 a smaller size was taken than in .NET 8.\r\n\r\nIllustration:\r\n\r\n| Description | Image |\r\n|-|-|\r\n| .NET 7, 100% | ![image](https://github.com/dotnet/winforms/assets/27336165/0f68f424-d0f5-4105-aa6f-03d92e93ebc3)|\r\n| .NET 7, 150% | ![image](https://github.com/dotnet/winforms/assets/27336165/4aadc67b-f54e-43a0-ba5a-3159f255a44b)|\r\n| .NET 8, 100% | ![image](https://github.com/dotnet/winforms/assets/27336165/003a764d-a001-464b-ac8d-321f7659e917) |\r\n\n\n### Steps to reproduce\n\nSee the attached [ErrorProviderIssue.zip](https://github.com/dotnet/winforms/files/14038709/ErrorProviderIssue.zip).\r\n\r\nThe screenshots above use [this](https://docs.kgysoft.net/drawing/html/P_KGySoft_Drawing_Icons_SystemError.htm) error icon, which returns dynamic sizes based on the current DPI.\r\n\r\nWhen using fix-sized icons (like [this one](https://docs.kgysoft.net/drawing/html/P_KGySoft_Drawing_Icons_Error.htm)), the old behavior is also not perfect as it always takes the smallest icon. But taking the 32x32 one on 100% DPI (as it happens now in .NET 8) is definitely not a better solution.\r\n\r\nA workaround that works both for .NET 7- and .NET 8+ is included in the attached example. It [extracts](https://docs.kgysoft.net/drawing/html/M_KGySoft_Drawing_IconExtensions_ExtractNearestIcon.htm) the proper icon size based on the current DPI. If the change is because the old behavior wasn't quite desired something like this could be a possible solution.","Url":"https://github.com/dotnet/winforms/issues/10735","RelatedDescription":"Open issue \"[.NET 8]ErrorProvider picks the wrong size from multi-resolution icons\" (#10735)"},{"Id":"2097679903","IsPullRequest":true,"CreatedAt":"2024-01-24T08:08:29","Actor":"LeafShi1","Number":"10732","RawContent":null,"Title":"Use CurrentUICulture in KeysConverter.cs when converting to name in d…","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #10687 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Use CurrentUICulture instead of CurrentCulture in function ConvertTo and ConvertFrom \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Key values and order will be displayed according to CurrentUICulture\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n- Key values and order are displayed according to CurrentCulture\r\n\r\n### After\r\n\r\n - Key values and order are displayed according to CurrentUICulture\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 9.0.0-alpha.1.24066.33\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10732)","Url":"https://github.com/dotnet/winforms/pull/10732","RelatedDescription":"Open PR \"Use CurrentUICulture in KeysConverter.cs when converting to name in d…\" (#10732)"},{"Id":"2097194720","IsPullRequest":true,"CreatedAt":"2024-01-24T00:22:36","Actor":"elachlan","Number":"10729","RawContent":null,"Title":"Enable CA1815 - Override equals and operator equals on value types","State":"open","Body":"Fixes #8284\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10729)","Url":"https://github.com/dotnet/winforms/pull/10729","RelatedDescription":"Open PR \"Enable CA1815 - Override equals and operator equals on value types\" (#10729)"},{"Id":"2097184300","IsPullRequest":true,"CreatedAt":"2024-01-24T00:10:22","Actor":"elachlan","Number":"10728","RawContent":null,"Title":"Add MiscValue to UserControlWithObjectCollectionEditor to enable manual testing of \"misc\" label on PropertyGrid","State":"open","Body":"Helps with testing the issue in https://github.com/dotnet/runtime/issues/94365\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10728)","Url":"https://github.com/dotnet/winforms/pull/10728","RelatedDescription":"Open PR \"Add MiscValue to UserControlWithObjectCollectionEditor to enable manual testing of \"misc\" label on PropertyGrid\" (#10728)"},{"Id":"2097103472","IsPullRequest":true,"CreatedAt":"2024-01-23T23:04:25","Actor":"dotnet-maestro[bot]","Number":"10727","RawContent":null,"Title":"[release/9.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:37db25bc-6fad-4165-2518-08dc1750a536)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 37db25bc-6fad-4165-2518-08dc1750a536\r\n- **Build**: 20240123.8\r\n- **Date Produced**: January 23, 2024 10:11:02 PM UTC\r\n- **Commit**: 923b83a56f34df2fd8ea5bde5800fe8c39f26d80\r\n- **Branch**: refs/heads/release/9.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.1.24073.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/205ef031e0...923b83a56f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:37db25bc-6fad-4165-2518-08dc1750a536)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10727)","Url":"https://github.com/dotnet/winforms/pull/10727","RelatedDescription":"Closed or merged PR \"[release/9.0-preview1] Update dependencies from dotnet/runtime\" (#10727)"},{"Id":"2097024135","IsPullRequest":false,"CreatedAt":"2024-01-23T21:34:25","Actor":"merriemcgaw","Number":"10726","RawContent":null,"Title":"[Tracking] Update WinForms types that use BinaryFormatter for Preview 2","State":"open","Body":"ImageListStreamer\r\nListViewGroup\r\nListViewItem\r\nOwnerDrawPropertyBag\r\nTreeNode\r\nListViewItem.ListViewSubItem\r\n\r\nPart of #6267 ","Url":"https://github.com/dotnet/winforms/issues/10726","RelatedDescription":"Open issue \"[Tracking] Update WinForms types that use BinaryFormatter for Preview 2\" (#10726)"},{"Id":"2096800304","IsPullRequest":true,"CreatedAt":"2024-01-23T20:54:45","Actor":"github-actions[bot]","Number":"10724","RawContent":null,"Title":"[release/8.0] dispose graphics in TabControl.WmReflectDrawItem()","State":"closed","Body":"Backport of #10536 to release/8.0\n\n/cc @lonitra @jgilbert2017\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10724)","Url":"https://github.com/dotnet/winforms/pull/10724","RelatedDescription":"Closed or merged PR \"[release/8.0] dispose graphics in TabControl.WmReflectDrawItem()\" (#10724)"},{"Id":"2096846003","IsPullRequest":true,"CreatedAt":"2024-01-23T19:35:59","Actor":"lonitra","Number":"10725","RawContent":null,"Title":"[release/8.0] Fix ImageList rendering of transparent images","State":"open","Body":"backport of https://github.com/dotnet/winforms/pull/10696\r\n\r\nWe were modifying the CLR_NONE constant when passing it to Win32 APIs that accept it.\r\n\r\n- Don't pass PInvoke.CLR_NONE through Color.FromArgb, just cast to COLORREF\r\n- Add comments to COLORREF\r\n- Added Inheritdoc for a few methods in PInvoke.ImageList\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10725)","Url":"https://github.com/dotnet/winforms/pull/10725","RelatedDescription":"Open PR \"[release/8.0] Fix ImageList rendering of transparent images\" (#10725)"},{"Id":"2096412925","IsPullRequest":false,"CreatedAt":"2024-01-23T19:29:30","Actor":"robertmuehsig","Number":"10723","RawContent":null,"Title":"ContextMenuStrip in Tray doesn't look \"Native\"","State":"closed","Body":"### .NET version\r\n\r\n6.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes (Kind of - at least the \"older\" MenuItem variant)\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nWe are in the process to migrate our application from \".NET Framework 4.8\" to .NET 6 (and upwards). \r\nThe \"Upgrade Assistant\" told us to migrate the \"ContextMenu\" (and similar classes) to the newer \"ContextMenuStrip\" system for our application tray icon.\r\n\r\nAfter we migrate the code the look and feel doesn't match the system.\r\n\r\nBefore:\r\n![image](https://github.com/dotnet/winforms/assets/756703/86001be3-de7c-4ac2-8aa9-6982805fe2bb)\r\n\r\nAfter:\r\n![image](https://github.com/dotnet/winforms/assets/756703/99acff01-65d1-40c7-9474-2862a795b14c)\r\n\r\nI already discovered these issues, but I wasn't sure if they apply to the \"tray icon\" stuff as well:\r\n- #2476\r\n- #2543\r\n\r\n... because drop downs in Windows 11 looks different then the items in a tray icon.\r\n\r\nMy question: Is this by design and an open bug or do I miss something? The goal would be that it should like other native tray menus.\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nFollowing code:\r\n\r\n```\r\nusing System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\npublic class TrayApplicationContext : ApplicationContext\r\n{\r\n    private NotifyIcon trayIcon;\r\n    private ContextMenuStrip contextMenu;\r\n\r\n    public TrayApplicationContext()\r\n    {\r\n        InitializeContext();\r\n    }\r\n\r\n    private void InitializeContext()\r\n    {\r\n        // Create a context menu for the tray icon\r\n        contextMenu = new ContextMenuStrip();\r\n        contextMenu.Items.Add(\"Item 1\", null, OnItem1Click);\r\n        contextMenu.Items.Add(\"Item 2\", null, OnItem2Click);\r\n        contextMenu.Items.Add(new ToolStripSeparator());\r\n        contextMenu.Items.Add(\"Exit\", null, OnExitClick);\r\n\r\n        // Initialize the tray icon\r\n        trayIcon = new NotifyIcon()\r\n        {\r\n            Icon = SystemIcons.Application,\r\n            ContextMenuStrip = contextMenu,\r\n            Visible = true\r\n        };\r\n    }\r\n\r\n    private void OnItem1Click(object sender, EventArgs e)\r\n    {\r\n        MessageBox.Show(\"Item 1 clicked\");\r\n    }\r\n\r\n    private void OnItem2Click(object sender, EventArgs e)\r\n    {\r\n        MessageBox.Show(\"Item 2 clicked\");\r\n    }\r\n\r\n    private void OnExitClick(object sender, EventArgs e)\r\n    {\r\n        Application.Exit();\r\n    }\r\n}\r\n\r\npublic class Program\r\n{\r\n    [STAThread]\r\n    public static void Main()\r\n    {\r\n        Application.EnableVisualStyles();\r\n        Application.SetCompatibleTextRenderingDefault(false);\r\n        Application.Run(new TrayApplicationContext());\r\n    }\r\n}\r\n```\r\n\r\nWill render this:\r\n![image](https://github.com/dotnet/winforms/assets/756703/8d24b255-ed4e-4a05-b2bf-741f752de2a9)\r\n\r\nInstead of something like this:\r\n\r\n![image](https://github.com/dotnet/winforms/assets/756703/8017c648-f5d7-43e5-b9c1-148882561a3e)\r\n","Url":"https://github.com/dotnet/winforms/issues/10723","RelatedDescription":"Closed issue \"ContextMenuStrip in Tray doesn't look \"Native\"\" (#10723)"},{"Id":"2096049161","IsPullRequest":true,"CreatedAt":"2024-01-23T17:14:51","Actor":"dotnet-maestro[bot]","Number":"10722","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240122.10\r\n- **Date Produced**: January 23, 2024 9:58:49 AM UTC\r\n- **Commit**: e3547f1d3ac768a14a0598abf7868641ecf0c9d7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24072.1 to 9.0.0-preview.2.24072.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/205ef031e0...e3547f1d3a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10722)","Url":"https://github.com/dotnet/winforms/pull/10722","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10722)"},{"Id":"2096048572","IsPullRequest":true,"CreatedAt":"2024-01-23T13:37:22","Actor":"dotnet-maestro[bot]","Number":"10721","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240122.1\r\n- **Date Produced**: January 22, 2024 6:45:37 PM UTC\r\n- **Commit**: 3e1d8f1566e3e88816e816aff285bdd709c1260a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24072.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/abddd0bd51...3e1d8f1566\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10721)","Url":"https://github.com/dotnet/winforms/pull/10721","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10721)"},{"Id":"2095669442","IsPullRequest":true,"CreatedAt":"2024-01-23T09:44:47","Actor":"Epica3055","Number":"10720","RawContent":null,"Title":"fix bug: No text for new tabpage item that added by TabPages property in the properties window in the DemoConsole application","State":"open","Body":"\r\n\r\nFixes #10545\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n-  After instance is created, set default value in a similar manner with Designer Repo\r\n- https://github.com/microsoft/winforms-designer/blob/f027b560109858bceaddbbad6b0abc7fdaa9914e/src/Microsoft.DotNet.DesignTools.Server/Editors/CollectionEditor.cs#L254-L258\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed\r\n\r\n## Customer Impact\r\n\r\n- \r\n-  -->\r\n<!--\r\n## Regression? \r\n\r\n- Yes / No-->\r\n\r\n## Risk\r\n\r\n- low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![TabControl](https://github.com/dotnet/winforms/assets/38325459/e1788125-2832-45b1-8148-1640a410b094)\r\n\r\n### After\r\n\r\nhttps://github.com/dotnet/winforms/assets/135201996/c6e1f5bf-d614-41e2-ba07-ca82902a53e1\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- manual\r\n- \r\n\r\n<!--## Accessibility testing   Remove this section if PR does not change UI -->\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n9.0.0-alpha.1.24066.33\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10720)","Url":"https://github.com/dotnet/winforms/pull/10720","RelatedDescription":"Open PR \"fix bug: No text for new tabpage item that added by TabPages property in the properties window in the DemoConsole application\" (#10720)"},{"Id":"2095384684","IsPullRequest":false,"CreatedAt":"2024-01-23T06:59:09","Actor":"Junjun-zhao","Number":"10719","RawContent":null,"Title":"[dotnet-sdk-9.0.100-alpha.1.24070.3] AnalogyLogViewer launch failed with error: \"System.AccessViolationException: Attempted to read or write protected memory...\"","State":"open","Body":"### .NET version\r\n\r\n```\r\n.NET SDK:\r\n Version:           9.0.100-alpha.1.24070.3\r\n Commit:            f91d4ca399\r\n Workload version:  9.0.100-manifests.0d37fe7a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.100-alpha.1.24070.3\\\r\n\r\n.NET workloads installed:\r\n [wasm-tools]\r\n   Installation Source: VS 17.8.34408.163\r\n   Manifest Version:    9.0.0-alpha.1.24066.33/9.0.100-alpha.1\r\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\9.0.100-alpha.1\\microsoft.net.workload.mono.toolchain.current\\9.0.0-alpha.1.24066.33\\WorkloadManifest.json\r\n   Install Type:              Msi\r\n\r\nHost:\r\n  Version:      9.0.0-alpha.1.24066.33\r\n  Architecture: x64\r\n  Commit:       dbb335c6ba\r\n\r\n.NET SDKs installed:\r\n  9.0.100-alpha.1.24070.3 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 9.0.0-alpha.1.24068.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 9.0.0-alpha.1.24066.33 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 9.0.0-alpha.1.24068.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n**Yes** \r\n\r\n1). Windows 10 21h2 AMD64 + dotnet-sdk-9.0.100-alpha.1.24070.3: Fail\r\n\r\n2). Windows 10 21h2 AMD64 + dotnet-sdk-9.0.100-alpha.1.24072.15: Fail\r\n\r\n3). Windows 10 21h2 AMD64 + dotnet-sdk-9.0.100-alpha.1.24066.1: Pass\r\n\r\n4). Windows 10 21h2 AMD64 + dotnet-sdk-8.0.101-win-x64: Pass\r\n\r\n5). Windows 10 21h2 AMD64 + dotnet-sdk-7.0.405-win-x64: Pass\r\n\r\n### Issue description\r\n\r\nWhen launching a 3rd party application with latest .NET 9 version, a System.AccessViolationException: \" Attempted to read or write protected memory. This is often an indication that other memory is corrupt\" will be encountered.\r\n\r\n**Application Name**: AnalogyLogViewer\r\n**OS**: Windows 10 21H2\r\n**CPU**: X64\r\n**.NET Build Number**: dotnet-sdk-9.0.100-alpha.1.24070.3\r\n**Github link**: https://github.com/Analogy-LogViewer/Analogy.LogViewer\r\n**App or App source checking at**: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1943748\r\n### Steps to reproduce\r\n\r\n**App repro steps:**\r\n**The machine only has dotnet-sdk-9.0.100-alpha.1.24070.3 installed. And environment variable DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX set as 2**\r\n1.Launch Analogy.exe in \"\\Analogy.LogViewer\".\r\n\r\n**Expected Result**: Launch successfully.\r\n**Actual Result**: Launch failed with error: \r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at DynamicClass.__get_handle(System.Drawing.Icon)\r\n   at DevExpress.Utils.Helpers.IconGuard.IsDisposedOrInvalid(System.Drawing.Icon)\r\n   at DevExpress.XtraEditors.FormIconOptions+FormIconHelper.GetIconHandleSafely(System.Drawing.Icon)\r\n   at DevExpress.XtraEditors.FormIconOptions.CheckUpdateIcon()\r\n   at DevExpress.XtraEditors.FormIconOptions.get_Icon()\r\n   at DevExpress.XtraEditors.FormIconOptions.get_UseIconImage()\r\n   at DevExpress.XtraEditors.FormIconOptions.UpdateIcon(Boolean)\r\n   at DevExpress.XtraEditors.FormIconOptions.InitializeIcon(Boolean)\r\n   at DevExpress.XtraEditors.FormIconOptions..ctor(DevExpress.XtraEditors.IFormIconOptionsOwner, Boolean)\r\n   at DevExpress.XtraEditors.FormIconOptions..ctor(DevExpress.XtraEditors.IFormIconOptionsOwner)\r\n   at DevExpress.XtraEditors.XtraForm.CreateIconOptions()\r\n   at DevExpress.XtraEditors.XtraForm..ctor()\r\n   at DevExpress.XtraBars.Ribbon.RibbonForm..ctor()\r\n   at Analogy.Forms.MainForm..ctor(Analogy.Common.Interfaces.IFactoriesManager, Analogy.Common.Interfaces.IExtensionsManager, Analogy.CommonControls.Managers.BookmarkPersistManager, Analogy.Managers.UpdateManager, Analogy.Common.Managers.FileProcessingManager, Analogy.Managers.NotificationManager, Analogy.Interfaces.IAnalogyFoldersAccess, Analogy.Managers.AnalogyOnDemandPlottingManager)\r\n   at Analogy.Program.Main()\r\n\r\n```\r\n**Minimal Repro steps (Demo attached):**\r\n[WinFormsDemo.zip](https://github.com/dotnet/winforms/files/14019505/WinFormsDemo.zip)\r\n1. Create a new winform app with .net8.0.\r\n\r\n2. Add Assembly reference: DevExpress.Utils.v23.1 and DevExpress.XtraBars.v23.1 from \\WinFormsDemo\\DevExpress\\.net core.\r\n\r\n3. Add an inheritance of devexpress in Form1.cs:\r\n` public partial class Form1 : DevExpress.XtraBars.FluentDesignSystem.FluentDesignForm`\r\n4. Build app.\r\n5. Change runtime to .net9.0: \r\n```\r\n\"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"9.0.0-alpha.1.24066.33\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"9.0.0-alpha.1.24068.7\"\r\n      }\r\n    ]\r\n```\r\n6. Launch app.\r\n\r\n**Findings:**\r\nIt looks like an exception thrown when inheriting from DevExpress.XtraBars.FluentDesignSystem.FluentDesignForm. The current version being used is v23.1. We upgraded to the latest version v23.2.3, it still doesn't work.\r\n\r\n@dotnet-actwx-bot @dotnet/compat ","Url":"https://github.com/dotnet/winforms/issues/10719","RelatedDescription":"Open issue \"[dotnet-sdk-9.0.100-alpha.1.24070.3] AnalogyLogViewer launch failed with error: \"System.AccessViolationException: Attempted to read or write protected memory...\"\" (#10719)"},{"Id":"2094802717","IsPullRequest":true,"CreatedAt":"2024-01-23T00:27:21","Actor":"JeremyKuhne","Number":"10716","RawContent":null,"Title":"Clarify ImageConverter","State":"closed","Body":"ImageConverter has some conversion code with somewhat magic numbers in it. This change documents the format it's looking for and validates it more throroughly.\r\n\r\nIt also adds a new high-performance Span reader class for scenarios like this that allow bounds checked iterating through data. It makes code written for this much easier to visually validate as opposed to slicing through spans manually.\r\n\r\nAlso:\r\n\r\n- Use SpanReader in Icon parsing code\r\n- Fix ordering of class keywords in a number of files\r\n- Add readonly modifier to some fields\r\n- Minor comment cleanup\r\n- Move ICONDIR and ICONDIRENTRY to interop folder\r\n- Delete ENHMETAHEADER\r\n- Move SpanHelpers\r\n- Move POINTS to Core\r\n- Delete unused  code in ARGB\r\n- Move method from ARGB to ArgbBuffer\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10716)","Url":"https://github.com/dotnet/winforms/pull/10716","RelatedDescription":"Closed or merged PR \"Clarify ImageConverter\" (#10716)"},{"Id":"2094971326","IsPullRequest":true,"CreatedAt":"2024-01-23T00:05:03","Actor":"lonitra","Number":"10718","RawContent":null,"Title":"Update main Branding to .NET 9 Preview 2","State":"closed","Body":"- Update milestone for fabricbot\r\n- Update branding to .NET 9 Preview 2 for main\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10718)","Url":"https://github.com/dotnet/winforms/pull/10718","RelatedDescription":"Closed or merged PR \"Update main Branding to .NET 9 Preview 2\" (#10718)"},{"Id":"2094730866","IsPullRequest":true,"CreatedAt":"2024-01-22T23:22:17","Actor":"lonitra","Number":"10714","RawContent":null,"Title":"Publish Unpublished APIs for .NET 9 preview 1","State":"closed","Body":"ran `.\\eng\\ApiCompatibility\\mark-shipped.cmd`\r\n","Url":"https://github.com/dotnet/winforms/pull/10714","RelatedDescription":"Closed or merged PR \"Publish Unpublished APIs for .NET 9 preview 1\" (#10714)"},{"Id":"2094836868","IsPullRequest":true,"CreatedAt":"2024-01-22T22:51:17","Actor":"lonitra","Number":"10717","RawContent":null,"Title":"Sort PublicAPI.Shipped.txt Files","State":"closed","Body":"sorted using edit > advanced > sort lines in VS after selecting all lines\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10717)","Url":"https://github.com/dotnet/winforms/pull/10717","RelatedDescription":"Closed or merged PR \"Sort PublicAPI.Shipped.txt Files\" (#10717)"},{"Id":"2094775641","IsPullRequest":true,"CreatedAt":"2024-01-22T22:08:40","Actor":"lonitra","Number":"10715","RawContent":null,"Title":"Update PreReleaseVersionLabel to preview","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10715)","Url":"https://github.com/dotnet/winforms/pull/10715","RelatedDescription":"Closed or merged PR \"Update PreReleaseVersionLabel to preview\" (#10715)"},{"Id":"2094609082","IsPullRequest":true,"CreatedAt":"2024-01-22T20:44:14","Actor":"Tanya-Solyanik","Number":"10713","RawContent":null,"Title":"removing an override that is identical to the base class implementation","State":"closed","Body":"Implementation in the ControlAccessibleObject class - \r\nhttps://github.com/dotnet/winforms/blob/d5528f6ce1d65d9f3694d679ee745690cb2e1675/src/System.Windows.Forms/src/System/Windows/Forms/Accessibility/Control.ControlAccessibleObject.cs#L535-L547","Url":"https://github.com/dotnet/winforms/pull/10713","RelatedDescription":"Closed or merged PR \"removing an override that is identical to the base class implementation\" (#10713)"},{"Id":"2093873882","IsPullRequest":true,"CreatedAt":"2024-01-22T17:50:08","Actor":"dotnet-maestro[bot]","Number":"10712","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240122.1\r\n- **Date Produced**: January 22, 2024 12:13:57 PM UTC\r\n- **Commit**: 205ef031e0fe5152dede0bd9f99d0f6f9e7f1e45\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24070.9 to 9.0.0-alpha.1.24072.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ff1eeff500...205ef031e0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10712)","Url":"https://github.com/dotnet/winforms/pull/10712","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10712)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-25T03:30:29.7294029Z","RunDurationInMilliseconds":464}