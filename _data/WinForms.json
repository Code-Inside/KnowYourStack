{"Data":{"GitHub":{"Issues":[{"Id":"1452446367","IsPullRequest":true,"CreatedAt":"2022-11-19T00:52:17","Actor":"elachlan","Number":"8211","RawContent":null,"Title":"Convert more `ObjectDisposedExceptions` to use `ThrowIf`","State":"closed","Body":"Fixes #8184\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8211)","Url":"https://github.com/dotnet/winforms/pull/8211","RelatedDescription":"Closed or merged PR \"Convert more `ObjectDisposedExceptions` to use `ThrowIf`\" (#8211)"},{"Id":"1452538145","IsPullRequest":true,"CreatedAt":"2022-11-18T21:48:10","Actor":"lonitra","Number":"8216","RawContent":null,"Title":"Update MediaPlayer Test","State":"closed","Body":"Remove manually added dlls and add core project that targets Framework to reference MediaPlayer dlls. This added project will be used to add in and write tests other ActiveX controls.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8216)","Url":"https://github.com/dotnet/winforms/pull/8216","RelatedDescription":"Closed or merged PR \"Update MediaPlayer Test\" (#8216)"},{"Id":"1455560146","IsPullRequest":false,"CreatedAt":"2022-11-18T17:58:26","Actor":"Jericho","Number":"8231","RawContent":null,"Title":"Cache is never populated in ComponentDesigner.ShadowPropertyCollection.cs","State":"open","Body":"### .NET version\n\n8.0.0-alpha.1.22559.2\r\n\r\nHowever, the situation I am reporting is not tied to a specific .NET version.\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nno\n\n### Issue description\n\nThe ShadowPropertyCollection class contains a private field called `_descriptors` which, if I understand the original intent correctly, is supposed to be used as a cache of `PropertyDescriptor`. The flow is supposed to be like this:\r\n- the first-time a given property descriptor is requested, the value is calculated in the `private PropertyDescriptor GetShadowedPropertyDescriptor(string propertyName)` private method\r\n- this value is added to the cache\r\n- if the same property descriptor is subsequently requested the cached value is returned\r\n\r\nHowever, what I observe when reading the code of this private method is that the calculated value is NOT added to the cache and therefore it is re-calculated each time the same descriptor is requested.\r\n\r\n@elachlan, @dreddy-work and myself had a [discussion](https://github.com/dotnet/winforms/pull/8222#pullrequestreview-1185033949) about this and we concluded that it made more sense to raise a separate issue about this rather than simply fix it as part of #8222.\r\n\r\nIf the conclusion is that we want to fix the flawed logic, I will be happy to volunteer a PR.\n\n### Steps to reproduce\n\nTo be clear, the current logic works without problem and returns the expected result. It's just that we pay a performance penalty if the same descriptor is requested multiple times.","Url":"https://github.com/dotnet/winforms/issues/8231","RelatedDescription":"Open issue \"Cache is never populated in ComponentDesigner.ShadowPropertyCollection.cs\" (#8231)"},{"Id":"1452491809","IsPullRequest":true,"CreatedAt":"2022-11-18T17:56:58","Actor":"elachlan","Number":"8213","RawContent":null,"Title":"Refactor AssemblyNamesTypeResolutionService to replace HashTable","State":"closed","Body":"Replaced the Hashtables, enabled nullability, removed `AssemblyName.CodeBase` call.\r\n\r\nRelated: #8143, #7308\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8213)","Url":"https://github.com/dotnet/winforms/pull/8213","RelatedDescription":"Closed or merged PR \"Refactor AssemblyNamesTypeResolutionService to replace HashTable\" (#8213)"},{"Id":"1452532317","IsPullRequest":true,"CreatedAt":"2022-11-18T17:35:19","Actor":"Jericho","Number":"8215","RawContent":null,"Title":"Refactor UndoEngine to use List<T> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8215)","Url":"https://github.com/dotnet/winforms/pull/8215","RelatedDescription":"Closed or merged PR \"Refactor UndoEngine to use List<T> instead of ArrayList\" (#8215)"},{"Id":"1454134312","IsPullRequest":true,"CreatedAt":"2022-11-18T17:35:06","Actor":"elachlan","Number":"8227","RawContent":null,"Title":"Refactor ToolTip to replace HashTable","State":"closed","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8227)","Url":"https://github.com/dotnet/winforms/pull/8227","RelatedDescription":"Closed or merged PR \"Refactor ToolTip to replace HashTable\" (#8227)"},{"Id":"1454119650","IsPullRequest":true,"CreatedAt":"2022-11-18T17:34:54","Actor":"elachlan","Number":"8226","RawContent":null,"Title":"Refactor WebBrowserContainer to replace HashTable and Enable Nullability","State":"closed","Body":"Refactored WebBrowserContainer to replace HashTable and Enable Nullability.\r\n\r\nRelated to #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8226)","Url":"https://github.com/dotnet/winforms/pull/8226","RelatedDescription":"Closed or merged PR \"Refactor WebBrowserContainer to replace HashTable and Enable Nullability\" (#8226)"},{"Id":"1452511393","IsPullRequest":true,"CreatedAt":"2022-11-18T17:34:37","Actor":"Jericho","Number":"8214","RawContent":null,"Title":"Refactor CodeDomComponentSerializationService to use List<T> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8214)","Url":"https://github.com/dotnet/winforms/pull/8214","RelatedDescription":"Closed or merged PR \"Refactor CodeDomComponentSerializationService to use List<T> instead of ArrayList\" (#8214)"},{"Id":"1455454552","IsPullRequest":true,"CreatedAt":"2022-11-18T16:46:52","Actor":"gpetrou","Number":"8230","RawContent":null,"Title":"Enable nullability in remaining ToolStripItem members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in remaining ToolStripItem members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8230)","Url":"https://github.com/dotnet/winforms/pull/8230","RelatedDescription":"Open PR \"Enable nullability in remaining ToolStripItem members\" (#8230)"},{"Id":"1455083585","IsPullRequest":true,"CreatedAt":"2022-11-18T13:02:28","Actor":"dotnet-maestro[bot]","Number":"8229","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221117.5\r\n- **Date Produced**: November 18, 2022 9:31:29 AM UTC\r\n- **Commit**: 911cc41358aa3a99c24fa85dca426fafa3bef555\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22559.2 to 8.0.0-alpha.1.22567.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/dd7fdb7...911cc41\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8229)","Url":"https://github.com/dotnet/winforms/pull/8229","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#8229)"},{"Id":"1454020929","IsPullRequest":true,"CreatedAt":"2022-11-18T05:56:44","Actor":"JeremyKuhne","Number":"8225","RawContent":null,"Title":"Take the latest drop of CsWin32","State":"closed","Body":"Take the latest drop of CsWin32.\r\n\r\n- OLE_HANDLE is now defined\r\n- VARIANT_BOOL is now defined\r\n- COM structs now implement a stable Guid and interface\r\n- Some COM getters and setters have turned into properties\r\n\r\nCleaned up a few suggestion messages in affected files.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8225)","Url":"https://github.com/dotnet/winforms/pull/8225","RelatedDescription":"Closed or merged PR \"Take the latest drop of CsWin32\" (#8225)"},{"Id":"1454344216","IsPullRequest":false,"CreatedAt":"2022-11-18T02:45:07","Actor":"John-Qiao","Number":"8228","RawContent":null,"Title":"[HDPI] Anchors of user control don't work in form designer when scaling on high DPI ","State":"open","Body":"### .NET version\n\n17.5.0 Preview 2.0 [33115.401.main]\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\n**Actual result:**\r\nAnchors of user control don't work in form designer on 300% HDPI monitor.\r\n![Actual](https://user-images.githubusercontent.com/45864985/202604771-e644619c-6974-46a9-8924-54c5a0f27cdc.png)\r\n\r\n**Expected result:**\r\nAnchors of user control should work in form designer on 300% HDPI monitor, like that work on 100% monitor.\r\n![Expected](https://user-images.githubusercontent.com/45864985/202604798-f85ea35b-eb1a-454c-96f8-9becdc1ad683.png)\r\n\n\n### Steps to reproduce\n\n1. Launch the [ControlScalingBug.zip](https://github.com/dotnet/winforms/files/10037240/ControlScalingBug.zip) sample app on 300% primary monitor.\r\n2. Clean and rebuild project.\r\n3. In Solution Explorer, double click FrmBad.cs to open form designer.\r\n4. Observe the usercontrol in it.","Url":"https://github.com/dotnet/winforms/issues/8228","RelatedDescription":"Open issue \"[HDPI] Anchors of user control don't work in form designer when scaling on high DPI \" (#8228)"},{"Id":"1453834387","IsPullRequest":true,"CreatedAt":"2022-11-18T00:25:19","Actor":"Jericho","Number":"8221","RawContent":null,"Title":"Refactor ComponentDesigner to use Dictionary<TKey, TValue> instead of Hashtable","State":"closed","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8221)","Url":"https://github.com/dotnet/winforms/pull/8221","RelatedDescription":"Closed or merged PR \"Refactor ComponentDesigner to use Dictionary<TKey, TValue> instead of Hashtable\" (#8221)"},{"Id":"1453547052","IsPullRequest":false,"CreatedAt":"2022-11-17T20:27:04","Actor":"dmitrii-drobotov","Number":"8218","RawContent":null,"Title":"NVDA doesn't switch focus back to ComboBox after its dropdown is closed","State":"closed","Body":"### .NET version\n\n.NET 7\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nAfter expanding the ComboBox and selecting value in dropdown, NVDA still keeps focus on the dropdown and doesn't switch back to the ComboBox edit field. As a result, when changing ComboBox value by arrows, NVDA doesn't announce it.\r\n\r\nIt was originally found in https://github.com/dotnet/winforms/issues/7763 comments, and there is more information with NVDA logs and recordings.\n\n### Steps to reproduce\n\n1. Launch NVDA screen reader\r\n2. Expand a combo box with keyboard (alt + down shortcut)\r\n3. Select an element from dropdown list, press Enter or Esc to close the dropdown — NVDA highlight rectangle still stays on the dropdown item\r\n4. Use up/down arrows to change selected element — NVDA is not announcing the change","Url":"https://github.com/dotnet/winforms/issues/8218","RelatedDescription":"Closed issue \"NVDA doesn't switch focus back to ComboBox after its dropdown is closed\" (#8218)"},{"Id":"1453804062","IsPullRequest":true,"CreatedAt":"2022-11-17T20:27:03","Actor":"dmitrii-drobotov","Number":"8220","RawContent":null,"Title":"Add MSAA focus event on ComboBox dropdown close","State":"closed","Body":"Fixes #8218\r\n\r\n## Proposed changes\r\n\r\n- Add MSAA focus event on ComboBox dropdown close. This event lets NVDA correctly switch focus from dropdown to ComboBox edit field when the dropdown is closed. NVDA recognizes ComboBox as IAccessible object, therefore it ignores existing UIA focus events.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- NVDA will announce value change by arrows after the dropdown was closed\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\nTest using NVDA screen reader. Scenario: a form with a ComboBox having items \"1\", \"2\" and \"3\", focus is set to ComboBox.\r\n\r\nSteps:\r\n1. Press Alt + Down: expand ComboBox\r\n2. Press Down: select item \"1\"\r\n3. Press Enter: close dropdown\r\n4. Press Down: change selection to item \"2\"\r\n5. Press Down: change selection to item \"3\"\r\n\r\n### Before\r\n\r\nNVDA speech output:\r\n\r\n> combo box  collapsed\r\n> expanded\r\n> 1\r\n> list\r\n> 1\r\n\r\nNo announcement of value change by arrows.\r\n\r\nNVDA event log: [nvda-log-before.log](https://github.com/dotnet/winforms/files/10034358/nvda-log-before.log), main point — NVDA `loseFocus` event for list item and `gainFocus` event for ComboBox are **not** present after closing dropdown.\r\n\r\nNVDA focus highlight behavior:\r\n\r\n![A gif showing that NVDA highlight rectangle stays on the dropdown list item even after it was closed](https://user-images.githubusercontent.com/102954094/202523917-cfd5a8a6-84d5-450b-9055-6dfeb7d4a788.gif)\r\n\r\n### After\r\n\r\nNVDA speech output:\r\n\r\n> combo box  collapsed\r\n> expanded\r\n> 1\r\n> list\r\n> 1\r\n> combo box  1  collapsed\r\n> 2\r\n> 3\r\n\r\nThere is additional announcement of ComboBox content on close, including \"collapsed\" state, and when value is changed by arrows it is also announced.\r\n\r\nNVDA event log: [nvda-log-after.log](https://github.com/dotnet/winforms/files/10034395/nvda-log-after.log), main point — NVDA `loseFocus` event for list item and `gainFocus` event for ComboBox are present after closing dropdown.\r\n\r\nNVDA focus highlight behavior:\r\n\r\n![A gif showing that NVDA highlight rectangle is correctly switched back to ComboBox after dropdown was closed](https://user-images.githubusercontent.com/102954094/202526245-fbf93211-1063-4755-a15a-99303f53340b.gif)\r\n\r\nAlso tested with Narrator — everything works as expected before and after the changes.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.100-alpha.1.22565.7\r\n- Windows 11\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8220)","Url":"https://github.com/dotnet/winforms/pull/8220","RelatedDescription":"Closed or merged PR \"Add MSAA focus event on ComboBox dropdown close\" (#8220)"},{"Id":"1453919573","IsPullRequest":false,"CreatedAt":"2022-11-17T20:10:11","Actor":"runfoapp[bot]","Number":"8224","RawContent":null,"Title":"Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected","State":"closed","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected](https://runfo.azurewebsites.net/tracking/issue/442)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[85587](https://dev.azure.com/dnceng-public/public/_build/results?buildId=85587)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8206](https://github.com/dotnet/winforms/pull/8206)|Windows_x86-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\r\n<!-- runfo report end -->\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8224","RelatedDescription":"Closed issue \"Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected\" (#8224)"},{"Id":"1453919539","IsPullRequest":false,"CreatedAt":"2022-11-17T20:08:50","Actor":"runfoapp[bot]","Number":"8223","RawContent":null,"Title":"Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected","State":"open","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected](https://runfo.azurewebsites.net/tracking/issue/441)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[85587](https://dev.azure.com/dnceng-public/public/_build/results?buildId=85587)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8206](https://github.com/dotnet/winforms/pull/8206)|Windows_x86-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\r\n<!-- runfo report end -->\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8223","RelatedDescription":"Open issue \"Flaky test: cursorconvertertests.cursorconverter_getstandardvalues_invoke_returnsexpected\" (#8223)"},{"Id":"1453910168","IsPullRequest":true,"CreatedAt":"2022-11-17T20:01:55","Actor":"Jericho","Number":"8222","RawContent":null,"Title":"Refactor ComponentDesigner.ShadowPropertyCollection to use Dictionary<TKey, TValue> instead of Hashtable","State":"open","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8222)","Url":"https://github.com/dotnet/winforms/pull/8222","RelatedDescription":"Open PR \"Refactor ComponentDesigner.ShadowPropertyCollection to use Dictionary<TKey, TValue> instead of Hashtable\" (#8222)"},{"Id":"1452383120","IsPullRequest":true,"CreatedAt":"2022-11-17T18:07:33","Actor":"Jericho","Number":"8210","RawContent":null,"Title":"Refactor PropertyGridView to use List<GridEntryCollection> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8210)","Url":"https://github.com/dotnet/winforms/pull/8210","RelatedDescription":"Closed or merged PR \"Refactor PropertyGridView to use List<GridEntryCollection> instead of ArrayList\" (#8210)"},{"Id":"1453661179","IsPullRequest":false,"CreatedAt":"2022-11-17T16:47:22","Actor":"paul1956","Number":"8219","RawContent":null,"Title":"Need for complete (OOP) custom control template (VB)","State":"open","Body":"### Environment\n\n.Net 7\n\n### .NET version\n\nEverything Core\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nFramework\n\n### Issue description\n\nWhen I create a new custom control (in VB and I assume C#) the code created is identical to Framework and nothing is created for the OOP parts. The template should include everything necessary to the OOP designer.\n\n### Steps to reproduce\n\nN/A\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8219","RelatedDescription":"Open issue \"Need for complete (OOP) custom control template (VB)\" (#8219)"},{"Id":"1452758958","IsPullRequest":false,"CreatedAt":"2022-11-17T05:56:36","Actor":"NikitaSemenovAkvelon","Number":"8217","RawContent":null,"Title":"Unifying an argument in the `ReleaseUiaProvider` method to `IHandle<HWND>`.","State":"open","Body":"Replace the type of the `handle` parameter from `IntPtr` to `IHandle<HWND>` in the Control.ReleaseUiaProvider method and its overrides. \r\n\r\n        Suggestion - consider unifying argument in this method to `nint` in the next PR.\r\n\r\n_Originally posted by @Tanya-Solyanik in https://github.com/dotnet/winforms/pull/7349#discussion_r1023472589_\r\n 📓 - modified bug title and body per @elachlan suggestion     ","Url":"https://github.com/dotnet/winforms/issues/8217","RelatedDescription":"Open issue \"Unifying an argument in the `ReleaseUiaProvider` method to `IHandle<HWND>`.\" (#8217)"},{"Id":"1452453206","IsPullRequest":true,"CreatedAt":"2022-11-16T23:42:12","Actor":"Jericho","Number":"8212","RawContent":null,"Title":"Refactor TableLayoutStyleCollection to use List<TableLayoutStyle> instead of ArrayList","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8212)","Url":"https://github.com/dotnet/winforms/pull/8212","RelatedDescription":"Open PR \"Refactor TableLayoutStyleCollection to use List<TableLayoutStyle> instead of ArrayList\" (#8212)"},{"Id":"1452295616","IsPullRequest":false,"CreatedAt":"2022-11-16T21:27:31","Actor":"pedautreppe","Number":"8209","RawContent":null,"Title":"Form designer does not display","State":"open","Body":"### Environment\n\nVersion 17.4.1\n\n### .NET version\n\nHas been reproed in \r\n- .NET 5\r\n- .NET 6\r\n- .NET 7\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nWhen creating a new winform project (whatever the .net version - .NET5+), Visual Studio cannot open the Form Designer.\r\nThe log (see diags below for full log) displays an error \"Illegal characters in path\".\r\n\r\nI have checked : \r\n- The flag Switch.System.IO.UseLegacyPathHandling is **not set** in the devenv.exe.config\r\n- The flag Switch.System.IO.UseLegacyPathHandling is **not set** in the registry (in both keys HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\AppContext and HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\.NETFramework\\AppContext)\r\n\r\nI have tried :\r\n- to explicitely add the flag Switch.System.IO.UseLegacyPathHandling to false in the devenv.exe.config --> same exception\r\n- to run VS in admin mode --> same exception\r\n- to create the folder myself before --> same exception\n\n### Steps to reproduce\n\n- Create a new Winform project and target .net 5 (or 6 or 7)\r\n- Open the newly created form\n\n### Diagnostics\n\n```text\n[22:16:48.043750] info: Creating VsDesignerLoader\r\n[22:16:49.227075] info: [Thread 1] Creating design-time ITypeResolutionService.\r\n[22:16:50.626294] info: Start processing enqueued assemblies\r\n[22:16:50.628291] trce: Loaded Microsoft.WinForms.DesignTools.Protocol in 00:00:00.0000525 [thread 97]\r\n[22:16:51.888562] trce: Processed 'Microsoft.WinForms.DesignTools.Protocol' in 00:00:01.2603981\r\n[22:16:51.940532] info: Added 'Microsoft.WinForms.DesignTools.Protocol'\r\n[22:16:51.943529] trce: Loaded Microsoft.WinForms.DesignTools.Client in 00:00:00.0000619 [thread 26]\r\n[22:16:52.297326] trce: Processed 'Microsoft.WinForms.DesignTools.Client' in 00:00:00.3534021\r\n[22:16:52.331309] info: Added 'Microsoft.WinForms.DesignTools.Client'\r\n[22:16:55.474517] info: Visual Studio culture: en-US (0x0409)\r\n[22:16:55.474517] info: [Thread 62] Launching server...\r\n[22:16:55.584469] info: Is processor architecture ARM64: False\r\n[22:16:57.164555] trce: Processed 'System.Windows.Forms' in 00:00:00.0411825\r\n[22:16:57.377433] info: Added 'System.Windows.Forms'\r\n[22:16:57.377433] trce: Loaded System in 00:00:00.0000748 [thread 65]\r\n[22:16:57.387437] trce: Processed 'System' in 00:00:00.0099693\r\n[22:16:57.627303] info: Added 'System'\r\n[22:16:57.627303] trce: Loaded System.Drawing in 00:00:00.0000568 [thread 95]\r\n[22:16:57.628291] trce: Processed 'System.Drawing' in 00:00:00.0011485\r\n[22:16:57.654284] info: Added 'System.Drawing'\r\n[22:16:57.654284] trce: Loaded System.Design in 00:00:00.0001140 [thread 95]\r\n[22:16:59.223385] trce: Processed 'System.Design' in 00:00:01.5679662\r\n[22:16:59.368300] info: Added 'System.Design'\r\n[22:16:59.368300] trce: Loaded System.Drawing.Design in 00:00:00.0001933 [thread 84]\r\n[22:16:59.369309] trce: Processed 'System.Drawing.Design' in 00:00:00.0010410\r\n[22:16:59.374309] info: Added 'System.Drawing.Design'\r\n[22:17:10.032227] info: Shadow cache base directory: C:\\Users\\pierr\\AppData\\Local\\Microsoft\\VisualStudio\\17.0_c8ea3289\\WinFormsDesigner\r\n[22:17:10.363043] fail: System.ArgumentException: Illegal characters in path.\r\n                           at System.Security.Permissions.FileIOPermission.EmulateFileIOPermissionChecks(String fullPath)\r\n                           at System.IO.Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)\r\n                           at Microsoft.WinForms.Utilities.Shared.ShadowCacheFolder..ctor(String shadowCacheBaseDirectory, Boolean isNetCoreProject)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerLayout.<CreateAsync>d__8.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerProcess.<CreateAsync>d__21.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerHostFactory.<CreateHostAsync>d__8.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__29.MoveNext()\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[22:17:13.147454] warn: Cannot update selection in server process as Session is not connected.\n```\n","Url":"https://github.com/dotnet/winforms/issues/8209","RelatedDescription":"Open issue \"Form designer does not display\" (#8209)"},{"Id":"1452277729","IsPullRequest":false,"CreatedAt":"2022-11-16T21:10:42","Actor":"pedautreppe","Number":"8208","RawContent":null,"Title":"BindingNavigator no longer appears in the Toolbox (and does not have a designer)","State":"open","Body":"### Environment\n\nProblem identified on Visual Studio\r\n* Version 17.4.1\r\n* Version 16.11.19\r\n\n\n### .NET version\n\n.NET 5\r\n.NET 6\r\n.NET 7\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nWas working on .NET 4.x\n\n### Issue description\n\nWhen creating a new form, you cannot choose to add a BindingNavigator : he is not available in the Toolbox.\r\nIf you add it manually in the Designer file, it works correctly, but you do not benefit of the designer calling the \"AddStandardItems\" to automatically add the first buttons.\r\n\r\nI don't know if this is related, but when investigating in the source code, the BindingNavigator refers to the BindingNavigatorDesigner class (in System.Design 4.0.0.0), but there is no Type Forwarding to the new System.Windows.Forms.Design dll and anyway, the designer does not exist in that new DLL.\r\n\r\nI also tried to create a class inheriting from BindingNavigator (see below). \r\n```csharp\r\n[Designer(typeof(MediaBindingNavigatorDesigner))]\r\npublic class MediaBindingNavigator : BindingNavigator\r\n{\r\n    [EditorBrowsable(EditorBrowsableState.Never)]\r\n    public MediaBindingNavigator() { }\r\n    public MediaBindingNavigator(BindingSource bindingSource) : base(bindingSource) { }\r\n    [EditorBrowsable(EditorBrowsableState.Never)]\r\n    public MediaBindingNavigator(IContainer container) : base(container) { }\r\n    public MediaBindingNavigator(bool addStandardItems) : base(addStandardItems: addStandardItems) { }\r\n}\r\n```\r\nI tried to create my own custom designer to be able to at least call the AddStandardItems methods, but for some reason I don't understand, this designer is not used at design time.\r\n\r\nI have the following warning displaying (see full log in the diags below)\r\n[22:07:40.7412379] [ACQ]: warn: Microsoft.DotNet.DesignTools.TypeRouting.TypeRoutingService[0]\r\n[22:07:40.7412379] [ACQ]:       Falling back to 'Microsoft.DotNet.DesignTools.Designers.ControlDesigner' for 'ACQ.MediaBindingNavigatorDesigner'\r\n\n\n### Steps to reproduce\n\n- Create a new .NET Windows Forms app\r\n- Open the newly created Form1\r\n- Open the Toolbox --> The BindingNavigator is not present\r\n\r\nWhen going to the \"Choose Items\", you can see that the BindingNavigator is correctly selected.\r\nDeselect it and open the \"Choose Items\" windows --> Still checked\r\n\n\n### Diagnostics\n\n```text\n[22:07:40.7372505] Sending request: Controls/GetAncestors\r\n[22:07:40.7382394] Controls/GetAncestors took 00:00:00.0013195.\r\n[22:07:40.7392394] Sending request: Transactions/Open\r\n[22:07:40.7402385] Transactions/Open took 00:00:00.0010285.\r\n[22:07:40.7402385] Notifying 1 'Undo/UndoUnitCreated' handlers\r\n[22:07:40.7402385] 'Undo/UndoUnitCreated' notification received: Creating components in tool 'MediaBindingNavigator'.62aa060d-3693-42d5-9986-819f26c5b264\r\n[22:07:40.7402385] Notifying 1 'Transactions/Opening' handlers\r\n[22:07:40.7402385] Notifying 1 'Transactions/Opened' handlers\r\n[22:07:40.7402385] Sending request: DesignerHosts/CreateComponent\r\n[22:07:40.7412379] [ACQ]: warn: Microsoft.DotNet.DesignTools.TypeRouting.TypeRoutingService[0]\r\n[22:07:40.7412379] [ACQ]:       Falling back to 'Microsoft.DotNet.DesignTools.Designers.ControlDesigner' for 'ACQ.MediaBindingNavigatorDesigner'\r\n[22:07:40.7538628] DesignerHosts/CreateComponent took 00:00:00.0136782.\r\n[22:07:40.7538628] Notifying 1 'Components/Added' handlers\r\n[22:07:40.7548765] Sending request: Objects/GetAttributes [137]\r\n[22:07:40.7579094] Objects/GetAttributes took 00:00:00.0027005.\r\n[22:07:40.7579094] Added designer component: 'mediaBindingNavigator2'\r\n[22:07:40.7579094] Notifying 1 'Components/Changing' handlers\r\n[22:07:40.7579094] 'Components/Changing' notification received: mediaBindingNavigator2.Text\r\n[22:07:40.7579094] Sending request: Objects/GetProperties\r\n[22:07:40.7913385] Objects/GetProperties took 00:00:00.0329720.\r\n[22:07:40.7923383] Notifying 1 'Components/Changed' handlers\r\n[22:07:40.7923383] 'Components/Changed' notification received: mediaBindingNavigator2.Text\r\n[22:07:40.7923383] Notifying 1 'Components/Changing' handlers\r\n[22:07:40.7923383] 'Components/Changing' notification received: Form1.Controls\r\n[22:07:40.7933519] Notifying 1 'Components/Changing' handlers\r\n[22:07:40.7933519] 'Components/Changing' notification received: mediaBindingNavigator2.Size\r\n[22:07:40.7933519] Notifying 1 'Components/Changed' handlers\r\n[22:07:40.7933519] 'Components/Changed' notification received: mediaBindingNavigator2.Size\r\n[22:07:40.7943368] Notifying 1 'Components/Changing' handlers\r\n[22:07:40.7943368] 'Components/Changing' notification received: mediaBindingNavigator2.Location\r\n[22:07:40.7943368] Notifying 1 'Components/Changed' handlers\r\n[22:07:40.7943368] 'Components/Changed' notification received: mediaBindingNavigator2.Location\r\n[22:07:40.7943368] Notifying 1 'Components/Changed' handlers\r\n[22:07:40.7943368] 'Components/Changed' notification received: Form1.Controls\r\n[22:07:40.7953366] Notifying 1 'Components/Changing' handlers\r\n[22:07:40.7953366] 'Components/Changing' notification received: mediaBindingNavigator2.Text\r\n[22:07:40.7953366] Notifying 1 'Components/Changed' handlers\r\n[22:07:40.7953366] 'Components/Changed' notification received: mediaBindingNavigator2.Text\r\n[22:07:40.7963361] Sending request: Transactions/Close: Cancel = False\r\n[22:07:40.7973221] Transactions/Close took 00:00:00.0009933.\r\n[22:07:40.7973221] Notifying 1 'Transactions/Closing' handlers\r\n[22:07:40.7973221] Notifying 1 'Undo/UndoUnitAdded' handlers\r\n[22:07:40.7973221] 'Undo/UndoUnitAdded' notification received: 62aa060d-3693-42d5-9986-819f26c5b264\r\n[22:07:40.7973221] Notifying 1 'Transactions/Closed' handlers\r\n[22:07:40.8003341] Updating selection in server process.\r\n[22:07:40.8003341] Sending request: Selection/UpdateSelection\r\n[22:07:40.8003341] [ACQ]: info: Microsoft.DotNet.DesignTools.Host.RemoteSelectionService[0]\r\n[22:07:40.8003341] [ACQ]:       Attempting to update selection: 1 components, Replace\r\n[22:07:40.8043510] [ACQ]: info: Microsoft.DotNet.DesignTools.Host.RemoteSelectionService[0]\r\n[22:07:40.8043510] [ACQ]:       Made change: True\r\n[22:07:40.8043510] Selection/UpdateSelection took 00:00:00.0046853.\r\n[22:07:40.8043510] Notifying 1 'Selection/Changed' handlers\r\n[22:07:40.8053509] Sending request: Properties/GetValue\r\n[22:07:40.8103481] Properties/GetValue took 00:00:00.0046069.\r\n[22:07:40.8113492] Sending request: Controls/GetParent\r\n[22:07:40.8123471] Controls/GetParent took 00:00:00.0007074.\r\n[22:07:40.8123471] Sending request: Controls/GetParent\r\n[22:07:40.8123471] Controls/GetParent took 00:00:00.0006207.\r\n[22:07:40.8123471] Sending request: Controls/GetParent\r\n[22:07:40.8133471] Controls/GetParent took 00:00:00.0005641.\r\n[22:07:40.8143548] Sending request: Commands/HasLockedControl\r\n[22:07:40.8153551] Commands/HasLockedControl took 00:00:00.0005484.\r\n[22:07:41.1534121] Sending request: Designers/GetDesignerVerbs\r\n[22:07:41.1554152] Designers/GetDesignerVerbs took 00:00:00.0014788.\r\n[22:07:41.1554152] Sending request: Designers/GetDesignerActionLists\r\n[22:07:41.1564145] Designers/GetDesignerActionLists took 00:00:00.0011682.\r\n[22:07:41.8184104] [ACQ]: Sending request to remove roots:\r\n[22:07:41.8184104] [ACQ]:   - f1: 2 root(s).\r\n[22:07:41.8184104] Sending request: Objects/RemoveObjectRoots\r\n[22:07:41.8194139] Objects/RemoveObjectRoots took 00:00:00.0007642.\n```\n","Url":"https://github.com/dotnet/winforms/issues/8208","RelatedDescription":"Open issue \"BindingNavigator no longer appears in the Toolbox (and does not have a designer)\" (#8208)"},{"Id":"1450497035","IsPullRequest":true,"CreatedAt":"2022-11-16T20:37:12","Actor":"elachlan","Number":"8202","RawContent":null,"Title":"Refactor ArrangedElementCollection to replace ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8202)","Url":"https://github.com/dotnet/winforms/pull/8202","RelatedDescription":"Closed or merged PR \"Refactor ArrangedElementCollection to replace ArrayList\" (#8202)"},{"Id":"1451989683","IsPullRequest":true,"CreatedAt":"2022-11-16T17:23:46","Actor":"Jericho","Number":"8207","RawContent":null,"Title":"Refactor ArrangedElementCollection to use List<IArrangedElement> instead of ArrayList","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8207)","Url":"https://github.com/dotnet/winforms/pull/8207","RelatedDescription":"Open PR \"Refactor ArrangedElementCollection to use List<IArrangedElement> instead of ArrayList\" (#8207)"},{"Id":"1451802348","IsPullRequest":true,"CreatedAt":"2022-11-16T15:24:24","Actor":"v-elnovikova","Number":"8206","RawContent":null,"Title":"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in PropertyGridAccessibleObject class","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nPart of #6094\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add missing unit tests to check the method behavior in PropertyGridAccessibleObject class\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.2.22472.3\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8206)","Url":"https://github.com/dotnet/winforms/pull/8206","RelatedDescription":"Open PR \"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in PropertyGridAccessibleObject class\" (#8206)"},{"Id":"1451119749","IsPullRequest":false,"CreatedAt":"2022-11-16T08:27:25","Actor":"awaescher","Number":"8205","RawContent":null,"Title":"Windows Forms Out-of-process designer can't make use of transient references","State":"open","Body":"### Environment\r\n\r\nVisual Studio Professional 2022 (64-bit) Version 17.4.0\r\n\r\n\r\n### .NET version\r\n\r\n.NET 6.0\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nWorks as soon as .NET Framework is used in the same projects. Does also work with multitargeting.\r\n\r\n### Issue description\r\n\r\nThe new out-of-process Windows Forms designer shows the following error when the base form of the form that is currently opened in the designer implements an interface from a transitive referenced project:\r\n\r\n![error](https://raw.githubusercontent.com/awaescher/DesignerVsInterfaces/main/media/error-designer.png)\r\n![log](https://raw.githubusercontent.com/awaescher/DesignerVsInterfaces/main/media/error-log.png)\r\n\r\nIt took me quite a while to hunt this down but it seems that the new designer shows this error if ...\r\n\r\n - the form in question is derived from a base form (from the same or another project)\r\n - the base form implements an interface\r\n - the interface is defined in another project\r\n - the other project is **referenced over an transient project reference**\r\n\r\nIn this case the base form still can be designed. The designer however crashes when openening the derived form. The error disappears as soon a direct project reference is added.\r\n\r\n### References overview\r\n![log](https://raw.githubusercontent.com/awaescher/DesignerVsInterfaces/main/media/diagram.png)\r\n\r\n---\r\n\r\nMore details and a repro under https://github.com/awaescher/DesignerVsInterfaces\r\n\r\n\r\n### Steps to reproduce\r\n\r\n - clone the repository https://github.com/awaescher/DesignerVsInterfaces\r\n - build\r\n - open the designer for both base forms: should work\r\n - open the designer for GoodDerivedForm: should work\r\n - open the designer for BadDerivedForm: should cause the **error** shown above\r\n\r\n### Diagnostics\r\n\r\n```text\r\n// complete log when opening BadDerivedForm from the repro repository\r\n\r\n[09:19:17.934946] info: Creating VsDesignerLoader\r\n[09:19:17.938946] trce: Sending request: Sessions/Create\r\n[09:19:17.939981] trce: Sessions/Create took 00:00:00.0015269.\r\n[09:19:17.940945] trce: Sending request: Options/SetOptions\r\n[09:19:17.940945] trce: Options/SetOptions took 00:00:00.0007348.\r\n[09:19:17.941961] trce: Sending request: Sessions/BeginLoad\r\n[09:19:17.941961] trce: Sessions/BeginLoad took 00:00:00.0005457.\r\n[09:19:17.959431] trce: Sending request: Sessions/DesignerActivated\r\n[09:19:17.960400] trce: Sessions/DesignerActivated took 00:00:00.0007037.\r\n[09:19:18.044542] info: Created VsCodeDomProvider for 'C:\\Users\\daw\\Source\\repos\\DesignerVsInterfaces\\DesignerVsInterfacesUI\\BadDerivedForm.cs'\r\n[09:19:18.049542] info: Created VsCodeDomProvider for 'C:\\Users\\daw\\Source\\repos\\DesignerVsInterfaces\\DesignerVsInterfacesUI\\BadDerivedForm.Designer.cs'\r\n[09:19:18.050543] trce: ProcessNamespace: DesignerVsInterfacesUI\r\n[09:19:18.051543] trce: ProcessClass: BadDerivedForm\r\n[09:19:18.052543] trce: ProcessConstructor\r\n[09:19:18.053542] trce: ProcessNamespace: DesignerVsInterfacesUI\r\n[09:19:18.054542] trce: ProcessClass: BadDerivedForm\r\n[09:19:18.055542] trce: ProcessField: components\r\n[09:19:18.057542] trce: ProcessMethod: Dispose\r\n[09:19:18.058543] trce: ProcessMethod: InitializeComponent\r\n[09:19:18.059542] trce: Sending request: Sessions/FindDesignableClass\r\n[09:19:18.061560] trce: Sessions/FindDesignableClass took 00:00:00.0022300.\r\n[09:19:18.061560] fail: Request failures: Sessions/FindDesignableClass.\r\n                        Microsoft.DotNet.DesignTools.Client.DesignToolsServerException: The designer could not be shown for this file because none of the classes within it can be designed.  The designer inspected the following classes in the file: \\r\\n\r\n                        \tBadDerivedForm --- The base class 'DesignerVsInterfacesUI.BaseFormReferencingBaseLibrary' could not be loaded.  Ensure the assembly has been referenced and that all projects have been built.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[09:19:18.065425] trce: Updating selection in server process.\r\n[09:19:18.065425] trce: Sending request: Selection/UpdateSelection\r\n[09:19:18.066433] trce: [DesignerVsInterfacesUI]: Attempting to update selection: 0 components, Replace\r\n[09:19:18.066433] trce: [DesignerVsInterfacesUI]: Made change: False\r\n[09:19:18.066433] trce: Selection/UpdateSelection took 00:00:00.0007927.\r\n[09:19:18.066433] trce: Sending request: Sessions/Unload\r\n[09:19:18.067067] trce: Sessions/Unload took 00:00:00.0004503.\r\n[09:19:18.067067] trce: Sending request: Sessions/EndLoad\r\n[09:19:18.067067] trce: Sessions/EndLoad took 00:00:00.0004010.\r\n[09:19:23.422459] trce: [DesignerVsInterfacesUI]: Sending request to remove roots:\r\n                          - 289: 1 root(s).\r\n                          ...\r\n                          - 1d9: 2 root(s).\r\n                          - 1d8: 6 root(s).\r\n                        \r\n[09:19:23.422459] trce: Sending request: Objects/RemoveObjectRoots\r\n[09:19:23.425472] trce: [DesignerVsInterfacesUI]: Objects/RemoveObjectRoots request received for 293 object(s).\r\n                          - 289: 1 root(s).\r\n                          ...\r\n                          - 1d9: 2 root(s).\r\n                          - 1d8: 6 root(s).\r\n                        \r\n[09:19:23.425472] trce: Objects/RemoveObjectRoots took 00:00:00.0033258.\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/8205","RelatedDescription":"Open issue \"Windows Forms Out-of-process designer can't make use of transient references\" (#8205)"},{"Id":"1450704364","IsPullRequest":false,"CreatedAt":"2022-11-16T02:15:12","Actor":"RussKie","Number":"8204","RawContent":null,"Title":"[Announcement] Signing off","State":"open","Body":"After three and a half years of being the repository owner and maintainer I'm moving to another .NET team and, thus, signing off here. It was an awesome ride, and together we've built an amazing community. Windows Forms has a special place in my heart, and I expect to stick around, though, more in a role of a contributor.\r\n\r\nFeel free to tag me in issues and pull-requests, though I can't guarantee the same level of responsiveness as you've come to expect of me.\r\n\r\nThank you all, and happy coding!\r\nIgor","Url":"https://github.com/dotnet/winforms/issues/8204","RelatedDescription":"Open issue \"[Announcement] Signing off\" (#8204)"},{"Id":"1450669094","IsPullRequest":false,"CreatedAt":"2022-11-16T01:38:27","Actor":"JeremyKuhne","Number":"8203","RawContent":null,"Title":"Use interpolated strings in WinForms","State":"open","Body":"WinForms formatted string usages should be converted to interpolated strings where possible to get the various performance benefits.\r\n\r\nhttps://learn.microsoft.com/dotnet/csharp/language-reference/tokens/interpolated\r\n\r\nThis is a good community contribution issue. Details:\r\n\r\n- Keep PRs to a manageable size\r\n- This includes usages of `+` to concat strings\r\n- `string.Format` is still needed for anything that gets localized strings (`SR.*`)\r\n- In most cases we don't need to specify culture\r\n  - Not needed ever for integers or booleans that aren't special formatted\r\n  - Never really needed in Debug statements\r\n\r\n\r\nExamples of changes:\r\n\r\n``` C#\r\n// No culture needed - non localized string, debug only, boolean\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, string.Format(CultureInfo.CurrentCulture, \"Inside get_CanEnableIme(), value = {0}, this = {1}\", ImeSupported, this));\r\n\r\n// Becomes...\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, $\"Inside get_CanEnableIme(), value = {ImeSupported}, this = {this}\");\r\n\r\n\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, \"Inside get_CurrentImeContextMode(), this = \" + this)\r\n\r\n// Becomes...\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, $\"Inside get_CurrentImeContextMode(), this = {this}\")\r\n```\r\n\r\nI don't think we have many cases where [raw string literals](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-11.0/raw-string-literal) are needed, but that can be included in this work if any come up. (`$\"\"\"Count {0}\"\"\"`)\r\n\r\nWe should also identify and collect places in the WinForms code where we're frequently passing formatted strings that may not be used so we can look for ways to leverage skipping formatting in much the same way that `Debug.WriteLineIf`, etc. do.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8203","RelatedDescription":"Open issue \"Use interpolated strings in WinForms\" (#8203)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-19T03:30:32.7891473Z","RunDurationInMilliseconds":570}