{"Data":{"GitHub":{"Issues":[{"Id":"1475559125","IsPullRequest":false,"CreatedAt":"2022-12-05T03:25:28","Actor":"Olina-Zhang","Number":"8326","RawContent":null,"Title":"[Accessibility] Cannot switch to System Menu from MenuStrip by pressing Left/Right arrow in the first or last MenuItem","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22574.1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nIn **MenuStrip**, when switching through menu items using keyboard (left and right arrow keys), user cannot switch to System menu. It enumerates only it's own items, in a loop. \r\n\r\nFor example, menuStrip has 3 MenuItems, Narrator says this: \"Item1\" -> \"Item2\" -> \"Item3\" -> \"Item1\" -> ...\r\n![image](https://user-images.githubusercontent.com/26474449/205541127-3098f993-981c-46dd-92a8-d04866ded381.png)\r\n![MenuStrip_NoSystemMenu](https://user-images.githubusercontent.com/26474449/205541197-5f13bb46-b821-4e0c-8ac7-156cebeaaa34.gif)\r\n\r\nBut in .Net framework, there has a **MainMenu** control, use keyboard (left and right arrow keys) user could switch to System menu.\r\n\r\nNarrator says this: \"Item1\" -> \"Item2\" -> \"Item3\" -> **\"System menu\"** -> \"Item1\" -> ...\r\n![image](https://user-images.githubusercontent.com/26474449/205541627-2d70e6a1-f29f-45c7-979c-5fcc96c9d537.png)\r\n![MainMenu-SystemMenu](https://user-images.githubusercontent.com/26474449/205541674-96a90abc-e28d-4a6e-ba00-83bbafbadc31.gif)\r\n\n\n### Steps to reproduce\n\nHere is the sample for MenuStrip .Net 8.0 application:\r\n[MenuStrip.Net8.0.zip](https://github.com/dotnet/winforms/files/10150403/MenuStrip.Net8.0.zip)\r\n[MainMenu.NetFramework.zip](https://github.com/dotnet/winforms/files/10150419/MainMenu.NetFramework.zip)\r\n1. Open above MenuStrip.Net8.0 application\r\n2. Build and Run\r\n3. Open Narrator, press Alt key to focus on the first MenuItem: Item1\r\n4. Press right key several times to observe, after Item3, it will focus on which item","Url":"https://github.com/dotnet/winforms/issues/8326","RelatedDescription":"Open issue \"[Accessibility] Cannot switch to System Menu from MenuStrip by pressing Left/Right arrow in the first or last MenuItem\" (#8326)"},{"Id":"1474891985","IsPullRequest":true,"CreatedAt":"2022-12-04T14:57:41","Actor":"gpetrou","Number":"8325","RawContent":null,"Title":"Enable nullability in ControlItem","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ControlItem.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8325)","Url":"https://github.com/dotnet/winforms/pull/8325","RelatedDescription":"Open PR \"Enable nullability in ControlItem\" (#8325)"},{"Id":"1474565117","IsPullRequest":true,"CreatedAt":"2022-12-04T07:41:04","Actor":"gpetrou","Number":"8324","RawContent":null,"Title":"Enable nullability in Application","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Application.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8324)","Url":"https://github.com/dotnet/winforms/pull/8324","RelatedDescription":"Open PR \"Enable nullability in Application\" (#8324)"},{"Id":"1473806928","IsPullRequest":true,"CreatedAt":"2022-12-03T06:41:58","Actor":"gpetrou","Number":"8323","RawContent":null,"Title":"Enable nullability in ToolStripPanelCell","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelCell.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8323)","Url":"https://github.com/dotnet/winforms/pull/8323","RelatedDescription":"Open PR \"Enable nullability in ToolStripPanelCell\" (#8323)"},{"Id":"1473724561","IsPullRequest":true,"CreatedAt":"2022-12-03T04:28:12","Actor":"JeremyKuhne","Number":"8322","RawContent":null,"Title":"Convert IFont and IFontDisp to CSWin32","State":"open","Body":"Converts IFont / IFontDisp to CSWin32. IFontDisp wasn't properly defined (wrong DISPIDs). I attemped to run my VB tests against the correct code to see if that fixed the test run problem, but alas, it did not. Including the VB tests (Skipped) to allow manual testing and allow investigating and vetting against further fixes that come as part of the modernization effort here.\r\n\r\nThis adds some tests for the other IFont usages. Additionally:\r\n\r\n- Adds the interface definition for IDispatch (which CsWin32 omits) and a CCW\r\n- Adds DynamicAxHost for testing AxHost with controls direct from assemblies\r\n- Adds ComClasses/ComClassFactory for creating COM classes direct from assemblies\r\n- Adds explicit converters to VARIANT and CY (currency format)\r\n- Adds ToStringAndFree to BSTR\r\n- Adds another overload for prop getting from IDispatch\r\n- Moves code from ControlPaint to it's only usage in COM2FontConverter\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8322)","Url":"https://github.com/dotnet/winforms/pull/8322","RelatedDescription":"Open PR \"Convert IFont and IFontDisp to CSWin32\" (#8322)"},{"Id":"1473659769","IsPullRequest":true,"CreatedAt":"2022-12-03T02:10:36","Actor":"elachlan","Number":"8321","RawContent":null,"Title":"`SelectionUIService` move contained classes/struct into own files","State":"open","Body":"Make `SelectionUIService` partial and move contained classes to own files:\r\n- SelectionUIService.ContainerSelectionUIItem.cs\r\n- SelectionUIService.HitTestInfo.cs\r\n- SelectionUIService.SelectionUIItem.cs\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8321)","Url":"https://github.com/dotnet/winforms/pull/8321","RelatedDescription":"Open PR \"`SelectionUIService` move contained classes/struct into own files\" (#8321)"},{"Id":"1473656974","IsPullRequest":true,"CreatedAt":"2022-12-03T02:03:16","Actor":"elachlan","Number":"8320","RawContent":null,"Title":"Refactor `CodeDomLocalizationProvider` to move contained classes to own files","State":"open","Body":"Make `CodeDomLocalizationProvider` partial move contained classes into own files.\r\n\r\nNew Files:\r\n- CodeDomLocalizationProvider.LanguageCultureInfoConverter.cs\r\n- CodeDomLocalizationProvider.LanguageExtenders.cs\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8320)","Url":"https://github.com/dotnet/winforms/pull/8320","RelatedDescription":"Open PR \"Refactor `CodeDomLocalizationProvider` to move contained classes to own files\" (#8320)"},{"Id":"1473653854","IsPullRequest":true,"CreatedAt":"2022-12-03T01:56:19","Actor":"elachlan","Number":"8319","RawContent":null,"Title":"Move `SerializationResourceManager` to own file","State":"open","Body":"Refactor ResourceCodeDomSerializer to partial class and move SerializationResourceManager to ResourceCodeDomSerializer.SerializationResourceManager.cs\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8319)","Url":"https://github.com/dotnet/winforms/pull/8319","RelatedDescription":"Open PR \"Move `SerializationResourceManager` to own file\" (#8319)"},{"Id":"1473647515","IsPullRequest":true,"CreatedAt":"2022-12-03T01:39:21","Actor":"elachlan","Number":"8318","RawContent":null,"Title":"Move `DesignerActionToolStripDropDown` to its own file and make  `DesignerActionUI` a partial class","State":"open","Body":"Change from:\r\nhttps://github.com/dotnet/winforms/pull/8317#issuecomment-1336002603\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8318)","Url":"https://github.com/dotnet/winforms/pull/8318","RelatedDescription":"Open PR \"Move `DesignerActionToolStripDropDown` to its own file and make  `DesignerActionUI` a partial class\" (#8318)"},{"Id":"1473635362","IsPullRequest":true,"CreatedAt":"2022-12-03T01:09:51","Actor":"elachlan","Number":"8317","RawContent":null,"Title":"Refactor `DesignerActionUI` to use Dictionary","State":"open","Body":"Also moved DesignerActionToolStripDropDown.cs to its own file. Maybe it should be inside DesignerActionUI with DesignerActionUI being a partial class?\r\nRelated: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8317)","Url":"https://github.com/dotnet/winforms/pull/8317","RelatedDescription":"Open PR \"Refactor `DesignerActionUI` to use Dictionary\" (#8317)"},{"Id":"1472993716","IsPullRequest":true,"CreatedAt":"2022-12-02T22:21:48","Actor":"Jericho","Number":"8316","RawContent":null,"Title":"Cast InnerList to `IList`","State":"closed","Body":"as requested by @JeremyKuhne [here](https://github.com/dotnet/winforms/pull/8207#discussion_r1035150381).\r\n\r\nRelated to #8140 and #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8316)","Url":"https://github.com/dotnet/winforms/pull/8316","RelatedDescription":"Closed or merged PR \"Cast InnerList to `IList`\" (#8316)"},{"Id":"1472335352","IsPullRequest":true,"CreatedAt":"2022-12-02T18:31:04","Actor":"JeremyKuhne","Number":"8314","RawContent":null,"Title":"Update to the latest CsWin32.","State":"closed","Body":"The default behavior now in CsWin32 is to not PreserveSig. Individual opt-outs are in NativeMethods.json.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8314)","Url":"https://github.com/dotnet/winforms/pull/8314","RelatedDescription":"Closed or merged PR \"Update to the latest CsWin32.\" (#8314)"},{"Id":"1472831677","IsPullRequest":true,"CreatedAt":"2022-12-02T13:33:12","Actor":"dotnet-maestro[bot]","Number":"8315","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221201.3\r\n- **Date Produced**: December 1, 2022 9:26:27 PM UTC\r\n- **Commit**: 320f1e152974b93af36f71ddd7f0599521111206\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22580.16 to 8.0.0-alpha.1.22601.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/39b6e5e...320f1e1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8315)","Url":"https://github.com/dotnet/winforms/pull/8315","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8315)"},{"Id":"1470551323","IsPullRequest":true,"CreatedAt":"2022-12-02T01:59:50","Actor":"elachlan","Number":"8308","RawContent":null,"Title":"Refactoring to replace usages of HashTable","State":"closed","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8308)","Url":"https://github.com/dotnet/winforms/pull/8308","RelatedDescription":"Closed or merged PR \"Refactoring to replace usages of HashTable\" (#8308)"},{"Id":"1472066572","IsPullRequest":true,"CreatedAt":"2022-12-02T01:04:08","Actor":"lonitra","Number":"8311","RawContent":null,"Title":"Introduce IManagedWrapper/IVTable For WinFormsComWrapper Logic","State":"closed","Body":"Related: #8291 \r\n\r\nCurrently, `WinFormsComWrappers.ComputeVtables()` goes through and returns the first VTable for the COM interface the object implements but this only captures a single COM interface the object implements when many implement multiple. As a result, calling `QueryInterface()` on the CCW will not have all the interfaces the object actually implements. This PR introduces a new pattern as a starting point to be able to account for objects that implement multiple interfaces. \r\n\r\n- New APIs:\r\n    - `IVTable` - Replaces `IPopulateVTable` and is used to get the populated vtable.\r\n    - `IVTable<TComInterface, TVTable>` - Allocates space for the vtable and populates the `IUnknown` methods. CCWs implement this and populate the rest of the vtable with its own specific methods.\r\n    - `ComInterfaceTable` - Struct that ties together the number of COM interfaces an object implements and its `ComInterfaceEntry*`.\r\n    - `IManagedWrapper` - This is used to get a populated `ComInterfaceTable` for `WinFormsComWrappers` to use.\r\n    - `IManagedWrapper<TComInterface, ...>` - To be implemented by managed objects. No actual implementation needs to be done as the interface does all the work of setting up the `ComInterfaceTable`.\r\n- Additionally I have also moved `InitializeXEntry()` logic for our COM Interfaces that have not yet been converted to the new pattern to their respective implementing classes and implemented the non generic `IManagedWrapper`. As a follow up I will convert these interfaces over to the new pattern.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8311)","Url":"https://github.com/dotnet/winforms/pull/8311","RelatedDescription":"Closed or merged PR \"Introduce IManagedWrapper/IVTable For WinFormsComWrapper Logic\" (#8311)"},{"Id":"1472158071","IsPullRequest":true,"CreatedAt":"2022-12-02T00:55:50","Actor":"elachlan","Number":"8313","RawContent":null,"Title":"Refactoring to replace usages of HashTable Part Deux","State":"open","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8313)","Url":"https://github.com/dotnet/winforms/pull/8313","RelatedDescription":"Open PR \"Refactoring to replace usages of HashTable Part Deux\" (#8313)"},{"Id":"1472079243","IsPullRequest":true,"CreatedAt":"2022-12-01T23:08:34","Actor":"dreddy-work","Number":"8312","RawContent":null,"Title":"Fix double scaling for scrollbars","State":"open","Body":"Fixes #8270\r\n\r\nin .NET 6, we streamlined scaling of child controls to use `AutScaleFactor` in PMv2 mode applications. This is a change from .NET framework, where we were scaling child controls with DPI factor even when `AutoScaleMode` was `Font`. As a result, scaling is centralized under `OnParentFontChanged` event and any controls that were doing explicit scaling in `RescaleConstants` method become redundant in .NET.\r\n\r\nWhen it comes to `ScrollBars`, we added public property in .NET Framework 4.8 to let developer's opt-in/out of DPI scaling for scroll bars. \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8312)","Url":"https://github.com/dotnet/winforms/pull/8312","RelatedDescription":"Open PR \"Fix double scaling for scrollbars\" (#8312)"},{"Id":"1471279862","IsPullRequest":true,"CreatedAt":"2022-12-01T13:33:23","Actor":"dotnet-maestro[bot]","Number":"8310","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221130.16\r\n- **Date Produced**: December 1, 2022 11:12:57 AM UTC\r\n- **Commit**: 39b6e5e5eb552af4e9c509a4b55362776771c89d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22579.12 to 8.0.0-alpha.1.22580.16][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0be32a0...39b6e5e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8310)","Url":"https://github.com/dotnet/winforms/pull/8310","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8310)"},{"Id":"1471219196","IsPullRequest":true,"CreatedAt":"2022-12-01T12:19:01","Actor":"elachlan","Number":"8309","RawContent":null,"Title":"Convert `StubSite` to use Dictionary instead of HashTable and Enable Nullability","State":"open","Body":"Related: #8143, #6793\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8309)","Url":"https://github.com/dotnet/winforms/pull/8309","RelatedDescription":"Open PR \"Convert `StubSite` to use Dictionary instead of HashTable and Enable Nullability\" (#8309)"},{"Id":"1469801737","IsPullRequest":false,"CreatedAt":"2022-11-30T15:13:46","Actor":"dmitrii-drobotov","Number":"8307","RawContent":null,"Title":"Screen readers cannot announce checked state of checkable ToolStrip/MenuStrip menu items ","State":"open","Body":"### .NET version\r\n\r\n.NET 8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, but it was working in [MainMenu](https://learn.microsoft.com/dotnet/api/system.windows.forms.mainmenu) control\r\n\r\n### Issue description\r\n\r\nInitially reported in https://github.com/dotnet/winforms/issues/7770. Screen readers cannot announce checked state of checkable ToolStrip/MenuStrip menu items due to lack of [Toggle pattern](https://learn.microsoft.com/en-us/dotnet/framework/ui-automation/implementing-the-ui-automation-toggle-control-pattern) implementation.\r\n\r\nFor example, for following menu items:\r\n![Screenshot of a MenuStrip item containing 4 items in submenu: Item 1, Item 2, Item 3, Item 4. Items 2 and 4 are checked](https://user-images.githubusercontent.com/102954094/204847823-a394e7de-2be3-44ea-8492-baf7af60a780.png)\r\n\r\nNarrator reads only items content, without their checked state:\r\n\r\n> Item 1, menu item, \r\n> Item 2, menu item, \r\n> Item 3, menu item, \r\n> Item 4, menu item,\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Add MenuStrip to form, initialize it with menu items (for example via \"Insert standard items\" button)\r\n2. Make items checkable: set `CheckOnClick` property to true or `CheckState` property to `Checked`\r\n3. Start Narrator and run the app\r\n5. Focus on MenuStrip, select checked menu item — Narrator will not announce that item is checked\r\n\r\nSample app:\r\n[MenuStripCheckedSample.zip](https://github.com/dotnet/winforms/files/10125020/MenuStripCheckedSample.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/8307","RelatedDescription":"Open issue \"Screen readers cannot announce checked state of checkable ToolStrip/MenuStrip menu items \" (#8307)"},{"Id":"1469608447","IsPullRequest":true,"CreatedAt":"2022-11-30T13:35:56","Actor":"dotnet-maestro[bot]","Number":"8306","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221129.12\r\n- **Date Produced**: November 30, 2022 5:32:33 AM UTC\r\n- **Commit**: 0be32a0d12a38133b9d0096d5e1c5fabe130549a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22578.7 to 8.0.0-alpha.1.22579.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0eaf12b...0be32a0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8306)","Url":"https://github.com/dotnet/winforms/pull/8306","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8306)"},{"Id":"1469607055","IsPullRequest":true,"CreatedAt":"2022-11-30T13:29:55","Actor":"dotnet-maestro[bot]","Number":"8305","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221129.2\r\n- **Date Produced**: November 29, 2022 7:23:52 PM UTC\r\n- **Commit**: 6b3bad6673f3ebe89ebe12ea7c4eff1705b893e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22578.1 to 8.0.0-beta.22579.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/3817f2b...6b3bad6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8305)","Url":"https://github.com/dotnet/winforms/pull/8305","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8305)"},{"Id":"1468531385","IsPullRequest":true,"CreatedAt":"2022-11-29T20:16:24","Actor":"vseanreesermsft","Number":"8303","RawContent":null,"Title":"Update branding to 6.0.13","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8303)","Url":"https://github.com/dotnet/winforms/pull/8303","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.13\" (#8303)"},{"Id":"1468531539","IsPullRequest":true,"CreatedAt":"2022-11-29T19:03:45","Actor":"vseanreesermsft","Number":"8304","RawContent":null,"Title":"Update branding to 7.0.2","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8304)","Url":"https://github.com/dotnet/winforms/pull/8304","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.2\" (#8304)"},{"Id":"1468033316","IsPullRequest":true,"CreatedAt":"2022-11-29T18:25:52","Actor":"dotnet-maestro[bot]","Number":"8300","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221128.7\r\n- **Date Produced**: November 29, 2022 10:35:15 AM UTC\r\n- **Commit**: 0eaf12b95e6508f6b09593e7bb553961127b4d59\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22578.1 to 8.0.0-alpha.1.22578.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1771d63...0eaf12b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8300)","Url":"https://github.com/dotnet/winforms/pull/8300","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8300)"},{"Id":"1468512171","IsPullRequest":false,"CreatedAt":"2022-11-29T18:24:02","Actor":"lonitra","Number":"8302","RawContent":null,"Title":"Add Test Coverage For MFC ActiveX Controls","State":"open","Body":"Related: #8294 \r\n\r\nThis is another area we are lacking as we do not have any [MFC ActiveX](https://learn.microsoft.com/en-us/cpp/mfc/mfc-activex-controls?view=msvc-170) test coverage. Any help here is appreciated!\r\n\r\nAs a first step an MFC ActiveX control will need to be created, registered, and follow a pattern similar to #8253 to get it into the winforms solution. The gaps for test coverage can then be expanded from there :)","Url":"https://github.com/dotnet/winforms/issues/8302","RelatedDescription":"Open issue \"Add Test Coverage For MFC ActiveX Controls\" (#8302)"},{"Id":"1468468373","IsPullRequest":false,"CreatedAt":"2022-11-29T17:46:14","Actor":"lonitra","Number":"8301","RawContent":null,"Title":"Add Test Coverage for Clipboard","State":"open","Body":"We have some unit tests for `Clipboard`, but could incorporate more tests illustrating different usage scenarios.\r\n\r\nAny help filling in the gaps here is greatly appreciated and especially helpful with BinaryFormatter deprecation. :)","Url":"https://github.com/dotnet/winforms/issues/8301","RelatedDescription":"Open issue \"Add Test Coverage for Clipboard\" (#8301)"},{"Id":"1468032109","IsPullRequest":true,"CreatedAt":"2022-11-29T13:29:07","Actor":"dotnet-maestro[bot]","Number":"8299","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221128.1\r\n- **Date Produced**: November 28, 2022 10:22:58 AM UTC\r\n- **Commit**: 3817f2b38a05c37c950715f84c95d452bcacfe52\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22575.1 to 8.0.0-beta.22578.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/b61fcdf...3817f2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8299)","Url":"https://github.com/dotnet/winforms/pull/8299","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8299)"},{"Id":"1467497450","IsPullRequest":false,"CreatedAt":"2022-11-29T05:55:34","Actor":"roland5572","Number":"8298","RawContent":null,"Title":"API Proposal: Support Multiselect property in FolderBrowserDialog class","State":"open","Body":"### Is your feature request related to a problem? Please describe\r\n\r\nIf the user needs to select multiple files, this function can be easily realized by using **OpenFileDialog.Multiselect**.\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.openfiledialog.multiselect\r\n\r\nBut currently there is no **Multiselect** property in the **FolderBrowserDialog** class, so when the user needs to select multiple folders at the same time, he has to perform multiple repeated operations.\r\n\r\nFolderBrowserDialog class:\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.folderbrowserdialog\r\n\r\n\r\n### Describe the solution you'd like and alternatives you've considered\r\n\r\nAPI Proposal:\r\n\r\nAdd properties:\r\n\r\nGets or sets a value indicating whether the dialog box allows multiple folders to be selected.\r\n`public bool Multiselect { get; set; }`\r\n\r\nGets the paths selected by the user.\r\n`public string[] SelectedPaths { get; }`\r\n\r\n### Will this feature affect UI controls?\r\n\r\nYes, it will affect UI controls.","Url":"https://github.com/dotnet/winforms/issues/8298","RelatedDescription":"Open issue \"API Proposal: Support Multiselect property in FolderBrowserDialog class\" (#8298)"},{"Id":"1467259128","IsPullRequest":false,"CreatedAt":"2022-11-29T00:11:38","Actor":"JeremyKuhne","Number":"8297","RawContent":null,"Title":"Investigate adding additional TypeConverter metadata to Resx","State":"open","Body":"Resx uses `TypeConverters` when available to convert data to/from `string` and `byte[]`. The specific type converter used isn't recorded, it's only the active one for `typeof(T)` that is considered. For unwrapping it would be good to know the specific type converter used and attempt to use the exact one if possible and give diagnostic information of some sort.\r\n\r\nIn order for this sort of change to have meaning, all copies of the Resx code need to be considered (MSBuild has their own, for example.)\r\n\r\n\r\ncc @GrabYourPitchforks ","Url":"https://github.com/dotnet/winforms/issues/8297","RelatedDescription":"Open issue \"Investigate adding additional TypeConverter metadata to Resx\" (#8297)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-05T03:30:34.3925393Z","RunDurationInMilliseconds":535}