{"Data":{"GitHub":{"Issues":[{"Id":"753070501","IsPullRequest":true,"CreatedAt":"2020-12-05T06:32:39","Actor":"manuelvalenzuela","Number":"4297","RawContent":null,"Title":"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter","State":"closed","Body":"Fixes #4293\r\n\r\n## Proposed changes\r\n- Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4297)","Url":"https://github.com/dotnet/winforms/pull/4297","RelatedDescription":"Closed or merged PR \"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter\" (#4297)"},{"Id":"752800626","IsPullRequest":false,"CreatedAt":"2020-12-05T06:32:39","Actor":"manuelvalenzuela","Number":"4293","RawContent":null,"Title":"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView","State":"closed","Body":"* .NET Core Version: \r\n.Net 5 (net5.0-windows)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nSetter of method `public virtual TreeNode this[int index]` of class `TreeNodeCollection` should not allow adding a `TreeNode` that already exists in the `TreeView`, in order to be consistent with the methods: `Insert(int index, TreeNode node)` and `Add(TreeNode node)`.\r\n\r\n**Expected behavior:**\r\nIt should throw a `System.ArgumentException` with message `Cannot add or insert the item '{0}' in more than one place. You must first remove it from its current location or clone it.`\r\n\r\n**Minimal repro:**\r\n- Create a new WinForms App\r\n- Insert a TreeView on the Form.\r\n- Insert the folloing code in the Form_Load event handler.\r\n\r\n``` C#\r\nprivate void Form1_Load(object sender, EventArgs e)\r\n{\r\n    TreeNode node = new TreeNode(\"Node 1\");\r\n    treeView1.Nodes.Add(node);\r\n    treeView1.Nodes[0] = node;\r\n}\r\n```\r\nYou can see the expected behavior changing the following:\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Insert(0, node);\r\n```\r\nor\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Add(node);\r\n```","Url":"https://github.com/dotnet/winforms/issues/4293","RelatedDescription":"Closed issue \"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\" (#4293)"},{"Id":"756951523","IsPullRequest":true,"CreatedAt":"2020-12-05T04:35:06","Actor":"msoeken","Number":"4324","RawContent":null,"Title":"Typo in README","State":"closed","Body":"Just a small typo in the README.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4324)","Url":"https://github.com/dotnet/winforms/pull/4324","RelatedDescription":"Closed or merged PR \"Typo in README\" (#4324)"},{"Id":"756808429","IsPullRequest":false,"CreatedAt":"2020-12-04T05:13:43","Actor":"Olina-Zhang","Number":"4323","RawContent":null,"Title":"AccessibilityInsights: Wrong bounding rectangle and missing ScrollItem pattern for ComboBox items when ComboBox list with scrollbar ","State":"open","Body":"* .NET Core Version: \r\n6.0.100-alpha.1.20603.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, \r\nThis is a regression issue, can repro in .Net 4.8, and cannot repro in .Net 4.7.2.\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms .Net Core app with 3 ComboBox controls,  set their's DropDownHeight property to show scrollbar for comboBox list\r\nOr open attached sample project and run Core app directly\r\n[CoreTesting4.zip](https://github.com/dotnet/winforms/files/5640705/CoreTesting4.zip)\r\n2. Use [Accessibility Insights](https://accessibilityinsights.io/en/downloads) tool to test ComboBox dropdown items\r\n\r\n**Actual behavior:**\r\nFor some ComboBox list items, there is wrong bounding rectangle if scrollbar is not in minimal position(value 0, scrolled to top), and items whose parent supports the Scroll pattern must support the ScrollItem pattern.\r\n![image](https://user-images.githubusercontent.com/26474449/101124041-252dfb80-3631-11eb-9d96-55996caf835c.png)\r\n\r\n**Expected behavior:**\r\nComboBox items bounding rectangle for accessibility Insights are in correct position and support the ScrollItem pattern\r\n![image](https://user-images.githubusercontent.com/26474449/101124673-75f22400-3632-11eb-8c7d-3134f3ba5425.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4323","RelatedDescription":"Open issue \"AccessibilityInsights: Wrong bounding rectangle and missing ScrollItem pattern for ComboBox items when ComboBox list with scrollbar \" (#4323)"},{"Id":"756746483","IsPullRequest":true,"CreatedAt":"2020-12-04T02:31:43","Actor":"RussKie","Number":"4322","RawContent":null,"Title":"Correct imagelist binding for ListView groups (servicing)","State":"open","Body":"(cherry picked from commit db160691c31991b78a3b58860ba5fecd0de57bab)\r\n\r\n\r\nResolves #4310\r\nResolves dotnet/winforms-designer#2057\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nListViewGroups can't have title images set via either key or index, as propertygrid is unable to discover the bound imagelist.\r\nCorrect the missing binding by applying `RelatedImageListAttribute` to respective properties.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Currently it is impossible to set title images via UI tools (this includes Visual Studio designer). Thus affects the perception of working state of the Windows Forms designer.\r\n\r\n## Regression? \r\n\r\n- No, support for `ListViewGroup` title images was introduced in .NET 5.0 in #3490.\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972543-1a218f80-358d-11eb-91a7-22ffe63fc489.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972337-bc8d4300-358c-11eb-8680-75b39d5146aa.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- By substituting binaries under C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2 and running a sample project\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4322)","Url":"https://github.com/dotnet/winforms/pull/4322","RelatedDescription":"Open PR \"Correct imagelist binding for ListView groups (servicing)\" (#4322)"},{"Id":"755910903","IsPullRequest":true,"CreatedAt":"2020-12-04T02:25:21","Actor":"RussKie","Number":"4318","RawContent":null,"Title":"Correct imagelist binding for ListView groups","State":"closed","Body":"\r\n\r\nResolves #4310\r\nResolves dotnet/winforms-designer#2057\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nListViewGroups can't have title images set via either key or index, as propertygrid is unable to discover the bound imagelist.\r\nCorrect the missing binding by applying `RelatedImageListAttribute` to respective properties.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Currently it is impossible to set title images via UI tools (this includes Visual Studio designer). Thus affects the perception of working state of the Windows Forms designer.\r\n\r\n## Regression? \r\n\r\n- No, support for `ListViewGroup` title images was introduced in .NET 5.0 in #3490.\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972543-1a218f80-358d-11eb-91a7-22ffe63fc489.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972337-bc8d4300-358c-11eb-8680-75b39d5146aa.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- By substituting binaries under C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2 and running a sample project\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4318)","Url":"https://github.com/dotnet/winforms/pull/4318","RelatedDescription":"Closed or merged PR \"Correct imagelist binding for ListView groups\" (#4318)"},{"Id":"754846132","IsPullRequest":false,"CreatedAt":"2020-12-04T02:25:21","Actor":"RussKie","Number":"4310","RawContent":null,"Title":"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully","State":"closed","Body":"Duplicate of https://github.com/dotnet/winforms-designer/issues/2057\r\n\r\n## Minimal Reproduction Scenario\r\n1.\tCreate a winforms .NET 5.0 project.\r\n2.\tDrag and drop a ListView & a ImageList to Form.\r\n3.\tChoose one image to ImageList, then add this code line into Form1.designer.cs file: this.listView1.GroupImageList = this.imageList1;\r\n4.\tOpen form designer, add a ListViewGroup(Header = Group1) and a ListViewItem(Text = TextStr).\r\n5.\tSet the Group property of ListViewItem to ‘Group1’.\r\n6.\tSet the TitleImageIndex property of ListViewGroup to ‘0’.\r\n7.\tSave the project, close form designer and reopen again.\r\n\r\n<!--\r\n    How can this issue be reproduced? \r\n-->\r\n\r\n## Expected Behavior\r\nThe image that set previously should not disappear.\r\n<!--\r\n    Please indicate the behavior you expect to see.\r\n-->\r\n\r\n## Current Behavior\r\nThe image that set previously disappeared.\r\n![CodeLine](https://user-images.githubusercontent.com/18568603/86090448-af9b8d80-badc-11ea-832f-e170241e2ac9.PNG)\r\n![NotSaved](https://user-images.githubusercontent.com/18568603/86090426-a6122580-badc-11ea-85d0-46cb5082a332.gif)\r\n\r\n<!--\r\n    Please provide a description of the current buggy behavior\r\n-->\r\n\r\n<!--\r\n    If this issue related to any other issues, please indicate that relationship.\r\n-->\r\n","Url":"https://github.com/dotnet/winforms/issues/4310","RelatedDescription":"Closed issue \"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully\" (#4310)"},{"Id":"754571949","IsPullRequest":false,"CreatedAt":"2020-12-04T02:00:35","Actor":"manfromarce","Number":"4307","RawContent":null,"Title":"Edit Assembly Info button is missing","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 / 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nIn .NET Framework Windows Forms projects there is a button to edit application assembly information in project Properties page. This button is missing in C# .NET Core projects, while in Vb.Net .NET Core Projects is visible but disabled. I'm using Visual Studio 16.8.2 and this happens in both .NET Core 3.1 and .NET 5.0.\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nI'd like to edit assembly information like in .NET Framework.\r\n![Immagine 2020-12-01 175534](https://user-images.githubusercontent.com/45036600/100772381-c6ce0680-33ff-11eb-87f9-2e0d4451c2bc.png)\r\n\r\n**Minimal repro:**\r\nJust create a new .NET Core project and go to Project > Properties...\r\n","Url":"https://github.com/dotnet/winforms/issues/4307","RelatedDescription":"Closed issue \"Edit Assembly Info button is missing\" (#4307)"},{"Id":"755102190","IsPullRequest":false,"CreatedAt":"2020-12-04T00:45:30","Actor":"fitdev","Number":"4311","RawContent":null,"Title":"WinForms Designer cannot design From inheriting from another Form","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n* VS: 2019 16.9 Preview 1 Community\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo. On .Net Framework in the same VS version it works quickly and flawlessly.\r\n\r\n**Problem description:**\r\n\r\nNot sure if it is related to VB or is also applicable to C#, but I have the case:\r\n\r\nFormIWantToDesign.vb\r\n```vb\r\nFriend Class FormIWantToDesign : Inherits ContainerForm\r\n\r\nEnd Class\r\n```\r\nFormIWantToDesign.Designer.vb\r\n```vb\r\n<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _\r\nPartial Class FormIWantToDesign : Inherits ContainerForm\r\n\r\nEnd Class\r\n```\r\nContainerForm.vb\r\n```vb\r\nPublic Class ContainerForm : Inherits System.Windows.Forms.Form\r\n\r\nEnd Class\r\n```\r\nContainerForm.Designer.vb\r\n```vb\r\n<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _\r\nPartial Class ContainerForm\r\n    Inherits System.Windows.Forms.Form\r\n'Designer generated code here\r\nEnd Class\r\n```\r\n\r\nAll classes / files are part of the same .Net 5 project. Project compiles, is built, rebuilt, and at runtime everything works.\r\n\r\n**Expected Behavior:**\r\nWhen I click on `FormIWantToDesign.vb` I want the VS to show me a WF designer so I can interact with controls on the form, _just as is the case with .Net Framework version of it_.\r\n\r\n**Actual Behavior:**\r\n```\r\nThe designer could not be shown for this file because none of the classes within it can be designed. The designer inspected the following classes in the file: The designer could not be shown for this file because none of the classes within it can be designed. The designer inspected the following classes in the file: \\r\\n FormIWantToDesign --- The base class 'MyProjectNamespace.ContainerForm' could not be loaded. Ensure the assembly has been referenced and that all projects have been built.     \r\n\r\nInstances of this error (1)  \r\n \r\nat Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.EnsureDocument(IDesignerSerializationManager manager)\r\nat Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager manager)\r\nat Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager serializationManager)\r\nat Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.DeferredLoadHandler.Microsoft.VisualStudio.TextManager.Interop.IVsTextBufferDataEvents.OnLoadCompleted(Int32 fReload)  \r\n```\r\n\r\nWhy it says `MyProjectNamespace.ContainerForm` cannot be loaded I have no idea. The project has been built, and is the same project as the one that contains the form I try to open in a designer.\r\n\r\n**Minimal repro:**\r\nSee files samples above.","Url":"https://github.com/dotnet/winforms/issues/4311","RelatedDescription":"Closed issue \"WinForms Designer cannot design From inheriting from another Form\" (#4311)"},{"Id":"755781950","IsPullRequest":false,"CreatedAt":"2020-12-04T00:44:20","Actor":"Marie-Shi","Number":"4315","RawContent":null,"Title":"NotifyIcon balloon is hided when FormBorderStyle property is set to None and form is maximized","State":"closed","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20602.2 from master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More info:**\r\nThis is not a regression issue and it can also repro on Framework project.\r\n\r\n**Minimal repro:**\r\n1.\tExtract “**NotifyIcon_hide_issue.zip**” and open it in VS.\r\n[NotifyIcon_hide_issue.zip](https://github.com/dotnet/winforms/files/5633442/NotifyIcon_hide_issue.zip)\r\n\r\n2.\tBuild and run this project.\r\n3.\tClick ‘**Border None**’ button first, next click ‘**Change State**’ button to make form maximized.\r\n4.\tClick ‘**Notify**’ button and observe whether NotifyIcon balloon is shown.\r\n\r\n**Actual behavior:**\r\nNotifyIcon balloon text is not shown on screen(not shown in front of the maximized form), but actually it is hided in Windows Task bar. Please see the attachment:\r\n[NotifyIcon_Hide_video.zip](https://github.com/dotnet/winforms/files/5633440/NotifyIcon_Hide_video.zip)\r\n![Notifyicon_not_show](https://user-images.githubusercontent.com/45864017/100959528-78347f80-3559-11eb-960e-f896506645ff.png)\r\n\r\n**Expected behavior:**\r\nThe NotifyIcon balloon text should be shown in screen(in front of the maximized form) when the form is maximized.\r\n![notifyicon_show](https://user-images.githubusercontent.com/45864017/100959500-5fc46500-3559-11eb-8977-6fe61bdeb5f0.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4315","RelatedDescription":"Closed issue \"NotifyIcon balloon is hided when FormBorderStyle property is set to None and form is maximized\" (#4315)"},{"Id":"756549683","IsPullRequest":false,"CreatedAt":"2020-12-03T20:09:54","Actor":"wjk","Number":"4321","RawContent":null,"Title":"Radio button \"arrow order\" cannot be configured","State":"open","Body":"## Problem description\r\nWhen I add multiple RadioButton controls to a form, they are navigated between as a group using the arrow keys instead of the Tab key. (Only the focused radio button in a group has `TabStop=true`.) However, the order in which the controls are added to this \"arrow order\" array appears to depend on the order with which they were added to the form in the `InitializeComponent()` method. Since the order of calls in this method cannot be manually changed (without being immediately reverted by the designer), I cannot set the \"arrow order\" myself. In my project, the runtime \"arrow order\" happens to be bottom-to-top (pressing the up arrow moves the focus to the next radio button _below_ the currently focused button), but I believe that is due to sheer random chance. It could just as well be in a meaningless, seemingly random order.\r\n\r\nI need a way to ensure that the \"arrow order\" is logically related to the visual position of the controls on the form. I don't know what this should look like in terms of API, as (a) the ordering of a group of radio buttons needs to be independent of any other group of radio buttons on the form, and (b) this logic appears to be performed by native code, not by Windows Forms proper.\r\n\r\n_Have you experienced this same bug with .NET Framework?_ \r\nHave not checked, as .NET Framework is EOL.\r\n\r\n## Version info\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.20262\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/winforms/issues/4321","RelatedDescription":"Open issue \"Radio button \"arrow order\" cannot be configured\" (#4321)"},{"Id":"756187988","IsPullRequest":false,"CreatedAt":"2020-12-03T13:19:29","Actor":"SergeySmirnov-Akvelon","Number":"4320","RawContent":null,"Title":"[Accessibility] ListViewItem has no keyboard tooltip","State":"open","Body":"- .NET Core Version: 5.0\r\n- Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\n* ListViewItem has no keyboard tooltip when pressing the right/left arrow or Tab button to navigate to a ListViewItem which got the keyboard focus\r\n\r\n**Expected behavior:**\r\n* ListViewItem has a keyboard tooltip\r\n\r\n**Minimal repro:**\r\n1. Create .Net Core 5.0 app\r\n2. Add a ListView to the app\r\n3. Add items to the ListView\r\n4. Set tooltips for ListViewItems\r\n5. allow showing tooltips for items\r\n6. Run the app and try to get a item tooltip using a keyboard navigation","Url":"https://github.com/dotnet/winforms/issues/4320","RelatedDescription":"Open issue \"[Accessibility] ListViewItem has no keyboard tooltip\" (#4320)"},{"Id":"755873491","IsPullRequest":false,"CreatedAt":"2020-12-03T11:28:19","Actor":"RussKie","Number":"4316","RawContent":null,"Title":"`NativeImageList` not disposed by `ResourceManager`","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Version: \r\nDebug builds of .NET 5.0 and 6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWe have added the code to track lifetime and incorrect disposal of unmanaged resources, specifically in `NativeImageList` we have the following code:\r\nhttps://github.com/dotnet/winforms/blob/b30bdd1922a23f85250729f59a3124c3c565e5e2/src/System.Windows.Forms/src/System/Windows/Forms/ImageList.NativeImageList.cs#L79-L91\r\n\r\nThis code causes apps to crash if those apps have serialised imagelists, and have a code similar to the following:\r\n```cs\r\nthis.imageList2.ImageStream = (System.Windows.Forms.ImageListStreamer)(resources.GetObject(\"imageList2.ImageStream\"));\r\n```\r\n\r\nThe app will crash with the following stacktrace:\r\n```\r\nMessage: NativeImageList was not disposed properly. Originating stack:\r\n   at System.Windows.Forms.ImageList.NativeImageList..ctor(IStream pstm)\r\n   at System.Windows.Forms.ImageListStreamer..ctor(SerializationInfo info, StreamingContext context)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at System.Runtime.Serialization.ObjectManager.CompleteISerializableObject(Object obj, SerializationInfo info, StreamingContext context)\r\n   at System.Runtime.Serialization.ObjectManager.FixupSpecialObject(ObjectHolder holder)\r\n   at System.Runtime.Serialization.ObjectManager.DoFixups()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n   at System.Resources.Extensions.DeserializingResourceReader.ReadBinaryFormattedObject()\r\n   at System.Resources.Extensions.DeserializingResourceReader.DeserializeObject(Int32 typeIndex)\r\n   at System.Resources.Extensions.DeserializingResourceReader._LoadObjectV2(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.DeserializingResourceReader.LoadObjectV2(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.DeserializingResourceReader.LoadObject(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.Extensions.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetObject(String name, CultureInfo culture, Boolean wrapUnmanagedMemStream)\r\n   at System.Resources.ResourceManager.GetObject(String name)\r\n   at SimpleWinForms.Form1.InitializeComponent()\r\n   at SimpleWinForms.Form1..ctor()\r\n   at SimpleWinForms.Program.Main()\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nAll objects are disposed correctly, and the assert is not hit.\r\n\r\n**Minimal repro:**\r\n\r\n1. Build the Windows Forms solution in Debug mode\r\n1. Run `WinformsControlsTest` project from Visual Studio with a debugger attached\r\n1. Open `ListView` form\r\n1. Observe VS hit the assert\r\n","Url":"https://github.com/dotnet/winforms/issues/4316","RelatedDescription":"Closed issue \"`NativeImageList` not disposed by `ResourceManager`\" (#4316)"},{"Id":"755880086","IsPullRequest":true,"CreatedAt":"2020-12-03T05:37:21","Actor":"vladimir-krestov","Number":"4317","RawContent":null,"Title":"Fixing MonthCalendar a display dates range resets and flickers after calling UpdateBoldedDates ","State":"open","Body":"Fixes #4283\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Use [MCM_SETDAYSTATE](https://docs.microsoft.com/windows/win32/controls/mcm-setdaystate) message to a native control instead of recreating its `Handle` in the Month view\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A calendar doesn't reset a display dates range after calling [UpdateBoldedDates](https://docs.microsoft.com/dotnet/api/system.windows.forms.monthcalendar.updateboldeddates) method now.\r\n- The flickers have not disappeared but there are fewer of them than before. \r\n> The flickers reproduce for a native [MonthCalendar](https://docs.microsoft.com/windows/win32/controls/month-calendar-control-reference) control too, it seems it is a native control issue.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Middle, we are changing a public API. It has to be tested carefully.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- MonthCalendar has flickers and changes a display dates range when calling UpdateBoldedDates \r\n![fail](https://user-images.githubusercontent.com/49272759/100968378-495edf00-3542-11eb-8f26-a87860b74f27.gif)\r\n\r\n\r\n### After\r\n- MonthCalendar doesn't change a display dates range and has fewer flickers when calling UpdateBoldedDates \r\n![wokrs](https://user-images.githubusercontent.com/49272759/100968377-482db200-3542-11eb-929c-d60f9b2a2953.gif)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI\r\n- UI testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.630]\r\n- .NET (6.0.100-alpha.1.20554.10)\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4317)","Url":"https://github.com/dotnet/winforms/pull/4317","RelatedDescription":"Open PR \"Fixing MonthCalendar a display dates range resets and flickers after calling UpdateBoldedDates \" (#4317)"},{"Id":"754072076","IsPullRequest":true,"CreatedAt":"2020-12-03T02:20:26","Actor":"willibrandon","Number":"4303","RawContent":null,"Title":"Granular NumericUpDownTests (#4211)","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4211 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Split `NumericUpDown_VisualStyles_off_BasicRendering` into 2 smaller tests that assert a single case, enabled and disabled.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Ran the rendering tests.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4303)","Url":"https://github.com/dotnet/winforms/pull/4303","RelatedDescription":"Closed or merged PR \"Granular NumericUpDownTests (#4211)\" (#4303)"},{"Id":"755684579","IsPullRequest":true,"CreatedAt":"2020-12-02T23:21:36","Actor":"RussKie","Number":"4314","RawContent":null,"Title":"Revert \"Explicit ImageList ownership management\" (servicing)","State":"open","Body":"This reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nResolves #4169\r\nResolves #4275\r\n\r\n\r\n## Proposed changes\r\n\r\n\r\nRevert \"Explicit ImageList ownership management. (#3601)\"\r\nThis reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\nRevert \"Fix `ListView` no longer displays images (#4184)\"\r\nThis reverts commit d0608e72a356ad991f9c9d12518e29b43a1fb4f0.\r\n\r\nWe have observed an instability of tests under stress (and reasonably high degree of concurrency) presumably caused by ImageList lifetime handling (notably #3358).\r\nThe changes introduced in #3601 have helped with tests stability, however resulted in a number of regressions, such as #4169 and #4275.\r\n\r\nRestore the original implementation given it worked reasonably well for the past so many years.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The `ImageList` behaviours should be the same as in .NET Framework and .NET Core.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4314)","Url":"https://github.com/dotnet/winforms/pull/4314","RelatedDescription":"Open PR \"Revert \"Explicit ImageList ownership management\" (servicing)\" (#4314)"},{"Id":"755268209","IsPullRequest":true,"CreatedAt":"2020-12-02T22:57:08","Actor":"weltkante","Number":"4312","RawContent":null,"Title":"Fix flaky Cursor accessor test","State":"closed","Body":"Ensure static Cursor accessors are initialized before testing return value consistency in multithreaded environments\r\n\r\nFixes #4309\r\n\r\n## Proposed changes\r\n\r\nas mentioned in the issue returning different instances during multithreaded access is acceptable and the test needs to take that into consideration\r\n\r\n## Customer Impact\r\n\r\nnone, product behavior remains as-is, only the test is changed\r\n\r\n## Regression? \r\n\r\nno\r\n\r\n## Risk\r\n\r\nno new risks, test made incorrect assumptions\r\n\r\n### Before\r\n\r\nIf two threads are accessing the static cursor properties at the same time both may have observed the backing field as null and created their own cursor instance. Only one of them \"wins\" the write to the backing field, the other will return a different instance than on subsequent calls to the property. The test was making the assumption that the value returned from static properties never changes which is not true in this scenario.\r\n\r\n### After\r\n\r\nThe test should be robust against running on multiple threads\r\n\r\n## Test methodology\r\n\r\n- code review\r\n- running tests multiple times locally\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4312)","Url":"https://github.com/dotnet/winforms/pull/4312","RelatedDescription":"Closed or merged PR \"Fix flaky Cursor accessor test\" (#4312)"},{"Id":"754706428","IsPullRequest":false,"CreatedAt":"2020-12-02T22:57:07","Actor":"weltkante","Number":"4309","RawContent":null,"Title":"Cursor static accessors not threadsafe / test flaky","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\nmaster branch\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\ndid not check\r\n\r\n**Problem description:**\r\nThe static accessors of the `Cursor` class are not threadsafe, if two threads attempt to access the same cursor at roughly the same time then two distinct instances of the cursor will be created.\r\n\r\nThis causes `CursorConverter_GetStandardValues_Invoke_ReturnsExpected` test to be flaky.\r\n\r\n**Expected behavior:**\r\nEither adjust the `Cursor` class to be threadsafe (using a `lock` statement or `Interlocked.CompareExchange` instead of unprotected `??=` syntax) or adjust the test in some way to not be flaky.\r\n\r\n**Minimal repro:**\r\nNot reproducable deterministcally, test is flaky and may fail.\r\n","Url":"https://github.com/dotnet/winforms/issues/4309","RelatedDescription":"Closed issue \"Cursor static accessors not threadsafe / test flaky\" (#4309)"},{"Id":"755277229","IsPullRequest":true,"CreatedAt":"2020-12-02T13:32:02","Actor":"SergeySmirnov-Akvelon","Number":"4313","RawContent":null,"Title":"Fixing behavior of tooltip for DataGrivViewTextBoxCell","State":"open","Body":"Fixes #2812\r\n\r\n## Proposed changes\r\n- Added special logic that checks if the tooltip is internal/default or if tooltip uses a value from a cell. If the value is taken from a cell, we check if the value is cut off in the cell itself. If it is cut off, we display the tooltip with the value in the cell, otherwise the tooltip is not displayed. If tooltip is internal/default then we also display the tooltip \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nBefore fix:\r\n![Issue-2812-boforefix](https://user-images.githubusercontent.com/23376742/100880327-a2d0fa80-34bd-11eb-9bcb-bfdf155827e2.gif)\r\n\r\nAfter fix:\r\n![Issue-2812-afterfix](https://user-images.githubusercontent.com/23376742/100880364-acf2f900-34bd-11eb-91d1-950a01b8d2ae.gif)\r\n\r\n## Regression? \r\n\r\n- Yes (Only .NET Core Version, .NET Framework Version is right.)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n- CTI team \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4313)","Url":"https://github.com/dotnet/winforms/pull/4313","RelatedDescription":"Open PR \"Fixing behavior of tooltip for DataGrivViewTextBoxCell\" (#4313)"},{"Id":"754527179","IsPullRequest":false,"CreatedAt":"2020-12-02T07:19:38","Actor":"the-namelessone","Number":"4306","RawContent":null,"Title":"bug: listview column click exception","State":"closed","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n[listviewbug.zip](https://github.com/dotnet/winforms/files/5623842/listviewbug.zip)\r\n\r\n\r\nIn .NET 5.0 version see above and Visual Studio 16.8.2 the attached example program crashes and gives exception when clicking a column header. Find all source code in the zip file.\r\n\r\nThe exceptions that are thrown (randomly the one or the other):\r\n\r\nSystem.NullReferenceException: 'Object reference not set to an instance of an object.'\r\n\r\nSystem.ExecutionEngineException\r\n\r\nThose exceptions are .NET 5.0 exceptions and don't occur in  .NET Framework 4.8!\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThis code works without exception in .NET Framework 4.8\r\n\r\ngreetings\r\nThe c0demast3r\r\n","Url":"https://github.com/dotnet/winforms/issues/4306","RelatedDescription":"Closed issue \"bug: listview column click exception\" (#4306)"},{"Id":"753658458","IsPullRequest":false,"CreatedAt":"2020-12-02T07:19:04","Actor":"athieman","Number":"4301","RawContent":null,"Title":"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently","State":"closed","Body":"* .NET Core Version:\r\n    <details>\r\n        <summary>5.0.100</summary>\r\n\r\n         OS Name:     Windows\r\n         OS Version:  10.0.17763\r\n         OS Platform: Windows\r\n         RID:         win10-x64\r\n         Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\n         Host (useful for support):\r\n         Version: 5.0.0\r\n         Commit:  cf258a14b7\r\n\r\n         .NET SDKs installed:\r\n         5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n         .NET runtimes installed:\r\n         Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n         Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n         Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n   </details>\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n \r\n* Problem Description:\r\n\r\n    When sorting a ListView by a column, a NullReferenceException or EngineExecutionException is sometimes thrown.  On my computer a ListView with 2 columns and 1,000 rows will throw an exception after being sorted about 12 times.  When the number of rows is increased to 10,000, it will throw an exception on either the first or second time the ListView is sorted.  The same problem does not occur in .NET Core 3.1.\r\n\r\n**Expected behavior:**\r\nNo exceptions should be thrown when sorting a ListView by a column when none of the subitems in the the ListView are null.\r\n\r\n**Minimal repro:**\r\nI have uploaded the small demo application to the following repository: [GitHub](https://github.com/athieman/ListView-Sorting-Bug/tree/main)\r\n\r\nIncreasing the size variable in the LoadData method makes it easier to reproduce, but with the default 1,000 items it usually throws either a NullReferenceException or EngineExecutionException after sorting one of the columns 12 times on my machine.\r\n\r\nThe issue does appear to be similar to #4264 ListView.Items.Add throws ExecutionEngineException with custom ListViewItemSorter, but because I am seeing a NullReferenceException much more often than the ExecutionEngineException I made a new Issue.","Url":"https://github.com/dotnet/winforms/issues/4301","RelatedDescription":"Closed issue \"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently\" (#4301)"},{"Id":"752993531","IsPullRequest":false,"CreatedAt":"2020-12-02T02:29:38","Actor":"ghost","Number":"4296","RawContent":null,"Title":"bug: windows form designer ContextMenuStrip can't be edited","State":"closed","Body":"* .NET Core Version: \r\n\r\n    .NET SDK (reflecting any global.json):\r\n    Version: 5.0.100\r\n    Commit: 5044b93829\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19041\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\nVersion: 5.0.0\r\nCommit: cf258a14b7\r\n\r\n.NET SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n\r\nNo\r\n\r\n**Problem description:**\r\n\r\nIn windows form designer the ContextMenuStrip can't be edited.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nAn editable ContextMenuStrip.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4296","RelatedDescription":"Closed issue \"bug: windows form designer ContextMenuStrip can't be edited\" (#4296)"},{"Id":"754587360","IsPullRequest":false,"CreatedAt":"2020-12-01T17:29:22","Actor":"manfromarce","Number":"4308","RawContent":null,"Title":"Error when trying to create Settings file (VB.Net)","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 or 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nWhen I create a new .NET Core Windows Forms project in VB.NET and go to Project > Properties > Settings, Visual Studio says that the project doesn't have a default Settings file. However when I click the message to create a new Settings file I get HRESULT_EXCEPTION 0x80070002 (Unable to find specified file). This issue doesn't occur in .NET Core C# projects, nor in .NET Framework.\r\n![Screenshot (103)](https://user-images.githubusercontent.com/45036600/100774322-3e9d3080-3402-11eb-8a52-1a61224aabc4.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nWhen I click the message, I expect a new empty settings file to be created, like in .NET Framework.\r\n\r\n**Minimal repro:**\r\nI just created a blank solution and project and the error immediately displays when I go to Project > Properties > Settings and click on the link to create a new settings file. I'm using Visual Studio 16.8.2, I tried to repair my installation and change .NET Core target version but nothing changed.\r\n","Url":"https://github.com/dotnet/winforms/issues/4308","RelatedDescription":"Open issue \"Error when trying to create Settings file (VB.Net)\" (#4308)"},{"Id":"754422836","IsPullRequest":false,"CreatedAt":"2020-12-01T14:05:00","Actor":"SergeySmirnov-Akvelon","Number":"4305","RawContent":null,"Title":"Some controls do not support ToolTips when the user uses the keyboard to navigate","State":"open","Body":"**Controls that have no tooltip properties:**\r\n- [X] ColorDialog\r\n- [X] FolderBrowserDialog\r\n- [X] FontDialog\r\n- [X] NotifyIcon\r\n- [X] OpenFileDialog\r\n- [X] PageSetupDialog\r\n- [X] PrintDocument\r\n- [X] PrintDialog\r\n- [X] SaeFileDialog\r\n- [X] TolStripSeparator\r\n\r\n**Controls that have a property for a tooltip, but it is not displayed when the user uses the mouse or keyboard to navigate:**\r\n- [ ] ContextMenu\r\n- [ ]  DataGridView (it is only displayed when the user hovers over a cell (for example: DataGridViewButtonCell))\r\n- [ ]  PrintPreviewDialog\r\n- [ ]  PropertyGrid\r\n\r\n**Controls that cannot be focused using the keyboard (but the tooltip is displayed when the user uses the mouse):**\r\n- [X] DataGridViewButtonColumn\r\n- [X] DataGridViewCheckBoxColumn\r\n- [X] DataGridViewComboBoxColumn\r\n- [X] DataGridViewImageColumn\r\n- [X] DataGridViewLinkColumn\r\n- [X] DataGridViewTextBoxColumn\r\n- [X] FlowLayoutPanel\r\n- [X] GroupBox\t\r\n- [X] Label\r\n- [X] MenuStrip\r\n- [X] Panel\r\n- [X] PictureBox\t\r\n- [X] ProgressBar\r\n- [X] SplitterPanel\r\n- [X] StatusStrip\r\n- [X] ToolStrip\r\n- [X] ToolStripLabel\r\n- [X] ToolStripProgressBar\r\n- [X] ToolStripStatusLabel\r\n\r\n**Controls that support tooltips when the user uses the keyboard or mouse to navigate:**\r\n- [X] BindingNavigator - buttons\r\n- [X] DataGridViewButtonCell\r\n- [X] DataGridViewCheckBoxCell\r\n- [X] DataGridViewComboBoxCell\r\n- [X] DataGridViewImageCell\r\n- [X] DataGridViewLinkCell\r\n- [X] DataGridViewTextBoxCell\r\n- [X] DateTimePicker\r\n- [X] DomainUpDown\r\n- [X] ListBox\r\n- [X] ListView\r\n- [X] MaskedTextBox\r\n- [X] MonthCalendar\r\n- [X] NumericUpDown\r\n- [X] PrintPreviewControl\r\n- [X] PrintPreviewDialog - buttons\r\n- [X] PropertyGrid - buttons\r\n- [X] RadioButton\r\n- [X] RichTextBox\r\n- [X] SplitterContainer\r\n- [X] TabControl\r\n- [X] TextBox\r\n- [X] ToolStripButton\r\n- [X] ToolStripComboBox\r\n- [X] ToolStripDropDownButton\r\n- [X] ToolStripMenuItem\r\n- [X] ToolStripSplitButton\r\n- [X] ToolStripTextBox\r\n- [X] TreeViewLinkLabel\r\n\r\n**Controls that don't support tooltips when the user uses the mouse to navigate:**\r\n- [ ]  ListViewItem (#4320)\r\n- [ ]  TabPage (#2717)\r\n- [ ]  TreeNode","Url":"https://github.com/dotnet/winforms/issues/4305","RelatedDescription":"Open issue \"Some controls do not support ToolTips when the user uses the keyboard to navigate\" (#4305)"},{"Id":"754106319","IsPullRequest":false,"CreatedAt":"2020-12-01T07:22:10","Actor":"Pilzinsel64","Number":"4304","RawContent":null,"Title":"Windows Forms Designer don't use given designerType in DesignerAttribute","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe Windows Forms Designer seems to not be able to load the designer type that's given in a DesignerAttribute of any custom Control.\r\n\r\nThis does load the default designer:\r\n![image](https://user-images.githubusercontent.com/23138465/100709153-e2a8bc80-33ad-11eb-8ef5-e9340bb5f38a.png)\r\n\r\nThis doesn't load any designer (control acts like a component):\r\n![image](https://user-images.githubusercontent.com/23138465/100709176-eccabb00-33ad-11eb-9e91-e729298e7b9a.png)\r\n\r\nThis does load only the given baseDesignerType:\r\n![image](https://user-images.githubusercontent.com/23138465/100709211-fb18d700-33ad-11eb-9f79-ee030b59f06e.png)\r\n\r\n**Expected behavior:**\r\nThe given designerType should be used and not the baseDesignerType (like in .NET Framework) to use the extended Designer for this control.\r\n\r\n**Minimal repro:**\r\n1. Create a new project solution.\r\n2. Create two new Windows Forms projects (targeting .NET 5).\r\n3. In the second project create a custom control (or UserControl, that doesn't matter).\r\n4. Create a designer, put in some custom codes, and reference it like in the screenshots above.\r\n5. Compile the project.\r\n6. Reference the project to the first project.\r\n7. Create a new Windows Form and add your custom control from the Toolbox.\r\n8. You can now see the behavior ...\r\n\r\n**Notes**\r\n\r\nI am porting all my custom control libraries with hundreds of custom user controls and components to .Net 5 and all of them did work in .Net framework 4.8. And of all controls the designer attribute gets ignored or behaves like described above.\r\n\r\nPlease give me a feedback if this is a bug and if there is a workaround or what I can do to get my custom designer working again. Thanks!","Url":"https://github.com/dotnet/winforms/issues/4304","RelatedDescription":"Open issue \"Windows Forms Designer don't use given designerType in DesignerAttribute\" (#4304)"},{"Id":"753287344","IsPullRequest":true,"CreatedAt":"2020-11-30T22:00:43","Actor":"SergeySmirnov-Akvelon","Number":"4300","RawContent":null,"Title":"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test","State":"closed","Body":"Closes #3856 \r\n\r\n## Proposed changes\r\n- Removed ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4300)","Url":"https://github.com/dotnet/winforms/pull/4300","RelatedDescription":"Closed or merged PR \"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\" (#4300)"},{"Id":"753232919","IsPullRequest":false,"CreatedAt":"2020-11-30T07:37:00","Actor":"Zheng-Li01","Number":"4299","RawContent":null,"Title":"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool","State":"open","Body":"* More info:\r\n1. This is not a regression issue, which can reproduce on .NET 6.0, 5.0, 3.1 and Framework project.\r\n2. The issue can' t reproduce on ListBox control.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20574.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n Yes \r\n\r\n**Minimal repro:**\r\n1. Opened the attached core project.[CoreProjectTesting1.zip](https://github.com/dotnet/winforms/files/5614381/CoreProjectTesting1.zip)\r\n2. Build and run it.\r\n3. Open the Accessibility Insights tool, then focus on the list of the checkedListBox control.\r\n\r\n**Expected behavior:**\r\nNo errors pops ip.\r\n\r\n**Actual behavior:**\r\nAn error pops up in the Accessibility Insights tool that \"Focusable sibling elements must not have the same Name and LocalizedControlType\".\r\n![CoreNewIssue](https://user-images.githubusercontent.com/38325459/100580934-c95a2e80-3321-11eb-86b6-b02d722ad909.gif)","Url":"https://github.com/dotnet/winforms/issues/4299","RelatedDescription":"Open issue \"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool\" (#4299)"},{"Id":"752957841","IsPullRequest":false,"CreatedAt":"2020-11-29T16:50:56","Actor":"ghost","Number":"4295","RawContent":null,"Title":"SplitContainer bar can't be moved in win forms designer","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nA SplitContainer has a movable bar, but in win forms designer it can't be moved.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.splitcontainer?view=net-5.0\r\n\r\n\r\n**Expected behavior:**\r\n\r\nA movable bar\r\n","Url":"https://github.com/dotnet/winforms/issues/4295","RelatedDescription":"Open issue \"SplitContainer bar can't be moved in win forms designer\" (#4295)"},{"Id":"752947386","IsPullRequest":false,"CreatedAt":"2020-11-29T16:01:02","Actor":"ghost","Number":"4294","RawContent":null,"Title":"ToolStripStatusLabel not displaying '&' chars","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIf you assign a string that contains one or more '&' chars to a ToolStripStatusLabel, the string is displayed WITHOUT any '&' chars.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nFor example: \r\n\r\ntoolStripStatusLabel.Text = \"test&\";\r\n\r\nIt should display \"test&\" but instead it's displaying \"test\"\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4294","RelatedDescription":"Open issue \"ToolStripStatusLabel not displaying '&' chars\" (#4294)"},{"Id":"753178147","IsPullRequest":false,"CreatedAt":"2020-11-23T20:11:53","Actor":"Possibility454","Number":"4298","RawContent":null,"Title":"error BC30456: 'Form1' is not a member of 'WinFormsApp'","State":"open","Body":"# Issue Title\r\n\r\nWhen changing the projects startup object to a form that isnt Form1, you get this error:\r\nerror BC30456: 'Form1' is not a member of 'WinFormsApp'\r\n\r\n# General\r\n\r\nCreate a project, such as VB WinForms Application with .Net 5. Rename the default Form1 to something else such as FormMain. Change the startup object to FormMain. Try running the application, you get the error. The auto-generated code keeps trying to use Form1 even though it no longer exists in the application.\r\n![Net 5 0 error](https://user-images.githubusercontent.com/16438153/100010362-c5fcfb00-2d95-11eb-8d6a-90ade9deec2a.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4298","RelatedDescription":"Open issue \"error BC30456: 'Form1' is not a member of 'WinFormsApp'\" (#4298)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-06T05:30:49.069598Z","RunDurationInMilliseconds":758}