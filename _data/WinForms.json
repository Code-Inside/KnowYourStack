{"Data":{"GitHub":{"Issues":[{"Id":"745285981","IsPullRequest":true,"CreatedAt":"2020-11-18T03:23:33","Actor":"dotnet-maestro[bot]","Number":"4248","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201117.12\r\n- **Date Produced**: 11/18/2020 2:36 AM\r\n- **Commit**: 06330b8839f8409f20625473ae59b84ce3e68f58\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bed28f3...06330b8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4248)","Url":"https://github.com/dotnet/winforms/pull/4248","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4248)"},{"Id":"745029123","IsPullRequest":true,"CreatedAt":"2020-11-17T20:30:04","Actor":"mmitche","Number":"4247","RawContent":null,"Title":"[release/5.0] Fixup 5.0.0 shas to be RTM","State":"closed","Body":"These got updated to a newer build before branding was updated.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4247)","Url":"https://github.com/dotnet/winforms/pull/4247","RelatedDescription":"Closed or merged PR \"[release/5.0] Fixup 5.0.0 shas to be RTM\" (#4247)"},{"Id":"744557176","IsPullRequest":false,"CreatedAt":"2020-11-17T20:07:14","Actor":"SergeySmirnov-Akvelon","Number":"4243","RawContent":null,"Title":"Narrator does not announce that the row has been added to the DataGridView","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc.2.20479.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Minimal repro:**\r\n\r\n1. Create the application with a DataGridView\r\n2. Run the application.\r\n3. Start editing the last row (row to add a new row)\r\n\r\n![Issue-4243](https://user-images.githubusercontent.com/23376742/99370940-5c7d7800-28cf-11eb-95e2-d0bc7b927607.gif)\r\n\r\n\r\n**Actual behavior:**\r\nNarrator does not announce that the row has been added.\r\n\r\n**Expected behavior:**\r\nNarrator should announce that the row has been added.","Url":"https://github.com/dotnet/winforms/issues/4243","RelatedDescription":"Closed issue \"Narrator does not announce that the row has been added to the DataGridView\" (#4243)"},{"Id":"743740747","IsPullRequest":true,"CreatedAt":"2020-11-17T20:07:14","Actor":"SergeySmirnov-Akvelon","Number":"4237","RawContent":null,"Title":"Fix the issue with announcing that a new row was added to the DataGridView","State":"closed","Body":"Fixes #4243\r\n\r\n## Proposed changes\r\n- Added the \"RaiseAutomationNotification\" method to announce that a new row was added to the DataGridView\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- Narrator will start to announce that a row has been added to the DataGridView\r\n![Issue-4237-dotnet](https://user-images.githubusercontent.com/23376742/99248318-50cf7a00-2819-11eb-8723-06ac2439da3e.gif)\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n## Note\r\nAlternatively, we can add the following changes to the application code (for example: [TestApplication.zip](https://github.com/dotnet/winforms/files/5545955/TestApplication.zip)):\r\n```\r\n{\r\n    ....\r\n    this.dataGridView1.UserAddedRow += DataGridView1_UserAddedRow;\r\n    ....\r\n}\r\n\r\nprivate void DataGridView1_UserAddedRow(object sender, DataGridViewRowEventArgs e)\r\n{\r\n    (sender as DataGridView).AccessibilityObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind.ItemAdded,\r\n        System.Windows.Forms.Automation.AutomationNotificationProcessing.ImportantMostRecent, $\"Row {e.Row.Index} is added\");\r\n}\r\n````\r\nIn this case, Narrator will work as well.\r\n![Issue-4237-testapplication](https://user-images.githubusercontent.com/23376742/99248361-5dec6900-2819-11eb-916a-21fa6f742baa.gif)\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4237)","Url":"https://github.com/dotnet/winforms/pull/4237","RelatedDescription":"Closed or merged PR \"Fix the issue with announcing that a new row was added to the DataGridView\" (#4237)"},{"Id":"744716793","IsPullRequest":true,"CreatedAt":"2020-11-17T13:01:15","Actor":"dotnet-maestro[bot]","Number":"4245","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201113.2\r\n- **Date Produced**: 11/13/2020 6:11 PM\r\n- **Commit**: 3fea3a1b584e3ddd9145d80a0cfb51e3e658c464\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20563.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20563.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20563.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20563.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20563.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e65d307...3fea3a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4245)","Url":"https://github.com/dotnet/winforms/pull/4245","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#4245)"},{"Id":"744569023","IsPullRequest":false,"CreatedAt":"2020-11-17T09:35:15","Actor":"Zheng-Li01","Number":"4244","RawContent":null,"Title":"An error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1","State":"open","Body":"* More info\r\n1. The issue can't reproduce without installing the latest .NET SDK 6.0. such as retarget the Target framework from 5.0 to 3.1.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha1.20566.10 +16.9.0 Preview 2.0 [30716.228.main]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n1. Install the latest .NET SDK 6.0 from: https://github.com/dotnet/core-sdk.\r\n2. Launch VS, go to Tools>>Options>>Environment>>Preview Features tab, enable the \"Show all .NET Core templates in the New project dialog(requires restart)\" option in the right panel, then close VS.\r\n3. Create a .NET Core project targeting  .NET SDK 6.0.\r\n4.  Retarget the Target framework from 6.0 to 3.1in properties page.\r\n\r\n**Expected behavior:**\r\nRetarget the Target framework from 6.0 to 3.1 and Form1.cs[Design] page load successfully.\r\n\r\n**Actual behavior:** \r\nAn error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1.\r\n![ReproGIF](https://user-images.githubusercontent.com/38325459/99372350-fd355d00-28fa-11eb-95ec-c65f1acd5ec9.gif)\r\n![Exception](https://user-images.githubusercontent.com/38325459/99371842-65d00a00-28fa-11eb-8b2f-f7ca26e23578.PNG)","Url":"https://github.com/dotnet/winforms/issues/4244","RelatedDescription":"Open issue \"An error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1\" (#4244)"},{"Id":"744544199","IsPullRequest":false,"CreatedAt":"2020-11-17T09:00:51","Actor":"Marie-Shi","Number":"4242","RawContent":null,"Title":"[Inspect]Inspect is crashing when moving cursor inside the DataGridView that setting AllowUserToAddRows as false","State":"open","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20563.2 from master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More info:**\r\n1.\tThis is a regression issue, it can also **repro** on .Net Framework 4.8, cannot repro on .Net Framework 4.7.2. \r\n\r\n2.\tThis issue cannot repro when setting AllowUserToAddRows property of DataGridView as true.\r\n\r\n**Minimal repro:**\r\n1.\tExtract the ‘DataGridView_Inspect_crash.zip’ and open it in VS.\r\n[DataGridView_Inspect_crash.zip](https://github.com/dotnet/winforms/files/5552297/DataGridView_Inspect_crash.zip)\r\n\r\n2.\tBuild and run this application.\r\n3.\tStart Inspect and try to focus on the column header of DataGridView, observe the inspect behavior.\r\n\r\n**Actual behavior:**\r\nInspect is crashing when focus on the column header of DataGridView.\r\n![core](https://user-images.githubusercontent.com/45864017/99368341-fc4dfc80-28f5-11eb-9615-9db023a3e2b1.gif)\r\n\r\n**Expected behavior:**\r\nInspect cannot crash and works well when focus on the column header of DataGridView.\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4242","RelatedDescription":"Open issue \"[Inspect]Inspect is crashing when moving cursor inside the DataGridView that setting AllowUserToAddRows as false\" (#4242)"},{"Id":"744819735","IsPullRequest":false,"CreatedAt":"2020-11-17T08:47:08","Actor":"smourier","Number":"4246","RawContent":null,"Title":".NET Core 3.1 console apps with UseWindowsForms set to true in .csproj always fails since .NET 5.0","State":"open","Body":"### Description\r\n\r\nIf I create this simple .NET Core 3.1 Console project (on Windows, Visual Studio or not), it works fine:\r\n\t\r\nProject.csproj:\r\n\t\r\n\t<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t  <PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>netcoreapp3.1</TargetFramework>\r\n\t  </PropertyGroup>\r\n\r\n\t</Project>\r\n\r\nProgram.cs:\r\n\t\t\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t    Console.WriteLine(\"Hello World!\");\r\n\t    var key = Console.ReadKey(true);\r\n\t}\r\n\r\nNow, if I add this to the .csproj in the PropertyGroup Xml element:\r\n\r\n\t<UseWindowsForms>true</UseWindowsForms>\r\n\t\r\nEveything compiles fine, but I get this error everytime on the ReadKey() call:\r\n\t\r\n\tSystem.InvalidOperationException: 'Cannot read keys when either application does not have a console or when console input has been redirected. Try Console.Read.'\r\n\r\n### Regression\r\n\r\nThis worked. I think it fails since I installed the brand new released .NET 5.0, through Visual Studio 2019 updates. (I though all this was side by side?).\r\n\r\n### Other information\r\n\r\nThe workaround is to call Win32's AllocConsole \"manually\" once at startup. But it requires a change and recompilation of all .NET core 3.1 console apps.","Url":"https://github.com/dotnet/winforms/issues/4246","RelatedDescription":"Open issue \".NET Core 3.1 console apps with UseWindowsForms set to true in .csproj always fails since .NET 5.0\" (#4246)"},{"Id":"744380625","IsPullRequest":true,"CreatedAt":"2020-11-17T03:34:05","Actor":"paul1956","Number":"4241","RawContent":null,"Title":"Fix OnInitialize fails to compile if VB Compile Options changes","State":"open","Body":"Fixes #4178\r\n\r\n## Proposed changes\r\nChange\r\n```\r\nDim eventArgs = New ApplyHighDpiModeEventArgs(\r\n```\r\nto\r\n```\r\nDim eventArgs As New ApplyHighDpiModeEventArgs(\r\n```\r\n## Customer Impact\r\nCustomers who use Option Explicit On will fail using \"=\" but with \"As\" it will work no matter what setting are used.\r\n\r\n## Regression? \r\n\r\n- Yes this file does not exist before Core 5.0\r\n\r\n## Risk\r\n\r\nnone, this is a valid alternative syntax\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nThis code is already tested but Option Explicit On is not set in tests.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20278.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\nVB with Option Explicit On\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4241)","Url":"https://github.com/dotnet/winforms/pull/4241","RelatedDescription":"Open PR \"Fix OnInitialize fails to compile if VB Compile Options changes\" (#4241)"},{"Id":"744299312","IsPullRequest":true,"CreatedAt":"2020-11-17T00:45:30","Actor":"dotnet-maestro[bot]","Number":"4240","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201116.8\r\n- **Date Produced**: 11/16/2020 11:42 PM\r\n- **Commit**: bed28f348ccd4bffbac619eb5c55c98836a3ef4b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20563.12 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20563.12 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bfc4994...bed28f3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4240)","Url":"https://github.com/dotnet/winforms/pull/4240","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4240)"},{"Id":"743933519","IsPullRequest":false,"CreatedAt":"2020-11-16T15:33:45","Actor":"oudi","Number":"4239","RawContent":null,"Title":"Value cannot be null. (Parameter 'rootComponent') when use IRootDesigner","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5 updated with VS2019 (Version 16.8.1) community build.\r\nnet5.0-windows\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen I create the IRootDesigner myself component, open the deisnger of the component in VS 2019, it shows the error below.\r\n\r\n```\r\nValue cannot be null.  (Parameter 'rootComponent') \r\nCall Stack\r\nat Microsoft.VisualStudio.WinForms.Protocol.Endpoints.Sessions.InitializeRootComponentResponse..ctor(IComponent rootComponent, IComponent[] components, String[] componentNames)\r\nat WinFormsSurface.Handlers.Sessions.InitializeRootComponentHandler.HandleRequest(InitializeRootComponentRequest request)\r\nat WinFormsSurface.Requests.RequestHandler`2.WinFormsSurface.Requests.IRequestHandler.HandleRequest(Request request) \r\n```\r\n\r\nThen I create a sample from https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.irootdesigner?view=net-5.0 and open the deisgner of `RootDesignedComponent ` it shows the same error!\r\n\r\n![20201116233302](https://user-images.githubusercontent.com/2518192/99273544-248d1b00-2864-11eb-8b84-73601bd23513.png)\r\n\r\nThe proejct use net5.0-windows as TargetFramework. and the Form1 inherit System.Windows.Forms.Form works fine but not the component!\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0-windows</TargetFramework>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/winforms/issues/4239","RelatedDescription":"Open issue \"Value cannot be null. (Parameter 'rootComponent') when use IRootDesigner\" (#4239)"},{"Id":"743874987","IsPullRequest":false,"CreatedAt":"2020-11-16T14:21:38","Actor":"ds1709","Number":"4238","RawContent":null,"Title":"Resize grip is missing in PropertyGrid DropDown editor after update to net5.0-windows","State":"open","Body":"* .NET Core Version: \r\n.Net 5 (net5.0-windows)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nI have simple drop-down editor `IsDropDownResizable => true` and `GetEditStyle => UITypeEditorEditStyle.DropDown`. For `net472` or `netcoreapp3.1` there's resize grip under drop-down editor. After update to `net5.0-windows` resize grip is missing.\r\n\r\n**Expected behavior:**\r\nResize grip is displayed under editor control.\r\n\r\n**Minimal repro:**\r\n```csharp\r\n    public partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            propertyGrid1.SelectedObject = new Foo(); // propertyGrid1 added via designer\r\n        }\r\n    }\r\n```\r\n```csharp\r\n    public sealed class Foo\r\n    {\r\n        [Editor(typeof(FooBarEditor), typeof(UITypeEditor))]\r\n        public string Bar { get; set; }\r\n    }\r\n```\r\n```csharp\r\n    public sealed class FooBarEditor : UITypeEditor\r\n    {\r\n        public override bool IsDropDownResizable => true;\r\n\r\n        public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context)\r\n            => UITypeEditorEditStyle.DropDown;\r\n\r\n        public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value)\r\n        {\r\n            ((IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService)))\r\n                .DropDownControl(new Panel { BackColor = Color.Yellow });\r\n\r\n            return value;\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/winforms/issues/4238","RelatedDescription":"Open issue \"Resize grip is missing in PropertyGrid DropDown editor after update to net5.0-windows\" (#4238)"},{"Id":"743048093","IsPullRequest":true,"CreatedAt":"2020-11-14T18:27:55","Actor":"dotnet-maestro[bot]","Number":"4236","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201113.12\r\n- **Date Produced**: 11/14/2020 4:49 PM\r\n- **Commit**: bfc49945c0bedeffe01bb5d6f3c217dad207d0d8\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20563.5 to 5.0.0-rtm.20563.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20563.5 to 5.0.0-rtm.20563.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/56b65e0...bfc4994\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4236)","Url":"https://github.com/dotnet/winforms/pull/4236","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4236)"},{"Id":"742328539","IsPullRequest":false,"CreatedAt":"2020-11-14T11:11:34","Actor":"Zinoh","Number":"4227","RawContent":null,"Title":"Scrollwheel in .NET 5 Designer causes Visual Studio to freeze","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version:  5.0.100\r\n* Visual Studio 16.9.0 Preview 1.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?:  No\r\n<!-- Yes / No -->\r\n\r\nUsing the mouse scroll-wheel in the WinForms designer for .NET 5 causes Visual Studio to freeze\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n.NET 5 New Project\r\n![net5-designer-scrollcrash](https://user-images.githubusercontent.com/18477601/99059871-29ed1b80-256d-11eb-960e-4a436569ff8f.gif)\r\n\r\n.NET Framework New Project\r\n![framework-designer-scroll](https://user-images.githubusercontent.com/18477601/99059921-3d988200-256d-11eb-9ce1-a6a63bdd8771.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4227","RelatedDescription":"Closed issue \"Scrollwheel in .NET 5 Designer causes Visual Studio to freeze\" (#4227)"},{"Id":"742975502","IsPullRequest":true,"CreatedAt":"2020-11-14T10:14:32","Actor":"gpetrou","Number":"4235","RawContent":null,"Title":"Enable nullability in some Event Args","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some Event Args.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4235)","Url":"https://github.com/dotnet/winforms/pull/4235","RelatedDescription":"Open PR \"Enable nullability in some Event Args\" (#4235)"},{"Id":"742971513","IsPullRequest":true,"CreatedAt":"2020-11-14T09:54:09","Actor":"gpetrou","Number":"4234","RawContent":null,"Title":"Enable nullability in some Event Handlers","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some Event Handlers.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4234)","Url":"https://github.com/dotnet/winforms/pull/4234","RelatedDescription":"Open PR \"Enable nullability in some Event Handlers\" (#4234)"},{"Id":"742968624","IsPullRequest":true,"CreatedAt":"2020-11-14T09:31:47","Actor":"gpetrou","Number":"4233","RawContent":null,"Title":"Use 'is not null' in System.Windows.Forms.Primitives","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nContributes to https://github.com/dotnet/winforms/issues/3459\r\n\r\n## Proposed changes\r\n\r\n- Use 'is not null' in System.Windows.Forms.Primitives.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4233)","Url":"https://github.com/dotnet/winforms/pull/4233","RelatedDescription":"Open PR \"Use 'is not null' in System.Windows.Forms.Primitives\" (#4233)"},{"Id":"742968009","IsPullRequest":true,"CreatedAt":"2020-11-14T09:27:15","Actor":"gpetrou","Number":"4232","RawContent":null,"Title":"Add Save/Load test for ToolStripSettingsManager","State":"open","Body":"## Proposed changes\r\n\r\n- Add Save/Load test for ToolStripSettingsManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4232)","Url":"https://github.com/dotnet/winforms/pull/4232","RelatedDescription":"Open PR \"Add Save/Load test for ToolStripSettingsManager\" (#4232)"},{"Id":"742729407","IsPullRequest":true,"CreatedAt":"2020-11-13T19:49:52","Actor":"dotnet-maestro[bot]","Number":"4231","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201113.5\r\n- **Date Produced**: 11/13/2020 6:21 PM\r\n- **Commit**: 56b65e0f66bdf66ad011b94cc0e27d9f714c5721\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20529.3 to 5.0.0-rtm.20563.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20529.3 to 5.0.0-rtm.20563.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/7ef6d50...56b65e0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4231)","Url":"https://github.com/dotnet/winforms/pull/4231","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4231)"},{"Id":"742433036","IsPullRequest":true,"CreatedAt":"2020-11-13T13:21:06","Actor":"dotnet-maestro[bot]","Number":"4229","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201111.5\r\n- **Date Produced**: 11/12/2020 12:48 AM\r\n- **Commit**: e65d307045c183af6e48b087571f6b7a05e39f01\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20552.5 to 6.0.0-beta.20561.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20552.5 to 6.0.0-beta.20561.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20552.5 to 6.0.0-beta.20561.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20552.5 to 6.0.0-beta.20561.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20552.5 to 6.0.0-beta.20561.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/72b28b7...e65d307\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 5.0.100\r\n  - Updates tools.dotnet to 5.0.100\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4229)","Url":"https://github.com/dotnet/winforms/pull/4229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4229)"},{"Id":"742439228","IsPullRequest":true,"CreatedAt":"2020-11-13T13:11:29","Actor":"dotnet-maestro[bot]","Number":"4230","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201117.3\r\n- **Date Produced**: 11/17/2020 11:46 AM\r\n- **Commit**: f6bfec0513254378b11539c6bf8f1ab4852d7847\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20567.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f56a56f...f6bfec0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4230)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4230","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#4230)"},{"Id":"742351330","IsPullRequest":false,"CreatedAt":"2020-11-13T10:39:02","Actor":"SergeySmirnov-Akvelon","Number":"4228","RawContent":null,"Title":"Exception appears when Narrator is active and user tries to add row after removing of another row.","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.2.20479.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n\r\n1. Create the application with a DataGridView\r\n2. Add a several rows to the DataGridView.\r\n3. Or just use the attached project ([4228.zip](https://github.com/dotnet/winforms/files/5536419/4228.zip))\r\n4. Run the application.\r\n5. Start editing the last row (row to add a new row)\r\n6. Delete the last row with data\r\n7. Start editing the last row (row to add a new row)\r\n\r\n![Issue-4228](https://user-images.githubusercontent.com/23376742/99064105-89234e00-25b6-11eb-9cfe-32510b3e7604.gif)\r\n\r\n\r\n**Actual behavior:**\r\nThe error is displayed.\r\n```\r\nSystem.Windows.Forms.dll!System.Windows.Forms.AccessibleObject.Interop.UiaCore.IRawElementProviderFragment.FragmentRoot.get() Line 657\tC#\r\n[External Code]\t\r\nSystem.Windows.Forms.dll!System.Windows.Forms.Application.ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(System.UIntPtr dwComponentID, Interop.Mso.msoloop uReason, void* pvLoopData) Line 345\tC#\r\nSystem.Windows.Forms.dll!System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Interop.Mso.msoloop reason, System.Windows.Forms.ApplicationContext context) Line 1111\tC#\r\nSystem.Windows.Forms.dll!System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Interop.Mso.msoloop reason, System.Windows.Forms.ApplicationContext context) Line 975\tC#\r\nSystem.Windows.Forms.dll!System.Windows.Forms.Application.Run(System.Windows.Forms.Form mainForm) Line 1198\tC#\r\nWindowsFormsApp25.dll!WindowsFormsApp25.Program.Main() Line 20\tC#\r\n```\r\n\r\n**Expected behavior:**\r\nThe error should not be displayed.","Url":"https://github.com/dotnet/winforms/issues/4228","RelatedDescription":"Open issue \"Exception appears when Narrator is active and user tries to add row after removing of another row.\" (#4228)"},{"Id":"742248002","IsPullRequest":false,"CreatedAt":"2020-11-13T08:07:48","Actor":"ShreyasZare","Number":"4226","RawContent":null,"Title":"\"Value cannot be null. Parameter name: instance\" in VS2019 .NET WinForms App","State":"open","Body":"I am seeing the following error when opening forms editor in any new Windows Forms App (.NET) project is latest updated VS2019 (Version 16.8.1) community build.\r\n\r\n![image](https://user-images.githubusercontent.com/10008172/99044033-21203800-25b5-11eb-8e65-1ef0334b4de0.png)\r\n\r\n* .NET Core Version: \r\n.NET 5 updated with VS2019 (Version 16.8.1) community build.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo. Windows Forms App (.NET Framework) works without issues.\r\n\r\n**Problem description:**\r\nForm editor fails to open with an error for Windows Forms App (.NET) projects.\r\n\r\n**Minimal repro:**\r\nI am able to reproduce this issue by creating a new Windows Forms App (.NET) project. I get the same error when I add another winform into the project and try to open the form.","Url":"https://github.com/dotnet/winforms/issues/4226","RelatedDescription":"Open issue \"\"Value cannot be null. Parameter name: instance\" in VS2019 .NET WinForms App\" (#4226)"},{"Id":"742019325","IsPullRequest":true,"CreatedAt":"2020-11-13T04:52:16","Actor":"GrabYourPitchforks","Number":"4225","RawContent":null,"Title":"Change source comment links from http to https","State":"closed","Body":"This changes some links in our markdown files, source comments, and user-visible obsoletion messages from _http_ to _https_. I validated that all links I changed were still correct, and where the contents had moved (thanks MSDN!) I updated the link to point to the new location. In cases where the page was removed with no replacement, I removed the link entirely.\r\n\r\nThis PR __does not__ change URLs in license files (whose contents we can't change) or unit test code.\r\n\r\nI didn't inspect existing https links for validity.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4225)","Url":"https://github.com/dotnet/winforms/pull/4225","RelatedDescription":"Closed or merged PR \"Change source comment links from http to https\" (#4225)"},{"Id":"741777022","IsPullRequest":false,"CreatedAt":"2020-11-12T17:13:32","Actor":"vladimir-krestov","Number":"4224","RawContent":null,"Title":"Incorrect MonthCalendar Accessibility tree at an increased size","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\nBased on #3019\r\n\r\n* .NET Core Version: 6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes (works even worse)\r\n\r\n**Problem description:**\r\n- If a MonthCalendar has a big size, it has several months (years, centuries, depending on a mode) but Inspect see only a first part of the MonthCalendar (e.g. a first month). The tool doesn't see other parts of the MonthCalendar. Narrator can't navigate and announce these parts too.\r\n![image](https://user-images.githubusercontent.com/49272759/98961629-d354f280-2516-11eb-90e9-3a185d8afb02.png)\r\n\r\n\r\n**Expected behavior:**\r\n- .NET MonthCalendar should have a correct accessibility tree, it should work like a native MonthCalendar: Accessibility tools (Narrator, NVDA, Inspect) can see and announce MonthCalendar items (buttons, days, months, years, etc.) when it is at an increased size.\r\n![image](https://user-images.githubusercontent.com/49272759/98967169-3d709600-251d-11eb-9ff6-48e5d26d15ad.png)\r\n\r\n\r\n**Minimal repro:**\r\n- Create a .NET 6.0 app\r\n- Add a MonthCalendar in the app\r\n- Set a big size for the MonthCalendar (e.g. Size(400,400))\r\n- Run the app and check its accessibility tree using Inspect\r\n","Url":"https://github.com/dotnet/winforms/issues/4224","RelatedDescription":"Open issue \"Incorrect MonthCalendar Accessibility tree at an increased size\" (#4224)"},{"Id":"741584759","IsPullRequest":true,"CreatedAt":"2020-11-12T13:36:02","Actor":"dotnet-maestro[bot]","Number":"4223","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201111.11\r\n- **Date Produced**: 11/12/2020 1:31 AM\r\n- **Commit**: f56a56f90ff9124c85e4d889faeeca0824d2d437\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20557.2 to 6.0.0-alpha.1.20561.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6cfef20...f56a56f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4223)","Url":"https://github.com/dotnet/winforms/pull/4223","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4223)"},{"Id":"741329913","IsPullRequest":true,"CreatedAt":"2020-11-12T06:47:47","Actor":"RussKie","Number":"4222","RawContent":null,"Title":"Fix `ListView` no longer displays images (servicing)","State":"open","Body":"(cherry picked from commit d0608e72a356ad991f9c9d12518e29b43a1fb4f0)\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4169\r\n\r\n\r\n## Proposed changes\r\n\r\nChanges in `ImageList` ownership model in #3601 means that very are now two  instances of imagelists - one instance is tracked by Windows Forms (i.e. managed) side, and another one tracked by the underlying Win32 (unmanaged) side. This was done due to an observed ownership disconnect between the managed and unmanaged code, that led to situations where the unmanaged code would effectively destroy and instance of an imagelist, which the managed code was oblivious to.\r\n\r\nHowever with the above change changes to images in an imagelist on the managed side, i.e. a user adding or replacing an image in the imagelist, would not be reflected in the imagelist on the unmanaged side, and thus would not be reflected in the UI (which is drawn by the Win32).\r\n\r\nThe fix reuses the established infrastructure that notifies the managed imagelist implementation of changes to the images collection, and once a notification of a chance is received, the unmanaged imagelist is re-created, thus ensuring the UI has all the correct images to display.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A control that references an `ImageList` that gets its images dynamically modified will render the images correctly.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minor\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4222)","Url":"https://github.com/dotnet/winforms/pull/4222","RelatedDescription":"Open PR \"Fix `ListView` no longer displays images (servicing)\" (#4222)"},{"Id":"741302081","IsPullRequest":true,"CreatedAt":"2020-11-12T06:42:04","Actor":"RussKie","Number":"4221","RawContent":null,"Title":"Enable visual styles (#4197)","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4221)","Url":"https://github.com/dotnet/winforms/pull/4221","RelatedDescription":"Closed or merged PR \"Enable visual styles (#4197)\" (#4221)"},{"Id":"741265343","IsPullRequest":true,"CreatedAt":"2020-11-12T04:20:16","Actor":"RussKie","Number":"4220","RawContent":null,"Title":"Narrator and Inspect become unresponsive inspecting `Combobox` control (servicing)","State":"open","Body":"\r\n(cherry picked from commit 2195c2c5687f695b1cdbf51db57af11eabe292d0)\r\n\r\n\r\nFixes #3452\r\n\r\n\r\n## Proposed changes\r\nIssue is reproduced due to incorrect implementation of the `ComboBoxAccessibleObject.IRawElementProviderHwndOverride` method. The presence of [`ComImport` attribute](https://github.com/dotnet/winforms/commit/423b2bc5726b4109741f189e34e5f37f90140d01) leads to the use of `ComboBoxAccessibleObject.IRawElementProviderHwndOverride`, which causes the issue. As fix for it, [we removed `ComImport`](https://github.com/dotnet/winforms/pull/3524) and stopped to using it.\r\n\r\n\r\nHowever the issue is not with `ComImport` but the override of `ComboBoxAccessibleObject.IRawElementProviderHwndOverride` method.\r\n\r\n\r\n## Customer Impact\r\n- Customers will be able to use accessibility tools for forms that contain `ComboBox` controls.\r\n\r\n## Regression? \r\n- Yes\r\n\r\n## Risk\r\n- Minimal \r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- CTI \r\n- Manually\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect\r\n- Narrator\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4220)","Url":"https://github.com/dotnet/winforms/pull/4220","RelatedDescription":"Open PR \"Narrator and Inspect become unresponsive inspecting `Combobox` control (servicing)\" (#4220)"},{"Id":"741181798","IsPullRequest":false,"CreatedAt":"2020-11-12T00:54:48","Actor":"Wildcatii","Number":"4219","RawContent":null,"Title":"Two Bug of NET5 WinForm Designer","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\n.NET Framework is normal.\r\n**Problem description:**\r\n1.Set image of button or label with designer cause NullException.\r\n2.Can't access MenuStrip's (or ContextMenuStrip's)  item from designer directly.\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/4219","RelatedDescription":"Closed issue \"Two Bug of NET5 WinForm Designer\" (#4219)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-18T05:30:53.989282Z","RunDurationInMilliseconds":644}