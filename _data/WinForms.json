{"Data":{"GitHub":{"Issues":[{"Id":"1091432786","IsPullRequest":false,"CreatedAt":"2021-12-31T14:59:35","Actor":"randydejesusmarte","Number":"6444","RawContent":null,"Title":"C# need a inputBox similar to visual basic ","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/issues/6444","RelatedDescription":"Closed issue \"C# need a inputBox similar to visual basic \" (#6444)"},{"Id":"1091565738","IsPullRequest":true,"CreatedAt":"2021-12-31T13:44:59","Actor":"dotnet-maestro[bot]","Number":"6450","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211230.8\r\n- **Date Produced**: December 31, 2021 10:36:26 AM UTC\r\n- **Commit**: 07ed923f571848a9b1ff3830dcce70230bdfad0e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/af9202a...07ed923\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6450)","Url":"https://github.com/dotnet/winforms/pull/6450","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6450)"},{"Id":"1091565474","IsPullRequest":true,"CreatedAt":"2021-12-31T13:08:42","Actor":"dotnet-maestro[bot]","Number":"6449","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211230.1\r\n- **Date Produced**: December 30, 2021 3:36:49 PM UTC\r\n- **Commit**: 12ba11c57391a796290dd8775c74f3df26cdbc6b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/88f5cdd...12ba11c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6449)","Url":"https://github.com/dotnet/winforms/pull/6449","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6449)"},{"Id":"1091492533","IsPullRequest":true,"CreatedAt":"2021-12-31T09:23:19","Actor":"gpetrou","Number":"6448","RawContent":null,"Title":"Enable nullability in KeysConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in KeysConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6448)","Url":"https://github.com/dotnet/winforms/pull/6448","RelatedDescription":"Open PR \"Enable nullability in KeysConverter\" (#6448)"},{"Id":"1091484278","IsPullRequest":true,"CreatedAt":"2021-12-31T09:01:04","Actor":"gpetrou","Number":"6447","RawContent":null,"Title":"Enable nullability in SelectionRange and SelectionRangeConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectionRange and SelectionRangeConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6447)","Url":"https://github.com/dotnet/winforms/pull/6447","RelatedDescription":"Open PR \"Enable nullability in SelectionRange and SelectionRangeConverter\" (#6447)"},{"Id":"1091475710","IsPullRequest":true,"CreatedAt":"2021-12-31T08:31:37","Actor":"gpetrou","Number":"6446","RawContent":null,"Title":"Enable nullability in ImageIndexConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ImageIndexConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6446)","Url":"https://github.com/dotnet/winforms/pull/6446","RelatedDescription":"Open PR \"Enable nullability in ImageIndexConverter\" (#6446)"},{"Id":"1091472360","IsPullRequest":true,"CreatedAt":"2021-12-31T08:21:58","Actor":"gpetrou","Number":"6445","RawContent":null,"Title":"Enable nullability in ListBindingConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ListBindingConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6445)","Url":"https://github.com/dotnet/winforms/pull/6445","RelatedDescription":"Open PR \"Enable nullability in ListBindingConverter\" (#6445)"},{"Id":"1091095844","IsPullRequest":true,"CreatedAt":"2021-12-30T13:49:44","Actor":"dotnet-maestro[bot]","Number":"6443","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211230.1\r\n- **Date Produced**: December 30, 2021 11:23:23 AM UTC\r\n- **Commit**: af9202a6daf91ba58d5d58bafbb6581aebb8a642\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/eff08ef...af9202a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6443)","Url":"https://github.com/dotnet/winforms/pull/6443","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6443)"},{"Id":"1091095464","IsPullRequest":true,"CreatedAt":"2021-12-30T13:48:53","Actor":"dotnet-maestro[bot]","Number":"6442","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211229.1\r\n- **Date Produced**: December 29, 2021 2:28:16 PM UTC\r\n- **Commit**: 88f5cddd49bfceca1761a93d16a0a3b5c012f521\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a248c67...88f5cdd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6442)","Url":"https://github.com/dotnet/winforms/pull/6442","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6442)"},{"Id":"1090743950","IsPullRequest":true,"CreatedAt":"2021-12-29T21:30:51","Actor":"dreddy-work","Number":"6441","RawContent":null,"Title":"Disable template localizer tool","State":"closed","Body":"Until the issue discussed here  https://github.com/dotnet/winforms/pull/6319#discussion_r773423442 resolved.\r\n\r\nrelated to #6319 \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6441)","Url":"https://github.com/dotnet/winforms/pull/6441","RelatedDescription":"Closed or merged PR \"Disable template localizer tool\" (#6441)"},{"Id":"1090510386","IsPullRequest":true,"CreatedAt":"2021-12-29T17:26:15","Actor":"dotnet-maestro[bot]","Number":"6438","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211228.3\r\n- **Date Produced**: December 29, 2021 12:57:16 AM UTC\r\n- **Commit**: eff08ef067fde28e56f19a5d95ca5aba51ac0a75\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bdc6ad7...eff08ef\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6438)","Url":"https://github.com/dotnet/winforms/pull/6438","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6438)"},{"Id":"1090551575","IsPullRequest":false,"CreatedAt":"2021-12-29T14:19:41","Actor":"tbambuch","Number":"6440","RawContent":null,"Title":"UserControls inside another UserControl are not scaled in PerMonitorV2 HDPI mode","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIf you place UserControl with AutoScaleMode = Inherit inside another UserControl with AutoScaleMode = Inherit, the control will not be scaled when moving the form to another screen with different dpi.\r\n\r\n\r\n**Expected behavior:**\r\nscale the control, including any child controls\r\n\r\n**Minimal repro:**\r\nSample project attached. My screen setup is 100% primary screen and 150% secondary screen.\r\nThe project consists of a single Form with AutoScaleMode = Dpi and a UserControl with AutoScaleMode = Inherit. Inside this UserControl is another UserControl with AutoScaleMode = Inherit, too\r\nApplication.SetHighDpiMode is called in Program.cs\r\nThe screenshot shows the form on a non-primary screen and a primary one. On the non-primary screen, only the outer UserControl is scaled, not the inner one\r\n\r\n![image](https://user-images.githubusercontent.com/3384955/147671362-08471a29-400a-4171-b852-d34013045fb2.png)\r\n\r\n[DpiTest2.zip](https://github.com/dotnet/winforms/files/7789237/DpiTest2.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6440","RelatedDescription":"Open issue \"UserControls inside another UserControl are not scaled in PerMonitorV2 HDPI mode\" (#6440)"},{"Id":"1090537950","IsPullRequest":false,"CreatedAt":"2021-12-29T13:57:16","Actor":"tbambuch","Number":"6439","RawContent":null,"Title":"Controls are scaled multiple times in PerMonitorV2 HDPI mode","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nContainerControls with Visible = false are scaled multiple times in the PerMonitorV2 mode if moved to the another screen and then made visible\r\n\r\n**Expected behavior:**\r\nscaling (Size, Location, Margins, Paddings) should be made only once\r\n\r\n**Minimal repro:**\r\nSample project attached. My screen setup is 100% primary screen and 150% secondary screen.\r\nThe project consists of a single Form with AutoScaleMode = Dpi and a UserControl with AutoScaleMode = Inherit\r\nApplication.SetHighDpiMode is called in Program.cs\r\nThere are 2 equal controls placed on the form, one has Visible set to false. There is a button which makes the control visible.\r\nIf you start on the primary (100%) screen, make the control visible and then move the form on a second screen, everything looks fine (the upper form on the screenshot)\r\nIf you first move the form on the second screen and then make the control visible, it gets scaled twice, resulting in wrong Location, Size and Padding (the bottom form on the screenshot)\r\n\r\n![image](https://user-images.githubusercontent.com/3384955/147668490-0c3978cf-1793-4acc-8199-235f6b8134a0.png)\r\n\r\n[DpiTest.zip](https://github.com/dotnet/winforms/files/7789107/DpiTest.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6439","RelatedDescription":"Open issue \"Controls are scaled multiple times in PerMonitorV2 HDPI mode\" (#6439)"},{"Id":"1090509900","IsPullRequest":true,"CreatedAt":"2021-12-29T13:49:06","Actor":"dotnet-maestro[bot]","Number":"6437","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211228.1\r\n- **Date Produced**: December 28, 2021 4:57:14 PM UTC\r\n- **Commit**: a248c67a80f8ec9d10872e88729de0d070f3d64e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/28ea474...a248c67\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6437)","Url":"https://github.com/dotnet/winforms/pull/6437","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6437)"},{"Id":"1090384627","IsPullRequest":true,"CreatedAt":"2021-12-29T09:26:52","Actor":"DmitryGorokhov","Number":"6436","RawContent":null,"Title":"Fixing empty value of DefaultAction of DateTimePicker control","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6317 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Overridden `DefaultAction` property of DateTimePicker AO to return `Expand` value if the control is collapsed. Otherwise, return `Collapse` if the control is expanded.\r\n- Overridden `DoDefaultAction` method to perform `Collapse()` or `Expand()` methods.\r\n- Added test case for it.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Receive the correct `DefaultAction` value of a dtp control and improve accessibility.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nProperty returns empty value.\r\n\r\n#### Collapsed\r\n\r\n![DTP_col_b](https://user-images.githubusercontent.com/58004471/147646575-d5bbcbf6-0310-4d5e-a665-8a18a0db627b.png)\r\n\r\n#### Expanded\r\n\r\n![DTP_exp_b](https://user-images.githubusercontent.com/58004471/147646610-9c1e9bec-0589-4d80-8fa6-232c1bea19de.png)\r\n\r\n### After\r\n\r\nReturns `Expand` or `Collapse` value.\r\n\r\n#### Collapsed\r\n\r\n![DTP_col](https://user-images.githubusercontent.com/58004471/147646729-1a41ffcd-fbe0-44d4-87f7-411438f76747.png)\r\n\r\n#### Expanded\r\n\r\n![DTP_exp](https://user-images.githubusercontent.com/58004471/147646741-da6eaf97-1482-4ef5-8a32-561770bd9e69.png)\r\n\r\n#### Accessibility Insights\r\n\r\nAlso has no additional errors in AI.\r\n\r\n![AI](https://user-images.githubusercontent.com/58004471/147646911-785658bd-19fe-4bdf-8b18-4f5b28701705.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit tests\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect\r\n- AI\r\n- Narrator\r\n \r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net version:   6.0.100\r\n- OS version: 10.0.19044\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6436)","Url":"https://github.com/dotnet/winforms/pull/6436","RelatedDescription":"Open PR \"Fixing empty value of DefaultAction of DateTimePicker control\" (#6436)"},{"Id":"1089885030","IsPullRequest":true,"CreatedAt":"2021-12-28T18:00:57","Actor":"dotnet-maestro[bot]","Number":"6434","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211227.1\r\n- **Date Produced**: December 27, 2021 5:25:53 PM UTC\r\n- **Commit**: 28ea474e02753fe23295f60e8792bc845b8b6e20\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21623.2 to 7.0.0-beta.21627.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1a66526...28ea474\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6434)","Url":"https://github.com/dotnet/winforms/pull/6434","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6434)"},{"Id":"1089725243","IsPullRequest":true,"CreatedAt":"2021-12-28T17:30:51","Actor":"Danil-Andrianov","Number":"6433","RawContent":null,"Title":"ControlTestBase: less sensitive point coordinates assessment","State":"closed","Body":"Stems from #6334\r\nReplaced direct point coordinates assessment to the small range of pixels\r\n## Proposed changes\r\n\r\n- Let occur small inaccuracies in the coordinates in the MoveMouseToControlAsync\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6433)","Url":"https://github.com/dotnet/winforms/pull/6433","RelatedDescription":"Closed or merged PR \"ControlTestBase: less sensitive point coordinates assessment\" (#6433)"},{"Id":"1089911371","IsPullRequest":true,"CreatedAt":"2021-12-28T13:53:07","Actor":"ArtemTatarinov","Number":"6435","RawContent":null,"Title":"Extracting test control items from resource files to code","State":"open","Body":"Fixes #6430\r\n\r\n## Proposed changes\r\n- Extracted control items for test forms at our internal test application from the resource files to the direct code initialization\r\n- Renamed some items so it would be easier to differ one item from another\r\n\r\n**Before the fix**\r\n![image](https://user-images.githubusercontent.com/87859299/147570617-be442e52-45f4-4327-a6e5-1d64e4ee73cd.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147570508-f144a3d8-f6e6-4794-b3c9-ce5738c3258b.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147570691-baf632da-34f8-45b9-859c-0e651f9fcd07.png)\r\n\r\n**After the fix**\r\n![image](https://user-images.githubusercontent.com/87859299/147573180-17a49d01-ede0-448b-95a4-000f9b0c9f4a.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147570881-de4c9276-c611-4b9a-ab64-1e038d43e955.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147570893-773834a4-c9be-48fb-8f6f-908b7e94607a.png)\r\n\r\n## Customer Impact\r\n- No\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual (see the screenshots above)\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n.NET SDK 7.0.0-alpha.1.21606.7\r\nMicrosoft Windows [Version 10.0.19043.1415]\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6435)","Url":"https://github.com/dotnet/winforms/pull/6435","RelatedDescription":"Open PR \"Extracting test control items from resource files to code\" (#6435)"},{"Id":"1089515664","IsPullRequest":true,"CreatedAt":"2021-12-27T23:12:41","Actor":"DmitryGorokhov","Number":"6432","RawContent":null,"Title":"Implementing support UIA Provider for TreeView control","State":"open","Body":"Implemented accessible objects for TreeView and TreeNode. Added needed automation events and unit tests.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3421\r\n\r\n\r\n## Proposed changes\r\n\r\n- Switched on `SupportsUiaProviders` property of `TreeView` class.\r\n- Implemented accessible objects for `TreeView` and `TreeNode` classes.\r\n- Added needed automation events and unit tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for `TreeView` control accessibility.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Inspect\r\n\r\n#### `TreeView` before and after\r\n\r\n![treeInspect](https://user-images.githubusercontent.com/58004471/147510526-ea1fd609-cb83-48c0-9a62-343d669e8d0b.png)\r\n\r\n#### Default `TreeNode` before and after\r\n\r\n![nodeInspect](https://user-images.githubusercontent.com/58004471/147510598-3d6c6aa4-d689-4096-8b42-76aaeadf2d60.png)\r\n\r\n#### Expanded `TreeNode` before and after\r\n\r\n![nodeExpandedInspect](https://user-images.githubusercontent.com/58004471/147510641-ed1a6b4e-2f89-49c4-a1b0-d4328163d19a.png)\r\n\r\n#### Leaf `TreeNode` before and after\r\n\r\n![nodeLeafInspect](https://user-images.githubusercontent.com/58004471/147510740-5338f9df-acaf-4a61-92c8-639661f2b5ba.png)\r\n\r\n#### CheckBox `TreeNode` before and after\r\n\r\n![NodeIsCheckBox](https://user-images.githubusercontent.com/58004471/147510784-e73d3152-cadc-404c-a436-1ab137356a67.png)\r\n\r\n#### Invisible `TreeNode` before and after\r\n\r\n![invisibleNode](https://user-images.githubusercontent.com/58004471/147510820-2732e09f-fec2-402e-8e5d-5c8f99c6a2ee.png)\r\n\r\n#### Editable `TreeNode` before and after\r\n\r\n![nodeEditable](https://user-images.githubusercontent.com/58004471/147510856-16c4a0eb-291d-4bfb-a2ae-c3b8650543a3.png)\r\n\r\n### Accessibility Insights\r\n\r\nThere is no specific errors. You can see errors on next image, but they are not about accessibility changes were created in this PR.\r\n\r\n![AI](https://user-images.githubusercontent.com/58004471/147511075-7519afab-29c3-4714-9b03-3533fe8da74c.png)\r\n\r\n### Narrator\r\n\r\n#### Expand and collapse default node before and after\r\n\r\n![NBExpandCollapse](https://user-images.githubusercontent.com/58004471/147511138-ec17d1dd-9f19-42a3-b44e-900dd1a8e038.png)\r\n\r\n#### Check and uncheck node before and after\r\n\r\n![NBCheckedBox](https://user-images.githubusercontent.com/58004471/147511169-b1ca4ecd-545f-443c-8dff-129982fea28f.png)\r\n\r\n#### Edit default node before and after\r\n\r\n![NBEdit](https://user-images.githubusercontent.com/58004471/147511183-ac62934d-29cb-4ab5-b32c-6f91e78e3f05.png)\r\n\r\n### `ScrollIntoView` method comparison\r\n\r\n#### `ScrollIntoView` method before\r\n\r\n![ScrollIntoViewBefore](https://user-images.githubusercontent.com/58004471/147511275-2caad097-acb4-46f0-8aa2-4b115a934890.gif)\r\n\r\n#### `ScrollIntoView` method after\r\n\r\n![ScrollIntoViewAfter](https://user-images.githubusercontent.com/58004471/147511279-557713bb-3539-4801-b81a-dc80e1215ed3.gif)\r\n\r\nThis realization sets calling node as `TopNode`  of `TreeView` if the node is invisible. Looks like it works the same. \r\n\r\n### Focus on `TreeView` issue\r\n\r\nBy default, when we focus on a `TreeView` control, Inspect and Narrator highlight the `SelectedNode` of\r\n this control. As I know it takes raise an events for a selected node accessible object to notify it was focused. But calling AccessibilityObject forces creation the object. It takes accessible object of the tree, so forces creating the object if it doesn't exist yet.\r\n To avoid force creation if this is not needed should use check `IsAccessibilityObjectCreated`. But I found next problem when I try to add this check. Highlight after focus doesn't work for the first time if the control has first `TabIndex` on form.  You can see this issue behavior below.\r\n \r\n #### Focus on the control with check `IsAccessibilityObjectCreated`\r\n \r\nIt works incorrect.\r\n \r\n\r\n![BrokenFocusOnTreeView](https://user-images.githubusercontent.com/58004471/147512386-b429de63-9bda-4498-bc64-5bd25076beaa.gif)\r\n\r\n #### Focus on the control without check `IsAccessibilityObjectCreated`\r\n\r\nIt works great, but not safety due to forcing the object creating.\r\n\r\n![FocusOnTreeView](https://user-images.githubusercontent.com/58004471/147512415-1f71ba67-4201-43e7-b7db-1c6381e94b05.gif)\r\n\r\nIt was not so easy for me to resolve it in the fix. So I skipped this problem and took implementation without the check. I guess this problem needs to be investigated and resolved in out of scope issue. \r\n \r\n ### Additional note\r\n\r\nI take it if node is check box it has `DefaultAction` equals `Check` or `Uncheck` but before the fix `DoDefaultAction` does nothing in this case. I configured this method, so it performs `Toggle` method of `TreeNodeAccessibleObject` in this case.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit testing\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect\r\n- Accessibility Insights\r\n- Narrator\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net version: 6.0.100\r\n- OS version: 10.0.19044\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6432)","Url":"https://github.com/dotnet/winforms/pull/6432","RelatedDescription":"Open PR \"Implementing support UIA Provider for TreeView control\" (#6432)"},{"Id":"1089444642","IsPullRequest":true,"CreatedAt":"2021-12-27T22:18:57","Actor":"gpetrou","Number":"6431","RawContent":null,"Title":"Enable nullability in DisplayInformation","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in DisplayInformation.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6431)","Url":"https://github.com/dotnet/winforms/pull/6431","RelatedDescription":"Closed or merged PR \"Enable nullability in DisplayInformation\" (#6431)"},{"Id":"1088823553","IsPullRequest":true,"CreatedAt":"2021-12-27T18:35:37","Actor":"gpetrou","Number":"6427","RawContent":null,"Title":"Uncomment IsHandleCreated asserts","State":"closed","Body":"## Proposed changes\r\n\r\n- Looks like the corresponding issue has been resolved.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6427)","Url":"https://github.com/dotnet/winforms/pull/6427","RelatedDescription":"Closed or merged PR \"Uncomment IsHandleCreated asserts\" (#6427)"},{"Id":"1088820922","IsPullRequest":true,"CreatedAt":"2021-12-27T18:27:13","Actor":"gpetrou","Number":"6424","RawContent":null,"Title":"Enable nullability in FormatEnumerator","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in FormatEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6424)","Url":"https://github.com/dotnet/winforms/pull/6424","RelatedDescription":"Closed or merged PR \"Enable nullability in FormatEnumerator\" (#6424)"},{"Id":"1088820276","IsPullRequest":true,"CreatedAt":"2021-12-27T18:25:39","Actor":"gpetrou","Number":"6423","RawContent":null,"Title":"Enable nullability in SelectedIndexEnumerator","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectedIndexEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6423)","Url":"https://github.com/dotnet/winforms/pull/6423","RelatedDescription":"Closed or merged PR \"Enable nullability in SelectedIndexEnumerator\" (#6423)"},{"Id":"1089102217","IsPullRequest":false,"CreatedAt":"2021-12-27T09:26:11","Actor":"ArtemTatarinov","Number":"6430","RawContent":null,"Title":"Extract test controls from resources to code","State":"open","Body":"Some items at some forms (`ListViewTest`, `TreeViewTest`) of our internal test application (`WinformsControlsTest`) are created from the resources:\r\n![image](https://user-images.githubusercontent.com/87859299/147456432-7b180c49-2108-4ab1-a48b-bdcf6e9192a6.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147456481-43c45c68-d152-4bb7-8133-1dc14c5ddfab.png)\r\n\r\nThese items are not visible at the Managed Resources Editor:\r\n![image](https://user-images.githubusercontent.com/87859299/147457029-afc2b4b6-cfbb-465d-b9f3-27dde6417798.png)\r\n\r\nWe should extract the creation of such items from the `resx`-files to the direct code initialization to make their properties readable, simplify their modification if needed, etc.","Url":"https://github.com/dotnet/winforms/issues/6430","RelatedDescription":"Open issue \"Extract test controls from resources to code\" (#6430)"},{"Id":"1089029633","IsPullRequest":true,"CreatedAt":"2021-12-27T07:23:38","Actor":"ArtemTatarinov","Number":"6429","RawContent":null,"Title":"Moving GetPropertyValue duplicate logic to the base class","State":"open","Body":"Fixes #6324\r\nContinues PR #5745\r\n\r\n## Proposed changes\r\n- Moved the duplicate logic at the `GetPropertyValue` method to the base `AccessibleObject` class from its descendants\r\n- Added unit tests for all cases of refactoring\r\n- The base `AccessibleObject` class doesn't call the virtual `IsPatternSupported` method for the `IsInvokePatternAvailablePropertyId` case, but uses the large switch at the `IsInvokePatternAvailable` property instead, so we need to expand the cases of that switch for the new roles.\r\n\r\nAlso, I found out some questionable properties that I'd like to discuss:\r\n1. The `false` value is always returned for all the `IsPasswordPropertyId` cases. Maybe we should move this property to the base class too?\r\n2. There are 4 entries of the `FrameworkIdPropertyId` property, the value of `NativeMethods.WinFormFrameworkId` is returned in all the cases. Could it be moved to the base class too?\r\n3. The `TopRowAccessibleObject` and `DataGridViewEditingPanelAccessibleObject` classes have the `HelpTextPropertyId` property case which returns `string.Empty`. Maybe we could delete it there, so the base class will return `Help ?? string.Empty`? By default `Help` is an empty string for both of these children classes.\r\n4. The `AccessKeyPropertyId` property returns the `string.Empty` value for many cases at the `AccessibleObject` descendants. There was a PR #5705 where returning of the `KeyboardShortcut` was added to the `ControlAccessibleObject` class. What if we add the returning of the `KeyboardShortcut ?? string.Empty` to the base `AccessibleObject`? If its descendant has the KeyboardShortcut set, then it will be returned, that seems logical.\r\n5. This one maybe is a bit tricky. For the `AutomationIdPropertyId` property 7 descendants of the `ControlAccessibleObject` class return the `Owner.Name` value, and 4 descendants of the `AccessibleObject` class return `AutomationId`. Maybe we should refactor them like that: base class will return `AutomationId` and `ControlAccessibleObject` will return `Owner.Name` at the overridden `GetPropertyValue` method?\r\n\r\n## Customer Impact\r\n- No\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual (tested selected properties of some controls with the Inspect tool)\r\n- Unit tests for all cases of refactoring\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n.NET SDK 7.0.0-alpha.1.21606.7\r\nMicrosoft Windows [Version 10.0.19043.1415]\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6429)","Url":"https://github.com/dotnet/winforms/pull/6429","RelatedDescription":"Open PR \"Moving GetPropertyValue duplicate logic to the base class\" (#6429)"},{"Id":"1088827834","IsPullRequest":true,"CreatedAt":"2021-12-26T19:07:24","Actor":"gpetrou","Number":"6428","RawContent":null,"Title":"Enable nullability in SendKeys","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in SendKeys.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6428)","Url":"https://github.com/dotnet/winforms/pull/6428","RelatedDescription":"Open PR \"Enable nullability in SendKeys\" (#6428)"},{"Id":"1088822456","IsPullRequest":true,"CreatedAt":"2021-12-26T18:28:50","Actor":"gpetrou","Number":"6426","RawContent":null,"Title":"Enable nullability in ProgressBarAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ProgressBarAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6426)","Url":"https://github.com/dotnet/winforms/pull/6426","RelatedDescription":"Open PR \"Enable nullability in ProgressBarAccessibleObject\" (#6426)"},{"Id":"1088821844","IsPullRequest":true,"CreatedAt":"2021-12-26T18:24:09","Actor":"gpetrou","Number":"6425","RawContent":null,"Title":"Enable nullability in DockingAttribute","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DockingAttribute.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6425)","Url":"https://github.com/dotnet/winforms/pull/6425","RelatedDescription":"Open PR \"Enable nullability in DockingAttribute\" (#6425)"},{"Id":"1088819621","IsPullRequest":true,"CreatedAt":"2021-12-26T18:08:35","Actor":"gpetrou","Number":"6422","RawContent":null,"Title":"Enable nullability in ToolStripPanelRenderEventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelRenderEventArgs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6422)","Url":"https://github.com/dotnet/winforms/pull/6422","RelatedDescription":"Open PR \"Enable nullability in ToolStripPanelRenderEventArgs\" (#6422)"},{"Id":"1088744821","IsPullRequest":false,"CreatedAt":"2021-12-26T10:41:32","Actor":"roland5572","Number":"6421","RawContent":null,"Title":"Setting ShowInTaskbar to false causes the form to close automatically (Abnormal exit).","State":"open","Body":"Setting ShowInTaskbar to false causes the form to close automatically (**Abnormal exit**).\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.form\r\n\r\nTest Code:\r\n.NET 6.0 (Version: 6.0.1)(This problem also appears in .net framework 4.8)\r\nWin10 system (21H2).\r\n\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\n\r\nnamespace FormShowInTaskbarTest\r\n{\r\n    internal static class Program\r\n    {\r\n        private static Form form1;\r\n        private static Form form2;\r\n\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n\r\n            form1 = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var button1 = new Button()\r\n            {\r\n                Text = \"Click here to open new Form.\",\r\n\r\n                Width = 200,\r\n                Height = 100,\r\n            };\r\n\r\n            button1.Click += Button1_Click;\r\n            form1.Controls.Add(button1);\r\n\r\n            Application.Run(form1);\r\n        }\r\n\r\n        private static void Button1_Click(object sender, EventArgs e)\r\n        {\r\n            form2 = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var button2 = new Button()\r\n            {\r\n                Text = \"Click here to test ShowInTaskbar.\",\r\n\r\n                Width = 200,\r\n                Height = 100,\r\n            };\r\n\r\n            button2.Click += Button2_Click;\r\n            form2.Controls.Add(button2);\r\n\r\n            form2.ShowDialog(form1);\r\n        }\r\n\r\n        private static void Button2_Click(object sender, EventArgs e)\r\n        {\r\n            form2.ShowInTaskbar = false;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSteps to reproduce:\r\n1. Run the appliction.\r\n2. Click the first button, the application will open a new Form.\r\n3. Click the first button in new form.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6421","RelatedDescription":"Open issue \"Setting ShowInTaskbar to false causes the form to close automatically (Abnormal exit).\" (#6421)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-01T05:30:33.4332364Z","RunDurationInMilliseconds":478}