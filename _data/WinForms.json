{"Data":{"GitHub":{"Issues":[{"Id":"1718794493","IsPullRequest":false,"CreatedAt":"2023-05-22T02:56:07","Actor":"MelonWang1","Number":"9156","RawContent":null,"Title":"The part of \"Today\" date in DateTimePicker is not highlight","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.5.23269.37\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, it also repro in .NET7.0 & 6.0 & 5.0 & 3.1.\r\n\r\n### Issue description\r\n\r\nAs you can see on the screenshot, the number '023' is not highlighted when hover over \"Today\":\r\n![88](https://github.com/dotnet/winforms/assets/94418985/c6c6fd1d-d2d9-4d08-9655-4c59cdc47884)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a winforms .net core project with a DataTimePicker control\r\n2. Build and run\r\n3. Expanded DataTimePicker control\r\n4. Mouse hover over “Today” and observe it\r\n\r\n**More info:**\r\n1. This issue also repro on .NET7.0, .NET6.0, .NET5.0, .NET3.1.\r\n2. This issue also repro on framework project.\r\n3. This issue also repro in MonthCalendar control.\r\n4. The initial feedback ticket is: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1822667","Url":"https://github.com/dotnet/winforms/issues/9156","RelatedDescription":"Open issue \"The part of \"Today\" date in DateTimePicker is not highlight\" (#9156)"},{"Id":"1718601556","IsPullRequest":false,"CreatedAt":"2023-05-21T18:44:50","Actor":"fitdev","Number":"9155","RawContent":null,"Title":"TypeLoadException on System.Windows.Forms.Control.SetAcceptDrops in DotNet 8 Preview 4 when Trimming","State":"open","Body":"### .NET version\r\n\r\n8.0.100-preview.4.23260.5\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo (Not applicable)\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, it works fine in DotNet 7.\r\n\r\n### Issue description\r\n\r\nDuring runtime, after I publish my app as a self-contained, trimmed (does not matter the mode) executable, I get the following error even before any form is shown:\r\n\r\n```\r\nSystem.TypeLoadException\r\n   at System.Windows.Forms.Control.SetAcceptDrops(Boolean)\r\n   at System.Windows.Forms.Control.OnHandleCreated(EventArgs)\r\n   at System.Windows.Forms.Control.WmCreate(Message&)\r\n   at System.Windows.Forms.Control.WndProc(Message&)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(Message&)\r\n   at System.Windows.Forms.ContainerControl.WndProc(Message&)\r\n   at System.Windows.Forms.Application.ParkingWindow.WndProc(Message&)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&)\r\n   at System.Windows.Forms.NativeWindow.Callback(HWND, WM, WPARAM, LPARAM)\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Mae a simple WinForms app with a User Control in it on the main form.\r\n2. Publish with trimming enabled.","Url":"https://github.com/dotnet/winforms/issues/9155","RelatedDescription":"Open issue \"TypeLoadException on System.Windows.Forms.Control.SetAcceptDrops in DotNet 8 Preview 4 when Trimming\" (#9155)"},{"Id":"1718324577","IsPullRequest":false,"CreatedAt":"2023-05-21T00:07:02","Actor":"prumseycsi","Number":"9154","RawContent":null,"Title":"VB FileLogTraceListerner creates Application.UserAppDataPath whether it's needed or not","State":"open","Body":"### .NET version\n\nAll versions\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nno\n\n### Issue description\n\nSince a reference to Application.UserAppDataPath creates its directory if needed, the initialization of _CustomLocation in FileLogTraceListener also does so, even if that is not the intended destination for the log file(s).  It would be better to move that initialization to the Get clause of the CustomLocation property.\n\n### Steps to reproduce\n\nAny creation of a FileLogTraceListener object in Visual Basic creates the directory.","Url":"https://github.com/dotnet/winforms/issues/9154","RelatedDescription":"Open issue \"VB FileLogTraceListerner creates Application.UserAppDataPath whether it's needed or not\" (#9154)"},{"Id":"1718151703","IsPullRequest":true,"CreatedAt":"2023-05-20T12:05:03","Actor":"dotnet-maestro[bot]","Number":"9153","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230520.7\r\n- **Date Produced**: May 21, 2023 6:57:57 AM UTC\r\n- **Commit**: 6fd40193b9e8b9c5028edf741f266ff01bc75636\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Management**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23268.14 to 8.0.0-preview.5.23270.7][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/2f49fcff6d...6fd40193b9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9153)\r\n","Url":"https://github.com/dotnet/winforms/pull/9153","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#9153)"},{"Id":"1718151219","IsPullRequest":true,"CreatedAt":"2023-05-20T12:03:31","Actor":"dotnet-maestro[bot]","Number":"9152","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230519.2\r\n- **Date Produced**: May 19, 2023 2:14:44 PM UTC\r\n- **Commit**: 792c346a52b2388152c2fad6f626b88ed8736d6f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23269.1 to 8.0.0-beta.23269.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/fb6291b40f...792c346a52\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9152)\r\n","Url":"https://github.com/dotnet/winforms/pull/9152","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#9152)"},{"Id":"1718125377","IsPullRequest":false,"CreatedAt":"2023-05-20T10:14:10","Actor":"kirsan31","Number":"9151","RawContent":null,"Title":"F1 (help) not working on control's properties","State":"open","Body":"### Environment\r\n\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.6.0\r\nVisualStudio.17.Release/17.6.0+33712.159\r\nMicrosoft .NET Framework\r\nVersion 4.8.09032\r\n\r\n### .NET version\r\n\r\n6.0, 7.0\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nYes in .Net framework designer\r\n\r\n### Issue description\r\n\r\nWhen you press F1 on any property in designer's propertygrid you must be redirected to appropriate msdn page. But currently designer trying to use proxy object for this case. For example `Form.Text` property:\r\nExpexted\r\n`https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.form.text?f1url=%3FappId%3DDev16IDEF1%26l%3DEN-US%26k%3Dk(System.Windows.Forms.Form.Text)%3Bk(System.Windows.Forms.Form)%3Bk(VS.Properties)%26rd%3Dtrue&view=windowsdesktop-7.0`\r\n\r\nCurrent \r\n```https://msdn.microsoft.com/query/dev16.query?appId=Dev16IDEF1&l=EN-US&k=k(Microsoft.DotNet.DesignTools.Client.Proxies.ControlProxy`1 .... very very long string``` and as result:\r\n\r\n> The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.\r\n\r\nThis is also a problem for custom control designers. I've asked same question [here](https://github.com/microsoft/winforms-designer-extensibility/issues/4#issuecomment-1509875779), but never got answered :(\r\n","Url":"https://github.com/dotnet/winforms/issues/9151","RelatedDescription":"Open issue \"F1 (help) not working on control's properties\" (#9151)"},{"Id":"1717658713","IsPullRequest":true,"CreatedAt":"2023-05-19T18:33:23","Actor":"dreddy-work","Number":"9150","RawContent":null,"Title":"[Release/7.0] Disable tests on internal CI or ARM64.","State":"open","Body":"Porting changes from main.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9150)","Url":"https://github.com/dotnet/winforms/pull/9150","RelatedDescription":"Open PR \"[Release/7.0] Disable tests on internal CI or ARM64.\" (#9150)"},{"Id":"1717138940","IsPullRequest":true,"CreatedAt":"2023-05-19T17:25:07","Actor":"dotnet-maestro[bot]","Number":"9147","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230519.1\r\n- **Date Produced**: May 19, 2023 8:30:21 AM UTC\r\n- **Commit**: fb6291b40fa4334dbd167e2071953e83cc8b9fdc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23268.1 to 8.0.0-beta.23269.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f426987597...fb6291b40f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9147)","Url":"https://github.com/dotnet/winforms/pull/9147","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9147)"},{"Id":"1717578850","IsPullRequest":true,"CreatedAt":"2023-05-19T17:25:01","Actor":"dreddy-work","Number":"9149","RawContent":null,"Title":"[Release/6.0] Disable tests on internal CI or ARM64","State":"open","Body":"Porting change from main.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9149)","Url":"https://github.com/dotnet/winforms/pull/9149","RelatedDescription":"Open PR \"[Release/6.0] Disable tests on internal CI or ARM64\" (#9149)"},{"Id":"1717032152","IsPullRequest":true,"CreatedAt":"2023-05-19T16:54:30","Actor":"v-elnovikova","Number":"9146","RawContent":null,"Title":"Add a unit test for PrintPreviewControlAccessibleObject.Bounds property","State":"closed","Body":"Fixes #8892\r\n\r\nThis is a follow-up to PR #9136\r\n\r\n## Proposed changes\r\n\r\n- Add a unit test to ensure `PrintPreviewControlAccessibleObject.Bounds` is calculated correctly\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n\r\n## Test environment(s)\r\n\r\n- NET 8.0.0-preview.4.23259.5\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9146)","Url":"https://github.com/dotnet/winforms/pull/9146","RelatedDescription":"Closed or merged PR \"Add a unit test for PrintPreviewControlAccessibleObject.Bounds property\" (#9146)"},{"Id":"1717141261","IsPullRequest":true,"CreatedAt":"2023-05-19T12:30:32","Actor":"dotnet-maestro[bot]","Number":"9148","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230518.14\r\n- **Date Produced**: May 19, 2023 9:14:42 AM UTC\r\n- **Commit**: 2f49fcff6df15a200ef01eea16b3ce7930f75c5c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23268.1 to 8.0.0-preview.5.23268.14][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0096ba52e8...2f49fcff6d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9148)","Url":"https://github.com/dotnet/winforms/pull/9148","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9148)"},{"Id":"1716232245","IsPullRequest":true,"CreatedAt":"2023-05-19T00:22:53","Actor":"JeremyKuhne","Number":"9144","RawContent":null,"Title":"Complete binary format object round-tripping","State":"closed","Body":"Now have saving/reading from object for supported types. This will allow plugging in more generically for property and resource serialization.\r\n\r\n- Adds support for Array, ArrayList, and PointF/RectangleF.\r\n- Tweaks ListConverter<T> to support more usages\r\n- Create primitive ListConverter<T> helper in ListConverter static class.\r\n- Have StringRecordsCollection maintain id to allow ListConverter helper above.\r\n- Move type info into TypeInfo class.\r\n\r\nNext step is hooking into IPropertyBag Control serialization and ResxDataNode.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9144)","Url":"https://github.com/dotnet/winforms/pull/9144","RelatedDescription":"Closed or merged PR \"Complete binary format object round-tripping\" (#9144)"},{"Id":"1716100944","IsPullRequest":false,"CreatedAt":"2023-05-18T18:45:07","Actor":"rickbrew","Number":"9143","RawContent":null,"Title":"Control._reflectParent is not updated when Parent changes (memory leak)","State":"open","Body":"### .NET version\r\n\r\n.NET 7.0.5 (latest public release)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nI don't think this is a regression, it was probably always like this. I've never needed to worry about this in the past -- my use of `Control`s did not include reparenting until now.\r\n\r\n### Issue description\r\n\r\nThe `Control._reflectParent` field points to a control's parent control. It is updated by calling `set_ReflectParent` via\r\n`UpdateReflectParent()`, which is called by `CreateHandle()`, `Dispose(bool)`, and `OnHandleDestroyed(EventArgs)`.\r\n\r\nNotably absent from that list is `OnParentChanged()` (or any method to that effect). This means that `_reflectParent` is not set to `null` when a control is removed from its parent, nor is it updated when the control is added to a new parent.\r\n\r\nHere is the ILSpy analysis tree for `_reflectParent` :\r\n\r\n<img width=\"421\" alt=\"image\" src=\"https://github.com/dotnet/winforms/assets/10873410/1e65aa0d-2de6-4ff3-a186-f7101d39a4fc\">\r\n\r\nThis results in a memory leak if a control is re-used, which is something I'm doing in Paint.NET to implement a large memory use optimization. This optimization depends on a control's `Handle` _not_ being recreated during a reparenting operation (which does work fine).\r\n\r\nIn SciTech Memory Profile we can see this clearly. In this case, the `CanvasControlImpl` (child) has been removed from the `CanvasControl` (parent), but it (child) still has a reference to it (parent) whether it (child) has been reparented yet or not. The yellow exclamation mark indicates that `CanvasControl` is disposed.\r\n\r\n<img width=\"319\" alt=\"image\" src=\"https://github.com/dotnet/winforms/assets/10873410/ece13987-9f16-49d0-bdf0-eb36fa3b8f2b\">\r\n\r\nI don't know if there are other behavioral bugs that result from this -- `ReflectParent` only seems to be read by `OnParentHandleRecreated()`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create two `Controls`, `c1` and `c2`\r\n2. Add `c1` to a `Form`\r\n3. Add `c2` as a child of `c1`\r\n4. Show the form\r\n5. Remove `c2` from `c1`\r\n6. Inspect `c2._reflectParent`. It should be `null`, but it still references `c1`.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9143","RelatedDescription":"Open issue \"Control._reflectParent is not updated when Parent changes (memory leak)\" (#9143)"},{"Id":"1716002936","IsPullRequest":true,"CreatedAt":"2023-05-18T17:32:49","Actor":"v-elnovikova","Number":"9142","RawContent":null,"Title":"Added ToggleStatePropertyChanged UIA event for ToolStripButton.","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #9137\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fire ToggleStatePropertyChanged UIA event when ToolStripButton's `CheckState` changes.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Screen readers announce checked state change of ToolStripButton\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nhttps://github.com/dotnet/winforms/assets/113603457/525781bb-2a75-4fe2-8fe8-ab863141f90c\r\n\r\nNarrator output:\r\n> ToolStripTests window, toolStrip1 tool bar, Checkable button (unchecked) check box unchecked,\r\n\r\nNotice that nothing is announced when button is checked or unchecked.\r\n\r\n### After\r\n\r\n\r\n<!-- TODO -->\r\n\r\nhttps://github.com/dotnet/winforms/assets/113603457/c986f680-aecb-4754-9de5-50f9b2f4e2c2\r\nNarrator output:\r\n> ToolStripTests window, toolStrip1 tool bar, Checkable button (unchecked) check box unchecked,\r\n> checked\r\n> unchecked\r\n> checked\r\n> unchecked\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- ,NET  8.0.0-preview.4.23259.5\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9142)","Url":"https://github.com/dotnet/winforms/pull/9142","RelatedDescription":"Open PR \"Added ToggleStatePropertyChanged UIA event for ToolStripButton.\" (#9142)"},{"Id":"1715523947","IsPullRequest":true,"CreatedAt":"2023-05-18T12:30:37","Actor":"dotnet-maestro[bot]","Number":"9141","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230518.1\r\n- **Date Produced**: May 18, 2023 9:40:00 AM UTC\r\n- **Commit**: 0096ba52e8c86e4d712013f6330a9b8a6496a1e0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23267.1 to 8.0.0-preview.5.23268.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/07819e95b5...0096ba52e8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9141)","Url":"https://github.com/dotnet/winforms/pull/9141","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9141)"},{"Id":"1715521732","IsPullRequest":true,"CreatedAt":"2023-05-18T12:29:02","Actor":"dotnet-maestro[bot]","Number":"9140","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230518.1\r\n- **Date Produced**: May 18, 2023 8:54:11 AM UTC\r\n- **Commit**: f4269875971171c278c2cd695e9ef94b6516e4be\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23268.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2d8d59065b...f426987597\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9140)","Url":"https://github.com/dotnet/winforms/pull/9140","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9140)"},{"Id":"1714979253","IsPullRequest":false,"CreatedAt":"2023-05-18T04:53:49","Actor":"CuteLeon","Number":"9138","RawContent":null,"Title":"[DataGridView] Implement a attribute or overrideable method to control column type when automaticly generate columns for bound data-source model","State":"open","Body":"### Background and motivation\n\nDataGridView generated CheckBox columns for bool properties of my model with AutoGenerateColumns on, but I prefer to make these be TextBox columns instead of CheckBox columns.\r\nWould you please help to provide a Attribute to control column types for specified properties?\r\nOr make https://github.com/dotnet/winforms/blob/b4e971813740b6ce166dfcdeebc1844fde1e6409/src/System.Windows.Forms/src/System/Windows/Forms/DataGridView.DataConnection.cs#L973 overrideable?\r\nThanks\n\n### API Proposal\n\n```csharp\r\npublic enum DataGridViewColumnTypes\r\n{\r\n    Text = 0,\r\n    CheckBox = 1,\r\n    Button = 2,\r\n    // ...\r\n}\r\n\r\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, AllowMultiple = false)]\r\npublic sealed class DataGridViewColumnTypeAttribute : JsonAttribute\r\n{\r\n    public DataGridViewColumnTypes Type { get; set; } = DataGridViewColumnTypes.Text;\r\n\r\n    public DataGridViewColumnTypeAttribute(DataGridViewColumnTypes type) \r\n    {\r\n        this.Type = type;\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\n```csharp\r\npublic class Model\r\n{\r\n    [DataGridViewColumnType(DataGridViewColumnTypes.Text)]\r\n    public bool Is { get; set; }\r\n}\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nYes","Url":"https://github.com/dotnet/winforms/issues/9138","RelatedDescription":"Open issue \"[DataGridView] Implement a attribute or overrideable method to control column type when automaticly generate columns for bound data-source model\" (#9138)"},{"Id":"1714296695","IsPullRequest":false,"CreatedAt":"2023-05-17T16:55:03","Actor":"dmitrii-drobotov","Number":"9137","RawContent":null,"Title":"Screen readers don't announce checked state change of ToolStripButton","State":"open","Body":"### .NET version\n\n.NET 8\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nWhen a `ToolStripButton` with `CheckOnClick = true` is pressed (via keyboard or mouse), screen readers don't announce it. For example, this is Narrator output when focusing on a checkable `ToolStripButton` and pressing Space key: \r\n\r\n> toolStrip1, toolStripButton1 check box unchecked, \r\n> Space\r\n\r\nToolStripButton becomes checked, but it's not announced. On the other hand, activating a `CheckBox` is announced:\r\n\r\n> checkBox1 check box unchecked, \r\n> Space\r\n> checkBox1 check box checked, \r\n\r\nOther checkable controls (DataGridView cell, CheckedListBox row, TreeView node) are also announced similar to CheckBox.\n\n### Steps to reproduce\n\n1. Add a ToolStrip to the form\r\n2. Add ToolStripButton to the ToolStrip, set `CheckOnClick = true`\r\n3. Start app, focus on the ToolStripButton\r\n4. Press space/enter or click mouse","Url":"https://github.com/dotnet/winforms/issues/9137","RelatedDescription":"Open issue \"Screen readers don't announce checked state change of ToolStripButton\" (#9137)"},{"Id":"1714037819","IsPullRequest":true,"CreatedAt":"2023-05-17T16:42:31","Actor":"v-elnovikova","Number":"9136","RawContent":null,"Title":"Fixed PrintPreviewControlAccessibleObject.Bounds","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #8892\r\n\r\n\r\n## Proposed changes\r\n\r\n- Override `AccessibleObject.Bounds` property for `PrintPreviewControlAccessibleObject`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Mininmal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![Before](https://github.com/dotnet/winforms/assets/113603457/90c8a790-22be-4672-bb52-4acf99b1a9aa)\r\n\r\n### After\r\n\r\n![After](https://github.com/dotnet/winforms/assets/113603457/e40bc0f6-abc3-4fce-8578-72db03b6b1df)\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- NET 8.0.0-preview.4.23259.5\r\n- Accessibility Insights 1.1.2213.1\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9136)","Url":"https://github.com/dotnet/winforms/pull/9136","RelatedDescription":"Closed or merged PR \"Fixed PrintPreviewControlAccessibleObject.Bounds\" (#9136)"},{"Id":"1713961848","IsPullRequest":false,"CreatedAt":"2023-05-17T13:48:06","Actor":"Philip-Wang01","Number":"9135","RawContent":null,"Title":"[VB] PictureBox-images won’t get disposed automatically, even if the containing Form and PictureBox were disposed","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.5.23266.8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/e037cd8e-91eb-4d61-85e5-10c01f94ba2a\r\n\r\n\r\nTestCoreapp:\r\n[Testpicturecore.zip](https://github.com/dotnet/winforms/files/11498763/Testpicturecore.zip)\r\n\r\n\r\nTestFrameworkapp: \r\n[Testpictureframework.zip](https://github.com/dotnet/winforms/files/11498765/Testpictureframework.zip)\r\n\r\nThe initial feedback ticket is:\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1817656\r\n\r\nCustomer Summary: \r\nThe images won’t get disposed, even if they should implicitly (!). I can dispose them explicitly, but if the programmers and software developers don’t know this, they can get serious problems with memory leaks. The PictureBox class implements the IDisposable interface, but it won’t get used by the Form-Class-Designer. So, as long as the app runs, useless image instances are still in memory.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WinForms .NET Core VB project.\r\n2. Add a button to form1 designer and set text property as \"create another SubForm dialog instance\".\r\n3. Add a picturebox to form1 designer, and click smart tag, then click \"choose image…\" to import a picture to project resource file.\r\n4. Add below code into Form1.vb.\r\n```\r\nPrivate F2 As Form2\r\nPrivate Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click\r\n\tF2 = New Form2\r\n\tF2.ShowDialog(Me)\r\n\tF2.Dispose()\r\n\tF2.PictureBox1.Dispose()\r\n\tMe.PictureBox1.Image = F2.PictureBox1.Image\r\nEnd Sub\r\n```\r\n5. Add a new VB Form named Form2.vb to same project.\r\n6. Add flowlayoutpanel and picturebox control to form2 designer.\r\n7. Add below code into Form2.vb.\r\n```\r\nPrivate Sub Form2_Load(sender As Object, e As EventArgs) Handles MyBase.Load\r\n\tPictureBox1.Image = My.Resources.ProfileImage\r\n\tFor i = 1 To 100\r\n\t\tDim NewPicBox As New PictureBox With {.Image = My.Resources.ProfileImage}\r\n\t\tFlowLayoutPanel1.Controls.Add(NewPicBox)\r\n\tNext\r\nEnd Sub\r\n```\r\n8. Build and run the project.\r\n9. Start the task manager to see the memory consumption of the app.\r\n10. Click the \"create another SubForm dialog instance\" button -> memory usage about 61 MB.\r\n![image](https://github.com/dotnet/winforms/assets/86937911/7ff89e56-7612-4c4c-a731-bb9a241b634f)\r\n11. Close the SubForm window -> the PicBox image of the closed and disposed SubForm is still available in the main form.\r\n12. The memory consumtion doesn’t change after closing and disposing the SubForm instance.\r\n![image](https://github.com/dotnet/winforms/assets/86937911/178062ee-4567-4a19-bd83-e772185aa3cd)\r\n13.Create another instance of the SubForm -> memory consumption raises to nearly 116 MB.\r\n![image](https://github.com/dotnet/winforms/assets/86937911/c2f11a7f-0e48-427a-96f9-0a3edb90b4a3)\r\n14. It raises further for every created but also closed SubForm instance.\r\n","Url":"https://github.com/dotnet/winforms/issues/9135","RelatedDescription":"Open issue \"[VB] PictureBox-images won’t get disposed automatically, even if the containing Form and PictureBox were disposed\" (#9135)"},{"Id":"1713757432","IsPullRequest":true,"CreatedAt":"2023-05-17T12:30:19","Actor":"dotnet-maestro[bot]","Number":"9134","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230517.1\r\n- **Date Produced**: May 17, 2023 11:25:26 AM UTC\r\n- **Commit**: 07819e95b5d3536e266a60d8c06a4feab000194b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23265.26 to 8.0.0-preview.5.23267.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ff92d4e8d2...07819e95b5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9134)","Url":"https://github.com/dotnet/winforms/pull/9134","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9134)"},{"Id":"1712742988","IsPullRequest":true,"CreatedAt":"2023-05-16T21:49:38","Actor":"JeremyKuhne","Number":"9133","RawContent":null,"Title":"Optimize and simplify WritePrimitive","State":"closed","Body":"Clean up WritePrimitive to be more efficient for expected cases and easier to read.\r\n\r\nAlso add static array for primitive member name. (Other non-static ones are expected to be rare.)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9133)","Url":"https://github.com/dotnet/winforms/pull/9133","RelatedDescription":"Closed or merged PR \"Optimize and simplify WritePrimitive\" (#9133)"},{"Id":"1712712210","IsPullRequest":true,"CreatedAt":"2023-05-16T20:59:29","Actor":"JeremyKuhne","Number":"9132","RawContent":null,"Title":"Add a scope for binary format writing","State":"closed","Body":"Simplifies the code a little and ensures consistency.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9132)","Url":"https://github.com/dotnet/winforms/pull/9132","RelatedDescription":"Closed or merged PR \"Add a scope for binary format writing\" (#9132)"},{"Id":"1712432978","IsPullRequest":true,"CreatedAt":"2023-05-16T17:26:23","Actor":"gpetrou","Number":"9131","RawContent":null,"Title":"Remove unused controlToPushAside variable","State":"open","Body":"## Proposed changes\r\n\r\n- Add test from https://github.com/dotnet/winforms/issues/9126\r\n- Remove unused controlToPushAside variable\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9131)","Url":"https://github.com/dotnet/winforms/pull/9131","RelatedDescription":"Open PR \"Remove unused controlToPushAside variable\" (#9131)"},{"Id":"1712399258","IsPullRequest":true,"CreatedAt":"2023-05-16T17:02:31","Actor":"gpetrou","Number":"9130","RawContent":null,"Title":"Enable nullability in remaining ToolTip members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in remaining ToolTip members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9130)","Url":"https://github.com/dotnet/winforms/pull/9130","RelatedDescription":"Open PR \"Enable nullability in remaining ToolTip members\" (#9130)"},{"Id":"1711891849","IsPullRequest":true,"CreatedAt":"2023-05-16T12:31:56","Actor":"dotnet-maestro[bot]","Number":"9129","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230515.26\r\n- **Date Produced**: May 16, 2023 7:43:10 AM UTC\r\n- **Commit**: ff92d4e8d24d3927bd4937a663f67b769da3848b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9dd59af3ae...ff92d4e8d2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9129)","Url":"https://github.com/dotnet/winforms/pull/9129","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9129)"},{"Id":"1711889062","IsPullRequest":true,"CreatedAt":"2023-05-16T12:30:20","Actor":"dotnet-maestro[bot]","Number":"9128","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230515.1\r\n- **Date Produced**: May 15, 2023 1:54:05 PM UTC\r\n- **Commit**: 2d8d59065b5e090584a8e90c4371fc06ed60bdc5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1aff4eb33a...2d8d59065b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9128)","Url":"https://github.com/dotnet/winforms/pull/9128","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9128)"},{"Id":"1711162184","IsPullRequest":false,"CreatedAt":"2023-05-16T03:36:09","Actor":"John-Qiao","Number":"9127","RawContent":null,"Title":"AccessibilityInsight: A button must not support both the Invoke and Toggle patterns in sub button items in ToolStrip control","State":"closed","Body":"### .NET version\n\n.NET 8.0.100-preview.5.23261.16\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in previous .Net 7.0 and 6.0.\n\n### Issue description\n\nAccessibilityInsight detects an error about \"A button must not support both the Invoke and Toggle patterns\" for sub button items in ToolStrip control.\r\n\r\n.Net 8.0 in AccessibilityInsight:\r\n![Issue1-actual](https://github.com/dotnet/winforms/assets/45864985/7d225d7b-0268-4963-a9ac-21f81cc78efd)\r\n\r\n.Net 8.0 in Inspect:\r\n![Issue1-actual-2](https://github.com/dotnet/winforms/assets/45864985/81a9e396-f1ce-4fce-9e69-0c70e346f382)\r\n\r\n.Net 7.0 in AccessibilityInsight:\r\n![Issue1-expected](https://github.com/dotnet/winforms/assets/45864985/4a541d4d-9ead-4b76-8ca7-b0e2b7a3cda6)\r\n\r\n.Net 7.0 in Inspect:\r\n![Issue1-expected-2](https://github.com/dotnet/winforms/assets/45864985/25865fb6-d86f-4f97-926d-d23409b5d54c)\r\n\n\n### Steps to reproduce\n\n1. Open this attached app: [TestApp.zip](https://github.com/dotnet/winforms/files/11483712/TestApp.zip) in VS.\r\n2. Build and run application.\r\n3. Use AccessibilityInsight to detect that StripControls form.","Url":"https://github.com/dotnet/winforms/issues/9127","RelatedDescription":"Closed issue \"AccessibilityInsight: A button must not support both the Invoke and Toggle patterns in sub button items in ToolStrip control\" (#9127)"},{"Id":"1711080237","IsPullRequest":false,"CreatedAt":"2023-05-16T01:50:55","Actor":"Junjun-zhao","Number":"9126","RawContent":null,"Title":"[8.0.100-preview.5.23264.1] System.IndexOutOfRangeException thrown when ToolStrips Location is not using default Location in ToolStripContainer","State":"open","Body":"### .NET version\n\n8.0.100-preview.5.23264.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes\r\n\r\n**Verify Scenarios:**\r\n1. Windows10 21h2 x64 + dotnet-sdk-8.0.100-preview.5.23264.1: Fail\r\n2. Windows10 21h2 x64 + dotnet-sdk-8.0.100-preview.4.23259.1: Pass\r\n3. Windows10 21h2 x64 + dotnet-sdk-6.0.409: Pass\n\n### Issue description\n\nIn dotnet-sdk-8.0.100-preview.5.23264.1, when drag the ToolStrip control to change its default location, it will throw System.IndexOutOfRangeException.\r\n\r\n**Application Name**: mRemoteNG\r\n**OS:** Windows 10 21H2\r\n**CPU**: X64\r\n**.NET Build Number:** dotnet-sdk-8.0.100-preview.5.23264.1\r\n**Github link**: **https://github.com/mRemoteNG/mRemoteNG**\r\n**App or App Source checking at**:  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1819231\r\n \n\n### Steps to reproduce\n\n**Repro Steps:**\r\n1. Launch mRemoteNG.exe\r\n\r\n**Expected Result:**\r\nApp launches successful.\r\n\r\n**Actual Result:**\r\nApp launches failed with following error in Windows EvntView log:\r\n```\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeInitializationException: The type initializer for 'mRemoteNG.UI.Forms.FrmMain' threw an exception.\r\n ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at System.Windows.Forms.ToolStripPanelRow.ToolStripPanelRowControlCollection.GetControl(Int32 index)\r\n   at System.Windows.Forms.ToolStripPanelRow.HorizontalRowManager.JoinRow(ToolStrip toolStripToDrag, Point locationToDrag)\r\n   at System.Windows.Forms.ToolStripPanel.MoveInsideContainer(ToolStrip toolStripToDrag, Point clientLocation)\r\n   at System.Windows.Forms.ToolStripPanel.Join(ToolStrip toolStripToDrag, Point location)\r\n   at System.Windows.Forms.ToolStripPanel.JoinControls(Boolean forceLayout)\r\n   at System.Windows.Forms.ToolStripPanel.EndInit()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at mRemoteNG.UI.Forms.FrmMain.InitializeComponent() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.Designer.cs:line 229\r\n   at mRemoteNG.UI.Forms.FrmMain..ctor() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 67\r\n   at mRemoteNG.UI.Forms.FrmMain..cctor() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 43\r\n   --- End of inner exception stack trace ---\r\n   at mRemoteNG.UI.Forms.FrmMain.get_Default() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 43\r\n   at mRemoteNG.App.ProgramRoot.CurrentDomainOnUnhandledException(Object sender, UnhandledExceptionEventArgs e) in C:\\upgrade\\mRemoteNG\\mRemoteNG\\App\\ProgramRoot.cs:line 119\r\n```\r\n\r\n**Minimal Repro steps**:\r\n**Demo attached**:[TopToolStripPanelDemo.zip](https://github.com/dotnet/winforms/files/11483199/TopToolStripPanelDemo.zip)\r\n\r\n\r\n1.Create a default WinForm project.\r\n2. Drag a ToolStripContainer control to Form1\r\n3. Drag two ToolStrip controls (toolStrip1 and toolStrip2) into top panel of ToolStripContainer.\r\n4. Drag the toolStrip2 behind to the toolStrip1 (by default, the toolStrip2 is under toolStrip1).\r\n5. Build the project.\r\n6. Change the runtime.config file to let the app run against with dotnet sdk 8.0.100-preview.5.23264.1:\r\n```\r\n\"frameworks\": [\r\n\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"8.0.0-preview.5.23260.3\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"8.0.0-preview.5.23261.7\"\r\n      }\r\n    ]\r\n```\r\n8. Launch the demo app.\r\n  \r\n\r\n**Expected Result:**\r\nApp will launch successful.\r\n\r\n**Actual Result:**\r\nLaunch failed with exception \"Index was outside the bounds of the array.\".\r\n```\r\n\r\nStacktrace:\r\n\r\n   at System.Windows.Forms.ToolStripPanelRow.ToolStripPanelRowControlCollection.GetControl(Int32 index) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanelRow.ToolStripPanelRowControlCollection.cs:line 156\r\n   at System.Windows.Forms.ToolStripPanelRow.HorizontalRowManager.JoinRow(ToolStrip toolStripToDrag, Point locationToDrag) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanelRow.HorizontalRowManager.cs:line 448\r\n   at System.Windows.Forms.ToolStripPanel.MoveInsideContainer(ToolStrip toolStripToDrag, Point clientLocation) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 1009\r\n   at System.Windows.Forms.ToolStripPanel.Join(ToolStrip toolStripToDrag, Point location) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 807\r\n   at System.Windows.Forms.ToolStripPanel.JoinControls(Boolean forceLayout) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 673\r\n   at System.Windows.Forms.ToolStripPanel.EndInit() in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 388\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs:line 10018\r\n   at TopToolStripPanelDemo.Form1.InitializeComponent() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Form1.Designer.cs:line 80\r\n   at TopToolStripPanelDemo.Form1..ctor() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Form1.cs:line 7\r\n   at TopToolStripPanelDemo.Program.Main() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Program.cs:line 14\r\n```\r\n\r\n**Findings**\r\n\r\n1. If we keep the ToolStrip controls in default vertical location relationship, it works fine. Once we drag any of them to change the location, the app will get above exception.\r\n2. When adding 2 MenuStrip controls in ToolStripContainer doesn't have this issue.\r\n\r\n@dotnet-actwx-bot @dotnet/compat","Url":"https://github.com/dotnet/winforms/issues/9126","RelatedDescription":"Open issue \"[8.0.100-preview.5.23264.1] System.IndexOutOfRangeException thrown when ToolStrips Location is not using default Location in ToolStripContainer\" (#9126)"},{"Id":"1711076570","IsPullRequest":false,"CreatedAt":"2023-05-16T01:45:10","Actor":"Olina-Zhang","Number":"9125","RawContent":null,"Title":"AccessibilityInsight: An on-screen element must not have a null BoundingRectangle property when ListView has DataBinding","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.5.23261.16\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, it works in previous .Net 7.0 and 6.0.\r\n\r\n### Issue description\r\n\r\nAccessibilityInsight detects an error about \"An on-screen elememt must not have a null BoundingRectangle property\" for ListView with DataBinding, and in Inspect, ListView has extra Image for every ListItem in UIA hierarchy\r\nThis issue doesn't repro ListView without DataBinding.\r\n\r\n**.Net 8.0 in AccessibilityInsight:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/b108df72-6629-44d8-be3f-200264c1fb4a)\r\n\r\n**.Net 8.0 in Inspect:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/302ced9e-6bc9-4fc6-899c-f7fe7d40910b)\r\n\r\n**.Net 7.0 in AccessibilityInsight:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/46431950-244d-4f9f-a727-323d7f2fe402)\r\n\r\n**.Net 7.0 in Inspect:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/db5ceb48-44a2-4192-8361-31285528704f)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n**Repro steps:**\r\n1.\tCreate a Winforms .Net Core application with ListView added\r\n2.\tCreate a DataSet with TableData by code\r\n3.\tBind this DataSet table data to ListView\r\n4.\tBuild and run application \r\n5.\tUse AccessibilityInsight to detect this ListView\r\n\r\nor use attached sample application:\r\n[WinFormsApp1.zip](https://github.com/dotnet/winforms/files/11483200/WinFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9125","RelatedDescription":"Open issue \"AccessibilityInsight: An on-screen element must not have a null BoundingRectangle property when ListView has DataBinding\" (#9125)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-22T03:30:32.6335294Z","RunDurationInMilliseconds":600}